#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Lockpicking

#include "Basic.hpp"

#include "BP_Lockpicking_classes.hpp"
#include "BP_Lockpicking_parameters.hpp"


namespace SDK
{

// Function BP_Lockpicking.BP_Lockpicking_C.ExecuteUbergraph_BP_Lockpicking
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Lockpicking_C::ExecuteUbergraph_BP_Lockpicking(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lockpicking_C", "ExecuteUbergraph_BP_Lockpicking");

	Params::BP_Lockpicking_C_ExecuteUbergraph_BP_Lockpicking Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Lockpicking.BP_Lockpicking_C.Client: Player Unlocked Container
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_ADM_CombinationChest_C*       Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Lockpicking_C::Client__Player_Unlocked_Container(class ABP_ADM_CombinationChest_C* Container)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lockpicking_C", "Client: Player Unlocked Container");

	Params::BP_Lockpicking_C_Client__Player_Unlocked_Container Parms{};

	Parms.Container = Container;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Lockpicking.BP_Lockpicking_C.Server: is code correct
// (Net, NetReliable, NetServer, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_ADM_CombinationChest_C*       Locked_Lootable_Box                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<int32>                           Current_code                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_Lockpicking_C::Server__is_code_correct(class ABP_ADM_CombinationChest_C* Locked_Lootable_Box, const TArray<int32>& Current_code)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lockpicking_C", "Server: is code correct");

	Params::BP_Lockpicking_C_Server__is_code_correct Parms{};

	Parms.Locked_Lootable_Box = Locked_Lootable_Box;
	Parms.Current_code = std::move(Current_code);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Lockpicking.BP_Lockpicking_C.Server: save combination code
// (Net, NetReliable, NetServer, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_ADM_CombinationChest_C*       Locked_Lootable_Box                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<int32>                           Current_code                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_Lockpicking_C::Server__save_combination_code(class ABP_ADM_CombinationChest_C* Locked_Lootable_Box, const TArray<int32>& Current_code)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lockpicking_C", "Server: save combination code");

	Params::BP_Lockpicking_C_Server__save_combination_code Parms{};

	Parms.Locked_Lootable_Box = Locked_Lootable_Box;
	Parms.Current_code = std::move(Current_code);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Lockpicking.BP_Lockpicking_C.Server: open combination lock
// (Net, NetReliable, NetServer, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_ADM_CombinationChest_C*       Locked_Lootable_Box                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Lockpicking_C::Server__open_combination_lock(const class ABP_ADM_CombinationChest_C*& Locked_Lootable_Box)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lockpicking_C", "Server: open combination lock");

	Params::BP_Lockpicking_C_Server__open_combination_lock Parms{};

	Parms.Locked_Lootable_Box = Locked_Lootable_Box;

	UObject::ProcessEvent(Func, &Parms);
}

}

