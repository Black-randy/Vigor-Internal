#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_CharacterIK

#include "Basic.hpp"

#include "Flame_classes.hpp"
#include "Engine_structs.hpp"
#include "PhysicsCore_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_CharacterIK.ABP_CharacterIK_C
// 0x1570 (0x18B0 - 0x0340)
class UABP_CharacterIK_C final : public UFootIKAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0340(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_1;             // 0x0348(0x0020)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_3;                    // 0x0368(0x0158)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_6;                     // 0x04C0(0x0028)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_9;                        // 0x04E8(0x0108)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_1;             // 0x05F0(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_8;                        // 0x0610(0x0108)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_2;                    // 0x0718(0x0158)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_5;                     // 0x0870(0x0028)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x0898(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_7;                        // 0x08B8(0x0108)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x09C0(0x0020)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x09E0(0x0158)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x0B38(0x00A0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x0BD8(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x0C00(0x0158)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x0D58(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x0D80(0x0028)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_1;                       // 0x0DA8(0x00C8)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend;                         // 0x0E70(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x0F38(0x0028)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_6;                        // 0x0F60(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_5;                        // 0x1068(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_4;                        // 0x1170(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x1278(0x0028)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_SubInput;                            // 0x12A0(0x0118)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_3;                        // 0x13B8(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_2;                        // 0x14C0(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x15C8(0x0108)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x16D0(0x0030)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x1700(0x0108)()
	class AHumanCharacter*                        CharacterRef;                                      // 0x1808(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHumanAnimInstace*                      HumanAnimInstance;                                 // 0x1810(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaX;                                            // 0x1818(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ProperlyInitialized;                               // 0x181C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181D[0x3];                                     // 0x181D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               RotationToNormal;                                  // 0x1820(0x000C)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Alpha;                                             // 0x182C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          FeetIK;                                            // 0x182D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_182E[0x2];                                     // 0x182E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MeshDefaultOffset;                                 // 0x1830(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               IKRootRotation_BP;                                 // 0x1834(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         FeetYOffset;                                       // 0x1840(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FeetYOffsetVector;                                 // 0x1844(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RightFootOffset;                                   // 0x1850(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LeftFootOffset;                                    // 0x185C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SimulatedHipOffsetXVector;                         // 0x1868(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SimulatedHipOffsetZVector;                         // 0x1874(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HipOffsetXVector;                                  // 0x1880(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HipOffsetZVector;                                  // 0x188C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LeftPositionVector;                                // 0x1898(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RightPositionVector;                               // 0x18A4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ABP_CharacterIK(int32 EntryPoint);
	void ReInitialize();
	void BlueprintInitializeAnimation();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void AnimGraph(const struct FPoseLink& InPose, struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_CharacterIK_C">();
	}
	static class UABP_CharacterIK_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_CharacterIK_C>();
	}
};
static_assert(alignof(UABP_CharacterIK_C) == 0x000010, "Wrong alignment on UABP_CharacterIK_C");
static_assert(sizeof(UABP_CharacterIK_C) == 0x0018B0, "Wrong size on UABP_CharacterIK_C");
static_assert(offsetof(UABP_CharacterIK_C, UberGraphFrame) == 0x000340, "Member 'UABP_CharacterIK_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_CharacterIK_C, AnimGraphNode_ComponentToLocalSpace_1) == 0x000348, "Member 'UABP_CharacterIK_C::AnimGraphNode_ComponentToLocalSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_CharacterIK_C, AnimGraphNode_SaveCachedPose_3) == 0x000368, "Member 'UABP_CharacterIK_C::AnimGraphNode_SaveCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_CharacterIK_C, AnimGraphNode_UseCachedPose_6) == 0x0004C0, "Member 'UABP_CharacterIK_C::AnimGraphNode_UseCachedPose_6' has a wrong offset!");
static_assert(offsetof(UABP_CharacterIK_C, AnimGraphNode_ModifyBone_9) == 0x0004E8, "Member 'UABP_CharacterIK_C::AnimGraphNode_ModifyBone_9' has a wrong offset!");
static_assert(offsetof(UABP_CharacterIK_C, AnimGraphNode_LocalToComponentSpace_1) == 0x0005F0, "Member 'UABP_CharacterIK_C::AnimGraphNode_LocalToComponentSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_CharacterIK_C, AnimGraphNode_ModifyBone_8) == 0x000610, "Member 'UABP_CharacterIK_C::AnimGraphNode_ModifyBone_8' has a wrong offset!");
static_assert(offsetof(UABP_CharacterIK_C, AnimGraphNode_SaveCachedPose_2) == 0x000718, "Member 'UABP_CharacterIK_C::AnimGraphNode_SaveCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_CharacterIK_C, AnimGraphNode_UseCachedPose_5) == 0x000870, "Member 'UABP_CharacterIK_C::AnimGraphNode_UseCachedPose_5' has a wrong offset!");
static_assert(offsetof(UABP_CharacterIK_C, AnimGraphNode_LocalToComponentSpace) == 0x000898, "Member 'UABP_CharacterIK_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_CharacterIK_C, AnimGraphNode_ModifyBone_7) == 0x0008B8, "Member 'UABP_CharacterIK_C::AnimGraphNode_ModifyBone_7' has a wrong offset!");
static_assert(offsetof(UABP_CharacterIK_C, AnimGraphNode_ComponentToLocalSpace) == 0x0009C0, "Member 'UABP_CharacterIK_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_CharacterIK_C, AnimGraphNode_SaveCachedPose_1) == 0x0009E0, "Member 'UABP_CharacterIK_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_CharacterIK_C, AnimGraphNode_BlendListByBool) == 0x000B38, "Member 'UABP_CharacterIK_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_CharacterIK_C, AnimGraphNode_UseCachedPose_4) == 0x000BD8, "Member 'UABP_CharacterIK_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UABP_CharacterIK_C, AnimGraphNode_SaveCachedPose) == 0x000C00, "Member 'UABP_CharacterIK_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_CharacterIK_C, AnimGraphNode_UseCachedPose_3) == 0x000D58, "Member 'UABP_CharacterIK_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_CharacterIK_C, AnimGraphNode_UseCachedPose_2) == 0x000D80, "Member 'UABP_CharacterIK_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_CharacterIK_C, AnimGraphNode_TwoWayBlend_1) == 0x000DA8, "Member 'UABP_CharacterIK_C::AnimGraphNode_TwoWayBlend_1' has a wrong offset!");
static_assert(offsetof(UABP_CharacterIK_C, AnimGraphNode_TwoWayBlend) == 0x000E70, "Member 'UABP_CharacterIK_C::AnimGraphNode_TwoWayBlend' has a wrong offset!");
static_assert(offsetof(UABP_CharacterIK_C, AnimGraphNode_UseCachedPose_1) == 0x000F38, "Member 'UABP_CharacterIK_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_CharacterIK_C, AnimGraphNode_ModifyBone_6) == 0x000F60, "Member 'UABP_CharacterIK_C::AnimGraphNode_ModifyBone_6' has a wrong offset!");
static_assert(offsetof(UABP_CharacterIK_C, AnimGraphNode_ModifyBone_5) == 0x001068, "Member 'UABP_CharacterIK_C::AnimGraphNode_ModifyBone_5' has a wrong offset!");
static_assert(offsetof(UABP_CharacterIK_C, AnimGraphNode_ModifyBone_4) == 0x001170, "Member 'UABP_CharacterIK_C::AnimGraphNode_ModifyBone_4' has a wrong offset!");
static_assert(offsetof(UABP_CharacterIK_C, AnimGraphNode_UseCachedPose) == 0x001278, "Member 'UABP_CharacterIK_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_CharacterIK_C, AnimGraphNode_SubInput) == 0x0012A0, "Member 'UABP_CharacterIK_C::AnimGraphNode_SubInput' has a wrong offset!");
static_assert(offsetof(UABP_CharacterIK_C, AnimGraphNode_ModifyBone_3) == 0x0013B8, "Member 'UABP_CharacterIK_C::AnimGraphNode_ModifyBone_3' has a wrong offset!");
static_assert(offsetof(UABP_CharacterIK_C, AnimGraphNode_ModifyBone_2) == 0x0014C0, "Member 'UABP_CharacterIK_C::AnimGraphNode_ModifyBone_2' has a wrong offset!");
static_assert(offsetof(UABP_CharacterIK_C, AnimGraphNode_ModifyBone_1) == 0x0015C8, "Member 'UABP_CharacterIK_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UABP_CharacterIK_C, AnimGraphNode_Root) == 0x0016D0, "Member 'UABP_CharacterIK_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_CharacterIK_C, AnimGraphNode_ModifyBone) == 0x001700, "Member 'UABP_CharacterIK_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UABP_CharacterIK_C, CharacterRef) == 0x001808, "Member 'UABP_CharacterIK_C::CharacterRef' has a wrong offset!");
static_assert(offsetof(UABP_CharacterIK_C, HumanAnimInstance) == 0x001810, "Member 'UABP_CharacterIK_C::HumanAnimInstance' has a wrong offset!");
static_assert(offsetof(UABP_CharacterIK_C, DeltaX) == 0x001818, "Member 'UABP_CharacterIK_C::DeltaX' has a wrong offset!");
static_assert(offsetof(UABP_CharacterIK_C, ProperlyInitialized) == 0x00181C, "Member 'UABP_CharacterIK_C::ProperlyInitialized' has a wrong offset!");
static_assert(offsetof(UABP_CharacterIK_C, RotationToNormal) == 0x001820, "Member 'UABP_CharacterIK_C::RotationToNormal' has a wrong offset!");
static_assert(offsetof(UABP_CharacterIK_C, Alpha) == 0x00182C, "Member 'UABP_CharacterIK_C::Alpha' has a wrong offset!");
static_assert(offsetof(UABP_CharacterIK_C, FeetIK) == 0x00182D, "Member 'UABP_CharacterIK_C::FeetIK' has a wrong offset!");
static_assert(offsetof(UABP_CharacterIK_C, MeshDefaultOffset) == 0x001830, "Member 'UABP_CharacterIK_C::MeshDefaultOffset' has a wrong offset!");
static_assert(offsetof(UABP_CharacterIK_C, IKRootRotation_BP) == 0x001834, "Member 'UABP_CharacterIK_C::IKRootRotation_BP' has a wrong offset!");
static_assert(offsetof(UABP_CharacterIK_C, FeetYOffset) == 0x001840, "Member 'UABP_CharacterIK_C::FeetYOffset' has a wrong offset!");
static_assert(offsetof(UABP_CharacterIK_C, FeetYOffsetVector) == 0x001844, "Member 'UABP_CharacterIK_C::FeetYOffsetVector' has a wrong offset!");
static_assert(offsetof(UABP_CharacterIK_C, RightFootOffset) == 0x001850, "Member 'UABP_CharacterIK_C::RightFootOffset' has a wrong offset!");
static_assert(offsetof(UABP_CharacterIK_C, LeftFootOffset) == 0x00185C, "Member 'UABP_CharacterIK_C::LeftFootOffset' has a wrong offset!");
static_assert(offsetof(UABP_CharacterIK_C, SimulatedHipOffsetXVector) == 0x001868, "Member 'UABP_CharacterIK_C::SimulatedHipOffsetXVector' has a wrong offset!");
static_assert(offsetof(UABP_CharacterIK_C, SimulatedHipOffsetZVector) == 0x001874, "Member 'UABP_CharacterIK_C::SimulatedHipOffsetZVector' has a wrong offset!");
static_assert(offsetof(UABP_CharacterIK_C, HipOffsetXVector) == 0x001880, "Member 'UABP_CharacterIK_C::HipOffsetXVector' has a wrong offset!");
static_assert(offsetof(UABP_CharacterIK_C, HipOffsetZVector) == 0x00188C, "Member 'UABP_CharacterIK_C::HipOffsetZVector' has a wrong offset!");
static_assert(offsetof(UABP_CharacterIK_C, LeftPositionVector) == 0x001898, "Member 'UABP_CharacterIK_C::LeftPositionVector' has a wrong offset!");
static_assert(offsetof(UABP_CharacterIK_C, RightPositionVector) == 0x0018A4, "Member 'UABP_CharacterIK_C::RightPositionVector' has a wrong offset!");

}

