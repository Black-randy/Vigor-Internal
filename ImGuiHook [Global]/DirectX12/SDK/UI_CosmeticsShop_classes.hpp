#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_CosmeticsShop

#include "Basic.hpp"

#include "EItemPreviewContext_structs.hpp"
#include "Engine_structs.hpp"
#include "S_BoosterTicket_PackArray_structs.hpp"
#include "Flame_structs.hpp"
#include "Flame_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "FlameUI_structs.hpp"
#include "E_CosmeticShopWidgetSwitcher_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "E_SellingPointStatus_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_CosmeticsShop.UI_CosmeticsShop_C
// 0x0AD0 (0x0DA8 - 0x02D8)
class UUI_CosmeticsShop_C final : public UMenuWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       OpenCuratedOutfitSet;                              // 0x02E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UUI_InputActionWidget_C*                ActionMoreInfo;                                    // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameTextBlock*                        ActionRotateText;                                  // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Backpack;                                          // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           BuyButton;                                         // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BuyButtonCrownsImage;                              // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameButton*                           BuyButtonWindows;                                  // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         ControlTips;                                       // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Cosmetics;                                         // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Cosmetics_1;                                       // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 EnabledButtonBG;                                   // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Eyewear;                                           // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Facewear;                                          // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             FakeCosmeticsScrollBox;                            // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameTextBlock*                        FlameTextBlock_Price;                              // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         FocusButtonPrice;                                  // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Gloves;                                            // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Headwear;                                          // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_TextBackgroundFlat;                          // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_TextBackgroundGradient;                      // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             MainScrollBox;                                     // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           ProgressBar_ButtonCreation;                        // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           ProgressBar_DataDownload;                          // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               RotateActionOverlay;                               // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RotateArrowL;                                      // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RotateArrowR;                                      // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        StoreWidgetSwitcher;                               // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameTextBlock*                        Text_EventName;                                    // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameTextBlock*                        Text_EventRemainingTime;                           // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_CosmeticsVariantsBox_C*             UI_CosmeticsVariantsBox;                           // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_InputActionWidget_C*                UI_GamepadActionClose;                             // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_InputActionWidget_C*                UI_GamepadActionRotate;                            // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_InputActionWidget_C*                UI_GamepadActionSelect;                            // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_InputActionWidget_C*                UI_GamepadActionViewHeadGear;                      // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_InputActionWidget_C*                UI_GamepadActionViewOutfit;                        // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_InputActionWidget_C*                UI_GamepadActionWidget_Buy;                        // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_InputActionWidget_C*                UI_GamepadActionZoom;                              // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Uniform;                                           // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VBox_EventInfo;                                    // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         DeltaTime;                                         // 0x0418(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rotation_StickX;                                   // 0x041C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ShelterUI_C*                        ShelterUI;                                         // 0x0420(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 FocusedItem;                                       // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 FocusedVariant;                                    // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_IdleWidget_C*                       IdleWidget;                                        // 0x0438(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMessageBoxWidget*                      OpenedMsgbox;                                      // 0x0440(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 DesiredItemAfterInit;                              // 0x0448(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<EFlamePlatform, class FText>             NotEnoughCrownsMessage;                            // 0x0450(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<EItemCategory>                         WeaponCategories;                                  // 0x04A0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<EItemCategory>                         OutfitCategories;                                  // 0x04B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UUI_CosmeticsMainCategory_C*            WeaponsCategory;                                   // 0x04C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_CosmeticsMainCategory_C*            OutfitsCategory;                                   // 0x04C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EItemCategory>                         CurrencyCategories;                                // 0x04D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<EItemCategory>                         ConsumableCategories;                              // 0x04E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FString, class UUI_CosmeticsSubCategory_C*> CategoryToWidget;                                  // 0x04F0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TMap<class UClass*, struct FGameStoreSellingPointDetail> WeaponSkins_To_TempDetail_TempOnly;                // 0x0540(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class UClass*, struct FCustomizationCategoryMap> Customizations_To_CustomizationVariants;           // 0x0590(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class UClass*, struct FGameStoreSellingPointDetail> CustomizationVariantsTo_TempDetail_TempOnly;       // 0x05E0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UClass*>                         CustomizationClasses_TempOnly;                     // 0x0630(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSortedSellingpoints                   SortedSellingpoints;                               // 0x0640(0x0210)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameStoreSellingPointDetail           TempSellingPointInfo;                              // 0x0850(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         SelectedColorSlot;                                 // 0x0870(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ForcedSelectedColorSlot;                           // 0x0874(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PreviouslySelectedColorSlotIndex;                  // 0x0878(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87C[0x4];                                      // 0x087C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameStoreProductInfo                  FocusedProductInfo;                                // 0x0880(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          CanZoom;                                           // 0x08D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D1[0x7];                                      // 0x08D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EItemCategory, EItemCategory>            Category_To_ItsAssignedMergeCategory;              // 0x08D8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class UClass*, int32>                    WeaponSortPriority_ByCurrentPopularity;            // 0x0928(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bIsFocusingCustomizationCategories;                // 0x0978(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_979[0x3];                                      // 0x0979(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   TempHighlightedOutfit;                             // 0x097C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_984[0x4];                                      // 0x0984(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           OutfitsToHighlightQueue;                           // 0x0988(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UClass*                                 HighlightedHeadgear;                               // 0x0998(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 HighlightedOutfit;                                 // 0x09A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoOutfitsToHighlight;                              // 0x09A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A9[0x7];                                      // 0x09A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_Shelter_SaveGame_C*                 ShelterSave;                                       // 0x09B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class UClass*, class UClass*>            HighlightedCustomizationsAlternatives;             // 0x09B8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FDateTime                              UTC_TimeWhenSortingSellingPoints;                  // 0x0A08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             FinishedLoadingSellingPoints;                      // 0x0A10(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FDateTime                              UTC_TimeCurrentEventValidUntil;                    // 0x0A20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Timer_EventUpdate;                                 // 0x0A28(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              UTC_EarliestTemporarySellingPointChange;           // 0x0A30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Timer_RefreshTemporarySellingPoints;               // 0x0A38(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CheatTimeOffset;                                   // 0x0A40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              UTC_Now_1;                                         // 0x0A48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              UTC_Now_2;                                         // 0x0A50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Timer_AsyncDataProcees;                            // 0x0A58(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Timer_ButtonCreation;                              // 0x0A60(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMap<class UClass*, struct FGameStoreSellingPointDetail> SellingPointDataToProcess;                         // 0x0A68(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class UClass*, class UUI_CosmeticsListButton_C*> Weapon_To_ListButton;                              // 0x0AB8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TMap<class UClass*, class UUI_CosmeticsListButton_C*> Customization_To_ListButton;                       // 0x0B08(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UClass*>                         TempCustomizationsDataToProcess;                   // 0x0B58(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UClass*>                         TempWeaponsToProcess;                              // 0x0B68(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UClass*>                         CurrencyItemsToProcess;                            // 0x0B78(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class UClass*, class UUI_CosmeticsListButton_C*> Currency_To_ListButton;                            // 0x0B88(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TMap<class UClass*, class UUI_CosmeticsListButton_C*> CraftingPlanItems_To_ListButton;                   // 0x0BD8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TMap<class UClass*, struct FS_BoosterTicket_PackArray> BoosterTicket_To_PackItems;                        // 0x0C28(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bShouldRemoveInactiveTempSellingPoints;            // 0x0C78(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C79[0x7];                                      // 0x0C79(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_CosmeticsMainCategory_C*            BoosterTicketsCategory;                            // 0x0C80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_CosmeticsMainCategory_C*            CraftingPlanCategory;                              // 0x0C88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UClass*>                         CraftingPlanItemsToProcess;                        // 0x0C90(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	ESellingPointType                             CurrentlyFocusedSellingPointType;                  // 0x0CA0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CA1[0x7];                                      // 0x0CA1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                WidgetToFocusAfterDelay;                           // 0x0CA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FString, class FText>              GamemodeString_To_Text;                            // 0x0CB0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          BoughtAnyBoosterTickets;                           // 0x0D00(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          MainCategoryWasFocused;                            // 0x0D01(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D02[0x6];                                      // 0x0D02(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_CosmeticsSubCategory_C*             CurrentSubCategory;                                // 0x0D08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_CosmeticsMainCategory_C*            CurrentMainCategory;                               // 0x0D10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_WeaponSkinPreviewScene_C*           PreviewActorCache;                                 // 0x0D18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_CosmeticsListButton_C*              CurrentFocusedButton;                              // 0x0D20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_CosmeticsListButton_C*              SelectedCosmetic;                                  // 0x0D28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldCheckMouse;                                  // 0x0D30(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          BlockRefocusOnTick;                                // 0x0D31(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsPanning;                                         // 0x0D32(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D33[0x5];                                      // 0x0D33(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CurrentFocusedWidget;                              // 0x0D38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldReturnFocus;                                 // 0x0D40(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D41[0x7];                                      // 0x0D41(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UClass*>                         AllSellingPointCustomizationsToFill;               // 0x0D48(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UClass*>                         OwnedWeaponArrayToFill;                            // 0x0D58(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UClass*>                         NotOwnedWeaponArrayToFill;                         // 0x0D68(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UClass*>                         AllCraftingPlanItemsToFill;                        // 0x0D78(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UClass*>                         AllBoosterTicketsToFill;                           // 0x0D88(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FTimerHandle                           Filling_Timer;                                     // 0x0D98(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         AllWidgetsCount;                                   // 0x0DA0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void FinishedLoadingSellingPoints__DelegateSignature();
	void ExecuteUbergraph_UI_CosmeticsShop(int32 EntryPoint);
	void StoreSellingPointsStateChanged(EGameStoreSellingPointsState OldState, EGameStoreSellingPointsState NewState);
	void CheatTimeWarp(const struct FDateTime& FakeTime);
	void CheatFocusFirstItemAfterWarp();
	void AnotherButtonCreateCycle();
	void OnShopWidgetsReady();
	void ToggleSubCategory(bool ForcedClose);
	void ResetAutoRotation();
	void OnResetToDefaultState();
	void ZoomOut();
	void ZoomIn();
	void ListenForMouseWheel();
	void SetFocusedWidget(class UWidget* TargetWidget);
	void HandleFocusForCategory();
	void StopPanning();
	void StartPanning();
	void ListenForMouseInput();
	void BndEvt__UI_CosmeticsShop_ActionMoreInfo_K2Node_ComponentBoundEvent_1_OnActionPressedEvent__DelegateSignature();
	void BndEvt__UI_CosmeticsShop_BuyButtonWindows_K2Node_ComponentBoundEvent_5_OnButtonClickedEvent__DelegateSignature(class UButton* Sender);
	void OnChildFocusReceived(class UWidget* InWidget);
	void OnPurchasedItem();
	void BndEvt__UI_CosmeticsShop_BuyButtonWindows_K2Node_ComponentBoundEvent_10_OnButtonHoverEvent__DelegateSignature(class UButton* Sender);
	void BndEvt__UI_CosmeticsShop_BuyButtonWindows_K2Node_ComponentBoundEvent_9_OnButtonHoverEvent__DelegateSignature(class UButton* Sender);
	void CheckForInstantCameraTransition();
	void SpawnPreviewActors();
	void BndEvt__UI_GamepadActionSelect_K2Node_ComponentBoundEvent_8_OnActionPressedEvent__DelegateSignature();
	void TryToActivateBoosterTicket(class UClass* BoosterTicketClassToFocus);
	void DelayedSetUserFocus();
	void HandleBackButtonBinds(bool bIsExpanded);
	void DelayedScrollEvent();
	void Delayed_Update_Scroll_Bar(float DelayTime, class UWidget* WidgetToFocus);
	void InitialzeAfterSellingPointsDownload();
	void OnShopDataReady();
	void StopUpdatingEventInfo();
	void UpdateEventInfo();
	void StartUpdatingEventInfo();
	void ResetOutfitsToHighlightQueue();
	void UpdateRelevantHighlightedOutfitSets(class FName Optional_OutfitSetToRemove, bool ResetHighlightedOUtfit);
	void BndEvt__UI_GamepadActionViewOutfit_K2Node_ComponentBoundEvent_4_OnActionPressedEvent__DelegateSignature();
	void BndEvt__UI_GamepadActionViewHeadGear_K2Node_ComponentBoundEvent_3_OnActionPressedEvent__DelegateSignature();
	void FocusFailsafe_StopListeningForNavigation();
	void FocusFailsafe_ReturnFocus();
	void FocusFailsafe_StartListeningForNavigation();
	void OnClosedBuyConfirm(class UFlameWidget* FlameWidget);
	void BuyWarningCloseDelegate(EMessageBoxAction Result);
	void ContinueBuyingAfterWarning();
	void ErrorDuringBuying();
	void BndEvt__UI_GamepadActionClose_1_K2Node_ComponentBoundEvent_7_OnActionPressedEvent__DelegateSignature();
	void UnbindBackButton();
	void BindBackButton();
	void BndEvt__UI_GamepadActionWidget_C_5_K2Node_ComponentBoundEvent_6_OnActionPressedEvent__DelegateSignature();
	void BndEvt__UI_GamepadActionWidget_C_5_K2Node_ComponentBoundEvent_0_OnActionHoldEvent__DelegateSignature();
	void GameStoreItemBought(EGameStorePurchaseType PurchaseType, const struct FUniqueNetIdRepl& InUserId, const int32 PurchaseRequestId, const struct FGameStoreProductId& RequestedProductId, const struct FCloudRequestResult& Result, const struct FGameStorePurchaseResult& PurchaseResult, const bool PurchaseListRefreshed);
	void MainCategoryButtonPressed(class UListButtonWidget* Sender);
	void CosmeticsButtonPressed(class UListButtonWidget* Sender);
	void FocusedButtonChanged(class UListButtonWidget* Sender);
	void UpdateScrollBaronWidget(class UWidget* WidgetToFocus);
	void CancelPressed();
	void SubCategoryButtonPressed(class UListButtonWidget* Sender);
	void PreConstruct(bool IsDesignTime);
	void RemoveIdleWidget();
	void CreateIdleWidget();
	void Destruct();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void BndEvt__UI_GamepadActionClose_K2Node_ComponentBoundEvent_1_OnActionPressedEvent__DelegateSignature();
	void Construct();
	void SetExpandibleBool(bool bShouldBeExpanded);
	void SetCategoryIconHighlightVisibility(bool NewVisibility);
	void CollapseTheExpandible();
	void FillBasicCategories();
	void AddSortedSellingPointsToWidgets_Faster();
	void ShowcaseBoughtItem(class UClass* Item);
	void AllBoughtItemsPreviewed(class UFlameWidget* Widget);
	void AppendItemSkinMapArrays(const TMap<class UClass*, struct FGameStoreSellingPointDetail>& SkinMap, class UClass* NewClassToAdd, const struct FGameStoreSellingPointDetail& SellingPointInfo, TMap<class UClass*, struct FGameStoreSellingPointDetail>* MergedArray);
	void AppendCustomizationVariantsMapArrays(class UClass* NewClassToAdd, const TMap<class UClass*, struct FGameStoreSellingPointDetail>& CustomizationMap, const struct FGameStoreSellingPointDetail& SellingPointInfo, TMap<class UClass*, struct FGameStoreSellingPointDetail>* Array);
	void GetCustomizationCategoryDisplayName(EItemCategory Category, class FText* DisplayText);
	class UWidget* Custom_Nav_Select_Color_Slot(EUINavigation Navigation_0);
	void SetColorSlotFocus(int32 SlotIndex, bool IsCraftingPlan, ESellingPointType SellingPointType, bool UpdateItemFocus);
	void CustomizationsComparator(class UClass* ClassA, class UClass* ClassB, bool* Result);
	void VariantsComparator(class UClass* ClassA, class UClass* ClassB, bool* Result);
	void IsCustomizationEquipped(class AHumanPlayerController* Player, class UClass* Customization, class UClass* Variant, bool* IsEquipped);
	void ResetCustomizationOccupiedSlots();
	void ShowCustomizationOccupiedSlots(class UClass* Customization);
	void HideCustomizationOccupiedSlots();
	void WeaponSkinsComparator(class UClass* ClassA, class UClass* ClassB, bool* Result);
	void FilterOutOwnedWeaponSkinVariants(TArray<class UClass*>& Skins, class UClass* BaseWeapon, TArray<class UClass*>* FilteredSkins);
	void FilterOutOwnedCustomizationVariants(TArray<class UClass*>& Variants, class UClass* BaseCustomization, TArray<class UClass*>* FilteredVariants);
	void UpdateBuyButton();
	void Update_UI_Elements_Visibility(bool FocusedOnSpecificItem, ESellingPointType SellingPointType);
	void WeaponsComparator(class UClass* ClassA, class UClass* ClassB, bool* Result);
	void IsTheWeaponAccessible(class AStash* Stash, class UClass* Item, bool* Success, bool* Result);
	void FillColorsBox(class UUI_CosmeticsListButton_C* ListButton);
	void RemoveEmptyCategories();
	void SafelyRemoveEmptyListButton(class UUI_CosmeticsListButton_C* ListButton);
	void FocusFirstSubCategory();
	void GetAssignedMergeCategory(EItemCategory Category, EItemCategory* MergedCategories);
	void GetCorrectIconForCategory(EItemCategory Category, bool CraftingPlans, class UTexture2D** Icon);
	void UpdateCategoryHighlights(bool bClearAllHighlightsBefore, class UUI_CosmeticsSubCategory_C* FocusedCategory, class UUI_CosmeticsListButton_C* FocusedListButton);
	void CheckIfMainCategoriesAreEmpty();
	void FocusDesiredItem(class UClass* DesiredItem, bool* Success);
	void FocusFirstValidShopElement();
	void SetWidgetSwitcherIndex(E_CosmeticShopWidgetSwitcher SwitchIndex);
	void Update_Preview_Scene_Visibility(ESellingPointType SellingPointType, bool FocusedSpecificItem);
	void ShouldResetMannequinRotation(class UClass* ItemOld, class UClass* ItemNew, bool* bShouldReset);
	void PreviewHighlightedOutfits();
	void Filter_Out_Irrelevant_Highlighted_Outfits(TArray<class FName>& OutfitsSetDT_Names, TArray<class FName>* RelevantOutfitSets);
	void UpdateSellingPointEventDescription();
	void Process_Selling_Points();
	void AddOrModifyListWeaponButton(class AStash* Stash, const class UClass* Weapon, const struct FWeaponCategoryMap& WeaponSkinsArray);
	void AddOrModifyListCustomizationButton(const class UClass* Customization, const struct FCustomizationCategoryMap& CustomizationVariantsArray);
	void Add_or_Modify_List_Currency_Button(const class UClass* CurrencyTicket, const TMap<class UClass*, struct FGameStoreSellingPointDetail>& CurrencyItems, const class FString& TicketAplicableInGamemodes);
	void Add_or_Modify_List_CraftingPlan_Button(const class UClass* Crafting_Item_Class, const struct FCraftingPlanStoreDetail& PlanOfferDetail);
	void CreateButtonsForShopData_PseudoAsyncFill(bool UpdateExistingButtons);
	void FillBasicFakeCategories();
	void RemoveSellingPointDataFromListButton(class UClass* ItemToRemove);
	class FString CategoryToString(EItemCategory Category, bool CraftingPlan);
	void Crafting_Plans_Comparator(class UClass* ClassA, class UClass* ClassB, bool* Result);
	void ItemCategoryToSellingPointCategory(EItemCategory Category, bool CraftingPlan, ESellingPointType* SellingPointCategory);
	void Check_Local_Player_Loadout_for_Weapon(class UClass* Weapon, bool* WeaponIsInLoadout);
	void ParseCurrencySellingPoints(TArray<class UClass*>& CurrencyItems);
	void MouseClickSelectColorSlot(int32 SelectedIndex_);
	void UpdateColorVariant(int32 TargetIndex, bool UpdateFocus);
	void UpdateBoosterVariant(class UClass* CurrencyClass, bool UpdateFocus);
	void Switch_Hover_Sfx(bool IsDisabled);
	void ShowSellingPointWidgetsPseudoAsync();
	bool ShouldHalt_(const struct FDateTime& StartTime, float MaxMilisecondsPerLoop, int32 MaxBatchSize, int32 CurrentBatchSize);
	void IsCategoryExpanded(bool* bValid, bool* bIsExpanded);
	void GetRefToMainCategoryListButton(class UUI_CosmeticsMainCategory_C** MenuLabel, bool* bValid);
	void GetRefToCosmeticsListButton(class UUI_CosmeticsListButton_C** ListBTN, bool* bValid);
	void GetRefToSubCategoryListButton(bool* bValid, class UUI_CosmeticsSubCategory_C** SubCategory);
	void GetLastScrollElement(bool* bValid, class UWidget** LastWidget);
	void GetFirstScrollElement(bool* bValid, class UWidget** FirstElement);
	void IsListButtonChildOfSubCategory(class UUI_CosmeticsListButton_C* ListButton, bool* bIsChild);
	void GetItemTypeCategory(bool* Success, ESellingPointType* SellingPointType);
	void DestroyComponentByTAG(class FName Tag, bool* Valid, bool* ComponentFound);

	class UWidget* GetWidgetToFocus() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_CosmeticsShop_C">();
	}
	static class UUI_CosmeticsShop_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_CosmeticsShop_C>();
	}
};
static_assert(alignof(UUI_CosmeticsShop_C) == 0x000008, "Wrong alignment on UUI_CosmeticsShop_C");
static_assert(sizeof(UUI_CosmeticsShop_C) == 0x000DA8, "Wrong size on UUI_CosmeticsShop_C");
static_assert(offsetof(UUI_CosmeticsShop_C, UberGraphFrame) == 0x0002D8, "Member 'UUI_CosmeticsShop_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, OpenCuratedOutfitSet) == 0x0002E0, "Member 'UUI_CosmeticsShop_C::OpenCuratedOutfitSet' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, ActionMoreInfo) == 0x0002E8, "Member 'UUI_CosmeticsShop_C::ActionMoreInfo' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, ActionRotateText) == 0x0002F0, "Member 'UUI_CosmeticsShop_C::ActionRotateText' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, Backpack) == 0x0002F8, "Member 'UUI_CosmeticsShop_C::Backpack' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, BuyButton) == 0x000300, "Member 'UUI_CosmeticsShop_C::BuyButton' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, BuyButtonCrownsImage) == 0x000308, "Member 'UUI_CosmeticsShop_C::BuyButtonCrownsImage' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, BuyButtonWindows) == 0x000310, "Member 'UUI_CosmeticsShop_C::BuyButtonWindows' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, ControlTips) == 0x000318, "Member 'UUI_CosmeticsShop_C::ControlTips' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, Cosmetics) == 0x000320, "Member 'UUI_CosmeticsShop_C::Cosmetics' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, Cosmetics_1) == 0x000328, "Member 'UUI_CosmeticsShop_C::Cosmetics_1' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, EnabledButtonBG) == 0x000330, "Member 'UUI_CosmeticsShop_C::EnabledButtonBG' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, Eyewear) == 0x000338, "Member 'UUI_CosmeticsShop_C::Eyewear' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, Facewear) == 0x000340, "Member 'UUI_CosmeticsShop_C::Facewear' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, FakeCosmeticsScrollBox) == 0x000348, "Member 'UUI_CosmeticsShop_C::FakeCosmeticsScrollBox' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, FlameTextBlock_Price) == 0x000350, "Member 'UUI_CosmeticsShop_C::FlameTextBlock_Price' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, FocusButtonPrice) == 0x000358, "Member 'UUI_CosmeticsShop_C::FocusButtonPrice' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, Gloves) == 0x000360, "Member 'UUI_CosmeticsShop_C::Gloves' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, Headwear) == 0x000368, "Member 'UUI_CosmeticsShop_C::Headwear' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, Image_TextBackgroundFlat) == 0x000370, "Member 'UUI_CosmeticsShop_C::Image_TextBackgroundFlat' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, Image_TextBackgroundGradient) == 0x000378, "Member 'UUI_CosmeticsShop_C::Image_TextBackgroundGradient' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, MainScrollBox) == 0x000380, "Member 'UUI_CosmeticsShop_C::MainScrollBox' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, ProgressBar_ButtonCreation) == 0x000388, "Member 'UUI_CosmeticsShop_C::ProgressBar_ButtonCreation' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, ProgressBar_DataDownload) == 0x000390, "Member 'UUI_CosmeticsShop_C::ProgressBar_DataDownload' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, RotateActionOverlay) == 0x000398, "Member 'UUI_CosmeticsShop_C::RotateActionOverlay' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, RotateArrowL) == 0x0003A0, "Member 'UUI_CosmeticsShop_C::RotateArrowL' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, RotateArrowR) == 0x0003A8, "Member 'UUI_CosmeticsShop_C::RotateArrowR' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, StoreWidgetSwitcher) == 0x0003B0, "Member 'UUI_CosmeticsShop_C::StoreWidgetSwitcher' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, Text_EventName) == 0x0003B8, "Member 'UUI_CosmeticsShop_C::Text_EventName' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, Text_EventRemainingTime) == 0x0003C0, "Member 'UUI_CosmeticsShop_C::Text_EventRemainingTime' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, UI_CosmeticsVariantsBox) == 0x0003C8, "Member 'UUI_CosmeticsShop_C::UI_CosmeticsVariantsBox' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, UI_GamepadActionClose) == 0x0003D0, "Member 'UUI_CosmeticsShop_C::UI_GamepadActionClose' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, UI_GamepadActionRotate) == 0x0003D8, "Member 'UUI_CosmeticsShop_C::UI_GamepadActionRotate' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, UI_GamepadActionSelect) == 0x0003E0, "Member 'UUI_CosmeticsShop_C::UI_GamepadActionSelect' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, UI_GamepadActionViewHeadGear) == 0x0003E8, "Member 'UUI_CosmeticsShop_C::UI_GamepadActionViewHeadGear' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, UI_GamepadActionViewOutfit) == 0x0003F0, "Member 'UUI_CosmeticsShop_C::UI_GamepadActionViewOutfit' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, UI_GamepadActionWidget_Buy) == 0x0003F8, "Member 'UUI_CosmeticsShop_C::UI_GamepadActionWidget_Buy' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, UI_GamepadActionZoom) == 0x000400, "Member 'UUI_CosmeticsShop_C::UI_GamepadActionZoom' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, Uniform) == 0x000408, "Member 'UUI_CosmeticsShop_C::Uniform' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, VBox_EventInfo) == 0x000410, "Member 'UUI_CosmeticsShop_C::VBox_EventInfo' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, DeltaTime) == 0x000418, "Member 'UUI_CosmeticsShop_C::DeltaTime' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, Rotation_StickX) == 0x00041C, "Member 'UUI_CosmeticsShop_C::Rotation_StickX' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, ShelterUI) == 0x000420, "Member 'UUI_CosmeticsShop_C::ShelterUI' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, FocusedItem) == 0x000428, "Member 'UUI_CosmeticsShop_C::FocusedItem' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, FocusedVariant) == 0x000430, "Member 'UUI_CosmeticsShop_C::FocusedVariant' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, IdleWidget) == 0x000438, "Member 'UUI_CosmeticsShop_C::IdleWidget' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, OpenedMsgbox) == 0x000440, "Member 'UUI_CosmeticsShop_C::OpenedMsgbox' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, DesiredItemAfterInit) == 0x000448, "Member 'UUI_CosmeticsShop_C::DesiredItemAfterInit' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, NotEnoughCrownsMessage) == 0x000450, "Member 'UUI_CosmeticsShop_C::NotEnoughCrownsMessage' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, WeaponCategories) == 0x0004A0, "Member 'UUI_CosmeticsShop_C::WeaponCategories' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, OutfitCategories) == 0x0004B0, "Member 'UUI_CosmeticsShop_C::OutfitCategories' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, WeaponsCategory) == 0x0004C0, "Member 'UUI_CosmeticsShop_C::WeaponsCategory' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, OutfitsCategory) == 0x0004C8, "Member 'UUI_CosmeticsShop_C::OutfitsCategory' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, CurrencyCategories) == 0x0004D0, "Member 'UUI_CosmeticsShop_C::CurrencyCategories' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, ConsumableCategories) == 0x0004E0, "Member 'UUI_CosmeticsShop_C::ConsumableCategories' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, CategoryToWidget) == 0x0004F0, "Member 'UUI_CosmeticsShop_C::CategoryToWidget' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, WeaponSkins_To_TempDetail_TempOnly) == 0x000540, "Member 'UUI_CosmeticsShop_C::WeaponSkins_To_TempDetail_TempOnly' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, Customizations_To_CustomizationVariants) == 0x000590, "Member 'UUI_CosmeticsShop_C::Customizations_To_CustomizationVariants' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, CustomizationVariantsTo_TempDetail_TempOnly) == 0x0005E0, "Member 'UUI_CosmeticsShop_C::CustomizationVariantsTo_TempDetail_TempOnly' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, CustomizationClasses_TempOnly) == 0x000630, "Member 'UUI_CosmeticsShop_C::CustomizationClasses_TempOnly' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, SortedSellingpoints) == 0x000640, "Member 'UUI_CosmeticsShop_C::SortedSellingpoints' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, TempSellingPointInfo) == 0x000850, "Member 'UUI_CosmeticsShop_C::TempSellingPointInfo' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, SelectedColorSlot) == 0x000870, "Member 'UUI_CosmeticsShop_C::SelectedColorSlot' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, ForcedSelectedColorSlot) == 0x000874, "Member 'UUI_CosmeticsShop_C::ForcedSelectedColorSlot' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, PreviouslySelectedColorSlotIndex) == 0x000878, "Member 'UUI_CosmeticsShop_C::PreviouslySelectedColorSlotIndex' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, FocusedProductInfo) == 0x000880, "Member 'UUI_CosmeticsShop_C::FocusedProductInfo' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, CanZoom) == 0x0008D0, "Member 'UUI_CosmeticsShop_C::CanZoom' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, Category_To_ItsAssignedMergeCategory) == 0x0008D8, "Member 'UUI_CosmeticsShop_C::Category_To_ItsAssignedMergeCategory' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, WeaponSortPriority_ByCurrentPopularity) == 0x000928, "Member 'UUI_CosmeticsShop_C::WeaponSortPriority_ByCurrentPopularity' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, bIsFocusingCustomizationCategories) == 0x000978, "Member 'UUI_CosmeticsShop_C::bIsFocusingCustomizationCategories' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, TempHighlightedOutfit) == 0x00097C, "Member 'UUI_CosmeticsShop_C::TempHighlightedOutfit' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, OutfitsToHighlightQueue) == 0x000988, "Member 'UUI_CosmeticsShop_C::OutfitsToHighlightQueue' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, HighlightedHeadgear) == 0x000998, "Member 'UUI_CosmeticsShop_C::HighlightedHeadgear' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, HighlightedOutfit) == 0x0009A0, "Member 'UUI_CosmeticsShop_C::HighlightedOutfit' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, NoOutfitsToHighlight) == 0x0009A8, "Member 'UUI_CosmeticsShop_C::NoOutfitsToHighlight' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, ShelterSave) == 0x0009B0, "Member 'UUI_CosmeticsShop_C::ShelterSave' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, HighlightedCustomizationsAlternatives) == 0x0009B8, "Member 'UUI_CosmeticsShop_C::HighlightedCustomizationsAlternatives' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, UTC_TimeWhenSortingSellingPoints) == 0x000A08, "Member 'UUI_CosmeticsShop_C::UTC_TimeWhenSortingSellingPoints' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, FinishedLoadingSellingPoints) == 0x000A10, "Member 'UUI_CosmeticsShop_C::FinishedLoadingSellingPoints' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, UTC_TimeCurrentEventValidUntil) == 0x000A20, "Member 'UUI_CosmeticsShop_C::UTC_TimeCurrentEventValidUntil' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, Timer_EventUpdate) == 0x000A28, "Member 'UUI_CosmeticsShop_C::Timer_EventUpdate' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, UTC_EarliestTemporarySellingPointChange) == 0x000A30, "Member 'UUI_CosmeticsShop_C::UTC_EarliestTemporarySellingPointChange' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, Timer_RefreshTemporarySellingPoints) == 0x000A38, "Member 'UUI_CosmeticsShop_C::Timer_RefreshTemporarySellingPoints' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, CheatTimeOffset) == 0x000A40, "Member 'UUI_CosmeticsShop_C::CheatTimeOffset' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, UTC_Now_1) == 0x000A48, "Member 'UUI_CosmeticsShop_C::UTC_Now_1' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, UTC_Now_2) == 0x000A50, "Member 'UUI_CosmeticsShop_C::UTC_Now_2' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, Timer_AsyncDataProcees) == 0x000A58, "Member 'UUI_CosmeticsShop_C::Timer_AsyncDataProcees' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, Timer_ButtonCreation) == 0x000A60, "Member 'UUI_CosmeticsShop_C::Timer_ButtonCreation' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, SellingPointDataToProcess) == 0x000A68, "Member 'UUI_CosmeticsShop_C::SellingPointDataToProcess' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, Weapon_To_ListButton) == 0x000AB8, "Member 'UUI_CosmeticsShop_C::Weapon_To_ListButton' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, Customization_To_ListButton) == 0x000B08, "Member 'UUI_CosmeticsShop_C::Customization_To_ListButton' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, TempCustomizationsDataToProcess) == 0x000B58, "Member 'UUI_CosmeticsShop_C::TempCustomizationsDataToProcess' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, TempWeaponsToProcess) == 0x000B68, "Member 'UUI_CosmeticsShop_C::TempWeaponsToProcess' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, CurrencyItemsToProcess) == 0x000B78, "Member 'UUI_CosmeticsShop_C::CurrencyItemsToProcess' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, Currency_To_ListButton) == 0x000B88, "Member 'UUI_CosmeticsShop_C::Currency_To_ListButton' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, CraftingPlanItems_To_ListButton) == 0x000BD8, "Member 'UUI_CosmeticsShop_C::CraftingPlanItems_To_ListButton' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, BoosterTicket_To_PackItems) == 0x000C28, "Member 'UUI_CosmeticsShop_C::BoosterTicket_To_PackItems' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, bShouldRemoveInactiveTempSellingPoints) == 0x000C78, "Member 'UUI_CosmeticsShop_C::bShouldRemoveInactiveTempSellingPoints' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, BoosterTicketsCategory) == 0x000C80, "Member 'UUI_CosmeticsShop_C::BoosterTicketsCategory' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, CraftingPlanCategory) == 0x000C88, "Member 'UUI_CosmeticsShop_C::CraftingPlanCategory' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, CraftingPlanItemsToProcess) == 0x000C90, "Member 'UUI_CosmeticsShop_C::CraftingPlanItemsToProcess' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, CurrentlyFocusedSellingPointType) == 0x000CA0, "Member 'UUI_CosmeticsShop_C::CurrentlyFocusedSellingPointType' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, WidgetToFocusAfterDelay) == 0x000CA8, "Member 'UUI_CosmeticsShop_C::WidgetToFocusAfterDelay' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, GamemodeString_To_Text) == 0x000CB0, "Member 'UUI_CosmeticsShop_C::GamemodeString_To_Text' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, BoughtAnyBoosterTickets) == 0x000D00, "Member 'UUI_CosmeticsShop_C::BoughtAnyBoosterTickets' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, MainCategoryWasFocused) == 0x000D01, "Member 'UUI_CosmeticsShop_C::MainCategoryWasFocused' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, CurrentSubCategory) == 0x000D08, "Member 'UUI_CosmeticsShop_C::CurrentSubCategory' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, CurrentMainCategory) == 0x000D10, "Member 'UUI_CosmeticsShop_C::CurrentMainCategory' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, PreviewActorCache) == 0x000D18, "Member 'UUI_CosmeticsShop_C::PreviewActorCache' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, CurrentFocusedButton) == 0x000D20, "Member 'UUI_CosmeticsShop_C::CurrentFocusedButton' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, SelectedCosmetic) == 0x000D28, "Member 'UUI_CosmeticsShop_C::SelectedCosmetic' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, ShouldCheckMouse) == 0x000D30, "Member 'UUI_CosmeticsShop_C::ShouldCheckMouse' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, BlockRefocusOnTick) == 0x000D31, "Member 'UUI_CosmeticsShop_C::BlockRefocusOnTick' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, IsPanning) == 0x000D32, "Member 'UUI_CosmeticsShop_C::IsPanning' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, CurrentFocusedWidget) == 0x000D38, "Member 'UUI_CosmeticsShop_C::CurrentFocusedWidget' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, ShouldReturnFocus) == 0x000D40, "Member 'UUI_CosmeticsShop_C::ShouldReturnFocus' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, AllSellingPointCustomizationsToFill) == 0x000D48, "Member 'UUI_CosmeticsShop_C::AllSellingPointCustomizationsToFill' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, OwnedWeaponArrayToFill) == 0x000D58, "Member 'UUI_CosmeticsShop_C::OwnedWeaponArrayToFill' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, NotOwnedWeaponArrayToFill) == 0x000D68, "Member 'UUI_CosmeticsShop_C::NotOwnedWeaponArrayToFill' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, AllCraftingPlanItemsToFill) == 0x000D78, "Member 'UUI_CosmeticsShop_C::AllCraftingPlanItemsToFill' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, AllBoosterTicketsToFill) == 0x000D88, "Member 'UUI_CosmeticsShop_C::AllBoosterTicketsToFill' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, Filling_Timer) == 0x000D98, "Member 'UUI_CosmeticsShop_C::Filling_Timer' has a wrong offset!");
static_assert(offsetof(UUI_CosmeticsShop_C, AllWidgetsCount) == 0x000DA0, "Member 'UUI_CosmeticsShop_C::AllWidgetsCount' has a wrong offset!");

}

