#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PCComponent_ADM_Event_BarredHouse

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_PCComponent_ADM_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PCComponent_ADM_Event_BarredHouse.BP_PCComponent_ADM_Event_BarredHouse_C
// 0x0028 (0x0110 - 0x00E8)
class UBP_PCComponent_ADM_Event_BarredHouse_C final : public UBP_PCComponent_ADM_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_PCComponent_ADM_Event_BarredHouse_C; // 0x00E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class FName                                   Vault_Marker;                                      // 0x00F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Local_Unlock_Timer;                                // 0x00F8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_ADM_BarredVault_C*>          Accessed_Vaults;                                   // 0x0100(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)

public:
	void ExecuteUbergraph_BP_PCComponent_ADM_Event_BarredHouse(int32 EntryPoint);
	void Send_Plank_Removed_Analytics_Event(class UBP_ADM_DoorBarricade_Component_C* Barricade);
	void Vault_Inventory_Opened(class ABP_ADM_BarredVault_C* Vault);
	void Player_Started_Vault_Unlocking(float Unlock_Duration, class ABP_ADM_BarredVault_C* Vault);
	void Process_Vault_Unlocking_Achievement();
	void Toggle_Local_Timer_on_Client(bool Is_Running);
	void Character_Retrieved_an_Item(const class AHumanCharacter* Human, const class AActor* Loot, TSubclassOf<class AItem> Item, int32 FromCount, int32 ToCount);
	void Character_Possessed_on_Server(class ABP_Character_C* Possessed_Character);
	void Remove_Vault_Marker_from_Map();
	void Mark_Vault_on_Map(const struct FS_CustomMapMarker& Icon);
	void Send_Vault_Start_Unlocing_Analytics_Event(float Unlock_Duration);
	void Spawn_All_Vaults();
	void OnLoadSucceed_E122DAA44B576F13FC1CE9B67CFBC0C9(class USaveGame* SaveGame);
	void OnLoadFailed_E122DAA44B576F13FC1CE9B67CFBC0C9(class USaveGame* SaveGame);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PCComponent_ADM_Event_BarredHouse_C">();
	}
	static class UBP_PCComponent_ADM_Event_BarredHouse_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_PCComponent_ADM_Event_BarredHouse_C>();
	}
};
static_assert(alignof(UBP_PCComponent_ADM_Event_BarredHouse_C) == 0x000008, "Wrong alignment on UBP_PCComponent_ADM_Event_BarredHouse_C");
static_assert(sizeof(UBP_PCComponent_ADM_Event_BarredHouse_C) == 0x000110, "Wrong size on UBP_PCComponent_ADM_Event_BarredHouse_C");
static_assert(offsetof(UBP_PCComponent_ADM_Event_BarredHouse_C, UberGraphFrame_BP_PCComponent_ADM_Event_BarredHouse_C) == 0x0000E8, "Member 'UBP_PCComponent_ADM_Event_BarredHouse_C::UberGraphFrame_BP_PCComponent_ADM_Event_BarredHouse_C' has a wrong offset!");
static_assert(offsetof(UBP_PCComponent_ADM_Event_BarredHouse_C, Vault_Marker) == 0x0000F0, "Member 'UBP_PCComponent_ADM_Event_BarredHouse_C::Vault_Marker' has a wrong offset!");
static_assert(offsetof(UBP_PCComponent_ADM_Event_BarredHouse_C, Local_Unlock_Timer) == 0x0000F8, "Member 'UBP_PCComponent_ADM_Event_BarredHouse_C::Local_Unlock_Timer' has a wrong offset!");
static_assert(offsetof(UBP_PCComponent_ADM_Event_BarredHouse_C, Accessed_Vaults) == 0x000100, "Member 'UBP_PCComponent_ADM_Event_BarredHouse_C::Accessed_Vaults' has a wrong offset!");

}

