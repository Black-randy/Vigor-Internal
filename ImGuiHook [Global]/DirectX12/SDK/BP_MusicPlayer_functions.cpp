#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MusicPlayer

#include "Basic.hpp"

#include "BP_MusicPlayer_classes.hpp"
#include "BP_MusicPlayer_parameters.hpp"


namespace SDK
{

// Function BP_MusicPlayer.BP_MusicPlayer_C.ExecuteUbergraph_BP_MusicPlayer
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MusicPlayer_C::ExecuteUbergraph_BP_MusicPlayer(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicPlayer_C", "ExecuteUbergraph_BP_MusicPlayer");

	Params::BP_MusicPlayer_C_ExecuteUbergraph_BP_MusicPlayer Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MusicPlayer.BP_MusicPlayer_C.Shelter theme loaded
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// ESublevelTheme                          Theme                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MusicPlayer_C::Shelter_theme_loaded(ESublevelTheme Theme)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicPlayer_C", "Shelter theme loaded");

	Params::BP_MusicPlayer_C_Shelter_theme_loaded Parms{};

	Parms.Theme = Theme;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MusicPlayer.BP_MusicPlayer_C.UnbindSoundEnded
// (BlueprintCallable, BlueprintEvent)

void ABP_MusicPlayer_C::UnbindSoundEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicPlayer_C", "UnbindSoundEnded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MusicPlayer.BP_MusicPlayer_C.BoundSoundEnded
// (BlueprintCallable, BlueprintEvent)

void ABP_MusicPlayer_C::BoundSoundEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicPlayer_C", "BoundSoundEnded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MusicPlayer.BP_MusicPlayer_C.BindEventOnSoundFinish
// (BlueprintCallable, BlueprintEvent)

void ABP_MusicPlayer_C::BindEventOnSoundFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicPlayer_C", "BindEventOnSoundFinish");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MusicPlayer.BP_MusicPlayer_C.AnnounceSelfToGM
// (BlueprintCallable, BlueprintEvent)

void ABP_MusicPlayer_C::AnnounceSelfToGM()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicPlayer_C", "AnnounceSelfToGM");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MusicPlayer.BP_MusicPlayer_C.internal Load and Play Track
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_MusicTrack_C*                 Track_Reference                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBP_MusicTrack_C*                 Previous_Track                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MusicPlayer_C::Internal_Load_and_Play_Track(const class UBP_MusicTrack_C*& Track_Reference, class UBP_MusicTrack_C* Previous_Track)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicPlayer_C", "internal Load and Play Track");

	Params::BP_MusicPlayer_C_Internal_Load_and_Play_Track Parms{};

	Parms.Track_Reference = Track_Reference;
	Parms.Previous_Track = Previous_Track;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MusicPlayer.BP_MusicPlayer_C.StopPlayingTimeline
// (BlueprintCallable, BlueprintEvent)

void ABP_MusicPlayer_C::StopPlayingTimeline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicPlayer_C", "StopPlayingTimeline");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MusicPlayer.BP_MusicPlayer_C.StartPlayingTimeline
// (BlueprintCallable, BlueprintEvent)

void ABP_MusicPlayer_C::StartPlayingTimeline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicPlayer_C", "StartPlayingTimeline");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MusicPlayer.BP_MusicPlayer_C.Onboarding Finished
// (BlueprintCallable, BlueprintEvent)

void ABP_MusicPlayer_C::Onboarding_Finished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicPlayer_C", "Onboarding Finished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MusicPlayer.BP_MusicPlayer_C.Find SaveGame
// (BlueprintCallable, BlueprintEvent)

void ABP_MusicPlayer_C::Find_SaveGame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicPlayer_C", "Find SaveGame");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MusicPlayer.BP_MusicPlayer_C.SaveGame Ready
// (BlueprintCallable, BlueprintEvent)

void ABP_MusicPlayer_C::SaveGame_Ready()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicPlayer_C", "SaveGame Ready");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MusicPlayer.BP_MusicPlayer_C.Shelter Level Changed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewLevel                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MusicPlayer_C::Shelter_Level_Changed(int32 NewLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicPlayer_C", "Shelter Level Changed");

	Params::BP_MusicPlayer_C_Shelter_Level_Changed Parms{};

	Parms.NewLevel = NewLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MusicPlayer.BP_MusicPlayer_C.DelayedCheckForPlayerController
// (BlueprintCallable, BlueprintEvent)

void ABP_MusicPlayer_C::DelayedCheckForPlayerController()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicPlayer_C", "DelayedCheckForPlayerController");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MusicPlayer.BP_MusicPlayer_C.Stash Loaded
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AStash*                           Sender                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UStashComponent*                  Inventory                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MusicPlayer_C::Stash_Loaded(class AStash* Sender, class UStashComponent* Inventory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicPlayer_C", "Stash Loaded");

	Params::BP_MusicPlayer_C_Stash_Loaded Parms{};

	Parms.Sender = Sender;
	Parms.Inventory = Inventory;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MusicPlayer.BP_MusicPlayer_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_MusicPlayer_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicPlayer_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MusicPlayer.BP_MusicPlayer_C.Show Next Track Notification
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FMusicTrackRow                   TrackInfo                                              (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_MusicPlayer_C::Show_Next_Track_Notification(const struct FMusicTrackRow& TrackInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicPlayer_C", "Show Next Track Notification");

	Params::BP_MusicPlayer_C_Show_Next_Track_Notification Parms{};

	Parms.TrackInfo = std::move(TrackInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MusicPlayer.BP_MusicPlayer_C.SongElapsedTime
// (BlueprintCallable, BlueprintEvent)

void ABP_MusicPlayer_C::SongElapsedTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicPlayer_C", "SongElapsedTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MusicPlayer.BP_MusicPlayer_C.ShuffleButtonPressed_Event
// (BlueprintCallable, BlueprintEvent)

void ABP_MusicPlayer_C::ShuffleButtonPressed_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicPlayer_C", "ShuffleButtonPressed_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MusicPlayer.BP_MusicPlayer_C.BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_0_Interaction Start On Client__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UInteractionItemComponent*        Sender                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Interacting_Actor                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MusicPlayer_C::BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_0_Interaction_Start_On_Client__DelegateSignature(class UInteractionItemComponent* Sender, class AActor* Interacting_Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicPlayer_C", "BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_0_Interaction Start On Client__DelegateSignature");

	Params::BP_MusicPlayer_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_0_Interaction_Start_On_Client__DelegateSignature Parms{};

	Parms.Sender = Sender;
	Parms.Interacting_Actor = Interacting_Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MusicPlayer.BP_MusicPlayer_C.TrackEnded
// (BlueprintCallable, BlueprintEvent)

void ABP_MusicPlayer_C::TrackEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicPlayer_C", "TrackEnded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MusicPlayer.BP_MusicPlayer_C.Analytics Player Played Track
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FMusicTrackRow                   TrackInfo                                              (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_MusicPlayer_C::Analytics_Player_Played_Track(const struct FMusicTrackRow& TrackInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicPlayer_C", "Analytics Player Played Track");

	Params::BP_MusicPlayer_C_Analytics_Player_Played_Track Parms{};

	Parms.TrackInfo = std::move(TrackInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MusicPlayer.BP_MusicPlayer_C.Analytics Player Interacted
// (BlueprintCallable, BlueprintEvent)

void ABP_MusicPlayer_C::Analytics_Player_Interacted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicPlayer_C", "Analytics Player Interacted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MusicPlayer.BP_MusicPlayer_C.OnLoaded_303A9E7341428F48F05BE78A40C6C13C
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MusicPlayer_C::OnLoaded_303A9E7341428F48F05BE78A40C6C13C(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicPlayer_C", "OnLoaded_303A9E7341428F48F05BE78A40C6C13C");

	Params::BP_MusicPlayer_C_OnLoaded_303A9E7341428F48F05BE78A40C6C13C Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MusicPlayer.BP_MusicPlayer_C.Timeline_ArmMove__UpdateFunc
// (BlueprintEvent)

void ABP_MusicPlayer_C::Timeline_ArmMove__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicPlayer_C", "Timeline_ArmMove__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MusicPlayer.BP_MusicPlayer_C.Timeline_ArmMove__FinishedFunc
// (BlueprintEvent)

void ABP_MusicPlayer_C::Timeline_ArmMove__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicPlayer_C", "Timeline_ArmMove__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MusicPlayer.BP_MusicPlayer_C.Timeline_DiscSpin__UpdateFunc
// (BlueprintEvent)

void ABP_MusicPlayer_C::Timeline_DiscSpin__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicPlayer_C", "Timeline_DiscSpin__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MusicPlayer.BP_MusicPlayer_C.Timeline_DiscSpin__FinishedFunc
// (BlueprintEvent)

void ABP_MusicPlayer_C::Timeline_DiscSpin__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicPlayer_C", "Timeline_DiscSpin__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MusicPlayer.BP_MusicPlayer_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_MusicPlayer_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicPlayer_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MusicPlayer.BP_MusicPlayer_C.Initialize
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UBP_MusicTrack_C*>         TrackList_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_MusicPlayer_C::Initialize(TArray<class UBP_MusicTrack_C*>& TrackList_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicPlayer_C", "Initialize");

	Params::BP_MusicPlayer_C_Initialize Parms{};

	Parms.TrackList_0 = std::move(TrackList_0);

	UObject::ProcessEvent(Func, &Parms);

	TrackList_0 = std::move(Parms.TrackList_0);
}


// Function BP_MusicPlayer.BP_MusicPlayer_C.SelectTrack
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_MusicTrack_C*                 Track                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MusicPlayer_C::SelectTrack(class UBP_MusicTrack_C* Track)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicPlayer_C", "SelectTrack");

	Params::BP_MusicPlayer_C_SelectTrack Parms{};

	Parms.Track = Track;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MusicPlayer.BP_MusicPlayer_C.ShowUI
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_MusicPlayer_C::ShowUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicPlayer_C", "ShowUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MusicPlayer.BP_MusicPlayer_C.HideUI
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MusicPlayer_C::HideUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicPlayer_C", "HideUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MusicPlayer.BP_MusicPlayer_C.PlayNextTrack
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_MusicPlayer_C::PlayNextTrack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicPlayer_C", "PlayNextTrack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MusicPlayer.BP_MusicPlayer_C.PlayTrack
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_MusicTrack_C*                 Track                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MusicPlayer_C::PlayTrack(class UBP_MusicTrack_C*& Track)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicPlayer_C", "PlayTrack");

	Params::BP_MusicPlayer_C_PlayTrack Parms{};

	Parms.Track = Track;

	UObject::ProcessEvent(Func, &Parms);

	Track = Parms.Track;
}


// Function BP_MusicPlayer.BP_MusicPlayer_C.ResetQueue
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_MusicTrack_C*                 LastTrack                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bEmptyQueue                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MusicPlayer_C::ResetQueue(class UBP_MusicTrack_C* LastTrack, bool* bEmptyQueue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicPlayer_C", "ResetQueue");

	Params::BP_MusicPlayer_C_ResetQueue Parms{};

	Parms.LastTrack = LastTrack;

	UObject::ProcessEvent(Func, &Parms);

	if (bEmptyQueue != nullptr)
		*bEmptyQueue = Parms.bEmptyQueue;
}


// Function BP_MusicPlayer.BP_MusicPlayer_C.StopTrack
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MusicPlayer_C::StopTrack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicPlayer_C", "StopTrack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MusicPlayer.BP_MusicPlayer_C.FadeOutOldTrack
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_MusicPlayer_C::FadeOutOldTrack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicPlayer_C", "FadeOutOldTrack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MusicPlayer.BP_MusicPlayer_C.FadeInLastPlayedTrack
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_MusicPlayer_C::FadeInLastPlayedTrack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicPlayer_C", "FadeInLastPlayedTrack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MusicPlayer.BP_MusicPlayer_C.GetMusicTracksFromDataTable
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UBP_MusicTrack_C*>         MusicTrackList                                         (Parm, OutParm)

void ABP_MusicPlayer_C::GetMusicTracksFromDataTable(TArray<class UBP_MusicTrack_C*>* MusicTrackList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicPlayer_C", "GetMusicTracksFromDataTable");

	Params::BP_MusicPlayer_C_GetMusicTracksFromDataTable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MusicTrackList != nullptr)
		*MusicTrackList = std::move(Parms.MusicTrackList);
}


// Function BP_MusicPlayer.BP_MusicPlayer_C.HasPlayerUnlockedMusicTrack
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           CheckedMusicTrack                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Required_Shelter_Level                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsUnlocked                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MusicPlayer_C::HasPlayerUnlockedMusicTrack(class UClass* CheckedMusicTrack, int32 Required_Shelter_Level, bool* IsUnlocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicPlayer_C", "HasPlayerUnlockedMusicTrack");

	Params::BP_MusicPlayer_C_HasPlayerUnlockedMusicTrack Parms{};

	Parms.CheckedMusicTrack = CheckedMusicTrack;
	Parms.Required_Shelter_Level = Required_Shelter_Level;

	UObject::ProcessEvent(Func, &Parms);

	if (IsUnlocked != nullptr)
		*IsUnlocked = Parms.IsUnlocked;
}


// Function BP_MusicPlayer.BP_MusicPlayer_C.UnlockMusicTracks
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MusicPlayer_C::UnlockMusicTracks()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicPlayer_C", "UnlockMusicTracks");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MusicPlayer.BP_MusicPlayer_C.RefreshMusicPlayerVisibility
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MusicPlayer_C::RefreshMusicPlayerVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicPlayer_C", "RefreshMusicPlayerVisibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MusicPlayer.BP_MusicPlayer_C.GetDefaultTrack
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TSoftObjectPtr<class USoundWave>        DefaultSound                                           (Parm, OutParm, HasGetValueTypeHash)

void ABP_MusicPlayer_C::GetDefaultTrack(TSoftObjectPtr<class USoundWave>* DefaultSound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicPlayer_C", "GetDefaultTrack");

	Params::BP_MusicPlayer_C_GetDefaultTrack Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (DefaultSound != nullptr)
		*DefaultSound = Parms.DefaultSound;
}


// Function BP_MusicPlayer.BP_MusicPlayer_C.IsMusicPlayerAvailable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Available                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MusicPlayer_C::IsMusicPlayerAvailable(bool* Available)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicPlayer_C", "IsMusicPlayerAvailable");

	Params::BP_MusicPlayer_C_IsMusicPlayerAvailable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Available != nullptr)
		*Available = Parms.Available;
}


// Function BP_MusicPlayer.BP_MusicPlayer_C.FindDefaultTrackForCurrentShelterLevel
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_MusicPlayer_C::FindDefaultTrackForCurrentShelterLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicPlayer_C", "FindDefaultTrackForCurrentShelterLevel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MusicPlayer.BP_MusicPlayer_C.AddTrackBackInQueue
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_MusicTrack_C*                 Track                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MusicPlayer_C::AddTrackBackInQueue(class UBP_MusicTrack_C* Track)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicPlayer_C", "AddTrackBackInQueue");

	Params::BP_MusicPlayer_C_AddTrackBackInQueue Parms{};

	Parms.Track = Track;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MusicPlayer.BP_MusicPlayer_C.PauseTrack
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MusicPlayer_C::PauseTrack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicPlayer_C", "PauseTrack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MusicPlayer.BP_MusicPlayer_C.CheckBlackListedTracks
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bShouldSaveAfterwards                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MusicPlayer_C::CheckBlackListedTracks(bool* bShouldSaveAfterwards)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicPlayer_C", "CheckBlackListedTracks");

	Params::BP_MusicPlayer_C_CheckBlackListedTracks Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bShouldSaveAfterwards != nullptr)
		*bShouldSaveAfterwards = Parms.bShouldSaveAfterwards;
}


// Function BP_MusicPlayer.BP_MusicPlayer_C.BlacklistTrack
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_MusicTrack_C*                 TrackToBlacklist                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bShouldBeBlacklisted                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MusicPlayer_C::BlacklistTrack(class UBP_MusicTrack_C* TrackToBlacklist, bool bShouldBeBlacklisted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicPlayer_C", "BlacklistTrack");

	Params::BP_MusicPlayer_C_BlacklistTrack Parms{};

	Parms.TrackToBlacklist = TrackToBlacklist;
	Parms.bShouldBeBlacklisted = bShouldBeBlacklisted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MusicPlayer.BP_MusicPlayer_C.IsMusicBlacklisted
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UBP_MusicTrack_C*                 Track                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TSoftObjectPtr<class USoundWave>        SoftRefSound                                           (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool                                    Blacklisted                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MusicPlayer_C::IsMusicBlacklisted(class UBP_MusicTrack_C* Track, TSoftObjectPtr<class USoundWave> SoftRefSound, bool* Blacklisted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicPlayer_C", "IsMusicBlacklisted");

	Params::BP_MusicPlayer_C_IsMusicBlacklisted Parms{};

	Parms.Track = Track;
	Parms.SoftRefSound = SoftRefSound;

	UObject::ProcessEvent(Func, &Parms);

	if (Blacklisted != nullptr)
		*Blacklisted = Parms.Blacklisted;
}

}

