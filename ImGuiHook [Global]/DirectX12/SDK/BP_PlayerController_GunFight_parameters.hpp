#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerController_GunFight

#include "Basic.hpp"

#include "EBooster_structs.hpp"
#include "EGunFight_LoadoutState_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "S_CustomMapMarker_Optimized_structs.hpp"
#include "S_CustomMapMarker_structs.hpp"
#include "Flame_structs.hpp"
#include "Engine_structs.hpp"
#include "ERaidNotificationType_structs.hpp"
#include "S_GunFightLoadouts_S12_structs.hpp"


namespace SDK::Params
{

// Function BP_PlayerController_GunFight.BP_PlayerController_GunFight_C.ExecuteUbergraph_BP_PlayerController_GunFight
// 0x0950 (0x0950 - 0x0000)
struct BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameState_GunFight_C*               K2Node_DynamicCast_AsBP_Game_State_Gun_Fight;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameState_GunFight_C*               K2Node_DynamicCast_AsBP_Game_State_Gun_Fight_1;    // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameMode_GunFight_C*                K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight;       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_2;               // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameState_GunFight_C*               K2Node_DynamicCast_AsBP_Game_State_Gun_Fight_2;    // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_3;               // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameState_GunFight_C*               K2Node_DynamicCast_AsBP_Game_State_Gun_Fight_3;    // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A[0x2];                                       // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_ScoreEvent;                     // 0x009C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_4;               // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameState_GunFight_C*               K2Node_DynamicCast_AsBP_Game_State_Gun_Fight_4;    // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_SettingID;                      // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_CurrentID;                      // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_NewID;                          // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_MaxID;                          // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_LocalPlayerWins;                // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_Attacker_Is_Attacker;                  // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F5[0x3];                                       // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_RoundsToWin;                    // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_Title;                          // 0x0100(0x0018)()
	class FText                                   K2Node_CustomEvent_Reason;                         // 0x0118(0x0018)()
	ERaidNotificationType                         K2Node_CustomEvent_Type;                           // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Round_Time_1;                   // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Attackers_Won_Rounds_1;         // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Defenders_Won_Rounds_1;         // 0x013C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_GunFight_C*             K2Node_DynamicCast_AsBP_Player_State_Gun_Fight;    // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0152(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x0153(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         K2Node_CustomEvent_Attackers_Won_Rounds;           // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Defenders_Won_Rounds;           // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_5;               // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameState_GunFight_C*               K2Node_DynamicCast_AsBP_Game_State_Gun_Fight_5;    // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_1;                // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameMode_GunFight_C*                K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight_1;     // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_GunFight_MatchProgress_C*           CallFunc_Create_ReturnValue;                       // 0x0190(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_Raid_Notification_C*                CallFunc_Create_ReturnValue_1;                     // 0x0198(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_2;          // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A2[0x6];                                      // 0x01A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_GunFight_RoundStartCountdown_C*     CallFunc_Create_ReturnValue_2;                     // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1[0x3];                                      // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Pre_RoundStart;                 // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_Raid_WaitingForMatchStart_C*        CallFunc_Create_ReturnValue_3;                     // 0x01B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x01C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C3[0x1];                                      // 0x01C3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Time;                           // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_All_Connected;                  // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_2;                // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Round_Time;                     // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Is_Objective_Phase;             // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DD[0x3];                                      // 0x01DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameMode_GunFight_C*                K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight_2;     // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1EA[0x2];                                      // 0x01EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Round_Starts_In_1;              // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_3;          // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F2[0x2];                                      // 0x01F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_GunFight_ScorePopUp_C*              CallFunc_Create_ReturnValue_4;                     // 0x0200(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanCharacter*                        K2Node_Event_Killer;                               // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanCharacter*                        K2Node_Event_Victim;                               // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_Event_Instigating_Item;                     // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Headshot;                             // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_Teamkill;                             // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_222[0x2];                                      // 0x0222(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_13;                   // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_229[0x3];                                      // 0x0229(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerState_C*                      K2Node_DynamicCast_AsBP_Player_State;              // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_239[0x3];                                      // 0x0239(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_4;          // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_241[0x3];                                      // 0x0241(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Pre_Round_Time;                 // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_14;                   // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_GunFight_LoadoutPicker_C*           CallFunc_Create_ReturnValue_5;                     // 0x0250(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerState_C*                      K2Node_DynamicCast_AsBP_Player_State_1;            // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_261[0x7];                                      // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_PlayerState_C*>              CallFunc_FindTeammates_TeammatesPlayerStates;      // 0x0268(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue_15;                   // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0279(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_27A[0x2];                                      // 0x027A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_RoundStartsIn;                  // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_16;                   // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_17;                   // 0x0281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_282[0x6];                                      // 0x0282(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_GunFight_ChosenLoadout_PopUp_C*     CallFunc_Create_ReturnValue_6;                     // 0x0288(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_18;                   // 0x0294(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_295[0x3];                                      // 0x0295(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_BlueScreen_C*                       CallFunc_Create_ReturnValue_7;                     // 0x0298(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_PreRoundTime;                   // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_19;                   // 0x02A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A5[0x3];                                      // 0x02A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_GunFight_PreRoundCountDown_InputBlock_C* CallFunc_Create_ReturnValue_8;                     // 0x02A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Round_Starts_In;                // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_20;                   // 0x02B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetGunfightUIHud_Valid;                   // 0x02B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B6[0x2];                                      // 0x02B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_HUD_C*                              CallFunc_GetGunfightUIHud_HUD;                     // 0x02B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_PlayerID_to_kick_4;             // 0x02C0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C4[0x4];                                      // 0x02C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_PlayerName_to_kick;             // 0x02C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_PlayerID_of_Vote_Starter;       // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetUniqueNetIdFromPlayerId_bIsActive;     // 0x02DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DD[0x3];                                      // 0x02DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUniqueNetIdRepl                       CallFunc_GetUniqueNetIdFromPlayerId_ReturnValue;   // 0x02E0(0x0028)(HasGetValueTypeHash)
	class UUI_GunFight_VoteKick_C*                CallFunc_Create_ReturnValue_9;                     // 0x0308(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_TotalCount_1;                   // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_YesCount_1;                     // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_NoCount_1;                      // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_VotedToKick_1;                  // 0x0324(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_325[0x3];                                      // 0x0325(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_3;                // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameMode_GunFight_C*                K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight_3;     // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_339[0x7];                                      // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class ABP_PlayerController_GunFight_C*, bool> K2Node_MakeMap_Map;                                // 0x0340(0x0050)()
	int32                                         K2Node_CustomEvent_TotalCount;                     // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_YesCount;                       // 0x0394(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_NoCount;                        // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x039C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bGotKicked;                     // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A1[0x3];                                      // 0x03A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_PlayerID_to_kick_3;             // 0x03A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_21;                   // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A9[0x7];                                      // 0x03A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_6;               // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameState_GunFight_C*               K2Node_DynamicCast_AsBP_Game_State_Gun_Fight_6;    // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_13;                    // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_22;                   // 0x03C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_VotedToKick;                    // 0x03C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x03C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x03C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C5[0x3];                                      // 0x03C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_4;                // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameMode_GunFight_C*                K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight_4;     // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_14;                    // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bMarkerEnabled;                 // 0x03D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DA[0x2];                                      // 0x03DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_PlayerID_to_kick_2;             // 0x03DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerState_GunFight_C*             K2Node_DynamicCast_AsBP_Player_State_Gun_Fight_1;  // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_15;                    // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E9[0x7];                                      // 0x03E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_Teams_C*                K2Node_DynamicCast_AsBP_Player_State_Teams;        // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_16;                    // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F9[0x3];                                      // 0x03F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Get_Team_Index_Index;                     // 0x03FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_PlayerState_Teams_C*>        CallFunc_Get_Members_Member_States;                // 0x0400(0x0010)(ReferenceParm)
	class ABP_PlayerState_Teams_C*                CallFunc_Array_Get_Item;                           // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_23;                   // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x0419(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41A[0x2];                                      // 0x041A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x041C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_5;                // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x0428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_429[0x7];                                      // 0x0429(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameMode_GunFight_C*                K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight_5;     // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_17;                    // 0x0438(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_5;          // 0x0439(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43A[0x6];                                      // 0x043A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_6;                // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameMode_GunFight_C*                K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight_6;     // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_18;                    // 0x0450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_451[0x7];                                      // 0x0451(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetComponent*                       CallFunc_Array_Get_Item_1;                         // 0x0458(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_24;                   // 0x0460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_461[0x7];                                      // 0x0461(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x0468(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_TvT_PlayerWidget_C*                 K2Node_DynamicCast_AsUI_Tv_T_Player_Widget;        // 0x0470(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_19;                    // 0x0478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_479[0x3];                                      // 0x0479(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x047C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0481(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_25;                   // 0x0482(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_483[0x5];                                      // 0x0483(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_7;               // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x0490(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_494[0x4];                                      // 0x0494(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameState_GunFight_C*               K2Node_DynamicCast_AsBP_Game_State_Gun_Fight_7;    // 0x0498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_20;                    // 0x04A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x04A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A2[0x6];                                      // 0x04A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x04A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x04B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x04C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_ToBeKicked_1;                   // 0x04CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_attempted;                      // 0x04CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_6;          // 0x04CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_26;                   // 0x04CF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AHumanPlayerController*                 CallFunc_GetFlameController_ReturnValue;           // 0x04D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_AFK_Check_C*                        CallFunc_Create_ReturnValue_10;                    // 0x04D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFlameWidget*                           K2Node_CustomEvent_FlameWidget;                    // 0x04E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_AFK_Check_C*                        K2Node_DynamicCast_AsUI_AFK_Check;                 // 0x04E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_21;                    // 0x04F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_ToBeKicked;                     // 0x04F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F2[0x2];                                      // 0x04F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_PlayerID;                       // 0x04F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_PlayerName;                     // 0x04F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AHumanPlayerController*                 CallFunc_GetFlameController_ReturnValue_1;         // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0510(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_511[0x7];                                      // 0x0511(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_AFK_CheckResult_C*                  CallFunc_Create_ReturnValue_11;                    // 0x0518(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_ShouldDisplayAFKCheck;          // 0x0520(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_Hide;                                 // 0x0521(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_27;                   // 0x0522(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0523(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_524[0x4];                                      // 0x0524(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Located_Actor_1;                // 0x0528(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_Located_Actor;                  // 0x0530(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_8;               // 0x0538(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameState_GunFight_C*               K2Node_DynamicCast_AsBP_Game_State_Gun_Fight_8;    // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_22;                    // 0x0548(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_549[0x3];                                      // 0x0549(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x054C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_New_Invincibility;              // 0x0550(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_551[0x7];                                      // 0x0551(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0558(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Character_Teams_C*                  K2Node_DynamicCast_AsBP_Character_Teams;           // 0x0560(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_23;                    // 0x0568(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_569[0x7];                                      // 0x0569(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_C*                        K2Node_CustomEvent_Possessed_Character;            // 0x0570(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Character_Teams_C*                  K2Node_DynamicCast_AsBP_Character_Teams_1;         // 0x0578(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_24;                    // 0x0580(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_28;                   // 0x0581(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_29;                   // 0x0582(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_583[0x5];                                      // 0x0583(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_7;                // 0x0588(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameMode_GunFight_C*                K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight_7;     // 0x0590(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_25;                    // 0x0598(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetInvincibility_ReturnValue;             // 0x0599(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetInvincibility_ReturnValue_1;           // 0x059A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59B[0x5];                                      // 0x059B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_C*                        K2Node_CustomEvent_Character_to_mark;              // 0x05A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_30;                   // 0x05A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A9[0x3];                                      // 0x05A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x05AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_1;                   // 0x05B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B1[0x3];                                      // 0x05B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x05B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Character_C*                        K2Node_CustomEvent_Marked_character;               // 0x05B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_31;                   // 0x05C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_32;                   // 0x05C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C2[0x6];                                      // 0x05C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_8;                // 0x05C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameMode_GunFight_C*                K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight_8;     // 0x05D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_26;                    // 0x05D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D9[0x7];                                      // 0x05D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetComponent*                       CallFunc_Array_Get_Item_2;                         // 0x05E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_33;                   // 0x05E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E9[0x7];                                      // 0x05E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue_1;        // 0x05F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_TvT_PlayerWidget_C*                 K2Node_DynamicCast_AsUI_Tv_T_Player_Widget_1;      // 0x05F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_27;                    // 0x0600(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_601[0x3];                                      // 0x0601(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0604(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0608(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0609(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x060A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_ByteByte_ReturnValue;                // 0x060B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_34;                   // 0x060C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60D[0x3];                                      // 0x060D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_9;                // 0x0610(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_7;          // 0x0618(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_619[0x7];                                      // 0x0619(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameMode_GunFight_C*                K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight_9;     // 0x0620(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_28;                    // 0x0628(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_629[0x7];                                      // 0x0629(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_C*                        K2Node_Event_Possessed_Character;                  // 0x0630(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Character_Teams_C*                  K2Node_DynamicCast_AsBP_Character_Teams_2;         // 0x0638(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_29;                    // 0x0640(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_641[0x7];                                      // 0x0641(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetComponent*                       CallFunc_Array_Get_Item_3;                         // 0x0648(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue_2;        // 0x0650(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0658(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_35;                   // 0x065C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x065D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_36;                   // 0x065E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65F[0x1];                                      // 0x065F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_GunFight_KickTeamkiller_C*          CallFunc_Create_ReturnValue_12;                    // 0x0660(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerCharacter*                  CallFunc_GetHumanCharacter_ReturnValue;            // 0x0668(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_37;                   // 0x0670(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_671[0x7];                                      // 0x0671(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_10;               // 0x0678(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameMode_GunFight_C*                K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight_10;    // 0x0680(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_30;                    // 0x0688(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_689[0x7];                                      // 0x0689(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_Match_ID;                       // 0x0690(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x06A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFlameGameInstance*                     K2Node_DynamicCast_AsFlame_Game_Instance;          // 0x06A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_31;                    // 0x06B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B1[0x3];                                      // 0x06B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x06B4(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_6C4[0x4];                                      // 0x06C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x06C8(0x0008)(NoDestructor, HasGetValueTypeHash)
	TArray<class UUI_SelectionWheel_C*>           CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x06D0(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UUI_SelectionWheel_C*                   CallFunc_Array_Get_Item_4;                         // 0x06E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x06E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x06EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6ED[0x3];                                      // 0x06ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x06F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFlameHUD*                              K2Node_DynamicCast_AsFlame_HUD;                    // 0x06F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_32;                    // 0x0700(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_701[0x3];                                      // 0x0701(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_LoadoutIndex_4;                 // 0x0704(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_Crosshair_C*                        K2Node_DynamicCast_AsUI_Crosshair;                 // 0x0708(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_33;                    // 0x0710(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_711[0x7];                                      // 0x0711(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_11;               // 0x0718(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameMode_GunFight_C*                K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight_11;    // 0x0720(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_34;                    // 0x0728(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_38;                   // 0x0729(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72A[0x2];                                      // 0x072A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_LoadoutIndex_3;                 // 0x072C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGunFight_LoadoutState                        K2Node_CustomEvent_State;                          // 0x0730(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_ThisPlayerLockedTheSlot;        // 0x0731(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_732[0x2];                                      // 0x0732(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0734(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_39;                   // 0x0744(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_745[0x3];                                      // 0x0745(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0748(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_40;                   // 0x0750(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_751[0x3];                                      // 0x0751(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_LoadoutIndex_2;                 // 0x0754(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_41;                   // 0x0758(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_759[0x3];                                      // 0x0759(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_TicketCount;                    // 0x075C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_9;               // 0x0760(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameState_GunFight_C*               K2Node_DynamicCast_AsBP_Game_State_Gun_Fight_9;    // 0x0768(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_35;                    // 0x0770(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_42;                   // 0x0771(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_772[0x6];                                      // 0x0772(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_GunFightLoadouts_S12                K2Node_CustomEvent_LoadoutInfo;                    // 0x0778(0x0028)(HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_1;                 // 0x07A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_43;                   // 0x07A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A9[0x7];                                      // 0x07A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_GunFight_C*               K2Node_DynamicCast_AsBP_Character_Gun_Fight;       // 0x07B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_36;                    // 0x07B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_44;                   // 0x07B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7BA[0x6];                                      // 0x07BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_MatchId;                        // 0x07C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_LoadoutIndex_1;                 // 0x07D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_LockBroken;                     // 0x07D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_UsedTicket;                     // 0x07D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D6[0x2];                                      // 0x07D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UEventSystem*                           CallFunc_GetEventSystem_ReturnValue;               // 0x07D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_EventSystem_C>    K2Node_DynamicCast_AsBPI_Event_System;             // 0x07E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_37;                    // 0x07F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7F1[0x7];                                      // 0x07F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_EventSystem_C*                      CallFunc_Get_BP_event_system_Event_system;         // 0x07F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGunFight_LoadoutState                        Temp_byte_Variable;                                // 0x0800(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_45;                   // 0x0801(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_802[0x2];                                      // 0x0802(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_LoadoutIndex;                   // 0x0804(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_PlayerCount;                    // 0x0808(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x080C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EGunFight_LoadoutState                        K2Node_Select_Default;                             // 0x080D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_46;                   // 0x080E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_80F[0x1];                                      // 0x080F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_GunFight_C*             K2Node_DynamicCast_AsBP_Player_State_Gun_Fight_2;  // 0x0810(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_38;                    // 0x0818(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_819[0x3];                                      // 0x0819(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_PlayerID_to_kick_1;             // 0x081C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_12;               // 0x0820(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameMode_GunFight_C*                K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight_12;    // 0x0828(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_39;                    // 0x0830(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_831[0x7];                                      // 0x0831(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_GunFight_C*             K2Node_DynamicCast_AsBP_Player_State_Gun_Fight_3;  // 0x0838(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_40;                    // 0x0840(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_47;                   // 0x0841(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_842[0x6];                                      // 0x0842(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_PlayerState_Teams_C*>        CallFunc_Get_Members_Member_States_1;              // 0x0848(0x0010)(ReferenceParm)
	class ABP_PlayerState_Teams_C*                CallFunc_Array_Get_Item_5;                         // 0x0858(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x0860(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_864[0x4];                                      // 0x0864(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_GunFight_C*             K2Node_DynamicCast_AsBP_Player_State_Gun_Fight_4;  // 0x0868(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_41;                    // 0x0870(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x0871(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x0872(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_873[0x1];                                      // 0x0873(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Get_Team_Index_Index_1;                   // 0x0874(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsActiveKickVoting_ReturnValue;        // 0x0878(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_48;                   // 0x0879(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x087A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x087B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87C[0x4];                                      // 0x087C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_Teams_C*                K2Node_DynamicCast_AsBP_Player_State_Teams_1;      // 0x0880(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_42;                    // 0x0888(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_889[0x7];                                      // 0x0889(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0890(0x0030)(IsPlainOldData, NoDestructor)
	class UWidgetComponent*                       CallFunc_AddComponent_ReturnValue;                 // 0x08C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue_3;        // 0x08C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ABP_Character_C* Possessed_Character)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x08D0(0x0010)(ZeroConstructor, NoDestructor)
	class UUI_TvT_PlayerWidget_C*                 K2Node_DynamicCast_AsUI_Tv_T_Player_Widget_2;      // 0x08E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_43;                    // 0x08E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8E9[0x3];                                      // 0x08E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x08EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x08F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMessageBoxAction                             K2Node_CustomEvent_Result;                         // 0x08F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x08F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8F3[0x5];                                      // 0x08F3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UFlameGameInstance*                     CallFunc_GetFlameGameInstance_ReturnValue;         // 0x08F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_49;                   // 0x0900(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_901[0x7];                                      // 0x0901(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GameInstance_C*                     K2Node_DynamicCast_AsBP_Game_Instance;             // 0x0908(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_44;                    // 0x0910(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAssignedSkinsFromCloud_ReturnValue;    // 0x0911(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_912[0x2];                                      // 0x0912(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_PlayerID_to_kick;               // 0x0914(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0918(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_919[0x3];                                      // 0x0919(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x091C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0920(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UFlameWidget* FlameWidget)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0924(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_934[0x4];                                      // 0x0934(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_GunFight_C*             K2Node_DynamicCast_AsBP_Player_State_Gun_Fight_5;  // 0x0938(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_45;                    // 0x0940(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_50;                   // 0x0941(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0942(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_51;                   // 0x0943(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight) == 0x000010, "Wrong alignment on BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight");
static_assert(sizeof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight) == 0x000950, "Wrong size on BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, EntryPoint) == 0x000000, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_AsBP_Game_State_Gun_Fight) == 0x000010, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_AsBP_Game_State_Gun_Fight' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, Temp_bool_True_if_break_was_hit_Variable) == 0x000024, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, Temp_int_Loop_Counter_Variable_1) == 0x00002C, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_Add_IntInt_ReturnValue_1) == 0x000030, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_GetGameState_ReturnValue_1) == 0x000038, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_AsBP_Game_State_Gun_Fight_1) == 0x000048, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_AsBP_Game_State_Gun_Fight_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_GetGameMode_ReturnValue) == 0x000058, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight) == 0x000060, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_GetGameState_ReturnValue_2) == 0x000070, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_GetGameState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_AsBP_Game_State_Gun_Fight_2) == 0x000078, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_AsBP_Game_State_Gun_Fight_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_bSuccess_3) == 0x000080, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_IsValid_ReturnValue_1) == 0x000081, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_GetGameState_ReturnValue_3) == 0x000088, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_GetGameState_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_AsBP_Game_State_Gun_Fight_3) == 0x000090, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_AsBP_Game_State_Gun_Fight_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_bSuccess_4) == 0x000098, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000099, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_ScoreEvent) == 0x00009C, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_ScoreEvent' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_GetGameState_ReturnValue_4) == 0x0000A8, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_GetGameState_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_AsBP_Game_State_Gun_Fight_4) == 0x0000B0, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_AsBP_Game_State_Gun_Fight_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_bSuccess_5) == 0x0000B8, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_SettingID) == 0x0000BC, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_SettingID' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_CurrentID) == 0x0000C0, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_CurrentID' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_NewID) == 0x0000C4, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_NewID' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_MaxID) == 0x0000C8, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_MaxID' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_Conv_IntToString_ReturnValue) == 0x0000D0, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_Concat_StrStr_ReturnValue) == 0x0000E0, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_LocalPlayerWins) == 0x0000F0, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_LocalPlayerWins' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_Is_Attacker_Is_Attacker) == 0x0000F1, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_Is_Attacker_Is_Attacker' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_BooleanAND_ReturnValue) == 0x0000F2, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_IsValid_ReturnValue_2) == 0x0000F3, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_IsDedicatedServer_ReturnValue) == 0x0000F4, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_RoundsToWin) == 0x0000F8, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_RoundsToWin' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_Title) == 0x000100, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_Title' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_Reason) == 0x000118, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_Reason' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_Type) == 0x000130, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_Type' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_Round_Time_1) == 0x000134, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_Round_Time_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_Attackers_Won_Rounds_1) == 0x000138, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_Attackers_Won_Rounds_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_Defenders_Won_Rounds_1) == 0x00013C, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_Defenders_Won_Rounds_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_IsValid_ReturnValue_3) == 0x000140, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_AsBP_Player_State_Gun_Fight) == 0x000148, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_AsBP_Player_State_Gun_Fight' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_bSuccess_6) == 0x000150, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_IsValid_ReturnValue_4) == 0x000151, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_IsValid_ReturnValue_5) == 0x000152, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x000153, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_Attackers_Won_Rounds) == 0x000154, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_Attackers_Won_Rounds' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_Defenders_Won_Rounds) == 0x000158, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_Defenders_Won_Rounds' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_GetGameState_ReturnValue_5) == 0x000160, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_GetGameState_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_AsBP_Game_State_Gun_Fight_5) == 0x000168, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_AsBP_Game_State_Gun_Fight_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_bSuccess_7) == 0x000170, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_GetGameMode_ReturnValue_1) == 0x000178, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_GetGameMode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight_1) == 0x000180, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_bSuccess_8) == 0x000188, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_Create_ReturnValue) == 0x000190, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_Create_ReturnValue_1) == 0x000198, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_IsDedicatedServer_ReturnValue_2) == 0x0001A0, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_IsDedicatedServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_IsValid_ReturnValue_6) == 0x0001A1, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_Create_ReturnValue_2) == 0x0001A8, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_Create_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_IsValid_ReturnValue_7) == 0x0001B0, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_Pre_RoundStart) == 0x0001B4, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_Pre_RoundStart' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_Create_ReturnValue_3) == 0x0001B8, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_Create_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_IsValid_ReturnValue_8) == 0x0001C0, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_IsValid_ReturnValue_9) == 0x0001C1, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_IsValid_ReturnValue_10) == 0x0001C2, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_Time) == 0x0001C4, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_Time' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_All_Connected) == 0x0001C8, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_All_Connected' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_GetGameMode_ReturnValue_2) == 0x0001D0, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_GetGameMode_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_Round_Time) == 0x0001D8, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_Round_Time' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_Is_Objective_Phase) == 0x0001DC, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_Is_Objective_Phase' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight_2) == 0x0001E0, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_bSuccess_9) == 0x0001E8, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, Temp_bool_Variable) == 0x0001E9, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_Round_Starts_In_1) == 0x0001EC, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_Round_Starts_In_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_IsDedicatedServer_ReturnValue_3) == 0x0001F0, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_IsDedicatedServer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_IsValid_ReturnValue_11) == 0x0001F1, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, Temp_int_Array_Index_Variable_1) == 0x0001F4, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_IsValid_ReturnValue_12) == 0x0001F8, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_Create_ReturnValue_4) == 0x000200, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_Create_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_Event_Killer) == 0x000208, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_Event_Killer' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_Event_Victim) == 0x000210, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_Event_Victim' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_Event_Instigating_Item) == 0x000218, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_Event_Instigating_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_Event_Headshot) == 0x000220, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_Event_Headshot' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_Event_Teamkill) == 0x000221, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_Event_Teamkill' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, Temp_int_Loop_Counter_Variable_2) == 0x000224, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_IsValid_ReturnValue_13) == 0x000228, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_IsValid_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_Add_IntInt_ReturnValue_2) == 0x00022C, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_AsBP_Player_State) == 0x000230, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_AsBP_Player_State' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_bSuccess_10) == 0x000238, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, Temp_int_Array_Index_Variable_2) == 0x00023C, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_IsDedicatedServer_ReturnValue_4) == 0x000240, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_IsDedicatedServer_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_Pre_Round_Time) == 0x000244, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_Pre_Round_Time' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_IsValid_ReturnValue_14) == 0x000248, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_IsValid_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_Create_ReturnValue_5) == 0x000250, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_Create_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_AsBP_Player_State_1) == 0x000258, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_AsBP_Player_State_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_bSuccess_11) == 0x000260, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_FindTeammates_TeammatesPlayerStates) == 0x000268, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_FindTeammates_TeammatesPlayerStates' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_IsValid_ReturnValue_15) == 0x000278, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_IsValid_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_Array_Contains_ReturnValue) == 0x000279, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_RoundStartsIn) == 0x00027C, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_RoundStartsIn' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_IsValid_ReturnValue_16) == 0x000280, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_IsValid_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_IsValid_ReturnValue_17) == 0x000281, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_IsValid_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_Create_ReturnValue_6) == 0x000288, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_Create_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, Temp_int_Array_Index_Variable_3) == 0x000290, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_IsValid_ReturnValue_18) == 0x000294, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_IsValid_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_Create_ReturnValue_7) == 0x000298, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_Create_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_PreRoundTime) == 0x0002A0, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_PreRoundTime' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_IsValid_ReturnValue_19) == 0x0002A4, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_IsValid_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_Create_ReturnValue_8) == 0x0002A8, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_Create_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_Round_Starts_In) == 0x0002B0, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_Round_Starts_In' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_IsValid_ReturnValue_20) == 0x0002B4, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_IsValid_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_GetGunfightUIHud_Valid) == 0x0002B5, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_GetGunfightUIHud_Valid' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_GetGunfightUIHud_HUD) == 0x0002B8, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_GetGunfightUIHud_HUD' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_PlayerID_to_kick_4) == 0x0002C0, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_PlayerID_to_kick_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_PlayerName_to_kick) == 0x0002C8, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_PlayerName_to_kick' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_PlayerID_of_Vote_Starter) == 0x0002D8, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_PlayerID_of_Vote_Starter' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_GetUniqueNetIdFromPlayerId_bIsActive) == 0x0002DC, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_GetUniqueNetIdFromPlayerId_bIsActive' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_GetUniqueNetIdFromPlayerId_ReturnValue) == 0x0002E0, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_GetUniqueNetIdFromPlayerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_Create_ReturnValue_9) == 0x000308, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_Create_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, Temp_int_Loop_Counter_Variable_3) == 0x000310, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_TotalCount_1) == 0x000314, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_TotalCount_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_YesCount_1) == 0x000318, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_YesCount_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_NoCount_1) == 0x00031C, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_NoCount_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_Add_IntInt_ReturnValue_3) == 0x000320, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_VotedToKick_1) == 0x000324, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_VotedToKick_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_GetGameMode_ReturnValue_3) == 0x000328, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_GetGameMode_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight_3) == 0x000330, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_bSuccess_12) == 0x000338, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_MakeMap_Map) == 0x000340, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_MakeMap_Map' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_TotalCount) == 0x000390, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_TotalCount' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_YesCount) == 0x000394, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_YesCount' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_NoCount) == 0x000398, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_NoCount' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, Temp_int_Array_Index_Variable_4) == 0x00039C, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_bGotKicked) == 0x0003A0, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_bGotKicked' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_PlayerID_to_kick_3) == 0x0003A4, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_PlayerID_to_kick_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_IsValid_ReturnValue_21) == 0x0003A8, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_IsValid_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_GetGameState_ReturnValue_6) == 0x0003B0, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_GetGameState_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_AsBP_Game_State_Gun_Fight_6) == 0x0003B8, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_AsBP_Game_State_Gun_Fight_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_bSuccess_13) == 0x0003C0, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_bSuccess_13' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_IsValid_ReturnValue_22) == 0x0003C1, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_IsValid_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_VotedToKick) == 0x0003C2, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_VotedToKick' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0003C3, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x0003C4, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_GetGameMode_ReturnValue_4) == 0x0003C8, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_GetGameMode_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight_4) == 0x0003D0, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_bSuccess_14) == 0x0003D8, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_bSuccess_14' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_bMarkerEnabled) == 0x0003D9, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_bMarkerEnabled' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_PlayerID_to_kick_2) == 0x0003DC, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_PlayerID_to_kick_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_AsBP_Player_State_Gun_Fight_1) == 0x0003E0, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_AsBP_Player_State_Gun_Fight_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_bSuccess_15) == 0x0003E8, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_bSuccess_15' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_AsBP_Player_State_Teams) == 0x0003F0, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_AsBP_Player_State_Teams' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_bSuccess_16) == 0x0003F8, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_bSuccess_16' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_Get_Team_Index_Index) == 0x0003FC, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_Get_Team_Index_Index' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_Get_Members_Member_States) == 0x000400, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_Get_Members_Member_States' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_Array_Get_Item) == 0x000410, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_IsValid_ReturnValue_23) == 0x000418, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_IsValid_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x000419, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_Array_Length_ReturnValue) == 0x00041C, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_GetGameMode_ReturnValue_5) == 0x000420, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_GetGameMode_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, Temp_bool_True_if_break_was_hit_Variable_1) == 0x000428, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight_5) == 0x000430, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_bSuccess_17) == 0x000438, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_bSuccess_17' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_IsDedicatedServer_ReturnValue_5) == 0x000439, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_IsDedicatedServer_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_GetGameMode_ReturnValue_6) == 0x000440, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_GetGameMode_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight_6) == 0x000448, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_bSuccess_18) == 0x000450, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_bSuccess_18' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_Array_Get_Item_1) == 0x000458, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_IsValid_ReturnValue_24) == 0x000460, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_IsValid_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_GetUserWidgetObject_ReturnValue) == 0x000468, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_AsUI_Tv_T_Player_Widget) == 0x000470, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_AsUI_Tv_T_Player_Widget' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_bSuccess_19) == 0x000478, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_bSuccess_19' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_Array_Length_ReturnValue_1) == 0x00047C, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_Less_IntInt_ReturnValue) == 0x000480, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000481, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_IsValid_ReturnValue_25) == 0x000482, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_IsValid_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_GetGameState_ReturnValue_7) == 0x000488, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_GetGameState_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, Temp_int_Loop_Counter_Variable_4) == 0x000490, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_AsBP_Game_State_Gun_Fight_7) == 0x000498, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_AsBP_Game_State_Gun_Fight_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_bSuccess_20) == 0x0004A0, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_bSuccess_20' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_Less_IntInt_ReturnValue_1) == 0x0004A1, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x0004A8, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0004B8, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_Add_IntInt_ReturnValue_4) == 0x0004C8, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_ToBeKicked_1) == 0x0004CC, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_ToBeKicked_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_attempted) == 0x0004CD, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_attempted' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_IsDedicatedServer_ReturnValue_6) == 0x0004CE, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_IsDedicatedServer_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_IsValid_ReturnValue_26) == 0x0004CF, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_IsValid_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_GetFlameController_ReturnValue) == 0x0004D0, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_GetFlameController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_Create_ReturnValue_10) == 0x0004D8, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_Create_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_FlameWidget) == 0x0004E0, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_FlameWidget' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_AsUI_AFK_Check) == 0x0004E8, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_AsUI_AFK_Check' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_bSuccess_21) == 0x0004F0, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_bSuccess_21' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_ToBeKicked) == 0x0004F1, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_ToBeKicked' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_PlayerID) == 0x0004F4, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_PlayerID' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_PlayerName) == 0x0004F8, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_PlayerName' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_GetFlameController_ReturnValue_1) == 0x000508, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_GetFlameController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_Not_PreBool_ReturnValue) == 0x000510, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_Create_ReturnValue_11) == 0x000518, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_Create_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_ShouldDisplayAFKCheck) == 0x000520, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_ShouldDisplayAFKCheck' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_Event_Hide) == 0x000521, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_Event_Hide' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_IsValid_ReturnValue_27) == 0x000522, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_IsValid_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_IsServer_ReturnValue) == 0x000523, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_Located_Actor_1) == 0x000528, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_Located_Actor_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_Located_Actor) == 0x000530, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_Located_Actor' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_GetGameState_ReturnValue_8) == 0x000538, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_GetGameState_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_AsBP_Game_State_Gun_Fight_8) == 0x000540, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_AsBP_Game_State_Gun_Fight_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_bSuccess_22) == 0x000548, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_bSuccess_22' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, Temp_int_Array_Index_Variable_5) == 0x00054C, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_New_Invincibility) == 0x000550, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_New_Invincibility' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_K2_GetPawn_ReturnValue) == 0x000558, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_AsBP_Character_Teams) == 0x000560, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_AsBP_Character_Teams' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_bSuccess_23) == 0x000568, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_bSuccess_23' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_Possessed_Character) == 0x000570, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_Possessed_Character' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_AsBP_Character_Teams_1) == 0x000578, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_AsBP_Character_Teams_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_bSuccess_24) == 0x000580, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_bSuccess_24' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_IsValid_ReturnValue_28) == 0x000581, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_IsValid_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_IsValid_ReturnValue_29) == 0x000582, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_IsValid_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_GetGameMode_ReturnValue_7) == 0x000588, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_GetGameMode_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight_7) == 0x000590, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_bSuccess_25) == 0x000598, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_bSuccess_25' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_SetInvincibility_ReturnValue) == 0x000599, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_SetInvincibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_SetInvincibility_ReturnValue_1) == 0x00059A, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_SetInvincibility_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_Character_to_mark) == 0x0005A0, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_Character_to_mark' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_IsValid_ReturnValue_30) == 0x0005A8, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_IsValid_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, Temp_int_Loop_Counter_Variable_5) == 0x0005AC, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_IsServer_ReturnValue_1) == 0x0005B0, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_IsServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_Add_IntInt_ReturnValue_5) == 0x0005B4, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_Marked_character) == 0x0005B8, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_Marked_character' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_IsValid_ReturnValue_31) == 0x0005C0, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_IsValid_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_IsValid_ReturnValue_32) == 0x0005C1, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_IsValid_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_GetGameMode_ReturnValue_8) == 0x0005C8, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_GetGameMode_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight_8) == 0x0005D0, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_bSuccess_26) == 0x0005D8, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_bSuccess_26' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_Array_Get_Item_2) == 0x0005E0, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_IsValid_ReturnValue_33) == 0x0005E8, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_IsValid_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_GetUserWidgetObject_ReturnValue_1) == 0x0005F0, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_GetUserWidgetObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_AsUI_Tv_T_Player_Widget_1) == 0x0005F8, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_AsUI_Tv_T_Player_Widget_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_bSuccess_27) == 0x000600, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_bSuccess_27' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_Array_Length_ReturnValue_2) == 0x000604, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_Less_IntInt_ReturnValue_2) == 0x000608, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000609, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_Array_RemoveItem_ReturnValue) == 0x00060A, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_Less_ByteByte_ReturnValue) == 0x00060B, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_Less_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_IsValid_ReturnValue_34) == 0x00060C, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_IsValid_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_GetGameMode_ReturnValue_9) == 0x000610, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_GetGameMode_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_IsDedicatedServer_ReturnValue_7) == 0x000618, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_IsDedicatedServer_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight_9) == 0x000620, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_bSuccess_28) == 0x000628, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_bSuccess_28' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_Event_Possessed_Character) == 0x000630, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_Event_Possessed_Character' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_AsBP_Character_Teams_2) == 0x000638, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_AsBP_Character_Teams_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_bSuccess_29) == 0x000640, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_bSuccess_29' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_Array_Get_Item_3) == 0x000648, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_GetUserWidgetObject_ReturnValue_2) == 0x000650, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_GetUserWidgetObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_Array_Length_ReturnValue_3) == 0x000658, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_IsValid_ReturnValue_35) == 0x00065C, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_IsValid_ReturnValue_35' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_Less_IntInt_ReturnValue_3) == 0x00065D, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_IsValid_ReturnValue_36) == 0x00065E, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_IsValid_ReturnValue_36' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_Create_ReturnValue_12) == 0x000660, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_Create_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_GetHumanCharacter_ReturnValue) == 0x000668, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_GetHumanCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_IsValid_ReturnValue_37) == 0x000670, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_IsValid_ReturnValue_37' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_GetGameMode_ReturnValue_10) == 0x000678, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_GetGameMode_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight_10) == 0x000680, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_bSuccess_30) == 0x000688, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_bSuccess_30' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_Match_ID) == 0x000690, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_Match_ID' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_GetGameInstance_ReturnValue) == 0x0006A0, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_AsFlame_Game_Instance) == 0x0006A8, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_AsFlame_Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_bSuccess_31) == 0x0006B0, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_bSuccess_31' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CreateDelegate_OutputDelegate) == 0x0006B4, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0006C8, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x0006D0, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_Array_Get_Item_4) == 0x0006E0, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_Array_Length_ReturnValue_4) == 0x0006E8, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_Less_IntInt_ReturnValue_4) == 0x0006EC, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_GetHUD_ReturnValue) == 0x0006F0, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_AsFlame_HUD) == 0x0006F8, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_AsFlame_HUD' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_bSuccess_32) == 0x000700, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_bSuccess_32' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_LoadoutIndex_4) == 0x000704, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_LoadoutIndex_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_AsUI_Crosshair) == 0x000708, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_AsUI_Crosshair' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_bSuccess_33) == 0x000710, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_bSuccess_33' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_GetGameMode_ReturnValue_11) == 0x000718, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_GetGameMode_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight_11) == 0x000720, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight_11' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_bSuccess_34) == 0x000728, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_bSuccess_34' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_IsValid_ReturnValue_38) == 0x000729, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_IsValid_ReturnValue_38' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_LoadoutIndex_3) == 0x00072C, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_LoadoutIndex_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_State) == 0x000730, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_State' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_ThisPlayerLockedTheSlot) == 0x000731, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_ThisPlayerLockedTheSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CreateDelegate_OutputDelegate_1) == 0x000734, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_IsValid_ReturnValue_39) == 0x000744, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_IsValid_ReturnValue_39' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000748, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_IsValid_ReturnValue_40) == 0x000750, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_IsValid_ReturnValue_40' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_LoadoutIndex_2) == 0x000754, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_LoadoutIndex_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_IsValid_ReturnValue_41) == 0x000758, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_IsValid_ReturnValue_41' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_TicketCount) == 0x00075C, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_TicketCount' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_GetGameState_ReturnValue_9) == 0x000760, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_GetGameState_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_AsBP_Game_State_Gun_Fight_9) == 0x000768, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_AsBP_Game_State_Gun_Fight_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_bSuccess_35) == 0x000770, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_bSuccess_35' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_IsValid_ReturnValue_42) == 0x000771, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_IsValid_ReturnValue_42' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_LoadoutInfo) == 0x000778, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_LoadoutInfo' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_K2_GetPawn_ReturnValue_1) == 0x0007A0, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_K2_GetPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_IsValid_ReturnValue_43) == 0x0007A8, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_IsValid_ReturnValue_43' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_AsBP_Character_Gun_Fight) == 0x0007B0, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_AsBP_Character_Gun_Fight' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_bSuccess_36) == 0x0007B8, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_bSuccess_36' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_IsValid_ReturnValue_44) == 0x0007B9, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_IsValid_ReturnValue_44' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_MatchId) == 0x0007C0, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_MatchId' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_LoadoutIndex_1) == 0x0007D0, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_LoadoutIndex_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_LockBroken) == 0x0007D4, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_LockBroken' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_UsedTicket) == 0x0007D5, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_UsedTicket' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_GetEventSystem_ReturnValue) == 0x0007D8, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_GetEventSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_AsBPI_Event_System) == 0x0007E0, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_AsBPI_Event_System' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_bSuccess_37) == 0x0007F0, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_bSuccess_37' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_Get_BP_event_system_Event_system) == 0x0007F8, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_Get_BP_event_system_Event_system' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, Temp_byte_Variable) == 0x000800, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_IsValid_ReturnValue_45) == 0x000801, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_IsValid_ReturnValue_45' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_LoadoutIndex) == 0x000804, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_LoadoutIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_PlayerCount) == 0x000808, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_PlayerCount' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, Temp_bool_Variable_1) == 0x00080C, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_Select_Default) == 0x00080D, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_IsValid_ReturnValue_46) == 0x00080E, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_IsValid_ReturnValue_46' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_AsBP_Player_State_Gun_Fight_2) == 0x000810, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_AsBP_Player_State_Gun_Fight_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_bSuccess_38) == 0x000818, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_bSuccess_38' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_PlayerID_to_kick_1) == 0x00081C, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_PlayerID_to_kick_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_GetGameMode_ReturnValue_12) == 0x000820, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_GetGameMode_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight_12) == 0x000828, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight_12' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_bSuccess_39) == 0x000830, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_bSuccess_39' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_AsBP_Player_State_Gun_Fight_3) == 0x000838, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_AsBP_Player_State_Gun_Fight_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_bSuccess_40) == 0x000840, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_bSuccess_40' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_IsValid_ReturnValue_47) == 0x000841, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_IsValid_ReturnValue_47' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_Get_Members_Member_States_1) == 0x000848, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_Get_Members_Member_States_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_Array_Get_Item_5) == 0x000858, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_Array_Length_ReturnValue_5) == 0x000860, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_AsBP_Player_State_Gun_Fight_4) == 0x000868, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_AsBP_Player_State_Gun_Fight_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_bSuccess_41) == 0x000870, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_bSuccess_41' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_Less_IntInt_ReturnValue_5) == 0x000871, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x000872, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_Get_Team_Index_Index_1) == 0x000874, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_Get_Team_Index_Index_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_GetIsActiveKickVoting_ReturnValue) == 0x000878, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_GetIsActiveKickVoting_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_IsValid_ReturnValue_48) == 0x000879, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_IsValid_ReturnValue_48' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_Not_PreBool_ReturnValue_1) == 0x00087A, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_BooleanAND_ReturnValue_1) == 0x00087B, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_AsBP_Player_State_Teams_1) == 0x000880, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_AsBP_Player_State_Teams_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_bSuccess_42) == 0x000888, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_bSuccess_42' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_MakeTransform_ReturnValue) == 0x000890, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_AddComponent_ReturnValue) == 0x0008C0, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_GetUserWidgetObject_ReturnValue_3) == 0x0008C8, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_GetUserWidgetObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CreateDelegate_OutputDelegate_2) == 0x0008D0, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_AsUI_Tv_T_Player_Widget_2) == 0x0008E0, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_AsUI_Tv_T_Player_Widget_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_bSuccess_43) == 0x0008E8, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_bSuccess_43' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_Array_Add_ReturnValue) == 0x0008EC, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_K2_AttachToComponent_ReturnValue) == 0x0008F0, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_Result) == 0x0008F1, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_Result' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_SwitchEnum_CmpSuccess) == 0x0008F2, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_GetFlameGameInstance_ReturnValue) == 0x0008F8, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_GetFlameGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_IsValid_ReturnValue_49) == 0x000900, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_IsValid_ReturnValue_49' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_AsBP_Game_Instance) == 0x000908, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_AsBP_Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_bSuccess_44) == 0x000910, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_bSuccess_44' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_GetAssignedSkinsFromCloud_ReturnValue) == 0x000911, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_GetAssignedSkinsFromCloud_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CustomEvent_PlayerID_to_kick) == 0x000914, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CustomEvent_PlayerID_to_kick' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_Greater_IntInt_ReturnValue) == 0x000918, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_Subtract_IntInt_ReturnValue) == 0x00091C, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, Temp_int_Variable) == 0x000920, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_CreateDelegate_OutputDelegate_3) == 0x000924, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_AsBP_Player_State_Gun_Fight_5) == 0x000938, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_AsBP_Player_State_Gun_Fight_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, K2Node_DynamicCast_bSuccess_45) == 0x000940, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::K2Node_DynamicCast_bSuccess_45' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_IsValid_ReturnValue_50) == 0x000941, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_IsValid_ReturnValue_50' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000942, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight, CallFunc_IsValid_ReturnValue_51) == 0x000943, "Member 'BP_PlayerController_GunFight_C_ExecuteUbergraph_BP_PlayerController_GunFight::CallFunc_IsValid_ReturnValue_51' has a wrong offset!");

// Function BP_PlayerController_GunFight.BP_PlayerController_GunFight_C.Client_RequestVoteKick
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerController_GunFight_C_Client_RequestVoteKick final
{
public:
	int32                                         PlayerID_to_kick;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_GunFight_C_Client_RequestVoteKick) == 0x000004, "Wrong alignment on BP_PlayerController_GunFight_C_Client_RequestVoteKick");
static_assert(sizeof(BP_PlayerController_GunFight_C_Client_RequestVoteKick) == 0x000004, "Wrong size on BP_PlayerController_GunFight_C_Client_RequestVoteKick");
static_assert(offsetof(BP_PlayerController_GunFight_C_Client_RequestVoteKick, PlayerID_to_kick) == 0x000000, "Member 'BP_PlayerController_GunFight_C_Client_RequestVoteKick::PlayerID_to_kick' has a wrong offset!");

// Function BP_PlayerController_GunFight.BP_PlayerController_GunFight_C.CustomEvent_0
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerController_GunFight_C_CustomEvent_0 final
{
public:
	EMessageBoxAction                             Result;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_GunFight_C_CustomEvent_0) == 0x000001, "Wrong alignment on BP_PlayerController_GunFight_C_CustomEvent_0");
static_assert(sizeof(BP_PlayerController_GunFight_C_CustomEvent_0) == 0x000001, "Wrong size on BP_PlayerController_GunFight_C_CustomEvent_0");
static_assert(offsetof(BP_PlayerController_GunFight_C_CustomEvent_0, Result) == 0x000000, "Member 'BP_PlayerController_GunFight_C_CustomEvent_0::Result' has a wrong offset!");

// Function BP_PlayerController_GunFight.BP_PlayerController_GunFight_C.Server_RequestVoteKick
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerController_GunFight_C_Server_RequestVoteKick final
{
public:
	int32                                         PlayerID_to_kick;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_GunFight_C_Server_RequestVoteKick) == 0x000004, "Wrong alignment on BP_PlayerController_GunFight_C_Server_RequestVoteKick");
static_assert(sizeof(BP_PlayerController_GunFight_C_Server_RequestVoteKick) == 0x000004, "Wrong size on BP_PlayerController_GunFight_C_Server_RequestVoteKick");
static_assert(offsetof(BP_PlayerController_GunFight_C_Server_RequestVoteKick, PlayerID_to_kick) == 0x000000, "Member 'BP_PlayerController_GunFight_C_Server_RequestVoteKick::PlayerID_to_kick' has a wrong offset!");

// Function BP_PlayerController_GunFight.BP_PlayerController_GunFight_C.UpdateLoadoutWidgetPlayerCount
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerController_GunFight_C_UpdateLoadoutWidgetPlayerCount final
{
public:
	int32                                         LoadoutIndex;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayerCount;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_GunFight_C_UpdateLoadoutWidgetPlayerCount) == 0x000004, "Wrong alignment on BP_PlayerController_GunFight_C_UpdateLoadoutWidgetPlayerCount");
static_assert(sizeof(BP_PlayerController_GunFight_C_UpdateLoadoutWidgetPlayerCount) == 0x000008, "Wrong size on BP_PlayerController_GunFight_C_UpdateLoadoutWidgetPlayerCount");
static_assert(offsetof(BP_PlayerController_GunFight_C_UpdateLoadoutWidgetPlayerCount, LoadoutIndex) == 0x000000, "Member 'BP_PlayerController_GunFight_C_UpdateLoadoutWidgetPlayerCount::LoadoutIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_UpdateLoadoutWidgetPlayerCount, PlayerCount) == 0x000004, "Member 'BP_PlayerController_GunFight_C_UpdateLoadoutWidgetPlayerCount::PlayerCount' has a wrong offset!");

// Function BP_PlayerController_GunFight.BP_PlayerController_GunFight_C.BreakLockEventResult
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerController_GunFight_C_BreakLockEventResult final
{
public:
	int32                                         LoadoutIndex;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LockBroken;                                        // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          UsedTicket;                                        // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerController_GunFight_C_BreakLockEventResult) == 0x000004, "Wrong alignment on BP_PlayerController_GunFight_C_BreakLockEventResult");
static_assert(sizeof(BP_PlayerController_GunFight_C_BreakLockEventResult) == 0x000008, "Wrong size on BP_PlayerController_GunFight_C_BreakLockEventResult");
static_assert(offsetof(BP_PlayerController_GunFight_C_BreakLockEventResult, LoadoutIndex) == 0x000000, "Member 'BP_PlayerController_GunFight_C_BreakLockEventResult::LoadoutIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_BreakLockEventResult, LockBroken) == 0x000004, "Member 'BP_PlayerController_GunFight_C_BreakLockEventResult::LockBroken' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_BreakLockEventResult, UsedTicket) == 0x000005, "Member 'BP_PlayerController_GunFight_C_BreakLockEventResult::UsedTicket' has a wrong offset!");

// Function BP_PlayerController_GunFight.BP_PlayerController_GunFight_C.BlockCurrencyForInstantLockBreak
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerController_GunFight_C_BlockCurrencyForInstantLockBreak final
{
public:
	class FString                                 MatchID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_GunFight_C_BlockCurrencyForInstantLockBreak) == 0x000008, "Wrong alignment on BP_PlayerController_GunFight_C_BlockCurrencyForInstantLockBreak");
static_assert(sizeof(BP_PlayerController_GunFight_C_BlockCurrencyForInstantLockBreak) == 0x000010, "Wrong size on BP_PlayerController_GunFight_C_BlockCurrencyForInstantLockBreak");
static_assert(offsetof(BP_PlayerController_GunFight_C_BlockCurrencyForInstantLockBreak, MatchID) == 0x000000, "Member 'BP_PlayerController_GunFight_C_BlockCurrencyForInstantLockBreak::MatchID' has a wrong offset!");

// Function BP_PlayerController_GunFight.BP_PlayerController_GunFight_C.SetPickedLoadout
// 0x0028 (0x0028 - 0x0000)
struct BP_PlayerController_GunFight_C_SetPickedLoadout final
{
public:
	struct FS_GunFightLoadouts_S12                LoadoutInfo;                                       // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_GunFight_C_SetPickedLoadout) == 0x000008, "Wrong alignment on BP_PlayerController_GunFight_C_SetPickedLoadout");
static_assert(sizeof(BP_PlayerController_GunFight_C_SetPickedLoadout) == 0x000028, "Wrong size on BP_PlayerController_GunFight_C_SetPickedLoadout");
static_assert(offsetof(BP_PlayerController_GunFight_C_SetPickedLoadout, LoadoutInfo) == 0x000000, "Member 'BP_PlayerController_GunFight_C_SetPickedLoadout::LoadoutInfo' has a wrong offset!");

// Function BP_PlayerController_GunFight.BP_PlayerController_GunFight_C.UpdateTicketCount
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerController_GunFight_C_UpdateTicketCount final
{
public:
	int32                                         TicketCount;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_GunFight_C_UpdateTicketCount) == 0x000004, "Wrong alignment on BP_PlayerController_GunFight_C_UpdateTicketCount");
static_assert(sizeof(BP_PlayerController_GunFight_C_UpdateTicketCount) == 0x000004, "Wrong size on BP_PlayerController_GunFight_C_UpdateTicketCount");
static_assert(offsetof(BP_PlayerController_GunFight_C_UpdateTicketCount, TicketCount) == 0x000000, "Member 'BP_PlayerController_GunFight_C_UpdateTicketCount::TicketCount' has a wrong offset!");

// Function BP_PlayerController_GunFight.BP_PlayerController_GunFight_C.TryToBreakLock
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerController_GunFight_C_TryToBreakLock final
{
public:
	int32                                         LoadoutIndex;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_GunFight_C_TryToBreakLock) == 0x000004, "Wrong alignment on BP_PlayerController_GunFight_C_TryToBreakLock");
static_assert(sizeof(BP_PlayerController_GunFight_C_TryToBreakLock) == 0x000004, "Wrong size on BP_PlayerController_GunFight_C_TryToBreakLock");
static_assert(offsetof(BP_PlayerController_GunFight_C_TryToBreakLock, LoadoutIndex) == 0x000000, "Member 'BP_PlayerController_GunFight_C_TryToBreakLock::LoadoutIndex' has a wrong offset!");

// Function BP_PlayerController_GunFight.BP_PlayerController_GunFight_C.UpdateLoadoutState_Locally
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerController_GunFight_C_UpdateLoadoutState_Locally final
{
public:
	int32                                         LoadoutIndex;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGunFight_LoadoutState                        State;                                             // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ThisPlayerLockedTheSlot;                           // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerController_GunFight_C_UpdateLoadoutState_Locally) == 0x000004, "Wrong alignment on BP_PlayerController_GunFight_C_UpdateLoadoutState_Locally");
static_assert(sizeof(BP_PlayerController_GunFight_C_UpdateLoadoutState_Locally) == 0x000008, "Wrong size on BP_PlayerController_GunFight_C_UpdateLoadoutState_Locally");
static_assert(offsetof(BP_PlayerController_GunFight_C_UpdateLoadoutState_Locally, LoadoutIndex) == 0x000000, "Member 'BP_PlayerController_GunFight_C_UpdateLoadoutState_Locally::LoadoutIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_UpdateLoadoutState_Locally, State) == 0x000004, "Member 'BP_PlayerController_GunFight_C_UpdateLoadoutState_Locally::State' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_UpdateLoadoutState_Locally, ThisPlayerLockedTheSlot) == 0x000005, "Member 'BP_PlayerController_GunFight_C_UpdateLoadoutState_Locally::ThisPlayerLockedTheSlot' has a wrong offset!");

// Function BP_PlayerController_GunFight.BP_PlayerController_GunFight_C.TryLockingLoadout
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerController_GunFight_C_TryLockingLoadout final
{
public:
	int32                                         LoadoutIndex;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_GunFight_C_TryLockingLoadout) == 0x000004, "Wrong alignment on BP_PlayerController_GunFight_C_TryLockingLoadout");
static_assert(sizeof(BP_PlayerController_GunFight_C_TryLockingLoadout) == 0x000004, "Wrong size on BP_PlayerController_GunFight_C_TryLockingLoadout");
static_assert(offsetof(BP_PlayerController_GunFight_C_TryLockingLoadout, LoadoutIndex) == 0x000000, "Member 'BP_PlayerController_GunFight_C_TryLockingLoadout::LoadoutIndex' has a wrong offset!");

// Function BP_PlayerController_GunFight.BP_PlayerController_GunFight_C.Save Match ID on Client
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerController_GunFight_C_Save_Match_ID_on_Client final
{
public:
	class FString                                 Match_ID;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_GunFight_C_Save_Match_ID_on_Client) == 0x000008, "Wrong alignment on BP_PlayerController_GunFight_C_Save_Match_ID_on_Client");
static_assert(sizeof(BP_PlayerController_GunFight_C_Save_Match_ID_on_Client) == 0x000010, "Wrong size on BP_PlayerController_GunFight_C_Save_Match_ID_on_Client");
static_assert(offsetof(BP_PlayerController_GunFight_C_Save_Match_ID_on_Client, Match_ID) == 0x000000, "Member 'BP_PlayerController_GunFight_C_Save_Match_ID_on_Client::Match_ID' has a wrong offset!");

// Function BP_PlayerController_GunFight.BP_PlayerController_GunFight_C.PossessedServer
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerController_GunFight_C_PossessedServer final
{
public:
	class ABP_Character_C*                        Possessed_Character;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_GunFight_C_PossessedServer) == 0x000008, "Wrong alignment on BP_PlayerController_GunFight_C_PossessedServer");
static_assert(sizeof(BP_PlayerController_GunFight_C_PossessedServer) == 0x000008, "Wrong size on BP_PlayerController_GunFight_C_PossessedServer");
static_assert(offsetof(BP_PlayerController_GunFight_C_PossessedServer, Possessed_Character) == 0x000000, "Member 'BP_PlayerController_GunFight_C_PossessedServer::Possessed_Character' has a wrong offset!");

// Function BP_PlayerController_GunFight.BP_PlayerController_GunFight_C.Delete the Player widget
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerController_GunFight_C_Delete_the_Player_widget final
{
public:
	class ABP_Character_C*                        Marked_character;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_GunFight_C_Delete_the_Player_widget) == 0x000008, "Wrong alignment on BP_PlayerController_GunFight_C_Delete_the_Player_widget");
static_assert(sizeof(BP_PlayerController_GunFight_C_Delete_the_Player_widget) == 0x000008, "Wrong size on BP_PlayerController_GunFight_C_Delete_the_Player_widget");
static_assert(offsetof(BP_PlayerController_GunFight_C_Delete_the_Player_widget, Marked_character) == 0x000000, "Member 'BP_PlayerController_GunFight_C_Delete_the_Player_widget::Marked_character' has a wrong offset!");

// Function BP_PlayerController_GunFight.BP_PlayerController_GunFight_C.Create the Player widget
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerController_GunFight_C_Create_the_Player_widget final
{
public:
	class ABP_Character_C*                        Character_to_mark;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_GunFight_C_Create_the_Player_widget) == 0x000008, "Wrong alignment on BP_PlayerController_GunFight_C_Create_the_Player_widget");
static_assert(sizeof(BP_PlayerController_GunFight_C_Create_the_Player_widget) == 0x000008, "Wrong size on BP_PlayerController_GunFight_C_Create_the_Player_widget");
static_assert(offsetof(BP_PlayerController_GunFight_C_Create_the_Player_widget, Character_to_mark) == 0x000000, "Member 'BP_PlayerController_GunFight_C_Create_the_Player_widget::Character_to_mark' has a wrong offset!");

// Function BP_PlayerController_GunFight.BP_PlayerController_GunFight_C.Set Invincibility at Possesed
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerController_GunFight_C_Set_Invincibility_at_Possesed final
{
public:
	class ABP_Character_C*                        Possessed_Character;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_GunFight_C_Set_Invincibility_at_Possesed) == 0x000008, "Wrong alignment on BP_PlayerController_GunFight_C_Set_Invincibility_at_Possesed");
static_assert(sizeof(BP_PlayerController_GunFight_C_Set_Invincibility_at_Possesed) == 0x000008, "Wrong size on BP_PlayerController_GunFight_C_Set_Invincibility_at_Possesed");
static_assert(offsetof(BP_PlayerController_GunFight_C_Set_Invincibility_at_Possesed, Possessed_Character) == 0x000000, "Member 'BP_PlayerController_GunFight_C_Set_Invincibility_at_Possesed::Possessed_Character' has a wrong offset!");

// Function BP_PlayerController_GunFight.BP_PlayerController_GunFight_C.Set Invincibility
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerController_GunFight_C_Set_Invincibility final
{
public:
	bool                                          New_Invincibility;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerController_GunFight_C_Set_Invincibility) == 0x000001, "Wrong alignment on BP_PlayerController_GunFight_C_Set_Invincibility");
static_assert(sizeof(BP_PlayerController_GunFight_C_Set_Invincibility) == 0x000001, "Wrong size on BP_PlayerController_GunFight_C_Set_Invincibility");
static_assert(offsetof(BP_PlayerController_GunFight_C_Set_Invincibility, New_Invincibility) == 0x000000, "Member 'BP_PlayerController_GunFight_C_Set_Invincibility::New_Invincibility' has a wrong offset!");

// Function BP_PlayerController_GunFight.BP_PlayerController_GunFight_C.Remove Objective Marker
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerController_GunFight_C_Remove_Objective_Marker final
{
public:
	class AActor*                                 Located_Actor;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_GunFight_C_Remove_Objective_Marker) == 0x000008, "Wrong alignment on BP_PlayerController_GunFight_C_Remove_Objective_Marker");
static_assert(sizeof(BP_PlayerController_GunFight_C_Remove_Objective_Marker) == 0x000008, "Wrong size on BP_PlayerController_GunFight_C_Remove_Objective_Marker");
static_assert(offsetof(BP_PlayerController_GunFight_C_Remove_Objective_Marker, Located_Actor) == 0x000000, "Member 'BP_PlayerController_GunFight_C_Remove_Objective_Marker::Located_Actor' has a wrong offset!");

// Function BP_PlayerController_GunFight.BP_PlayerController_GunFight_C.Add Objective Marker
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerController_GunFight_C_Add_Objective_Marker final
{
public:
	class AActor*                                 Located_Actor;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_GunFight_C_Add_Objective_Marker) == 0x000008, "Wrong alignment on BP_PlayerController_GunFight_C_Add_Objective_Marker");
static_assert(sizeof(BP_PlayerController_GunFight_C_Add_Objective_Marker) == 0x000008, "Wrong size on BP_PlayerController_GunFight_C_Add_Objective_Marker");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_Objective_Marker, Located_Actor) == 0x000000, "Member 'BP_PlayerController_GunFight_C_Add_Objective_Marker::Located_Actor' has a wrong offset!");

// Function BP_PlayerController_GunFight.BP_PlayerController_GunFight_C.ReplicateAFK_Check
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerController_GunFight_C_ReplicateAFK_Check final
{
public:
	bool                                          ShouldDisplayAFKCheck;                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerController_GunFight_C_ReplicateAFK_Check) == 0x000001, "Wrong alignment on BP_PlayerController_GunFight_C_ReplicateAFK_Check");
static_assert(sizeof(BP_PlayerController_GunFight_C_ReplicateAFK_Check) == 0x000001, "Wrong size on BP_PlayerController_GunFight_C_ReplicateAFK_Check");
static_assert(offsetof(BP_PlayerController_GunFight_C_ReplicateAFK_Check, ShouldDisplayAFKCheck) == 0x000000, "Member 'BP_PlayerController_GunFight_C_ReplicateAFK_Check::ShouldDisplayAFKCheck' has a wrong offset!");

// Function BP_PlayerController_GunFight.BP_PlayerController_GunFight_C.ShowAFK_CheckResult
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerController_GunFight_C_ShowAFK_CheckResult final
{
public:
	bool                                          ToBeKicked;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PlayerId;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 PlayerName;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_GunFight_C_ShowAFK_CheckResult) == 0x000008, "Wrong alignment on BP_PlayerController_GunFight_C_ShowAFK_CheckResult");
static_assert(sizeof(BP_PlayerController_GunFight_C_ShowAFK_CheckResult) == 0x000018, "Wrong size on BP_PlayerController_GunFight_C_ShowAFK_CheckResult");
static_assert(offsetof(BP_PlayerController_GunFight_C_ShowAFK_CheckResult, ToBeKicked) == 0x000000, "Member 'BP_PlayerController_GunFight_C_ShowAFK_CheckResult::ToBeKicked' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ShowAFK_CheckResult, PlayerId) == 0x000004, "Member 'BP_PlayerController_GunFight_C_ShowAFK_CheckResult::PlayerId' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ShowAFK_CheckResult, PlayerName) == 0x000008, "Member 'BP_PlayerController_GunFight_C_ShowAFK_CheckResult::PlayerName' has a wrong offset!");

// Function BP_PlayerController_GunFight.BP_PlayerController_GunFight_C.OnClosedDelegate_Event_0
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerController_GunFight_C_OnClosedDelegate_Event_0 final
{
public:
	class UFlameWidget*                           FlameWidget;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_GunFight_C_OnClosedDelegate_Event_0) == 0x000008, "Wrong alignment on BP_PlayerController_GunFight_C_OnClosedDelegate_Event_0");
static_assert(sizeof(BP_PlayerController_GunFight_C_OnClosedDelegate_Event_0) == 0x000008, "Wrong size on BP_PlayerController_GunFight_C_OnClosedDelegate_Event_0");
static_assert(offsetof(BP_PlayerController_GunFight_C_OnClosedDelegate_Event_0, FlameWidget) == 0x000000, "Member 'BP_PlayerController_GunFight_C_OnClosedDelegate_Event_0::FlameWidget' has a wrong offset!");

// Function BP_PlayerController_GunFight.BP_PlayerController_GunFight_C.SendAFK_CheckResult
// 0x0002 (0x0002 - 0x0000)
struct BP_PlayerController_GunFight_C_SendAFK_CheckResult final
{
public:
	bool                                          ToBeKicked;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Attempted;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerController_GunFight_C_SendAFK_CheckResult) == 0x000001, "Wrong alignment on BP_PlayerController_GunFight_C_SendAFK_CheckResult");
static_assert(sizeof(BP_PlayerController_GunFight_C_SendAFK_CheckResult) == 0x000002, "Wrong size on BP_PlayerController_GunFight_C_SendAFK_CheckResult");
static_assert(offsetof(BP_PlayerController_GunFight_C_SendAFK_CheckResult, ToBeKicked) == 0x000000, "Member 'BP_PlayerController_GunFight_C_SendAFK_CheckResult::ToBeKicked' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_SendAFK_CheckResult, Attempted) == 0x000001, "Member 'BP_PlayerController_GunFight_C_SendAFK_CheckResult::Attempted' has a wrong offset!");

// Function BP_PlayerController_GunFight.BP_PlayerController_GunFight_C.MarkTeammateForVoteKick
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerController_GunFight_C_MarkTeammateForVoteKick final
{
public:
	bool                                          bMarkerEnabled;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PlayerID_to_kick;                                  // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_GunFight_C_MarkTeammateForVoteKick) == 0x000004, "Wrong alignment on BP_PlayerController_GunFight_C_MarkTeammateForVoteKick");
static_assert(sizeof(BP_PlayerController_GunFight_C_MarkTeammateForVoteKick) == 0x000008, "Wrong size on BP_PlayerController_GunFight_C_MarkTeammateForVoteKick");
static_assert(offsetof(BP_PlayerController_GunFight_C_MarkTeammateForVoteKick, bMarkerEnabled) == 0x000000, "Member 'BP_PlayerController_GunFight_C_MarkTeammateForVoteKick::bMarkerEnabled' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_MarkTeammateForVoteKick, PlayerID_to_kick) == 0x000004, "Member 'BP_PlayerController_GunFight_C_MarkTeammateForVoteKick::PlayerID_to_kick' has a wrong offset!");

// Function BP_PlayerController_GunFight.BP_PlayerController_GunFight_C.Client_SendInKickVote
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerController_GunFight_C_Client_SendInKickVote final
{
public:
	bool                                          VotedToKick;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerController_GunFight_C_Client_SendInKickVote) == 0x000001, "Wrong alignment on BP_PlayerController_GunFight_C_Client_SendInKickVote");
static_assert(sizeof(BP_PlayerController_GunFight_C_Client_SendInKickVote) == 0x000001, "Wrong size on BP_PlayerController_GunFight_C_Client_SendInKickVote");
static_assert(offsetof(BP_PlayerController_GunFight_C_Client_SendInKickVote, VotedToKick) == 0x000000, "Member 'BP_PlayerController_GunFight_C_Client_SendInKickVote::VotedToKick' has a wrong offset!");

// Function BP_PlayerController_GunFight.BP_PlayerController_GunFight_C.ShowKickVoteResult
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerController_GunFight_C_ShowKickVoteResult final
{
public:
	bool                                          bGotKicked;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PlayerID_to_kick;                                  // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_GunFight_C_ShowKickVoteResult) == 0x000004, "Wrong alignment on BP_PlayerController_GunFight_C_ShowKickVoteResult");
static_assert(sizeof(BP_PlayerController_GunFight_C_ShowKickVoteResult) == 0x000008, "Wrong size on BP_PlayerController_GunFight_C_ShowKickVoteResult");
static_assert(offsetof(BP_PlayerController_GunFight_C_ShowKickVoteResult, bGotKicked) == 0x000000, "Member 'BP_PlayerController_GunFight_C_ShowKickVoteResult::bGotKicked' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ShowKickVoteResult, PlayerID_to_kick) == 0x000004, "Member 'BP_PlayerController_GunFight_C_ShowKickVoteResult::PlayerID_to_kick' has a wrong offset!");

// Function BP_PlayerController_GunFight.BP_PlayerController_GunFight_C.ReplicateVoteCount
// 0x000C (0x000C - 0x0000)
struct BP_PlayerController_GunFight_C_ReplicateVoteCount final
{
public:
	int32                                         TotalCount;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         YesCount;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NoCount;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_GunFight_C_ReplicateVoteCount) == 0x000004, "Wrong alignment on BP_PlayerController_GunFight_C_ReplicateVoteCount");
static_assert(sizeof(BP_PlayerController_GunFight_C_ReplicateVoteCount) == 0x00000C, "Wrong size on BP_PlayerController_GunFight_C_ReplicateVoteCount");
static_assert(offsetof(BP_PlayerController_GunFight_C_ReplicateVoteCount, TotalCount) == 0x000000, "Member 'BP_PlayerController_GunFight_C_ReplicateVoteCount::TotalCount' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ReplicateVoteCount, YesCount) == 0x000004, "Member 'BP_PlayerController_GunFight_C_ReplicateVoteCount::YesCount' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_ReplicateVoteCount, NoCount) == 0x000008, "Member 'BP_PlayerController_GunFight_C_ReplicateVoteCount::NoCount' has a wrong offset!");

// Function BP_PlayerController_GunFight.BP_PlayerController_GunFight_C.Server_SendInKickVote
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerController_GunFight_C_Server_SendInKickVote final
{
public:
	bool                                          VotedToKick;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerController_GunFight_C_Server_SendInKickVote) == 0x000001, "Wrong alignment on BP_PlayerController_GunFight_C_Server_SendInKickVote");
static_assert(sizeof(BP_PlayerController_GunFight_C_Server_SendInKickVote) == 0x000001, "Wrong size on BP_PlayerController_GunFight_C_Server_SendInKickVote");
static_assert(offsetof(BP_PlayerController_GunFight_C_Server_SendInKickVote, VotedToKick) == 0x000000, "Member 'BP_PlayerController_GunFight_C_Server_SendInKickVote::VotedToKick' has a wrong offset!");

// Function BP_PlayerController_GunFight.BP_PlayerController_GunFight_C.UpdateVoteCount
// 0x000C (0x000C - 0x0000)
struct BP_PlayerController_GunFight_C_UpdateVoteCount final
{
public:
	int32                                         TotalCount;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         YesCount;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NoCount;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_GunFight_C_UpdateVoteCount) == 0x000004, "Wrong alignment on BP_PlayerController_GunFight_C_UpdateVoteCount");
static_assert(sizeof(BP_PlayerController_GunFight_C_UpdateVoteCount) == 0x00000C, "Wrong size on BP_PlayerController_GunFight_C_UpdateVoteCount");
static_assert(offsetof(BP_PlayerController_GunFight_C_UpdateVoteCount, TotalCount) == 0x000000, "Member 'BP_PlayerController_GunFight_C_UpdateVoteCount::TotalCount' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_UpdateVoteCount, YesCount) == 0x000004, "Member 'BP_PlayerController_GunFight_C_UpdateVoteCount::YesCount' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_UpdateVoteCount, NoCount) == 0x000008, "Member 'BP_PlayerController_GunFight_C_UpdateVoteCount::NoCount' has a wrong offset!");

// Function BP_PlayerController_GunFight.BP_PlayerController_GunFight_C.Add VoteKickUI
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerController_GunFight_C_Add_VoteKickUI final
{
public:
	int32                                         PlayerID_to_kick;                                  // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 PlayerName_to_kick;                                // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PlayerID_of_Vote_Starter;                          // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_GunFight_C_Add_VoteKickUI) == 0x000008, "Wrong alignment on BP_PlayerController_GunFight_C_Add_VoteKickUI");
static_assert(sizeof(BP_PlayerController_GunFight_C_Add_VoteKickUI) == 0x000020, "Wrong size on BP_PlayerController_GunFight_C_Add_VoteKickUI");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_VoteKickUI, PlayerID_to_kick) == 0x000000, "Member 'BP_PlayerController_GunFight_C_Add_VoteKickUI::PlayerID_to_kick' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_VoteKickUI, PlayerName_to_kick) == 0x000008, "Member 'BP_PlayerController_GunFight_C_Add_VoteKickUI::PlayerName_to_kick' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_VoteKickUI, PlayerID_of_Vote_Starter) == 0x000018, "Member 'BP_PlayerController_GunFight_C_Add_VoteKickUI::PlayerID_of_Vote_Starter' has a wrong offset!");

// Function BP_PlayerController_GunFight.BP_PlayerController_GunFight_C.UpdatePreRoundInputBlockTime
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerController_GunFight_C_UpdatePreRoundInputBlockTime final
{
public:
	int32                                         Round_Starts_In;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_GunFight_C_UpdatePreRoundInputBlockTime) == 0x000004, "Wrong alignment on BP_PlayerController_GunFight_C_UpdatePreRoundInputBlockTime");
static_assert(sizeof(BP_PlayerController_GunFight_C_UpdatePreRoundInputBlockTime) == 0x000004, "Wrong size on BP_PlayerController_GunFight_C_UpdatePreRoundInputBlockTime");
static_assert(offsetof(BP_PlayerController_GunFight_C_UpdatePreRoundInputBlockTime, Round_Starts_In) == 0x000000, "Member 'BP_PlayerController_GunFight_C_UpdatePreRoundInputBlockTime::Round_Starts_In' has a wrong offset!");

// Function BP_PlayerController_GunFight.BP_PlayerController_GunFight_C.ShowPreRoundCountdownInputBlock
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerController_GunFight_C_ShowPreRoundCountdownInputBlock final
{
public:
	int32                                         PreRoundTime;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_GunFight_C_ShowPreRoundCountdownInputBlock) == 0x000004, "Wrong alignment on BP_PlayerController_GunFight_C_ShowPreRoundCountdownInputBlock");
static_assert(sizeof(BP_PlayerController_GunFight_C_ShowPreRoundCountdownInputBlock) == 0x000004, "Wrong size on BP_PlayerController_GunFight_C_ShowPreRoundCountdownInputBlock");
static_assert(offsetof(BP_PlayerController_GunFight_C_ShowPreRoundCountdownInputBlock, PreRoundTime) == 0x000000, "Member 'BP_PlayerController_GunFight_C_ShowPreRoundCountdownInputBlock::PreRoundTime' has a wrong offset!");

// Function BP_PlayerController_GunFight.BP_PlayerController_GunFight_C.UpdateLoadoutPickerPreRoundTime
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerController_GunFight_C_UpdateLoadoutPickerPreRoundTime final
{
public:
	int32                                         RoundStartsIn;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_GunFight_C_UpdateLoadoutPickerPreRoundTime) == 0x000004, "Wrong alignment on BP_PlayerController_GunFight_C_UpdateLoadoutPickerPreRoundTime");
static_assert(sizeof(BP_PlayerController_GunFight_C_UpdateLoadoutPickerPreRoundTime) == 0x000004, "Wrong size on BP_PlayerController_GunFight_C_UpdateLoadoutPickerPreRoundTime");
static_assert(offsetof(BP_PlayerController_GunFight_C_UpdateLoadoutPickerPreRoundTime, RoundStartsIn) == 0x000000, "Member 'BP_PlayerController_GunFight_C_UpdateLoadoutPickerPreRoundTime::RoundStartsIn' has a wrong offset!");

// Function BP_PlayerController_GunFight.BP_PlayerController_GunFight_C.CreateLoadoutPicker
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerController_GunFight_C_CreateLoadoutPicker final
{
public:
	int32                                         PreMinusRound_Time;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_GunFight_C_CreateLoadoutPicker) == 0x000004, "Wrong alignment on BP_PlayerController_GunFight_C_CreateLoadoutPicker");
static_assert(sizeof(BP_PlayerController_GunFight_C_CreateLoadoutPicker) == 0x000004, "Wrong size on BP_PlayerController_GunFight_C_CreateLoadoutPicker");
static_assert(offsetof(BP_PlayerController_GunFight_C_CreateLoadoutPicker, PreMinusRound_Time) == 0x000000, "Member 'BP_PlayerController_GunFight_C_CreateLoadoutPicker::PreMinusRound_Time' has a wrong offset!");

// Function BP_PlayerController_GunFight.BP_PlayerController_GunFight_C.Update Round Start Countdown UI
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerController_GunFight_C_Update_Round_Start_Countdown_UI final
{
public:
	int32                                         Round_Starts_In;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_GunFight_C_Update_Round_Start_Countdown_UI) == 0x000004, "Wrong alignment on BP_PlayerController_GunFight_C_Update_Round_Start_Countdown_UI");
static_assert(sizeof(BP_PlayerController_GunFight_C_Update_Round_Start_Countdown_UI) == 0x000004, "Wrong size on BP_PlayerController_GunFight_C_Update_Round_Start_Countdown_UI");
static_assert(offsetof(BP_PlayerController_GunFight_C_Update_Round_Start_Countdown_UI, Round_Starts_In) == 0x000000, "Member 'BP_PlayerController_GunFight_C_Update_Round_Start_Countdown_UI::Round_Starts_In' has a wrong offset!");

// Function BP_PlayerController_GunFight.BP_PlayerController_GunFight_C.Set Round Time
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerController_GunFight_C_Set_Round_Time final
{
public:
	int32                                         Round_Time;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Objective_Phase;                                // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerController_GunFight_C_Set_Round_Time) == 0x000004, "Wrong alignment on BP_PlayerController_GunFight_C_Set_Round_Time");
static_assert(sizeof(BP_PlayerController_GunFight_C_Set_Round_Time) == 0x000008, "Wrong size on BP_PlayerController_GunFight_C_Set_Round_Time");
static_assert(offsetof(BP_PlayerController_GunFight_C_Set_Round_Time, Round_Time) == 0x000000, "Member 'BP_PlayerController_GunFight_C_Set_Round_Time::Round_Time' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Set_Round_Time, Is_Objective_Phase) == 0x000004, "Member 'BP_PlayerController_GunFight_C_Set_Round_Time::Is_Objective_Phase' has a wrong offset!");

// Function BP_PlayerController_GunFight.BP_PlayerController_GunFight_C.Start Countdown in Waiting for Match
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerController_GunFight_C_Start_Countdown_in_Waiting_for_Match final
{
public:
	int32                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          All_Connected;                                     // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerController_GunFight_C_Start_Countdown_in_Waiting_for_Match) == 0x000004, "Wrong alignment on BP_PlayerController_GunFight_C_Start_Countdown_in_Waiting_for_Match");
static_assert(sizeof(BP_PlayerController_GunFight_C_Start_Countdown_in_Waiting_for_Match) == 0x000008, "Wrong size on BP_PlayerController_GunFight_C_Start_Countdown_in_Waiting_for_Match");
static_assert(offsetof(BP_PlayerController_GunFight_C_Start_Countdown_in_Waiting_for_Match, Time) == 0x000000, "Member 'BP_PlayerController_GunFight_C_Start_Countdown_in_Waiting_for_Match::Time' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Start_Countdown_in_Waiting_for_Match, All_Connected) == 0x000004, "Member 'BP_PlayerController_GunFight_C_Start_Countdown_in_Waiting_for_Match::All_Connected' has a wrong offset!");

// Function BP_PlayerController_GunFight.BP_PlayerController_GunFight_C.Show Round Start Countdown UI
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerController_GunFight_C_Show_Round_Start_Countdown_UI final
{
public:
	int32                                         PreMinusRoundStart;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_GunFight_C_Show_Round_Start_Countdown_UI) == 0x000004, "Wrong alignment on BP_PlayerController_GunFight_C_Show_Round_Start_Countdown_UI");
static_assert(sizeof(BP_PlayerController_GunFight_C_Show_Round_Start_Countdown_UI) == 0x000004, "Wrong size on BP_PlayerController_GunFight_C_Show_Round_Start_Countdown_UI");
static_assert(offsetof(BP_PlayerController_GunFight_C_Show_Round_Start_Countdown_UI, PreMinusRoundStart) == 0x000000, "Member 'BP_PlayerController_GunFight_C_Show_Round_Start_Countdown_UI::PreMinusRoundStart' has a wrong offset!");

// Function BP_PlayerController_GunFight.BP_PlayerController_GunFight_C.Update Match Progress
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerController_GunFight_C_Update_Match_Progress final
{
public:
	int32                                         Attackers_Won_Rounds;                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Defenders_Won_Rounds;                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_GunFight_C_Update_Match_Progress) == 0x000004, "Wrong alignment on BP_PlayerController_GunFight_C_Update_Match_Progress");
static_assert(sizeof(BP_PlayerController_GunFight_C_Update_Match_Progress) == 0x000008, "Wrong size on BP_PlayerController_GunFight_C_Update_Match_Progress");
static_assert(offsetof(BP_PlayerController_GunFight_C_Update_Match_Progress, Attackers_Won_Rounds) == 0x000000, "Member 'BP_PlayerController_GunFight_C_Update_Match_Progress::Attackers_Won_Rounds' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Update_Match_Progress, Defenders_Won_Rounds) == 0x000004, "Member 'BP_PlayerController_GunFight_C_Update_Match_Progress::Defenders_Won_Rounds' has a wrong offset!");

// Function BP_PlayerController_GunFight.BP_PlayerController_GunFight_C.Show Match Progress UI
// 0x000C (0x000C - 0x0000)
struct BP_PlayerController_GunFight_C_Show_Match_Progress_UI final
{
public:
	int32                                         Round_Time;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Attackers_Won_Rounds;                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Defenders_Won_Rounds;                              // 0x0008(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_GunFight_C_Show_Match_Progress_UI) == 0x000004, "Wrong alignment on BP_PlayerController_GunFight_C_Show_Match_Progress_UI");
static_assert(sizeof(BP_PlayerController_GunFight_C_Show_Match_Progress_UI) == 0x00000C, "Wrong size on BP_PlayerController_GunFight_C_Show_Match_Progress_UI");
static_assert(offsetof(BP_PlayerController_GunFight_C_Show_Match_Progress_UI, Round_Time) == 0x000000, "Member 'BP_PlayerController_GunFight_C_Show_Match_Progress_UI::Round_Time' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Show_Match_Progress_UI, Attackers_Won_Rounds) == 0x000004, "Member 'BP_PlayerController_GunFight_C_Show_Match_Progress_UI::Attackers_Won_Rounds' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Show_Match_Progress_UI, Defenders_Won_Rounds) == 0x000008, "Member 'BP_PlayerController_GunFight_C_Show_Match_Progress_UI::Defenders_Won_Rounds' has a wrong offset!");

// Function BP_PlayerController_GunFight.BP_PlayerController_GunFight_C.Show Player Notification
// 0x0038 (0x0038 - 0x0000)
struct BP_PlayerController_GunFight_C_Show_Player_Notification final
{
public:
	class FText                                   Title;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Reason;                                            // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	ERaidNotificationType                         Type;                                              // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_GunFight_C_Show_Player_Notification) == 0x000008, "Wrong alignment on BP_PlayerController_GunFight_C_Show_Player_Notification");
static_assert(sizeof(BP_PlayerController_GunFight_C_Show_Player_Notification) == 0x000038, "Wrong size on BP_PlayerController_GunFight_C_Show_Player_Notification");
static_assert(offsetof(BP_PlayerController_GunFight_C_Show_Player_Notification, Title) == 0x000000, "Member 'BP_PlayerController_GunFight_C_Show_Player_Notification::Title' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Show_Player_Notification, Reason) == 0x000018, "Member 'BP_PlayerController_GunFight_C_Show_Player_Notification::Reason' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Show_Player_Notification, Type) == 0x000030, "Member 'BP_PlayerController_GunFight_C_Show_Player_Notification::Type' has a wrong offset!");

// Function BP_PlayerController_GunFight.BP_PlayerController_GunFight_C.Cheat_SetRoundsToWin
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerController_GunFight_C_Cheat_SetRoundsToWin final
{
public:
	int32                                         RoundsToWin;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_GunFight_C_Cheat_SetRoundsToWin) == 0x000004, "Wrong alignment on BP_PlayerController_GunFight_C_Cheat_SetRoundsToWin");
static_assert(sizeof(BP_PlayerController_GunFight_C_Cheat_SetRoundsToWin) == 0x000004, "Wrong size on BP_PlayerController_GunFight_C_Cheat_SetRoundsToWin");
static_assert(offsetof(BP_PlayerController_GunFight_C_Cheat_SetRoundsToWin, RoundsToWin) == 0x000000, "Member 'BP_PlayerController_GunFight_C_Cheat_SetRoundsToWin::RoundsToWin' has a wrong offset!");

// Function BP_PlayerController_GunFight.BP_PlayerController_GunFight_C.Cheat_SkipMatch
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerController_GunFight_C_Cheat_SkipMatch final
{
public:
	bool                                          LocalPlayerWins;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerController_GunFight_C_Cheat_SkipMatch) == 0x000001, "Wrong alignment on BP_PlayerController_GunFight_C_Cheat_SkipMatch");
static_assert(sizeof(BP_PlayerController_GunFight_C_Cheat_SkipMatch) == 0x000001, "Wrong size on BP_PlayerController_GunFight_C_Cheat_SkipMatch");
static_assert(offsetof(BP_PlayerController_GunFight_C_Cheat_SkipMatch, LocalPlayerWins) == 0x000000, "Member 'BP_PlayerController_GunFight_C_Cheat_SkipMatch::LocalPlayerWins' has a wrong offset!");

// Function BP_PlayerController_GunFight.BP_PlayerController_GunFight_C.Cheat_UpdateLocalWidgetSettingID_Display
// 0x000C (0x000C - 0x0000)
struct BP_PlayerController_GunFight_C_Cheat_UpdateLocalWidgetSettingID_Display final
{
public:
	int32                                         CurrentID;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewID;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxID;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_GunFight_C_Cheat_UpdateLocalWidgetSettingID_Display) == 0x000004, "Wrong alignment on BP_PlayerController_GunFight_C_Cheat_UpdateLocalWidgetSettingID_Display");
static_assert(sizeof(BP_PlayerController_GunFight_C_Cheat_UpdateLocalWidgetSettingID_Display) == 0x00000C, "Wrong size on BP_PlayerController_GunFight_C_Cheat_UpdateLocalWidgetSettingID_Display");
static_assert(offsetof(BP_PlayerController_GunFight_C_Cheat_UpdateLocalWidgetSettingID_Display, CurrentID) == 0x000000, "Member 'BP_PlayerController_GunFight_C_Cheat_UpdateLocalWidgetSettingID_Display::CurrentID' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Cheat_UpdateLocalWidgetSettingID_Display, NewID) == 0x000004, "Member 'BP_PlayerController_GunFight_C_Cheat_UpdateLocalWidgetSettingID_Display::NewID' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Cheat_UpdateLocalWidgetSettingID_Display, MaxID) == 0x000008, "Member 'BP_PlayerController_GunFight_C_Cheat_UpdateLocalWidgetSettingID_Display::MaxID' has a wrong offset!");

// Function BP_PlayerController_GunFight.BP_PlayerController_GunFight_C.Cheat_SetSettingID
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerController_GunFight_C_Cheat_SetSettingID final
{
public:
	int32                                         SettingID;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_GunFight_C_Cheat_SetSettingID) == 0x000004, "Wrong alignment on BP_PlayerController_GunFight_C_Cheat_SetSettingID");
static_assert(sizeof(BP_PlayerController_GunFight_C_Cheat_SetSettingID) == 0x000004, "Wrong size on BP_PlayerController_GunFight_C_Cheat_SetSettingID");
static_assert(offsetof(BP_PlayerController_GunFight_C_Cheat_SetSettingID, SettingID) == 0x000000, "Member 'BP_PlayerController_GunFight_C_Cheat_SetSettingID::SettingID' has a wrong offset!");

// Function BP_PlayerController_GunFight.BP_PlayerController_GunFight_C.Cheat_AddScore
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerController_GunFight_C_Cheat_AddScore final
{
public:
	class FName                                   ScoreEvent;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_GunFight_C_Cheat_AddScore) == 0x000004, "Wrong alignment on BP_PlayerController_GunFight_C_Cheat_AddScore");
static_assert(sizeof(BP_PlayerController_GunFight_C_Cheat_AddScore) == 0x000008, "Wrong size on BP_PlayerController_GunFight_C_Cheat_AddScore");
static_assert(offsetof(BP_PlayerController_GunFight_C_Cheat_AddScore, ScoreEvent) == 0x000000, "Member 'BP_PlayerController_GunFight_C_Cheat_AddScore::ScoreEvent' has a wrong offset!");

// Function BP_PlayerController_GunFight.BP_PlayerController_GunFight_C.Add or Remove Objective Marker
// 0x01A0 (0x01A0 - 0x0000)
struct BP_PlayerController_GunFight_C_Add_or_Remove_Objective_Marker final
{
public:
	class AActor*                                 Located_Actor;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Add;                                               // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EMapMarkerType                                Temp_byte_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMapMarkerType                                Temp_byte_Variable_1;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue_2;             // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_2;          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMapMarkerType                                K2Node_Select_Default;                             // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CustomMapMarker                     K2Node_MakeStruct_S_CustomMapMarker;               // 0x0088(0x0050)(HasGetValueTypeHash)
	struct FS_CustomMapMarker                     CallFunc_Map_Find_Value;                           // 0x00D8(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CustomMapMarker_Optimized           CallFunc_EncodeMapMarker_Map_Marker_Optimized;     // 0x0130(0x0038)(HasGetValueTypeHash)
	struct FS_CustomMapMarker_Optimized           CallFunc_EncodeMapMarker_Map_Marker_Optimized_1;   // 0x0168(0x0038)(HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_GunFight_C_Add_or_Remove_Objective_Marker) == 0x000008, "Wrong alignment on BP_PlayerController_GunFight_C_Add_or_Remove_Objective_Marker");
static_assert(sizeof(BP_PlayerController_GunFight_C_Add_or_Remove_Objective_Marker) == 0x0001A0, "Wrong size on BP_PlayerController_GunFight_C_Add_or_Remove_Objective_Marker");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_or_Remove_Objective_Marker, Located_Actor) == 0x000000, "Member 'BP_PlayerController_GunFight_C_Add_or_Remove_Objective_Marker::Located_Actor' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_or_Remove_Objective_Marker, Add) == 0x000008, "Member 'BP_PlayerController_GunFight_C_Add_or_Remove_Objective_Marker::Add' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_or_Remove_Objective_Marker, Temp_byte_Variable) == 0x000009, "Member 'BP_PlayerController_GunFight_C_Add_or_Remove_Objective_Marker::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_or_Remove_Objective_Marker, CallFunc_IsValid_ReturnValue) == 0x00000A, "Member 'BP_PlayerController_GunFight_C_Add_or_Remove_Objective_Marker::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_or_Remove_Objective_Marker, Temp_byte_Variable_1) == 0x00000B, "Member 'BP_PlayerController_GunFight_C_Add_or_Remove_Objective_Marker::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_or_Remove_Objective_Marker, CallFunc_GetObjectClass_ReturnValue) == 0x000010, "Member 'BP_PlayerController_GunFight_C_Add_or_Remove_Objective_Marker::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_or_Remove_Objective_Marker, CallFunc_ClassIsChildOf_ReturnValue) == 0x000018, "Member 'BP_PlayerController_GunFight_C_Add_or_Remove_Objective_Marker::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_or_Remove_Objective_Marker, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00001C, "Member 'BP_PlayerController_GunFight_C_Add_or_Remove_Objective_Marker::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_or_Remove_Objective_Marker, CallFunc_GetDisplayName_ReturnValue) == 0x000028, "Member 'BP_PlayerController_GunFight_C_Add_or_Remove_Objective_Marker::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_or_Remove_Objective_Marker, CallFunc_Conv_StringToName_ReturnValue) == 0x000038, "Member 'BP_PlayerController_GunFight_C_Add_or_Remove_Objective_Marker::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_or_Remove_Objective_Marker, CallFunc_GetDisplayName_ReturnValue_1) == 0x000040, "Member 'BP_PlayerController_GunFight_C_Add_or_Remove_Objective_Marker::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_or_Remove_Objective_Marker, CallFunc_Conv_StringToName_ReturnValue_1) == 0x000050, "Member 'BP_PlayerController_GunFight_C_Add_or_Remove_Objective_Marker::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_or_Remove_Objective_Marker, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000058, "Member 'BP_PlayerController_GunFight_C_Add_or_Remove_Objective_Marker::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_or_Remove_Objective_Marker, Temp_bool_Variable) == 0x000064, "Member 'BP_PlayerController_GunFight_C_Add_or_Remove_Objective_Marker::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_or_Remove_Objective_Marker, CallFunc_GetDisplayName_ReturnValue_2) == 0x000068, "Member 'BP_PlayerController_GunFight_C_Add_or_Remove_Objective_Marker::CallFunc_GetDisplayName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_or_Remove_Objective_Marker, CallFunc_Conv_StringToName_ReturnValue_2) == 0x000078, "Member 'BP_PlayerController_GunFight_C_Add_or_Remove_Objective_Marker::CallFunc_Conv_StringToName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_or_Remove_Objective_Marker, K2Node_Select_Default) == 0x000080, "Member 'BP_PlayerController_GunFight_C_Add_or_Remove_Objective_Marker::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_or_Remove_Objective_Marker, K2Node_MakeStruct_S_CustomMapMarker) == 0x000088, "Member 'BP_PlayerController_GunFight_C_Add_or_Remove_Objective_Marker::K2Node_MakeStruct_S_CustomMapMarker' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_or_Remove_Objective_Marker, CallFunc_Map_Find_Value) == 0x0000D8, "Member 'BP_PlayerController_GunFight_C_Add_or_Remove_Objective_Marker::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_or_Remove_Objective_Marker, CallFunc_Map_Find_ReturnValue) == 0x000128, "Member 'BP_PlayerController_GunFight_C_Add_or_Remove_Objective_Marker::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_or_Remove_Objective_Marker, CallFunc_EncodeMapMarker_Map_Marker_Optimized) == 0x000130, "Member 'BP_PlayerController_GunFight_C_Add_or_Remove_Objective_Marker::CallFunc_EncodeMapMarker_Map_Marker_Optimized' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_or_Remove_Objective_Marker, CallFunc_EncodeMapMarker_Map_Marker_Optimized_1) == 0x000168, "Member 'BP_PlayerController_GunFight_C_Add_or_Remove_Objective_Marker::CallFunc_EncodeMapMarker_Map_Marker_Optimized_1' has a wrong offset!");

// Function BP_PlayerController_GunFight.BP_PlayerController_GunFight_C.Start Spectating
// 0x0270 (0x0270 - 0x0000)
struct BP_PlayerController_GunFight_C_Start_Spectating final
{
public:
	struct FTransform                             Spectator_Transform;                               // 0x0000(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class APlayerController*>              CallFunc_GetPlayerControllers_ReturnValue;         // 0x0048(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0xF];                                       // 0x0061(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0070(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D5[0xB];                                       // 0x00D5(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00E0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_Array_Get_Item;                           // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_1;                 // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_FreeCameraSpectator_C*              CallFunc_FinishSpawningActor_ReturnValue;          // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanCharacter*                        K2Node_DynamicCast_AsHuman_Character;              // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0xF];                                      // 0x0141(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x0150(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0180(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x018C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0198(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x01A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x01B0(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x01E0(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x026C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x026D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x026E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerController_GunFight_C_Start_Spectating) == 0x000010, "Wrong alignment on BP_PlayerController_GunFight_C_Start_Spectating");
static_assert(sizeof(BP_PlayerController_GunFight_C_Start_Spectating) == 0x000270, "Wrong size on BP_PlayerController_GunFight_C_Start_Spectating");
static_assert(offsetof(BP_PlayerController_GunFight_C_Start_Spectating, Spectator_Transform) == 0x000000, "Member 'BP_PlayerController_GunFight_C_Start_Spectating::Spectator_Transform' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Start_Spectating, CallFunc_IsServer_ReturnValue) == 0x000030, "Member 'BP_PlayerController_GunFight_C_Start_Spectating::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Start_Spectating, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'BP_PlayerController_GunFight_C_Start_Spectating::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Start_Spectating, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BP_PlayerController_GunFight_C_Start_Spectating::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Start_Spectating, CallFunc_K2_GetPawn_ReturnValue) == 0x000040, "Member 'BP_PlayerController_GunFight_C_Start_Spectating::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Start_Spectating, CallFunc_GetPlayerControllers_ReturnValue) == 0x000048, "Member 'BP_PlayerController_GunFight_C_Start_Spectating::CallFunc_GetPlayerControllers_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Start_Spectating, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'BP_PlayerController_GunFight_C_Start_Spectating::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Start_Spectating, CallFunc_Array_Length_ReturnValue) == 0x00005C, "Member 'BP_PlayerController_GunFight_C_Start_Spectating::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Start_Spectating, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'BP_PlayerController_GunFight_C_Start_Spectating::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Start_Spectating, CallFunc_GetTransform_ReturnValue) == 0x000070, "Member 'BP_PlayerController_GunFight_C_Start_Spectating::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Start_Spectating, Temp_bool_True_if_break_was_hit_Variable) == 0x0000A0, "Member 'BP_PlayerController_GunFight_C_Start_Spectating::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Start_Spectating, CallFunc_BreakTransform_Location) == 0x0000A4, "Member 'BP_PlayerController_GunFight_C_Start_Spectating::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Start_Spectating, CallFunc_BreakTransform_Rotation) == 0x0000B0, "Member 'BP_PlayerController_GunFight_C_Start_Spectating::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Start_Spectating, CallFunc_BreakTransform_Scale) == 0x0000BC, "Member 'BP_PlayerController_GunFight_C_Start_Spectating::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Start_Spectating, CallFunc_Add_VectorVector_ReturnValue) == 0x0000C8, "Member 'BP_PlayerController_GunFight_C_Start_Spectating::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Start_Spectating, CallFunc_Not_PreBool_ReturnValue) == 0x0000D4, "Member 'BP_PlayerController_GunFight_C_Start_Spectating::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Start_Spectating, CallFunc_MakeTransform_ReturnValue) == 0x0000E0, "Member 'BP_PlayerController_GunFight_C_Start_Spectating::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Start_Spectating, CallFunc_BooleanAND_ReturnValue) == 0x000110, "Member 'BP_PlayerController_GunFight_C_Start_Spectating::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Start_Spectating, Temp_int_Array_Index_Variable) == 0x000114, "Member 'BP_PlayerController_GunFight_C_Start_Spectating::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Start_Spectating, CallFunc_Array_Get_Item) == 0x000118, "Member 'BP_PlayerController_GunFight_C_Start_Spectating::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Start_Spectating, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000120, "Member 'BP_PlayerController_GunFight_C_Start_Spectating::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Start_Spectating, CallFunc_K2_GetPawn_ReturnValue_1) == 0x000128, "Member 'BP_PlayerController_GunFight_C_Start_Spectating::CallFunc_K2_GetPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Start_Spectating, CallFunc_FinishSpawningActor_ReturnValue) == 0x000130, "Member 'BP_PlayerController_GunFight_C_Start_Spectating::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Start_Spectating, K2Node_DynamicCast_AsHuman_Character) == 0x000138, "Member 'BP_PlayerController_GunFight_C_Start_Spectating::K2Node_DynamicCast_AsHuman_Character' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Start_Spectating, K2Node_DynamicCast_bSuccess) == 0x000140, "Member 'BP_PlayerController_GunFight_C_Start_Spectating::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Start_Spectating, CallFunc_GetTransform_ReturnValue_1) == 0x000150, "Member 'BP_PlayerController_GunFight_C_Start_Spectating::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Start_Spectating, CallFunc_BreakTransform_Location_1) == 0x000180, "Member 'BP_PlayerController_GunFight_C_Start_Spectating::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Start_Spectating, CallFunc_BreakTransform_Rotation_1) == 0x00018C, "Member 'BP_PlayerController_GunFight_C_Start_Spectating::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Start_Spectating, CallFunc_BreakTransform_Scale_1) == 0x000198, "Member 'BP_PlayerController_GunFight_C_Start_Spectating::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Start_Spectating, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0001A4, "Member 'BP_PlayerController_GunFight_C_Start_Spectating::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Start_Spectating, CallFunc_MakeTransform_ReturnValue_1) == 0x0001B0, "Member 'BP_PlayerController_GunFight_C_Start_Spectating::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Start_Spectating, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x0001E0, "Member 'BP_PlayerController_GunFight_C_Start_Spectating::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Start_Spectating, CallFunc_K2_SetActorTransform_ReturnValue) == 0x00026C, "Member 'BP_PlayerController_GunFight_C_Start_Spectating::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Start_Spectating, CallFunc_IsValid_ReturnValue_1) == 0x00026D, "Member 'BP_PlayerController_GunFight_C_Start_Spectating::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Start_Spectating, CallFunc_IsValid_ReturnValue_2) == 0x00026E, "Member 'BP_PlayerController_GunFight_C_Start_Spectating::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_PlayerController_GunFight.BP_PlayerController_GunFight_C.Is Attacker
// 0x0028 (0x0028 - 0x0000)
struct BP_PlayerController_GunFight_C_Is_Attacker final
{
public:
	bool                                          Is_Attacker_0;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_Teams_C*                K2Node_DynamicCast_AsBP_Player_State_Teams;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GSC_Team_Raid_C*                    K2Node_DynamicCast_AsBP_GSC_Team_Raid;             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_Attacker_Is_Attacker;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerController_GunFight_C_Is_Attacker) == 0x000008, "Wrong alignment on BP_PlayerController_GunFight_C_Is_Attacker");
static_assert(sizeof(BP_PlayerController_GunFight_C_Is_Attacker) == 0x000028, "Wrong size on BP_PlayerController_GunFight_C_Is_Attacker");
static_assert(offsetof(BP_PlayerController_GunFight_C_Is_Attacker, Is_Attacker_0) == 0x000000, "Member 'BP_PlayerController_GunFight_C_Is_Attacker::Is_Attacker_0' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Is_Attacker, K2Node_DynamicCast_AsBP_Player_State_Teams) == 0x000008, "Member 'BP_PlayerController_GunFight_C_Is_Attacker::K2Node_DynamicCast_AsBP_Player_State_Teams' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Is_Attacker, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_PlayerController_GunFight_C_Is_Attacker::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Is_Attacker, K2Node_DynamicCast_AsBP_GSC_Team_Raid) == 0x000018, "Member 'BP_PlayerController_GunFight_C_Is_Attacker::K2Node_DynamicCast_AsBP_GSC_Team_Raid' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Is_Attacker, K2Node_DynamicCast_bSuccess_1) == 0x000020, "Member 'BP_PlayerController_GunFight_C_Is_Attacker::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Is_Attacker, CallFunc_Is_Attacker_Is_Attacker) == 0x000021, "Member 'BP_PlayerController_GunFight_C_Is_Attacker::CallFunc_Is_Attacker_Is_Attacker' has a wrong offset!");

// Function BP_PlayerController_GunFight.BP_PlayerController_GunFight_C.Add Teammate Markers
// 0x0250 (0x0250 - 0x0000)
struct BP_PlayerController_GunFight_C_Add_Teammate_Markers final
{
public:
	bool                                          ShouldShowUpInCompass;                             // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PlayerToKickID;                                    // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           Teammate_Markers_This_Tick;                        // 0x0008(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_WorldSpectator_C*                   K2Node_DynamicCast_AsBP_World_Spectator;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_Teams_C*                K2Node_DynamicCast_AsBP_Player_State_Teams;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_PlayerState_C*>              CallFunc_FindTeammates_TeammatesPlayerStates;      // 0x0058(0x0010)(ReferenceParm)
	class ABP_PlayerState_C*                      CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_Teams_C*                K2Node_DynamicCast_AsBP_Player_State_Teams_1;      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_83[0x1];                                       // 0x0083(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetBaseAimRotation_ReturnValue;           // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsDead_ReturnValue;                    // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BA[0x6];                                       // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_StringNotEmpty_ReturnValue;               // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00F8(0x0018)()
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CustomMapMarker                     K2Node_MakeStruct_S_CustomMapMarker;               // 0x0118(0x0050)(HasGetValueTypeHash)
	struct FS_CustomMapMarker_Optimized           CallFunc_EncodeMapMarker_Map_Marker_Optimized;     // 0x0168(0x0038)(HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A4[0x4];                                      // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CustomMapMarker                     K2Node_MakeStruct_S_CustomMapMarker_1;             // 0x01A8(0x0050)(HasGetValueTypeHash)
	struct FS_CustomMapMarker_Optimized           CallFunc_EncodeMapMarker_Map_Marker_Optimized_1;   // 0x01F8(0x0038)(HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_239[0x3];                                      // 0x0239(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_242[0x2];                                      // 0x0242(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerController_GunFight_C_Add_Teammate_Markers) == 0x000008, "Wrong alignment on BP_PlayerController_GunFight_C_Add_Teammate_Markers");
static_assert(sizeof(BP_PlayerController_GunFight_C_Add_Teammate_Markers) == 0x000250, "Wrong size on BP_PlayerController_GunFight_C_Add_Teammate_Markers");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_Teammate_Markers, ShouldShowUpInCompass) == 0x000000, "Member 'BP_PlayerController_GunFight_C_Add_Teammate_Markers::ShouldShowUpInCompass' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_Teammate_Markers, PlayerToKickID) == 0x000004, "Member 'BP_PlayerController_GunFight_C_Add_Teammate_Markers::PlayerToKickID' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_Teammate_Markers, Teammate_Markers_This_Tick) == 0x000008, "Member 'BP_PlayerController_GunFight_C_Add_Teammate_Markers::Teammate_Markers_This_Tick' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_Teammate_Markers, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_PlayerController_GunFight_C_Add_Teammate_Markers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_Teammate_Markers, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_PlayerController_GunFight_C_Add_Teammate_Markers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_Teammate_Markers, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_PlayerController_GunFight_C_Add_Teammate_Markers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_Teammate_Markers, Temp_int_Array_Index_Variable_1) == 0x000024, "Member 'BP_PlayerController_GunFight_C_Add_Teammate_Markers::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_Teammate_Markers, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_PlayerController_GunFight_C_Add_Teammate_Markers::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_Teammate_Markers, CallFunc_K2_GetPawn_ReturnValue) == 0x000030, "Member 'BP_PlayerController_GunFight_C_Add_Teammate_Markers::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_Teammate_Markers, K2Node_DynamicCast_AsBP_World_Spectator) == 0x000038, "Member 'BP_PlayerController_GunFight_C_Add_Teammate_Markers::K2Node_DynamicCast_AsBP_World_Spectator' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_Teammate_Markers, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_PlayerController_GunFight_C_Add_Teammate_Markers::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_Teammate_Markers, CallFunc_IsValid_ReturnValue_1) == 0x000041, "Member 'BP_PlayerController_GunFight_C_Add_Teammate_Markers::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_Teammate_Markers, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000042, "Member 'BP_PlayerController_GunFight_C_Add_Teammate_Markers::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_Teammate_Markers, CallFunc_IsValid_ReturnValue_2) == 0x000043, "Member 'BP_PlayerController_GunFight_C_Add_Teammate_Markers::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_Teammate_Markers, K2Node_DynamicCast_AsBP_Player_State_Teams) == 0x000048, "Member 'BP_PlayerController_GunFight_C_Add_Teammate_Markers::K2Node_DynamicCast_AsBP_Player_State_Teams' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_Teammate_Markers, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BP_PlayerController_GunFight_C_Add_Teammate_Markers::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_Teammate_Markers, CallFunc_FindTeammates_TeammatesPlayerStates) == 0x000058, "Member 'BP_PlayerController_GunFight_C_Add_Teammate_Markers::CallFunc_FindTeammates_TeammatesPlayerStates' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_Teammate_Markers, CallFunc_Array_Get_Item) == 0x000068, "Member 'BP_PlayerController_GunFight_C_Add_Teammate_Markers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_Teammate_Markers, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'BP_PlayerController_GunFight_C_Add_Teammate_Markers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_Teammate_Markers, K2Node_DynamicCast_AsBP_Player_State_Teams_1) == 0x000078, "Member 'BP_PlayerController_GunFight_C_Add_Teammate_Markers::K2Node_DynamicCast_AsBP_Player_State_Teams_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_Teammate_Markers, K2Node_DynamicCast_bSuccess_2) == 0x000080, "Member 'BP_PlayerController_GunFight_C_Add_Teammate_Markers::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_Teammate_Markers, CallFunc_Less_IntInt_ReturnValue) == 0x000081, "Member 'BP_PlayerController_GunFight_C_Add_Teammate_Markers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_Teammate_Markers, CallFunc_IsValid_ReturnValue_3) == 0x000082, "Member 'BP_PlayerController_GunFight_C_Add_Teammate_Markers::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_Teammate_Markers, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000084, "Member 'BP_PlayerController_GunFight_C_Add_Teammate_Markers::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_Teammate_Markers, CallFunc_GetBaseAimRotation_ReturnValue) == 0x000090, "Member 'BP_PlayerController_GunFight_C_Add_Teammate_Markers::CallFunc_GetBaseAimRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_Teammate_Markers, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x00009C, "Member 'BP_PlayerController_GunFight_C_Add_Teammate_Markers::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_Teammate_Markers, CallFunc_GetIsDead_ReturnValue) == 0x0000A8, "Member 'BP_PlayerController_GunFight_C_Add_Teammate_Markers::CallFunc_GetIsDead_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_Teammate_Markers, CallFunc_BreakRotator_Roll) == 0x0000AC, "Member 'BP_PlayerController_GunFight_C_Add_Teammate_Markers::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_Teammate_Markers, CallFunc_BreakRotator_Pitch) == 0x0000B0, "Member 'BP_PlayerController_GunFight_C_Add_Teammate_Markers::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_Teammate_Markers, CallFunc_BreakRotator_Yaw) == 0x0000B4, "Member 'BP_PlayerController_GunFight_C_Add_Teammate_Markers::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_Teammate_Markers, CallFunc_Not_PreBool_ReturnValue) == 0x0000B8, "Member 'BP_PlayerController_GunFight_C_Add_Teammate_Markers::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_Teammate_Markers, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000B9, "Member 'BP_PlayerController_GunFight_C_Add_Teammate_Markers::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_Teammate_Markers, CallFunc_GetPlayerName_ReturnValue) == 0x0000C0, "Member 'BP_PlayerController_GunFight_C_Add_Teammate_Markers::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_Teammate_Markers, CallFunc_Concat_StrStr_ReturnValue) == 0x0000D0, "Member 'BP_PlayerController_GunFight_C_Add_Teammate_Markers::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_Teammate_Markers, CallFunc_Conv_StringToName_ReturnValue) == 0x0000E0, "Member 'BP_PlayerController_GunFight_C_Add_Teammate_Markers::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_Teammate_Markers, CallFunc_Conv_StringToName_ReturnValue_1) == 0x0000E8, "Member 'BP_PlayerController_GunFight_C_Add_Teammate_Markers::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_Teammate_Markers, CallFunc_StringNotEmpty_ReturnValue) == 0x0000F0, "Member 'BP_PlayerController_GunFight_C_Add_Teammate_Markers::CallFunc_StringNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_Teammate_Markers, CallFunc_Array_Add_ReturnValue) == 0x0000F4, "Member 'BP_PlayerController_GunFight_C_Add_Teammate_Markers::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_Teammate_Markers, CallFunc_Conv_StringToText_ReturnValue) == 0x0000F8, "Member 'BP_PlayerController_GunFight_C_Add_Teammate_Markers::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_Teammate_Markers, Temp_int_Loop_Counter_Variable_1) == 0x000110, "Member 'BP_PlayerController_GunFight_C_Add_Teammate_Markers::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_Teammate_Markers, K2Node_MakeStruct_S_CustomMapMarker) == 0x000118, "Member 'BP_PlayerController_GunFight_C_Add_Teammate_Markers::K2Node_MakeStruct_S_CustomMapMarker' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_Teammate_Markers, CallFunc_EncodeMapMarker_Map_Marker_Optimized) == 0x000168, "Member 'BP_PlayerController_GunFight_C_Add_Teammate_Markers::CallFunc_EncodeMapMarker_Map_Marker_Optimized' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_Teammate_Markers, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001A0, "Member 'BP_PlayerController_GunFight_C_Add_Teammate_Markers::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_Teammate_Markers, K2Node_MakeStruct_S_CustomMapMarker_1) == 0x0001A8, "Member 'BP_PlayerController_GunFight_C_Add_Teammate_Markers::K2Node_MakeStruct_S_CustomMapMarker_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_Teammate_Markers, CallFunc_EncodeMapMarker_Map_Marker_Optimized_1) == 0x0001F8, "Member 'BP_PlayerController_GunFight_C_Add_Teammate_Markers::CallFunc_EncodeMapMarker_Map_Marker_Optimized_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_Teammate_Markers, CallFunc_Array_Get_Item_1) == 0x000230, "Member 'BP_PlayerController_GunFight_C_Add_Teammate_Markers::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_Teammate_Markers, CallFunc_Array_Contains_ReturnValue) == 0x000238, "Member 'BP_PlayerController_GunFight_C_Add_Teammate_Markers::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_Teammate_Markers, CallFunc_Array_Length_ReturnValue_1) == 0x00023C, "Member 'BP_PlayerController_GunFight_C_Add_Teammate_Markers::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_Teammate_Markers, CallFunc_Not_PreBool_ReturnValue_1) == 0x000240, "Member 'BP_PlayerController_GunFight_C_Add_Teammate_Markers::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_Teammate_Markers, CallFunc_Less_IntInt_ReturnValue_1) == 0x000241, "Member 'BP_PlayerController_GunFight_C_Add_Teammate_Markers::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_Teammate_Markers, CallFunc_Array_Add_ReturnValue_1) == 0x000244, "Member 'BP_PlayerController_GunFight_C_Add_Teammate_Markers::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Add_Teammate_Markers, CallFunc_IsValid_ReturnValue_4) == 0x000248, "Member 'BP_PlayerController_GunFight_C_Add_Teammate_Markers::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");

// Function BP_PlayerController_GunFight.BP_PlayerController_GunFight_C.GetGunfightUIHud
// 0x0058 (0x0058 - 0x0000)
struct BP_PlayerController_GunFight_C_GetGunfightUIHud final
{
public:
	bool                                          Valid;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_HUD_C*                              HUD;                                               // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_FlameHUD_GunFight_C*                K2Node_DynamicCast_AsBP_Flame_HUD_Gun_Fight;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23[0x5];                                       // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UHUDWidget*>                     CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0028(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UHUDWidget*                             CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_HUD_C*                              K2Node_DynamicCast_AsUI_HUD;                       // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerController_GunFight_C_GetGunfightUIHud) == 0x000008, "Wrong alignment on BP_PlayerController_GunFight_C_GetGunfightUIHud");
static_assert(sizeof(BP_PlayerController_GunFight_C_GetGunfightUIHud) == 0x000058, "Wrong size on BP_PlayerController_GunFight_C_GetGunfightUIHud");
static_assert(offsetof(BP_PlayerController_GunFight_C_GetGunfightUIHud, Valid) == 0x000000, "Member 'BP_PlayerController_GunFight_C_GetGunfightUIHud::Valid' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_GetGunfightUIHud, HUD) == 0x000008, "Member 'BP_PlayerController_GunFight_C_GetGunfightUIHud::HUD' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_GetGunfightUIHud, CallFunc_GetHUD_ReturnValue) == 0x000010, "Member 'BP_PlayerController_GunFight_C_GetGunfightUIHud::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_GetGunfightUIHud, K2Node_DynamicCast_AsBP_Flame_HUD_Gun_Fight) == 0x000018, "Member 'BP_PlayerController_GunFight_C_GetGunfightUIHud::K2Node_DynamicCast_AsBP_Flame_HUD_Gun_Fight' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_GetGunfightUIHud, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_PlayerController_GunFight_C_GetGunfightUIHud::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_GetGunfightUIHud, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_PlayerController_GunFight_C_GetGunfightUIHud::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_GetGunfightUIHud, CallFunc_IsValidClass_ReturnValue) == 0x000022, "Member 'BP_PlayerController_GunFight_C_GetGunfightUIHud::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_GetGunfightUIHud, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000028, "Member 'BP_PlayerController_GunFight_C_GetGunfightUIHud::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_GetGunfightUIHud, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_PlayerController_GunFight_C_GetGunfightUIHud::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_GetGunfightUIHud, CallFunc_IsValid_ReturnValue_1) == 0x000040, "Member 'BP_PlayerController_GunFight_C_GetGunfightUIHud::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_GetGunfightUIHud, K2Node_DynamicCast_AsUI_HUD) == 0x000048, "Member 'BP_PlayerController_GunFight_C_GetGunfightUIHud::K2Node_DynamicCast_AsUI_HUD' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_GetGunfightUIHud, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BP_PlayerController_GunFight_C_GetGunfightUIHud::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_PlayerController_GunFight.BP_PlayerController_GunFight_C.Get Total Owned Lobby Booster Cost
// 0x0070 (0x0070 - 0x0000)
struct BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost final
{
public:
	int32                                         TotalCost;                                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TempTotalCost;                                     // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Get_Used_Booster_Ticket_Count_BP_UsedTickets; // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCrownBoughtBoosterTicketCount_UsedTickets; // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBoosterCost_Cost;                      // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBoosterCost_Cost_before_discount;      // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBoosterCost_DiscountPercent;           // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoosterCost_Is_Discounted;             // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_GunFight_C*             K2Node_DynamicCast_AsBP_Player_State_Gun_Fight;    // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetBoosterCount_Count;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost) == 0x000008, "Wrong alignment on BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost");
static_assert(sizeof(BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost) == 0x000070, "Wrong size on BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost");
static_assert(offsetof(BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost, TotalCost) == 0x000000, "Member 'BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost::TotalCost' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost, TempTotalCost) == 0x000004, "Member 'BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost::TempTotalCost' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost, Temp_int_Variable) == 0x000008, "Member 'BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost, Temp_int_Variable_1) == 0x00000C, "Member 'BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost, CallFunc_Conv_IntToByte_ReturnValue) == 0x000010, "Member 'BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost, CallFunc_GetValidValue_ReturnValue) == 0x000018, "Member 'BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000019, "Member 'BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00001A, "Member 'BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x00001B, "Member 'BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00001C, "Member 'BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000020, "Member 'BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000024, "Member 'BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost, CallFunc_BooleanOR_ReturnValue) == 0x000025, "Member 'BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost, CallFunc_BooleanOR_ReturnValue_1) == 0x000026, "Member 'BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost, Temp_bool_Variable) == 0x000027, "Member 'BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost, CallFunc_Get_Used_Booster_Ticket_Count_BP_UsedTickets) == 0x000028, "Member 'BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost::CallFunc_Get_Used_Booster_Ticket_Count_BP_UsedTickets' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost, CallFunc_GetCrownBoughtBoosterTicketCount_UsedTickets) == 0x00002C, "Member 'BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost::CallFunc_GetCrownBoughtBoosterTicketCount_UsedTickets' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost, CallFunc_GetBoosterCost_Cost) == 0x000030, "Member 'BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost::CallFunc_GetBoosterCost_Cost' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost, CallFunc_GetBoosterCost_Cost_before_discount) == 0x000034, "Member 'BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost::CallFunc_GetBoosterCost_Cost_before_discount' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost, CallFunc_GetBoosterCost_DiscountPercent) == 0x000038, "Member 'BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost::CallFunc_GetBoosterCost_DiscountPercent' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost, CallFunc_GetBoosterCost_Is_Discounted) == 0x00003C, "Member 'BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost::CallFunc_GetBoosterCost_Is_Discounted' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost, K2Node_DynamicCast_AsBP_Player_State_Gun_Fight) == 0x000040, "Member 'BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost::K2Node_DynamicCast_AsBP_Player_State_Gun_Fight' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost, CallFunc_GetBoosterCount_Count) == 0x00004C, "Member 'BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost::CallFunc_GetBoosterCount_Count' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost, CallFunc_MakeLiteralInt_ReturnValue) == 0x000050, "Member 'BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost, CallFunc_Subtract_IntInt_ReturnValue) == 0x000054, "Member 'BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost, K2Node_Select_Default) == 0x00005C, "Member 'BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost, CallFunc_Max_ReturnValue) == 0x000060, "Member 'BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost, CallFunc_Multiply_IntInt_ReturnValue) == 0x000064, "Member 'BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost, CallFunc_Add_IntInt_ReturnValue_1) == 0x000068, "Member 'BP_PlayerController_GunFight_C_Get_Total_Owned_Lobby_Booster_Cost::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerController_GunFight.BP_PlayerController_GunFight_C.HasEnoughHC_ForBooster
// 0x0048 (0x0048 - 0x0000)
struct BP_PlayerController_GunFight_C_HasEnoughHC_ForBooster final
{
public:
	EBooster                                      BoosterType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnoughHC;                                          // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_GunFight_C*             K2Node_DynamicCast_AsBP_Player_State_Gun_Fight;    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetBoosterCost_Cost;                      // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBoosterCost_Cost_before_discount;      // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBoosterCost_DiscountPercent;           // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoosterCost_Is_Discounted;             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetBoosterCost_Cost_1;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBoosterCost_Cost_before_discount_1;    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBoosterCost_DiscountPercent_1;         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoosterCost_Is_Discounted_1;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Get_Total_Owned_Lobby_Booster_Cost_TotalCost; // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerController_GunFight_C_HasEnoughHC_ForBooster) == 0x000008, "Wrong alignment on BP_PlayerController_GunFight_C_HasEnoughHC_ForBooster");
static_assert(sizeof(BP_PlayerController_GunFight_C_HasEnoughHC_ForBooster) == 0x000048, "Wrong size on BP_PlayerController_GunFight_C_HasEnoughHC_ForBooster");
static_assert(offsetof(BP_PlayerController_GunFight_C_HasEnoughHC_ForBooster, BoosterType) == 0x000000, "Member 'BP_PlayerController_GunFight_C_HasEnoughHC_ForBooster::BoosterType' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_HasEnoughHC_ForBooster, EnoughHC) == 0x000001, "Member 'BP_PlayerController_GunFight_C_HasEnoughHC_ForBooster::EnoughHC' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_HasEnoughHC_ForBooster, K2Node_DynamicCast_AsBP_Player_State_Gun_Fight) == 0x000008, "Member 'BP_PlayerController_GunFight_C_HasEnoughHC_ForBooster::K2Node_DynamicCast_AsBP_Player_State_Gun_Fight' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_HasEnoughHC_ForBooster, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_PlayerController_GunFight_C_HasEnoughHC_ForBooster::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_HasEnoughHC_ForBooster, CallFunc_GetBoosterCost_Cost) == 0x000014, "Member 'BP_PlayerController_GunFight_C_HasEnoughHC_ForBooster::CallFunc_GetBoosterCost_Cost' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_HasEnoughHC_ForBooster, CallFunc_GetBoosterCost_Cost_before_discount) == 0x000018, "Member 'BP_PlayerController_GunFight_C_HasEnoughHC_ForBooster::CallFunc_GetBoosterCost_Cost_before_discount' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_HasEnoughHC_ForBooster, CallFunc_GetBoosterCost_DiscountPercent) == 0x00001C, "Member 'BP_PlayerController_GunFight_C_HasEnoughHC_ForBooster::CallFunc_GetBoosterCost_DiscountPercent' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_HasEnoughHC_ForBooster, CallFunc_GetBoosterCost_Is_Discounted) == 0x000020, "Member 'BP_PlayerController_GunFight_C_HasEnoughHC_ForBooster::CallFunc_GetBoosterCost_Is_Discounted' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_HasEnoughHC_ForBooster, CallFunc_GetBoosterCost_Cost_1) == 0x000024, "Member 'BP_PlayerController_GunFight_C_HasEnoughHC_ForBooster::CallFunc_GetBoosterCost_Cost_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_HasEnoughHC_ForBooster, CallFunc_GetBoosterCost_Cost_before_discount_1) == 0x000028, "Member 'BP_PlayerController_GunFight_C_HasEnoughHC_ForBooster::CallFunc_GetBoosterCost_Cost_before_discount_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_HasEnoughHC_ForBooster, CallFunc_GetBoosterCost_DiscountPercent_1) == 0x00002C, "Member 'BP_PlayerController_GunFight_C_HasEnoughHC_ForBooster::CallFunc_GetBoosterCost_DiscountPercent_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_HasEnoughHC_ForBooster, CallFunc_GetBoosterCost_Is_Discounted_1) == 0x000030, "Member 'BP_PlayerController_GunFight_C_HasEnoughHC_ForBooster::CallFunc_GetBoosterCost_Is_Discounted_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_HasEnoughHC_ForBooster, CallFunc_Get_Total_Owned_Lobby_Booster_Cost_TotalCost) == 0x000034, "Member 'BP_PlayerController_GunFight_C_HasEnoughHC_ForBooster::CallFunc_Get_Total_Owned_Lobby_Booster_Cost_TotalCost' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_HasEnoughHC_ForBooster, CallFunc_Multiply_IntInt_ReturnValue) == 0x000038, "Member 'BP_PlayerController_GunFight_C_HasEnoughHC_ForBooster::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_HasEnoughHC_ForBooster, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_PlayerController_GunFight_C_HasEnoughHC_ForBooster::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_HasEnoughHC_ForBooster, CallFunc_Add_IntInt_ReturnValue_1) == 0x000040, "Member 'BP_PlayerController_GunFight_C_HasEnoughHC_ForBooster::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_HasEnoughHC_ForBooster, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000044, "Member 'BP_PlayerController_GunFight_C_HasEnoughHC_ForBooster::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_PlayerController_GunFight.BP_PlayerController_GunFight_C.CheatHideUI
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerController_GunFight_C_CheatHideUI final
{
public:
	bool                                          Hide;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerController_GunFight_C_CheatHideUI) == 0x000001, "Wrong alignment on BP_PlayerController_GunFight_C_CheatHideUI");
static_assert(sizeof(BP_PlayerController_GunFight_C_CheatHideUI) == 0x000001, "Wrong size on BP_PlayerController_GunFight_C_CheatHideUI");
static_assert(offsetof(BP_PlayerController_GunFight_C_CheatHideUI, Hide) == 0x000000, "Member 'BP_PlayerController_GunFight_C_CheatHideUI::Hide' has a wrong offset!");

// Function BP_PlayerController_GunFight.BP_PlayerController_GunFight_C.Send Kill Scored Event
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerController_GunFight_C_Send_Kill_Scored_Event final
{
public:
	class AHumanCharacter*                        Killer;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanCharacter*                        Victim;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Instigating_Item;                                  // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Headshot;                                          // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Teamkill;                                          // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerController_GunFight_C_Send_Kill_Scored_Event) == 0x000008, "Wrong alignment on BP_PlayerController_GunFight_C_Send_Kill_Scored_Event");
static_assert(sizeof(BP_PlayerController_GunFight_C_Send_Kill_Scored_Event) == 0x000020, "Wrong size on BP_PlayerController_GunFight_C_Send_Kill_Scored_Event");
static_assert(offsetof(BP_PlayerController_GunFight_C_Send_Kill_Scored_Event, Killer) == 0x000000, "Member 'BP_PlayerController_GunFight_C_Send_Kill_Scored_Event::Killer' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Send_Kill_Scored_Event, Victim) == 0x000008, "Member 'BP_PlayerController_GunFight_C_Send_Kill_Scored_Event::Victim' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Send_Kill_Scored_Event, Instigating_Item) == 0x000010, "Member 'BP_PlayerController_GunFight_C_Send_Kill_Scored_Event::Instigating_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Send_Kill_Scored_Event, Headshot) == 0x000018, "Member 'BP_PlayerController_GunFight_C_Send_Kill_Scored_Event::Headshot' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_GunFight_C_Send_Kill_Scored_Event, Teamkill) == 0x000019, "Member 'BP_PlayerController_GunFight_C_Send_Kill_Scored_Event::Teamkill' has a wrong offset!");

}

