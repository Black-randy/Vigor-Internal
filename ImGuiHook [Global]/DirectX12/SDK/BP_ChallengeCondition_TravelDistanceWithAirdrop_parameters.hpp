#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ChallengeCondition_TravelDistanceWithAirdrop

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_ChallengeCondition_TravelDistanceWithAirdrop.BP_ChallengeCondition_TravelDistanceWithAirdrop_C.ExecuteUbergraph_BP_ChallengeCondition_TravelDistanceWithAirdrop
// 0x0098 (0x0098 - 0x0000)
struct BP_ChallengeCondition_TravelDistanceWithAirdrop_C_ExecuteUbergraph_BP_ChallengeCondition_TravelDistanceWithAirdrop final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float Distance_Increment)>     K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameState_Matches_C*                K2Node_DynamicCast_AsBP_Game_State_Matches;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UEventSystem*                           CallFunc_GetEventSystem_ReturnValue;               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Distance_Increment;             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_EventSystem_C*                      K2Node_DynamicCast_AsBP_Event_System;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_66[0x2];                                       // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0068(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0078(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChallengeCondition_TravelDistanceWithAirdrop_C_ExecuteUbergraph_BP_ChallengeCondition_TravelDistanceWithAirdrop) == 0x000008, "Wrong alignment on BP_ChallengeCondition_TravelDistanceWithAirdrop_C_ExecuteUbergraph_BP_ChallengeCondition_TravelDistanceWithAirdrop");
static_assert(sizeof(BP_ChallengeCondition_TravelDistanceWithAirdrop_C_ExecuteUbergraph_BP_ChallengeCondition_TravelDistanceWithAirdrop) == 0x000098, "Wrong size on BP_ChallengeCondition_TravelDistanceWithAirdrop_C_ExecuteUbergraph_BP_ChallengeCondition_TravelDistanceWithAirdrop");
static_assert(offsetof(BP_ChallengeCondition_TravelDistanceWithAirdrop_C_ExecuteUbergraph_BP_ChallengeCondition_TravelDistanceWithAirdrop, EntryPoint) == 0x000000, "Member 'BP_ChallengeCondition_TravelDistanceWithAirdrop_C_ExecuteUbergraph_BP_ChallengeCondition_TravelDistanceWithAirdrop::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_TravelDistanceWithAirdrop_C_ExecuteUbergraph_BP_ChallengeCondition_TravelDistanceWithAirdrop, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_ChallengeCondition_TravelDistanceWithAirdrop_C_ExecuteUbergraph_BP_ChallengeCondition_TravelDistanceWithAirdrop::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_TravelDistanceWithAirdrop_C_ExecuteUbergraph_BP_ChallengeCondition_TravelDistanceWithAirdrop, CallFunc_GetGameState_ReturnValue) == 0x000018, "Member 'BP_ChallengeCondition_TravelDistanceWithAirdrop_C_ExecuteUbergraph_BP_ChallengeCondition_TravelDistanceWithAirdrop::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_TravelDistanceWithAirdrop_C_ExecuteUbergraph_BP_ChallengeCondition_TravelDistanceWithAirdrop, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_ChallengeCondition_TravelDistanceWithAirdrop_C_ExecuteUbergraph_BP_ChallengeCondition_TravelDistanceWithAirdrop::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_TravelDistanceWithAirdrop_C_ExecuteUbergraph_BP_ChallengeCondition_TravelDistanceWithAirdrop, K2Node_DynamicCast_AsBP_Game_State_Matches) == 0x000028, "Member 'BP_ChallengeCondition_TravelDistanceWithAirdrop_C_ExecuteUbergraph_BP_ChallengeCondition_TravelDistanceWithAirdrop::K2Node_DynamicCast_AsBP_Game_State_Matches' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_TravelDistanceWithAirdrop_C_ExecuteUbergraph_BP_ChallengeCondition_TravelDistanceWithAirdrop, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_ChallengeCondition_TravelDistanceWithAirdrop_C_ExecuteUbergraph_BP_ChallengeCondition_TravelDistanceWithAirdrop::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_TravelDistanceWithAirdrop_C_ExecuteUbergraph_BP_ChallengeCondition_TravelDistanceWithAirdrop, CallFunc_GetEventSystem_ReturnValue) == 0x000038, "Member 'BP_ChallengeCondition_TravelDistanceWithAirdrop_C_ExecuteUbergraph_BP_ChallengeCondition_TravelDistanceWithAirdrop::CallFunc_GetEventSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_TravelDistanceWithAirdrop_C_ExecuteUbergraph_BP_ChallengeCondition_TravelDistanceWithAirdrop, K2Node_CustomEvent_Distance_Increment) == 0x000040, "Member 'BP_ChallengeCondition_TravelDistanceWithAirdrop_C_ExecuteUbergraph_BP_ChallengeCondition_TravelDistanceWithAirdrop::K2Node_CustomEvent_Distance_Increment' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_TravelDistanceWithAirdrop_C_ExecuteUbergraph_BP_ChallengeCondition_TravelDistanceWithAirdrop, K2Node_DynamicCast_AsBP_Event_System) == 0x000048, "Member 'BP_ChallengeCondition_TravelDistanceWithAirdrop_C_ExecuteUbergraph_BP_ChallengeCondition_TravelDistanceWithAirdrop::K2Node_DynamicCast_AsBP_Event_System' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_TravelDistanceWithAirdrop_C_ExecuteUbergraph_BP_ChallengeCondition_TravelDistanceWithAirdrop, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BP_ChallengeCondition_TravelDistanceWithAirdrop_C_ExecuteUbergraph_BP_ChallengeCondition_TravelDistanceWithAirdrop::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_TravelDistanceWithAirdrop_C_ExecuteUbergraph_BP_ChallengeCondition_TravelDistanceWithAirdrop, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000054, "Member 'BP_ChallengeCondition_TravelDistanceWithAirdrop_C_ExecuteUbergraph_BP_ChallengeCondition_TravelDistanceWithAirdrop::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_TravelDistanceWithAirdrop_C_ExecuteUbergraph_BP_ChallengeCondition_TravelDistanceWithAirdrop, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000058, "Member 'BP_ChallengeCondition_TravelDistanceWithAirdrop_C_ExecuteUbergraph_BP_ChallengeCondition_TravelDistanceWithAirdrop::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_TravelDistanceWithAirdrop_C_ExecuteUbergraph_BP_ChallengeCondition_TravelDistanceWithAirdrop, CallFunc_Add_FloatFloat_ReturnValue) == 0x00005C, "Member 'BP_ChallengeCondition_TravelDistanceWithAirdrop_C_ExecuteUbergraph_BP_ChallengeCondition_TravelDistanceWithAirdrop::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_TravelDistanceWithAirdrop_C_ExecuteUbergraph_BP_ChallengeCondition_TravelDistanceWithAirdrop, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'BP_ChallengeCondition_TravelDistanceWithAirdrop_C_ExecuteUbergraph_BP_ChallengeCondition_TravelDistanceWithAirdrop::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_TravelDistanceWithAirdrop_C_ExecuteUbergraph_BP_ChallengeCondition_TravelDistanceWithAirdrop, CallFunc_Greater_IntInt_ReturnValue) == 0x000064, "Member 'BP_ChallengeCondition_TravelDistanceWithAirdrop_C_ExecuteUbergraph_BP_ChallengeCondition_TravelDistanceWithAirdrop::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_TravelDistanceWithAirdrop_C_ExecuteUbergraph_BP_ChallengeCondition_TravelDistanceWithAirdrop, CallFunc_Not_PreBool_ReturnValue) == 0x000065, "Member 'BP_ChallengeCondition_TravelDistanceWithAirdrop_C_ExecuteUbergraph_BP_ChallengeCondition_TravelDistanceWithAirdrop::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_TravelDistanceWithAirdrop_C_ExecuteUbergraph_BP_ChallengeCondition_TravelDistanceWithAirdrop, K2Node_CreateDelegate_OutputDelegate_1) == 0x000068, "Member 'BP_ChallengeCondition_TravelDistanceWithAirdrop_C_ExecuteUbergraph_BP_ChallengeCondition_TravelDistanceWithAirdrop::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_TravelDistanceWithAirdrop_C_ExecuteUbergraph_BP_ChallengeCondition_TravelDistanceWithAirdrop, K2Node_CreateDelegate_OutputDelegate_2) == 0x000078, "Member 'BP_ChallengeCondition_TravelDistanceWithAirdrop_C_ExecuteUbergraph_BP_ChallengeCondition_TravelDistanceWithAirdrop::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_TravelDistanceWithAirdrop_C_ExecuteUbergraph_BP_ChallengeCondition_TravelDistanceWithAirdrop, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000088, "Member 'BP_ChallengeCondition_TravelDistanceWithAirdrop_C_ExecuteUbergraph_BP_ChallengeCondition_TravelDistanceWithAirdrop::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_TravelDistanceWithAirdrop_C_ExecuteUbergraph_BP_ChallengeCondition_TravelDistanceWithAirdrop, CallFunc_FFloor_ReturnValue) == 0x00008C, "Member 'BP_ChallengeCondition_TravelDistanceWithAirdrop_C_ExecuteUbergraph_BP_ChallengeCondition_TravelDistanceWithAirdrop::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_TravelDistanceWithAirdrop_C_ExecuteUbergraph_BP_ChallengeCondition_TravelDistanceWithAirdrop, CallFunc_Min_ReturnValue) == 0x000090, "Member 'BP_ChallengeCondition_TravelDistanceWithAirdrop_C_ExecuteUbergraph_BP_ChallengeCondition_TravelDistanceWithAirdrop::CallFunc_Min_ReturnValue' has a wrong offset!");

// Function BP_ChallengeCondition_TravelDistanceWithAirdrop.BP_ChallengeCondition_TravelDistanceWithAirdrop_C.Distance Updated
// 0x0004 (0x0004 - 0x0000)
struct BP_ChallengeCondition_TravelDistanceWithAirdrop_C_Distance_Updated final
{
public:
	float                                         Distance_Increment;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChallengeCondition_TravelDistanceWithAirdrop_C_Distance_Updated) == 0x000004, "Wrong alignment on BP_ChallengeCondition_TravelDistanceWithAirdrop_C_Distance_Updated");
static_assert(sizeof(BP_ChallengeCondition_TravelDistanceWithAirdrop_C_Distance_Updated) == 0x000004, "Wrong size on BP_ChallengeCondition_TravelDistanceWithAirdrop_C_Distance_Updated");
static_assert(offsetof(BP_ChallengeCondition_TravelDistanceWithAirdrop_C_Distance_Updated, Distance_Increment) == 0x000000, "Member 'BP_ChallengeCondition_TravelDistanceWithAirdrop_C_Distance_Updated::Distance_Increment' has a wrong offset!");

// Function BP_ChallengeCondition_TravelDistanceWithAirdrop.BP_ChallengeCondition_TravelDistanceWithAirdrop_C.Get Maximum Progress
// 0x0004 (0x0004 - 0x0000)
struct BP_ChallengeCondition_TravelDistanceWithAirdrop_C_Get_Maximum_Progress final
{
public:
	int32                                         Maximum_Progress;                                  // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChallengeCondition_TravelDistanceWithAirdrop_C_Get_Maximum_Progress) == 0x000004, "Wrong alignment on BP_ChallengeCondition_TravelDistanceWithAirdrop_C_Get_Maximum_Progress");
static_assert(sizeof(BP_ChallengeCondition_TravelDistanceWithAirdrop_C_Get_Maximum_Progress) == 0x000004, "Wrong size on BP_ChallengeCondition_TravelDistanceWithAirdrop_C_Get_Maximum_Progress");
static_assert(offsetof(BP_ChallengeCondition_TravelDistanceWithAirdrop_C_Get_Maximum_Progress, Maximum_Progress) == 0x000000, "Member 'BP_ChallengeCondition_TravelDistanceWithAirdrop_C_Get_Maximum_Progress::Maximum_Progress' has a wrong offset!");

// Function BP_ChallengeCondition_TravelDistanceWithAirdrop.BP_ChallengeCondition_TravelDistanceWithAirdrop_C.Get Condition Text
// 0x00A0 (0x00A0 - 0x0000)
struct BP_ChallengeCondition_TravelDistanceWithAirdrop_C_Get_Condition_Text final
{
public:
	class FText                                   Condition_Text;                                    // 0x0000(0x0018)(Parm, OutParm)
	int32                                         CallFunc_Get_Maximum_Progress_Maximum_Progress;    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Get_Condition_Text_Condition_Text;        // 0x0020(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0088(0x0018)()
};
static_assert(alignof(BP_ChallengeCondition_TravelDistanceWithAirdrop_C_Get_Condition_Text) == 0x000008, "Wrong alignment on BP_ChallengeCondition_TravelDistanceWithAirdrop_C_Get_Condition_Text");
static_assert(sizeof(BP_ChallengeCondition_TravelDistanceWithAirdrop_C_Get_Condition_Text) == 0x0000A0, "Wrong size on BP_ChallengeCondition_TravelDistanceWithAirdrop_C_Get_Condition_Text");
static_assert(offsetof(BP_ChallengeCondition_TravelDistanceWithAirdrop_C_Get_Condition_Text, Condition_Text) == 0x000000, "Member 'BP_ChallengeCondition_TravelDistanceWithAirdrop_C_Get_Condition_Text::Condition_Text' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_TravelDistanceWithAirdrop_C_Get_Condition_Text, CallFunc_Get_Maximum_Progress_Maximum_Progress) == 0x000018, "Member 'BP_ChallengeCondition_TravelDistanceWithAirdrop_C_Get_Condition_Text::CallFunc_Get_Maximum_Progress_Maximum_Progress' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_TravelDistanceWithAirdrop_C_Get_Condition_Text, CallFunc_Get_Condition_Text_Condition_Text) == 0x000020, "Member 'BP_ChallengeCondition_TravelDistanceWithAirdrop_C_Get_Condition_Text::CallFunc_Get_Condition_Text_Condition_Text' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_TravelDistanceWithAirdrop_C_Get_Condition_Text, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'BP_ChallengeCondition_TravelDistanceWithAirdrop_C_Get_Condition_Text::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_TravelDistanceWithAirdrop_C_Get_Condition_Text, K2Node_MakeArray_Array) == 0x000078, "Member 'BP_ChallengeCondition_TravelDistanceWithAirdrop_C_Get_Condition_Text::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_TravelDistanceWithAirdrop_C_Get_Condition_Text, CallFunc_Format_ReturnValue) == 0x000088, "Member 'BP_ChallengeCondition_TravelDistanceWithAirdrop_C_Get_Condition_Text::CallFunc_Format_ReturnValue' has a wrong offset!");

}

