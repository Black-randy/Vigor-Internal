#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GameMode_AirDropModular

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.Container Spawned__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_GameMode_AirDropModular_C_Container_Spawned__DelegateSignature final
{
public:
	class ABP_AirDropContainer_Base_C*            Container;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_AirDropModular_C_Container_Spawned__DelegateSignature) == 0x000008, "Wrong alignment on BP_GameMode_AirDropModular_C_Container_Spawned__DelegateSignature");
static_assert(sizeof(BP_GameMode_AirDropModular_C_Container_Spawned__DelegateSignature) == 0x000008, "Wrong size on BP_GameMode_AirDropModular_C_Container_Spawned__DelegateSignature");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Container_Spawned__DelegateSignature, Container) == 0x000000, "Member 'BP_GameMode_AirDropModular_C_Container_Spawned__DelegateSignature::Container' has a wrong offset!");

// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.Container Touched Down__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_GameMode_AirDropModular_C_Container_Touched_Down__DelegateSignature final
{
public:
	class ABP_AirDropContainer_Base_C*            Container;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_AirDropModular_C_Container_Touched_Down__DelegateSignature) == 0x000008, "Wrong alignment on BP_GameMode_AirDropModular_C_Container_Touched_Down__DelegateSignature");
static_assert(sizeof(BP_GameMode_AirDropModular_C_Container_Touched_Down__DelegateSignature) == 0x000008, "Wrong size on BP_GameMode_AirDropModular_C_Container_Touched_Down__DelegateSignature");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Container_Touched_Down__DelegateSignature, Container) == 0x000000, "Member 'BP_GameMode_AirDropModular_C_Container_Touched_Down__DelegateSignature::Container' has a wrong offset!");

// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.Drop Zone Determined__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_GameMode_AirDropModular_C_Drop_Zone_Determined__DelegateSignature final
{
public:
	class ABP_AirDropLocation_C*                  Drop_Zone_Actor;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_AirDropModular_C_Drop_Zone_Determined__DelegateSignature) == 0x000008, "Wrong alignment on BP_GameMode_AirDropModular_C_Drop_Zone_Determined__DelegateSignature");
static_assert(sizeof(BP_GameMode_AirDropModular_C_Drop_Zone_Determined__DelegateSignature) == 0x000008, "Wrong size on BP_GameMode_AirDropModular_C_Drop_Zone_Determined__DelegateSignature");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Drop_Zone_Determined__DelegateSignature, Drop_Zone_Actor) == 0x000000, "Member 'BP_GameMode_AirDropModular_C_Drop_Zone_Determined__DelegateSignature::Drop_Zone_Actor' has a wrong offset!");

// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.Spawn Container__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_GameMode_AirDropModular_C_Spawn_Container__DelegateSignature final
{
public:
	class ABP_AirDropLocation_C*                  Drop_Zone_Actor;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_AirDropModular_C_Spawn_Container__DelegateSignature) == 0x000008, "Wrong alignment on BP_GameMode_AirDropModular_C_Spawn_Container__DelegateSignature");
static_assert(sizeof(BP_GameMode_AirDropModular_C_Spawn_Container__DelegateSignature) == 0x000008, "Wrong size on BP_GameMode_AirDropModular_C_Spawn_Container__DelegateSignature");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Spawn_Container__DelegateSignature, Drop_Zone_Actor) == 0x000000, "Member 'BP_GameMode_AirDropModular_C_Spawn_Container__DelegateSignature::Drop_Zone_Actor' has a wrong offset!");

// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.Game Mode Toggled__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct BP_GameMode_AirDropModular_C_Game_Mode_Toggled__DelegateSignature final
{
public:
	bool                                          Game_Mode_Is_Running;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameMode_AirDropModular_C_Game_Mode_Toggled__DelegateSignature) == 0x000001, "Wrong alignment on BP_GameMode_AirDropModular_C_Game_Mode_Toggled__DelegateSignature");
static_assert(sizeof(BP_GameMode_AirDropModular_C_Game_Mode_Toggled__DelegateSignature) == 0x000001, "Wrong size on BP_GameMode_AirDropModular_C_Game_Mode_Toggled__DelegateSignature");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Game_Mode_Toggled__DelegateSignature, Game_Mode_Is_Running) == 0x000000, "Member 'BP_GameMode_AirDropModular_C_Game_Mode_Toggled__DelegateSignature::Game_Mode_Is_Running' has a wrong offset!");

// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.Player Opened Debug UI__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_GameMode_AirDropModular_C_Player_Opened_Debug_UI__DelegateSignature final
{
public:
	class ABP_PlayerController_AirDropModular_C*  Player_Controller;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_AirDropModular_C_Player_Opened_Debug_UI__DelegateSignature) == 0x000008, "Wrong alignment on BP_GameMode_AirDropModular_C_Player_Opened_Debug_UI__DelegateSignature");
static_assert(sizeof(BP_GameMode_AirDropModular_C_Player_Opened_Debug_UI__DelegateSignature) == 0x000008, "Wrong size on BP_GameMode_AirDropModular_C_Player_Opened_Debug_UI__DelegateSignature");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Player_Opened_Debug_UI__DelegateSignature, Player_Controller) == 0x000000, "Member 'BP_GameMode_AirDropModular_C_Player_Opened_Debug_UI__DelegateSignature::Player_Controller' has a wrong offset!");

// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.Player Closed Debug UI__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_GameMode_AirDropModular_C_Player_Closed_Debug_UI__DelegateSignature final
{
public:
	class ABP_PlayerController_AirDropModular_C*  Player_Controller;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_AirDropModular_C_Player_Closed_Debug_UI__DelegateSignature) == 0x000008, "Wrong alignment on BP_GameMode_AirDropModular_C_Player_Closed_Debug_UI__DelegateSignature");
static_assert(sizeof(BP_GameMode_AirDropModular_C_Player_Closed_Debug_UI__DelegateSignature) == 0x000008, "Wrong size on BP_GameMode_AirDropModular_C_Player_Closed_Debug_UI__DelegateSignature");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Player_Closed_Debug_UI__DelegateSignature, Player_Controller) == 0x000000, "Member 'BP_GameMode_AirDropModular_C_Player_Closed_Debug_UI__DelegateSignature::Player_Controller' has a wrong offset!");

// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.Airdrop Timer Notify__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_GameMode_AirDropModular_C_Airdrop_Timer_Notify__DelegateSignature final
{
public:
	struct FTimerHandle                           Airdrop_Timer;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         Airdrop_Timer_Duration;                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_AirDropModular_C_Airdrop_Timer_Notify__DelegateSignature) == 0x000008, "Wrong alignment on BP_GameMode_AirDropModular_C_Airdrop_Timer_Notify__DelegateSignature");
static_assert(sizeof(BP_GameMode_AirDropModular_C_Airdrop_Timer_Notify__DelegateSignature) == 0x000010, "Wrong size on BP_GameMode_AirDropModular_C_Airdrop_Timer_Notify__DelegateSignature");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Airdrop_Timer_Notify__DelegateSignature, Airdrop_Timer) == 0x000000, "Member 'BP_GameMode_AirDropModular_C_Airdrop_Timer_Notify__DelegateSignature::Airdrop_Timer' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Airdrop_Timer_Notify__DelegateSignature, Airdrop_Timer_Duration) == 0x000008, "Member 'BP_GameMode_AirDropModular_C_Airdrop_Timer_Notify__DelegateSignature::Airdrop_Timer_Duration' has a wrong offset!");

// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.ExecuteUbergraph_BP_GameMode_AirDropModular
// 0x01E8 (0x01E8 - 0x0000)
struct BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_Event_NewPlayer;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_GMComponent_ADM_Base_C*>     CallFunc_Get_All_ADM_Components_Components;        // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_GMComponent_ADM_Base_C*>     CallFunc_Get_All_ADM_Components_Components_1;      // 0x0038(0x0010)(ReferenceParm, ContainsInstancedReference)
	TDelegate<void(class ABP_AirDropContainer_Base_C* Container)> K2Node_CreateDelegate_OutputDelegate;              // 0x0048(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_GMComponent_ADM_Base_C*>     CallFunc_Get_All_ADM_Components_Components_2;      // 0x0060(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UBP_GMComponent_ADM_Base_C*>     CallFunc_Get_All_ADM_Components_Components_3;      // 0x0070(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GMComponent_ADM_Base_C*             CallFunc_Array_Get_Item;                           // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Initialize_Bindings_Success;              // 0x0096(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_97[0x1];                                       // 0x0097(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AirDropContainer_Base_C*            K2Node_CustomEvent_Container;                      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_AirDropLocation_C*>          CallFunc_GetAllActorsOfClass_OutActors;            // 0x00A0(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Find_Least_2D_Distant_Object_from_Object_Least_Distant_Object; // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Find_Least_2D_Distant_Object_from_Object_Distance; // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_AirDropModular_C*  K2Node_CustomEvent_Player_Controller_1;            // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Send_Air_Drop_Landed_Event_ReturnValue;   // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_AirDropModular_C*  K2Node_CustomEvent_Player_Controller;              // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GMComponent_ADM_Base_C*             CallFunc_Array_Get_Item_1;                         // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Initialization_Successful_IsInitialized; // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_102[0x6];                                      // 0x0102(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_Event_ExitingController;                    // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_AirDropModular_C*  K2Node_DynamicCast_AsBP_Player_Controller_Air_Drop_Modular; // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GMComponent_ADM_Base_C*             CallFunc_Array_Get_Item_2;                         // 0x0160(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_CustomEvent_Module_Type;                    // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GMComponent_ADM_Base_C*             K2Node_CustomEvent_ADM_GMComponent;                // 0x0178(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GMComponent_ADM_Base_C*             CallFunc_AddComponentToActor_OutNewComponent;      // 0x0180(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Initialize_Bindings_Success_1;            // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x3];                                      // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_195[0x3];                                      // 0x0195(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19D[0x3];                                      // 0x019D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_SLM_Load_Complete;                    // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A5[0x3];                                      // 0x01A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PreparePrimaryStartsForPlayers_ReturnValue; // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_Event_Object;                               // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BC[0x4];                                      // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GMComponent_ADM_Base_C*             CallFunc_Array_Get_Item_3;                         // 0x01C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_AirDropModular_C*  K2Node_DynamicCast_AsBP_Player_Controller_Air_Drop_Modular_1; // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D9[0x3];                                      // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E1[0x3];                                      // 0x01E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular) == 0x000008, "Wrong alignment on BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular");
static_assert(sizeof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular) == 0x0001E8, "Wrong size on BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular, EntryPoint) == 0x000000, "Member 'BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular, K2Node_Event_NewPlayer) == 0x000008, "Member 'BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular::K2Node_Event_NewPlayer' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular, CallFunc_Get_All_ADM_Components_Components) == 0x000020, "Member 'BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular::CallFunc_Get_All_ADM_Components_Components' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular, CallFunc_Get_All_ADM_Components_Components_1) == 0x000038, "Member 'BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular::CallFunc_Get_All_ADM_Components_Components_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular, K2Node_CreateDelegate_OutputDelegate) == 0x000048, "Member 'BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular, CallFunc_Array_Length_ReturnValue_1) == 0x000058, "Member 'BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular, CallFunc_Get_All_ADM_Components_Components_2) == 0x000060, "Member 'BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular::CallFunc_Get_All_ADM_Components_Components_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular, CallFunc_Get_All_ADM_Components_Components_3) == 0x000070, "Member 'BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular::CallFunc_Get_All_ADM_Components_Components_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular, CallFunc_Array_Length_ReturnValue_2) == 0x000080, "Member 'BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular, CallFunc_Array_Get_Item) == 0x000088, "Member 'BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular, CallFunc_Array_Length_ReturnValue_3) == 0x000090, "Member 'BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular, CallFunc_Less_IntInt_ReturnValue) == 0x000094, "Member 'BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular, CallFunc_IsValid_ReturnValue) == 0x000095, "Member 'BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular, CallFunc_Initialize_Bindings_Success) == 0x000096, "Member 'BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular::CallFunc_Initialize_Bindings_Success' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular, K2Node_CustomEvent_Container) == 0x000098, "Member 'BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular::K2Node_CustomEvent_Container' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular, CallFunc_GetAllActorsOfClass_OutActors) == 0x0000A0, "Member 'BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular, CallFunc_Find_Least_2D_Distant_Object_from_Object_Least_Distant_Object) == 0x0000B0, "Member 'BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular::CallFunc_Find_Least_2D_Distant_Object_from_Object_Least_Distant_Object' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular, CallFunc_Find_Least_2D_Distant_Object_from_Object_Distance) == 0x0000B8, "Member 'BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular::CallFunc_Find_Least_2D_Distant_Object_from_Object_Distance' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular, K2Node_CustomEvent_Player_Controller_1) == 0x0000C0, "Member 'BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular::K2Node_CustomEvent_Player_Controller_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular, CallFunc_GetObjectName_ReturnValue) == 0x0000C8, "Member 'BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular, CallFunc_Send_Air_Drop_Landed_Event_ReturnValue) == 0x0000D8, "Member 'BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular::CallFunc_Send_Air_Drop_Landed_Event_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular, K2Node_CustomEvent_Player_Controller) == 0x0000E0, "Member 'BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular::K2Node_CustomEvent_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular, CallFunc_Array_AddUnique_ReturnValue) == 0x0000E8, "Member 'BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular, Temp_int_Array_Index_Variable_1) == 0x0000EC, "Member 'BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0000F0, "Member 'BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular, CallFunc_Array_Get_Item_1) == 0x0000F8, "Member 'BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular, CallFunc_Is_Initialization_Successful_IsInitialized) == 0x000100, "Member 'BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular::CallFunc_Is_Initialization_Successful_IsInitialized' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular, CallFunc_IsValid_ReturnValue_1) == 0x000101, "Member 'BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular, CallFunc_Concat_StrStr_ReturnValue) == 0x000108, "Member 'BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000118, "Member 'BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000128, "Member 'BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular, CallFunc_Array_RemoveItem_ReturnValue) == 0x000138, "Member 'BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular, K2Node_Event_ExitingController) == 0x000140, "Member 'BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular::K2Node_Event_ExitingController' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular, Temp_int_Array_Index_Variable_2) == 0x000148, "Member 'BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular, K2Node_DynamicCast_AsBP_Player_Controller_Air_Drop_Modular) == 0x000150, "Member 'BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular::K2Node_DynamicCast_AsBP_Player_Controller_Air_Drop_Modular' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular, K2Node_DynamicCast_bSuccess) == 0x000158, "Member 'BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular, CallFunc_Array_Get_Item_2) == 0x000160, "Member 'BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular, CallFunc_IsValid_ReturnValue_2) == 0x000168, "Member 'BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular, K2Node_CustomEvent_Module_Type) == 0x000170, "Member 'BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular::K2Node_CustomEvent_Module_Type' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular, K2Node_CustomEvent_ADM_GMComponent) == 0x000178, "Member 'BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular::K2Node_CustomEvent_ADM_GMComponent' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular, CallFunc_AddComponentToActor_OutNewComponent) == 0x000180, "Member 'BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular::CallFunc_AddComponentToActor_OutNewComponent' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular, CallFunc_Initialize_Bindings_Success_1) == 0x000188, "Member 'BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular::CallFunc_Initialize_Bindings_Success_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular, Temp_int_Loop_Counter_Variable_1) == 0x00018C, "Member 'BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular, Temp_int_Loop_Counter_Variable_2) == 0x000190, "Member 'BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular, CallFunc_Less_IntInt_ReturnValue_1) == 0x000194, "Member 'BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular, CallFunc_Add_IntInt_ReturnValue_1) == 0x000198, "Member 'BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular, CallFunc_Less_IntInt_ReturnValue_2) == 0x00019C, "Member 'BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular, CallFunc_Add_IntInt_ReturnValue_2) == 0x0001A0, "Member 'BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular, K2Node_Event_SLM_Load_Complete) == 0x0001A4, "Member 'BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular::K2Node_Event_SLM_Load_Complete' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular, CallFunc_PreparePrimaryStartsForPlayers_ReturnValue) == 0x0001A8, "Member 'BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular::CallFunc_PreparePrimaryStartsForPlayers_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular, K2Node_Event_Object) == 0x0001B0, "Member 'BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular::K2Node_Event_Object' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular, Temp_int_Array_Index_Variable_3) == 0x0001B8, "Member 'BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular, CallFunc_Array_Get_Item_3) == 0x0001C0, "Member 'BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular, CallFunc_IsValid_ReturnValue_3) == 0x0001C8, "Member 'BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular, K2Node_DynamicCast_AsBP_Player_Controller_Air_Drop_Modular_1) == 0x0001D0, "Member 'BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular::K2Node_DynamicCast_AsBP_Player_Controller_Air_Drop_Modular_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular, K2Node_DynamicCast_bSuccess_1) == 0x0001D8, "Member 'BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular, Temp_int_Loop_Counter_Variable_3) == 0x0001DC, "Member 'BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular, CallFunc_Less_IntInt_ReturnValue_3) == 0x0001E0, "Member 'BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular, CallFunc_Add_IntInt_ReturnValue_3) == 0x0001E4, "Member 'BP_GameMode_AirDropModular_C_ExecuteUbergraph_BP_GameMode_AirDropModular::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");

// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.K2_PostLogin
// 0x0008 (0x0008 - 0x0000)
struct BP_GameMode_AirDropModular_C_K2_PostLogin final
{
public:
	class APlayerController*                      NewPlayer;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_AirDropModular_C_K2_PostLogin) == 0x000008, "Wrong alignment on BP_GameMode_AirDropModular_C_K2_PostLogin");
static_assert(sizeof(BP_GameMode_AirDropModular_C_K2_PostLogin) == 0x000008, "Wrong size on BP_GameMode_AirDropModular_C_K2_PostLogin");
static_assert(offsetof(BP_GameMode_AirDropModular_C_K2_PostLogin, NewPlayer) == 0x000000, "Member 'BP_GameMode_AirDropModular_C_K2_PostLogin::NewPlayer' has a wrong offset!");

// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.SLM_DelayedOnPostLogin
// 0x0008 (0x0008 - 0x0000)
struct BP_GameMode_AirDropModular_C_SLM_DelayedOnPostLogin final
{
public:
	class APlayerController*                      Object;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_AirDropModular_C_SLM_DelayedOnPostLogin) == 0x000008, "Wrong alignment on BP_GameMode_AirDropModular_C_SLM_DelayedOnPostLogin");
static_assert(sizeof(BP_GameMode_AirDropModular_C_SLM_DelayedOnPostLogin) == 0x000008, "Wrong size on BP_GameMode_AirDropModular_C_SLM_DelayedOnPostLogin");
static_assert(offsetof(BP_GameMode_AirDropModular_C_SLM_DelayedOnPostLogin, Object) == 0x000000, "Member 'BP_GameMode_AirDropModular_C_SLM_DelayedOnPostLogin::Object' has a wrong offset!");

// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.SubLevelsLoaded_DelayedBeginPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_GameMode_AirDropModular_C_SubLevelsLoaded_DelayedBeginPlay final
{
public:
	bool                                          SLM_Load_Complete;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameMode_AirDropModular_C_SubLevelsLoaded_DelayedBeginPlay) == 0x000001, "Wrong alignment on BP_GameMode_AirDropModular_C_SubLevelsLoaded_DelayedBeginPlay");
static_assert(sizeof(BP_GameMode_AirDropModular_C_SubLevelsLoaded_DelayedBeginPlay) == 0x000001, "Wrong size on BP_GameMode_AirDropModular_C_SubLevelsLoaded_DelayedBeginPlay");
static_assert(offsetof(BP_GameMode_AirDropModular_C_SubLevelsLoaded_DelayedBeginPlay, SLM_Load_Complete) == 0x000000, "Member 'BP_GameMode_AirDropModular_C_SubLevelsLoaded_DelayedBeginPlay::SLM_Load_Complete' has a wrong offset!");

// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.Destroy ADM Component
// 0x0008 (0x0008 - 0x0000)
struct BP_GameMode_AirDropModular_C_Destroy_ADM_Component final
{
public:
	class UBP_GMComponent_ADM_Base_C*             ADM_GMComponent;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_AirDropModular_C_Destroy_ADM_Component) == 0x000008, "Wrong alignment on BP_GameMode_AirDropModular_C_Destroy_ADM_Component");
static_assert(sizeof(BP_GameMode_AirDropModular_C_Destroy_ADM_Component) == 0x000008, "Wrong size on BP_GameMode_AirDropModular_C_Destroy_ADM_Component");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Destroy_ADM_Component, ADM_GMComponent) == 0x000000, "Member 'BP_GameMode_AirDropModular_C_Destroy_ADM_Component::ADM_GMComponent' has a wrong offset!");

// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.Add ADM Component
// 0x0008 (0x0008 - 0x0000)
struct BP_GameMode_AirDropModular_C_Add_ADM_Component final
{
public:
	class UClass*                                 Module_Type;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_AirDropModular_C_Add_ADM_Component) == 0x000008, "Wrong alignment on BP_GameMode_AirDropModular_C_Add_ADM_Component");
static_assert(sizeof(BP_GameMode_AirDropModular_C_Add_ADM_Component) == 0x000008, "Wrong size on BP_GameMode_AirDropModular_C_Add_ADM_Component");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Add_ADM_Component, Module_Type) == 0x000000, "Member 'BP_GameMode_AirDropModular_C_Add_ADM_Component::Module_Type' has a wrong offset!");

// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.K2_OnLogout
// 0x0008 (0x0008 - 0x0000)
struct BP_GameMode_AirDropModular_C_K2_OnLogout final
{
public:
	class AController*                            ExitingController;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_AirDropModular_C_K2_OnLogout) == 0x000008, "Wrong alignment on BP_GameMode_AirDropModular_C_K2_OnLogout");
static_assert(sizeof(BP_GameMode_AirDropModular_C_K2_OnLogout) == 0x000008, "Wrong size on BP_GameMode_AirDropModular_C_K2_OnLogout");
static_assert(offsetof(BP_GameMode_AirDropModular_C_K2_OnLogout, ExitingController) == 0x000000, "Member 'BP_GameMode_AirDropModular_C_K2_OnLogout::ExitingController' has a wrong offset!");

// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.Deregister Debug UI
// 0x0008 (0x0008 - 0x0000)
struct BP_GameMode_AirDropModular_C_Deregister_Debug_UI final
{
public:
	class ABP_PlayerController_AirDropModular_C*  Player_Controller;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_AirDropModular_C_Deregister_Debug_UI) == 0x000008, "Wrong alignment on BP_GameMode_AirDropModular_C_Deregister_Debug_UI");
static_assert(sizeof(BP_GameMode_AirDropModular_C_Deregister_Debug_UI) == 0x000008, "Wrong size on BP_GameMode_AirDropModular_C_Deregister_Debug_UI");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Deregister_Debug_UI, Player_Controller) == 0x000000, "Member 'BP_GameMode_AirDropModular_C_Deregister_Debug_UI::Player_Controller' has a wrong offset!");

// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.Register Debug UI
// 0x0008 (0x0008 - 0x0000)
struct BP_GameMode_AirDropModular_C_Register_Debug_UI final
{
public:
	class ABP_PlayerController_AirDropModular_C*  Player_Controller;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_AirDropModular_C_Register_Debug_UI) == 0x000008, "Wrong alignment on BP_GameMode_AirDropModular_C_Register_Debug_UI");
static_assert(sizeof(BP_GameMode_AirDropModular_C_Register_Debug_UI) == 0x000008, "Wrong size on BP_GameMode_AirDropModular_C_Register_Debug_UI");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Register_Debug_UI, Player_Controller) == 0x000000, "Member 'BP_GameMode_AirDropModular_C_Register_Debug_UI::Player_Controller' has a wrong offset!");

// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.Container Touched Down_Event
// 0x0008 (0x0008 - 0x0000)
struct BP_GameMode_AirDropModular_C_Container_Touched_Down_Event final
{
public:
	class ABP_AirDropContainer_Base_C*            Container;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_AirDropModular_C_Container_Touched_Down_Event) == 0x000008, "Wrong alignment on BP_GameMode_AirDropModular_C_Container_Touched_Down_Event");
static_assert(sizeof(BP_GameMode_AirDropModular_C_Container_Touched_Down_Event) == 0x000008, "Wrong size on BP_GameMode_AirDropModular_C_Container_Touched_Down_Event");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Container_Touched_Down_Event, Container) == 0x000000, "Member 'BP_GameMode_AirDropModular_C_Container_Touched_Down_Event::Container' has a wrong offset!");

// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.Get All ADM Components
// 0x0028 (0x0028 - 0x0000)
struct BP_GameMode_AirDropModular_C_Get_All_ADM_Components final
{
public:
	TArray<class UBP_GMComponent_ADM_Base_C*>     Components;                                        // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<class UBP_GMComponent_ADM_Base_C*>     All_Registered_Components;                         // 0x0010(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_AirDropModular_C_Get_All_ADM_Components) == 0x000008, "Wrong alignment on BP_GameMode_AirDropModular_C_Get_All_ADM_Components");
static_assert(sizeof(BP_GameMode_AirDropModular_C_Get_All_ADM_Components) == 0x000028, "Wrong size on BP_GameMode_AirDropModular_C_Get_All_ADM_Components");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_All_ADM_Components, Components) == 0x000000, "Member 'BP_GameMode_AirDropModular_C_Get_All_ADM_Components::Components' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_All_ADM_Components, All_Registered_Components) == 0x000010, "Member 'BP_GameMode_AirDropModular_C_Get_All_ADM_Components::All_Registered_Components' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_All_ADM_Components, CallFunc_Array_Add_ReturnValue) == 0x000020, "Member 'BP_GameMode_AirDropModular_C_Get_All_ADM_Components::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.Register ADM Component
// 0x0088 (0x0088 - 0x0000)
struct BP_GameMode_AirDropModular_C_Register_ADM_Component final
{
public:
	class UBP_GMComponent_ADM_Base_C*             Component;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Assigned_ID;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GMComponent_ADM_Debug_C*            K2Node_DynamicCast_AsBP_GMComponent_ADM_Debug;     // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GMComponent_ADM_Radiation_Base_C*   K2Node_DynamicCast_AsBP_GMComponent_ADM_Radiation_Base; // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GMComponent_ADM_Reward_Base_C*      K2Node_DynamicCast_AsBP_GMComponent_ADM_Reward_Base; // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GMComponent_ADM_PostDrop_Base_C*    K2Node_DynamicCast_AsBP_GMComponent_ADM_Post_Drop_Base; // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GMComponent_ADM_Container_Base_C*   K2Node_DynamicCast_AsBP_GMComponent_ADM_Container_Base; // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GMComponent_ADM_CallIn_Base_C*      K2Node_DynamicCast_AsBP_GMComponent_ADM_Call_in_Base; // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_2;            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_3;            // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_4;            // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_5;            // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_AirDropModular_C_Register_ADM_Component) == 0x000008, "Wrong alignment on BP_GameMode_AirDropModular_C_Register_ADM_Component");
static_assert(sizeof(BP_GameMode_AirDropModular_C_Register_ADM_Component) == 0x000088, "Wrong size on BP_GameMode_AirDropModular_C_Register_ADM_Component");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Register_ADM_Component, Component) == 0x000000, "Member 'BP_GameMode_AirDropModular_C_Register_ADM_Component::Component' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Register_ADM_Component, Assigned_ID) == 0x000008, "Member 'BP_GameMode_AirDropModular_C_Register_ADM_Component::Assigned_ID' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Register_ADM_Component, K2Node_DynamicCast_AsBP_GMComponent_ADM_Debug) == 0x000010, "Member 'BP_GameMode_AirDropModular_C_Register_ADM_Component::K2Node_DynamicCast_AsBP_GMComponent_ADM_Debug' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Register_ADM_Component, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_GameMode_AirDropModular_C_Register_ADM_Component::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Register_ADM_Component, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_GameMode_AirDropModular_C_Register_ADM_Component::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Register_ADM_Component, K2Node_DynamicCast_AsBP_GMComponent_ADM_Radiation_Base) == 0x000020, "Member 'BP_GameMode_AirDropModular_C_Register_ADM_Component::K2Node_DynamicCast_AsBP_GMComponent_ADM_Radiation_Base' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Register_ADM_Component, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'BP_GameMode_AirDropModular_C_Register_ADM_Component::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Register_ADM_Component, K2Node_DynamicCast_AsBP_GMComponent_ADM_Reward_Base) == 0x000030, "Member 'BP_GameMode_AirDropModular_C_Register_ADM_Component::K2Node_DynamicCast_AsBP_GMComponent_ADM_Reward_Base' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Register_ADM_Component, K2Node_DynamicCast_bSuccess_2) == 0x000038, "Member 'BP_GameMode_AirDropModular_C_Register_ADM_Component::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Register_ADM_Component, K2Node_DynamicCast_AsBP_GMComponent_ADM_Post_Drop_Base) == 0x000040, "Member 'BP_GameMode_AirDropModular_C_Register_ADM_Component::K2Node_DynamicCast_AsBP_GMComponent_ADM_Post_Drop_Base' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Register_ADM_Component, K2Node_DynamicCast_bSuccess_3) == 0x000048, "Member 'BP_GameMode_AirDropModular_C_Register_ADM_Component::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Register_ADM_Component, K2Node_DynamicCast_AsBP_GMComponent_ADM_Container_Base) == 0x000050, "Member 'BP_GameMode_AirDropModular_C_Register_ADM_Component::K2Node_DynamicCast_AsBP_GMComponent_ADM_Container_Base' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Register_ADM_Component, K2Node_DynamicCast_bSuccess_4) == 0x000058, "Member 'BP_GameMode_AirDropModular_C_Register_ADM_Component::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Register_ADM_Component, K2Node_DynamicCast_AsBP_GMComponent_ADM_Call_in_Base) == 0x000060, "Member 'BP_GameMode_AirDropModular_C_Register_ADM_Component::K2Node_DynamicCast_AsBP_GMComponent_ADM_Call_in_Base' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Register_ADM_Component, K2Node_DynamicCast_bSuccess_5) == 0x000068, "Member 'BP_GameMode_AirDropModular_C_Register_ADM_Component::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Register_ADM_Component, CallFunc_Array_AddUnique_ReturnValue) == 0x00006C, "Member 'BP_GameMode_AirDropModular_C_Register_ADM_Component::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Register_ADM_Component, CallFunc_Array_AddUnique_ReturnValue_1) == 0x000070, "Member 'BP_GameMode_AirDropModular_C_Register_ADM_Component::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Register_ADM_Component, CallFunc_Array_AddUnique_ReturnValue_2) == 0x000074, "Member 'BP_GameMode_AirDropModular_C_Register_ADM_Component::CallFunc_Array_AddUnique_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Register_ADM_Component, CallFunc_Array_AddUnique_ReturnValue_3) == 0x000078, "Member 'BP_GameMode_AirDropModular_C_Register_ADM_Component::CallFunc_Array_AddUnique_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Register_ADM_Component, CallFunc_Array_AddUnique_ReturnValue_4) == 0x00007C, "Member 'BP_GameMode_AirDropModular_C_Register_ADM_Component::CallFunc_Array_AddUnique_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Register_ADM_Component, CallFunc_Array_AddUnique_ReturnValue_5) == 0x000080, "Member 'BP_GameMode_AirDropModular_C_Register_ADM_Component::CallFunc_Array_AddUnique_ReturnValue_5' has a wrong offset!");

// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.Deregister ADM Component
// 0x0070 (0x0070 - 0x0000)
struct BP_GameMode_AirDropModular_C_Deregister_ADM_Component final
{
public:
	class UBP_GMComponent_ADM_Base_C*             Component;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Successful;                                        // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GMComponent_ADM_Debug_C*            K2Node_DynamicCast_AsBP_GMComponent_ADM_Debug;     // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GMComponent_ADM_Radiation_Base_C*   K2Node_DynamicCast_AsBP_GMComponent_ADM_Radiation_Base; // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GMComponent_ADM_Reward_Base_C*      K2Node_DynamicCast_AsBP_GMComponent_ADM_Reward_Base; // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GMComponent_ADM_PostDrop_Base_C*    K2Node_DynamicCast_AsBP_GMComponent_ADM_Post_Drop_Base; // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GMComponent_ADM_Container_Base_C*   K2Node_DynamicCast_AsBP_GMComponent_ADM_Container_Base; // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GMComponent_ADM_CallIn_Base_C*      K2Node_DynamicCast_AsBP_GMComponent_ADM_Call_in_Base; // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_2;           // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_3;           // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_4;           // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_5;           // 0x006F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameMode_AirDropModular_C_Deregister_ADM_Component) == 0x000008, "Wrong alignment on BP_GameMode_AirDropModular_C_Deregister_ADM_Component");
static_assert(sizeof(BP_GameMode_AirDropModular_C_Deregister_ADM_Component) == 0x000070, "Wrong size on BP_GameMode_AirDropModular_C_Deregister_ADM_Component");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Deregister_ADM_Component, Component) == 0x000000, "Member 'BP_GameMode_AirDropModular_C_Deregister_ADM_Component::Component' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Deregister_ADM_Component, Successful) == 0x000008, "Member 'BP_GameMode_AirDropModular_C_Deregister_ADM_Component::Successful' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Deregister_ADM_Component, K2Node_DynamicCast_AsBP_GMComponent_ADM_Debug) == 0x000010, "Member 'BP_GameMode_AirDropModular_C_Deregister_ADM_Component::K2Node_DynamicCast_AsBP_GMComponent_ADM_Debug' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Deregister_ADM_Component, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_GameMode_AirDropModular_C_Deregister_ADM_Component::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Deregister_ADM_Component, CallFunc_Array_RemoveItem_ReturnValue) == 0x000019, "Member 'BP_GameMode_AirDropModular_C_Deregister_ADM_Component::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Deregister_ADM_Component, K2Node_DynamicCast_AsBP_GMComponent_ADM_Radiation_Base) == 0x000020, "Member 'BP_GameMode_AirDropModular_C_Deregister_ADM_Component::K2Node_DynamicCast_AsBP_GMComponent_ADM_Radiation_Base' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Deregister_ADM_Component, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'BP_GameMode_AirDropModular_C_Deregister_ADM_Component::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Deregister_ADM_Component, K2Node_DynamicCast_AsBP_GMComponent_ADM_Reward_Base) == 0x000030, "Member 'BP_GameMode_AirDropModular_C_Deregister_ADM_Component::K2Node_DynamicCast_AsBP_GMComponent_ADM_Reward_Base' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Deregister_ADM_Component, K2Node_DynamicCast_bSuccess_2) == 0x000038, "Member 'BP_GameMode_AirDropModular_C_Deregister_ADM_Component::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Deregister_ADM_Component, K2Node_DynamicCast_AsBP_GMComponent_ADM_Post_Drop_Base) == 0x000040, "Member 'BP_GameMode_AirDropModular_C_Deregister_ADM_Component::K2Node_DynamicCast_AsBP_GMComponent_ADM_Post_Drop_Base' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Deregister_ADM_Component, K2Node_DynamicCast_bSuccess_3) == 0x000048, "Member 'BP_GameMode_AirDropModular_C_Deregister_ADM_Component::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Deregister_ADM_Component, K2Node_DynamicCast_AsBP_GMComponent_ADM_Container_Base) == 0x000050, "Member 'BP_GameMode_AirDropModular_C_Deregister_ADM_Component::K2Node_DynamicCast_AsBP_GMComponent_ADM_Container_Base' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Deregister_ADM_Component, K2Node_DynamicCast_bSuccess_4) == 0x000058, "Member 'BP_GameMode_AirDropModular_C_Deregister_ADM_Component::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Deregister_ADM_Component, K2Node_DynamicCast_AsBP_GMComponent_ADM_Call_in_Base) == 0x000060, "Member 'BP_GameMode_AirDropModular_C_Deregister_ADM_Component::K2Node_DynamicCast_AsBP_GMComponent_ADM_Call_in_Base' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Deregister_ADM_Component, K2Node_DynamicCast_bSuccess_5) == 0x000068, "Member 'BP_GameMode_AirDropModular_C_Deregister_ADM_Component::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Deregister_ADM_Component, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x000069, "Member 'BP_GameMode_AirDropModular_C_Deregister_ADM_Component::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Deregister_ADM_Component, CallFunc_IsValid_ReturnValue) == 0x00006A, "Member 'BP_GameMode_AirDropModular_C_Deregister_ADM_Component::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Deregister_ADM_Component, CallFunc_Not_PreBool_ReturnValue) == 0x00006B, "Member 'BP_GameMode_AirDropModular_C_Deregister_ADM_Component::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Deregister_ADM_Component, CallFunc_Array_RemoveItem_ReturnValue_2) == 0x00006C, "Member 'BP_GameMode_AirDropModular_C_Deregister_ADM_Component::CallFunc_Array_RemoveItem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Deregister_ADM_Component, CallFunc_Array_RemoveItem_ReturnValue_3) == 0x00006D, "Member 'BP_GameMode_AirDropModular_C_Deregister_ADM_Component::CallFunc_Array_RemoveItem_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Deregister_ADM_Component, CallFunc_Array_RemoveItem_ReturnValue_4) == 0x00006E, "Member 'BP_GameMode_AirDropModular_C_Deregister_ADM_Component::CallFunc_Array_RemoveItem_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Deregister_ADM_Component, CallFunc_Array_RemoveItem_ReturnValue_5) == 0x00006F, "Member 'BP_GameMode_AirDropModular_C_Deregister_ADM_Component::CallFunc_Array_RemoveItem_ReturnValue_5' has a wrong offset!");

// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.Print Component List
// 0x00E0 (0x00E0 - 0x0000)
struct BP_GameMode_AirDropModular_C_Print_Component_List final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_GMComponent_ADM_Base_C*>     CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0080(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UActorComponent*                        CallFunc_Array_Get_Item;                           // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default_1;                           // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_AirDropModular_C_Print_Component_List) == 0x000008, "Wrong alignment on BP_GameMode_AirDropModular_C_Print_Component_List");
static_assert(sizeof(BP_GameMode_AirDropModular_C_Print_Component_List) == 0x0000E0, "Wrong size on BP_GameMode_AirDropModular_C_Print_Component_List");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Print_Component_List, Text) == 0x000000, "Member 'BP_GameMode_AirDropModular_C_Print_Component_List::Text' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Print_Component_List, Temp_struct_Variable) == 0x000010, "Member 'BP_GameMode_AirDropModular_C_Print_Component_List::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Print_Component_List, Temp_struct_Variable_1) == 0x000020, "Member 'BP_GameMode_AirDropModular_C_Print_Component_List::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Print_Component_List, Temp_bool_Variable) == 0x000030, "Member 'BP_GameMode_AirDropModular_C_Print_Component_List::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Print_Component_List, Temp_string_Variable) == 0x000038, "Member 'BP_GameMode_AirDropModular_C_Print_Component_List::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Print_Component_List, Temp_string_Variable_1) == 0x000048, "Member 'BP_GameMode_AirDropModular_C_Print_Component_List::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Print_Component_List, Temp_int_Array_Index_Variable) == 0x000058, "Member 'BP_GameMode_AirDropModular_C_Print_Component_List::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Print_Component_List, Temp_int_Loop_Counter_Variable) == 0x00005C, "Member 'BP_GameMode_AirDropModular_C_Print_Component_List::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Print_Component_List, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'BP_GameMode_AirDropModular_C_Print_Component_List::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Print_Component_List, Temp_bool_Variable_1) == 0x000064, "Member 'BP_GameMode_AirDropModular_C_Print_Component_List::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Print_Component_List, CallFunc_Concat_StrStr_ReturnValue) == 0x000068, "Member 'BP_GameMode_AirDropModular_C_Print_Component_List::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Print_Component_List, CallFunc_IsDedicatedServer_ReturnValue) == 0x000078, "Member 'BP_GameMode_AirDropModular_C_Print_Component_List::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Print_Component_List, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000080, "Member 'BP_GameMode_AirDropModular_C_Print_Component_List::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Print_Component_List, CallFunc_Array_Get_Item) == 0x000090, "Member 'BP_GameMode_AirDropModular_C_Print_Component_List::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Print_Component_List, K2Node_Select_Default) == 0x000098, "Member 'BP_GameMode_AirDropModular_C_Print_Component_List::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Print_Component_List, CallFunc_GetObjectName_ReturnValue) == 0x0000A8, "Member 'BP_GameMode_AirDropModular_C_Print_Component_List::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Print_Component_List, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000B8, "Member 'BP_GameMode_AirDropModular_C_Print_Component_List::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Print_Component_List, CallFunc_Array_Length_ReturnValue) == 0x0000C8, "Member 'BP_GameMode_AirDropModular_C_Print_Component_List::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Print_Component_List, CallFunc_Less_IntInt_ReturnValue) == 0x0000CC, "Member 'BP_GameMode_AirDropModular_C_Print_Component_List::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Print_Component_List, K2Node_Select_Default_1) == 0x0000D0, "Member 'BP_GameMode_AirDropModular_C_Print_Component_List::K2Node_Select_Default_1' has a wrong offset!");

// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.Get Game Mode Description
// 0x00F8 (0x00F8 - 0x0000)
struct BP_GameMode_AirDropModular_C_Get_Game_Mode_Description final
{
public:
	class FText                                   Game_Mode_Description;                             // 0x0000(0x0018)(Parm, OutParm)
	TArray<class FText>                           Accumulated_Text;                                  // 0x0018(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           CallFunc_Get_Module_Descriptions_Module_Descriptions; // 0x0038(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Array_Get_Item;                           // 0x0048(0x0018)()
	class FText                                   CallFunc_Join_Text_Array_ReturnValue;              // 0x0060(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0078(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00B8(0x0010)(ReferenceParm)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00D0(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_AirDropModular_C_Get_Game_Mode_Description) == 0x000008, "Wrong alignment on BP_GameMode_AirDropModular_C_Get_Game_Mode_Description");
static_assert(sizeof(BP_GameMode_AirDropModular_C_Get_Game_Mode_Description) == 0x0000F8, "Wrong size on BP_GameMode_AirDropModular_C_Get_Game_Mode_Description");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_Game_Mode_Description, Game_Mode_Description) == 0x000000, "Member 'BP_GameMode_AirDropModular_C_Get_Game_Mode_Description::Game_Mode_Description' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_Game_Mode_Description, Accumulated_Text) == 0x000018, "Member 'BP_GameMode_AirDropModular_C_Get_Game_Mode_Description::Accumulated_Text' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_Game_Mode_Description, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_GameMode_AirDropModular_C_Get_Game_Mode_Description::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_Game_Mode_Description, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_GameMode_AirDropModular_C_Get_Game_Mode_Description::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_Game_Mode_Description, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_GameMode_AirDropModular_C_Get_Game_Mode_Description::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_Game_Mode_Description, CallFunc_Get_Module_Descriptions_Module_Descriptions) == 0x000038, "Member 'BP_GameMode_AirDropModular_C_Get_Game_Mode_Description::CallFunc_Get_Module_Descriptions_Module_Descriptions' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_Game_Mode_Description, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_GameMode_AirDropModular_C_Get_Game_Mode_Description::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_Game_Mode_Description, CallFunc_Join_Text_Array_ReturnValue) == 0x000060, "Member 'BP_GameMode_AirDropModular_C_Get_Game_Mode_Description::CallFunc_Join_Text_Array_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_Game_Mode_Description, K2Node_MakeStruct_FormatArgumentData) == 0x000078, "Member 'BP_GameMode_AirDropModular_C_Get_Game_Mode_Description::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_Game_Mode_Description, K2Node_MakeArray_Array) == 0x0000B8, "Member 'BP_GameMode_AirDropModular_C_Get_Game_Mode_Description::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_Game_Mode_Description, CallFunc_TextIsEmpty_ReturnValue) == 0x0000C8, "Member 'BP_GameMode_AirDropModular_C_Get_Game_Mode_Description::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_Game_Mode_Description, CallFunc_Format_ReturnValue) == 0x0000D0, "Member 'BP_GameMode_AirDropModular_C_Get_Game_Mode_Description::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_Game_Mode_Description, CallFunc_Array_Length_ReturnValue) == 0x0000E8, "Member 'BP_GameMode_AirDropModular_C_Get_Game_Mode_Description::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_Game_Mode_Description, CallFunc_Less_IntInt_ReturnValue) == 0x0000EC, "Member 'BP_GameMode_AirDropModular_C_Get_Game_Mode_Description::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_Game_Mode_Description, CallFunc_Array_Add_ReturnValue) == 0x0000F0, "Member 'BP_GameMode_AirDropModular_C_Get_Game_Mode_Description::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.Set Game Mode Description
// 0x0048 (0x0048 - 0x0000)
struct BP_GameMode_AirDropModular_C_Set_Game_Mode_Description final
{
public:
	class FText                                   New_Game_Mode_Description;                         // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Duplicated_to_Game_State;                          // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           CallFunc_Get_Module_Descriptions_Module_Descriptions; // 0x0020(0x0010)(ReferenceParm)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameState_AirDropModular_C*         K2Node_DynamicCast_AsBP_Game_State_Air_Drop_Modular; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameMode_AirDropModular_C_Set_Game_Mode_Description) == 0x000008, "Wrong alignment on BP_GameMode_AirDropModular_C_Set_Game_Mode_Description");
static_assert(sizeof(BP_GameMode_AirDropModular_C_Set_Game_Mode_Description) == 0x000048, "Wrong size on BP_GameMode_AirDropModular_C_Set_Game_Mode_Description");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Set_Game_Mode_Description, New_Game_Mode_Description) == 0x000000, "Member 'BP_GameMode_AirDropModular_C_Set_Game_Mode_Description::New_Game_Mode_Description' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Set_Game_Mode_Description, Duplicated_to_Game_State) == 0x000018, "Member 'BP_GameMode_AirDropModular_C_Set_Game_Mode_Description::Duplicated_to_Game_State' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Set_Game_Mode_Description, CallFunc_Get_Module_Descriptions_Module_Descriptions) == 0x000020, "Member 'BP_GameMode_AirDropModular_C_Set_Game_Mode_Description::CallFunc_Get_Module_Descriptions_Module_Descriptions' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Set_Game_Mode_Description, CallFunc_GetGameState_ReturnValue) == 0x000030, "Member 'BP_GameMode_AirDropModular_C_Set_Game_Mode_Description::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Set_Game_Mode_Description, K2Node_DynamicCast_AsBP_Game_State_Air_Drop_Modular) == 0x000038, "Member 'BP_GameMode_AirDropModular_C_Set_Game_Mode_Description::K2Node_DynamicCast_AsBP_Game_State_Air_Drop_Modular' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Set_Game_Mode_Description, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_GameMode_AirDropModular_C_Set_Game_Mode_Description::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.Get Is Game Mode Running
// 0x0001 (0x0001 - 0x0000)
struct BP_GameMode_AirDropModular_C_Get_Is_Game_Mode_Running final
{
public:
	bool                                          Is_Game_Mode_Running_0;                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameMode_AirDropModular_C_Get_Is_Game_Mode_Running) == 0x000001, "Wrong alignment on BP_GameMode_AirDropModular_C_Get_Is_Game_Mode_Running");
static_assert(sizeof(BP_GameMode_AirDropModular_C_Get_Is_Game_Mode_Running) == 0x000001, "Wrong size on BP_GameMode_AirDropModular_C_Get_Is_Game_Mode_Running");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_Is_Game_Mode_Running, Is_Game_Mode_Running_0) == 0x000000, "Member 'BP_GameMode_AirDropModular_C_Get_Is_Game_Mode_Running::Is_Game_Mode_Running_0' has a wrong offset!");

// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.Set Is Game Mode Running
// 0x0020 (0x0020 - 0x0000)
struct BP_GameMode_AirDropModular_C_Set_Is_Game_Mode_Running final
{
public:
	bool                                          Running;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Handle_Valid_and_Timer_Exists_Return_Value; // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameState_AirDropModular_C*         K2Node_DynamicCast_AsBP_Game_State_Air_Drop_Modular; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameMode_AirDropModular_C_Set_Is_Game_Mode_Running) == 0x000008, "Wrong alignment on BP_GameMode_AirDropModular_C_Set_Is_Game_Mode_Running");
static_assert(sizeof(BP_GameMode_AirDropModular_C_Set_Is_Game_Mode_Running) == 0x000020, "Wrong size on BP_GameMode_AirDropModular_C_Set_Is_Game_Mode_Running");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Set_Is_Game_Mode_Running, Running) == 0x000000, "Member 'BP_GameMode_AirDropModular_C_Set_Is_Game_Mode_Running::Running' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Set_Is_Game_Mode_Running, CallFunc_Handle_Valid_and_Timer_Exists_Return_Value) == 0x000001, "Member 'BP_GameMode_AirDropModular_C_Set_Is_Game_Mode_Running::CallFunc_Handle_Valid_and_Timer_Exists_Return_Value' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Set_Is_Game_Mode_Running, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'BP_GameMode_AirDropModular_C_Set_Is_Game_Mode_Running::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Set_Is_Game_Mode_Running, K2Node_DynamicCast_AsBP_Game_State_Air_Drop_Modular) == 0x000010, "Member 'BP_GameMode_AirDropModular_C_Set_Is_Game_Mode_Running::K2Node_DynamicCast_AsBP_Game_State_Air_Drop_Modular' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Set_Is_Game_Mode_Running, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_GameMode_AirDropModular_C_Set_Is_Game_Mode_Running::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Set_Is_Game_Mode_Running, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000019, "Member 'BP_GameMode_AirDropModular_C_Set_Is_Game_Mode_Running::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.IsWinner
// 0x0050 (0x0050 - 0x0000)
struct BP_GameMode_AirDropModular_C_IsWinner final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_IsWinner_0;                                  // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Valid_Output_Found;                                // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Is_Winner;                                         // 0x000A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x1];                                        // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_AirDropModular_C*  K2Node_DynamicCast_AsBP_Player_Controller_Air_Drop_Modular; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_GMComponent_ADM_Base_C*>     CallFunc_Get_All_ADM_Components_Components;        // 0x0028(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UBP_GMComponent_ADM_Base_C*             CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_Player_Winner_Player_Is_Winner;        // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_Player_Winner_Output_is_Valid;         // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameMode_AirDropModular_C_IsWinner) == 0x000008, "Wrong alignment on BP_GameMode_AirDropModular_C_IsWinner");
static_assert(sizeof(BP_GameMode_AirDropModular_C_IsWinner) == 0x000050, "Wrong size on BP_GameMode_AirDropModular_C_IsWinner");
static_assert(offsetof(BP_GameMode_AirDropModular_C_IsWinner, PlayerController) == 0x000000, "Member 'BP_GameMode_AirDropModular_C_IsWinner::PlayerController' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_IsWinner, Param_IsWinner_0) == 0x000008, "Member 'BP_GameMode_AirDropModular_C_IsWinner::Param_IsWinner_0' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_IsWinner, Valid_Output_Found) == 0x000009, "Member 'BP_GameMode_AirDropModular_C_IsWinner::Valid_Output_Found' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_IsWinner, Is_Winner) == 0x00000A, "Member 'BP_GameMode_AirDropModular_C_IsWinner::Is_Winner' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_IsWinner, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_GameMode_AirDropModular_C_IsWinner::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_IsWinner, K2Node_DynamicCast_AsBP_Player_Controller_Air_Drop_Modular) == 0x000010, "Member 'BP_GameMode_AirDropModular_C_IsWinner::K2Node_DynamicCast_AsBP_Player_Controller_Air_Drop_Modular' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_IsWinner, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_GameMode_AirDropModular_C_IsWinner::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_IsWinner, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_GameMode_AirDropModular_C_IsWinner::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_IsWinner, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_GameMode_AirDropModular_C_IsWinner::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_IsWinner, CallFunc_Get_All_ADM_Components_Components) == 0x000028, "Member 'BP_GameMode_AirDropModular_C_IsWinner::CallFunc_Get_All_ADM_Components_Components' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_IsWinner, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_GameMode_AirDropModular_C_IsWinner::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_IsWinner, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_GameMode_AirDropModular_C_IsWinner::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_IsWinner, CallFunc_IsValid_ReturnValue) == 0x000044, "Member 'BP_GameMode_AirDropModular_C_IsWinner::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_IsWinner, CallFunc_Less_IntInt_ReturnValue) == 0x000045, "Member 'BP_GameMode_AirDropModular_C_IsWinner::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_IsWinner, CallFunc_Is_Player_Winner_Player_Is_Winner) == 0x000046, "Member 'BP_GameMode_AirDropModular_C_IsWinner::CallFunc_Is_Player_Winner_Player_Is_Winner' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_IsWinner, CallFunc_Is_Player_Winner_Output_is_Valid) == 0x000047, "Member 'BP_GameMode_AirDropModular_C_IsWinner::CallFunc_Is_Player_Winner_Output_is_Valid' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_IsWinner, CallFunc_BooleanAND_ReturnValue) == 0x000048, "Member 'BP_GameMode_AirDropModular_C_IsWinner::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.Get Rewards For Player
// 0x0080 (0x0080 - 0x0000)
struct BP_GameMode_AirDropModular_C_Get_Rewards_For_Player final
{
public:
	class APlayerController*                      Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         Rewards;                                           // 0x0008(0x0010)(Parm, OutParm)
	TArray<class FString>                         Accumulated_Rewards;                               // 0x0018(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_AirDropModular_C*  K2Node_DynamicCast_AsBP_Player_Controller_Air_Drop_Modular; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_GMComponent_ADM_Base_C*>     CallFunc_Get_All_ADM_Components_Components;        // 0x0048(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UBP_GMComponent_ADM_Base_C*             CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_Get_Rewards_For_Player_Rewards;           // 0x0068(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameMode_AirDropModular_C_Get_Rewards_For_Player) == 0x000008, "Wrong alignment on BP_GameMode_AirDropModular_C_Get_Rewards_For_Player");
static_assert(sizeof(BP_GameMode_AirDropModular_C_Get_Rewards_For_Player) == 0x000080, "Wrong size on BP_GameMode_AirDropModular_C_Get_Rewards_For_Player");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_Rewards_For_Player, Controller) == 0x000000, "Member 'BP_GameMode_AirDropModular_C_Get_Rewards_For_Player::Controller' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_Rewards_For_Player, Rewards) == 0x000008, "Member 'BP_GameMode_AirDropModular_C_Get_Rewards_For_Player::Rewards' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_Rewards_For_Player, Accumulated_Rewards) == 0x000018, "Member 'BP_GameMode_AirDropModular_C_Get_Rewards_For_Player::Accumulated_Rewards' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_Rewards_For_Player, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_GameMode_AirDropModular_C_Get_Rewards_For_Player::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_Rewards_For_Player, K2Node_DynamicCast_AsBP_Player_Controller_Air_Drop_Modular) == 0x000030, "Member 'BP_GameMode_AirDropModular_C_Get_Rewards_For_Player::K2Node_DynamicCast_AsBP_Player_Controller_Air_Drop_Modular' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_Rewards_For_Player, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_GameMode_AirDropModular_C_Get_Rewards_For_Player::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_Rewards_For_Player, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'BP_GameMode_AirDropModular_C_Get_Rewards_For_Player::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_Rewards_For_Player, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BP_GameMode_AirDropModular_C_Get_Rewards_For_Player::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_Rewards_For_Player, CallFunc_Get_All_ADM_Components_Components) == 0x000048, "Member 'BP_GameMode_AirDropModular_C_Get_Rewards_For_Player::CallFunc_Get_All_ADM_Components_Components' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_Rewards_For_Player, CallFunc_Array_Get_Item) == 0x000058, "Member 'BP_GameMode_AirDropModular_C_Get_Rewards_For_Player::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_Rewards_For_Player, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'BP_GameMode_AirDropModular_C_Get_Rewards_For_Player::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_Rewards_For_Player, CallFunc_Get_Rewards_For_Player_Rewards) == 0x000068, "Member 'BP_GameMode_AirDropModular_C_Get_Rewards_For_Player::CallFunc_Get_Rewards_For_Player_Rewards' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_Rewards_For_Player, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'BP_GameMode_AirDropModular_C_Get_Rewards_For_Player::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_Rewards_For_Player, CallFunc_Less_IntInt_ReturnValue) == 0x00007C, "Member 'BP_GameMode_AirDropModular_C_Get_Rewards_For_Player::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.ReadyToStartMatch
// 0x0038 (0x0038 - 0x0000)
struct BP_GameMode_AirDropModular_C_ReadyToStartMatch final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          Modules_Ready;                                     // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_GMComponent_ADM_Base_C*>     CallFunc_Get_All_ADM_Components_Components;        // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UBP_GMComponent_ADM_Base_C*             CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Ready_To_Start_Match_Return_Value;        // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ReadyToStartMatch_ReturnValue;            // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameMode_AirDropModular_C_ReadyToStartMatch) == 0x000008, "Wrong alignment on BP_GameMode_AirDropModular_C_ReadyToStartMatch");
static_assert(sizeof(BP_GameMode_AirDropModular_C_ReadyToStartMatch) == 0x000038, "Wrong size on BP_GameMode_AirDropModular_C_ReadyToStartMatch");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ReadyToStartMatch, ReturnValue) == 0x000000, "Member 'BP_GameMode_AirDropModular_C_ReadyToStartMatch::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ReadyToStartMatch, Modules_Ready) == 0x000001, "Member 'BP_GameMode_AirDropModular_C_ReadyToStartMatch::Modules_Ready' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ReadyToStartMatch, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_GameMode_AirDropModular_C_ReadyToStartMatch::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ReadyToStartMatch, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_GameMode_AirDropModular_C_ReadyToStartMatch::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ReadyToStartMatch, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_GameMode_AirDropModular_C_ReadyToStartMatch::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ReadyToStartMatch, CallFunc_Get_All_ADM_Components_Components) == 0x000010, "Member 'BP_GameMode_AirDropModular_C_ReadyToStartMatch::CallFunc_Get_All_ADM_Components_Components' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ReadyToStartMatch, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_GameMode_AirDropModular_C_ReadyToStartMatch::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ReadyToStartMatch, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_GameMode_AirDropModular_C_ReadyToStartMatch::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ReadyToStartMatch, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'BP_GameMode_AirDropModular_C_ReadyToStartMatch::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ReadyToStartMatch, CallFunc_Less_IntInt_ReturnValue) == 0x00002D, "Member 'BP_GameMode_AirDropModular_C_ReadyToStartMatch::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ReadyToStartMatch, CallFunc_Ready_To_Start_Match_Return_Value) == 0x00002E, "Member 'BP_GameMode_AirDropModular_C_ReadyToStartMatch::CallFunc_Ready_To_Start_Match_Return_Value' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ReadyToStartMatch, CallFunc_ReadyToStartMatch_ReturnValue) == 0x00002F, "Member 'BP_GameMode_AirDropModular_C_ReadyToStartMatch::CallFunc_ReadyToStartMatch_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ReadyToStartMatch, CallFunc_BooleanAND_ReturnValue) == 0x000030, "Member 'BP_GameMode_AirDropModular_C_ReadyToStartMatch::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ReadyToStartMatch, CallFunc_BooleanAND_ReturnValue_1) == 0x000031, "Member 'BP_GameMode_AirDropModular_C_ReadyToStartMatch::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_ReadyToStartMatch, CallFunc_BooleanAND_ReturnValue_2) == 0x000032, "Member 'BP_GameMode_AirDropModular_C_ReadyToStartMatch::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.Get Module Descriptions
// 0x0058 (0x0058 - 0x0000)
struct BP_GameMode_AirDropModular_C_Get_Module_Descriptions final
{
public:
	TArray<class FText>                           Module_Descriptions;                               // 0x0000(0x0010)(Parm, OutParm)
	TArray<class FText>                           Accumulated_Text;                                  // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_GMComponent_ADM_Base_C*>     CallFunc_Get_All_ADM_Components_Components;        // 0x0030(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UBP_GMComponent_ADM_Base_C*             CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_AirDropModular_C_Get_Module_Descriptions) == 0x000008, "Wrong alignment on BP_GameMode_AirDropModular_C_Get_Module_Descriptions");
static_assert(sizeof(BP_GameMode_AirDropModular_C_Get_Module_Descriptions) == 0x000058, "Wrong size on BP_GameMode_AirDropModular_C_Get_Module_Descriptions");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_Module_Descriptions, Module_Descriptions) == 0x000000, "Member 'BP_GameMode_AirDropModular_C_Get_Module_Descriptions::Module_Descriptions' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_Module_Descriptions, Accumulated_Text) == 0x000010, "Member 'BP_GameMode_AirDropModular_C_Get_Module_Descriptions::Accumulated_Text' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_Module_Descriptions, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_GameMode_AirDropModular_C_Get_Module_Descriptions::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_Module_Descriptions, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_GameMode_AirDropModular_C_Get_Module_Descriptions::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_Module_Descriptions, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_GameMode_AirDropModular_C_Get_Module_Descriptions::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_Module_Descriptions, CallFunc_Get_All_ADM_Components_Components) == 0x000030, "Member 'BP_GameMode_AirDropModular_C_Get_Module_Descriptions::CallFunc_Get_All_ADM_Components_Components' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_Module_Descriptions, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_GameMode_AirDropModular_C_Get_Module_Descriptions::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_Module_Descriptions, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BP_GameMode_AirDropModular_C_Get_Module_Descriptions::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_Module_Descriptions, CallFunc_TextIsEmpty_ReturnValue) == 0x000049, "Member 'BP_GameMode_AirDropModular_C_Get_Module_Descriptions::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_Module_Descriptions, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'BP_GameMode_AirDropModular_C_Get_Module_Descriptions::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_Module_Descriptions, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_GameMode_AirDropModular_C_Get_Module_Descriptions::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_Module_Descriptions, CallFunc_Array_Add_ReturnValue) == 0x000054, "Member 'BP_GameMode_AirDropModular_C_Get_Module_Descriptions::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_GameMode_AirDropModular.BP_GameMode_AirDropModular_C.Get Default Game Mode Description
// 0x0138 (0x0138 - 0x0000)
struct BP_GameMode_AirDropModular_C_Get_Default_Game_Mode_Description final
{
public:
	class FText                                   Game_Mode_Description;                             // 0x0000(0x0018)(Parm, OutParm)
	TArray<class UBP_GMComponent_ADM_Base_C*>     Accumulated_Components;                            // 0x0018(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<class FText>                           Accumulated_Text;                                  // 0x0028(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Join_Text_Array_ReturnValue;              // 0x0048(0x0018)()
	class UBP_GMComponent_ADM_Base_C*             CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0070(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00B0(0x0010)(ReferenceParm)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00C8(0x0018)()
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_GMComponent_ADM_Radiation_Base_C*> CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x00E8(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UBP_GMComponent_ADM_Reward_Base_C*> CallFunc_K2_GetComponentsByClass_ReturnValue_1;    // 0x00F8(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UBP_GMComponent_ADM_PostDrop_Base_C*> CallFunc_K2_GetComponentsByClass_ReturnValue_2;    // 0x0108(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UBP_GMComponent_ADM_Container_Base_C*> CallFunc_K2_GetComponentsByClass_ReturnValue_3;    // 0x0118(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UBP_GMComponent_ADM_CallIn_Base_C*> CallFunc_K2_GetComponentsByClass_ReturnValue_4;    // 0x0128(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_GameMode_AirDropModular_C_Get_Default_Game_Mode_Description) == 0x000008, "Wrong alignment on BP_GameMode_AirDropModular_C_Get_Default_Game_Mode_Description");
static_assert(sizeof(BP_GameMode_AirDropModular_C_Get_Default_Game_Mode_Description) == 0x000138, "Wrong size on BP_GameMode_AirDropModular_C_Get_Default_Game_Mode_Description");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_Default_Game_Mode_Description, Game_Mode_Description) == 0x000000, "Member 'BP_GameMode_AirDropModular_C_Get_Default_Game_Mode_Description::Game_Mode_Description' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_Default_Game_Mode_Description, Accumulated_Components) == 0x000018, "Member 'BP_GameMode_AirDropModular_C_Get_Default_Game_Mode_Description::Accumulated_Components' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_Default_Game_Mode_Description, Accumulated_Text) == 0x000028, "Member 'BP_GameMode_AirDropModular_C_Get_Default_Game_Mode_Description::Accumulated_Text' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_Default_Game_Mode_Description, Temp_int_Array_Index_Variable) == 0x000038, "Member 'BP_GameMode_AirDropModular_C_Get_Default_Game_Mode_Description::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_Default_Game_Mode_Description, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'BP_GameMode_AirDropModular_C_Get_Default_Game_Mode_Description::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_Default_Game_Mode_Description, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BP_GameMode_AirDropModular_C_Get_Default_Game_Mode_Description::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_Default_Game_Mode_Description, CallFunc_Join_Text_Array_ReturnValue) == 0x000048, "Member 'BP_GameMode_AirDropModular_C_Get_Default_Game_Mode_Description::CallFunc_Join_Text_Array_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_Default_Game_Mode_Description, CallFunc_Array_Get_Item) == 0x000060, "Member 'BP_GameMode_AirDropModular_C_Get_Default_Game_Mode_Description::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_Default_Game_Mode_Description, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'BP_GameMode_AirDropModular_C_Get_Default_Game_Mode_Description::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_Default_Game_Mode_Description, CallFunc_Less_IntInt_ReturnValue) == 0x00006C, "Member 'BP_GameMode_AirDropModular_C_Get_Default_Game_Mode_Description::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_Default_Game_Mode_Description, K2Node_MakeStruct_FormatArgumentData) == 0x000070, "Member 'BP_GameMode_AirDropModular_C_Get_Default_Game_Mode_Description::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_Default_Game_Mode_Description, K2Node_MakeArray_Array) == 0x0000B0, "Member 'BP_GameMode_AirDropModular_C_Get_Default_Game_Mode_Description::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_Default_Game_Mode_Description, CallFunc_TextIsEmpty_ReturnValue) == 0x0000C0, "Member 'BP_GameMode_AirDropModular_C_Get_Default_Game_Mode_Description::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_Default_Game_Mode_Description, CallFunc_Format_ReturnValue) == 0x0000C8, "Member 'BP_GameMode_AirDropModular_C_Get_Default_Game_Mode_Description::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_Default_Game_Mode_Description, CallFunc_Array_Add_ReturnValue) == 0x0000E0, "Member 'BP_GameMode_AirDropModular_C_Get_Default_Game_Mode_Description::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_Default_Game_Mode_Description, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x0000E8, "Member 'BP_GameMode_AirDropModular_C_Get_Default_Game_Mode_Description::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_Default_Game_Mode_Description, CallFunc_K2_GetComponentsByClass_ReturnValue_1) == 0x0000F8, "Member 'BP_GameMode_AirDropModular_C_Get_Default_Game_Mode_Description::CallFunc_K2_GetComponentsByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_Default_Game_Mode_Description, CallFunc_K2_GetComponentsByClass_ReturnValue_2) == 0x000108, "Member 'BP_GameMode_AirDropModular_C_Get_Default_Game_Mode_Description::CallFunc_K2_GetComponentsByClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_Default_Game_Mode_Description, CallFunc_K2_GetComponentsByClass_ReturnValue_3) == 0x000118, "Member 'BP_GameMode_AirDropModular_C_Get_Default_Game_Mode_Description::CallFunc_K2_GetComponentsByClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_AirDropModular_C_Get_Default_Game_Mode_Description, CallFunc_K2_GetComponentsByClass_ReturnValue_4) == 0x000128, "Member 'BP_GameMode_AirDropModular_C_Get_Default_Game_Mode_Description::CallFunc_K2_GetComponentsByClass_ReturnValue_4' has a wrong offset!");

}

