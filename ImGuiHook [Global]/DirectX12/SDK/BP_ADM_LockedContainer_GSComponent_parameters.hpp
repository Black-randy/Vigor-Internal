#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ADM_LockedContainer_GSComponent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_ADM_LockedContainer_GSComponent.BP_ADM_LockedContainer_GSComponent_C.ExecuteUbergraph_BP_ADM_LockedContainer_GSComponent
// 0x0070 (0x0070 - 0x0000)
struct BP_ADM_LockedContainer_GSComponent_C_ExecuteUbergraph_BP_ADM_LockedContainer_GSComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0xC];                                        // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             K2Node_CustomEvent_InTransform;                    // 0x0010(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ADM_LockedContainer_GSComponent_C_ExecuteUbergraph_BP_ADM_LockedContainer_GSComponent) == 0x000010, "Wrong alignment on BP_ADM_LockedContainer_GSComponent_C_ExecuteUbergraph_BP_ADM_LockedContainer_GSComponent");
static_assert(sizeof(BP_ADM_LockedContainer_GSComponent_C_ExecuteUbergraph_BP_ADM_LockedContainer_GSComponent) == 0x000070, "Wrong size on BP_ADM_LockedContainer_GSComponent_C_ExecuteUbergraph_BP_ADM_LockedContainer_GSComponent");
static_assert(offsetof(BP_ADM_LockedContainer_GSComponent_C_ExecuteUbergraph_BP_ADM_LockedContainer_GSComponent, EntryPoint) == 0x000000, "Member 'BP_ADM_LockedContainer_GSComponent_C_ExecuteUbergraph_BP_ADM_LockedContainer_GSComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_GSComponent_C_ExecuteUbergraph_BP_ADM_LockedContainer_GSComponent, K2Node_CustomEvent_InTransform) == 0x000010, "Member 'BP_ADM_LockedContainer_GSComponent_C_ExecuteUbergraph_BP_ADM_LockedContainer_GSComponent::K2Node_CustomEvent_InTransform' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_GSComponent_C_ExecuteUbergraph_BP_ADM_LockedContainer_GSComponent, CallFunc_BreakTransform_Location) == 0x000040, "Member 'BP_ADM_LockedContainer_GSComponent_C_ExecuteUbergraph_BP_ADM_LockedContainer_GSComponent::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_GSComponent_C_ExecuteUbergraph_BP_ADM_LockedContainer_GSComponent, CallFunc_BreakTransform_Rotation) == 0x00004C, "Member 'BP_ADM_LockedContainer_GSComponent_C_ExecuteUbergraph_BP_ADM_LockedContainer_GSComponent::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_GSComponent_C_ExecuteUbergraph_BP_ADM_LockedContainer_GSComponent, CallFunc_BreakTransform_Scale) == 0x000058, "Member 'BP_ADM_LockedContainer_GSComponent_C_ExecuteUbergraph_BP_ADM_LockedContainer_GSComponent::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_GSComponent_C_ExecuteUbergraph_BP_ADM_LockedContainer_GSComponent, CallFunc_Add_VectorVector_ReturnValue) == 0x000064, "Member 'BP_ADM_LockedContainer_GSComponent_C_ExecuteUbergraph_BP_ADM_LockedContainer_GSComponent::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_ADM_LockedContainer_GSComponent.BP_ADM_LockedContainer_GSComponent_C.Draw pillar on location
// 0x0030 (0x0030 - 0x0000)
struct BP_ADM_LockedContainer_GSComponent_C_Draw_pillar_on_location final
{
public:
	struct FTransform                             InTransform;                                       // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ADM_LockedContainer_GSComponent_C_Draw_pillar_on_location) == 0x000010, "Wrong alignment on BP_ADM_LockedContainer_GSComponent_C_Draw_pillar_on_location");
static_assert(sizeof(BP_ADM_LockedContainer_GSComponent_C_Draw_pillar_on_location) == 0x000030, "Wrong size on BP_ADM_LockedContainer_GSComponent_C_Draw_pillar_on_location");
static_assert(offsetof(BP_ADM_LockedContainer_GSComponent_C_Draw_pillar_on_location, InTransform) == 0x000000, "Member 'BP_ADM_LockedContainer_GSComponent_C_Draw_pillar_on_location::InTransform' has a wrong offset!");

// Function BP_ADM_LockedContainer_GSComponent.BP_ADM_LockedContainer_GSComponent_C.Get all player controllers that are not in array
// 0x0080 (0x0080 - 0x0000)
struct BP_ADM_LockedContainer_GSComponent_C_Get_all_player_controllers_that_are_not_in_array final
{
public:
	TArray<class ABP_Character_Matches_C*>        Characters_to_ignore;                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class APlayerController*>              Player_Controllers;                                // 0x0010(0x0010)(Parm, OutParm)
	TArray<class APlayerController*>              Helper;                                            // 0x0020(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_Matches_C*                CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Matches_C*         K2Node_DynamicCast_AsBP_Player_Controller_Matches; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APlayerController*>              CallFunc_GetPlayerControllers_ReturnValue;         // 0x0070(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_ADM_LockedContainer_GSComponent_C_Get_all_player_controllers_that_are_not_in_array) == 0x000008, "Wrong alignment on BP_ADM_LockedContainer_GSComponent_C_Get_all_player_controllers_that_are_not_in_array");
static_assert(sizeof(BP_ADM_LockedContainer_GSComponent_C_Get_all_player_controllers_that_are_not_in_array) == 0x000080, "Wrong size on BP_ADM_LockedContainer_GSComponent_C_Get_all_player_controllers_that_are_not_in_array");
static_assert(offsetof(BP_ADM_LockedContainer_GSComponent_C_Get_all_player_controllers_that_are_not_in_array, Characters_to_ignore) == 0x000000, "Member 'BP_ADM_LockedContainer_GSComponent_C_Get_all_player_controllers_that_are_not_in_array::Characters_to_ignore' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_GSComponent_C_Get_all_player_controllers_that_are_not_in_array, Player_Controllers) == 0x000010, "Member 'BP_ADM_LockedContainer_GSComponent_C_Get_all_player_controllers_that_are_not_in_array::Player_Controllers' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_GSComponent_C_Get_all_player_controllers_that_are_not_in_array, Helper) == 0x000020, "Member 'BP_ADM_LockedContainer_GSComponent_C_Get_all_player_controllers_that_are_not_in_array::Helper' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_GSComponent_C_Get_all_player_controllers_that_are_not_in_array, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_ADM_LockedContainer_GSComponent_C_Get_all_player_controllers_that_are_not_in_array::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_GSComponent_C_Get_all_player_controllers_that_are_not_in_array, Temp_int_Array_Index_Variable) == 0x000034, "Member 'BP_ADM_LockedContainer_GSComponent_C_Get_all_player_controllers_that_are_not_in_array::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_GSComponent_C_Get_all_player_controllers_that_are_not_in_array, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BP_ADM_LockedContainer_GSComponent_C_Get_all_player_controllers_that_are_not_in_array::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_GSComponent_C_Get_all_player_controllers_that_are_not_in_array, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_ADM_LockedContainer_GSComponent_C_Get_all_player_controllers_that_are_not_in_array::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_GSComponent_C_Get_all_player_controllers_that_are_not_in_array, CallFunc_GetController_ReturnValue) == 0x000048, "Member 'BP_ADM_LockedContainer_GSComponent_C_Get_all_player_controllers_that_are_not_in_array::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_GSComponent_C_Get_all_player_controllers_that_are_not_in_array, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_ADM_LockedContainer_GSComponent_C_Get_all_player_controllers_that_are_not_in_array::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_GSComponent_C_Get_all_player_controllers_that_are_not_in_array, K2Node_DynamicCast_AsBP_Player_Controller_Matches) == 0x000058, "Member 'BP_ADM_LockedContainer_GSComponent_C_Get_all_player_controllers_that_are_not_in_array::K2Node_DynamicCast_AsBP_Player_Controller_Matches' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_GSComponent_C_Get_all_player_controllers_that_are_not_in_array, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'BP_ADM_LockedContainer_GSComponent_C_Get_all_player_controllers_that_are_not_in_array::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_GSComponent_C_Get_all_player_controllers_that_are_not_in_array, CallFunc_Add_IntInt_ReturnValue) == 0x000064, "Member 'BP_ADM_LockedContainer_GSComponent_C_Get_all_player_controllers_that_are_not_in_array::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_GSComponent_C_Get_all_player_controllers_that_are_not_in_array, CallFunc_Array_RemoveItem_ReturnValue) == 0x000068, "Member 'BP_ADM_LockedContainer_GSComponent_C_Get_all_player_controllers_that_are_not_in_array::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_LockedContainer_GSComponent_C_Get_all_player_controllers_that_are_not_in_array, CallFunc_GetPlayerControllers_ReturnValue) == 0x000070, "Member 'BP_ADM_LockedContainer_GSComponent_C_Get_all_player_controllers_that_are_not_in_array::CallFunc_GetPlayerControllers_ReturnValue' has a wrong offset!");

}

