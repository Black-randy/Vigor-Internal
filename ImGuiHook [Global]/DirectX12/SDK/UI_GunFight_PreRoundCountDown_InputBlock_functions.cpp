#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_GunFight_PreRoundCountDown_InputBlock

#include "Basic.hpp"

#include "UI_GunFight_PreRoundCountDown_InputBlock_classes.hpp"
#include "UI_GunFight_PreRoundCountDown_InputBlock_parameters.hpp"


namespace SDK
{

// Function UI_GunFight_PreRoundCountDown_InputBlock.UI_GunFight_PreRoundCountDown_InputBlock_C.ExecuteUbergraph_UI_GunFight_PreRoundCountDown_InputBlock
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_GunFight_PreRoundCountDown_InputBlock_C::ExecuteUbergraph_UI_GunFight_PreRoundCountDown_InputBlock(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GunFight_PreRoundCountDown_InputBlock_C", "ExecuteUbergraph_UI_GunFight_PreRoundCountDown_InputBlock");

	Params::UI_GunFight_PreRoundCountDown_InputBlock_C_ExecuteUbergraph_UI_GunFight_PreRoundCountDown_InputBlock Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_GunFight_PreRoundCountDown_InputBlock.UI_GunFight_PreRoundCountDown_InputBlock_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_GunFight_PreRoundCountDown_InputBlock_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GunFight_PreRoundCountDown_InputBlock_C", "Tick");

	Params::UI_GunFight_PreRoundCountDown_InputBlock_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_GunFight_PreRoundCountDown_InputBlock.UI_GunFight_PreRoundCountDown_InputBlock_C.StopInputBlock
// (BlueprintCallable, BlueprintEvent)

void UUI_GunFight_PreRoundCountDown_InputBlock_C::StopInputBlock()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GunFight_PreRoundCountDown_InputBlock_C", "StopInputBlock");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_GunFight_PreRoundCountDown_InputBlock.UI_GunFight_PreRoundCountDown_InputBlock_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_GunFight_PreRoundCountDown_InputBlock_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GunFight_PreRoundCountDown_InputBlock_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_GunFight_PreRoundCountDown_InputBlock.UI_GunFight_PreRoundCountDown_InputBlock_C.InputIgnore
// (BlueprintCallable, BlueprintEvent)

void UUI_GunFight_PreRoundCountDown_InputBlock_C::InputIgnore()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GunFight_PreRoundCountDown_InputBlock_C", "InputIgnore");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_GunFight_PreRoundCountDown_InputBlock.UI_GunFight_PreRoundCountDown_InputBlock_C.StartInputBlock
// (BlueprintCallable, BlueprintEvent)

void UUI_GunFight_PreRoundCountDown_InputBlock_C::StartInputBlock()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GunFight_PreRoundCountDown_InputBlock_C", "StartInputBlock");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_GunFight_PreRoundCountDown_InputBlock.UI_GunFight_PreRoundCountDown_InputBlock_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_GunFight_PreRoundCountDown_InputBlock_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GunFight_PreRoundCountDown_InputBlock_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_GunFight_PreRoundCountDown_InputBlock.UI_GunFight_PreRoundCountDown_InputBlock_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_GunFight_PreRoundCountDown_InputBlock_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GunFight_PreRoundCountDown_InputBlock_C", "PreConstruct");

	Params::UI_GunFight_PreRoundCountDown_InputBlock_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_GunFight_PreRoundCountDown_InputBlock.UI_GunFight_PreRoundCountDown_InputBlock_C.CircularSecondProgress
// (BlueprintCallable, BlueprintEvent)

void UUI_GunFight_PreRoundCountDown_InputBlock_C::CircularSecondProgress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GunFight_PreRoundCountDown_InputBlock_C", "CircularSecondProgress");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_GunFight_PreRoundCountDown_InputBlock.UI_GunFight_PreRoundCountDown_InputBlock_C.Set PreRound Time
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Time_To_Round_Start                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_GunFight_PreRoundCountDown_InputBlock_C::Set_PreRound_Time(int32 Time_To_Round_Start)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GunFight_PreRoundCountDown_InputBlock_C", "Set PreRound Time");

	Params::UI_GunFight_PreRoundCountDown_InputBlock_C_Set_PreRound_Time Parms{};

	Parms.Time_To_Round_Start = Time_To_Round_Start;

	UObject::ProcessEvent(Func, &Parms);
}

}

