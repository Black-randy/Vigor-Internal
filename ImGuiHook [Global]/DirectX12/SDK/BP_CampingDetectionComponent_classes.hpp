#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CampingDetectionComponent

#include "Basic.hpp"

#include "S_CharacterCamping_structs.hpp"
#include "Engine_structs.hpp"
#include "BP_GameModeComponent_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CampingDetectionComponent.BP_CampingDetectionComponent_C
// 0x0088 (0x0140 - 0x00B8)
class UBP_CampingDetectionComponent_C final : public UBP_GameModeComponent_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_CampingDetectionComponent_C;     // 0x00B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TMap<class AHumanCharacter*, struct FS_CharacterCamping> TrackedPositions;                                  // 0x00C0(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	FMulticastInlineDelegateProperty_             Player_Is_Camping;                                 // 0x0110(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	float                                         Distance_Threshold;                                // 0x0120(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Check_Period;                                      // 0x0124(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Max_Time_Camping;                                  // 0x0128(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           Camping_Detection_Loop_Timer;                      // 0x0130(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          Detection_Is_Running;                              // 0x0138(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void Player_Is_Camping__DelegateSignature(class AHumanCharacter* Human_Character);
	void ExecuteUbergraph_BP_CampingDetectionComponent(int32 EntryPoint);
	void Stop_Camping_Detection();
	void Start_Camping_Detection();
	void Match_Has_Started();
	void Check_Camping_Players();
	void Check_If_Character_Camping(class AHumanCharacter* Human_Character);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CampingDetectionComponent_C">();
	}
	static class UBP_CampingDetectionComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_CampingDetectionComponent_C>();
	}
};
static_assert(alignof(UBP_CampingDetectionComponent_C) == 0x000008, "Wrong alignment on UBP_CampingDetectionComponent_C");
static_assert(sizeof(UBP_CampingDetectionComponent_C) == 0x000140, "Wrong size on UBP_CampingDetectionComponent_C");
static_assert(offsetof(UBP_CampingDetectionComponent_C, UberGraphFrame_BP_CampingDetectionComponent_C) == 0x0000B8, "Member 'UBP_CampingDetectionComponent_C::UberGraphFrame_BP_CampingDetectionComponent_C' has a wrong offset!");
static_assert(offsetof(UBP_CampingDetectionComponent_C, TrackedPositions) == 0x0000C0, "Member 'UBP_CampingDetectionComponent_C::TrackedPositions' has a wrong offset!");
static_assert(offsetof(UBP_CampingDetectionComponent_C, Player_Is_Camping) == 0x000110, "Member 'UBP_CampingDetectionComponent_C::Player_Is_Camping' has a wrong offset!");
static_assert(offsetof(UBP_CampingDetectionComponent_C, Distance_Threshold) == 0x000120, "Member 'UBP_CampingDetectionComponent_C::Distance_Threshold' has a wrong offset!");
static_assert(offsetof(UBP_CampingDetectionComponent_C, Check_Period) == 0x000124, "Member 'UBP_CampingDetectionComponent_C::Check_Period' has a wrong offset!");
static_assert(offsetof(UBP_CampingDetectionComponent_C, Max_Time_Camping) == 0x000128, "Member 'UBP_CampingDetectionComponent_C::Max_Time_Camping' has a wrong offset!");
static_assert(offsetof(UBP_CampingDetectionComponent_C, Camping_Detection_Loop_Timer) == 0x000130, "Member 'UBP_CampingDetectionComponent_C::Camping_Detection_Loop_Timer' has a wrong offset!");
static_assert(offsetof(UBP_CampingDetectionComponent_C, Detection_Is_Running) == 0x000138, "Member 'UBP_CampingDetectionComponent_C::Detection_Is_Running' has a wrong offset!");

}

