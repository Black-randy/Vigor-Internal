#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: S_ShootingChallenge

#include "Basic.hpp"


namespace SDK
{

// UserDefinedStruct S_ShootingChallenge.S_ShootingChallenge
// 0x0090 (0x0090 - 0x0000)
struct FS_ShootingChallenge final
{
public:
	class FName                                   ChallengeID_75_F80EB50349D110B09804C69DF4EE8C3E;   // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   ChallengeName_48_3F5BBC0C441A235C6C4039B12FC9AE40; // 0x0008(0x0018)(Edit, BlueprintVisible)
	class FText                                   ChallengeObjectiveDescription_49_846EF7404718E9E75BC498B44CDC85E5; // 0x0020(0x0018)(Edit, BlueprintVisible)
	class UClass*                                 RequiredWeaponActorClass_65_830692724C82EE4F928AD68BFF8CF1A4; // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Target_37_9CE4A7AB44A39974E6E689907D2DB81D;        // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              TargetPicture_84_33D1D8B943C937DBD66320BF08C363BC; // 0x0048(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         TargetQuantity_72_FB584CFB4957C2D33C7385AFA9B51C0B; // 0x0070(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SpawnpointTag_47_E9A513B947E0F82A40027E9C45A26EE1; // 0x0074(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BronzeTime_17_8B8D308849741464E8A4E0A5637A4892;    // 0x007C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SilverTime_50_7C55794D4913D5DD65EB8D98A26B27A0;    // 0x0080(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GoldTime_51_BF7AB6554C44B5F0B6469A8E58C898DE;      // 0x0084(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxChallengeDuration_22_344CC4DC4420477F8A4A7D97AE694924; // 0x0088(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FS_ShootingChallenge) == 0x000008, "Wrong alignment on FS_ShootingChallenge");
static_assert(sizeof(FS_ShootingChallenge) == 0x000090, "Wrong size on FS_ShootingChallenge");
static_assert(offsetof(FS_ShootingChallenge, ChallengeID_75_F80EB50349D110B09804C69DF4EE8C3E) == 0x000000, "Member 'FS_ShootingChallenge::ChallengeID_75_F80EB50349D110B09804C69DF4EE8C3E' has a wrong offset!");
static_assert(offsetof(FS_ShootingChallenge, ChallengeName_48_3F5BBC0C441A235C6C4039B12FC9AE40) == 0x000008, "Member 'FS_ShootingChallenge::ChallengeName_48_3F5BBC0C441A235C6C4039B12FC9AE40' has a wrong offset!");
static_assert(offsetof(FS_ShootingChallenge, ChallengeObjectiveDescription_49_846EF7404718E9E75BC498B44CDC85E5) == 0x000020, "Member 'FS_ShootingChallenge::ChallengeObjectiveDescription_49_846EF7404718E9E75BC498B44CDC85E5' has a wrong offset!");
static_assert(offsetof(FS_ShootingChallenge, RequiredWeaponActorClass_65_830692724C82EE4F928AD68BFF8CF1A4) == 0x000038, "Member 'FS_ShootingChallenge::RequiredWeaponActorClass_65_830692724C82EE4F928AD68BFF8CF1A4' has a wrong offset!");
static_assert(offsetof(FS_ShootingChallenge, Target_37_9CE4A7AB44A39974E6E689907D2DB81D) == 0x000040, "Member 'FS_ShootingChallenge::Target_37_9CE4A7AB44A39974E6E689907D2DB81D' has a wrong offset!");
static_assert(offsetof(FS_ShootingChallenge, TargetPicture_84_33D1D8B943C937DBD66320BF08C363BC) == 0x000048, "Member 'FS_ShootingChallenge::TargetPicture_84_33D1D8B943C937DBD66320BF08C363BC' has a wrong offset!");
static_assert(offsetof(FS_ShootingChallenge, TargetQuantity_72_FB584CFB4957C2D33C7385AFA9B51C0B) == 0x000070, "Member 'FS_ShootingChallenge::TargetQuantity_72_FB584CFB4957C2D33C7385AFA9B51C0B' has a wrong offset!");
static_assert(offsetof(FS_ShootingChallenge, SpawnpointTag_47_E9A513B947E0F82A40027E9C45A26EE1) == 0x000074, "Member 'FS_ShootingChallenge::SpawnpointTag_47_E9A513B947E0F82A40027E9C45A26EE1' has a wrong offset!");
static_assert(offsetof(FS_ShootingChallenge, BronzeTime_17_8B8D308849741464E8A4E0A5637A4892) == 0x00007C, "Member 'FS_ShootingChallenge::BronzeTime_17_8B8D308849741464E8A4E0A5637A4892' has a wrong offset!");
static_assert(offsetof(FS_ShootingChallenge, SilverTime_50_7C55794D4913D5DD65EB8D98A26B27A0) == 0x000080, "Member 'FS_ShootingChallenge::SilverTime_50_7C55794D4913D5DD65EB8D98A26B27A0' has a wrong offset!");
static_assert(offsetof(FS_ShootingChallenge, GoldTime_51_BF7AB6554C44B5F0B6469A8E58C898DE) == 0x000084, "Member 'FS_ShootingChallenge::GoldTime_51_BF7AB6554C44B5F0B6469A8E58C898DE' has a wrong offset!");
static_assert(offsetof(FS_ShootingChallenge, MaxChallengeDuration_22_344CC4DC4420477F8A4A7D97AE694924) == 0x000088, "Member 'FS_ShootingChallenge::MaxChallengeDuration_22_344CC4DC4420477F8A4A7D97AE694924' has a wrong offset!");

}

