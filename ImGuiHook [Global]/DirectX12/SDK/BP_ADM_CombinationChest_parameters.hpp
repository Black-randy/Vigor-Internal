#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ADM_CombinationChest

#include "Basic.hpp"

#include "E_Lootable_State_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_ADM_CombinationChest.BP_ADM_CombinationChest_C.ExecuteUbergraph_BP_ADM_CombinationChest
// 0x00B8 (0x00B8 - 0x0000)
struct BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Lootable_State                              K2Node_Event_Old_State;                            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Lootable_State                              K2Node_Event_New_State;                            // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_C*                        K2Node_Event_Interacting_Character;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Send_Combination_Lock_Chest_Looted_Event_ReturnValue; // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_C*                        K2Node_Event_Looting_Character;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class ABP_ADM_CombinationChest_C*       Temp_object_Variable;                              // 0x0020(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CombinationLock_PCComponent_C*      K2Node_CustomEvent_Player_that_opened_lock;        // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CombinationLock_Component_C*        K2Node_CustomEvent_Unlocked_Combination_lock;      // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanCharacter*                        CallFunc_Get_Player_Character_Human_Character;     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           CallFunc_Get_Player_State_PlayerState;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Character_C*                        K2Node_DynamicCast_AsBP_Character;                 // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_Matches_C*              K2Node_DynamicCast_AsBP_Player_State_Matches;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Log_Gameplay_Event_Success;               // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Get_BoobyTrap_Count_BoobyTrap_count;      // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7B[0x1];                                       // 0x007B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Get_BoobyTrap_Count_BoobyTrap_count_1;    // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UBP_CombinationLock_PCComponent_C* Player_that_opened_lock, class UBP_CombinationLock_Component_C* Unlocked_Combination_lock)> K2Node_CreateDelegate_OutputDelegate;              // 0x0080(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_LootableBoobyTrapComponent_C*       CallFunc_GetComponentByClass_ReturnValue;          // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_LootableBoobyTrapComponent_C*       CallFunc_GetComponentByClass_ReturnValue_1;        // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest) == 0x000008, "Wrong alignment on BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest");
static_assert(sizeof(BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest) == 0x0000B8, "Wrong size on BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest");
static_assert(offsetof(BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest, EntryPoint) == 0x000000, "Member 'BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest, K2Node_Event_Old_State) == 0x000004, "Member 'BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest::K2Node_Event_Old_State' has a wrong offset!");
static_assert(offsetof(BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest, K2Node_Event_New_State) == 0x000005, "Member 'BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest::K2Node_Event_New_State' has a wrong offset!");
static_assert(offsetof(BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest, K2Node_Event_Interacting_Character) == 0x000008, "Member 'BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest::K2Node_Event_Interacting_Character' has a wrong offset!");
static_assert(offsetof(BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000011, "Member 'BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest, CallFunc_Send_Combination_Lock_Chest_Looted_Event_ReturnValue) == 0x000012, "Member 'BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest::CallFunc_Send_Combination_Lock_Chest_Looted_Event_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest, K2Node_Event_Looting_Character) == 0x000018, "Member 'BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest::K2Node_Event_Looting_Character' has a wrong offset!");
static_assert(offsetof(BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest, Temp_object_Variable) == 0x000020, "Member 'BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest, K2Node_CustomEvent_Player_that_opened_lock) == 0x000028, "Member 'BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest::K2Node_CustomEvent_Player_that_opened_lock' has a wrong offset!");
static_assert(offsetof(BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest, K2Node_CustomEvent_Unlocked_Combination_lock) == 0x000030, "Member 'BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest::K2Node_CustomEvent_Unlocked_Combination_lock' has a wrong offset!");
static_assert(offsetof(BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest, CallFunc_Get_Player_Character_Human_Character) == 0x000038, "Member 'BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest::CallFunc_Get_Player_Character_Human_Character' has a wrong offset!");
static_assert(offsetof(BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest, CallFunc_Get_Player_State_PlayerState) == 0x000040, "Member 'BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest::CallFunc_Get_Player_State_PlayerState' has a wrong offset!");
static_assert(offsetof(BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest, K2Node_DynamicCast_AsBP_Character) == 0x000048, "Member 'BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest::K2Node_DynamicCast_AsBP_Character' has a wrong offset!");
static_assert(offsetof(BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest, K2Node_DynamicCast_AsBP_Player_State_Matches) == 0x000058, "Member 'BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest::K2Node_DynamicCast_AsBP_Player_State_Matches' has a wrong offset!");
static_assert(offsetof(BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest, CallFunc_Log_Gameplay_Event_Success) == 0x000061, "Member 'BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest::CallFunc_Log_Gameplay_Event_Success' has a wrong offset!");
static_assert(offsetof(BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000064, "Member 'BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest, CallFunc_IsServer_ReturnValue) == 0x000070, "Member 'BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest, CallFunc_Get_BoobyTrap_Count_BoobyTrap_count) == 0x000074, "Member 'BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest::CallFunc_Get_BoobyTrap_Count_BoobyTrap_count' has a wrong offset!");
static_assert(offsetof(BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest, CallFunc_Greater_IntInt_ReturnValue) == 0x000078, "Member 'BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest, CallFunc_IsValid_ReturnValue) == 0x000079, "Member 'BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest, CallFunc_Not_PreBool_ReturnValue) == 0x00007A, "Member 'BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest, CallFunc_Get_BoobyTrap_Count_BoobyTrap_count_1) == 0x00007C, "Member 'BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest::CallFunc_Get_BoobyTrap_Count_BoobyTrap_count_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest, K2Node_CreateDelegate_OutputDelegate) == 0x000080, "Member 'BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000090, "Member 'BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest, CallFunc_Not_PreBool_ReturnValue_1) == 0x000091, "Member 'BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest, CallFunc_GetComponentByClass_ReturnValue) == 0x000098, "Member 'BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest, CallFunc_Not_PreBool_ReturnValue_2) == 0x0000A0, "Member 'BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest, CallFunc_IsValid_ReturnValue_1) == 0x0000A1, "Member 'BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest, CallFunc_GetComponentByClass_ReturnValue_1) == 0x0000A8, "Member 'BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest, CallFunc_IsValid_ReturnValue_2) == 0x0000B0, "Member 'BP_ADM_CombinationChest_C_ExecuteUbergraph_BP_ADM_CombinationChest::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_ADM_CombinationChest.BP_ADM_CombinationChest_C.On player solved combination
// 0x0010 (0x0010 - 0x0000)
struct BP_ADM_CombinationChest_C_On_player_solved_combination final
{
public:
	class UBP_CombinationLock_PCComponent_C*      Player_that_opened_lock;                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CombinationLock_Component_C*        Unlocked_Combination_lock;                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ADM_CombinationChest_C_On_player_solved_combination) == 0x000008, "Wrong alignment on BP_ADM_CombinationChest_C_On_player_solved_combination");
static_assert(sizeof(BP_ADM_CombinationChest_C_On_player_solved_combination) == 0x000010, "Wrong size on BP_ADM_CombinationChest_C_On_player_solved_combination");
static_assert(offsetof(BP_ADM_CombinationChest_C_On_player_solved_combination, Player_that_opened_lock) == 0x000000, "Member 'BP_ADM_CombinationChest_C_On_player_solved_combination::Player_that_opened_lock' has a wrong offset!");
static_assert(offsetof(BP_ADM_CombinationChest_C_On_player_solved_combination, Unlocked_Combination_lock) == 0x000008, "Member 'BP_ADM_CombinationChest_C_On_player_solved_combination::Unlocked_Combination_lock' has a wrong offset!");

// Function BP_ADM_CombinationChest.BP_ADM_CombinationChest_C.Access Loot
// 0x0008 (0x0008 - 0x0000)
struct BP_ADM_CombinationChest_C_Access_Loot final
{
public:
	class ABP_Character_C*                        Looting_character;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ADM_CombinationChest_C_Access_Loot) == 0x000008, "Wrong alignment on BP_ADM_CombinationChest_C_Access_Loot");
static_assert(sizeof(BP_ADM_CombinationChest_C_Access_Loot) == 0x000008, "Wrong size on BP_ADM_CombinationChest_C_Access_Loot");
static_assert(offsetof(BP_ADM_CombinationChest_C_Access_Loot, Looting_character) == 0x000000, "Member 'BP_ADM_CombinationChest_C_Access_Loot::Looting_character' has a wrong offset!");

// Function BP_ADM_CombinationChest.BP_ADM_CombinationChest_C.State Changed
// 0x0002 (0x0002 - 0x0000)
struct BP_ADM_CombinationChest_C_State_Changed final
{
public:
	E_Lootable_State                              Old_State;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Lootable_State                              New_State;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ADM_CombinationChest_C_State_Changed) == 0x000001, "Wrong alignment on BP_ADM_CombinationChest_C_State_Changed");
static_assert(sizeof(BP_ADM_CombinationChest_C_State_Changed) == 0x000002, "Wrong size on BP_ADM_CombinationChest_C_State_Changed");
static_assert(offsetof(BP_ADM_CombinationChest_C_State_Changed, Old_State) == 0x000000, "Member 'BP_ADM_CombinationChest_C_State_Changed::Old_State' has a wrong offset!");
static_assert(offsetof(BP_ADM_CombinationChest_C_State_Changed, New_State) == 0x000001, "Member 'BP_ADM_CombinationChest_C_State_Changed::New_State' has a wrong offset!");

// Function BP_ADM_CombinationChest.BP_ADM_CombinationChest_C.Server Interaction Start
// 0x0008 (0x0008 - 0x0000)
struct BP_ADM_CombinationChest_C_Server_Interaction_Start final
{
public:
	class ABP_Character_C*                        Interacting_Character;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ADM_CombinationChest_C_Server_Interaction_Start) == 0x000008, "Wrong alignment on BP_ADM_CombinationChest_C_Server_Interaction_Start");
static_assert(sizeof(BP_ADM_CombinationChest_C_Server_Interaction_Start) == 0x000008, "Wrong size on BP_ADM_CombinationChest_C_Server_Interaction_Start");
static_assert(offsetof(BP_ADM_CombinationChest_C_Server_Interaction_Start, Interacting_Character) == 0x000000, "Member 'BP_ADM_CombinationChest_C_Server_Interaction_Start::Interacting_Character' has a wrong offset!");

// Function BP_ADM_CombinationChest.BP_ADM_CombinationChest_C.UserConstructionScript
// 0x0048 (0x0048 - 0x0000)
struct BP_ADM_CombinationChest_C_UserConstructionScript final
{
public:
	TSoftObjectPtr<class UObject>                 CallFunc_GetSoftReference_ReturnValue;             // 0x0000(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftReference_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            K2Node_DynamicCast_AsStatic_Mesh;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ADM_CombinationChest_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_ADM_CombinationChest_C_UserConstructionScript");
static_assert(sizeof(BP_ADM_CombinationChest_C_UserConstructionScript) == 0x000048, "Wrong size on BP_ADM_CombinationChest_C_UserConstructionScript");
static_assert(offsetof(BP_ADM_CombinationChest_C_UserConstructionScript, CallFunc_GetSoftReference_ReturnValue) == 0x000000, "Member 'BP_ADM_CombinationChest_C_UserConstructionScript::CallFunc_GetSoftReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_CombinationChest_C_UserConstructionScript, CallFunc_LoadSoftReference_ReturnValue) == 0x000028, "Member 'BP_ADM_CombinationChest_C_UserConstructionScript::CallFunc_LoadSoftReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_CombinationChest_C_UserConstructionScript, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000030, "Member 'BP_ADM_CombinationChest_C_UserConstructionScript::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_CombinationChest_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'BP_ADM_CombinationChest_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_CombinationChest_C_UserConstructionScript, K2Node_DynamicCast_AsStatic_Mesh) == 0x000038, "Member 'BP_ADM_CombinationChest_C_UserConstructionScript::K2Node_DynamicCast_AsStatic_Mesh' has a wrong offset!");
static_assert(offsetof(BP_ADM_CombinationChest_C_UserConstructionScript, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_ADM_CombinationChest_C_UserConstructionScript::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ADM_CombinationChest_C_UserConstructionScript, CallFunc_SetStaticMesh_ReturnValue) == 0x000041, "Member 'BP_ADM_CombinationChest_C_UserConstructionScript::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");

// Function BP_ADM_CombinationChest.BP_ADM_CombinationChest_C.Determine State Based On Current Circumstances
// 0x0002 (0x0002 - 0x0000)
struct BP_ADM_CombinationChest_C_Determine_State_Based_On_Current_Circumstances final
{
public:
	E_Lootable_State                              Appropriate_State;                                 // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Lootable_State                              CallFunc_Determine_State_Based_On_Current_Circumstances_Appropriate_State; // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ADM_CombinationChest_C_Determine_State_Based_On_Current_Circumstances) == 0x000001, "Wrong alignment on BP_ADM_CombinationChest_C_Determine_State_Based_On_Current_Circumstances");
static_assert(sizeof(BP_ADM_CombinationChest_C_Determine_State_Based_On_Current_Circumstances) == 0x000002, "Wrong size on BP_ADM_CombinationChest_C_Determine_State_Based_On_Current_Circumstances");
static_assert(offsetof(BP_ADM_CombinationChest_C_Determine_State_Based_On_Current_Circumstances, Appropriate_State) == 0x000000, "Member 'BP_ADM_CombinationChest_C_Determine_State_Based_On_Current_Circumstances::Appropriate_State' has a wrong offset!");
static_assert(offsetof(BP_ADM_CombinationChest_C_Determine_State_Based_On_Current_Circumstances, CallFunc_Determine_State_Based_On_Current_Circumstances_Appropriate_State) == 0x000001, "Member 'BP_ADM_CombinationChest_C_Determine_State_Based_On_Current_Circumstances::CallFunc_Determine_State_Based_On_Current_Circumstances_Appropriate_State' has a wrong offset!");

// Function BP_ADM_CombinationChest.BP_ADM_CombinationChest_C.On Rep State
// 0x0002 (0x0002 - 0x0000)
struct BP_ADM_CombinationChest_C_On_Rep_State final
{
public:
	bool                                          New_State_Is_Valid;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_On_Rep_State_New_State_Is_Valid;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ADM_CombinationChest_C_On_Rep_State) == 0x000001, "Wrong alignment on BP_ADM_CombinationChest_C_On_Rep_State");
static_assert(sizeof(BP_ADM_CombinationChest_C_On_Rep_State) == 0x000002, "Wrong size on BP_ADM_CombinationChest_C_On_Rep_State");
static_assert(offsetof(BP_ADM_CombinationChest_C_On_Rep_State, New_State_Is_Valid) == 0x000000, "Member 'BP_ADM_CombinationChest_C_On_Rep_State::New_State_Is_Valid' has a wrong offset!");
static_assert(offsetof(BP_ADM_CombinationChest_C_On_Rep_State, CallFunc_On_Rep_State_New_State_Is_Valid) == 0x000001, "Member 'BP_ADM_CombinationChest_C_On_Rep_State::CallFunc_On_Rep_State_New_State_Is_Valid' has a wrong offset!");

}

