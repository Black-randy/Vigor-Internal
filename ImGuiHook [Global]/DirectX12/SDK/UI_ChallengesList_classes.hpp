#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_ChallengesList

#include "Basic.hpp"

#include "Flame_classes.hpp"
#include "Engine_structs.hpp"
#include "E_ChallengeSlotState_structs.hpp"
#include "E_ChallengeManagerState_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_ChallengesList.UI_ChallengesList_C
// 0x0068 (0x0320 - 0x02B8)
class UUI_ChallengesList_C final : public UFlameWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UVerticalBox*                           ChallengesList;                                    // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_ChallengesListItemSimple_C*         UI_ChallengesListItemSimple;                       // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_ChallengesListItemSimple_C*         UI_ChallengesListItemSimple_56;                    // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_ChallengesListItemSimple_C*         UI_ChallengesListItemSimple_106;                   // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class UUI_ChallengesListItemSimple_C*> ChallengeWidgets;                                  // 0x02E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class ABP_ChallengeManager_C*                 ChallengeManager;                                  // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxListLength;                                     // 0x02F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_2FC[0x4];                                      // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         ChallengeCategoriesFilter;                         // 0x0300(0x0010)(Edit, BlueprintVisible, ExposeOnSpawn)
	TArray<class ABP_ChallengeSlot_C*>            FilteredChallengeSlots;                            // 0x0310(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)

public:
	void ExecuteUbergraph_UI_ChallengesList(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void OnStateHasChanged(class ABP_ChallengeSlot_C* Slot_0);
	void InitializeChallenges();
	void InitializeChallengeListItem(class ABP_ChallengeSlot_C* ChallengeSlot);
	void EventChallengeManagerReady();
	void Construct();
	void SlotStateChanged(class ABP_ChallengeSlot_C* ChallengeSlotIn);
	void ShowRewards();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_ChallengesList_C">();
	}
	static class UUI_ChallengesList_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_ChallengesList_C>();
	}
};
static_assert(alignof(UUI_ChallengesList_C) == 0x000008, "Wrong alignment on UUI_ChallengesList_C");
static_assert(sizeof(UUI_ChallengesList_C) == 0x000320, "Wrong size on UUI_ChallengesList_C");
static_assert(offsetof(UUI_ChallengesList_C, UberGraphFrame) == 0x0002B8, "Member 'UUI_ChallengesList_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_ChallengesList_C, ChallengesList) == 0x0002C0, "Member 'UUI_ChallengesList_C::ChallengesList' has a wrong offset!");
static_assert(offsetof(UUI_ChallengesList_C, UI_ChallengesListItemSimple) == 0x0002C8, "Member 'UUI_ChallengesList_C::UI_ChallengesListItemSimple' has a wrong offset!");
static_assert(offsetof(UUI_ChallengesList_C, UI_ChallengesListItemSimple_56) == 0x0002D0, "Member 'UUI_ChallengesList_C::UI_ChallengesListItemSimple_56' has a wrong offset!");
static_assert(offsetof(UUI_ChallengesList_C, UI_ChallengesListItemSimple_106) == 0x0002D8, "Member 'UUI_ChallengesList_C::UI_ChallengesListItemSimple_106' has a wrong offset!");
static_assert(offsetof(UUI_ChallengesList_C, ChallengeWidgets) == 0x0002E0, "Member 'UUI_ChallengesList_C::ChallengeWidgets' has a wrong offset!");
static_assert(offsetof(UUI_ChallengesList_C, ChallengeManager) == 0x0002F0, "Member 'UUI_ChallengesList_C::ChallengeManager' has a wrong offset!");
static_assert(offsetof(UUI_ChallengesList_C, MaxListLength) == 0x0002F8, "Member 'UUI_ChallengesList_C::MaxListLength' has a wrong offset!");
static_assert(offsetof(UUI_ChallengesList_C, ChallengeCategoriesFilter) == 0x000300, "Member 'UUI_ChallengesList_C::ChallengeCategoriesFilter' has a wrong offset!");
static_assert(offsetof(UUI_ChallengesList_C, FilteredChallengeSlots) == 0x000310, "Member 'UUI_ChallengesList_C::FilteredChallengeSlots' has a wrong offset!");

}

