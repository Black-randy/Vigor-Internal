#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GlobalLevelAmbience

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_GlobalLevelAmbience.BP_GlobalLevelAmbience_C.ExecuteUbergraph_BP_GlobalLevelAmbience
// 0x0060 (0x0060 - 0x0000)
struct BP_GlobalLevelAmbience_C_ExecuteUbergraph_BP_GlobalLevelAmbience final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_CurrentWindIntensity_1;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_CurrentWindDirection_1;               // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_HeavyRain;                            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_CurrentRainAmount_1;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_CurrentWetnessAmount_1;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_CurrentRainAmount;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_CurrentWindIntensity;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_CurrentWindDirection;                 // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_CurrentWetnessAmount;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0040(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0058(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GlobalLevelAmbience_C_ExecuteUbergraph_BP_GlobalLevelAmbience) == 0x000008, "Wrong alignment on BP_GlobalLevelAmbience_C_ExecuteUbergraph_BP_GlobalLevelAmbience");
static_assert(sizeof(BP_GlobalLevelAmbience_C_ExecuteUbergraph_BP_GlobalLevelAmbience) == 0x000060, "Wrong size on BP_GlobalLevelAmbience_C_ExecuteUbergraph_BP_GlobalLevelAmbience");
static_assert(offsetof(BP_GlobalLevelAmbience_C_ExecuteUbergraph_BP_GlobalLevelAmbience, EntryPoint) == 0x000000, "Member 'BP_GlobalLevelAmbience_C_ExecuteUbergraph_BP_GlobalLevelAmbience::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_GlobalLevelAmbience_C_ExecuteUbergraph_BP_GlobalLevelAmbience, K2Node_Event_CurrentWindIntensity_1) == 0x000004, "Member 'BP_GlobalLevelAmbience_C_ExecuteUbergraph_BP_GlobalLevelAmbience::K2Node_Event_CurrentWindIntensity_1' has a wrong offset!");
static_assert(offsetof(BP_GlobalLevelAmbience_C_ExecuteUbergraph_BP_GlobalLevelAmbience, K2Node_Event_CurrentWindDirection_1) == 0x000008, "Member 'BP_GlobalLevelAmbience_C_ExecuteUbergraph_BP_GlobalLevelAmbience::K2Node_Event_CurrentWindDirection_1' has a wrong offset!");
static_assert(offsetof(BP_GlobalLevelAmbience_C_ExecuteUbergraph_BP_GlobalLevelAmbience, K2Node_Event_HeavyRain) == 0x000014, "Member 'BP_GlobalLevelAmbience_C_ExecuteUbergraph_BP_GlobalLevelAmbience::K2Node_Event_HeavyRain' has a wrong offset!");
static_assert(offsetof(BP_GlobalLevelAmbience_C_ExecuteUbergraph_BP_GlobalLevelAmbience, CallFunc_RandomFloatInRange_ReturnValue) == 0x000018, "Member 'BP_GlobalLevelAmbience_C_ExecuteUbergraph_BP_GlobalLevelAmbience::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalLevelAmbience_C_ExecuteUbergraph_BP_GlobalLevelAmbience, K2Node_Event_CurrentRainAmount_1) == 0x00001C, "Member 'BP_GlobalLevelAmbience_C_ExecuteUbergraph_BP_GlobalLevelAmbience::K2Node_Event_CurrentRainAmount_1' has a wrong offset!");
static_assert(offsetof(BP_GlobalLevelAmbience_C_ExecuteUbergraph_BP_GlobalLevelAmbience, K2Node_Event_CurrentWetnessAmount_1) == 0x000020, "Member 'BP_GlobalLevelAmbience_C_ExecuteUbergraph_BP_GlobalLevelAmbience::K2Node_Event_CurrentWetnessAmount_1' has a wrong offset!");
static_assert(offsetof(BP_GlobalLevelAmbience_C_ExecuteUbergraph_BP_GlobalLevelAmbience, K2Node_Event_CurrentRainAmount) == 0x000024, "Member 'BP_GlobalLevelAmbience_C_ExecuteUbergraph_BP_GlobalLevelAmbience::K2Node_Event_CurrentRainAmount' has a wrong offset!");
static_assert(offsetof(BP_GlobalLevelAmbience_C_ExecuteUbergraph_BP_GlobalLevelAmbience, K2Node_Event_CurrentWindIntensity) == 0x000028, "Member 'BP_GlobalLevelAmbience_C_ExecuteUbergraph_BP_GlobalLevelAmbience::K2Node_Event_CurrentWindIntensity' has a wrong offset!");
static_assert(offsetof(BP_GlobalLevelAmbience_C_ExecuteUbergraph_BP_GlobalLevelAmbience, K2Node_Event_CurrentWindDirection) == 0x00002C, "Member 'BP_GlobalLevelAmbience_C_ExecuteUbergraph_BP_GlobalLevelAmbience::K2Node_Event_CurrentWindDirection' has a wrong offset!");
static_assert(offsetof(BP_GlobalLevelAmbience_C_ExecuteUbergraph_BP_GlobalLevelAmbience, K2Node_Event_CurrentWetnessAmount) == 0x000038, "Member 'BP_GlobalLevelAmbience_C_ExecuteUbergraph_BP_GlobalLevelAmbience::K2Node_Event_CurrentWetnessAmount' has a wrong offset!");
static_assert(offsetof(BP_GlobalLevelAmbience_C_ExecuteUbergraph_BP_GlobalLevelAmbience, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00003C, "Member 'BP_GlobalLevelAmbience_C_ExecuteUbergraph_BP_GlobalLevelAmbience::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalLevelAmbience_C_ExecuteUbergraph_BP_GlobalLevelAmbience, K2Node_CreateDelegate_OutputDelegate) == 0x000040, "Member 'BP_GlobalLevelAmbience_C_ExecuteUbergraph_BP_GlobalLevelAmbience::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_GlobalLevelAmbience_C_ExecuteUbergraph_BP_GlobalLevelAmbience, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000050, "Member 'BP_GlobalLevelAmbience_C_ExecuteUbergraph_BP_GlobalLevelAmbience::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalLevelAmbience_C_ExecuteUbergraph_BP_GlobalLevelAmbience, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000058, "Member 'BP_GlobalLevelAmbience_C_ExecuteUbergraph_BP_GlobalLevelAmbience::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function BP_GlobalLevelAmbience.BP_GlobalLevelAmbience_C.AdjustWeather
// 0x0018 (0x0018 - 0x0000)
struct BP_GlobalLevelAmbience_C_AdjustWeather final
{
public:
	float                                         CurrentRainAmount_0;                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentWindIntensity;                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CurrentWindDirection;                              // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentWetnessAmount;                              // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GlobalLevelAmbience_C_AdjustWeather) == 0x000004, "Wrong alignment on BP_GlobalLevelAmbience_C_AdjustWeather");
static_assert(sizeof(BP_GlobalLevelAmbience_C_AdjustWeather) == 0x000018, "Wrong size on BP_GlobalLevelAmbience_C_AdjustWeather");
static_assert(offsetof(BP_GlobalLevelAmbience_C_AdjustWeather, CurrentRainAmount_0) == 0x000000, "Member 'BP_GlobalLevelAmbience_C_AdjustWeather::CurrentRainAmount_0' has a wrong offset!");
static_assert(offsetof(BP_GlobalLevelAmbience_C_AdjustWeather, CurrentWindIntensity) == 0x000004, "Member 'BP_GlobalLevelAmbience_C_AdjustWeather::CurrentWindIntensity' has a wrong offset!");
static_assert(offsetof(BP_GlobalLevelAmbience_C_AdjustWeather, CurrentWindDirection) == 0x000008, "Member 'BP_GlobalLevelAmbience_C_AdjustWeather::CurrentWindDirection' has a wrong offset!");
static_assert(offsetof(BP_GlobalLevelAmbience_C_AdjustWeather, CurrentWetnessAmount) == 0x000014, "Member 'BP_GlobalLevelAmbience_C_AdjustWeather::CurrentWetnessAmount' has a wrong offset!");

// Function BP_GlobalLevelAmbience.BP_GlobalLevelAmbience_C.AdjustRainIntensity
// 0x0008 (0x0008 - 0x0000)
struct BP_GlobalLevelAmbience_C_AdjustRainIntensity final
{
public:
	float                                         CurrentRainAmount_0;                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentWetnessAmount;                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GlobalLevelAmbience_C_AdjustRainIntensity) == 0x000004, "Wrong alignment on BP_GlobalLevelAmbience_C_AdjustRainIntensity");
static_assert(sizeof(BP_GlobalLevelAmbience_C_AdjustRainIntensity) == 0x000008, "Wrong size on BP_GlobalLevelAmbience_C_AdjustRainIntensity");
static_assert(offsetof(BP_GlobalLevelAmbience_C_AdjustRainIntensity, CurrentRainAmount_0) == 0x000000, "Member 'BP_GlobalLevelAmbience_C_AdjustRainIntensity::CurrentRainAmount_0' has a wrong offset!");
static_assert(offsetof(BP_GlobalLevelAmbience_C_AdjustRainIntensity, CurrentWetnessAmount) == 0x000004, "Member 'BP_GlobalLevelAmbience_C_AdjustRainIntensity::CurrentWetnessAmount' has a wrong offset!");

// Function BP_GlobalLevelAmbience.BP_GlobalLevelAmbience_C.SetHeavyRain
// 0x0001 (0x0001 - 0x0000)
struct BP_GlobalLevelAmbience_C_SetHeavyRain final
{
public:
	bool                                          HeavyRain;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GlobalLevelAmbience_C_SetHeavyRain) == 0x000001, "Wrong alignment on BP_GlobalLevelAmbience_C_SetHeavyRain");
static_assert(sizeof(BP_GlobalLevelAmbience_C_SetHeavyRain) == 0x000001, "Wrong size on BP_GlobalLevelAmbience_C_SetHeavyRain");
static_assert(offsetof(BP_GlobalLevelAmbience_C_SetHeavyRain, HeavyRain) == 0x000000, "Member 'BP_GlobalLevelAmbience_C_SetHeavyRain::HeavyRain' has a wrong offset!");

// Function BP_GlobalLevelAmbience.BP_GlobalLevelAmbience_C.AdjustWindDirection
// 0x000C (0x000C - 0x0000)
struct BP_GlobalLevelAmbience_C_AdjustWindDirection final
{
public:
	struct FVector                                CurrentWindDirection;                              // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GlobalLevelAmbience_C_AdjustWindDirection) == 0x000004, "Wrong alignment on BP_GlobalLevelAmbience_C_AdjustWindDirection");
static_assert(sizeof(BP_GlobalLevelAmbience_C_AdjustWindDirection) == 0x00000C, "Wrong size on BP_GlobalLevelAmbience_C_AdjustWindDirection");
static_assert(offsetof(BP_GlobalLevelAmbience_C_AdjustWindDirection, CurrentWindDirection) == 0x000000, "Member 'BP_GlobalLevelAmbience_C_AdjustWindDirection::CurrentWindDirection' has a wrong offset!");

// Function BP_GlobalLevelAmbience.BP_GlobalLevelAmbience_C.AdjustWindIntensity
// 0x0004 (0x0004 - 0x0000)
struct BP_GlobalLevelAmbience_C_AdjustWindIntensity final
{
public:
	float                                         CurrentWindIntensity;                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GlobalLevelAmbience_C_AdjustWindIntensity) == 0x000004, "Wrong alignment on BP_GlobalLevelAmbience_C_AdjustWindIntensity");
static_assert(sizeof(BP_GlobalLevelAmbience_C_AdjustWindIntensity) == 0x000004, "Wrong size on BP_GlobalLevelAmbience_C_AdjustWindIntensity");
static_assert(offsetof(BP_GlobalLevelAmbience_C_AdjustWindIntensity, CurrentWindIntensity) == 0x000000, "Member 'BP_GlobalLevelAmbience_C_AdjustWindIntensity::CurrentWindIntensity' has a wrong offset!");

}

