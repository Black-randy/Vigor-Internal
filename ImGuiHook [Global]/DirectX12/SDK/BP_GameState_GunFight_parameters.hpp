#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GameState_GunFight

#include "Basic.hpp"

#include "S_GunFightLoadoutSlot_structs.hpp"
#include "S_Gunfight_LoadoutSlotInfo_structs.hpp"
#include "Struct_GunFightStatistics_structs.hpp"
#include "Struct_GunFightLoadout_structs.hpp"
#include "Struct_ScoreboardRow_structs.hpp"
#include "E_TeamsMatchPhase_structs.hpp"
#include "EGunFight_LoadoutState_structs.hpp"
#include "FlameUI_structs.hpp"
#include "Struct_TVTDeathmatch_ScoreValue_structs.hpp"
#include "EGunFightWinReason_structs.hpp"
#include "Engine_structs.hpp"
#include "S_GunFightLoadouts_S12_structs.hpp"
#include "EGunFightRole_structs.hpp"
#include "S_CustomMapMarker_structs.hpp"
#include "Flame_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "S_CustomMapMarker_Optimized_structs.hpp"
#include "Struct_TVTDeathmatch_KillFeed_structs.hpp"
#include "Struct_ScoreboardTab_structs.hpp"
#include "Struct_ScoreboardSubTab_structs.hpp"
#include "ERaidNotificationType_structs.hpp"


namespace SDK::Params
{

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.LoadoutsReplicated__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_GameState_GunFight_C_LoadoutsReplicated__DelegateSignature final
{
public:
	class ABP_PlayerController_GunFight_C*        PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PreRoundTime;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameState_GunFight_C_LoadoutsReplicated__DelegateSignature) == 0x000008, "Wrong alignment on BP_GameState_GunFight_C_LoadoutsReplicated__DelegateSignature");
static_assert(sizeof(BP_GameState_GunFight_C_LoadoutsReplicated__DelegateSignature) == 0x000010, "Wrong size on BP_GameState_GunFight_C_LoadoutsReplicated__DelegateSignature");
static_assert(offsetof(BP_GameState_GunFight_C_LoadoutsReplicated__DelegateSignature, PlayerController) == 0x000000, "Member 'BP_GameState_GunFight_C_LoadoutsReplicated__DelegateSignature::PlayerController' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_LoadoutsReplicated__DelegateSignature, PreRoundTime) == 0x000008, "Member 'BP_GameState_GunFight_C_LoadoutsReplicated__DelegateSignature::PreRoundTime' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.ExecuteUbergraph_BP_GameState_GunFight
// 0x0D90 (0x0D90 - 0x0000)
struct BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameMode_GunFight_C*                K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_1;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameMode_GunFight_C*                K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight_1;     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E[0x2];                                       // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56[0x2];                                       // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_2;          // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_3;          // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetUserControllerId_ReturnValue;          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_4;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue; // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_GunFight_C*        K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight; // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetUserControllerId_ReturnValue_1;        // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_1; // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_GunFight_C*        K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight_1; // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetUserControllerId_ReturnValue_2;        // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_2; // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetUserControllerId_ReturnValue_3;        // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_GunFight_C*        K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight_2; // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_3; // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_GunFight_C*        K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight_3; // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_5;          // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_6;          // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EB[0x5];                                       // 0x00EB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetUserControllerId_ReturnValue_4;        // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_4; // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_GunFight_C*        K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight_4; // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMapRewards_ReturnValue;                // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_7;          // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_142[0x6];                                      // 0x0142(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable;                              // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x3];                                      // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_1;                            // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16D[0x3];                                      // 0x016D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_Teams_C*                K2Node_DynamicCast_AsBP_Player_State_Teams;        // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x017A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17B[0x5];                                      // 0x017B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_GunFight_C*        K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight_5; // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_Attacker_Is_Attacker;                  // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18A[0x6];                                      // 0x018A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_2;                // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameMode_GunFight_C*                K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight_2;     // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x3];                                      // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue; // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue_1; // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_1;                     // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BC[0x4];                                      // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_3;                // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameMode_GunFight_C*                K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight_3;     // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D2[0x2];                                      // 0x01D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D9[0x3];                                      // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_4;                // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetUserControllerId_ReturnValue_5;        // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EC[0x4];                                      // 0x01EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameMode_GunFight_C*                K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight_4;     // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_5; // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_GunFight_C*        K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight_6; // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_8;          // 0x0212(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_213[0x1];                                      // 0x0213(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21D[0x3];                                      // 0x021D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetUserControllerId_ReturnValue_6;        // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22D[0x3];                                      // 0x022D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_6; // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23C[0x4];                                      // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_GunFight_C*        K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight_7; // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_13;                    // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_249[0x3];                                      // 0x0249(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_252[0x2];                                      // 0x0252(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetUserControllerId_ReturnValue_7;        // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25C[0x4];                                      // 0x025C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_7; // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26C[0x4];                                      // 0x026C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_GunFight_C*        K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight_8; // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_14;                    // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_279[0x3];                                      // 0x0279(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetUserControllerId_ReturnValue_8;        // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_5;                // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_8; // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameMode_GunFight_C*                K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight_5;     // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_15;                    // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_299[0x7];                                      // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_GunFight_C*        K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight_9; // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_16;                    // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A9[0x7];                                      // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_6;                // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameMode_GunFight_C*                K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight_6;     // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_17;                    // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x02C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_9;          // 0x02C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C3[0x1];                                      // 0x02C3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_4;                               // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_6;                  // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_2;        // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D1[0x3];                                      // 0x02D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_6;                   // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetUserControllerId_ReturnValue_9;        // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DC[0x4];                                      // 0x02DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_9; // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_GunFight_C*        K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight_10; // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_18;                    // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F9[0x3];                                      // 0x02F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetUserControllerId_ReturnValue_10;       // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_10; // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_GunFight_C*        K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight_11; // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_19;                    // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_311[0x7];                                      // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_7;                // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_324[0x4];                                      // 0x0324(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameMode_GunFight_C*                K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight_7;     // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_20;                    // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_331[0x7];                                      // 0x0331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_8;                // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_341[0x7];                                      // 0x0341(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameMode_GunFight_C*                K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight_8;     // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_21;                    // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_351[0x7];                                      // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_9;                // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           CallFunc_Array_Get_Item_1;                         // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameMode_GunFight_C*                K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight_9;     // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_22;                    // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0371(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_372[0x6];                                      // 0x0372(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_Teams_C*                K2Node_DynamicCast_AsBP_Player_State_Teams_1;      // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_23;                    // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_381[0x3];                                      // 0x0381(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0389(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38A[0x6];                                      // 0x038A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_GunFight_C*        K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight_12; // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_24;                    // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_399[0x3];                                      // 0x0399(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_7;                   // 0x039C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A4[0x4];                                      // 0x03A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item_2;                         // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B1[0x7];                                      // 0x03B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_Teams_C*                K2Node_DynamicCast_AsBP_Player_State_Teams_2;      // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_25;                    // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x03C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C2[0x6];                                      // 0x03C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_GunFight_C*        K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight_13; // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_26;                    // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x03D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D2[0x2];                                      // 0x03D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_RoundsToWin;                    // 0x03D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GSC_Team_Raid_C*                    CallFunc_Get_Attacking_Team_Attacking_Team;        // 0x03D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GSC_Team_Raid_C*                    CallFunc_Get_Defending_Team_Defending_Team;        // 0x03E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Remaining_Time_3;               // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_10;         // 0x03EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3ED[0x3];                                      // 0x03ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Remaining_Time_2;               // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_1;                   // 0x03F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F5[0x3];                                      // 0x03F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_7;                  // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x03FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3FD[0x3];                                      // 0x03FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0400(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Remaining_Time_1;               // 0x0404(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_11;         // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_409[0x3];                                      // 0x0409(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Remaining_Time;                 // 0x040C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0411(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_412[0x2];                                      // 0x0412(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetUserControllerId_ReturnValue_11;       // 0x0414(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_11; // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_GunFight_C*        K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight_14; // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_27;                    // 0x0428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_429[0x3];                                      // 0x0429(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x042C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GSC_Team_Raid_C*                    CallFunc_Get_Attacking_Team_Attacking_Team_1;      // 0x0430(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GSC_Team_Raid_C*                    CallFunc_Get_Defending_Team_Defending_Team_1;      // 0x0438(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x0441(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_442[0x2];                                      // 0x0442(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0444(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_1;                           // 0x0448(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGunFightWinReason                            K2Node_CustomEvent_Win_Reason;                     // 0x044C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44D[0x3];                                      // 0x044D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GSC_Team_Raid_C*                    K2Node_CustomEvent_Team_Who_Won;                   // 0x0450(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_12;         // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_459[0x7];                                      // 0x0459(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GSC_Team_Raid_C*                    CallFunc_Get_Attacking_Team_Attacking_Team_2;      // 0x0460(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GSC_Team_Raid_C*                    CallFunc_Get_Defending_Team_Defending_Team_2;      // 0x0468(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_13;                   // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_14;                   // 0x0471(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_472[0x2];                                      // 0x0472(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_2;                           // 0x0474(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_3;                           // 0x0478(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_8;                   // 0x047C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_481[0x7];                                      // 0x0481(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FStruct_GunFightLoadout>        K2Node_CustomEvent_InCurrentRoundLoadouts_Attackers; // 0x0488(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FStruct_GunFightLoadout>        K2Node_CustomEvent_InCurrentRoundLoadouts_Defenders; // 0x0498(0x0010)(ConstParm, ReferenceParm)
	struct FStruct_TVTDeathmatch_KillFeed         K2Node_CustomEvent_KillFeed;                       // 0x04A8(0x00C8)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x0570(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_574[0x4];                                      // 0x0574(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_TVTDeathmatch_KillFeed         CallFunc_Modify_Kill_Feed_Color_By_Team_Kill_Feed_Out; // 0x0578(0x00C8)(HasGetValueTypeHash)
	struct FStruct_GunFightLoadout                CallFunc_Array_Get_Item_3;                         // 0x0640(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x0668(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_669[0x3];                                      // 0x0669(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x066C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x0670(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0674(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0675(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_15;                   // 0x0676(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_677[0x1];                                      // 0x0677(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Attacker_Survivors;             // 0x0678(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Defender_Survivors;             // 0x067C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_2;                   // 0x0680(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_681[0x3];                                      // 0x0681(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0684(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Objective_GunFight_C*               K2Node_CustomEvent_Objective;                      // 0x0688(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ObjectiveSpawnPoint_GunFight_C*     K2Node_CustomEvent_SpawnPoint;                     // 0x0690(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_8;                  // 0x0698(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_9;                   // 0x069C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           CallFunc_Array_Get_Item_4;                         // 0x06A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_16;                   // 0x06A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A9[0x7];                                      // 0x06A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_Teams_C*                K2Node_DynamicCast_AsBP_Player_State_Teams_3;      // 0x06B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_28;                    // 0x06B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B9[0x3];                                      // 0x06B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x06BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_17;                   // 0x06C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6C1[0x7];                                      // 0x06C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_GunFight_C*        K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight_15; // 0x06C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_29;                    // 0x06D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D1[0x3];                                      // 0x06D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_10;                  // 0x06D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStruct_GunFightLoadout                CallFunc_Array_Get_Item_5;                         // 0x06D8(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_GetUserControllerId_ReturnValue_12;       // 0x0700(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_18;                   // 0x0704(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_705[0x3];                                      // 0x0705(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_12; // 0x0708(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_TVTDeathmatch_KillFeed_C*           CallFunc_Create_ReturnValue;                       // 0x0710(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Player_in_Team_Is_in_Team;             // 0x0718(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_719[0x3];                                      // 0x0719(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetUserControllerId_ReturnValue_13;       // 0x071C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_Select_Default_4;                           // 0x0720(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_13; // 0x0728(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_GunFight_SurvivorCount_C*           CallFunc_Create_ReturnValue_1;                     // 0x0730(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Value;                          // 0x0738(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x073C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_13;         // 0x073D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73E[0x2];                                      // 0x073E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_9;                  // 0x0740(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0744(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_745[0x3];                                      // 0x0745(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x0748(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x074C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_75C[0x4];                                      // 0x075C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0760(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Sides_Switched;                 // 0x0768(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_769[0x7];                                      // 0x0769(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_PlayerStart_Raid_C*>         K2Node_CustomEvent_Attacker_Spawns;                // 0x0770(0x0010)(ConstParm, ReferenceParm)
	TArray<class ABP_PlayerStart_Raid_C*>         K2Node_CustomEvent_Defender_Spawns;                // 0x0780(0x0010)(ConstParm, ReferenceParm)
	int32                                         K2Node_CustomEvent_CurrentSettingID;               // 0x0790(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_794[0x4];                                      // 0x0794(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUI_SelectionWheel_C*>           CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0798(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UUI_SelectionWheel_C*                   CallFunc_Array_Get_Item_6;                         // 0x07A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_8;               // 0x07B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x07B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue_3;                   // 0x07B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7B6[0x2];                                      // 0x07B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_1;                             // 0x07B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_9;               // 0x07BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TeamsMatchPhase                             K2Node_Event_Match_Phase;                          // 0x07C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C1[0x3];                                      // 0x07C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x07C4(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x07D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D5[0x3];                                      // 0x07D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x07D8(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue;                 // 0x07E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue_1;               // 0x07E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsActive;                       // 0x07F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7F1[0x3];                                      // 0x07F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_11;                  // 0x07F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_Barricade_GunFight_C*>       CallFunc_GetAllActorsOfClass_OutActors;            // 0x07F8(0x0010)(ReferenceParm)
	class APlayerState*                           CallFunc_Array_Get_Item_7;                         // 0x0808(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Barricade_GunFight_C*               CallFunc_Array_Get_Item_8;                         // 0x0810(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_19;                   // 0x0818(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_819[0x7];                                      // 0x0819(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_Teams_C*                K2Node_DynamicCast_AsBP_Player_State_Teams_4;      // 0x0820(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_30;                    // 0x0828(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_829[0x3];                                      // 0x0829(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_10;              // 0x082C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x0830(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_20;                   // 0x0831(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_832[0x6];                                      // 0x0832(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_GunFight_C*        K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight_16; // 0x0838(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_31;                    // 0x0840(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_841[0x7];                                      // 0x0841(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0848(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerCharacter*                  CallFunc_GetHumanCharacter_ReturnValue;            // 0x0850(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_WorldSpectator_C*                   K2Node_DynamicCast_AsBP_World_Spectator;           // 0x0858(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_32;                    // 0x0860(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_21;                   // 0x0861(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_22;                   // 0x0862(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_863[0x1];                                      // 0x0863(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMaxHealth_ReturnValue;                 // 0x0864(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_Gunfight_LoadoutSlotInfo>    K2Node_CustomEvent_Loadouts;                       // 0x0868(0x0010)(ReferenceParm)
	TArray<struct FS_GunFightLoadoutSlot>         K2Node_CustomEvent_Loadout_slots;                  // 0x0878(0x0010)(ConstParm, ReferenceParm)
	bool                                          K2Node_CustomEvent_isAttacker;                     // 0x0888(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_889[0x3];                                      // 0x0889(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x088C(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Get_Pre_Round_Time_Time;                  // 0x089C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x08A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A1[0x3];                                      // 0x08A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_5;                           // 0x08A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_2;        // 0x08A8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_14;         // 0x08B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8B1[0x3];                                      // 0x08B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x08B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Pre_Round_Time_Time_1;                // 0x08B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x08BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BD[0x3];                                      // 0x08BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_12;                  // 0x08C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C4[0x4];                                      // 0x08C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_GunFightLoadout                CallFunc_Array_Get_Item_9;                         // 0x08C8(0x0028)(HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_10;                 // 0x08F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x08F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8F5[0x3];                                      // 0x08F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x08F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8FC[0x4];                                      // 0x08FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UEventSystem*                           CallFunc_GetEventSystem_ReturnValue;               // 0x0900(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEventSystem*                           CallFunc_GetEventSystem_ReturnValue_1;             // 0x0908(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_EventSystem_C>    K2Node_DynamicCast_AsBPI_Event_System;             // 0x0910(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_33;                    // 0x0920(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_921[0x7];                                      // 0x0921(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EventSystem_C>    K2Node_DynamicCast_AsBPI_Event_System_1;           // 0x0928(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_34;                    // 0x0938(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_939[0x7];                                      // 0x0939(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_EventSystem_C*                      CallFunc_Get_BP_event_system_Event_system;         // 0x0940(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_EventSystem_C*                      CallFunc_Get_BP_event_system_Event_system_1;       // 0x0948(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_23;                   // 0x0950(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_24;                   // 0x0951(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_952[0x2];                                      // 0x0952(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_11;                 // 0x0954(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_7;                // 0x0958(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_959[0x3];                                      // 0x0959(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x095C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_15;         // 0x0960(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_961[0x3];                                      // 0x0961(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0964(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_974[0x4];                                      // 0x0974(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UEventSystem*                           CallFunc_GetEventSystem_ReturnValue_2;             // 0x0978(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_3;        // 0x0980(0x0008)(NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_EventSystem_C>    K2Node_DynamicCast_AsBPI_Event_System_2;           // 0x0988(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_35;                    // 0x0998(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_999[0x7];                                      // 0x0999(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_ScoreEventStringKey;            // 0x09A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Awarded_Points;                 // 0x09B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9B4[0x4];                                      // 0x09B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_EventSystem_C*                      CallFunc_Get_BP_event_system_Event_system_2;       // 0x09B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_4;                   // 0x09C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_25;                   // 0x09C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C2[0x6];                                      // 0x09C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 CallFunc_GetFlameController_ReturnValue;           // 0x09C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_16;         // 0x09D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_26;                   // 0x09D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D2[0x2];                                      // 0x09D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_ScoreBoosterTeam1_Count;        // 0x09D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ScoreBoosterTeam2_Count;        // 0x09D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x09DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x09DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9DE[0x2];                                      // 0x09DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_12;                 // 0x09E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_8;                // 0x09E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9E5[0x3];                                      // 0x09E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_10;                // 0x09E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9EC[0x4];                                      // 0x09EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_GunFightStatistics             K2Node_CustomEvent_ScoreboardRow;                  // 0x09F0(0x0050)(HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_WasKicked;                      // 0x0A40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Attacker;                       // 0x0A41(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A42[0x6];                                      // 0x0A42(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_ScoreboardRow                  CallFunc_GetDisconnectedScoreboardRow_ScoreboardRow; // 0x0A48(0x0070)(HasGetValueTypeHash)
	class APlayerState*                           CallFunc_Array_Get_Item_10;                        // 0x0AB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_4;            // 0x0AC0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_27;                   // 0x0AC4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AC5[0x3];                                      // 0x0AC5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0AC8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ACC[0x4];                                      // 0x0ACC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_Teams_C*                K2Node_DynamicCast_AsBP_Player_State_Teams_5;      // 0x0AD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_36;                    // 0x0AD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AD9[0x3];                                      // 0x0AD9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_11;              // 0x0ADC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_9;                // 0x0AE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_28;                   // 0x0AE1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AE2[0x6];                                      // 0x0AE2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_GunFight_C*        K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight_17; // 0x0AE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_37;                    // 0x0AF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckLocalPlayerForLoadout_HasLoadout;    // 0x0AF1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Find_Value;                           // 0x0AF2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0AF3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AF4[0x4];                                      // 0x0AF4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 CallFunc_GetFlameController_ReturnValue_1;         // 0x0AF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0B00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_29;                   // 0x0B01(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B02[0x6];                                      // 0x0B02(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerCharacter*                  CallFunc_GetHumanCharacter_ReturnValue_1;          // 0x0B08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Character_GunFight_C*               K2Node_DynamicCast_AsBP_Character_Gun_Fight;       // 0x0B10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_38;                    // 0x0B18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_30;                   // 0x0B19(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue_5;                   // 0x0B1A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue_6;                   // 0x0B1B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         K2Node_CustomEvent_CooldownStartTime;              // 0x0B1C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_ActiveVoteKick;                 // 0x0B20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B21[0x3];                                      // 0x0B21(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_TeamIndex_1;                    // 0x0B24(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_GunFight_C*        K2Node_CustomEvent_PlayerToKick_2;                 // 0x0B28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bShouldDisplayAFKCheck;         // 0x0B30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B31[0x7];                                      // 0x0B31(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_GunFight_C*        K2Node_CustomEvent_PlayerToKick_1;                 // 0x0B38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_TeamID_2;                       // 0x0B40(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0B44(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B45[0x3];                                      // 0x0B45(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_GunFight_C*             K2Node_DynamicCast_AsBP_Player_State_Gun_Fight;    // 0x0B48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_39;                    // 0x0B50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B51[0x3];                                      // 0x0B51(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Get_Team_Index_Index;                     // 0x0B54(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Attacker_Is_Attacker_1;                // 0x0B58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B59[0x3];                                      // 0x0B59(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetVoteKickStartTime_StartElapsedTime;    // 0x0B5C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x0B60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_31;                   // 0x0B61(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B62[0x6];                                      // 0x0B62(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_Teams_C*                K2Node_DynamicCast_AsBP_Player_State_Teams_6;      // 0x0B68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_40;                    // 0x0B70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B71[0x3];                                      // 0x0B71(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0B74(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x0B78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0B7C(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Variable_7;                               // 0x0B8C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_8;                               // 0x0B90(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_9;                               // 0x0B94(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_TeamIndex;                      // 0x0B98(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bCanVoteKick;                   // 0x0B9C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9D[0x3];                                      // 0x0B9D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_11;                // 0x0BA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_17;         // 0x0BA4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BA5[0x3];                                      // 0x0BA5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x0BA8(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_4;        // 0x0BB8(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0BC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC1[0x3];                                      // 0x0BC1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x0BC4(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_BD4[0x4];                                      // 0x0BD4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_5;        // 0x0BD8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_ByteByte_ReturnValue;           // 0x0BE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BE1[0x3];                                      // 0x0BE1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_6;                           // 0x0BE4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_7;                           // 0x0BE8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_8;                           // 0x0BEC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BED[0x3];                                      // 0x0BED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_13;                  // 0x0BF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0BF4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BF5[0x3];                                      // 0x0BF5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item_11;                        // 0x0BF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_32;                   // 0x0C00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C01[0x3];                                      // 0x0C01(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_9;                           // 0x0C04(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0C08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0C0C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C0D[0x3];                                      // 0x0C0D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_Teams_C*                K2Node_DynamicCast_AsBP_Player_State_Teams_7;      // 0x0C10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_41;                    // 0x0C18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C19[0x3];                                      // 0x0C19(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_KickedPlayerID;                 // 0x0C1C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_TeamID_1;                       // 0x0C20(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_33;                   // 0x0C24(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C25[0x3];                                      // 0x0C25(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_GunFight_C*        K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight_18; // 0x0C28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_42;                    // 0x0C30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_7;                              // 0x0C31(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C32[0x2];                                      // 0x0C32(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_10;                          // 0x0C34(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_1;                       // 0x0C38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_7;            // 0x0C3C(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_FFloor_ReturnValue_2;                     // 0x0C4C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_6;        // 0x0C50(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x0C58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C59[0x7];                                      // 0x0C59(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_Select_Default_11;                          // 0x0C60(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0C70(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_ByteByte_ReturnValue;                // 0x0C74(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C75[0x3];                                      // 0x0C75(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0C78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C7C[0x4];                                      // 0x0C7C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_GunFight_C*        CallFunc_Array_Get_Item_12;                        // 0x0C80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_12;              // 0x0C88(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x0C8C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C8D[0x3];                                      // 0x0C8D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_Teams_C*                K2Node_DynamicCast_AsBP_Player_State_Teams_8;      // 0x0C90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_43;                    // 0x0C98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0C99(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9A[0x2];                                      // 0x0C9A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Get_Team_Index_Index_1;                   // 0x0C9C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess_1;                 // 0x0CA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CA1[0x7];                                      // 0x0CA1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_GunFight_C*             K2Node_DynamicCast_AsBP_Player_State_Gun_Fight_1;  // 0x0CA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_44;                    // 0x0CB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0CB1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CB2[0x2];                                      // 0x0CB2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Get_Team_Index_Index_2;                   // 0x0CB4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess_2;                 // 0x0CB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CB9[0x3];                                      // 0x0CB9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_13;              // 0x0CBC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_2;            // 0x0CC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC1[0x3];                                      // 0x0CC1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_5;            // 0x0CC4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue_1;                        // 0x0CC8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_ByteByte_ReturnValue;             // 0x0CCC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0CCD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_8;                              // 0x0CCE(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CCF[0x1];                                      // 0x0CCF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_GunFight_C*        CallFunc_Array_Get_Item_13;                        // 0x0CD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_14;              // 0x0CD8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CDC[0x4];                                      // 0x0CDC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_GunFight_C*             K2Node_DynamicCast_AsBP_Player_State_Gun_Fight_2;  // 0x0CE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_45;                    // 0x0CE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CE9[0x3];                                      // 0x0CE9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_6;            // 0x0CEC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue_2;                        // 0x0CF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Team_Index_Index_3;                   // 0x0CF4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess_3;                 // 0x0CF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CF9[0x3];                                      // 0x0CF9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_TVTDeathmatch_ScoreValue       CallFunc_GetDataTableRowFromName_OutRow;           // 0x0CFC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0D00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D01[0x7];                                      // 0x0D01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_GunFight_C*        K2Node_CustomEvent_PlayerToKick;                   // 0x0D08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_ShouldKick;                     // 0x0D10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D11[0x3];                                      // 0x0D11(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_TeamID;                         // 0x0D14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0D18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_34;                   // 0x0D1C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1D[0x3];                                      // 0x0D1D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0D20(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D24[0x4];                                      // 0x0D24(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_GunFight_C*        CallFunc_Array_Get_Item_14;                        // 0x0D28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_7;        // 0x0D30(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_35;                   // 0x0D38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D39[0x7];                                      // 0x0D39(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_GunFight_C*             K2Node_DynamicCast_AsBP_Player_State_Gun_Fight_3;  // 0x0D40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_46;                    // 0x0D48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D49[0x3];                                      // 0x0D49(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_15;              // 0x0D4C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Team_Index_Index_4;                   // 0x0D50(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_7;            // 0x0D54(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue_3;                        // 0x0D58(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_13;                 // 0x0D5C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_10;               // 0x0D60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D61[0x3];                                      // 0x0D61(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_12;                // 0x0D64(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0D68(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0D6C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_11;               // 0x0D6D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D6E[0x2];                                      // 0x0D6E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetUserControllerId_ReturnValue_14;       // 0x0D70(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D74[0x4];                                      // 0x0D74(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_14; // 0x0D78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_GunFight_C*        K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight_19; // 0x0D80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_47;                    // 0x0D88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_36;                   // 0x0D89(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight) == 0x000008, "Wrong alignment on BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight");
static_assert(sizeof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight) == 0x000D90, "Wrong size on BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, EntryPoint) == 0x000000, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_IsServer_ReturnValue) == 0x000008, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_GetGameMode_ReturnValue) == 0x000010, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight) == 0x000018, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_GetGameMode_ReturnValue_1) == 0x000028, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_GetGameMode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight_1) == 0x000030, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, Temp_int_Array_Index_Variable_1) == 0x00003C, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, Temp_int_Variable) == 0x000040, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Conv_IntToByte_ReturnValue) == 0x00004C, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x00004D, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000050, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_IsDedicatedServer_ReturnValue) == 0x000054, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x000055, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Add_IntInt_ReturnValue_1) == 0x00005C, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, Temp_int_Array_Index_Variable_2) == 0x000060, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, Temp_int_Variable_1) == 0x000064, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000068, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_GetValidValue_ReturnValue) == 0x000069, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_IsDedicatedServer_ReturnValue_2) == 0x00006A, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_IsDedicatedServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_IsDedicatedServer_ReturnValue_3) == 0x00006B, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_IsDedicatedServer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_GetUserControllerId_ReturnValue) == 0x00006C, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_GetUserControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_IsDedicatedServer_ReturnValue_4) == 0x000070, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_IsDedicatedServer_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue) == 0x000078, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight) == 0x000080, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_bSuccess_2) == 0x000088, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, Temp_int_Loop_Counter_Variable_1) == 0x00008C, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_GetUserControllerId_ReturnValue_1) == 0x000090, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_GetUserControllerId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_1) == 0x000098, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000A0, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight_1) == 0x0000A8, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_bSuccess_3) == 0x0000B0, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_GetUserControllerId_ReturnValue_2) == 0x0000B4, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_GetUserControllerId_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_2) == 0x0000B8, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_GetUserControllerId_ReturnValue_3) == 0x0000C0, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_GetUserControllerId_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight_2) == 0x0000C8, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_bSuccess_4) == 0x0000D0, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_3) == 0x0000D8, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight_3) == 0x0000E0, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_bSuccess_5) == 0x0000E8, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_IsDedicatedServer_ReturnValue_5) == 0x0000E9, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_IsDedicatedServer_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_IsDedicatedServer_ReturnValue_6) == 0x0000EA, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_IsDedicatedServer_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Conv_BoolToString_ReturnValue) == 0x0000F0, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Concat_StrStr_ReturnValue) == 0x000100, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_IsValid_ReturnValue) == 0x000110, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, Temp_int_Loop_Counter_Variable_2) == 0x000114, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_GetUserControllerId_ReturnValue_4) == 0x000118, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_GetUserControllerId_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_4) == 0x000120, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Add_IntInt_ReturnValue_3) == 0x000128, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight_4) == 0x000130, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight_4' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_bSuccess_6) == 0x000138, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_GetMapRewards_ReturnValue) == 0x00013C, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_GetMapRewards_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_IsDedicatedServer_ReturnValue_7) == 0x000140, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_IsDedicatedServer_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, Temp_bool_IsClosed_Variable) == 0x000141, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, Temp_object_Variable) == 0x000148, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, Temp_bool_Has_Been_Initd_Variable) == 0x000150, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, Temp_int_Array_Index_Variable_3) == 0x000154, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, Temp_object_Variable_1) == 0x000158, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Array_Get_Item) == 0x000160, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Array_Length_ReturnValue_1) == 0x000168, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_IsValid_ReturnValue_1) == 0x00016C, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_AsBP_Player_State_Teams) == 0x000170, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_AsBP_Player_State_Teams' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_bSuccess_7) == 0x000178, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, Temp_bool_Variable) == 0x000179, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_IsValid_ReturnValue_2) == 0x00017A, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight_5) == 0x000180, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight_5' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_bSuccess_8) == 0x000188, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Is_Attacker_Is_Attacker) == 0x000189, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Is_Attacker_Is_Attacker' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_GetGameMode_ReturnValue_2) == 0x000190, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_GetGameMode_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight_2) == 0x000198, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_bSuccess_9) == 0x0001A0, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue) == 0x0001A4, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue_1) == 0x0001A8, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_FMax_ReturnValue) == 0x0001AC, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_FFloor_ReturnValue) == 0x0001B0, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0001B4, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_FFloor_ReturnValue_1) == 0x0001B8, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_FFloor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_GetGameMode_ReturnValue_3) == 0x0001C0, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_GetGameMode_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight_3) == 0x0001C8, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_bSuccess_10) == 0x0001D0, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_IsValid_ReturnValue_3) == 0x0001D1, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, Temp_int_Loop_Counter_Variable_3) == 0x0001D4, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Less_IntInt_ReturnValue) == 0x0001D8, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Add_IntInt_ReturnValue_4) == 0x0001DC, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_GetGameMode_ReturnValue_4) == 0x0001E0, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_GetGameMode_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_GetUserControllerId_ReturnValue_5) == 0x0001E8, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_GetUserControllerId_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight_4) == 0x0001F0, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight_4' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_bSuccess_11) == 0x0001F8, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_5) == 0x000200, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight_6) == 0x000208, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight_6' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_bSuccess_12) == 0x000210, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_IsValid_ReturnValue_4) == 0x000211, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_IsDedicatedServer_ReturnValue_8) == 0x000212, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_IsDedicatedServer_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, Temp_int_Loop_Counter_Variable_4) == 0x000214, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Subtract_IntInt_ReturnValue) == 0x000218, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00021C, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, Temp_int_Array_Index_Variable_4) == 0x000220, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, Temp_int_Variable_2) == 0x000224, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_GetUserControllerId_ReturnValue_6) == 0x000228, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_GetUserControllerId_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, Temp_bool_Variable_1) == 0x00022C, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_6) == 0x000230, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, Temp_int_Loop_Counter_Variable_5) == 0x000238, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight_7) == 0x000240, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight_7' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_bSuccess_13) == 0x000248, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_bSuccess_13' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00024C, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_IsValid_ReturnValue_5) == 0x000250, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000251, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, Temp_int_Array_Index_Variable_5) == 0x000254, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_GetUserControllerId_ReturnValue_7) == 0x000258, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_GetUserControllerId_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_7) == 0x000260, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, Temp_int_Variable_3) == 0x000268, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight_8) == 0x000270, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight_8' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_bSuccess_14) == 0x000278, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_bSuccess_14' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_GetUserControllerId_ReturnValue_8) == 0x00027C, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_GetUserControllerId_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_GetGameMode_ReturnValue_5) == 0x000280, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_GetGameMode_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_8) == 0x000288, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight_5) == 0x000290, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight_5' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_bSuccess_15) == 0x000298, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_bSuccess_15' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight_9) == 0x0002A0, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight_9' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_bSuccess_16) == 0x0002A8, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_bSuccess_16' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_GetGameMode_ReturnValue_6) == 0x0002B0, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_GetGameMode_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight_6) == 0x0002B8, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight_6' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_bSuccess_17) == 0x0002C0, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_bSuccess_17' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, Temp_bool_Variable_2) == 0x0002C1, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_IsDedicatedServer_ReturnValue_9) == 0x0002C2, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_IsDedicatedServer_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, Temp_int_Variable_4) == 0x0002C4, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, Temp_int_Loop_Counter_Variable_6) == 0x0002C8, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::Temp_int_Loop_Counter_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x0002CC, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_GreaterEqual_IntInt_ReturnValue_2) == 0x0002D0, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_GreaterEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, Temp_int_Array_Index_Variable_6) == 0x0002D4, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::Temp_int_Array_Index_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_GetUserControllerId_ReturnValue_9) == 0x0002D8, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_GetUserControllerId_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_9) == 0x0002E0, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, Temp_bool_Variable_3) == 0x0002E8, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight_10) == 0x0002F0, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight_10' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_bSuccess_18) == 0x0002F8, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_bSuccess_18' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_GetUserControllerId_ReturnValue_10) == 0x0002FC, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_GetUserControllerId_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_10) == 0x000300, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight_11) == 0x000308, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight_11' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_bSuccess_19) == 0x000310, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_bSuccess_19' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_GetGameMode_ReturnValue_7) == 0x000318, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_GetGameMode_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, Temp_int_Variable_5) == 0x000320, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight_7) == 0x000328, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight_7' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_bSuccess_20) == 0x000330, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_bSuccess_20' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_GetGameMode_ReturnValue_8) == 0x000338, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_GetGameMode_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, Temp_bool_Variable_4) == 0x000340, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight_8) == 0x000348, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight_8' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_bSuccess_21) == 0x000350, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_bSuccess_21' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_GetGameMode_ReturnValue_9) == 0x000358, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_GetGameMode_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Array_Get_Item_1) == 0x000360, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight_9) == 0x000368, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight_9' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_bSuccess_22) == 0x000370, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_bSuccess_22' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_IsValid_ReturnValue_6) == 0x000371, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_AsBP_Player_State_Teams_1) == 0x000378, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_AsBP_Player_State_Teams_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_bSuccess_23) == 0x000380, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_bSuccess_23' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Array_Length_ReturnValue_2) == 0x000384, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Less_IntInt_ReturnValue_1) == 0x000388, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_IsValid_ReturnValue_7) == 0x000389, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight_12) == 0x000390, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight_12' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_bSuccess_24) == 0x000398, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_bSuccess_24' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, Temp_int_Array_Index_Variable_7) == 0x00039C, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::Temp_int_Array_Index_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Array_Length_ReturnValue_3) == 0x0003A0, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Array_Get_Item_2) == 0x0003A8, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_IsValid_ReturnValue_8) == 0x0003B0, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_AsBP_Player_State_Teams_2) == 0x0003B8, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_AsBP_Player_State_Teams_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_bSuccess_25) == 0x0003C0, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_bSuccess_25' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_IsValid_ReturnValue_9) == 0x0003C1, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight_13) == 0x0003C8, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight_13' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_bSuccess_26) == 0x0003D0, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_bSuccess_26' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Not_PreBool_ReturnValue) == 0x0003D1, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_CustomEvent_RoundsToWin) == 0x0003D4, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_CustomEvent_RoundsToWin' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Get_Attacking_Team_Attacking_Team) == 0x0003D8, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Get_Attacking_Team_Attacking_Team' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Get_Defending_Team_Defending_Team) == 0x0003E0, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Get_Defending_Team_Defending_Team' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_CustomEvent_Remaining_Time_3) == 0x0003E8, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_CustomEvent_Remaining_Time_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_IsDedicatedServer_ReturnValue_10) == 0x0003EC, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_IsDedicatedServer_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_CustomEvent_Remaining_Time_2) == 0x0003F0, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_CustomEvent_Remaining_Time_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_IsServer_ReturnValue_1) == 0x0003F4, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_IsServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, Temp_int_Loop_Counter_Variable_7) == 0x0003F8, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::Temp_int_Loop_Counter_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Less_IntInt_ReturnValue_2) == 0x0003FC, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Add_IntInt_ReturnValue_5) == 0x000400, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_CustomEvent_Remaining_Time_1) == 0x000404, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_CustomEvent_Remaining_Time_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_IsDedicatedServer_ReturnValue_11) == 0x000408, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_IsDedicatedServer_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_CustomEvent_Remaining_Time) == 0x00040C, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_CustomEvent_Remaining_Time' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_IsValid_ReturnValue_10) == 0x000410, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000411, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_GetUserControllerId_ReturnValue_11) == 0x000414, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_GetUserControllerId_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_11) == 0x000418, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight_14) == 0x000420, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight_14' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_bSuccess_27) == 0x000428, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_bSuccess_27' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Array_Length_ReturnValue_4) == 0x00042C, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Get_Attacking_Team_Attacking_Team_1) == 0x000430, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Get_Attacking_Team_Attacking_Team_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Get_Defending_Team_Defending_Team_1) == 0x000438, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Get_Defending_Team_Defending_Team_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_IsValid_ReturnValue_11) == 0x000440, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_IsValid_ReturnValue_12) == 0x000441, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_Select_Default) == 0x000444, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_Select_Default_1) == 0x000448, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_CustomEvent_Win_Reason) == 0x00044C, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_CustomEvent_Win_Reason' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_CustomEvent_Team_Who_Won) == 0x000450, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_CustomEvent_Team_Who_Won' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_IsDedicatedServer_ReturnValue_12) == 0x000458, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_IsDedicatedServer_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Get_Attacking_Team_Attacking_Team_2) == 0x000460, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Get_Attacking_Team_Attacking_Team_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Get_Defending_Team_Defending_Team_2) == 0x000468, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Get_Defending_Team_Defending_Team_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_IsValid_ReturnValue_13) == 0x000470, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_IsValid_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_IsValid_ReturnValue_14) == 0x000471, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_IsValid_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_Select_Default_2) == 0x000474, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_Select_Default_3) == 0x000478, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, Temp_int_Array_Index_Variable_8) == 0x00047C, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::Temp_int_Array_Index_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, Temp_bool_Variable_5) == 0x000480, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_CustomEvent_InCurrentRoundLoadouts_Attackers) == 0x000488, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_CustomEvent_InCurrentRoundLoadouts_Attackers' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_CustomEvent_InCurrentRoundLoadouts_Defenders) == 0x000498, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_CustomEvent_InCurrentRoundLoadouts_Defenders' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_CustomEvent_KillFeed) == 0x0004A8, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_CustomEvent_KillFeed' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Array_Length_ReturnValue_5) == 0x000570, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Modify_Kill_Feed_Color_By_Team_Kill_Feed_Out) == 0x000578, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Modify_Kill_Feed_Color_By_Team_Kill_Feed_Out' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Array_Get_Item_3) == 0x000640, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x000668, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Array_Length_ReturnValue_6) == 0x00066C, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Array_Length_ReturnValue_7) == 0x000670, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Greater_IntInt_ReturnValue) == 0x000674, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Not_PreBool_ReturnValue_1) == 0x000675, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_IsValid_ReturnValue_15) == 0x000676, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_IsValid_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_CustomEvent_Attacker_Survivors) == 0x000678, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_CustomEvent_Attacker_Survivors' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_CustomEvent_Defender_Survivors) == 0x00067C, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_CustomEvent_Defender_Survivors' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_IsServer_ReturnValue_2) == 0x000680, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_IsServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, Temp_float_Variable) == 0x000684, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_CustomEvent_Objective) == 0x000688, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_CustomEvent_Objective' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_CustomEvent_SpawnPoint) == 0x000690, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_CustomEvent_SpawnPoint' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, Temp_int_Loop_Counter_Variable_8) == 0x000698, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::Temp_int_Loop_Counter_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, Temp_int_Array_Index_Variable_9) == 0x00069C, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::Temp_int_Array_Index_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Array_Get_Item_4) == 0x0006A0, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_IsValid_ReturnValue_16) == 0x0006A8, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_IsValid_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_AsBP_Player_State_Teams_3) == 0x0006B0, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_AsBP_Player_State_Teams_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_bSuccess_28) == 0x0006B8, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_bSuccess_28' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Add_IntInt_ReturnValue_6) == 0x0006BC, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_IsValid_ReturnValue_17) == 0x0006C0, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_IsValid_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight_15) == 0x0006C8, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight_15' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_bSuccess_29) == 0x0006D0, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_bSuccess_29' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, Temp_int_Array_Index_Variable_10) == 0x0006D4, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::Temp_int_Array_Index_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Array_Get_Item_5) == 0x0006D8, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_GetUserControllerId_ReturnValue_12) == 0x000700, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_GetUserControllerId_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_IsValid_ReturnValue_18) == 0x000704, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_IsValid_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_12) == 0x000708, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Create_ReturnValue) == 0x000710, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Is_Player_in_Team_Is_in_Team) == 0x000718, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Is_Player_in_Team_Is_in_Team' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_GetUserControllerId_ReturnValue_13) == 0x00071C, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_GetUserControllerId_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_Select_Default_4) == 0x000720, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_13) == 0x000728, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Create_ReturnValue_1) == 0x000730, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_CustomEvent_Value) == 0x000738, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_CustomEvent_Value' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00073C, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_IsDedicatedServer_ReturnValue_13) == 0x00073D, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_IsDedicatedServer_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, Temp_int_Loop_Counter_Variable_9) == 0x000740, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::Temp_int_Loop_Counter_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Less_IntInt_ReturnValue_3) == 0x000744, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Add_IntInt_ReturnValue_7) == 0x000748, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_CreateDelegate_OutputDelegate) == 0x00074C, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000760, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_CustomEvent_Sides_Switched) == 0x000768, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_CustomEvent_Sides_Switched' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_CustomEvent_Attacker_Spawns) == 0x000770, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_CustomEvent_Attacker_Spawns' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_CustomEvent_Defender_Spawns) == 0x000780, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_CustomEvent_Defender_Spawns' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_CustomEvent_CurrentSettingID) == 0x000790, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_CustomEvent_CurrentSettingID' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000798, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Array_Get_Item_6) == 0x0007A8, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Array_Length_ReturnValue_8) == 0x0007B0, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Array_Length_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Less_IntInt_ReturnValue_4) == 0x0007B4, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_IsServer_ReturnValue_3) == 0x0007B5, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_IsServer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, Temp_float_Variable_1) == 0x0007B8, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Array_Length_ReturnValue_9) == 0x0007BC, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Array_Length_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_Event_Match_Phase) == 0x0007C0, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_Event_Match_Phase' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_CreateDelegate_OutputDelegate_1) == 0x0007C4, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_SwitchEnum_CmpSuccess) == 0x0007D4, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x0007D8, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_SpawnSound2D_ReturnValue) == 0x0007E0, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_SpawnSound2D_ReturnValue_1) == 0x0007E8, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_SpawnSound2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_CustomEvent_IsActive) == 0x0007F0, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_CustomEvent_IsActive' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, Temp_int_Array_Index_Variable_11) == 0x0007F4, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::Temp_int_Array_Index_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_GetAllActorsOfClass_OutActors) == 0x0007F8, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Array_Get_Item_7) == 0x000808, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Array_Get_Item_8) == 0x000810, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_IsValid_ReturnValue_19) == 0x000818, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_IsValid_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_AsBP_Player_State_Teams_4) == 0x000820, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_AsBP_Player_State_Teams_4' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_bSuccess_30) == 0x000828, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_bSuccess_30' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Array_Length_ReturnValue_10) == 0x00082C, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Array_Length_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Less_IntInt_ReturnValue_5) == 0x000830, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_IsValid_ReturnValue_20) == 0x000831, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_IsValid_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight_16) == 0x000838, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight_16' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_bSuccess_31) == 0x000840, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_bSuccess_31' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_K2_GetPawn_ReturnValue) == 0x000848, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_GetHumanCharacter_ReturnValue) == 0x000850, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_GetHumanCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_AsBP_World_Spectator) == 0x000858, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_AsBP_World_Spectator' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_bSuccess_32) == 0x000860, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_bSuccess_32' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_IsValid_ReturnValue_21) == 0x000861, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_IsValid_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_IsValid_ReturnValue_22) == 0x000862, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_IsValid_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_GetMaxHealth_ReturnValue) == 0x000864, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_GetMaxHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_CustomEvent_Loadouts) == 0x000868, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_CustomEvent_Loadouts' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_CustomEvent_Loadout_slots) == 0x000878, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_CustomEvent_Loadout_slots' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_CustomEvent_isAttacker) == 0x000888, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_CustomEvent_isAttacker' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_CreateDelegate_OutputDelegate_2) == 0x00088C, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Get_Pre_Round_Time_Time) == 0x00089C, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Get_Pre_Round_Time_Time' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Greater_IntInt_ReturnValue_2) == 0x0008A0, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_Select_Default_5) == 0x0008A4, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_K2_SetTimerDelegate_ReturnValue_2) == 0x0008A8, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_K2_SetTimerDelegate_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_IsDedicatedServer_ReturnValue_14) == 0x0008B0, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_IsDedicatedServer_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x0008B4, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Get_Pre_Round_Time_Time_1) == 0x0008B8, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Get_Pre_Round_Time_Time_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0008BC, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, Temp_int_Array_Index_Variable_12) == 0x0008C0, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::Temp_int_Array_Index_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Array_Get_Item_9) == 0x0008C8, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Array_Get_Item_9' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, Temp_int_Loop_Counter_Variable_10) == 0x0008F0, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::Temp_int_Loop_Counter_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Less_IntInt_ReturnValue_6) == 0x0008F4, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Add_IntInt_ReturnValue_8) == 0x0008F8, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_GetEventSystem_ReturnValue) == 0x000900, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_GetEventSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_GetEventSystem_ReturnValue_1) == 0x000908, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_GetEventSystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_AsBPI_Event_System) == 0x000910, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_AsBPI_Event_System' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_bSuccess_33) == 0x000920, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_bSuccess_33' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_AsBPI_Event_System_1) == 0x000928, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_AsBPI_Event_System_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_bSuccess_34) == 0x000938, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_bSuccess_34' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Get_BP_event_system_Event_system) == 0x000940, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Get_BP_event_system_Event_system' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Get_BP_event_system_Event_system_1) == 0x000948, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Get_BP_event_system_Event_system_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_IsValid_ReturnValue_23) == 0x000950, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_IsValid_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_IsValid_ReturnValue_24) == 0x000951, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_IsValid_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, Temp_int_Loop_Counter_Variable_11) == 0x000954, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::Temp_int_Loop_Counter_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Less_IntInt_ReturnValue_7) == 0x000958, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Less_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Add_IntInt_ReturnValue_9) == 0x00095C, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_IsDedicatedServer_ReturnValue_15) == 0x000960, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_IsDedicatedServer_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_CreateDelegate_OutputDelegate_3) == 0x000964, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_GetEventSystem_ReturnValue_2) == 0x000978, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_GetEventSystem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_K2_SetTimerDelegate_ReturnValue_3) == 0x000980, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_K2_SetTimerDelegate_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_AsBPI_Event_System_2) == 0x000988, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_AsBPI_Event_System_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_bSuccess_35) == 0x000998, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_bSuccess_35' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_CustomEvent_ScoreEventStringKey) == 0x0009A0, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_CustomEvent_ScoreEventStringKey' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_CustomEvent_Awarded_Points) == 0x0009B0, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_CustomEvent_Awarded_Points' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Get_BP_event_system_Event_system_2) == 0x0009B8, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Get_BP_event_system_Event_system_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_IsServer_ReturnValue_4) == 0x0009C0, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_IsServer_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_IsValid_ReturnValue_25) == 0x0009C1, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_IsValid_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_GetFlameController_ReturnValue) == 0x0009C8, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_GetFlameController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_IsDedicatedServer_ReturnValue_16) == 0x0009D0, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_IsDedicatedServer_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_IsValid_ReturnValue_26) == 0x0009D1, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_IsValid_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_CustomEvent_ScoreBoosterTeam1_Count) == 0x0009D4, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_CustomEvent_ScoreBoosterTeam1_Count' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_CustomEvent_ScoreBoosterTeam2_Count) == 0x0009D8, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_CustomEvent_ScoreBoosterTeam2_Count' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0009DC, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_BooleanAND_ReturnValue) == 0x0009DD, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, Temp_int_Loop_Counter_Variable_12) == 0x0009E0, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::Temp_int_Loop_Counter_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Less_IntInt_ReturnValue_8) == 0x0009E4, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Less_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Add_IntInt_ReturnValue_10) == 0x0009E8, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Add_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_CustomEvent_ScoreboardRow) == 0x0009F0, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_CustomEvent_ScoreboardRow' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_CustomEvent_WasKicked) == 0x000A40, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_CustomEvent_WasKicked' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_CustomEvent_Attacker) == 0x000A41, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_CustomEvent_Attacker' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_GetDisconnectedScoreboardRow_ScoreboardRow) == 0x000A48, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_GetDisconnectedScoreboardRow_ScoreboardRow' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Array_Get_Item_10) == 0x000AB8, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Array_Get_Item_10' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Subtract_IntInt_ReturnValue_4) == 0x000AC0, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Subtract_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_IsValid_ReturnValue_27) == 0x000AC4, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_IsValid_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Max_ReturnValue) == 0x000AC8, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_AsBP_Player_State_Teams_5) == 0x000AD0, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_AsBP_Player_State_Teams_5' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_bSuccess_36) == 0x000AD8, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_bSuccess_36' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Array_Length_ReturnValue_11) == 0x000ADC, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Array_Length_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Less_IntInt_ReturnValue_9) == 0x000AE0, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Less_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_IsValid_ReturnValue_28) == 0x000AE1, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_IsValid_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight_17) == 0x000AE8, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight_17' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_bSuccess_37) == 0x000AF0, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_bSuccess_37' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_CheckLocalPlayerForLoadout_HasLoadout) == 0x000AF1, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_CheckLocalPlayerForLoadout_HasLoadout' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Map_Find_Value) == 0x000AF2, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Map_Find_ReturnValue) == 0x000AF3, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_GetFlameController_ReturnValue_1) == 0x000AF8, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_GetFlameController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_BooleanAND_ReturnValue_1) == 0x000B00, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_IsValid_ReturnValue_29) == 0x000B01, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_IsValid_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_GetHumanCharacter_ReturnValue_1) == 0x000B08, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_GetHumanCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_AsBP_Character_Gun_Fight) == 0x000B10, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_AsBP_Character_Gun_Fight' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_bSuccess_38) == 0x000B18, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_bSuccess_38' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_IsValid_ReturnValue_30) == 0x000B19, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_IsValid_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_IsServer_ReturnValue_5) == 0x000B1A, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_IsServer_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_IsServer_ReturnValue_6) == 0x000B1B, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_IsServer_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_CustomEvent_CooldownStartTime) == 0x000B1C, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_CustomEvent_CooldownStartTime' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_CustomEvent_ActiveVoteKick) == 0x000B20, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_CustomEvent_ActiveVoteKick' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_CustomEvent_TeamIndex_1) == 0x000B24, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_CustomEvent_TeamIndex_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_CustomEvent_PlayerToKick_2) == 0x000B28, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_CustomEvent_PlayerToKick_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_CustomEvent_bShouldDisplayAFKCheck) == 0x000B30, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_CustomEvent_bShouldDisplayAFKCheck' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_CustomEvent_PlayerToKick_1) == 0x000B38, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_CustomEvent_PlayerToKick_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_CustomEvent_TeamID_2) == 0x000B40, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_CustomEvent_TeamID_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_SwitchInteger_CmpSuccess) == 0x000B44, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_AsBP_Player_State_Gun_Fight) == 0x000B48, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_AsBP_Player_State_Gun_Fight' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_bSuccess_39) == 0x000B50, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_bSuccess_39' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Get_Team_Index_Index) == 0x000B54, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Get_Team_Index_Index' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Is_Attacker_Is_Attacker_1) == 0x000B58, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Is_Attacker_Is_Attacker_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_GetVoteKickStartTime_StartElapsedTime) == 0x000B5C, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_GetVoteKickStartTime_StartElapsedTime' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x000B60, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_IsValid_ReturnValue_31) == 0x000B61, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_IsValid_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_AsBP_Player_State_Teams_6) == 0x000B68, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_AsBP_Player_State_Teams_6' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_bSuccess_40) == 0x000B70, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_bSuccess_40' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000B74, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, Temp_int_Variable_6) == 0x000B78, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_CreateDelegate_OutputDelegate_4) == 0x000B7C, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, Temp_int_Variable_7) == 0x000B8C, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, Temp_int_Variable_8) == 0x000B90, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, Temp_int_Variable_9) == 0x000B94, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::Temp_int_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_CustomEvent_TeamIndex) == 0x000B98, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_CustomEvent_TeamIndex' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_CustomEvent_bCanVoteKick) == 0x000B9C, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_CustomEvent_bCanVoteKick' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Add_IntInt_ReturnValue_11) == 0x000BA0, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Add_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_IsDedicatedServer_ReturnValue_17) == 0x000BA4, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_IsDedicatedServer_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_CreateDelegate_OutputDelegate_5) == 0x000BA8, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_K2_SetTimerDelegate_ReturnValue_4) == 0x000BB8, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_K2_SetTimerDelegate_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_MakeLiteralByte_ReturnValue) == 0x000BC0, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_CreateDelegate_OutputDelegate_6) == 0x000BC4, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_K2_SetTimerDelegate_ReturnValue_5) == 0x000BD8, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_K2_SetTimerDelegate_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_LessEqual_ByteByte_ReturnValue) == 0x000BE0, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_LessEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_Select_Default_6) == 0x000BE4, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_Select_Default_7) == 0x000BE8, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_Select_Default_8) == 0x000BEC, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, Temp_int_Array_Index_Variable_13) == 0x000BF0, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::Temp_int_Array_Index_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, Temp_bool_Variable_6) == 0x000BF4, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Array_Get_Item_11) == 0x000BF8, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Array_Get_Item_11' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_IsValid_ReturnValue_32) == 0x000C00, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_IsValid_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_Select_Default_9) == 0x000C04, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000C08, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Less_FloatFloat_ReturnValue) == 0x000C0C, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_AsBP_Player_State_Teams_7) == 0x000C10, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_AsBP_Player_State_Teams_7' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_bSuccess_41) == 0x000C18, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_bSuccess_41' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_CustomEvent_KickedPlayerID) == 0x000C1C, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_CustomEvent_KickedPlayerID' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_CustomEvent_TeamID_1) == 0x000C20, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_CustomEvent_TeamID_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_IsValid_ReturnValue_33) == 0x000C24, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_IsValid_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight_18) == 0x000C28, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight_18' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_bSuccess_42) == 0x000C30, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_bSuccess_42' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, Temp_bool_Variable_7) == 0x000C31, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_Select_Default_10) == 0x000C34, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_Select_Default_10' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_FMax_ReturnValue_1) == 0x000C38, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_CreateDelegate_OutputDelegate_7) == 0x000C3C, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_FFloor_ReturnValue_2) == 0x000C4C, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_FFloor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_K2_SetTimerDelegate_ReturnValue_6) == 0x000C50, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_K2_SetTimerDelegate_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x000C58, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_Select_Default_11) == 0x000C60, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_Select_Default_11' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Array_Add_ReturnValue) == 0x000C70, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Less_ByteByte_ReturnValue) == 0x000C74, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Less_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Array_Add_ReturnValue_1) == 0x000C78, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Array_Get_Item_12) == 0x000C80, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Array_Get_Item_12' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Array_Length_ReturnValue_12) == 0x000C88, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Array_Length_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Greater_IntInt_ReturnValue_3) == 0x000C8C, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_AsBP_Player_State_Teams_8) == 0x000C90, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_AsBP_Player_State_Teams_8' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_bSuccess_43) == 0x000C98, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_bSuccess_43' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Not_PreBool_ReturnValue_2) == 0x000C99, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Get_Team_Index_Index_1) == 0x000C9C, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Get_Team_Index_Index_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_SwitchInteger_CmpSuccess_1) == 0x000CA0, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_SwitchInteger_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_AsBP_Player_State_Gun_Fight_1) == 0x000CA8, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_AsBP_Player_State_Gun_Fight_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_bSuccess_44) == 0x000CB0, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_bSuccess_44' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Array_Contains_ReturnValue) == 0x000CB1, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Get_Team_Index_Index_2) == 0x000CB4, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Get_Team_Index_Index_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_SwitchInteger_CmpSuccess_2) == 0x000CB8, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_SwitchInteger_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Array_Length_ReturnValue_13) == 0x000CBC, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Array_Length_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_MakeLiteralByte_ReturnValue_2) == 0x000CC0, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_MakeLiteralByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Subtract_IntInt_ReturnValue_5) == 0x000CC4, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Subtract_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Max_ReturnValue_1) == 0x000CC8, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Max_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Greater_ByteByte_ReturnValue) == 0x000CCC, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Greater_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_BooleanAND_ReturnValue_2) == 0x000CCD, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, Temp_bool_Variable_8) == 0x000CCE, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Array_Get_Item_13) == 0x000CD0, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Array_Get_Item_13' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Array_Length_ReturnValue_14) == 0x000CD8, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Array_Length_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_AsBP_Player_State_Gun_Fight_2) == 0x000CE0, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_AsBP_Player_State_Gun_Fight_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_bSuccess_45) == 0x000CE8, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_bSuccess_45' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Subtract_IntInt_ReturnValue_6) == 0x000CEC, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Subtract_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Max_ReturnValue_2) == 0x000CF0, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Max_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Get_Team_Index_Index_3) == 0x000CF4, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Get_Team_Index_Index_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_SwitchInteger_CmpSuccess_3) == 0x000CF8, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_SwitchInteger_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_GetDataTableRowFromName_OutRow) == 0x000CFC, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000D00, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_CustomEvent_PlayerToKick) == 0x000D08, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_CustomEvent_PlayerToKick' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_CustomEvent_ShouldKick) == 0x000D10, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_CustomEvent_ShouldKick' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_CustomEvent_TeamID) == 0x000D14, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_CustomEvent_TeamID' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Array_Add_ReturnValue_2) == 0x000D18, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_IsValid_ReturnValue_34) == 0x000D1C, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_IsValid_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000D20, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Array_Get_Item_14) == 0x000D28, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Array_Get_Item_14' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_K2_SetTimerDelegate_ReturnValue_7) == 0x000D30, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_K2_SetTimerDelegate_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_IsValid_ReturnValue_35) == 0x000D38, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_IsValid_ReturnValue_35' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_AsBP_Player_State_Gun_Fight_3) == 0x000D40, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_AsBP_Player_State_Gun_Fight_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_bSuccess_46) == 0x000D48, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_bSuccess_46' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Array_Length_ReturnValue_15) == 0x000D4C, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Array_Length_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Get_Team_Index_Index_4) == 0x000D50, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Get_Team_Index_Index_4' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Subtract_IntInt_ReturnValue_7) == 0x000D54, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Subtract_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Max_ReturnValue_3) == 0x000D58, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Max_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, Temp_int_Loop_Counter_Variable_13) == 0x000D5C, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::Temp_int_Loop_Counter_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Less_IntInt_ReturnValue_10) == 0x000D60, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Less_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Add_IntInt_ReturnValue_12) == 0x000D64, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Add_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_MakeLiteralInt_ReturnValue) == 0x000D68, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000D6C, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_Less_IntInt_ReturnValue_11) == 0x000D6D, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_Less_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_GetUserControllerId_ReturnValue_14) == 0x000D70, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_GetUserControllerId_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_14) == 0x000D78, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight_19) == 0x000D80, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight_19' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, K2Node_DynamicCast_bSuccess_47) == 0x000D88, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::K2Node_DynamicCast_bSuccess_47' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight, CallFunc_IsValid_ReturnValue_36) == 0x000D89, "Member 'BP_GameState_GunFight_C_ExecuteUbergraph_BP_GameState_GunFight::CallFunc_IsValid_ReturnValue_36' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.HandleAFK_CheckResult
// 0x0010 (0x0010 - 0x0000)
struct BP_GameState_GunFight_C_HandleAFK_CheckResult final
{
public:
	class ABP_PlayerController_GunFight_C*        PlayerToKick;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldKick;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TeamID;                                            // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameState_GunFight_C_HandleAFK_CheckResult) == 0x000008, "Wrong alignment on BP_GameState_GunFight_C_HandleAFK_CheckResult");
static_assert(sizeof(BP_GameState_GunFight_C_HandleAFK_CheckResult) == 0x000010, "Wrong size on BP_GameState_GunFight_C_HandleAFK_CheckResult");
static_assert(offsetof(BP_GameState_GunFight_C_HandleAFK_CheckResult, PlayerToKick) == 0x000000, "Member 'BP_GameState_GunFight_C_HandleAFK_CheckResult::PlayerToKick' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_HandleAFK_CheckResult, ShouldKick) == 0x000008, "Member 'BP_GameState_GunFight_C_HandleAFK_CheckResult::ShouldKick' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_HandleAFK_CheckResult, TeamID) == 0x00000C, "Member 'BP_GameState_GunFight_C_HandleAFK_CheckResult::TeamID' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.ReplicateKickedPlayers
// 0x0008 (0x0008 - 0x0000)
struct BP_GameState_GunFight_C_ReplicateKickedPlayers final
{
public:
	int32                                         KickedPlayerID;                                    // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TeamID;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameState_GunFight_C_ReplicateKickedPlayers) == 0x000004, "Wrong alignment on BP_GameState_GunFight_C_ReplicateKickedPlayers");
static_assert(sizeof(BP_GameState_GunFight_C_ReplicateKickedPlayers) == 0x000008, "Wrong size on BP_GameState_GunFight_C_ReplicateKickedPlayers");
static_assert(offsetof(BP_GameState_GunFight_C_ReplicateKickedPlayers, KickedPlayerID) == 0x000000, "Member 'BP_GameState_GunFight_C_ReplicateKickedPlayers::KickedPlayerID' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ReplicateKickedPlayers, TeamID) == 0x000004, "Member 'BP_GameState_GunFight_C_ReplicateKickedPlayers::TeamID' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.Replicate_EnableVoteKick
// 0x0001 (0x0001 - 0x0000)
struct BP_GameState_GunFight_C_Replicate_EnableVoteKick final
{
public:
	bool                                          bCanVoteKick_0;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameState_GunFight_C_Replicate_EnableVoteKick) == 0x000001, "Wrong alignment on BP_GameState_GunFight_C_Replicate_EnableVoteKick");
static_assert(sizeof(BP_GameState_GunFight_C_Replicate_EnableVoteKick) == 0x000001, "Wrong size on BP_GameState_GunFight_C_Replicate_EnableVoteKick");
static_assert(offsetof(BP_GameState_GunFight_C_Replicate_EnableVoteKick, bCanVoteKick_0) == 0x000000, "Member 'BP_GameState_GunFight_C_Replicate_EnableVoteKick::bCanVoteKick_0' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.OnKickVotingStarted
// 0x0004 (0x0004 - 0x0000)
struct BP_GameState_GunFight_C_OnKickVotingStarted final
{
public:
	int32                                         TeamIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameState_GunFight_C_OnKickVotingStarted) == 0x000004, "Wrong alignment on BP_GameState_GunFight_C_OnKickVotingStarted");
static_assert(sizeof(BP_GameState_GunFight_C_OnKickVotingStarted) == 0x000004, "Wrong size on BP_GameState_GunFight_C_OnKickVotingStarted");
static_assert(offsetof(BP_GameState_GunFight_C_OnKickVotingStarted, TeamIndex) == 0x000000, "Member 'BP_GameState_GunFight_C_OnKickVotingStarted::TeamIndex' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.ResolveVoteKick
// 0x0018 (0x0018 - 0x0000)
struct BP_GameState_GunFight_C_ResolveVoteKick final
{
public:
	bool                                          bShouldDisplayAFKCheck;                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_GunFight_C*        PlayerToKick;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TeamID;                                            // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameState_GunFight_C_ResolveVoteKick) == 0x000008, "Wrong alignment on BP_GameState_GunFight_C_ResolveVoteKick");
static_assert(sizeof(BP_GameState_GunFight_C_ResolveVoteKick) == 0x000018, "Wrong size on BP_GameState_GunFight_C_ResolveVoteKick");
static_assert(offsetof(BP_GameState_GunFight_C_ResolveVoteKick, bShouldDisplayAFKCheck) == 0x000000, "Member 'BP_GameState_GunFight_C_ResolveVoteKick::bShouldDisplayAFKCheck' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ResolveVoteKick, PlayerToKick) == 0x000008, "Member 'BP_GameState_GunFight_C_ResolveVoteKick::PlayerToKick' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ResolveVoteKick, TeamID) == 0x000010, "Member 'BP_GameState_GunFight_C_ResolveVoteKick::TeamID' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.VoteKickPlayer
// 0x0008 (0x0008 - 0x0000)
struct BP_GameState_GunFight_C_VoteKickPlayer final
{
public:
	class ABP_PlayerController_GunFight_C*        PlayerToKick;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameState_GunFight_C_VoteKickPlayer) == 0x000008, "Wrong alignment on BP_GameState_GunFight_C_VoteKickPlayer");
static_assert(sizeof(BP_GameState_GunFight_C_VoteKickPlayer) == 0x000008, "Wrong size on BP_GameState_GunFight_C_VoteKickPlayer");
static_assert(offsetof(BP_GameState_GunFight_C_VoteKickPlayer, PlayerToKick) == 0x000000, "Member 'BP_GameState_GunFight_C_VoteKickPlayer::PlayerToKick' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.Replicate_VoteKickCooldown
// 0x000C (0x000C - 0x0000)
struct BP_GameState_GunFight_C_Replicate_VoteKickCooldown final
{
public:
	int32                                         CooldownStartTime;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ActiveVoteKick;                                    // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TeamIndex;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameState_GunFight_C_Replicate_VoteKickCooldown) == 0x000004, "Wrong alignment on BP_GameState_GunFight_C_Replicate_VoteKickCooldown");
static_assert(sizeof(BP_GameState_GunFight_C_Replicate_VoteKickCooldown) == 0x00000C, "Wrong size on BP_GameState_GunFight_C_Replicate_VoteKickCooldown");
static_assert(offsetof(BP_GameState_GunFight_C_Replicate_VoteKickCooldown, CooldownStartTime) == 0x000000, "Member 'BP_GameState_GunFight_C_Replicate_VoteKickCooldown::CooldownStartTime' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Replicate_VoteKickCooldown, ActiveVoteKick) == 0x000004, "Member 'BP_GameState_GunFight_C_Replicate_VoteKickCooldown::ActiveVoteKick' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Replicate_VoteKickCooldown, TeamIndex) == 0x000008, "Member 'BP_GameState_GunFight_C_Replicate_VoteKickCooldown::TeamIndex' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.ReplicateDisconnectedPlayerStatistics
// 0x0058 (0x0058 - 0x0000)
struct BP_GameState_GunFight_C_ReplicateDisconnectedPlayerStatistics final
{
public:
	struct FStruct_GunFightStatistics             ScoreboardRow;                                     // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          WasKicked;                                         // 0x0050(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Attacker;                                          // 0x0051(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameState_GunFight_C_ReplicateDisconnectedPlayerStatistics) == 0x000008, "Wrong alignment on BP_GameState_GunFight_C_ReplicateDisconnectedPlayerStatistics");
static_assert(sizeof(BP_GameState_GunFight_C_ReplicateDisconnectedPlayerStatistics) == 0x000058, "Wrong size on BP_GameState_GunFight_C_ReplicateDisconnectedPlayerStatistics");
static_assert(offsetof(BP_GameState_GunFight_C_ReplicateDisconnectedPlayerStatistics, ScoreboardRow) == 0x000000, "Member 'BP_GameState_GunFight_C_ReplicateDisconnectedPlayerStatistics::ScoreboardRow' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ReplicateDisconnectedPlayerStatistics, WasKicked) == 0x000050, "Member 'BP_GameState_GunFight_C_ReplicateDisconnectedPlayerStatistics::WasKicked' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ReplicateDisconnectedPlayerStatistics, Attacker) == 0x000051, "Member 'BP_GameState_GunFight_C_ReplicateDisconnectedPlayerStatistics::Attacker' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.ReplicateMatchBoosters
// 0x0008 (0x0008 - 0x0000)
struct BP_GameState_GunFight_C_ReplicateMatchBoosters final
{
public:
	int32                                         ScoreBoosterTeam1_Count_0;                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ScoreBoosterTeam2_Count_0;                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameState_GunFight_C_ReplicateMatchBoosters) == 0x000004, "Wrong alignment on BP_GameState_GunFight_C_ReplicateMatchBoosters");
static_assert(sizeof(BP_GameState_GunFight_C_ReplicateMatchBoosters) == 0x000008, "Wrong size on BP_GameState_GunFight_C_ReplicateMatchBoosters");
static_assert(offsetof(BP_GameState_GunFight_C_ReplicateMatchBoosters, ScoreBoosterTeam1_Count_0) == 0x000000, "Member 'BP_GameState_GunFight_C_ReplicateMatchBoosters::ScoreBoosterTeam1_Count_0' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ReplicateMatchBoosters, ScoreBoosterTeam2_Count_0) == 0x000004, "Member 'BP_GameState_GunFight_C_ReplicateMatchBoosters::ScoreBoosterTeam2_Count_0' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.ShowScoreEventFeed
// 0x0018 (0x0018 - 0x0000)
struct BP_GameState_GunFight_C_ShowScoreEventFeed final
{
public:
	class FString                                 ScoreEventStringKey;                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Awarded_Points;                                    // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameState_GunFight_C_ShowScoreEventFeed) == 0x000008, "Wrong alignment on BP_GameState_GunFight_C_ShowScoreEventFeed");
static_assert(sizeof(BP_GameState_GunFight_C_ShowScoreEventFeed) == 0x000018, "Wrong size on BP_GameState_GunFight_C_ShowScoreEventFeed");
static_assert(offsetof(BP_GameState_GunFight_C_ShowScoreEventFeed, ScoreEventStringKey) == 0x000000, "Member 'BP_GameState_GunFight_C_ShowScoreEventFeed::ScoreEventStringKey' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ShowScoreEventFeed, Awarded_Points) == 0x000010, "Member 'BP_GameState_GunFight_C_ShowScoreEventFeed::Awarded_Points' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.ReplicateLoadoutSlots
// 0x0018 (0x0018 - 0x0000)
struct BP_GameState_GunFight_C_ReplicateLoadoutSlots final
{
public:
	TArray<struct FS_GunFightLoadoutSlot>         Loadout_slots;                                     // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          IsAttacker;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameState_GunFight_C_ReplicateLoadoutSlots) == 0x000008, "Wrong alignment on BP_GameState_GunFight_C_ReplicateLoadoutSlots");
static_assert(sizeof(BP_GameState_GunFight_C_ReplicateLoadoutSlots) == 0x000018, "Wrong size on BP_GameState_GunFight_C_ReplicateLoadoutSlots");
static_assert(offsetof(BP_GameState_GunFight_C_ReplicateLoadoutSlots, Loadout_slots) == 0x000000, "Member 'BP_GameState_GunFight_C_ReplicateLoadoutSlots::Loadout_slots' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ReplicateLoadoutSlots, IsAttacker) == 0x000010, "Member 'BP_GameState_GunFight_C_ReplicateLoadoutSlots::IsAttacker' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.ReplicateLoadoutOptions
// 0x0010 (0x0010 - 0x0000)
struct BP_GameState_GunFight_C_ReplicateLoadoutOptions final
{
public:
	TArray<struct FS_Gunfight_LoadoutSlotInfo>    Loadouts;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_GameState_GunFight_C_ReplicateLoadoutOptions) == 0x000008, "Wrong alignment on BP_GameState_GunFight_C_ReplicateLoadoutOptions");
static_assert(sizeof(BP_GameState_GunFight_C_ReplicateLoadoutOptions) == 0x000010, "Wrong size on BP_GameState_GunFight_C_ReplicateLoadoutOptions");
static_assert(offsetof(BP_GameState_GunFight_C_ReplicateLoadoutOptions, Loadouts) == 0x000000, "Member 'BP_GameState_GunFight_C_ReplicateLoadoutOptions::Loadouts' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.Set Barricades Active State
// 0x0001 (0x0001 - 0x0000)
struct BP_GameState_GunFight_C_Set_Barricades_Active_State final
{
public:
	bool                                          IsActive;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameState_GunFight_C_Set_Barricades_Active_State) == 0x000001, "Wrong alignment on BP_GameState_GunFight_C_Set_Barricades_Active_State");
static_assert(sizeof(BP_GameState_GunFight_C_Set_Barricades_Active_State) == 0x000001, "Wrong size on BP_GameState_GunFight_C_Set_Barricades_Active_State");
static_assert(offsetof(BP_GameState_GunFight_C_Set_Barricades_Active_State, IsActive) == 0x000000, "Member 'BP_GameState_GunFight_C_Set_Barricades_Active_State::IsActive' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.Handle Match Phase
// 0x0001 (0x0001 - 0x0000)
struct BP_GameState_GunFight_C_Handle_Match_Phase final
{
public:
	E_TeamsMatchPhase                             Match_Phase_0;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameState_GunFight_C_Handle_Match_Phase) == 0x000001, "Wrong alignment on BP_GameState_GunFight_C_Handle_Match_Phase");
static_assert(sizeof(BP_GameState_GunFight_C_Handle_Match_Phase) == 0x000001, "Wrong size on BP_GameState_GunFight_C_Handle_Match_Phase");
static_assert(offsetof(BP_GameState_GunFight_C_Handle_Match_Phase, Match_Phase_0) == 0x000000, "Member 'BP_GameState_GunFight_C_Handle_Match_Phase::Match_Phase_0' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.Replicate Spawns
// 0x0028 (0x0028 - 0x0000)
struct BP_GameState_GunFight_C_Replicate_Spawns final
{
public:
	TArray<class ABP_PlayerStart_Raid_C*>         Attacker_Spawns;                                   // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class ABP_PlayerStart_Raid_C*>         Defender_Spawns;                                   // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         CurrentSettingID_0;                                // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameState_GunFight_C_Replicate_Spawns) == 0x000008, "Wrong alignment on BP_GameState_GunFight_C_Replicate_Spawns");
static_assert(sizeof(BP_GameState_GunFight_C_Replicate_Spawns) == 0x000028, "Wrong size on BP_GameState_GunFight_C_Replicate_Spawns");
static_assert(offsetof(BP_GameState_GunFight_C_Replicate_Spawns, Attacker_Spawns) == 0x000000, "Member 'BP_GameState_GunFight_C_Replicate_Spawns::Attacker_Spawns' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Replicate_Spawns, Defender_Spawns) == 0x000010, "Member 'BP_GameState_GunFight_C_Replicate_Spawns::Defender_Spawns' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Replicate_Spawns, CurrentSettingID_0) == 0x000020, "Member 'BP_GameState_GunFight_C_Replicate_Spawns::CurrentSettingID_0' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.Set Spawn Sides Switched
// 0x0001 (0x0001 - 0x0000)
struct BP_GameState_GunFight_C_Set_Spawn_Sides_Switched final
{
public:
	bool                                          Sides_Switched;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameState_GunFight_C_Set_Spawn_Sides_Switched) == 0x000001, "Wrong alignment on BP_GameState_GunFight_C_Set_Spawn_Sides_Switched");
static_assert(sizeof(BP_GameState_GunFight_C_Set_Spawn_Sides_Switched) == 0x000001, "Wrong size on BP_GameState_GunFight_C_Set_Spawn_Sides_Switched");
static_assert(offsetof(BP_GameState_GunFight_C_Set_Spawn_Sides_Switched, Sides_Switched) == 0x000000, "Member 'BP_GameState_GunFight_C_Set_Spawn_Sides_Switched::Sides_Switched' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.SetLoadoutStyle
// 0x0004 (0x0004 - 0x0000)
struct BP_GameState_GunFight_C_SetLoadoutStyle final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameState_GunFight_C_SetLoadoutStyle) == 0x000004, "Wrong alignment on BP_GameState_GunFight_C_SetLoadoutStyle");
static_assert(sizeof(BP_GameState_GunFight_C_SetLoadoutStyle) == 0x000004, "Wrong size on BP_GameState_GunFight_C_SetLoadoutStyle");
static_assert(offsetof(BP_GameState_GunFight_C_SetLoadoutStyle, Value) == 0x000000, "Member 'BP_GameState_GunFight_C_SetLoadoutStyle::Value' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.Objective Stage Started
// 0x0010 (0x0010 - 0x0000)
struct BP_GameState_GunFight_C_Objective_Stage_Started final
{
public:
	class ABP_Objective_GunFight_C*               Objective;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ObjectiveSpawnPoint_GunFight_C*     SpawnPoint;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameState_GunFight_C_Objective_Stage_Started) == 0x000008, "Wrong alignment on BP_GameState_GunFight_C_Objective_Stage_Started");
static_assert(sizeof(BP_GameState_GunFight_C_Objective_Stage_Started) == 0x000010, "Wrong size on BP_GameState_GunFight_C_Objective_Stage_Started");
static_assert(offsetof(BP_GameState_GunFight_C_Objective_Stage_Started, Objective) == 0x000000, "Member 'BP_GameState_GunFight_C_Objective_Stage_Started::Objective' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Objective_Stage_Started, SpawnPoint) == 0x000008, "Member 'BP_GameState_GunFight_C_Objective_Stage_Started::SpawnPoint' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.Update Survivor Count
// 0x0008 (0x0008 - 0x0000)
struct BP_GameState_GunFight_C_Update_Survivor_Count final
{
public:
	int32                                         Attacker_Survivors;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Defender_Survivors;                                // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameState_GunFight_C_Update_Survivor_Count) == 0x000004, "Wrong alignment on BP_GameState_GunFight_C_Update_Survivor_Count");
static_assert(sizeof(BP_GameState_GunFight_C_Update_Survivor_Count) == 0x000008, "Wrong size on BP_GameState_GunFight_C_Update_Survivor_Count");
static_assert(offsetof(BP_GameState_GunFight_C_Update_Survivor_Count, Attacker_Survivors) == 0x000000, "Member 'BP_GameState_GunFight_C_Update_Survivor_Count::Attacker_Survivors' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Update_Survivor_Count, Defender_Survivors) == 0x000004, "Member 'BP_GameState_GunFight_C_Update_Survivor_Count::Defender_Survivors' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.Show Kill Feed
// 0x00C8 (0x00C8 - 0x0000)
struct BP_GameState_GunFight_C_Show_Kill_Feed final
{
public:
	struct FStruct_TVTDeathmatch_KillFeed         KillFeed;                                          // 0x0000(0x00C8)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameState_GunFight_C_Show_Kill_Feed) == 0x000008, "Wrong alignment on BP_GameState_GunFight_C_Show_Kill_Feed");
static_assert(sizeof(BP_GameState_GunFight_C_Show_Kill_Feed) == 0x0000C8, "Wrong size on BP_GameState_GunFight_C_Show_Kill_Feed");
static_assert(offsetof(BP_GameState_GunFight_C_Show_Kill_Feed, KillFeed) == 0x000000, "Member 'BP_GameState_GunFight_C_Show_Kill_Feed::KillFeed' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.Replicate Current Round Weapons
// 0x0020 (0x0020 - 0x0000)
struct BP_GameState_GunFight_C_Replicate_Current_Round_Weapons final
{
public:
	TArray<struct FStruct_GunFightLoadout>        InCurrentRoundLoadouts_Attackers;                  // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FStruct_GunFightLoadout>        InCurrentRoundLoadouts_Defenders;                  // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_GameState_GunFight_C_Replicate_Current_Round_Weapons) == 0x000008, "Wrong alignment on BP_GameState_GunFight_C_Replicate_Current_Round_Weapons");
static_assert(sizeof(BP_GameState_GunFight_C_Replicate_Current_Round_Weapons) == 0x000020, "Wrong size on BP_GameState_GunFight_C_Replicate_Current_Round_Weapons");
static_assert(offsetof(BP_GameState_GunFight_C_Replicate_Current_Round_Weapons, InCurrentRoundLoadouts_Attackers) == 0x000000, "Member 'BP_GameState_GunFight_C_Replicate_Current_Round_Weapons::InCurrentRoundLoadouts_Attackers' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Replicate_Current_Round_Weapons, InCurrentRoundLoadouts_Defenders) == 0x000010, "Member 'BP_GameState_GunFight_C_Replicate_Current_Round_Weapons::InCurrentRoundLoadouts_Defenders' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.Set Round Win Reason
// 0x0010 (0x0010 - 0x0000)
struct BP_GameState_GunFight_C_Set_Round_Win_Reason final
{
public:
	EGunFightWinReason                            Win_Reason;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GSC_Team_Raid_C*                    Team_Who_Won;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameState_GunFight_C_Set_Round_Win_Reason) == 0x000008, "Wrong alignment on BP_GameState_GunFight_C_Set_Round_Win_Reason");
static_assert(sizeof(BP_GameState_GunFight_C_Set_Round_Win_Reason) == 0x000010, "Wrong size on BP_GameState_GunFight_C_Set_Round_Win_Reason");
static_assert(offsetof(BP_GameState_GunFight_C_Set_Round_Win_Reason, Win_Reason) == 0x000000, "Member 'BP_GameState_GunFight_C_Set_Round_Win_Reason::Win_Reason' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Set_Round_Win_Reason, Team_Who_Won) == 0x000008, "Member 'BP_GameState_GunFight_C_Set_Round_Win_Reason::Team_Who_Won' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.Players Update PreRound Time Remaining
// 0x0004 (0x0004 - 0x0000)
struct BP_GameState_GunFight_C_Players_Update_PreRound_Time_Remaining final
{
public:
	int32                                         Remaining_Time;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameState_GunFight_C_Players_Update_PreRound_Time_Remaining) == 0x000004, "Wrong alignment on BP_GameState_GunFight_C_Players_Update_PreRound_Time_Remaining");
static_assert(sizeof(BP_GameState_GunFight_C_Players_Update_PreRound_Time_Remaining) == 0x000004, "Wrong size on BP_GameState_GunFight_C_Players_Update_PreRound_Time_Remaining");
static_assert(offsetof(BP_GameState_GunFight_C_Players_Update_PreRound_Time_Remaining, Remaining_Time) == 0x000000, "Member 'BP_GameState_GunFight_C_Players_Update_PreRound_Time_Remaining::Remaining_Time' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.Set PreRound Remaining Time
// 0x0004 (0x0004 - 0x0000)
struct BP_GameState_GunFight_C_Set_PreRound_Remaining_Time final
{
public:
	int32                                         Remaining_Time;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameState_GunFight_C_Set_PreRound_Remaining_Time) == 0x000004, "Wrong alignment on BP_GameState_GunFight_C_Set_PreRound_Remaining_Time");
static_assert(sizeof(BP_GameState_GunFight_C_Set_PreRound_Remaining_Time) == 0x000004, "Wrong size on BP_GameState_GunFight_C_Set_PreRound_Remaining_Time");
static_assert(offsetof(BP_GameState_GunFight_C_Set_PreRound_Remaining_Time, Remaining_Time) == 0x000000, "Member 'BP_GameState_GunFight_C_Set_PreRound_Remaining_Time::Remaining_Time' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.Players Update Time Remaining
// 0x0004 (0x0004 - 0x0000)
struct BP_GameState_GunFight_C_Players_Update_Time_Remaining final
{
public:
	int32                                         Remaining_Time;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameState_GunFight_C_Players_Update_Time_Remaining) == 0x000004, "Wrong alignment on BP_GameState_GunFight_C_Players_Update_Time_Remaining");
static_assert(sizeof(BP_GameState_GunFight_C_Players_Update_Time_Remaining) == 0x000004, "Wrong size on BP_GameState_GunFight_C_Players_Update_Time_Remaining");
static_assert(offsetof(BP_GameState_GunFight_C_Players_Update_Time_Remaining, Remaining_Time) == 0x000000, "Member 'BP_GameState_GunFight_C_Players_Update_Time_Remaining::Remaining_Time' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.Set Match Remaining Time
// 0x0004 (0x0004 - 0x0000)
struct BP_GameState_GunFight_C_Set_Match_Remaining_Time final
{
public:
	int32                                         Remaining_Time;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameState_GunFight_C_Set_Match_Remaining_Time) == 0x000004, "Wrong alignment on BP_GameState_GunFight_C_Set_Match_Remaining_Time");
static_assert(sizeof(BP_GameState_GunFight_C_Set_Match_Remaining_Time) == 0x000004, "Wrong size on BP_GameState_GunFight_C_Set_Match_Remaining_Time");
static_assert(offsetof(BP_GameState_GunFight_C_Set_Match_Remaining_Time, Remaining_Time) == 0x000000, "Member 'BP_GameState_GunFight_C_Set_Match_Remaining_Time::Remaining_Time' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.Cheat_SetRoundsToWin
// 0x0004 (0x0004 - 0x0000)
struct BP_GameState_GunFight_C_Cheat_SetRoundsToWin final
{
public:
	int32                                         RoundsToWin;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameState_GunFight_C_Cheat_SetRoundsToWin) == 0x000004, "Wrong alignment on BP_GameState_GunFight_C_Cheat_SetRoundsToWin");
static_assert(sizeof(BP_GameState_GunFight_C_Cheat_SetRoundsToWin) == 0x000004, "Wrong size on BP_GameState_GunFight_C_Cheat_SetRoundsToWin");
static_assert(offsetof(BP_GameState_GunFight_C_Cheat_SetRoundsToWin, RoundsToWin) == 0x000000, "Member 'BP_GameState_GunFight_C_Cheat_SetRoundsToWin::RoundsToWin' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.Get Attacking Team
// 0x0048 (0x0048 - 0x0000)
struct BP_GameState_GunFight_C_Get_Attacking_Team final
{
public:
	class UBP_GSC_Team_Raid_C*                    Attacking_Team;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_GSC_Team_C*>                 CallFunc_Get_Teams_Teams;                          // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UBP_GSC_Team_C*                         CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GSC_Team_Raid_C*                    K2Node_DynamicCast_AsBP_GSC_Team_Raid;             // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Attacker_Is_Attacker;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameState_GunFight_C_Get_Attacking_Team) == 0x000008, "Wrong alignment on BP_GameState_GunFight_C_Get_Attacking_Team");
static_assert(sizeof(BP_GameState_GunFight_C_Get_Attacking_Team) == 0x000048, "Wrong size on BP_GameState_GunFight_C_Get_Attacking_Team");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Attacking_Team, Attacking_Team) == 0x000000, "Member 'BP_GameState_GunFight_C_Get_Attacking_Team::Attacking_Team' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Attacking_Team, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_GameState_GunFight_C_Get_Attacking_Team::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Attacking_Team, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'BP_GameState_GunFight_C_Get_Attacking_Team::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Attacking_Team, CallFunc_Get_Teams_Teams) == 0x000010, "Member 'BP_GameState_GunFight_C_Get_Attacking_Team::CallFunc_Get_Teams_Teams' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Attacking_Team, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_GameState_GunFight_C_Get_Attacking_Team::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Attacking_Team, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_GameState_GunFight_C_Get_Attacking_Team::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Attacking_Team, K2Node_DynamicCast_AsBP_GSC_Team_Raid) == 0x000030, "Member 'BP_GameState_GunFight_C_Get_Attacking_Team::K2Node_DynamicCast_AsBP_GSC_Team_Raid' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Attacking_Team, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_GameState_GunFight_C_Get_Attacking_Team::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Attacking_Team, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'BP_GameState_GunFight_C_Get_Attacking_Team::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Attacking_Team, CallFunc_Is_Attacker_Is_Attacker) == 0x000040, "Member 'BP_GameState_GunFight_C_Get_Attacking_Team::CallFunc_Is_Attacker_Is_Attacker' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Attacking_Team, CallFunc_Less_IntInt_ReturnValue) == 0x000041, "Member 'BP_GameState_GunFight_C_Get_Attacking_Team::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Attacking_Team, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'BP_GameState_GunFight_C_Get_Attacking_Team::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.Get Defending Team
// 0x0050 (0x0050 - 0x0000)
struct BP_GameState_GunFight_C_Get_Defending_Team final
{
public:
	class UBP_GSC_Team_Raid_C*                    Defending_Team;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_GSC_Team_C*>                 CallFunc_Get_Teams_Teams;                          // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UBP_GSC_Team_C*                         CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GSC_Team_Raid_C*                    K2Node_DynamicCast_AsBP_GSC_Team_Raid;             // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Attacker_Is_Attacker;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameState_GunFight_C_Get_Defending_Team) == 0x000008, "Wrong alignment on BP_GameState_GunFight_C_Get_Defending_Team");
static_assert(sizeof(BP_GameState_GunFight_C_Get_Defending_Team) == 0x000050, "Wrong size on BP_GameState_GunFight_C_Get_Defending_Team");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Defending_Team, Defending_Team) == 0x000000, "Member 'BP_GameState_GunFight_C_Get_Defending_Team::Defending_Team' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Defending_Team, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_GameState_GunFight_C_Get_Defending_Team::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Defending_Team, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'BP_GameState_GunFight_C_Get_Defending_Team::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Defending_Team, CallFunc_Get_Teams_Teams) == 0x000010, "Member 'BP_GameState_GunFight_C_Get_Defending_Team::CallFunc_Get_Teams_Teams' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Defending_Team, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_GameState_GunFight_C_Get_Defending_Team::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Defending_Team, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_GameState_GunFight_C_Get_Defending_Team::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Defending_Team, K2Node_DynamicCast_AsBP_GSC_Team_Raid) == 0x000030, "Member 'BP_GameState_GunFight_C_Get_Defending_Team::K2Node_DynamicCast_AsBP_GSC_Team_Raid' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Defending_Team, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_GameState_GunFight_C_Get_Defending_Team::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Defending_Team, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'BP_GameState_GunFight_C_Get_Defending_Team::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Defending_Team, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BP_GameState_GunFight_C_Get_Defending_Team::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Defending_Team, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'BP_GameState_GunFight_C_Get_Defending_Team::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Defending_Team, CallFunc_Is_Attacker_Is_Attacker) == 0x000048, "Member 'BP_GameState_GunFight_C_Get_Defending_Team::CallFunc_Is_Attacker_Is_Attacker' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Defending_Team, CallFunc_Not_PreBool_ReturnValue) == 0x000049, "Member 'BP_GameState_GunFight_C_Get_Defending_Team::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.GetWorldMinMax
// 0x0090 (0x0090 - 0x0000)
struct BP_GameState_GunFight_C_GetWorldMinMax final
{
public:
	struct FVector                                World_Min;                                         // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                World_Max;                                         // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MapCorner_C*                        CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MapCorner_C*                        CallFunc_Array_Get_Item_1;                         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue_1;                       // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_1;                       // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue_2;                       // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_2;                       // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameState_GunFight_C_GetWorldMinMax) == 0x000008, "Wrong alignment on BP_GameState_GunFight_C_GetWorldMinMax");
static_assert(sizeof(BP_GameState_GunFight_C_GetWorldMinMax) == 0x000090, "Wrong size on BP_GameState_GunFight_C_GetWorldMinMax");
static_assert(offsetof(BP_GameState_GunFight_C_GetWorldMinMax, World_Min) == 0x000000, "Member 'BP_GameState_GunFight_C_GetWorldMinMax::World_Min' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetWorldMinMax, World_Max) == 0x00000C, "Member 'BP_GameState_GunFight_C_GetWorldMinMax::World_Max' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetWorldMinMax, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_GameState_GunFight_C_GetWorldMinMax::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetWorldMinMax, CallFunc_Array_Get_Item_1) == 0x000020, "Member 'BP_GameState_GunFight_C_GetWorldMinMax::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetWorldMinMax, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_GameState_GunFight_C_GetWorldMinMax::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetWorldMinMax, CallFunc_IsValid_ReturnValue_1) == 0x000029, "Member 'BP_GameState_GunFight_C_GetWorldMinMax::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetWorldMinMax, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00002C, "Member 'BP_GameState_GunFight_C_GetWorldMinMax::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetWorldMinMax, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000038, "Member 'BP_GameState_GunFight_C_GetWorldMinMax::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetWorldMinMax, CallFunc_BreakVector_X) == 0x000044, "Member 'BP_GameState_GunFight_C_GetWorldMinMax::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetWorldMinMax, CallFunc_BreakVector_Y) == 0x000048, "Member 'BP_GameState_GunFight_C_GetWorldMinMax::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetWorldMinMax, CallFunc_BreakVector_Z) == 0x00004C, "Member 'BP_GameState_GunFight_C_GetWorldMinMax::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetWorldMinMax, CallFunc_BreakVector_X_1) == 0x000050, "Member 'BP_GameState_GunFight_C_GetWorldMinMax::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetWorldMinMax, CallFunc_BreakVector_Y_1) == 0x000054, "Member 'BP_GameState_GunFight_C_GetWorldMinMax::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetWorldMinMax, CallFunc_BreakVector_Z_1) == 0x000058, "Member 'BP_GameState_GunFight_C_GetWorldMinMax::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetWorldMinMax, CallFunc_FMin_ReturnValue) == 0x00005C, "Member 'BP_GameState_GunFight_C_GetWorldMinMax::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetWorldMinMax, CallFunc_FMax_ReturnValue) == 0x000060, "Member 'BP_GameState_GunFight_C_GetWorldMinMax::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetWorldMinMax, CallFunc_FMin_ReturnValue_1) == 0x000064, "Member 'BP_GameState_GunFight_C_GetWorldMinMax::CallFunc_FMin_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetWorldMinMax, CallFunc_FMax_ReturnValue_1) == 0x000068, "Member 'BP_GameState_GunFight_C_GetWorldMinMax::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetWorldMinMax, CallFunc_FMin_ReturnValue_2) == 0x00006C, "Member 'BP_GameState_GunFight_C_GetWorldMinMax::CallFunc_FMin_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetWorldMinMax, CallFunc_FMax_ReturnValue_2) == 0x000070, "Member 'BP_GameState_GunFight_C_GetWorldMinMax::CallFunc_FMax_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetWorldMinMax, CallFunc_MakeVector_ReturnValue) == 0x000074, "Member 'BP_GameState_GunFight_C_GetWorldMinMax::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetWorldMinMax, CallFunc_MakeVector_ReturnValue_1) == 0x000080, "Member 'BP_GameState_GunFight_C_GetWorldMinMax::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.Check Remaining Time Sound Cues
// 0x0007 (0x0007 - 0x0000)
struct BP_GameState_GunFight_C_Check_Remaining_Time_Sound_Cues final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameState_GunFight_C_Check_Remaining_Time_Sound_Cues) == 0x000001, "Wrong alignment on BP_GameState_GunFight_C_Check_Remaining_Time_Sound_Cues");
static_assert(sizeof(BP_GameState_GunFight_C_Check_Remaining_Time_Sound_Cues) == 0x000007, "Wrong size on BP_GameState_GunFight_C_Check_Remaining_Time_Sound_Cues");
static_assert(offsetof(BP_GameState_GunFight_C_Check_Remaining_Time_Sound_Cues, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'BP_GameState_GunFight_C_Check_Remaining_Time_Sound_Cues::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Check_Remaining_Time_Sound_Cues, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000001, "Member 'BP_GameState_GunFight_C_Check_Remaining_Time_Sound_Cues::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Check_Remaining_Time_Sound_Cues, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'BP_GameState_GunFight_C_Check_Remaining_Time_Sound_Cues::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Check_Remaining_Time_Sound_Cues, CallFunc_Not_PreBool_ReturnValue_1) == 0x000003, "Member 'BP_GameState_GunFight_C_Check_Remaining_Time_Sound_Cues::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Check_Remaining_Time_Sound_Cues, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000004, "Member 'BP_GameState_GunFight_C_Check_Remaining_Time_Sound_Cues::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Check_Remaining_Time_Sound_Cues, CallFunc_BooleanAND_ReturnValue_1) == 0x000005, "Member 'BP_GameState_GunFight_C_Check_Remaining_Time_Sound_Cues::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Check_Remaining_Time_Sound_Cues, CallFunc_BooleanAND_ReturnValue_2) == 0x000006, "Member 'BP_GameState_GunFight_C_Check_Remaining_Time_Sound_Cues::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.Get Statistics
// 0x00A8 (0x00A8 - 0x0000)
struct BP_GameState_GunFight_C_Get_Statistics final
{
public:
	TArray<struct FStruct_GunFightStatistics>     Statistics;                                        // 0x0000(0x0010)(Parm, OutParm)
	TArray<struct FStruct_GunFightStatistics>     Stats;                                             // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_GunFight_C*             K2Node_DynamicCast_AsBP_Player_State_Gun_Fight;    // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_GunFightStatistics             CallFunc_GetStatisticGunFight_Statistic;           // 0x0050(0x0050)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameState_GunFight_C_Get_Statistics) == 0x000008, "Wrong alignment on BP_GameState_GunFight_C_Get_Statistics");
static_assert(sizeof(BP_GameState_GunFight_C_Get_Statistics) == 0x0000A8, "Wrong size on BP_GameState_GunFight_C_Get_Statistics");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Statistics, Statistics) == 0x000000, "Member 'BP_GameState_GunFight_C_Get_Statistics::Statistics' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Statistics, Stats) == 0x000010, "Member 'BP_GameState_GunFight_C_Get_Statistics::Stats' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Statistics, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_GameState_GunFight_C_Get_Statistics::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Statistics, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_GameState_GunFight_C_Get_Statistics::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Statistics, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_GameState_GunFight_C_Get_Statistics::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Statistics, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_GameState_GunFight_C_Get_Statistics::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Statistics, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_GameState_GunFight_C_Get_Statistics::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Statistics, K2Node_DynamicCast_AsBP_Player_State_Gun_Fight) == 0x000040, "Member 'BP_GameState_GunFight_C_Get_Statistics::K2Node_DynamicCast_AsBP_Player_State_Gun_Fight' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Statistics, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_GameState_GunFight_C_Get_Statistics::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Statistics, CallFunc_Less_IntInt_ReturnValue) == 0x000049, "Member 'BP_GameState_GunFight_C_Get_Statistics::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Statistics, CallFunc_GetStatisticGunFight_Statistic) == 0x000050, "Member 'BP_GameState_GunFight_C_Get_Statistics::CallFunc_GetStatisticGunFight_Statistic' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Statistics, CallFunc_Array_Add_ReturnValue) == 0x0000A0, "Member 'BP_GameState_GunFight_C_Get_Statistics::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.Get Attacker Statistics
// 0x00B8 (0x00B8 - 0x0000)
struct BP_GameState_GunFight_C_Get_Attacker_Statistics final
{
public:
	TArray<struct FStruct_GunFightStatistics>     Statistics;                                        // 0x0000(0x0010)(Parm, OutParm)
	TArray<struct FStruct_GunFightStatistics>     Stats;                                             // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_GunFight_C*             K2Node_DynamicCast_AsBP_Player_State_Gun_Fight;    // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_GunFightStatistics             CallFunc_GetStatisticGunFight_Statistic;           // 0x0050(0x0050)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GSC_Team_Raid_C*                    K2Node_DynamicCast_AsBP_GSC_Team_Raid;             // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_Attacker_Is_Attacker;                  // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameState_GunFight_C_Get_Attacker_Statistics) == 0x000008, "Wrong alignment on BP_GameState_GunFight_C_Get_Attacker_Statistics");
static_assert(sizeof(BP_GameState_GunFight_C_Get_Attacker_Statistics) == 0x0000B8, "Wrong size on BP_GameState_GunFight_C_Get_Attacker_Statistics");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Attacker_Statistics, Statistics) == 0x000000, "Member 'BP_GameState_GunFight_C_Get_Attacker_Statistics::Statistics' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Attacker_Statistics, Stats) == 0x000010, "Member 'BP_GameState_GunFight_C_Get_Attacker_Statistics::Stats' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Attacker_Statistics, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_GameState_GunFight_C_Get_Attacker_Statistics::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Attacker_Statistics, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_GameState_GunFight_C_Get_Attacker_Statistics::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Attacker_Statistics, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_GameState_GunFight_C_Get_Attacker_Statistics::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Attacker_Statistics, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_GameState_GunFight_C_Get_Attacker_Statistics::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Attacker_Statistics, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_GameState_GunFight_C_Get_Attacker_Statistics::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Attacker_Statistics, K2Node_DynamicCast_AsBP_Player_State_Gun_Fight) == 0x000040, "Member 'BP_GameState_GunFight_C_Get_Attacker_Statistics::K2Node_DynamicCast_AsBP_Player_State_Gun_Fight' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Attacker_Statistics, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_GameState_GunFight_C_Get_Attacker_Statistics::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Attacker_Statistics, CallFunc_Less_IntInt_ReturnValue) == 0x000049, "Member 'BP_GameState_GunFight_C_Get_Attacker_Statistics::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Attacker_Statistics, CallFunc_GetStatisticGunFight_Statistic) == 0x000050, "Member 'BP_GameState_GunFight_C_Get_Attacker_Statistics::CallFunc_GetStatisticGunFight_Statistic' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Attacker_Statistics, CallFunc_Array_Add_ReturnValue) == 0x0000A0, "Member 'BP_GameState_GunFight_C_Get_Attacker_Statistics::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Attacker_Statistics, K2Node_DynamicCast_AsBP_GSC_Team_Raid) == 0x0000A8, "Member 'BP_GameState_GunFight_C_Get_Attacker_Statistics::K2Node_DynamicCast_AsBP_GSC_Team_Raid' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Attacker_Statistics, K2Node_DynamicCast_bSuccess_1) == 0x0000B0, "Member 'BP_GameState_GunFight_C_Get_Attacker_Statistics::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Attacker_Statistics, CallFunc_Is_Attacker_Is_Attacker) == 0x0000B1, "Member 'BP_GameState_GunFight_C_Get_Attacker_Statistics::CallFunc_Is_Attacker_Is_Attacker' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.Get Defender Statistics
// 0x00B8 (0x00B8 - 0x0000)
struct BP_GameState_GunFight_C_Get_Defender_Statistics final
{
public:
	TArray<struct FStruct_GunFightStatistics>     Statistics;                                        // 0x0000(0x0010)(Parm, OutParm)
	TArray<struct FStruct_GunFightStatistics>     Stats;                                             // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_GunFight_C*             K2Node_DynamicCast_AsBP_Player_State_Gun_Fight;    // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_GunFightStatistics             CallFunc_GetStatisticGunFight_Statistic;           // 0x0050(0x0050)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GSC_Team_Raid_C*                    K2Node_DynamicCast_AsBP_GSC_Team_Raid;             // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_Attacker_Is_Attacker;                  // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameState_GunFight_C_Get_Defender_Statistics) == 0x000008, "Wrong alignment on BP_GameState_GunFight_C_Get_Defender_Statistics");
static_assert(sizeof(BP_GameState_GunFight_C_Get_Defender_Statistics) == 0x0000B8, "Wrong size on BP_GameState_GunFight_C_Get_Defender_Statistics");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Defender_Statistics, Statistics) == 0x000000, "Member 'BP_GameState_GunFight_C_Get_Defender_Statistics::Statistics' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Defender_Statistics, Stats) == 0x000010, "Member 'BP_GameState_GunFight_C_Get_Defender_Statistics::Stats' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Defender_Statistics, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_GameState_GunFight_C_Get_Defender_Statistics::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Defender_Statistics, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_GameState_GunFight_C_Get_Defender_Statistics::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Defender_Statistics, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_GameState_GunFight_C_Get_Defender_Statistics::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Defender_Statistics, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_GameState_GunFight_C_Get_Defender_Statistics::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Defender_Statistics, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_GameState_GunFight_C_Get_Defender_Statistics::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Defender_Statistics, K2Node_DynamicCast_AsBP_Player_State_Gun_Fight) == 0x000040, "Member 'BP_GameState_GunFight_C_Get_Defender_Statistics::K2Node_DynamicCast_AsBP_Player_State_Gun_Fight' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Defender_Statistics, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_GameState_GunFight_C_Get_Defender_Statistics::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Defender_Statistics, CallFunc_Less_IntInt_ReturnValue) == 0x000049, "Member 'BP_GameState_GunFight_C_Get_Defender_Statistics::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Defender_Statistics, CallFunc_GetStatisticGunFight_Statistic) == 0x000050, "Member 'BP_GameState_GunFight_C_Get_Defender_Statistics::CallFunc_GetStatisticGunFight_Statistic' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Defender_Statistics, CallFunc_Array_Add_ReturnValue) == 0x0000A0, "Member 'BP_GameState_GunFight_C_Get_Defender_Statistics::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Defender_Statistics, K2Node_DynamicCast_AsBP_GSC_Team_Raid) == 0x0000A8, "Member 'BP_GameState_GunFight_C_Get_Defender_Statistics::K2Node_DynamicCast_AsBP_GSC_Team_Raid' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Defender_Statistics, K2Node_DynamicCast_bSuccess_1) == 0x0000B0, "Member 'BP_GameState_GunFight_C_Get_Defender_Statistics::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Defender_Statistics, CallFunc_Is_Attacker_Is_Attacker) == 0x0000B1, "Member 'BP_GameState_GunFight_C_Get_Defender_Statistics::CallFunc_Is_Attacker_Is_Attacker' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.Find Player Start Positions
// 0x0058 (0x0058 - 0x0000)
struct BP_GameState_GunFight_C_Find_Player_Start_Positions final
{
public:
	int32                                         SettingID;                                         // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_PlayerStart_Raid_C*>         CallFunc_GetAllActorsOfClass_OutActors;            // 0x0018(0x0010)(ReferenceParm)
	class ABP_GameMode_GunFight_C*                K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerStart_Raid_C*                 CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameState_GunFight_C_Find_Player_Start_Positions) == 0x000008, "Wrong alignment on BP_GameState_GunFight_C_Find_Player_Start_Positions");
static_assert(sizeof(BP_GameState_GunFight_C_Find_Player_Start_Positions) == 0x000058, "Wrong size on BP_GameState_GunFight_C_Find_Player_Start_Positions");
static_assert(offsetof(BP_GameState_GunFight_C_Find_Player_Start_Positions, SettingID) == 0x000000, "Member 'BP_GameState_GunFight_C_Find_Player_Start_Positions::SettingID' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Find_Player_Start_Positions, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_GameState_GunFight_C_Find_Player_Start_Positions::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Find_Player_Start_Positions, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_GameState_GunFight_C_Find_Player_Start_Positions::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Find_Player_Start_Positions, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_GameState_GunFight_C_Find_Player_Start_Positions::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Find_Player_Start_Positions, CallFunc_GetGameMode_ReturnValue) == 0x000010, "Member 'BP_GameState_GunFight_C_Find_Player_Start_Positions::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Find_Player_Start_Positions, CallFunc_GetAllActorsOfClass_OutActors) == 0x000018, "Member 'BP_GameState_GunFight_C_Find_Player_Start_Positions::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Find_Player_Start_Positions, K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight) == 0x000028, "Member 'BP_GameState_GunFight_C_Find_Player_Start_Positions::K2Node_DynamicCast_AsBP_Game_Mode_Gun_Fight' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Find_Player_Start_Positions, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_GameState_GunFight_C_Find_Player_Start_Positions::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Find_Player_Start_Positions, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_GameState_GunFight_C_Find_Player_Start_Positions::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Find_Player_Start_Positions, CallFunc_Array_Add_ReturnValue) == 0x000040, "Member 'BP_GameState_GunFight_C_Find_Player_Start_Positions::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Find_Player_Start_Positions, CallFunc_Array_Add_ReturnValue_1) == 0x000044, "Member 'BP_GameState_GunFight_C_Find_Player_Start_Positions::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Find_Player_Start_Positions, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000048, "Member 'BP_GameState_GunFight_C_Find_Player_Start_Positions::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Find_Player_Start_Positions, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'BP_GameState_GunFight_C_Find_Player_Start_Positions::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Find_Player_Start_Positions, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_GameState_GunFight_C_Find_Player_Start_Positions::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.Get Winning and Losing Teams
// 0x00F0 (0x00F0 - 0x0000)
struct BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams final
{
public:
	bool                                          Winner_Found;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GSC_Team_Raid_C*                    Winning_Team;                                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GSC_Team_Raid_C*                    Losing_Team;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TeamsAreEqual;                                     // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          AttackersEmpty;                                    // 0x0019(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          DefendersEmpty;                                    // 0x001A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          _TeamsAreEqual;                                    // 0x001B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Attacking_Team_Rounds_Won;                         // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GSC_Team_Raid_C*                    _Losing_Team;                                      // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GSC_Team_Raid_C*                    _Winning_Team;                                     // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          _Winner_Found;                                     // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GSC_Team_Raid_C*                    CallFunc_Get_Defending_Team_Defending_Team;        // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_ByteByte_ReturnValue;        // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_PlayerState_Teams_C*>        CallFunc_Get_Members_Member_States;                // 0x0058(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GSC_Team_Raid_C*                    CallFunc_Get_Attacking_Team_Attacking_Team;        // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_PlayerState_Teams_C*>        CallFunc_Get_Members_Member_States_1;              // 0x0080(0x0010)(ReferenceParm)
	class ABP_PlayerState_Teams_C*                CallFunc_Array_Get_Item;                           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GSC_Team_Raid_C*                    CallFunc_Get_Defending_Team_Defending_Team_1;      // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GSC_Team_Raid_C*                    CallFunc_Get_Attacking_Team_Attacking_Team_1;      // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerState_Teams_C*                CallFunc_Array_Get_Item_1;                         // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CB[0x5];                                       // 0x00CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GSC_Team_Raid_C*                    CallFunc_Get_Defending_Team_Defending_Team_2;      // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GSC_Team_Raid_C*                    CallFunc_Get_Attacking_Team_Attacking_Team_2;      // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams) == 0x000008, "Wrong alignment on BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams");
static_assert(sizeof(BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams) == 0x0000F0, "Wrong size on BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams, Winner_Found) == 0x000000, "Member 'BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams::Winner_Found' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams, Winning_Team) == 0x000008, "Member 'BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams::Winning_Team' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams, Losing_Team) == 0x000010, "Member 'BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams::Losing_Team' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams, TeamsAreEqual) == 0x000018, "Member 'BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams::TeamsAreEqual' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams, AttackersEmpty) == 0x000019, "Member 'BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams::AttackersEmpty' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams, DefendersEmpty) == 0x00001A, "Member 'BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams::DefendersEmpty' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams, _TeamsAreEqual) == 0x00001B, "Member 'BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams::_TeamsAreEqual' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams, Attacking_Team_Rounds_Won) == 0x00001C, "Member 'BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams::Attacking_Team_Rounds_Won' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams, _Losing_Team) == 0x000020, "Member 'BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams::_Losing_Team' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams, _Winning_Team) == 0x000028, "Member 'BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams::_Winning_Team' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams, _Winner_Found) == 0x000030, "Member 'BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams::_Winner_Found' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams, Temp_bool_True_if_break_was_hit_Variable) == 0x000031, "Member 'BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams, Temp_int_Array_Index_Variable) == 0x000034, "Member 'BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams, CallFunc_MakeLiteralByte_ReturnValue) == 0x000038, "Member 'BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams, CallFunc_Get_Defending_Team_Defending_Team) == 0x000048, "Member 'BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams::CallFunc_Get_Defending_Team_Defending_Team' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams, CallFunc_GreaterEqual_ByteByte_ReturnValue) == 0x000050, "Member 'BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams::CallFunc_GreaterEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams, CallFunc_Get_Members_Member_States) == 0x000058, "Member 'BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams::CallFunc_Get_Members_Member_States' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams, CallFunc_Get_Attacking_Team_Attacking_Team) == 0x000070, "Member 'BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams::CallFunc_Get_Attacking_Team_Attacking_Team' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams, CallFunc_Get_Members_Member_States_1) == 0x000080, "Member 'BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams::CallFunc_Get_Members_Member_States_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams, CallFunc_Array_Get_Item) == 0x000090, "Member 'BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams, CallFunc_Array_Length_ReturnValue_1) == 0x000098, "Member 'BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams, CallFunc_IsValid_ReturnValue) == 0x00009C, "Member 'BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams, CallFunc_Get_Defending_Team_Defending_Team_1) == 0x0000A0, "Member 'BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams::CallFunc_Get_Defending_Team_Defending_Team_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams, CallFunc_Get_Attacking_Team_Attacking_Team_1) == 0x0000A8, "Member 'BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams::CallFunc_Get_Attacking_Team_Attacking_Team_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams, Temp_int_Loop_Counter_Variable_1) == 0x0000B0, "Member 'BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000B4, "Member 'BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000B8, "Member 'BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams, Temp_int_Array_Index_Variable_1) == 0x0000BC, "Member 'BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams, CallFunc_Array_Get_Item_1) == 0x0000C0, "Member 'BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams, CallFunc_IsValid_ReturnValue_1) == 0x0000C8, "Member 'BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams, Temp_bool_True_if_break_was_hit_Variable_1) == 0x0000C9, "Member 'BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000CA, "Member 'BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams, CallFunc_Get_Defending_Team_Defending_Team_2) == 0x0000D0, "Member 'BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams::CallFunc_Get_Defending_Team_Defending_Team_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams, CallFunc_IsValid_ReturnValue_2) == 0x0000D8, "Member 'BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000D9, "Member 'BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000DA, "Member 'BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams, CallFunc_BooleanOR_ReturnValue) == 0x0000DB, "Member 'BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams, CallFunc_Get_Attacking_Team_Attacking_Team_2) == 0x0000E0, "Member 'BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams::CallFunc_Get_Attacking_Team_Attacking_Team_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams, CallFunc_IsValid_ReturnValue_3) == 0x0000E8, "Member 'BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x0000E9, "Member 'BP_GameState_GunFight_C_Get_Winning_and_Losing_Teams::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.DidAttackersWin
// 0x0028 (0x0028 - 0x0000)
struct BP_GameState_GunFight_C_DidAttackersWin final
{
public:
	bool                                          AttackersWon;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDefendersWon;                                     // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bAttackersWon;                                     // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GSC_Team_Raid_C*                    CallFunc_Get_Defending_Team_Defending_Team;        // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GSC_Team_Raid_C*                    CallFunc_Get_Attacking_Team_Attacking_Team;        // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameState_GunFight_C_DidAttackersWin) == 0x000008, "Wrong alignment on BP_GameState_GunFight_C_DidAttackersWin");
static_assert(sizeof(BP_GameState_GunFight_C_DidAttackersWin) == 0x000028, "Wrong size on BP_GameState_GunFight_C_DidAttackersWin");
static_assert(offsetof(BP_GameState_GunFight_C_DidAttackersWin, AttackersWon) == 0x000000, "Member 'BP_GameState_GunFight_C_DidAttackersWin::AttackersWon' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_DidAttackersWin, bDefendersWon) == 0x000001, "Member 'BP_GameState_GunFight_C_DidAttackersWin::bDefendersWon' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_DidAttackersWin, bAttackersWon) == 0x000002, "Member 'BP_GameState_GunFight_C_DidAttackersWin::bAttackersWon' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_DidAttackersWin, CallFunc_Get_Defending_Team_Defending_Team) == 0x000008, "Member 'BP_GameState_GunFight_C_DidAttackersWin::CallFunc_Get_Defending_Team_Defending_Team' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_DidAttackersWin, CallFunc_BooleanAND_ReturnValue) == 0x000010, "Member 'BP_GameState_GunFight_C_DidAttackersWin::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_DidAttackersWin, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_GameState_GunFight_C_DidAttackersWin::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_DidAttackersWin, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000012, "Member 'BP_GameState_GunFight_C_DidAttackersWin::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_DidAttackersWin, CallFunc_Get_Attacking_Team_Attacking_Team) == 0x000018, "Member 'BP_GameState_GunFight_C_DidAttackersWin::CallFunc_Get_Attacking_Team_Attacking_Team' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_DidAttackersWin, CallFunc_IsValid_ReturnValue_1) == 0x000020, "Member 'BP_GameState_GunFight_C_DidAttackersWin::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_DidAttackersWin, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000021, "Member 'BP_GameState_GunFight_C_DidAttackersWin::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.Show End Turn Notification To Player
// 0x0260 (0x0260 - 0x0000)
struct BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player final
{
public:
	EGunFightWinReason                            Win_Reason;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GSC_Team_Raid_C*                    Winning_Team;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_GunFight_C*        Player_Controller;                                 // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PlayerWon;                                         // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   DefenderName;                                      // 0x0020(0x0018)(Edit, BlueprintVisible)
	class FText                                   AttackerName;                                      // 0x0038(0x0018)(Edit, BlueprintVisible)
	ERaidNotificationType                         NotificationType;                                  // 0x0050(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Reason;                                            // 0x0058(0x0018)(Edit, BlueprintVisible)
	class FText                                   Title;                                             // 0x0070(0x0018)(Edit, BlueprintVisible)
	class FText                                   Temp_text_Variable;                                // 0x0088(0x0018)()
	bool                                          Temp_bool_Variable;                                // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ERaidNotificationType                         Temp_byte_Variable;                                // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERaidNotificationType                         Temp_byte_Variable_1;                              // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_1;                              // 0x00A8(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x00C0(0x0018)()
	bool                                          Temp_bool_Variable_2;                              // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_3;                              // 0x00E0(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x00F8(0x0018)()
	EGunFightWinReason                            Temp_byte_Variable_2;                              // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_5;                              // 0x0118(0x0018)()
	bool                                          Temp_bool_Variable_3;                              // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_6;                              // 0x0138(0x0018)()
	class FText                                   Temp_text_Variable_7;                              // 0x0150(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_Attacker_Is_Attacker;                  // 0x016A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16B[0x5];                                      // 0x016B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0170(0x0018)()
	ERaidNotificationType                         K2Node_Select_Default_1;                           // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_2;                           // 0x0190(0x0018)()
	class FText                                   K2Node_Select_Default_3;                           // 0x01A8(0x0018)()
	bool                                          CallFunc_Is_Attacker_Is_Attacker_1;                // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x01C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x01C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_8;                              // 0x01C8(0x0018)()
	class UBP_GSC_Team_Raid_C*                    CallFunc_Get_Defending_Team_Defending_Team;        // 0x01E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default_4;                           // 0x01E8(0x0018)()
	class FName                                   CallFunc_Get_Side_Side;                            // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default_5;                           // 0x0208(0x0018)()
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0220(0x0018)()
	class UBP_GSC_Team_Raid_C*                    CallFunc_Get_Attacking_Team_Attacking_Team;        // 0x0238(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Get_Side_Side_1;                          // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue_1;            // 0x0248(0x0018)()
};
static_assert(alignof(BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player) == 0x000008, "Wrong alignment on BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player");
static_assert(sizeof(BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player) == 0x000260, "Wrong size on BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player");
static_assert(offsetof(BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player, Win_Reason) == 0x000000, "Member 'BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player::Win_Reason' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player, Winning_Team) == 0x000008, "Member 'BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player::Winning_Team' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player, Player_Controller) == 0x000010, "Member 'BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player::Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player, PlayerWon) == 0x000018, "Member 'BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player::PlayerWon' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player, DefenderName) == 0x000020, "Member 'BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player::DefenderName' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player, AttackerName) == 0x000038, "Member 'BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player::AttackerName' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player, NotificationType) == 0x000050, "Member 'BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player::NotificationType' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player, Reason) == 0x000058, "Member 'BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player::Reason' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player, Title) == 0x000070, "Member 'BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player::Title' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player, Temp_text_Variable) == 0x000088, "Member 'BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player, Temp_bool_Variable) == 0x0000A0, "Member 'BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player, Temp_byte_Variable) == 0x0000A1, "Member 'BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player, Temp_byte_Variable_1) == 0x0000A2, "Member 'BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player, Temp_bool_Variable_1) == 0x0000A3, "Member 'BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player, Temp_text_Variable_1) == 0x0000A8, "Member 'BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player, Temp_text_Variable_2) == 0x0000C0, "Member 'BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player, Temp_bool_Variable_2) == 0x0000D8, "Member 'BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player, Temp_text_Variable_3) == 0x0000E0, "Member 'BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player, Temp_text_Variable_4) == 0x0000F8, "Member 'BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player, Temp_byte_Variable_2) == 0x000110, "Member 'BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player, Temp_text_Variable_5) == 0x000118, "Member 'BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player, Temp_bool_Variable_3) == 0x000130, "Member 'BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player, Temp_text_Variable_6) == 0x000138, "Member 'BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player, Temp_text_Variable_7) == 0x000150, "Member 'BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player::Temp_text_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player, CallFunc_IsValid_ReturnValue) == 0x000168, "Member 'BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player, CallFunc_IsValid_ReturnValue_1) == 0x000169, "Member 'BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player, CallFunc_Is_Attacker_Is_Attacker) == 0x00016A, "Member 'BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player::CallFunc_Is_Attacker_Is_Attacker' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player, K2Node_Select_Default) == 0x000170, "Member 'BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player, K2Node_Select_Default_1) == 0x000188, "Member 'BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player, K2Node_Select_Default_2) == 0x000190, "Member 'BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player, K2Node_Select_Default_3) == 0x0001A8, "Member 'BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player, CallFunc_Is_Attacker_Is_Attacker_1) == 0x0001C0, "Member 'BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player::CallFunc_Is_Attacker_Is_Attacker_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player, CallFunc_IsValid_ReturnValue_2) == 0x0001C1, "Member 'BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x0001C2, "Member 'BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player, Temp_bool_Variable_4) == 0x0001C3, "Member 'BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player, Temp_text_Variable_8) == 0x0001C8, "Member 'BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player::Temp_text_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player, CallFunc_Get_Defending_Team_Defending_Team) == 0x0001E0, "Member 'BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player::CallFunc_Get_Defending_Team_Defending_Team' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player, K2Node_Select_Default_4) == 0x0001E8, "Member 'BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player, CallFunc_Get_Side_Side) == 0x000200, "Member 'BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player::CallFunc_Get_Side_Side' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player, K2Node_Select_Default_5) == 0x000208, "Member 'BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player, CallFunc_Conv_NameToText_ReturnValue) == 0x000220, "Member 'BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player, CallFunc_Get_Attacking_Team_Attacking_Team) == 0x000238, "Member 'BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player::CallFunc_Get_Attacking_Team_Attacking_Team' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player, CallFunc_Get_Side_Side_1) == 0x000240, "Member 'BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player::CallFunc_Get_Side_Side_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player, CallFunc_Conv_NameToText_ReturnValue_1) == 0x000248, "Member 'BP_GameState_GunFight_C_Show_End_Turn_Notification_To_Player::CallFunc_Conv_NameToText_ReturnValue_1' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.Find Winner Screen
// 0x0028 (0x0028 - 0x0000)
struct BP_GameState_GunFight_C_Find_Winner_Screen final
{
public:
	TArray<class ABP_WinnerScreen_GunFight_C*>    CallFunc_GetAllActorsOfClass_OutActors;            // 0x0000(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_WinnerScreen_GunFight_C*            CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameState_GunFight_C_Find_Winner_Screen) == 0x000008, "Wrong alignment on BP_GameState_GunFight_C_Find_Winner_Screen");
static_assert(sizeof(BP_GameState_GunFight_C_Find_Winner_Screen) == 0x000028, "Wrong size on BP_GameState_GunFight_C_Find_Winner_Screen");
static_assert(offsetof(BP_GameState_GunFight_C_Find_Winner_Screen, CallFunc_GetAllActorsOfClass_OutActors) == 0x000000, "Member 'BP_GameState_GunFight_C_Find_Winner_Screen::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Find_Winner_Screen, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_GameState_GunFight_C_Find_Winner_Screen::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Find_Winner_Screen, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_GameState_GunFight_C_Find_Winner_Screen::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Find_Winner_Screen, CallFunc_Greater_IntInt_ReturnValue) == 0x000020, "Member 'BP_GameState_GunFight_C_Find_Winner_Screen::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Find_Winner_Screen, CallFunc_Not_PreBool_ReturnValue) == 0x000021, "Member 'BP_GameState_GunFight_C_Find_Winner_Screen::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.Display Winner Screen
// 0x0078 (0x0078 - 0x0000)
struct BP_GameState_GunFight_C_Display_Winner_Screen final
{
public:
	TArray<class AHumanPlayerController*>         WinningPlayers;                                    // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Winning_and_Losing_Teams_Winner_Found; // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GSC_Team_Raid_C*                    CallFunc_Get_Winning_and_Losing_Teams_Winning_Team; // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GSC_Team_Raid_C*                    CallFunc_Get_Winning_and_Losing_Teams_Losing_Team; // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Winning_and_Losing_Teams_TeamsAreEqual; // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_PlayerController_Teams_C*>   CallFunc_Get_Member_Controllers_Player_Controllers; // 0x0040(0x0010)(ReferenceParm)
	class ABP_PlayerController_Teams_C*           CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_PlayerController_Teams_C*>   CallFunc_Get_Member_Controllers_Player_Controllers_1; // 0x0068(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_GameState_GunFight_C_Display_Winner_Screen) == 0x000008, "Wrong alignment on BP_GameState_GunFight_C_Display_Winner_Screen");
static_assert(sizeof(BP_GameState_GunFight_C_Display_Winner_Screen) == 0x000078, "Wrong size on BP_GameState_GunFight_C_Display_Winner_Screen");
static_assert(offsetof(BP_GameState_GunFight_C_Display_Winner_Screen, WinningPlayers) == 0x000000, "Member 'BP_GameState_GunFight_C_Display_Winner_Screen::WinningPlayers' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Display_Winner_Screen, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_GameState_GunFight_C_Display_Winner_Screen::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Display_Winner_Screen, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_GameState_GunFight_C_Display_Winner_Screen::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Display_Winner_Screen, CallFunc_IsValid_ReturnValue_1) == 0x000018, "Member 'BP_GameState_GunFight_C_Display_Winner_Screen::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Display_Winner_Screen, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_GameState_GunFight_C_Display_Winner_Screen::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Display_Winner_Screen, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_GameState_GunFight_C_Display_Winner_Screen::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Display_Winner_Screen, CallFunc_Get_Winning_and_Losing_Teams_Winner_Found) == 0x000024, "Member 'BP_GameState_GunFight_C_Display_Winner_Screen::CallFunc_Get_Winning_and_Losing_Teams_Winner_Found' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Display_Winner_Screen, CallFunc_Get_Winning_and_Losing_Teams_Winning_Team) == 0x000028, "Member 'BP_GameState_GunFight_C_Display_Winner_Screen::CallFunc_Get_Winning_and_Losing_Teams_Winning_Team' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Display_Winner_Screen, CallFunc_Get_Winning_and_Losing_Teams_Losing_Team) == 0x000030, "Member 'BP_GameState_GunFight_C_Display_Winner_Screen::CallFunc_Get_Winning_and_Losing_Teams_Losing_Team' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Display_Winner_Screen, CallFunc_Get_Winning_and_Losing_Teams_TeamsAreEqual) == 0x000038, "Member 'BP_GameState_GunFight_C_Display_Winner_Screen::CallFunc_Get_Winning_and_Losing_Teams_TeamsAreEqual' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Display_Winner_Screen, CallFunc_IsValid_ReturnValue_2) == 0x000039, "Member 'BP_GameState_GunFight_C_Display_Winner_Screen::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Display_Winner_Screen, CallFunc_Get_Member_Controllers_Player_Controllers) == 0x000040, "Member 'BP_GameState_GunFight_C_Display_Winner_Screen::CallFunc_Get_Member_Controllers_Player_Controllers' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Display_Winner_Screen, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_GameState_GunFight_C_Display_Winner_Screen::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Display_Winner_Screen, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BP_GameState_GunFight_C_Display_Winner_Screen::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Display_Winner_Screen, CallFunc_Array_AddUnique_ReturnValue) == 0x00005C, "Member 'BP_GameState_GunFight_C_Display_Winner_Screen::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Display_Winner_Screen, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'BP_GameState_GunFight_C_Display_Winner_Screen::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Display_Winner_Screen, CallFunc_IsValid_ReturnValue_3) == 0x000061, "Member 'BP_GameState_GunFight_C_Display_Winner_Screen::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Display_Winner_Screen, CallFunc_Get_Member_Controllers_Player_Controllers_1) == 0x000068, "Member 'BP_GameState_GunFight_C_Display_Winner_Screen::CallFunc_Get_Member_Controllers_Player_Controllers_1' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.GetScoreboardTabs
// 0x06B8 (0x06B8 - 0x0000)
struct BP_GameState_GunFight_C_GetScoreboardTabs final
{
public:
	TArray<struct FStruct_ScoreboardTab>          Tabs;                                              // 0x0000(0x0010)(Parm, OutParm)
	bool                                          LocalIsAttacker;                                   // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FStruct_ScoreboardRow>          CurrentScoreTabDefenderRows;                       // 0x0018(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 AttackingIDs;                                      // 0x0028(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 WinningIDs;                                        // 0x0038(0x0010)(Edit, BlueprintVisible)
	int32                                         CurrentTabIndex;                                   // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FStruct_ScoreboardRow>          CurrentScoreTabAttackerRows;                       // 0x0050(0x0010)(Edit, BlueprintVisible)
	TArray<struct FStruct_ScoreboardTab>          ScoreboardTabs_0;                                  // 0x0060(0x0010)(Edit, BlueprintVisible)
	TArray<class FText>                           TabsToMake;                                        // 0x0070(0x0010)(Edit, BlueprintVisible)
	bool                                          Temp_bool_Variable;                                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_83[0x1];                                       // 0x0083(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0084(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0094(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FText>                           K2Node_MakeArray_Array;                            // 0x00A8(0x0010)(ReferenceParm)
	TSoftClassPtr<class UClass>                   Temp_softclass_Variable;                           // 0x00B8(0x0028)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetUserControllerId_ReturnValue;          // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue; // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_GunFight_C*        K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight; // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_Attacker_Is_Attacker;                  // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10B[0x1];                                      // 0x010B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x0120(0x0018)()
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_1;                              // 0x0150(0x0018)()
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_6;                   // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_GunFight_C*             K2Node_DynamicCast_AsBP_Player_State_Gun_Fight;    // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_GunFightStatistics             CallFunc_GetStatisticGunFight_Statistic;           // 0x0198(0x0050)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x01EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetUniqueNetIdFromPlayerId_bIsActive;     // 0x01ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1EE[0x2];                                      // 0x01EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUniqueNetIdRepl                       CallFunc_GetUniqueNetIdFromPlayerId_ReturnValue;   // 0x01F0(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_GetPlatformFromPlayerId_bIsActive;        // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFlamePlatform                                CallFunc_GetPlatformFromPlayerId_ReturnValue;      // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_StringNotEmpty_ReturnValue;               // 0x021A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21B[0x5];                                      // 0x021B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FStruct_ScoreboardRow>          CallFunc_Map_Keys_Keys;                            // 0x0220(0x0010)(ReferenceParm)
	struct FStruct_ScoreboardRow                  CallFunc_Array_Get_Item_1;                         // 0x0230(0x0070)(HasGetValueTypeHash)
	TArray<struct FStruct_ScoreboardRow>          CallFunc_Map_Keys_Keys_1;                          // 0x02A0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B4[0x4];                                      // 0x02B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_ScoreboardRow                  CallFunc_Array_Get_Item_2;                         // 0x02B8(0x0070)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x032C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32D[0x3];                                      // 0x032D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_334[0x4];                                      // 0x0334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_2;                              // 0x0338(0x0018)()
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_354[0x4];                                      // 0x0354(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_3;                              // 0x0358(0x0018)()
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_371[0x3];                                      // 0x0371(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x0374(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_379[0x3];                                      // 0x0379(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x037C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default;                             // 0x0380(0x0018)()
	class UBP_GSC_Team_Raid_C*                    CallFunc_Get_Defending_Team_Defending_Team;        // 0x0398(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GSC_Team_Raid_C*                    CallFunc_Get_Attacking_Team_Attacking_Team;        // 0x03A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A9[0x7];                                      // 0x03A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_1;                           // 0x03B0(0x0018)()
	struct FStruct_ScoreboardSubTab               K2Node_MakeStruct_Struct_ScoreboardSubTab;         // 0x03C8(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x03F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3FA[0x2];                                      // 0x03FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_6;                  // 0x03FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default_2;                           // 0x0401(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0402(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_403[0x1];                                      // 0x0403(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_3;                           // 0x0404(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x0414(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GSC_Team_Raid_C*                    CallFunc_Get_Attacking_Team_Attacking_Team_1;      // 0x0418(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_421[0x7];                                      // 0x0421(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_PlayerState_Teams_C*>        CallFunc_Get_Members_Member_States;                // 0x0428(0x0010)(ReferenceParm)
	class ABP_PlayerState_Teams_C*                CallFunc_Array_Get_Item_3;                         // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0440(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0444(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0445(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Get_Winning_and_Losing_Teams_Winner_Found; // 0x0446(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_447[0x1];                                      // 0x0447(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GSC_Team_Raid_C*                    CallFunc_Get_Winning_and_Losing_Teams_Winning_Team; // 0x0448(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GSC_Team_Raid_C*                    CallFunc_Get_Winning_and_Losing_Teams_Losing_Team; // 0x0450(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Winning_and_Losing_Teams_TeamsAreEqual; // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_459[0x3];                                      // 0x0459(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x045C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_PlayerState_Teams_C*>        CallFunc_Get_Members_Member_States_1;              // 0x0460(0x0010)(ReferenceParm)
	TArray<class ABP_PlayerState_Teams_C*>        CallFunc_Get_Members_Member_States_2;              // 0x0470(0x0010)(ReferenceParm)
	class ABP_PlayerState_Teams_C*                CallFunc_Array_Get_Item_4;                         // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerState_Teams_C*                CallFunc_Array_Get_Item_5;                         // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerState_GunFight_C*             K2Node_DynamicCast_AsBP_Player_State_Gun_Fight_1;  // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_499[0x7];                                      // 0x0499(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_GunFight_C*             K2Node_DynamicCast_AsBP_Player_State_Gun_Fight_2;  // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x04A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A9[0x3];                                      // 0x04A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x04AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x04B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x04B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x04B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x04BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x04BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x04BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4BF[0x1];                                      // 0x04BF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   Temp_softclass_Variable_1;                         // 0x04C0(0x0028)(HasGetValueTypeHash)
	struct FStruct_ScoreboardSubTab               K2Node_MakeStruct_Struct_ScoreboardSubTab_1;       // 0x04E8(0x0030)(HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   K2Node_Select_Default_4;                           // 0x0518(0x0028)(HasGetValueTypeHash)
	struct FStruct_ScoreboardSubTab               K2Node_Select_Default_5;                           // 0x0540(0x0030)(HasGetValueTypeHash)
	struct FStruct_ScoreboardSubTab               K2Node_Select_Default_6;                           // 0x0570(0x0030)(HasGetValueTypeHash)
	TArray<struct FStruct_ScoreboardSubTab>       K2Node_MakeArray_Array_1;                          // 0x05A0(0x0010)(ReferenceParm)
	int32                                         K2Node_Select_Default_7;                           // 0x05B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B4[0x4];                                      // 0x05B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_ScoreboardRow                  K2Node_MakeStruct_Struct_ScoreboardRow;            // 0x05B8(0x0070)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x0628(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_6;                  // 0x062C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x0630(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_634[0x4];                                      // 0x0634(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Array_Get_Item_6;                         // 0x0638(0x0018)()
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x0650(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_651[0x7];                                      // 0x0651(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_ScoreboardTab                  K2Node_MakeStruct_Struct_ScoreboardTab;            // 0x0658(0x0058)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_7;                  // 0x06B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameState_GunFight_C_GetScoreboardTabs) == 0x000008, "Wrong alignment on BP_GameState_GunFight_C_GetScoreboardTabs");
static_assert(sizeof(BP_GameState_GunFight_C_GetScoreboardTabs) == 0x0006B8, "Wrong size on BP_GameState_GunFight_C_GetScoreboardTabs");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, Tabs) == 0x000000, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::Tabs' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, LocalIsAttacker) == 0x000010, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::LocalIsAttacker' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CurrentScoreTabDefenderRows) == 0x000018, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CurrentScoreTabDefenderRows' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, AttackingIDs) == 0x000028, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::AttackingIDs' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, WinningIDs) == 0x000038, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::WinningIDs' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CurrentTabIndex) == 0x000048, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CurrentTabIndex' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CurrentScoreTabAttackerRows) == 0x000050, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CurrentScoreTabAttackerRows' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, ScoreboardTabs_0) == 0x000060, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::ScoreboardTabs_0' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, TabsToMake) == 0x000070, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::TabsToMake' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, Temp_bool_Variable) == 0x000080, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, Temp_bool_Variable_1) == 0x000081, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, Temp_bool_Variable_2) == 0x000082, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, Temp_struct_Variable) == 0x000084, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, Temp_struct_Variable_1) == 0x000094, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, Temp_int_Variable) == 0x0000A4, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, K2Node_MakeArray_Array) == 0x0000A8, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, Temp_softclass_Variable) == 0x0000B8, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::Temp_softclass_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, Temp_bool_Variable_3) == 0x0000E0, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, Temp_int_Loop_Counter_Variable) == 0x0000E4, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_Add_IntInt_ReturnValue) == 0x0000E8, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, Temp_int_Array_Index_Variable) == 0x0000EC, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_GetUserControllerId_ReturnValue) == 0x0000F0, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_GetUserControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue) == 0x0000F8, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight) == 0x000100, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, K2Node_DynamicCast_bSuccess) == 0x000108, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, Temp_bool_Variable_4) == 0x000109, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_Is_Attacker_Is_Attacker) == 0x00010A, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_Is_Attacker_Is_Attacker' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, Temp_int_Array_Index_Variable_1) == 0x00010C, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, Temp_int_Array_Index_Variable_2) == 0x000110, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, Temp_int_Loop_Counter_Variable_1) == 0x000114, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_Add_IntInt_ReturnValue_1) == 0x000118, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, Temp_int_Array_Index_Variable_3) == 0x00011C, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, Temp_text_Variable) == 0x000120, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, Temp_int_Loop_Counter_Variable_2) == 0x000138, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, Temp_int_Loop_Counter_Variable_3) == 0x00013C, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_Add_IntInt_ReturnValue_2) == 0x000140, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_Add_IntInt_ReturnValue_3) == 0x000144, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, Temp_int_Array_Index_Variable_4) == 0x000148, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, Temp_text_Variable_1) == 0x000150, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, Temp_int_Array_Index_Variable_5) == 0x000168, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, Temp_int_Loop_Counter_Variable_4) == 0x00016C, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_Add_IntInt_ReturnValue_4) == 0x000170, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, Temp_int_Array_Index_Variable_6) == 0x000174, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::Temp_int_Array_Index_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_Array_Get_Item) == 0x000178, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000180, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, K2Node_DynamicCast_AsBP_Player_State_Gun_Fight) == 0x000188, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::K2Node_DynamicCast_AsBP_Player_State_Gun_Fight' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, K2Node_DynamicCast_bSuccess_1) == 0x000190, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_GetStatisticGunFight_Statistic) == 0x000198, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_GetStatisticGunFight_Statistic' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_Array_Length_ReturnValue) == 0x0001E8, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, Temp_bool_Variable_5) == 0x0001EC, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_GetUniqueNetIdFromPlayerId_bIsActive) == 0x0001ED, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_GetUniqueNetIdFromPlayerId_bIsActive' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_GetUniqueNetIdFromPlayerId_ReturnValue) == 0x0001F0, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_GetUniqueNetIdFromPlayerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_GetPlatformFromPlayerId_bIsActive) == 0x000218, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_GetPlatformFromPlayerId_bIsActive' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_GetPlatformFromPlayerId_ReturnValue) == 0x000219, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_GetPlatformFromPlayerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_StringNotEmpty_ReturnValue) == 0x00021A, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_StringNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_Map_Keys_Keys) == 0x000220, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_Array_Get_Item_1) == 0x000230, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_Map_Keys_Keys_1) == 0x0002A0, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_Map_Keys_Keys_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_Array_Length_ReturnValue_1) == 0x0002B0, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_Array_Get_Item_2) == 0x0002B8, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_Array_Length_ReturnValue_2) == 0x000328, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_Less_IntInt_ReturnValue) == 0x00032C, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_Array_Add_ReturnValue) == 0x000330, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, Temp_text_Variable_2) == 0x000338, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_Array_Add_ReturnValue_1) == 0x000350, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, Temp_text_Variable_3) == 0x000358, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000370, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, Temp_int_Loop_Counter_Variable_5) == 0x000374, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_Less_IntInt_ReturnValue_1) == 0x000378, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_Add_IntInt_ReturnValue_5) == 0x00037C, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, K2Node_Select_Default) == 0x000380, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_Get_Defending_Team_Defending_Team) == 0x000398, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_Get_Defending_Team_Defending_Team' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_Get_Attacking_Team_Attacking_Team) == 0x0003A0, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_Get_Attacking_Team_Attacking_Team' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, Temp_bool_Variable_6) == 0x0003A8, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, K2Node_Select_Default_1) == 0x0003B0, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, K2Node_MakeStruct_Struct_ScoreboardSubTab) == 0x0003C8, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::K2Node_MakeStruct_Struct_ScoreboardSubTab' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_Array_Contains_ReturnValue) == 0x0003F8, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_Array_Contains_ReturnValue_1) == 0x0003F9, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, Temp_int_Loop_Counter_Variable_6) == 0x0003FC, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::Temp_int_Loop_Counter_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_Not_PreBool_ReturnValue) == 0x000400, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, K2Node_Select_Default_2) == 0x000401, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_Less_IntInt_ReturnValue_2) == 0x000402, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, K2Node_Select_Default_3) == 0x000404, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_Add_IntInt_ReturnValue_6) == 0x000414, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_Get_Attacking_Team_Attacking_Team_1) == 0x000418, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_Get_Attacking_Team_Attacking_Team_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_IsValid_ReturnValue) == 0x000420, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_Get_Members_Member_States) == 0x000428, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_Get_Members_Member_States' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_Array_Get_Item_3) == 0x000438, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_Array_Length_ReturnValue_3) == 0x000440, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_IsValid_ReturnValue_1) == 0x000444, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_Less_IntInt_ReturnValue_3) == 0x000445, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_Get_Winning_and_Losing_Teams_Winner_Found) == 0x000446, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_Get_Winning_and_Losing_Teams_Winner_Found' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_Get_Winning_and_Losing_Teams_Winning_Team) == 0x000448, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_Get_Winning_and_Losing_Teams_Winning_Team' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_Get_Winning_and_Losing_Teams_Losing_Team) == 0x000450, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_Get_Winning_and_Losing_Teams_Losing_Team' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_Get_Winning_and_Losing_Teams_TeamsAreEqual) == 0x000458, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_Get_Winning_and_Losing_Teams_TeamsAreEqual' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_Array_Add_ReturnValue_2) == 0x00045C, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_Get_Members_Member_States_1) == 0x000460, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_Get_Members_Member_States_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_Get_Members_Member_States_2) == 0x000470, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_Get_Members_Member_States_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_Array_Get_Item_4) == 0x000480, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_Array_Get_Item_5) == 0x000488, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, K2Node_DynamicCast_AsBP_Player_State_Gun_Fight_1) == 0x000490, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::K2Node_DynamicCast_AsBP_Player_State_Gun_Fight_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, K2Node_DynamicCast_bSuccess_2) == 0x000498, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, K2Node_DynamicCast_AsBP_Player_State_Gun_Fight_2) == 0x0004A0, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::K2Node_DynamicCast_AsBP_Player_State_Gun_Fight_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, K2Node_DynamicCast_bSuccess_3) == 0x0004A8, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_Array_Add_ReturnValue_3) == 0x0004AC, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_Array_Add_ReturnValue_4) == 0x0004B0, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_Array_Length_ReturnValue_4) == 0x0004B4, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_Array_Length_ReturnValue_5) == 0x0004B8, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_Less_IntInt_ReturnValue_4) == 0x0004BC, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_Less_IntInt_ReturnValue_5) == 0x0004BD, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0004BE, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, Temp_softclass_Variable_1) == 0x0004C0, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::Temp_softclass_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, K2Node_MakeStruct_Struct_ScoreboardSubTab_1) == 0x0004E8, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::K2Node_MakeStruct_Struct_ScoreboardSubTab_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, K2Node_Select_Default_4) == 0x000518, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, K2Node_Select_Default_5) == 0x000540, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, K2Node_Select_Default_6) == 0x000570, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, K2Node_MakeArray_Array_1) == 0x0005A0, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, K2Node_Select_Default_7) == 0x0005B0, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, K2Node_MakeStruct_Struct_ScoreboardRow) == 0x0005B8, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::K2Node_MakeStruct_Struct_ScoreboardRow' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_Array_Add_ReturnValue_5) == 0x000628, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_Array_Add_ReturnValue_6) == 0x00062C, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_Array_Add_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_Array_Length_ReturnValue_6) == 0x000630, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_Array_Get_Item_6) == 0x000638, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_Less_IntInt_ReturnValue_6) == 0x000650, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, K2Node_MakeStruct_Struct_ScoreboardTab) == 0x000658, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::K2Node_MakeStruct_Struct_ScoreboardTab' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetScoreboardTabs, CallFunc_Array_Add_ReturnValue_7) == 0x0006B0, "Member 'BP_GameState_GunFight_C_GetScoreboardTabs::CallFunc_Array_Add_ReturnValue_7' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.IsLocalPlayerWinning
// 0x0050 (0x0050 - 0x0000)
struct BP_GameState_GunFight_C_IsLocalPlayerWinning final
{
public:
	bool                                          IsWinning;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetUserControllerId_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Winning_and_Losing_Teams_Winner_Found; // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GSC_Team_Raid_C*                    CallFunc_Get_Winning_and_Losing_Teams_Winning_Team; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GSC_Team_Raid_C*                    CallFunc_Get_Winning_and_Losing_Teams_Losing_Team; // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Winning_and_Losing_Teams_TeamsAreEqual; // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_GunFight_C*        K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_GunFight_C*             K2Node_DynamicCast_AsBP_Player_State_Gun_Fight;    // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameState_GunFight_C_IsLocalPlayerWinning) == 0x000008, "Wrong alignment on BP_GameState_GunFight_C_IsLocalPlayerWinning");
static_assert(sizeof(BP_GameState_GunFight_C_IsLocalPlayerWinning) == 0x000050, "Wrong size on BP_GameState_GunFight_C_IsLocalPlayerWinning");
static_assert(offsetof(BP_GameState_GunFight_C_IsLocalPlayerWinning, IsWinning) == 0x000000, "Member 'BP_GameState_GunFight_C_IsLocalPlayerWinning::IsWinning' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_IsLocalPlayerWinning, CallFunc_GetUserControllerId_ReturnValue) == 0x000004, "Member 'BP_GameState_GunFight_C_IsLocalPlayerWinning::CallFunc_GetUserControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_IsLocalPlayerWinning, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue) == 0x000008, "Member 'BP_GameState_GunFight_C_IsLocalPlayerWinning::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_IsLocalPlayerWinning, CallFunc_Get_Winning_and_Losing_Teams_Winner_Found) == 0x000010, "Member 'BP_GameState_GunFight_C_IsLocalPlayerWinning::CallFunc_Get_Winning_and_Losing_Teams_Winner_Found' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_IsLocalPlayerWinning, CallFunc_Get_Winning_and_Losing_Teams_Winning_Team) == 0x000018, "Member 'BP_GameState_GunFight_C_IsLocalPlayerWinning::CallFunc_Get_Winning_and_Losing_Teams_Winning_Team' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_IsLocalPlayerWinning, CallFunc_Get_Winning_and_Losing_Teams_Losing_Team) == 0x000020, "Member 'BP_GameState_GunFight_C_IsLocalPlayerWinning::CallFunc_Get_Winning_and_Losing_Teams_Losing_Team' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_IsLocalPlayerWinning, CallFunc_Get_Winning_and_Losing_Teams_TeamsAreEqual) == 0x000028, "Member 'BP_GameState_GunFight_C_IsLocalPlayerWinning::CallFunc_Get_Winning_and_Losing_Teams_TeamsAreEqual' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_IsLocalPlayerWinning, K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight) == 0x000030, "Member 'BP_GameState_GunFight_C_IsLocalPlayerWinning::K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_IsLocalPlayerWinning, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_GameState_GunFight_C_IsLocalPlayerWinning::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_IsLocalPlayerWinning, K2Node_DynamicCast_AsBP_Player_State_Gun_Fight) == 0x000040, "Member 'BP_GameState_GunFight_C_IsLocalPlayerWinning::K2Node_DynamicCast_AsBP_Player_State_Gun_Fight' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_IsLocalPlayerWinning, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BP_GameState_GunFight_C_IsLocalPlayerWinning::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_IsLocalPlayerWinning, CallFunc_IsValid_ReturnValue) == 0x000049, "Member 'BP_GameState_GunFight_C_IsLocalPlayerWinning::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_IsLocalPlayerWinning, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00004A, "Member 'BP_GameState_GunFight_C_IsLocalPlayerWinning::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_IsLocalPlayerWinning, CallFunc_BooleanOR_ReturnValue) == 0x00004B, "Member 'BP_GameState_GunFight_C_IsLocalPlayerWinning::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.Get Current Round Loadout
// 0x0090 (0x0090 - 0x0000)
struct BP_GameState_GunFight_C_Get_Current_Round_Loadout final
{
public:
	bool                                          Is_Attacker;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EGunFightRole                                 Role_0;                                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Found_Any;                                         // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_GunFightLoadout                Loadout;                                           // 0x0008(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	struct FStruct_GunFightLoadout                CallFunc_Map_Find_Value;                           // 0x0030(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_GunFightLoadout                CallFunc_Map_Find_Value_1;                         // 0x0060(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameState_GunFight_C_Get_Current_Round_Loadout) == 0x000008, "Wrong alignment on BP_GameState_GunFight_C_Get_Current_Round_Loadout");
static_assert(sizeof(BP_GameState_GunFight_C_Get_Current_Round_Loadout) == 0x000090, "Wrong size on BP_GameState_GunFight_C_Get_Current_Round_Loadout");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Current_Round_Loadout, Is_Attacker) == 0x000000, "Member 'BP_GameState_GunFight_C_Get_Current_Round_Loadout::Is_Attacker' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Current_Round_Loadout, Role_0) == 0x000001, "Member 'BP_GameState_GunFight_C_Get_Current_Round_Loadout::Role_0' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Current_Round_Loadout, Found_Any) == 0x000002, "Member 'BP_GameState_GunFight_C_Get_Current_Round_Loadout::Found_Any' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Current_Round_Loadout, Loadout) == 0x000008, "Member 'BP_GameState_GunFight_C_Get_Current_Round_Loadout::Loadout' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Current_Round_Loadout, CallFunc_Map_Find_Value) == 0x000030, "Member 'BP_GameState_GunFight_C_Get_Current_Round_Loadout::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Current_Round_Loadout, CallFunc_Map_Find_ReturnValue) == 0x000058, "Member 'BP_GameState_GunFight_C_Get_Current_Round_Loadout::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Current_Round_Loadout, CallFunc_Map_Find_Value_1) == 0x000060, "Member 'BP_GameState_GunFight_C_Get_Current_Round_Loadout::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Current_Round_Loadout, CallFunc_Map_Find_ReturnValue_1) == 0x000088, "Member 'BP_GameState_GunFight_C_Get_Current_Round_Loadout::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.Modify Kill Feed Color By Team
// 0x0300 (0x0300 - 0x0000)
struct BP_GameState_GunFight_C_Modify_Kill_Feed_Color_By_Team final
{
public:
	struct FStruct_TVTDeathmatch_KillFeed         Kill_Feed_In;                                      // 0x0000(0x00C8)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FStruct_TVTDeathmatch_KillFeed         Kill_Feed_Out;                                     // 0x00C8(0x00C8)(Parm, OutParm, HasGetValueTypeHash)
	TSet<int32>                                   Local_Team_Player_IDs;                             // 0x0190(0x0050)(Edit, BlueprintVisible)
	struct FStruct_TVTDeathmatch_KillFeed         _Kill_Feed_Out;                                    // 0x01E0(0x00C8)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetUserControllerId_ReturnValue;          // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue; // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_GunFight_C*        K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight; // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2CA[0x6];                                      // 0x02CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_Teams_C*                K2Node_DynamicCast_AsBP_Player_State_Teams;        // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D9[0x7];                                      // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_PlayerState_C*>              CallFunc_FindTeammates_TeammatesPlayerStates;      // 0x02E0(0x0010)(ReferenceParm)
	class ABP_PlayerState_C*                      CallFunc_Array_Get_Item;                           // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x02FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x02FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Set_Contains_ReturnValue_1;               // 0x02FF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameState_GunFight_C_Modify_Kill_Feed_Color_By_Team) == 0x000008, "Wrong alignment on BP_GameState_GunFight_C_Modify_Kill_Feed_Color_By_Team");
static_assert(sizeof(BP_GameState_GunFight_C_Modify_Kill_Feed_Color_By_Team) == 0x000300, "Wrong size on BP_GameState_GunFight_C_Modify_Kill_Feed_Color_By_Team");
static_assert(offsetof(BP_GameState_GunFight_C_Modify_Kill_Feed_Color_By_Team, Kill_Feed_In) == 0x000000, "Member 'BP_GameState_GunFight_C_Modify_Kill_Feed_Color_By_Team::Kill_Feed_In' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Modify_Kill_Feed_Color_By_Team, Kill_Feed_Out) == 0x0000C8, "Member 'BP_GameState_GunFight_C_Modify_Kill_Feed_Color_By_Team::Kill_Feed_Out' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Modify_Kill_Feed_Color_By_Team, Local_Team_Player_IDs) == 0x000190, "Member 'BP_GameState_GunFight_C_Modify_Kill_Feed_Color_By_Team::Local_Team_Player_IDs' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Modify_Kill_Feed_Color_By_Team, _Kill_Feed_Out) == 0x0001E0, "Member 'BP_GameState_GunFight_C_Modify_Kill_Feed_Color_By_Team::_Kill_Feed_Out' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Modify_Kill_Feed_Color_By_Team, Temp_int_Array_Index_Variable) == 0x0002A8, "Member 'BP_GameState_GunFight_C_Modify_Kill_Feed_Color_By_Team::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Modify_Kill_Feed_Color_By_Team, Temp_int_Loop_Counter_Variable) == 0x0002AC, "Member 'BP_GameState_GunFight_C_Modify_Kill_Feed_Color_By_Team::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Modify_Kill_Feed_Color_By_Team, CallFunc_Add_IntInt_ReturnValue) == 0x0002B0, "Member 'BP_GameState_GunFight_C_Modify_Kill_Feed_Color_By_Team::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Modify_Kill_Feed_Color_By_Team, CallFunc_GetUserControllerId_ReturnValue) == 0x0002B4, "Member 'BP_GameState_GunFight_C_Modify_Kill_Feed_Color_By_Team::CallFunc_GetUserControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Modify_Kill_Feed_Color_By_Team, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue) == 0x0002B8, "Member 'BP_GameState_GunFight_C_Modify_Kill_Feed_Color_By_Team::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Modify_Kill_Feed_Color_By_Team, K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight) == 0x0002C0, "Member 'BP_GameState_GunFight_C_Modify_Kill_Feed_Color_By_Team::K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Modify_Kill_Feed_Color_By_Team, K2Node_DynamicCast_bSuccess) == 0x0002C8, "Member 'BP_GameState_GunFight_C_Modify_Kill_Feed_Color_By_Team::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Modify_Kill_Feed_Color_By_Team, CallFunc_IsValid_ReturnValue) == 0x0002C9, "Member 'BP_GameState_GunFight_C_Modify_Kill_Feed_Color_By_Team::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Modify_Kill_Feed_Color_By_Team, K2Node_DynamicCast_AsBP_Player_State_Teams) == 0x0002D0, "Member 'BP_GameState_GunFight_C_Modify_Kill_Feed_Color_By_Team::K2Node_DynamicCast_AsBP_Player_State_Teams' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Modify_Kill_Feed_Color_By_Team, K2Node_DynamicCast_bSuccess_1) == 0x0002D8, "Member 'BP_GameState_GunFight_C_Modify_Kill_Feed_Color_By_Team::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Modify_Kill_Feed_Color_By_Team, CallFunc_FindTeammates_TeammatesPlayerStates) == 0x0002E0, "Member 'BP_GameState_GunFight_C_Modify_Kill_Feed_Color_By_Team::CallFunc_FindTeammates_TeammatesPlayerStates' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Modify_Kill_Feed_Color_By_Team, CallFunc_Array_Get_Item) == 0x0002F0, "Member 'BP_GameState_GunFight_C_Modify_Kill_Feed_Color_By_Team::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Modify_Kill_Feed_Color_By_Team, CallFunc_Array_Length_ReturnValue) == 0x0002F8, "Member 'BP_GameState_GunFight_C_Modify_Kill_Feed_Color_By_Team::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Modify_Kill_Feed_Color_By_Team, CallFunc_IsValid_ReturnValue_1) == 0x0002FC, "Member 'BP_GameState_GunFight_C_Modify_Kill_Feed_Color_By_Team::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Modify_Kill_Feed_Color_By_Team, CallFunc_Less_IntInt_ReturnValue) == 0x0002FD, "Member 'BP_GameState_GunFight_C_Modify_Kill_Feed_Color_By_Team::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Modify_Kill_Feed_Color_By_Team, CallFunc_Set_Contains_ReturnValue) == 0x0002FE, "Member 'BP_GameState_GunFight_C_Modify_Kill_Feed_Color_By_Team::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Modify_Kill_Feed_Color_By_Team, CallFunc_Set_Contains_ReturnValue_1) == 0x0002FF, "Member 'BP_GameState_GunFight_C_Modify_Kill_Feed_Color_By_Team::CallFunc_Set_Contains_ReturnValue_1' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.Show or Hide Spawn Markers
// 0x0378 (0x0378 - 0x0000)
struct BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   New_Tag;                                           // 0x0004(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0010(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0028(0x0018)()
	bool                                          Temp_bool_Variable_1;                              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_2;                              // 0x0048(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0060(0x0018)()
	bool                                          Temp_bool_Variable_2;                              // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_4;                              // 0x0080(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x0098(0x0018)()
	bool                                          Temp_bool_Variable_3;                              // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMapMarkerType                                Temp_byte_Variable;                                // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMapMarkerType                                Temp_byte_Variable_1;                              // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMapMarkerType                                Temp_byte_Variable_2;                              // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMapMarkerType                                Temp_byte_Variable_3;                              // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x00B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMapMarkerType                                Temp_byte_Variable_4;                              // 0x00B7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMapMarkerType                                Temp_byte_Variable_5;                              // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMapMarkerType                                Temp_byte_Variable_6;                              // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMapMarkerType                                Temp_byte_Variable_7;                              // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_8;                              // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BE[0x2];                                       // 0x00BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_6;                              // 0x00D8(0x0018)()
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable_7;                              // 0x0100(0x0018)()
	int32                                         CallFunc_GetUserControllerId_ReturnValue;          // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue; // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_GunFight_C*        K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight; // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_Attacker_Is_Attacker;                  // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_Attacker_Is_Attacker_1;                // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_133[0x5];                                      // 0x0133(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0138(0x0018)()
	class FText                                   K2Node_Select_Default_1;                           // 0x0150(0x0018)()
	class FText                                   K2Node_Select_Default_2;                           // 0x0168(0x0018)()
	EMapMarkerType                                K2Node_Select_Default_3;                           // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMapMarkerType                                K2Node_Select_Default_4;                           // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMapMarkerType                                K2Node_Select_Default_5;                           // 0x0182(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMapMarkerType                                K2Node_Select_Default_6;                           // 0x0183(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_9;                              // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_185[0x3];                                      // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerStart_Raid_C*                 CallFunc_Array_Get_Item;                           // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default_7;                           // 0x0190(0x0018)()
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x01A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x01B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x01CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMapMarkerType                                K2Node_Select_Default_8;                           // 0x01D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D6[0x2];                                      // 0x01D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_10;                             // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DD[0x3];                                      // 0x01DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_9;                           // 0x01E0(0x0018)()
	EMapMarkerType                                K2Node_Select_Default_10;                          // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CustomMapMarker                     K2Node_MakeStruct_S_CustomMapMarker;               // 0x0200(0x0050)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_11;                             // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_251[0x7];                                      // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CustomMapMarker_Optimized           CallFunc_EncodeMapMarker_Map_Marker_Optimized;     // 0x0258(0x0038)(HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default_11;                          // 0x0290(0x0018)()
	class ABP_PlayerStart_Raid_C*                 CallFunc_Array_Get_Item_1;                         // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_2;                         // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x02B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C4[0x4];                                      // 0x02C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CustomMapMarker                     K2Node_MakeStruct_S_CustomMapMarker_1;             // 0x02C8(0x0050)(HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x0318(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FS_CustomMapMarker_Optimized           CallFunc_EncodeMapMarker_Map_Marker_Optimized_1;   // 0x0328(0x0038)(HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x036C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0371(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_372[0x2];                                      // 0x0372(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0374(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers) == 0x000008, "Wrong alignment on BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers");
static_assert(sizeof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers) == 0x000378, "Wrong size on BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, Show) == 0x000000, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::Show' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, New_Tag) == 0x000004, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::New_Tag' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, Temp_bool_Variable) == 0x00000C, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, Temp_text_Variable) == 0x000010, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, Temp_text_Variable_1) == 0x000028, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, Temp_bool_Variable_1) == 0x000040, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, Temp_text_Variable_2) == 0x000048, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, Temp_text_Variable_3) == 0x000060, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, Temp_bool_Variable_2) == 0x000078, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, Temp_text_Variable_4) == 0x000080, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, Temp_text_Variable_5) == 0x000098, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, Temp_bool_Variable_3) == 0x0000B0, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, Temp_byte_Variable) == 0x0000B1, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, Temp_byte_Variable_1) == 0x0000B2, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, Temp_bool_Variable_4) == 0x0000B3, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, Temp_byte_Variable_2) == 0x0000B4, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, Temp_byte_Variable_3) == 0x0000B5, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, Temp_bool_Variable_5) == 0x0000B6, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, Temp_byte_Variable_4) == 0x0000B7, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, Temp_byte_Variable_5) == 0x0000B8, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, Temp_bool_Variable_6) == 0x0000B9, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, Temp_byte_Variable_6) == 0x0000BA, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, Temp_byte_Variable_7) == 0x0000BB, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, Temp_bool_Variable_7) == 0x0000BC, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, Temp_bool_Variable_8) == 0x0000BD, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, Temp_int_Loop_Counter_Variable) == 0x0000C0, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, Temp_int_Loop_Counter_Variable_1) == 0x0000C4, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, CallFunc_Add_IntInt_ReturnValue) == 0x0000C8, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000CC, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, Temp_int_Array_Index_Variable) == 0x0000D0, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, Temp_text_Variable_6) == 0x0000D8, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, Temp_int_Array_Index_Variable_1) == 0x0000F0, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, Temp_int_Loop_Counter_Variable_2) == 0x0000F4, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000F8, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, Temp_int_Array_Index_Variable_2) == 0x0000FC, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, Temp_text_Variable_7) == 0x000100, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::Temp_text_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, CallFunc_GetUserControllerId_ReturnValue) == 0x000118, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::CallFunc_GetUserControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue) == 0x000120, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight) == 0x000128, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, K2Node_DynamicCast_bSuccess) == 0x000130, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, CallFunc_Is_Attacker_Is_Attacker) == 0x000131, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::CallFunc_Is_Attacker_Is_Attacker' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, CallFunc_Is_Attacker_Is_Attacker_1) == 0x000132, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::CallFunc_Is_Attacker_Is_Attacker_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, K2Node_Select_Default) == 0x000138, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, K2Node_Select_Default_1) == 0x000150, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, K2Node_Select_Default_2) == 0x000168, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, K2Node_Select_Default_3) == 0x000180, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, K2Node_Select_Default_4) == 0x000181, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, K2Node_Select_Default_5) == 0x000182, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, K2Node_Select_Default_6) == 0x000183, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, Temp_bool_Variable_9) == 0x000184, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, CallFunc_Array_Get_Item) == 0x000188, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, K2Node_Select_Default_7) == 0x000190, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0001A8, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, CallFunc_GetDisplayName_ReturnValue) == 0x0001B8, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, CallFunc_Array_Length_ReturnValue) == 0x0001C8, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, CallFunc_Conv_StringToName_ReturnValue) == 0x0001CC, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, CallFunc_Less_IntInt_ReturnValue) == 0x0001D4, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, K2Node_Select_Default_8) == 0x0001D5, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, CallFunc_Array_Add_ReturnValue) == 0x0001D8, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, Temp_bool_Variable_10) == 0x0001DC, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, K2Node_Select_Default_9) == 0x0001E0, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, K2Node_Select_Default_10) == 0x0001F8, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::K2Node_Select_Default_10' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, K2Node_MakeStruct_S_CustomMapMarker) == 0x000200, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::K2Node_MakeStruct_S_CustomMapMarker' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, Temp_bool_Variable_11) == 0x000250, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::Temp_bool_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, CallFunc_EncodeMapMarker_Map_Marker_Optimized) == 0x000258, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::CallFunc_EncodeMapMarker_Map_Marker_Optimized' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, K2Node_Select_Default_11) == 0x000290, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::K2Node_Select_Default_11' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, CallFunc_Array_Get_Item_1) == 0x0002A8, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, CallFunc_Array_Get_Item_2) == 0x0002B0, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0002B8, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, K2Node_MakeStruct_S_CustomMapMarker_1) == 0x0002C8, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::K2Node_MakeStruct_S_CustomMapMarker_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, CallFunc_GetDisplayName_ReturnValue_1) == 0x000318, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, CallFunc_EncodeMapMarker_Map_Marker_Optimized_1) == 0x000328, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::CallFunc_EncodeMapMarker_Map_Marker_Optimized_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, CallFunc_Conv_StringToName_ReturnValue_1) == 0x000360, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, CallFunc_Array_Length_ReturnValue_1) == 0x000368, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, CallFunc_Array_Length_ReturnValue_2) == 0x00036C, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, CallFunc_Less_IntInt_ReturnValue_1) == 0x000370, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, CallFunc_Less_IntInt_ReturnValue_2) == 0x000371, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers, CallFunc_Array_Add_ReturnValue_1) == 0x000374, "Member 'BP_GameState_GunFight_C_Show_or_Hide_Spawn_Markers::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.Clean Loadout Slots
// 0x0020 (0x0020 - 0x0000)
struct BP_GameState_GunFight_C_Clean_Loadout_Slots final
{
public:
	TArray<struct FS_GunFightLoadoutSlot>         TempArray;                                         // 0x0000(0x0010)(Edit, BlueprintVisible)
	TArray<struct FS_GunFightLoadoutSlot>         CallFunc_GetCleanLoadoutStates_NewParam;           // 0x0010(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_GameState_GunFight_C_Clean_Loadout_Slots) == 0x000008, "Wrong alignment on BP_GameState_GunFight_C_Clean_Loadout_Slots");
static_assert(sizeof(BP_GameState_GunFight_C_Clean_Loadout_Slots) == 0x000020, "Wrong size on BP_GameState_GunFight_C_Clean_Loadout_Slots");
static_assert(offsetof(BP_GameState_GunFight_C_Clean_Loadout_Slots, TempArray) == 0x000000, "Member 'BP_GameState_GunFight_C_Clean_Loadout_Slots::TempArray' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Clean_Loadout_Slots, CallFunc_GetCleanLoadoutStates_NewParam) == 0x000010, "Member 'BP_GameState_GunFight_C_Clean_Loadout_Slots::CallFunc_GetCleanLoadoutStates_NewParam' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.Clean Loadout Pick Types
// 0x0010 (0x0010 - 0x0000)
struct BP_GameState_GunFight_C_Clean_Loadout_Pick_Types final
{
public:
	TArray<struct FS_GunFightLoadoutSlot>         TempArray;                                         // 0x0000(0x0010)(Edit, BlueprintVisible)
};
static_assert(alignof(BP_GameState_GunFight_C_Clean_Loadout_Pick_Types) == 0x000008, "Wrong alignment on BP_GameState_GunFight_C_Clean_Loadout_Pick_Types");
static_assert(sizeof(BP_GameState_GunFight_C_Clean_Loadout_Pick_Types) == 0x000010, "Wrong size on BP_GameState_GunFight_C_Clean_Loadout_Pick_Types");
static_assert(offsetof(BP_GameState_GunFight_C_Clean_Loadout_Pick_Types, TempArray) == 0x000000, "Member 'BP_GameState_GunFight_C_Clean_Loadout_Pick_Types::TempArray' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.SetPlayerStateToLoadoutSlot
// 0x0088 (0x0088 - 0x0000)
struct BP_GameState_GunFight_C_SetPlayerStateToLoadoutSlot final
{
public:
	int32                                         LoadoutIndex;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_GunFight_C*             PlayerState;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsAttacker;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_PlayerState_GunFight_C*>     TempUserStatesArray;                               // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class ABP_PlayerState_GunFight_C*>     K2Node_MakeArray_Array;                            // 0x0028(0x0010)(ConstParm, ReferenceParm)
	struct FS_GunFightLoadoutSlot                 K2Node_MakeStruct_S_GunFightLoadoutSlot;           // 0x0038(0x0018)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_GunFightLoadoutSlot>         K2Node_Select_Default;                             // 0x0058(0x0010)(ReferenceParm)
	struct FS_GunFightLoadoutSlot                 CallFunc_Array_Get_Item;                           // 0x0068(0x0018)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameState_GunFight_C_SetPlayerStateToLoadoutSlot) == 0x000008, "Wrong alignment on BP_GameState_GunFight_C_SetPlayerStateToLoadoutSlot");
static_assert(sizeof(BP_GameState_GunFight_C_SetPlayerStateToLoadoutSlot) == 0x000088, "Wrong size on BP_GameState_GunFight_C_SetPlayerStateToLoadoutSlot");
static_assert(offsetof(BP_GameState_GunFight_C_SetPlayerStateToLoadoutSlot, LoadoutIndex) == 0x000000, "Member 'BP_GameState_GunFight_C_SetPlayerStateToLoadoutSlot::LoadoutIndex' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SetPlayerStateToLoadoutSlot, PlayerState) == 0x000008, "Member 'BP_GameState_GunFight_C_SetPlayerStateToLoadoutSlot::PlayerState' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SetPlayerStateToLoadoutSlot, bIsAttacker) == 0x000010, "Member 'BP_GameState_GunFight_C_SetPlayerStateToLoadoutSlot::bIsAttacker' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SetPlayerStateToLoadoutSlot, TempUserStatesArray) == 0x000018, "Member 'BP_GameState_GunFight_C_SetPlayerStateToLoadoutSlot::TempUserStatesArray' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SetPlayerStateToLoadoutSlot, K2Node_MakeArray_Array) == 0x000028, "Member 'BP_GameState_GunFight_C_SetPlayerStateToLoadoutSlot::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SetPlayerStateToLoadoutSlot, K2Node_MakeStruct_S_GunFightLoadoutSlot) == 0x000038, "Member 'BP_GameState_GunFight_C_SetPlayerStateToLoadoutSlot::K2Node_MakeStruct_S_GunFightLoadoutSlot' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SetPlayerStateToLoadoutSlot, Temp_bool_Variable) == 0x000050, "Member 'BP_GameState_GunFight_C_SetPlayerStateToLoadoutSlot::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SetPlayerStateToLoadoutSlot, K2Node_Select_Default) == 0x000058, "Member 'BP_GameState_GunFight_C_SetPlayerStateToLoadoutSlot::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SetPlayerStateToLoadoutSlot, CallFunc_Array_Get_Item) == 0x000068, "Member 'BP_GameState_GunFight_C_SetPlayerStateToLoadoutSlot::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SetPlayerStateToLoadoutSlot, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'BP_GameState_GunFight_C_SetPlayerStateToLoadoutSlot::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SetPlayerStateToLoadoutSlot, CallFunc_Greater_IntInt_ReturnValue) == 0x000084, "Member 'BP_GameState_GunFight_C_SetPlayerStateToLoadoutSlot::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SetPlayerStateToLoadoutSlot, CallFunc_Not_PreBool_ReturnValue) == 0x000085, "Member 'BP_GameState_GunFight_C_SetPlayerStateToLoadoutSlot::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.GetLoadoutByPlayerState
// 0x00D0 (0x00D0 - 0x0000)
struct BP_GameState_GunFight_C_GetLoadoutByPlayerState final
{
public:
	class ABP_PlayerState_GunFight_C*             PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsAttacker;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bFoundAny;                                         // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_GunFightLoadouts_S12                Loadout;                                           // 0x0010(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	int32                                         FoundLoadoutIndex;                                 // 0x0038(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LoadoutIndex;                                      // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   LoadoutToLookFor;                                  // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_PlayerState_GunFight_C*>     TempUserStatesArray;                               // 0x0048(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_GunFightLoadouts_S12                CallFunc_GetDataTableRowFromName_OutRow;           // 0x0068(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0x2];                                       // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_GunFightLoadoutSlot>         K2Node_Select_Default;                             // 0x00A0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BA[0x2];                                       // 0x00BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_Gunfight_LoadoutSlotInfo            CallFunc_Array_Get_Item;                           // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameState_GunFight_C_GetLoadoutByPlayerState) == 0x000008, "Wrong alignment on BP_GameState_GunFight_C_GetLoadoutByPlayerState");
static_assert(sizeof(BP_GameState_GunFight_C_GetLoadoutByPlayerState) == 0x0000D0, "Wrong size on BP_GameState_GunFight_C_GetLoadoutByPlayerState");
static_assert(offsetof(BP_GameState_GunFight_C_GetLoadoutByPlayerState, PlayerState) == 0x000000, "Member 'BP_GameState_GunFight_C_GetLoadoutByPlayerState::PlayerState' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetLoadoutByPlayerState, bIsAttacker) == 0x000008, "Member 'BP_GameState_GunFight_C_GetLoadoutByPlayerState::bIsAttacker' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetLoadoutByPlayerState, bFoundAny) == 0x000009, "Member 'BP_GameState_GunFight_C_GetLoadoutByPlayerState::bFoundAny' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetLoadoutByPlayerState, Loadout) == 0x000010, "Member 'BP_GameState_GunFight_C_GetLoadoutByPlayerState::Loadout' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetLoadoutByPlayerState, FoundLoadoutIndex) == 0x000038, "Member 'BP_GameState_GunFight_C_GetLoadoutByPlayerState::FoundLoadoutIndex' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetLoadoutByPlayerState, LoadoutIndex) == 0x00003C, "Member 'BP_GameState_GunFight_C_GetLoadoutByPlayerState::LoadoutIndex' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetLoadoutByPlayerState, LoadoutToLookFor) == 0x000040, "Member 'BP_GameState_GunFight_C_GetLoadoutByPlayerState::LoadoutToLookFor' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetLoadoutByPlayerState, TempUserStatesArray) == 0x000048, "Member 'BP_GameState_GunFight_C_GetLoadoutByPlayerState::TempUserStatesArray' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetLoadoutByPlayerState, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'BP_GameState_GunFight_C_GetLoadoutByPlayerState::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetLoadoutByPlayerState, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'BP_GameState_GunFight_C_GetLoadoutByPlayerState::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetLoadoutByPlayerState, Temp_bool_True_if_break_was_hit_Variable) == 0x000060, "Member 'BP_GameState_GunFight_C_GetLoadoutByPlayerState::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetLoadoutByPlayerState, Temp_int_Array_Index_Variable) == 0x000064, "Member 'BP_GameState_GunFight_C_GetLoadoutByPlayerState::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetLoadoutByPlayerState, CallFunc_GetDataTableRowFromName_OutRow) == 0x000068, "Member 'BP_GameState_GunFight_C_GetLoadoutByPlayerState::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetLoadoutByPlayerState, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000090, "Member 'BP_GameState_GunFight_C_GetLoadoutByPlayerState::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetLoadoutByPlayerState, Temp_bool_True_if_break_was_hit_Variable_1) == 0x000091, "Member 'BP_GameState_GunFight_C_GetLoadoutByPlayerState::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetLoadoutByPlayerState, Temp_int_Array_Index_Variable_1) == 0x000094, "Member 'BP_GameState_GunFight_C_GetLoadoutByPlayerState::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetLoadoutByPlayerState, Temp_bool_Variable) == 0x000098, "Member 'BP_GameState_GunFight_C_GetLoadoutByPlayerState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetLoadoutByPlayerState, Temp_int_Loop_Counter_Variable_1) == 0x00009C, "Member 'BP_GameState_GunFight_C_GetLoadoutByPlayerState::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetLoadoutByPlayerState, K2Node_Select_Default) == 0x0000A0, "Member 'BP_GameState_GunFight_C_GetLoadoutByPlayerState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetLoadoutByPlayerState, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000B0, "Member 'BP_GameState_GunFight_C_GetLoadoutByPlayerState::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetLoadoutByPlayerState, CallFunc_Array_Length_ReturnValue) == 0x0000B4, "Member 'BP_GameState_GunFight_C_GetLoadoutByPlayerState::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetLoadoutByPlayerState, CallFunc_Less_IntInt_ReturnValue) == 0x0000B8, "Member 'BP_GameState_GunFight_C_GetLoadoutByPlayerState::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetLoadoutByPlayerState, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000B9, "Member 'BP_GameState_GunFight_C_GetLoadoutByPlayerState::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetLoadoutByPlayerState, CallFunc_Array_Length_ReturnValue_1) == 0x0000BC, "Member 'BP_GameState_GunFight_C_GetLoadoutByPlayerState::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetLoadoutByPlayerState, CallFunc_Array_Get_Item) == 0x0000C0, "Member 'BP_GameState_GunFight_C_GetLoadoutByPlayerState::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetLoadoutByPlayerState, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000CC, "Member 'BP_GameState_GunFight_C_GetLoadoutByPlayerState::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.GetLoadoutStateByIndex
// 0x0058 (0x0058 - 0x0000)
struct BP_GameState_GunFight_C_GetLoadoutStateByIndex final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsAttacker;                                       // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Valid;                                             // 0x0005(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EGunFight_LoadoutState                        State;                                             // 0x0006(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_Gunfight_LoadoutSlotInfo>    TempResults;                                       // 0x0008(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EGunFight_LoadoutState                        Temp_byte_Variable;                                // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_GunFightLoadoutSlot>         K2Node_Select_Default;                             // 0x0030(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F[0x1];                                       // 0x004F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGunFight_LoadoutState                        Temp_byte_Variable_1;                              // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EGunFight_LoadoutState                        K2Node_Select_Default_1;                           // 0x0057(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameState_GunFight_C_GetLoadoutStateByIndex) == 0x000008, "Wrong alignment on BP_GameState_GunFight_C_GetLoadoutStateByIndex");
static_assert(sizeof(BP_GameState_GunFight_C_GetLoadoutStateByIndex) == 0x000058, "Wrong size on BP_GameState_GunFight_C_GetLoadoutStateByIndex");
static_assert(offsetof(BP_GameState_GunFight_C_GetLoadoutStateByIndex, Index_0) == 0x000000, "Member 'BP_GameState_GunFight_C_GetLoadoutStateByIndex::Index_0' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetLoadoutStateByIndex, bIsAttacker) == 0x000004, "Member 'BP_GameState_GunFight_C_GetLoadoutStateByIndex::bIsAttacker' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetLoadoutStateByIndex, Valid) == 0x000005, "Member 'BP_GameState_GunFight_C_GetLoadoutStateByIndex::Valid' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetLoadoutStateByIndex, State) == 0x000006, "Member 'BP_GameState_GunFight_C_GetLoadoutStateByIndex::State' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetLoadoutStateByIndex, TempResults) == 0x000008, "Member 'BP_GameState_GunFight_C_GetLoadoutStateByIndex::TempResults' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetLoadoutStateByIndex, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_GameState_GunFight_C_GetLoadoutStateByIndex::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetLoadoutStateByIndex, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_GameState_GunFight_C_GetLoadoutStateByIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetLoadoutStateByIndex, Temp_bool_True_if_break_was_hit_Variable) == 0x000020, "Member 'BP_GameState_GunFight_C_GetLoadoutStateByIndex::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetLoadoutStateByIndex, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BP_GameState_GunFight_C_GetLoadoutStateByIndex::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetLoadoutStateByIndex, Temp_bool_Variable) == 0x000028, "Member 'BP_GameState_GunFight_C_GetLoadoutStateByIndex::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetLoadoutStateByIndex, Temp_bool_Variable_1) == 0x000029, "Member 'BP_GameState_GunFight_C_GetLoadoutStateByIndex::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetLoadoutStateByIndex, Temp_byte_Variable) == 0x00002A, "Member 'BP_GameState_GunFight_C_GetLoadoutStateByIndex::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetLoadoutStateByIndex, K2Node_Select_Default) == 0x000030, "Member 'BP_GameState_GunFight_C_GetLoadoutStateByIndex::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetLoadoutStateByIndex, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_GameState_GunFight_C_GetLoadoutStateByIndex::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetLoadoutStateByIndex, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'BP_GameState_GunFight_C_GetLoadoutStateByIndex::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetLoadoutStateByIndex, CallFunc_Array_Length_ReturnValue_1) == 0x000048, "Member 'BP_GameState_GunFight_C_GetLoadoutStateByIndex::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetLoadoutStateByIndex, CallFunc_Greater_IntInt_ReturnValue) == 0x00004C, "Member 'BP_GameState_GunFight_C_GetLoadoutStateByIndex::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetLoadoutStateByIndex, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00004D, "Member 'BP_GameState_GunFight_C_GetLoadoutStateByIndex::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetLoadoutStateByIndex, CallFunc_Not_PreBool_ReturnValue) == 0x00004E, "Member 'BP_GameState_GunFight_C_GetLoadoutStateByIndex::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetLoadoutStateByIndex, CallFunc_Array_Length_ReturnValue_2) == 0x000050, "Member 'BP_GameState_GunFight_C_GetLoadoutStateByIndex::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetLoadoutStateByIndex, Temp_byte_Variable_1) == 0x000054, "Member 'BP_GameState_GunFight_C_GetLoadoutStateByIndex::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetLoadoutStateByIndex, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000055, "Member 'BP_GameState_GunFight_C_GetLoadoutStateByIndex::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetLoadoutStateByIndex, CallFunc_Not_PreBool_ReturnValue_1) == 0x000056, "Member 'BP_GameState_GunFight_C_GetLoadoutStateByIndex::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetLoadoutStateByIndex, K2Node_Select_Default_1) == 0x000057, "Member 'BP_GameState_GunFight_C_GetLoadoutStateByIndex::K2Node_Select_Default_1' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.GetCleanLoadoutStates
// 0x0070 (0x0070 - 0x0000)
struct BP_GameState_GunFight_C_GetCleanLoadoutStates final
{
public:
	int32                                         LoadoutCount_0;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_GunFightLoadoutSlot>         NewParam;                                          // 0x0008(0x0010)(Parm, OutParm)
	TArray<class ABP_PlayerState_GunFight_C*>     EmptyArray;                                        // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class ABP_PlayerState_GunFight_C*             EmptyRef;                                          // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_GunFightLoadoutSlot>         TempLoadoutStates;                                 // 0x0030(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Variable;                                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_GunFightLoadoutSlot                 K2Node_MakeStruct_S_GunFightLoadoutSlot;           // 0x0050(0x0018)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameState_GunFight_C_GetCleanLoadoutStates) == 0x000008, "Wrong alignment on BP_GameState_GunFight_C_GetCleanLoadoutStates");
static_assert(sizeof(BP_GameState_GunFight_C_GetCleanLoadoutStates) == 0x000070, "Wrong size on BP_GameState_GunFight_C_GetCleanLoadoutStates");
static_assert(offsetof(BP_GameState_GunFight_C_GetCleanLoadoutStates, LoadoutCount_0) == 0x000000, "Member 'BP_GameState_GunFight_C_GetCleanLoadoutStates::LoadoutCount_0' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetCleanLoadoutStates, NewParam) == 0x000008, "Member 'BP_GameState_GunFight_C_GetCleanLoadoutStates::NewParam' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetCleanLoadoutStates, EmptyArray) == 0x000018, "Member 'BP_GameState_GunFight_C_GetCleanLoadoutStates::EmptyArray' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetCleanLoadoutStates, EmptyRef) == 0x000028, "Member 'BP_GameState_GunFight_C_GetCleanLoadoutStates::EmptyRef' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetCleanLoadoutStates, TempLoadoutStates) == 0x000030, "Member 'BP_GameState_GunFight_C_GetCleanLoadoutStates::TempLoadoutStates' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetCleanLoadoutStates, Temp_int_Variable) == 0x000040, "Member 'BP_GameState_GunFight_C_GetCleanLoadoutStates::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetCleanLoadoutStates, CallFunc_Subtract_IntInt_ReturnValue) == 0x000044, "Member 'BP_GameState_GunFight_C_GetCleanLoadoutStates::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetCleanLoadoutStates, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000048, "Member 'BP_GameState_GunFight_C_GetCleanLoadoutStates::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetCleanLoadoutStates, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'BP_GameState_GunFight_C_GetCleanLoadoutStates::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetCleanLoadoutStates, K2Node_MakeStruct_S_GunFightLoadoutSlot) == 0x000050, "Member 'BP_GameState_GunFight_C_GetCleanLoadoutStates::K2Node_MakeStruct_S_GunFightLoadoutSlot' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetCleanLoadoutStates, CallFunc_Array_Add_ReturnValue) == 0x000068, "Member 'BP_GameState_GunFight_C_GetCleanLoadoutStates::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.SelectMatchLoadouts
// 0x0220 (0x0220 - 0x0000)
struct BP_GameState_GunFight_C_SelectMatchLoadouts final
{
public:
	class FName                                   TempLoadoutRowName;                                // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           Tier4_Loadouts;                                    // 0x0008(0x0010)(Edit, BlueprintVisible)
	TMap<int32, int32>                            LoadoutCount_To_Rank3LoadoutCount;                 // 0x0018(0x0050)(Edit, BlueprintVisible)
	int32                                         LoadoutIndex;                                      // 0x0068(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             Loadouts_Rank4_Datatable;                          // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Loadouts_Rank3_Datatable;                          // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Loadouts_Rank2_Datatable;                          // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Loadouts_Rank1_Datatable;                          // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_GunFightLoadoutSlot>         CleanSlots;                                        // 0x0090(0x0010)(Edit, BlueprintVisible)
	bool                                          Temp_bool_Variable;                                // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_3;                               // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Send_Elimination_Loadouts_For_Match_Selected_ReturnValue; // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_Gunfight_LoadoutSlotInfo            K2Node_MakeStruct_S_Gunfight_LoadoutSlotInfo;      // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value;                           // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_105[0x3];                                      // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_115[0x3];                                      // 0x0115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0118(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value_1;                         // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_135[0x3];                                      // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_1;                           // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13D[0x3];                                      // 0x013D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames_1;       // 0x0140(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue_1;              // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames_2;       // 0x0160(0x0010)(ReferenceParm)
	struct FS_Gunfight_LoadoutSlotInfo            K2Node_MakeStruct_S_Gunfight_LoadoutSlotInfo_1;    // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue_2;              // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_2;                         // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<int32, int32>                            K2Node_MakeVariable_MakeVariableOutput;            // 0x0190(0x0050)()
	struct FS_Gunfight_LoadoutSlotInfo            K2Node_MakeStruct_S_Gunfight_LoadoutSlotInfo_2;    // 0x01E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames_3;       // 0x01F0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue_3;              // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_3;                         // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_Gunfight_LoadoutSlotInfo            K2Node_MakeStruct_S_Gunfight_LoadoutSlotInfo_3;    // 0x0210(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameState_GunFight_C_SelectMatchLoadouts) == 0x000008, "Wrong alignment on BP_GameState_GunFight_C_SelectMatchLoadouts");
static_assert(sizeof(BP_GameState_GunFight_C_SelectMatchLoadouts) == 0x000220, "Wrong size on BP_GameState_GunFight_C_SelectMatchLoadouts");
static_assert(offsetof(BP_GameState_GunFight_C_SelectMatchLoadouts, TempLoadoutRowName) == 0x000000, "Member 'BP_GameState_GunFight_C_SelectMatchLoadouts::TempLoadoutRowName' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SelectMatchLoadouts, Tier4_Loadouts) == 0x000008, "Member 'BP_GameState_GunFight_C_SelectMatchLoadouts::Tier4_Loadouts' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SelectMatchLoadouts, LoadoutCount_To_Rank3LoadoutCount) == 0x000018, "Member 'BP_GameState_GunFight_C_SelectMatchLoadouts::LoadoutCount_To_Rank3LoadoutCount' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SelectMatchLoadouts, LoadoutIndex) == 0x000068, "Member 'BP_GameState_GunFight_C_SelectMatchLoadouts::LoadoutIndex' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SelectMatchLoadouts, Loadouts_Rank4_Datatable) == 0x000070, "Member 'BP_GameState_GunFight_C_SelectMatchLoadouts::Loadouts_Rank4_Datatable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SelectMatchLoadouts, Loadouts_Rank3_Datatable) == 0x000078, "Member 'BP_GameState_GunFight_C_SelectMatchLoadouts::Loadouts_Rank3_Datatable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SelectMatchLoadouts, Loadouts_Rank2_Datatable) == 0x000080, "Member 'BP_GameState_GunFight_C_SelectMatchLoadouts::Loadouts_Rank2_Datatable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SelectMatchLoadouts, Loadouts_Rank1_Datatable) == 0x000088, "Member 'BP_GameState_GunFight_C_SelectMatchLoadouts::Loadouts_Rank1_Datatable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SelectMatchLoadouts, CleanSlots) == 0x000090, "Member 'BP_GameState_GunFight_C_SelectMatchLoadouts::CleanSlots' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SelectMatchLoadouts, Temp_bool_Variable) == 0x0000A0, "Member 'BP_GameState_GunFight_C_SelectMatchLoadouts::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SelectMatchLoadouts, Temp_int_Variable) == 0x0000A4, "Member 'BP_GameState_GunFight_C_SelectMatchLoadouts::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SelectMatchLoadouts, CallFunc_Add_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_GameState_GunFight_C_SelectMatchLoadouts::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SelectMatchLoadouts, Temp_int_Variable_1) == 0x0000AC, "Member 'BP_GameState_GunFight_C_SelectMatchLoadouts::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SelectMatchLoadouts, Temp_int_Variable_2) == 0x0000B0, "Member 'BP_GameState_GunFight_C_SelectMatchLoadouts::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SelectMatchLoadouts, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000B4, "Member 'BP_GameState_GunFight_C_SelectMatchLoadouts::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SelectMatchLoadouts, Temp_bool_Variable_1) == 0x0000B8, "Member 'BP_GameState_GunFight_C_SelectMatchLoadouts::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SelectMatchLoadouts, Temp_int_Variable_3) == 0x0000BC, "Member 'BP_GameState_GunFight_C_SelectMatchLoadouts::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SelectMatchLoadouts, Temp_int_Variable_4) == 0x0000C0, "Member 'BP_GameState_GunFight_C_SelectMatchLoadouts::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SelectMatchLoadouts, Temp_int_Variable_5) == 0x0000C4, "Member 'BP_GameState_GunFight_C_SelectMatchLoadouts::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SelectMatchLoadouts, CallFunc_Send_Elimination_Loadouts_For_Match_Selected_ReturnValue) == 0x0000C8, "Member 'BP_GameState_GunFight_C_SelectMatchLoadouts::CallFunc_Send_Elimination_Loadouts_For_Match_Selected_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SelectMatchLoadouts, CallFunc_Array_Length_ReturnValue) == 0x0000CC, "Member 'BP_GameState_GunFight_C_SelectMatchLoadouts::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SelectMatchLoadouts, CallFunc_Array_RemoveItem_ReturnValue) == 0x0000D0, "Member 'BP_GameState_GunFight_C_SelectMatchLoadouts::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SelectMatchLoadouts, CallFunc_RandomInteger_ReturnValue) == 0x0000D4, "Member 'BP_GameState_GunFight_C_SelectMatchLoadouts::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SelectMatchLoadouts, CallFunc_Array_Get_Item) == 0x0000D8, "Member 'BP_GameState_GunFight_C_SelectMatchLoadouts::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SelectMatchLoadouts, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000E0, "Member 'BP_GameState_GunFight_C_SelectMatchLoadouts::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SelectMatchLoadouts, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000E4, "Member 'BP_GameState_GunFight_C_SelectMatchLoadouts::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SelectMatchLoadouts, Temp_int_Variable_6) == 0x0000E8, "Member 'BP_GameState_GunFight_C_SelectMatchLoadouts::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SelectMatchLoadouts, CallFunc_Add_IntInt_ReturnValue_4) == 0x0000EC, "Member 'BP_GameState_GunFight_C_SelectMatchLoadouts::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SelectMatchLoadouts, CallFunc_Add_IntInt_ReturnValue_5) == 0x0000F0, "Member 'BP_GameState_GunFight_C_SelectMatchLoadouts::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SelectMatchLoadouts, K2Node_MakeStruct_S_Gunfight_LoadoutSlotInfo) == 0x0000F4, "Member 'BP_GameState_GunFight_C_SelectMatchLoadouts::K2Node_MakeStruct_S_Gunfight_LoadoutSlotInfo' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SelectMatchLoadouts, CallFunc_Map_Find_Value) == 0x000100, "Member 'BP_GameState_GunFight_C_SelectMatchLoadouts::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SelectMatchLoadouts, CallFunc_Map_Find_ReturnValue) == 0x000104, "Member 'BP_GameState_GunFight_C_SelectMatchLoadouts::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SelectMatchLoadouts, K2Node_Select_Default) == 0x000108, "Member 'BP_GameState_GunFight_C_SelectMatchLoadouts::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SelectMatchLoadouts, CallFunc_Subtract_IntInt_ReturnValue) == 0x00010C, "Member 'BP_GameState_GunFight_C_SelectMatchLoadouts::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SelectMatchLoadouts, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000110, "Member 'BP_GameState_GunFight_C_SelectMatchLoadouts::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SelectMatchLoadouts, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000114, "Member 'BP_GameState_GunFight_C_SelectMatchLoadouts::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SelectMatchLoadouts, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000118, "Member 'BP_GameState_GunFight_C_SelectMatchLoadouts::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SelectMatchLoadouts, CallFunc_Array_Add_ReturnValue) == 0x000128, "Member 'BP_GameState_GunFight_C_SelectMatchLoadouts::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SelectMatchLoadouts, Temp_int_Variable_7) == 0x00012C, "Member 'BP_GameState_GunFight_C_SelectMatchLoadouts::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SelectMatchLoadouts, CallFunc_Map_Find_Value_1) == 0x000130, "Member 'BP_GameState_GunFight_C_SelectMatchLoadouts::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SelectMatchLoadouts, CallFunc_Map_Find_ReturnValue_1) == 0x000134, "Member 'BP_GameState_GunFight_C_SelectMatchLoadouts::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SelectMatchLoadouts, K2Node_Select_Default_1) == 0x000138, "Member 'BP_GameState_GunFight_C_SelectMatchLoadouts::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SelectMatchLoadouts, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x00013C, "Member 'BP_GameState_GunFight_C_SelectMatchLoadouts::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SelectMatchLoadouts, CallFunc_GetDataTableRowNames_OutRowNames_1) == 0x000140, "Member 'BP_GameState_GunFight_C_SelectMatchLoadouts::CallFunc_GetDataTableRowNames_OutRowNames_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SelectMatchLoadouts, CallFunc_Array_Length_ReturnValue_1) == 0x000150, "Member 'BP_GameState_GunFight_C_SelectMatchLoadouts::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SelectMatchLoadouts, CallFunc_RandomInteger_ReturnValue_1) == 0x000154, "Member 'BP_GameState_GunFight_C_SelectMatchLoadouts::CallFunc_RandomInteger_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SelectMatchLoadouts, CallFunc_Array_Get_Item_1) == 0x000158, "Member 'BP_GameState_GunFight_C_SelectMatchLoadouts::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SelectMatchLoadouts, CallFunc_GetDataTableRowNames_OutRowNames_2) == 0x000160, "Member 'BP_GameState_GunFight_C_SelectMatchLoadouts::CallFunc_GetDataTableRowNames_OutRowNames_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SelectMatchLoadouts, K2Node_MakeStruct_S_Gunfight_LoadoutSlotInfo_1) == 0x000170, "Member 'BP_GameState_GunFight_C_SelectMatchLoadouts::K2Node_MakeStruct_S_Gunfight_LoadoutSlotInfo_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SelectMatchLoadouts, CallFunc_Array_Length_ReturnValue_2) == 0x00017C, "Member 'BP_GameState_GunFight_C_SelectMatchLoadouts::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SelectMatchLoadouts, CallFunc_Array_Add_ReturnValue_1) == 0x000180, "Member 'BP_GameState_GunFight_C_SelectMatchLoadouts::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SelectMatchLoadouts, CallFunc_RandomInteger_ReturnValue_2) == 0x000184, "Member 'BP_GameState_GunFight_C_SelectMatchLoadouts::CallFunc_RandomInteger_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SelectMatchLoadouts, CallFunc_Array_Get_Item_2) == 0x000188, "Member 'BP_GameState_GunFight_C_SelectMatchLoadouts::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SelectMatchLoadouts, K2Node_MakeVariable_MakeVariableOutput) == 0x000190, "Member 'BP_GameState_GunFight_C_SelectMatchLoadouts::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SelectMatchLoadouts, K2Node_MakeStruct_S_Gunfight_LoadoutSlotInfo_2) == 0x0001E0, "Member 'BP_GameState_GunFight_C_SelectMatchLoadouts::K2Node_MakeStruct_S_Gunfight_LoadoutSlotInfo_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SelectMatchLoadouts, CallFunc_Array_Add_ReturnValue_2) == 0x0001EC, "Member 'BP_GameState_GunFight_C_SelectMatchLoadouts::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SelectMatchLoadouts, CallFunc_GetDataTableRowNames_OutRowNames_3) == 0x0001F0, "Member 'BP_GameState_GunFight_C_SelectMatchLoadouts::CallFunc_GetDataTableRowNames_OutRowNames_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SelectMatchLoadouts, CallFunc_Array_Length_ReturnValue_3) == 0x000200, "Member 'BP_GameState_GunFight_C_SelectMatchLoadouts::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SelectMatchLoadouts, CallFunc_RandomInteger_ReturnValue_3) == 0x000204, "Member 'BP_GameState_GunFight_C_SelectMatchLoadouts::CallFunc_RandomInteger_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SelectMatchLoadouts, CallFunc_Array_Get_Item_3) == 0x000208, "Member 'BP_GameState_GunFight_C_SelectMatchLoadouts::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SelectMatchLoadouts, K2Node_MakeStruct_S_Gunfight_LoadoutSlotInfo_3) == 0x000210, "Member 'BP_GameState_GunFight_C_SelectMatchLoadouts::K2Node_MakeStruct_S_Gunfight_LoadoutSlotInfo_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SelectMatchLoadouts, CallFunc_Array_Add_ReturnValue_3) == 0x00021C, "Member 'BP_GameState_GunFight_C_SelectMatchLoadouts::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.ShowLoadoutPicker
// 0x0028 (0x0028 - 0x0000)
struct BP_GameState_GunFight_C_ShowLoadoutPicker final
{
public:
	class ABP_PlayerController_GunFight_C*        PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PreRoundTime;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class ABP_PlayerController_GunFight_C* PlayerController, int32 PreRoundTime)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameState_GunFight_C_ShowLoadoutPicker) == 0x000008, "Wrong alignment on BP_GameState_GunFight_C_ShowLoadoutPicker");
static_assert(sizeof(BP_GameState_GunFight_C_ShowLoadoutPicker) == 0x000028, "Wrong size on BP_GameState_GunFight_C_ShowLoadoutPicker");
static_assert(offsetof(BP_GameState_GunFight_C_ShowLoadoutPicker, PlayerController) == 0x000000, "Member 'BP_GameState_GunFight_C_ShowLoadoutPicker::PlayerController' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ShowLoadoutPicker, PreRoundTime) == 0x000008, "Member 'BP_GameState_GunFight_C_ShowLoadoutPicker::PreRoundTime' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ShowLoadoutPicker, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'BP_GameState_GunFight_C_ShowLoadoutPicker::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ShowLoadoutPicker, CallFunc_IsDedicatedServer_ReturnValue) == 0x00000D, "Member 'BP_GameState_GunFight_C_ShowLoadoutPicker::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ShowLoadoutPicker, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'BP_GameState_GunFight_C_ShowLoadoutPicker::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ShowLoadoutPicker, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_GameState_GunFight_C_ShowLoadoutPicker::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ShowLoadoutPicker, CallFunc_Greater_IntInt_ReturnValue) == 0x000024, "Member 'BP_GameState_GunFight_C_ShowLoadoutPicker::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ShowLoadoutPicker, CallFunc_Not_PreBool_ReturnValue) == 0x000025, "Member 'BP_GameState_GunFight_C_ShowLoadoutPicker::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.Get Pre Round Time
// 0x000C (0x000C - 0x0000)
struct BP_GameState_GunFight_C_Get_Pre_Round_Time final
{
public:
	int32                                         Time;                                              // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameState_GunFight_C_Get_Pre_Round_Time) == 0x000004, "Wrong alignment on BP_GameState_GunFight_C_Get_Pre_Round_Time");
static_assert(sizeof(BP_GameState_GunFight_C_Get_Pre_Round_Time) == 0x00000C, "Wrong size on BP_GameState_GunFight_C_Get_Pre_Round_Time");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Pre_Round_Time, Time) == 0x000000, "Member 'BP_GameState_GunFight_C_Get_Pre_Round_Time::Time' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Pre_Round_Time, Temp_bool_Variable) == 0x000004, "Member 'BP_GameState_GunFight_C_Get_Pre_Round_Time::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Pre_Round_Time, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000005, "Member 'BP_GameState_GunFight_C_Get_Pre_Round_Time::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Pre_Round_Time, K2Node_Select_Default) == 0x000008, "Member 'BP_GameState_GunFight_C_Get_Pre_Round_Time::K2Node_Select_Default' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.SavePreviousLoadout
// 0x0098 (0x0098 - 0x0000)
struct BP_GameState_GunFight_C_SavePreviousLoadout final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_Teams_C*                K2Node_DynamicCast_AsBP_Player_State_Teams;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_GunFight_C*        K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_Attacker_Is_Attacker;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43[0x5];                                       // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_GunFight_C*             K2Node_DynamicCast_AsBP_Player_State_Gun_Fight;    // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_GunFightLoadoutSlot>         K2Node_Select_Default;                             // 0x0060(0x0010)(ReferenceParm)
	struct FS_GunFightLoadoutSlot                 CallFunc_Array_Get_Item_1;                         // 0x0070(0x0018)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8E[0x2];                                       // 0x008E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameState_GunFight_C_SavePreviousLoadout) == 0x000008, "Wrong alignment on BP_GameState_GunFight_C_SavePreviousLoadout");
static_assert(sizeof(BP_GameState_GunFight_C_SavePreviousLoadout) == 0x000098, "Wrong size on BP_GameState_GunFight_C_SavePreviousLoadout");
static_assert(offsetof(BP_GameState_GunFight_C_SavePreviousLoadout, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_GameState_GunFight_C_SavePreviousLoadout::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SavePreviousLoadout, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_GameState_GunFight_C_SavePreviousLoadout::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SavePreviousLoadout, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_GameState_GunFight_C_SavePreviousLoadout::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SavePreviousLoadout, Temp_bool_True_if_break_was_hit_Variable) == 0x00000C, "Member 'BP_GameState_GunFight_C_SavePreviousLoadout::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SavePreviousLoadout, Temp_int_Array_Index_Variable_1) == 0x000010, "Member 'BP_GameState_GunFight_C_SavePreviousLoadout::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SavePreviousLoadout, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_GameState_GunFight_C_SavePreviousLoadout::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SavePreviousLoadout, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_GameState_GunFight_C_SavePreviousLoadout::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SavePreviousLoadout, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'BP_GameState_GunFight_C_SavePreviousLoadout::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SavePreviousLoadout, K2Node_DynamicCast_AsBP_Player_State_Teams) == 0x000028, "Member 'BP_GameState_GunFight_C_SavePreviousLoadout::K2Node_DynamicCast_AsBP_Player_State_Teams' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SavePreviousLoadout, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_GameState_GunFight_C_SavePreviousLoadout::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SavePreviousLoadout, CallFunc_IsValid_ReturnValue_1) == 0x000031, "Member 'BP_GameState_GunFight_C_SavePreviousLoadout::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SavePreviousLoadout, K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight) == 0x000038, "Member 'BP_GameState_GunFight_C_SavePreviousLoadout::K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SavePreviousLoadout, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BP_GameState_GunFight_C_SavePreviousLoadout::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SavePreviousLoadout, CallFunc_Is_Attacker_Is_Attacker) == 0x000041, "Member 'BP_GameState_GunFight_C_SavePreviousLoadout::CallFunc_Is_Attacker_Is_Attacker' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SavePreviousLoadout, CallFunc_IsValid_ReturnValue_2) == 0x000042, "Member 'BP_GameState_GunFight_C_SavePreviousLoadout::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SavePreviousLoadout, K2Node_DynamicCast_AsBP_Player_State_Gun_Fight) == 0x000048, "Member 'BP_GameState_GunFight_C_SavePreviousLoadout::K2Node_DynamicCast_AsBP_Player_State_Gun_Fight' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SavePreviousLoadout, K2Node_DynamicCast_bSuccess_2) == 0x000050, "Member 'BP_GameState_GunFight_C_SavePreviousLoadout::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SavePreviousLoadout, Temp_int_Loop_Counter_Variable_1) == 0x000054, "Member 'BP_GameState_GunFight_C_SavePreviousLoadout::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SavePreviousLoadout, Temp_bool_Variable) == 0x000058, "Member 'BP_GameState_GunFight_C_SavePreviousLoadout::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SavePreviousLoadout, CallFunc_Less_IntInt_ReturnValue) == 0x000059, "Member 'BP_GameState_GunFight_C_SavePreviousLoadout::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SavePreviousLoadout, K2Node_Select_Default) == 0x000060, "Member 'BP_GameState_GunFight_C_SavePreviousLoadout::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SavePreviousLoadout, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'BP_GameState_GunFight_C_SavePreviousLoadout::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SavePreviousLoadout, CallFunc_Array_Length_ReturnValue_1) == 0x000088, "Member 'BP_GameState_GunFight_C_SavePreviousLoadout::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SavePreviousLoadout, CallFunc_Less_IntInt_ReturnValue_1) == 0x00008C, "Member 'BP_GameState_GunFight_C_SavePreviousLoadout::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SavePreviousLoadout, CallFunc_Array_Contains_ReturnValue) == 0x00008D, "Member 'BP_GameState_GunFight_C_SavePreviousLoadout::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SavePreviousLoadout, CallFunc_Add_IntInt_ReturnValue_1) == 0x000090, "Member 'BP_GameState_GunFight_C_SavePreviousLoadout::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.ReceivedMatchPhaseReplication
// 0x0040 (0x0040 - 0x0000)
struct BP_GameState_GunFight_C_ReceivedMatchPhaseReplication final
{
public:
	E_TeamsMatchPhase                             Match_Phase_0;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TeamsMatchPhase                             WaitingToStartMatch;                               // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetUserControllerId_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetUserControllerId_ReturnValue_1;        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_GunFight_C*        K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_1; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_GunFight_C*        K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight_1; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_ByteByte_ReturnValue;                // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_ByteByte_ReturnValue;           // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameState_GunFight_C_ReceivedMatchPhaseReplication) == 0x000008, "Wrong alignment on BP_GameState_GunFight_C_ReceivedMatchPhaseReplication");
static_assert(sizeof(BP_GameState_GunFight_C_ReceivedMatchPhaseReplication) == 0x000040, "Wrong size on BP_GameState_GunFight_C_ReceivedMatchPhaseReplication");
static_assert(offsetof(BP_GameState_GunFight_C_ReceivedMatchPhaseReplication, Match_Phase_0) == 0x000000, "Member 'BP_GameState_GunFight_C_ReceivedMatchPhaseReplication::Match_Phase_0' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ReceivedMatchPhaseReplication, WaitingToStartMatch) == 0x000001, "Member 'BP_GameState_GunFight_C_ReceivedMatchPhaseReplication::WaitingToStartMatch' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ReceivedMatchPhaseReplication, CallFunc_GetUserControllerId_ReturnValue) == 0x000004, "Member 'BP_GameState_GunFight_C_ReceivedMatchPhaseReplication::CallFunc_GetUserControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ReceivedMatchPhaseReplication, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue) == 0x000008, "Member 'BP_GameState_GunFight_C_ReceivedMatchPhaseReplication::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ReceivedMatchPhaseReplication, CallFunc_GetUserControllerId_ReturnValue_1) == 0x000010, "Member 'BP_GameState_GunFight_C_ReceivedMatchPhaseReplication::CallFunc_GetUserControllerId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ReceivedMatchPhaseReplication, K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight) == 0x000018, "Member 'BP_GameState_GunFight_C_ReceivedMatchPhaseReplication::K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ReceivedMatchPhaseReplication, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_GameState_GunFight_C_ReceivedMatchPhaseReplication::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ReceivedMatchPhaseReplication, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_1) == 0x000028, "Member 'BP_GameState_GunFight_C_ReceivedMatchPhaseReplication::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ReceivedMatchPhaseReplication, K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight_1) == 0x000030, "Member 'BP_GameState_GunFight_C_ReceivedMatchPhaseReplication::K2Node_DynamicCast_AsBP_Player_Controller_Gun_Fight_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ReceivedMatchPhaseReplication, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_GameState_GunFight_C_ReceivedMatchPhaseReplication::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ReceivedMatchPhaseReplication, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'BP_GameState_GunFight_C_ReceivedMatchPhaseReplication::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ReceivedMatchPhaseReplication, CallFunc_IsValid_ReturnValue_1) == 0x00003A, "Member 'BP_GameState_GunFight_C_ReceivedMatchPhaseReplication::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ReceivedMatchPhaseReplication, CallFunc_IsValid_ReturnValue_2) == 0x00003B, "Member 'BP_GameState_GunFight_C_ReceivedMatchPhaseReplication::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ReceivedMatchPhaseReplication, CallFunc_MakeLiteralByte_ReturnValue) == 0x00003C, "Member 'BP_GameState_GunFight_C_ReceivedMatchPhaseReplication::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ReceivedMatchPhaseReplication, CallFunc_Less_ByteByte_ReturnValue) == 0x00003D, "Member 'BP_GameState_GunFight_C_ReceivedMatchPhaseReplication::CallFunc_Less_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_ReceivedMatchPhaseReplication, CallFunc_LessEqual_ByteByte_ReturnValue) == 0x00003E, "Member 'BP_GameState_GunFight_C_ReceivedMatchPhaseReplication::CallFunc_LessEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.Set Lowest Available Index Loadout
// 0x0070 (0x0070 - 0x0000)
struct BP_GameState_GunFight_C_Set_Lowest_Available_Index_Loadout final
{
public:
	class ABP_PlayerState_GunFight_C*             PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsAttacker;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lowest;                                            // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_Gunfight_LoadoutSlotInfo>    TempResults;                                       // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_GunFightLoadoutSlot>         K2Node_Select_Default;                             // 0x0030(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_GunFightLoadoutSlot                 CallFunc_Array_Get_Item;                           // 0x0048(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameState_GunFight_C_Set_Lowest_Available_Index_Loadout) == 0x000008, "Wrong alignment on BP_GameState_GunFight_C_Set_Lowest_Available_Index_Loadout");
static_assert(sizeof(BP_GameState_GunFight_C_Set_Lowest_Available_Index_Loadout) == 0x000070, "Wrong size on BP_GameState_GunFight_C_Set_Lowest_Available_Index_Loadout");
static_assert(offsetof(BP_GameState_GunFight_C_Set_Lowest_Available_Index_Loadout, PlayerState) == 0x000000, "Member 'BP_GameState_GunFight_C_Set_Lowest_Available_Index_Loadout::PlayerState' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Set_Lowest_Available_Index_Loadout, bIsAttacker) == 0x000008, "Member 'BP_GameState_GunFight_C_Set_Lowest_Available_Index_Loadout::bIsAttacker' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Set_Lowest_Available_Index_Loadout, Lowest) == 0x00000C, "Member 'BP_GameState_GunFight_C_Set_Lowest_Available_Index_Loadout::Lowest' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Set_Lowest_Available_Index_Loadout, TempResults) == 0x000010, "Member 'BP_GameState_GunFight_C_Set_Lowest_Available_Index_Loadout::TempResults' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Set_Lowest_Available_Index_Loadout, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_GameState_GunFight_C_Set_Lowest_Available_Index_Loadout::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Set_Lowest_Available_Index_Loadout, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_GameState_GunFight_C_Set_Lowest_Available_Index_Loadout::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Set_Lowest_Available_Index_Loadout, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_GameState_GunFight_C_Set_Lowest_Available_Index_Loadout::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Set_Lowest_Available_Index_Loadout, Temp_bool_Variable) == 0x00002C, "Member 'BP_GameState_GunFight_C_Set_Lowest_Available_Index_Loadout::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Set_Lowest_Available_Index_Loadout, K2Node_Select_Default) == 0x000030, "Member 'BP_GameState_GunFight_C_Set_Lowest_Available_Index_Loadout::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Set_Lowest_Available_Index_Loadout, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_GameState_GunFight_C_Set_Lowest_Available_Index_Loadout::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Set_Lowest_Available_Index_Loadout, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_GameState_GunFight_C_Set_Lowest_Available_Index_Loadout::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Set_Lowest_Available_Index_Loadout, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'BP_GameState_GunFight_C_Set_Lowest_Available_Index_Loadout::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Set_Lowest_Available_Index_Loadout, CallFunc_Array_Length_ReturnValue_1) == 0x000064, "Member 'BP_GameState_GunFight_C_Set_Lowest_Available_Index_Loadout::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Set_Lowest_Available_Index_Loadout, CallFunc_Min_ReturnValue) == 0x000068, "Member 'BP_GameState_GunFight_C_Set_Lowest_Available_Index_Loadout::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Set_Lowest_Available_Index_Loadout, CallFunc_Greater_IntInt_ReturnValue) == 0x00006C, "Member 'BP_GameState_GunFight_C_Set_Lowest_Available_Index_Loadout::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Set_Lowest_Available_Index_Loadout, CallFunc_Not_PreBool_ReturnValue) == 0x00006D, "Member 'BP_GameState_GunFight_C_Set_Lowest_Available_Index_Loadout::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.GetCountOfPlayersWithLoadout
// 0x0060 (0x0060 - 0x0000)
struct BP_GameState_GunFight_C_GetCountOfPlayersWithLoadout final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsAttacker;                                       // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Valid;                                             // 0x0005(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PlayerCount_0;                                     // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_Gunfight_LoadoutSlotInfo>    TempResults;                                       // 0x0010(0x0010)(Edit, BlueprintVisible)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_GunFightLoadoutSlot>         K2Node_Select_Default;                             // 0x0038(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameState_GunFight_C_GetCountOfPlayersWithLoadout) == 0x000008, "Wrong alignment on BP_GameState_GunFight_C_GetCountOfPlayersWithLoadout");
static_assert(sizeof(BP_GameState_GunFight_C_GetCountOfPlayersWithLoadout) == 0x000060, "Wrong size on BP_GameState_GunFight_C_GetCountOfPlayersWithLoadout");
static_assert(offsetof(BP_GameState_GunFight_C_GetCountOfPlayersWithLoadout, Index_0) == 0x000000, "Member 'BP_GameState_GunFight_C_GetCountOfPlayersWithLoadout::Index_0' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetCountOfPlayersWithLoadout, bIsAttacker) == 0x000004, "Member 'BP_GameState_GunFight_C_GetCountOfPlayersWithLoadout::bIsAttacker' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetCountOfPlayersWithLoadout, Valid) == 0x000005, "Member 'BP_GameState_GunFight_C_GetCountOfPlayersWithLoadout::Valid' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetCountOfPlayersWithLoadout, PlayerCount_0) == 0x000008, "Member 'BP_GameState_GunFight_C_GetCountOfPlayersWithLoadout::PlayerCount_0' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetCountOfPlayersWithLoadout, TempResults) == 0x000010, "Member 'BP_GameState_GunFight_C_GetCountOfPlayersWithLoadout::TempResults' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetCountOfPlayersWithLoadout, Temp_bool_True_if_break_was_hit_Variable) == 0x000020, "Member 'BP_GameState_GunFight_C_GetCountOfPlayersWithLoadout::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetCountOfPlayersWithLoadout, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BP_GameState_GunFight_C_GetCountOfPlayersWithLoadout::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetCountOfPlayersWithLoadout, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BP_GameState_GunFight_C_GetCountOfPlayersWithLoadout::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetCountOfPlayersWithLoadout, Temp_bool_Variable) == 0x00002C, "Member 'BP_GameState_GunFight_C_GetCountOfPlayersWithLoadout::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetCountOfPlayersWithLoadout, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_GameState_GunFight_C_GetCountOfPlayersWithLoadout::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetCountOfPlayersWithLoadout, K2Node_Select_Default) == 0x000038, "Member 'BP_GameState_GunFight_C_GetCountOfPlayersWithLoadout::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetCountOfPlayersWithLoadout, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_GameState_GunFight_C_GetCountOfPlayersWithLoadout::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetCountOfPlayersWithLoadout, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'BP_GameState_GunFight_C_GetCountOfPlayersWithLoadout::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetCountOfPlayersWithLoadout, CallFunc_Array_Length_ReturnValue_1) == 0x000050, "Member 'BP_GameState_GunFight_C_GetCountOfPlayersWithLoadout::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetCountOfPlayersWithLoadout, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000054, "Member 'BP_GameState_GunFight_C_GetCountOfPlayersWithLoadout::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetCountOfPlayersWithLoadout, CallFunc_Array_Length_ReturnValue_2) == 0x000058, "Member 'BP_GameState_GunFight_C_GetCountOfPlayersWithLoadout::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetCountOfPlayersWithLoadout, CallFunc_Greater_IntInt_ReturnValue) == 0x00005C, "Member 'BP_GameState_GunFight_C_GetCountOfPlayersWithLoadout::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetCountOfPlayersWithLoadout, CallFunc_Not_PreBool_ReturnValue) == 0x00005D, "Member 'BP_GameState_GunFight_C_GetCountOfPlayersWithLoadout::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.GetDisconnectedScoreboardRow
// 0x0190 (0x0190 - 0x0000)
struct BP_GameState_GunFight_C_GetDisconnectedScoreboardRow final
{
public:
	struct FStruct_GunFightStatistics             Statistics;                                        // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          WasKicked;                                         // 0x0050(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_ScoreboardRow                  ScoreboardRow;                                     // 0x0058(0x0070)(Parm, OutParm, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable;                              // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetUniqueNetIdFromPlayerId_bIsActive;     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUniqueNetIdRepl                       CallFunc_GetUniqueNetIdFromPlayerId_ReturnValue;   // 0x00D8(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_GetPlatformFromPlayerId_bIsActive;        // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFlamePlatform                                CallFunc_GetPlatformFromPlayerId_ReturnValue;      // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_102[0x6];                                      // 0x0102(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default;                             // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStruct_ScoreboardRow                  K2Node_MakeStruct_Struct_ScoreboardRow;            // 0x0120(0x0070)(HasGetValueTypeHash)
};
static_assert(alignof(BP_GameState_GunFight_C_GetDisconnectedScoreboardRow) == 0x000008, "Wrong alignment on BP_GameState_GunFight_C_GetDisconnectedScoreboardRow");
static_assert(sizeof(BP_GameState_GunFight_C_GetDisconnectedScoreboardRow) == 0x000190, "Wrong size on BP_GameState_GunFight_C_GetDisconnectedScoreboardRow");
static_assert(offsetof(BP_GameState_GunFight_C_GetDisconnectedScoreboardRow, Statistics) == 0x000000, "Member 'BP_GameState_GunFight_C_GetDisconnectedScoreboardRow::Statistics' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetDisconnectedScoreboardRow, WasKicked) == 0x000050, "Member 'BP_GameState_GunFight_C_GetDisconnectedScoreboardRow::WasKicked' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetDisconnectedScoreboardRow, ScoreboardRow) == 0x000058, "Member 'BP_GameState_GunFight_C_GetDisconnectedScoreboardRow::ScoreboardRow' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetDisconnectedScoreboardRow, Temp_object_Variable) == 0x0000C8, "Member 'BP_GameState_GunFight_C_GetDisconnectedScoreboardRow::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetDisconnectedScoreboardRow, CallFunc_GetUniqueNetIdFromPlayerId_bIsActive) == 0x0000D0, "Member 'BP_GameState_GunFight_C_GetDisconnectedScoreboardRow::CallFunc_GetUniqueNetIdFromPlayerId_bIsActive' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetDisconnectedScoreboardRow, CallFunc_GetUniqueNetIdFromPlayerId_ReturnValue) == 0x0000D8, "Member 'BP_GameState_GunFight_C_GetDisconnectedScoreboardRow::CallFunc_GetUniqueNetIdFromPlayerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetDisconnectedScoreboardRow, CallFunc_GetPlatformFromPlayerId_bIsActive) == 0x000100, "Member 'BP_GameState_GunFight_C_GetDisconnectedScoreboardRow::CallFunc_GetPlatformFromPlayerId_bIsActive' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetDisconnectedScoreboardRow, CallFunc_GetPlatformFromPlayerId_ReturnValue) == 0x000101, "Member 'BP_GameState_GunFight_C_GetDisconnectedScoreboardRow::CallFunc_GetPlatformFromPlayerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetDisconnectedScoreboardRow, Temp_object_Variable_1) == 0x000108, "Member 'BP_GameState_GunFight_C_GetDisconnectedScoreboardRow::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetDisconnectedScoreboardRow, Temp_bool_Variable) == 0x000110, "Member 'BP_GameState_GunFight_C_GetDisconnectedScoreboardRow::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetDisconnectedScoreboardRow, K2Node_Select_Default) == 0x000118, "Member 'BP_GameState_GunFight_C_GetDisconnectedScoreboardRow::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetDisconnectedScoreboardRow, K2Node_MakeStruct_Struct_ScoreboardRow) == 0x000120, "Member 'BP_GameState_GunFight_C_GetDisconnectedScoreboardRow::K2Node_MakeStruct_Struct_ScoreboardRow' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.GetDisconnectedPlayerScoreboardRows
// 0x0048 (0x0048 - 0x0000)
struct BP_GameState_GunFight_C_GetDisconnectedPlayerScoreboardRows final
{
public:
	bool                                          IsAttacker;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FStruct_ScoreboardRow>          DisconnectedPlayers;                               // 0x0008(0x0010)(Parm, OutParm)
	TArray<struct FStruct_ScoreboardRow>          TempScoreboards;                                   // 0x0018(0x0010)(Edit, BlueprintVisible)
	TArray<struct FStruct_ScoreboardRow>          CallFunc_Map_Keys_Keys;                            // 0x0028(0x0010)(ReferenceParm)
	TArray<struct FStruct_ScoreboardRow>          CallFunc_Map_Keys_Keys_1;                          // 0x0038(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_GameState_GunFight_C_GetDisconnectedPlayerScoreboardRows) == 0x000008, "Wrong alignment on BP_GameState_GunFight_C_GetDisconnectedPlayerScoreboardRows");
static_assert(sizeof(BP_GameState_GunFight_C_GetDisconnectedPlayerScoreboardRows) == 0x000048, "Wrong size on BP_GameState_GunFight_C_GetDisconnectedPlayerScoreboardRows");
static_assert(offsetof(BP_GameState_GunFight_C_GetDisconnectedPlayerScoreboardRows, IsAttacker) == 0x000000, "Member 'BP_GameState_GunFight_C_GetDisconnectedPlayerScoreboardRows::IsAttacker' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetDisconnectedPlayerScoreboardRows, DisconnectedPlayers) == 0x000008, "Member 'BP_GameState_GunFight_C_GetDisconnectedPlayerScoreboardRows::DisconnectedPlayers' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetDisconnectedPlayerScoreboardRows, TempScoreboards) == 0x000018, "Member 'BP_GameState_GunFight_C_GetDisconnectedPlayerScoreboardRows::TempScoreboards' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetDisconnectedPlayerScoreboardRows, CallFunc_Map_Keys_Keys) == 0x000028, "Member 'BP_GameState_GunFight_C_GetDisconnectedPlayerScoreboardRows::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetDisconnectedPlayerScoreboardRows, CallFunc_Map_Keys_Keys_1) == 0x000038, "Member 'BP_GameState_GunFight_C_GetDisconnectedPlayerScoreboardRows::CallFunc_Map_Keys_Keys_1' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.GetThresholdMultiplierForDisconnectedPlayers
// 0x00F0 (0x00F0 - 0x0000)
struct BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers final
{
public:
	bool                                          Attacker;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Multiplier;                                        // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ValidPlayerCount;                                  // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TempMultiplier;                                    // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 PlayedRoundsArray;                                 // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GSC_Team_Raid_C*                    CallFunc_Get_Defending_Team_Defending_Team;        // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GSC_Team_Raid_C*                    CallFunc_Get_Attacking_Team_Attacking_Team;        // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GSC_Team_Raid_C*                    K2Node_Select_Default;                             // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_PlayerState_Teams_C*>        CallFunc_Get_Members_Member_States;                // 0x0070(0x0010)(ReferenceParm)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_Teams_C*                CallFunc_Array_Get_Item;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue_1;                        // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_Map_Values_Values;                        // 0x00D0(0x0010)(ReferenceParm)
	TArray<int32>                                 CallFunc_Map_Values_Values_1;                      // 0x00E0(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers) == 0x000008, "Wrong alignment on BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers");
static_assert(sizeof(BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers) == 0x0000F0, "Wrong size on BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers");
static_assert(offsetof(BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers, Attacker) == 0x000000, "Member 'BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers::Attacker' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers, Multiplier) == 0x000004, "Member 'BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers::Multiplier' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers, ValidPlayerCount) == 0x000008, "Member 'BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers::ValidPlayerCount' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers, TempMultiplier) == 0x00000C, "Member 'BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers::TempMultiplier' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers, PlayedRoundsArray) == 0x000010, "Member 'BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers::PlayedRoundsArray' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers, Temp_bool_Variable) == 0x000024, "Member 'BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers, Temp_int_Loop_Counter_Variable_1) == 0x00002C, "Member 'BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers, CallFunc_Add_IntInt_ReturnValue_1) == 0x000034, "Member 'BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers, Temp_int_Array_Index_Variable_1) == 0x000038, "Member 'BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers, Temp_int_Variable) == 0x00003C, "Member 'BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers, CallFunc_Add_IntInt_ReturnValue_2) == 0x000044, "Member 'BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers, CallFunc_Add_IntInt_ReturnValue_3) == 0x000048, "Member 'BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers, CallFunc_Subtract_IntInt_ReturnValue) == 0x00004C, "Member 'BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000050, "Member 'BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000054, "Member 'BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers, CallFunc_Get_Defending_Team_Defending_Team) == 0x000058, "Member 'BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers::CallFunc_Get_Defending_Team_Defending_Team' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers, CallFunc_Get_Attacking_Team_Attacking_Team) == 0x000060, "Member 'BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers::CallFunc_Get_Attacking_Team_Attacking_Team' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers, K2Node_Select_Default) == 0x000068, "Member 'BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers, CallFunc_Get_Members_Member_States) == 0x000070, "Member 'BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers::CallFunc_Get_Members_Member_States' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000080, "Member 'BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers, CallFunc_Array_Get_Item) == 0x000088, "Member 'BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers, CallFunc_IsValid_ReturnValue) == 0x000090, "Member 'BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers, CallFunc_Array_Length_ReturnValue_1) == 0x000094, "Member 'BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers, CallFunc_Less_IntInt_ReturnValue) == 0x000098, "Member 'BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers, CallFunc_Array_Get_Item_1) == 0x00009C, "Member 'BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers, CallFunc_Min_ReturnValue) == 0x0000A0, "Member 'BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers, CallFunc_Min_ReturnValue_1) == 0x0000A4, "Member 'BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers::CallFunc_Min_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x0000A8, "Member 'BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000AC, "Member 'BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000B0, "Member 'BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x0000B4, "Member 'BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers, CallFunc_Array_Length_ReturnValue_2) == 0x0000B8, "Member 'BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0000BC, "Member 'BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000C0, "Member 'BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0000C4, "Member 'BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x0000C8, "Member 'BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers, CallFunc_Map_Values_Values) == 0x0000D0, "Member 'BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers, CallFunc_Map_Values_Values_1) == 0x0000E0, "Member 'BP_GameState_GunFight_C_GetThresholdMultiplierForDisconnectedPlayers::CallFunc_Map_Values_Values_1' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.GetGameModeStringName
// 0x0030 (0x0030 - 0x0000)
struct BP_GameState_GunFight_C_GetGameModeStringName final
{
public:
	class FString                                 StringName;                                        // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameState_GunFight_C_GetGameModeStringName) == 0x000008, "Wrong alignment on BP_GameState_GunFight_C_GetGameModeStringName");
static_assert(sizeof(BP_GameState_GunFight_C_GetGameModeStringName) == 0x000030, "Wrong size on BP_GameState_GunFight_C_GetGameModeStringName");
static_assert(offsetof(BP_GameState_GunFight_C_GetGameModeStringName, StringName) == 0x000000, "Member 'BP_GameState_GunFight_C_GetGameModeStringName::StringName' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetGameModeStringName, CallFunc_Conv_IntToString_ReturnValue) == 0x000010, "Member 'BP_GameState_GunFight_C_GetGameModeStringName::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetGameModeStringName, CallFunc_Concat_StrStr_ReturnValue) == 0x000020, "Member 'BP_GameState_GunFight_C_GetGameModeStringName::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.SetPickTypeByPlayerState
// 0x0028 (0x0028 - 0x0000)
struct BP_GameState_GunFight_C_SetPickTypeByPlayerState final
{
public:
	class FString                                 PickType;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class ABP_PlayerState_GunFight_C*             PlayerState;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_PlayerState_GunFight_C*>     TempUserStatesArray;                               // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
};
static_assert(alignof(BP_GameState_GunFight_C_SetPickTypeByPlayerState) == 0x000008, "Wrong alignment on BP_GameState_GunFight_C_SetPickTypeByPlayerState");
static_assert(sizeof(BP_GameState_GunFight_C_SetPickTypeByPlayerState) == 0x000028, "Wrong size on BP_GameState_GunFight_C_SetPickTypeByPlayerState");
static_assert(offsetof(BP_GameState_GunFight_C_SetPickTypeByPlayerState, PickType) == 0x000000, "Member 'BP_GameState_GunFight_C_SetPickTypeByPlayerState::PickType' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SetPickTypeByPlayerState, PlayerState) == 0x000010, "Member 'BP_GameState_GunFight_C_SetPickTypeByPlayerState::PlayerState' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_SetPickTypeByPlayerState, TempUserStatesArray) == 0x000018, "Member 'BP_GameState_GunFight_C_SetPickTypeByPlayerState::TempUserStatesArray' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.GetPickTypeByPlayerState
// 0x0040 (0x0040 - 0x0000)
struct BP_GameState_GunFight_C_GetPickTypeByPlayerState final
{
public:
	class ABP_PlayerState_GunFight_C*             PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 PickType;                                          // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	TArray<class ABP_PlayerState_GunFight_C*>     TempUserStatesArray;                               // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class FString                                 CallFunc_Map_Find_Value;                           // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameState_GunFight_C_GetPickTypeByPlayerState) == 0x000008, "Wrong alignment on BP_GameState_GunFight_C_GetPickTypeByPlayerState");
static_assert(sizeof(BP_GameState_GunFight_C_GetPickTypeByPlayerState) == 0x000040, "Wrong size on BP_GameState_GunFight_C_GetPickTypeByPlayerState");
static_assert(offsetof(BP_GameState_GunFight_C_GetPickTypeByPlayerState, PlayerState) == 0x000000, "Member 'BP_GameState_GunFight_C_GetPickTypeByPlayerState::PlayerState' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetPickTypeByPlayerState, PickType) == 0x000008, "Member 'BP_GameState_GunFight_C_GetPickTypeByPlayerState::PickType' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetPickTypeByPlayerState, TempUserStatesArray) == 0x000018, "Member 'BP_GameState_GunFight_C_GetPickTypeByPlayerState::TempUserStatesArray' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetPickTypeByPlayerState, CallFunc_Map_Find_Value) == 0x000028, "Member 'BP_GameState_GunFight_C_GetPickTypeByPlayerState::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetPickTypeByPlayerState, CallFunc_Map_Find_ReturnValue) == 0x000038, "Member 'BP_GameState_GunFight_C_GetPickTypeByPlayerState::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.CheckLocalPlayerForLoadout
// 0x0038 (0x0038 - 0x0000)
struct BP_GameState_GunFight_C_CheckLocalPlayerForLoadout final
{
public:
	bool                                          HasLoadout;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 CallFunc_GetFlameController_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanCharacter*                        K2Node_DynamicCast_AsHuman_Character;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Get_Firearms_Count_Number_of_Firearms;    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_All_Ammo_Count_Amount_of_Ammunition;  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameState_GunFight_C_CheckLocalPlayerForLoadout) == 0x000008, "Wrong alignment on BP_GameState_GunFight_C_CheckLocalPlayerForLoadout");
static_assert(sizeof(BP_GameState_GunFight_C_CheckLocalPlayerForLoadout) == 0x000038, "Wrong size on BP_GameState_GunFight_C_CheckLocalPlayerForLoadout");
static_assert(offsetof(BP_GameState_GunFight_C_CheckLocalPlayerForLoadout, HasLoadout) == 0x000000, "Member 'BP_GameState_GunFight_C_CheckLocalPlayerForLoadout::HasLoadout' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_CheckLocalPlayerForLoadout, CallFunc_GetFlameController_ReturnValue) == 0x000008, "Member 'BP_GameState_GunFight_C_CheckLocalPlayerForLoadout::CallFunc_GetFlameController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_CheckLocalPlayerForLoadout, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'BP_GameState_GunFight_C_CheckLocalPlayerForLoadout::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_CheckLocalPlayerForLoadout, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_GameState_GunFight_C_CheckLocalPlayerForLoadout::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_CheckLocalPlayerForLoadout, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'BP_GameState_GunFight_C_CheckLocalPlayerForLoadout::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_CheckLocalPlayerForLoadout, K2Node_DynamicCast_AsHuman_Character) == 0x000020, "Member 'BP_GameState_GunFight_C_CheckLocalPlayerForLoadout::K2Node_DynamicCast_AsHuman_Character' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_CheckLocalPlayerForLoadout, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_GameState_GunFight_C_CheckLocalPlayerForLoadout::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_CheckLocalPlayerForLoadout, CallFunc_Get_Firearms_Count_Number_of_Firearms) == 0x00002C, "Member 'BP_GameState_GunFight_C_CheckLocalPlayerForLoadout::CallFunc_Get_Firearms_Count_Number_of_Firearms' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_CheckLocalPlayerForLoadout, CallFunc_Get_All_Ammo_Count_Amount_of_Ammunition) == 0x000030, "Member 'BP_GameState_GunFight_C_CheckLocalPlayerForLoadout::CallFunc_Get_All_Ammo_Count_Amount_of_Ammunition' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_CheckLocalPlayerForLoadout, CallFunc_Greater_IntInt_ReturnValue) == 0x000034, "Member 'BP_GameState_GunFight_C_CheckLocalPlayerForLoadout::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_CheckLocalPlayerForLoadout, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000035, "Member 'BP_GameState_GunFight_C_CheckLocalPlayerForLoadout::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_CheckLocalPlayerForLoadout, CallFunc_BooleanOR_ReturnValue) == 0x000036, "Member 'BP_GameState_GunFight_C_CheckLocalPlayerForLoadout::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.GetRemainingKickVotingTime
// 0x0018 (0x0018 - 0x0000)
struct BP_GameState_GunFight_C_GetRemainingKickVotingTime final
{
public:
	int32                                         TeamIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RemainingTime_0;                                   // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          VotingActive;                                      // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsActiveKickVoting_ReturnValue;        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetVoteKickStartTime_StartElapsedTime;    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameState_GunFight_C_GetRemainingKickVotingTime) == 0x000004, "Wrong alignment on BP_GameState_GunFight_C_GetRemainingKickVotingTime");
static_assert(sizeof(BP_GameState_GunFight_C_GetRemainingKickVotingTime) == 0x000018, "Wrong size on BP_GameState_GunFight_C_GetRemainingKickVotingTime");
static_assert(offsetof(BP_GameState_GunFight_C_GetRemainingKickVotingTime, TeamIndex) == 0x000000, "Member 'BP_GameState_GunFight_C_GetRemainingKickVotingTime::TeamIndex' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetRemainingKickVotingTime, RemainingTime_0) == 0x000004, "Member 'BP_GameState_GunFight_C_GetRemainingKickVotingTime::RemainingTime_0' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetRemainingKickVotingTime, VotingActive) == 0x000008, "Member 'BP_GameState_GunFight_C_GetRemainingKickVotingTime::VotingActive' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetRemainingKickVotingTime, CallFunc_GetIsActiveKickVoting_ReturnValue) == 0x000009, "Member 'BP_GameState_GunFight_C_GetRemainingKickVotingTime::CallFunc_GetIsActiveKickVoting_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetRemainingKickVotingTime, CallFunc_GetVoteKickStartTime_StartElapsedTime) == 0x00000C, "Member 'BP_GameState_GunFight_C_GetRemainingKickVotingTime::CallFunc_GetVoteKickStartTime_StartElapsedTime' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetRemainingKickVotingTime, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_GameState_GunFight_C_GetRemainingKickVotingTime::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetRemainingKickVotingTime, CallFunc_Subtract_IntInt_ReturnValue) == 0x000014, "Member 'BP_GameState_GunFight_C_GetRemainingKickVotingTime::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.Get Remaining Kick Vote Grace Time
// 0x0018 (0x0018 - 0x0000)
struct BP_GameState_GunFight_C_Get_Remaining_Kick_Vote_Grace_Time final
{
public:
	int32                                         TeamIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RemainingTime_0;                                   // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameState_GunFight_C_Get_Remaining_Kick_Vote_Grace_Time) == 0x000004, "Wrong alignment on BP_GameState_GunFight_C_Get_Remaining_Kick_Vote_Grace_Time");
static_assert(sizeof(BP_GameState_GunFight_C_Get_Remaining_Kick_Vote_Grace_Time) == 0x000018, "Wrong size on BP_GameState_GunFight_C_Get_Remaining_Kick_Vote_Grace_Time");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Remaining_Kick_Vote_Grace_Time, TeamIndex) == 0x000000, "Member 'BP_GameState_GunFight_C_Get_Remaining_Kick_Vote_Grace_Time::TeamIndex' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Remaining_Kick_Vote_Grace_Time, RemainingTime_0) == 0x000004, "Member 'BP_GameState_GunFight_C_Get_Remaining_Kick_Vote_Grace_Time::RemainingTime_0' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Remaining_Kick_Vote_Grace_Time, Temp_int_Variable) == 0x000008, "Member 'BP_GameState_GunFight_C_Get_Remaining_Kick_Vote_Grace_Time::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Remaining_Kick_Vote_Grace_Time, K2Node_Select_Default) == 0x00000C, "Member 'BP_GameState_GunFight_C_Get_Remaining_Kick_Vote_Grace_Time::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Remaining_Kick_Vote_Grace_Time, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_GameState_GunFight_C_Get_Remaining_Kick_Vote_Grace_Time::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Get_Remaining_Kick_Vote_Grace_Time, CallFunc_Subtract_IntInt_ReturnValue) == 0x000014, "Member 'BP_GameState_GunFight_C_Get_Remaining_Kick_Vote_Grace_Time::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.GetVoteKickStartTime
// 0x0010 (0x0010 - 0x0000)
struct BP_GameState_GunFight_C_GetVoteKickStartTime final
{
public:
	int32                                         TeamIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         StartElapsedTime;                                  // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameState_GunFight_C_GetVoteKickStartTime) == 0x000004, "Wrong alignment on BP_GameState_GunFight_C_GetVoteKickStartTime");
static_assert(sizeof(BP_GameState_GunFight_C_GetVoteKickStartTime) == 0x000010, "Wrong size on BP_GameState_GunFight_C_GetVoteKickStartTime");
static_assert(offsetof(BP_GameState_GunFight_C_GetVoteKickStartTime, TeamIndex) == 0x000000, "Member 'BP_GameState_GunFight_C_GetVoteKickStartTime::TeamIndex' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetVoteKickStartTime, StartElapsedTime) == 0x000004, "Member 'BP_GameState_GunFight_C_GetVoteKickStartTime::StartElapsedTime' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetVoteKickStartTime, Temp_int_Variable) == 0x000008, "Member 'BP_GameState_GunFight_C_GetVoteKickStartTime::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetVoteKickStartTime, K2Node_Select_Default) == 0x00000C, "Member 'BP_GameState_GunFight_C_GetVoteKickStartTime::K2Node_Select_Default' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.GetTotalElapsedTimeForNextVoteKick
// 0x0010 (0x0010 - 0x0000)
struct BP_GameState_GunFight_C_GetTotalElapsedTimeForNextVoteKick final
{
public:
	int32                                         TeamIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         StartElapsedTime;                                  // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameState_GunFight_C_GetTotalElapsedTimeForNextVoteKick) == 0x000004, "Wrong alignment on BP_GameState_GunFight_C_GetTotalElapsedTimeForNextVoteKick");
static_assert(sizeof(BP_GameState_GunFight_C_GetTotalElapsedTimeForNextVoteKick) == 0x000010, "Wrong size on BP_GameState_GunFight_C_GetTotalElapsedTimeForNextVoteKick");
static_assert(offsetof(BP_GameState_GunFight_C_GetTotalElapsedTimeForNextVoteKick, TeamIndex) == 0x000000, "Member 'BP_GameState_GunFight_C_GetTotalElapsedTimeForNextVoteKick::TeamIndex' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetTotalElapsedTimeForNextVoteKick, StartElapsedTime) == 0x000004, "Member 'BP_GameState_GunFight_C_GetTotalElapsedTimeForNextVoteKick::StartElapsedTime' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetTotalElapsedTimeForNextVoteKick, Temp_int_Variable) == 0x000008, "Member 'BP_GameState_GunFight_C_GetTotalElapsedTimeForNextVoteKick::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetTotalElapsedTimeForNextVoteKick, K2Node_Select_Default) == 0x00000C, "Member 'BP_GameState_GunFight_C_GetTotalElapsedTimeForNextVoteKick::K2Node_Select_Default' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.GetIsActiveKickVoting
// 0x0010 (0x0010 - 0x0000)
struct BP_GameState_GunFight_C_GetIsActiveKickVoting final
{
public:
	int32                                         TeamIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameState_GunFight_C_GetIsActiveKickVoting) == 0x000004, "Wrong alignment on BP_GameState_GunFight_C_GetIsActiveKickVoting");
static_assert(sizeof(BP_GameState_GunFight_C_GetIsActiveKickVoting) == 0x000010, "Wrong size on BP_GameState_GunFight_C_GetIsActiveKickVoting");
static_assert(offsetof(BP_GameState_GunFight_C_GetIsActiveKickVoting, TeamIndex) == 0x000000, "Member 'BP_GameState_GunFight_C_GetIsActiveKickVoting::TeamIndex' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetIsActiveKickVoting, ReturnValue) == 0x000004, "Member 'BP_GameState_GunFight_C_GetIsActiveKickVoting::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetIsActiveKickVoting, Temp_int_Variable) == 0x000008, "Member 'BP_GameState_GunFight_C_GetIsActiveKickVoting::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_GetIsActiveKickVoting, K2Node_Select_Default) == 0x00000C, "Member 'BP_GameState_GunFight_C_GetIsActiveKickVoting::K2Node_Select_Default' has a wrong offset!");

// Function BP_GameState_GunFight.BP_GameState_GunFight_C.Check if Every Player Picked aLoadout
// 0x00B0 (0x00B0 - 0x0000)
struct BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout final
{
public:
	bool                                          EveryPlayerPicked;                                 // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TempSelectedLoadoutsCount;                         // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentPlayerCount;                                // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_GunFightLoadoutSlot>         TempSlots;                                         // 0x0010(0x0010)(Edit, BlueprintVisible)
	TArray<struct FS_Gunfight_LoadoutSlotInfo>    TempResults;                                       // 0x0020(0x0010)(Edit, BlueprintVisible)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayersCount_ReturnValue;              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_GunFightLoadoutSlot                 CallFunc_Array_Get_Item;                           // 0x0068(0x0018)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Array_Get_Item_1;                         // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0x2];                                       // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout) == 0x000008, "Wrong alignment on BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout");
static_assert(sizeof(BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout) == 0x0000B0, "Wrong size on BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout");
static_assert(offsetof(BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout, EveryPlayerPicked) == 0x000000, "Member 'BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout::EveryPlayerPicked' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout, TempSelectedLoadoutsCount) == 0x000004, "Member 'BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout::TempSelectedLoadoutsCount' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout, CurrentPlayerCount) == 0x000008, "Member 'BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout::CurrentPlayerCount' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout, TempSlots) == 0x000010, "Member 'BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout::TempSlots' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout, TempResults) == 0x000020, "Member 'BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout::TempResults' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout, Temp_bool_Variable) == 0x000030, "Member 'BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout, Temp_int_Loop_Counter_Variable_1) == 0x000040, "Member 'BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout, CallFunc_Add_IntInt_ReturnValue_1) == 0x000044, "Member 'BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout, Temp_int_Variable) == 0x000048, "Member 'BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout, Temp_int_Variable_1) == 0x00004C, "Member 'BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout, Temp_int_Array_Index_Variable_1) == 0x000050, "Member 'BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout, Temp_int_Variable_2) == 0x000054, "Member 'BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000058, "Member 'BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout, CallFunc_Add_IntInt_ReturnValue_2) == 0x00005C, "Member 'BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout, CallFunc_GetPlayersCount_ReturnValue) == 0x000060, "Member 'BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout::CallFunc_GetPlayersCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout, CallFunc_Array_Get_Item) == 0x000068, "Member 'BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout, CallFunc_Array_Get_Item_1) == 0x000088, "Member 'BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout, CallFunc_Less_IntInt_ReturnValue) == 0x000090, "Member 'BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout, CallFunc_IsValid_ReturnValue) == 0x000091, "Member 'BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout, CallFunc_Array_Length_ReturnValue_1) == 0x000094, "Member 'BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout, K2Node_Select_Default) == 0x000098, "Member 'BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout, CallFunc_Less_IntInt_ReturnValue_1) == 0x00009C, "Member 'BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000A0, "Member 'BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout, CallFunc_Array_Length_ReturnValue_2) == 0x0000A4, "Member 'BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout, CallFunc_Greater_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout, CallFunc_Not_PreBool_ReturnValue) == 0x0000A9, "Member 'BP_GameState_GunFight_C_Check_if_Every_Player_Picked_aLoadout::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

}

