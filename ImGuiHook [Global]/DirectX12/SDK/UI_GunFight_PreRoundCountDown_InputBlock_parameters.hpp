#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_GunFight_PreRoundCountDown_InputBlock

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function UI_GunFight_PreRoundCountDown_InputBlock.UI_GunFight_PreRoundCountDown_InputBlock_C.ExecuteUbergraph_UI_GunFight_PreRoundCountDown_InputBlock
// 0x00F0 (0x00F0 - 0x0000)
struct UI_GunFight_PreRoundCountDown_InputBlock_C_ExecuteUbergraph_UI_GunFight_PreRoundCountDown_InputBlock final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Time_To_Round_Start;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0008(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ReferenceParm)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0058(0x0010)(ZeroConstructor, NoDestructor)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0068(0x0018)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0080(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0090(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9E[0x2];                                       // 0x009E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x00A0(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 CallFunc_GetFlameController_ReturnValue;           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerCharacter*                  CallFunc_GetHumanCharacter_ReturnValue;            // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GunFight_PreRoundCountDown_InputBlock_C_ExecuteUbergraph_UI_GunFight_PreRoundCountDown_InputBlock) == 0x000008, "Wrong alignment on UI_GunFight_PreRoundCountDown_InputBlock_C_ExecuteUbergraph_UI_GunFight_PreRoundCountDown_InputBlock");
static_assert(sizeof(UI_GunFight_PreRoundCountDown_InputBlock_C_ExecuteUbergraph_UI_GunFight_PreRoundCountDown_InputBlock) == 0x0000F0, "Wrong size on UI_GunFight_PreRoundCountDown_InputBlock_C_ExecuteUbergraph_UI_GunFight_PreRoundCountDown_InputBlock");
static_assert(offsetof(UI_GunFight_PreRoundCountDown_InputBlock_C_ExecuteUbergraph_UI_GunFight_PreRoundCountDown_InputBlock, EntryPoint) == 0x000000, "Member 'UI_GunFight_PreRoundCountDown_InputBlock_C_ExecuteUbergraph_UI_GunFight_PreRoundCountDown_InputBlock::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_GunFight_PreRoundCountDown_InputBlock_C_ExecuteUbergraph_UI_GunFight_PreRoundCountDown_InputBlock, K2Node_CustomEvent_Time_To_Round_Start) == 0x000004, "Member 'UI_GunFight_PreRoundCountDown_InputBlock_C_ExecuteUbergraph_UI_GunFight_PreRoundCountDown_InputBlock::K2Node_CustomEvent_Time_To_Round_Start' has a wrong offset!");
static_assert(offsetof(UI_GunFight_PreRoundCountDown_InputBlock_C_ExecuteUbergraph_UI_GunFight_PreRoundCountDown_InputBlock, K2Node_MakeStruct_FormatArgumentData) == 0x000008, "Member 'UI_GunFight_PreRoundCountDown_InputBlock_C_ExecuteUbergraph_UI_GunFight_PreRoundCountDown_InputBlock::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(UI_GunFight_PreRoundCountDown_InputBlock_C_ExecuteUbergraph_UI_GunFight_PreRoundCountDown_InputBlock, K2Node_MakeArray_Array) == 0x000048, "Member 'UI_GunFight_PreRoundCountDown_InputBlock_C_ExecuteUbergraph_UI_GunFight_PreRoundCountDown_InputBlock::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UI_GunFight_PreRoundCountDown_InputBlock_C_ExecuteUbergraph_UI_GunFight_PreRoundCountDown_InputBlock, K2Node_CreateDelegate_OutputDelegate) == 0x000058, "Member 'UI_GunFight_PreRoundCountDown_InputBlock_C_ExecuteUbergraph_UI_GunFight_PreRoundCountDown_InputBlock::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UI_GunFight_PreRoundCountDown_InputBlock_C_ExecuteUbergraph_UI_GunFight_PreRoundCountDown_InputBlock, CallFunc_Format_ReturnValue) == 0x000068, "Member 'UI_GunFight_PreRoundCountDown_InputBlock_C_ExecuteUbergraph_UI_GunFight_PreRoundCountDown_InputBlock::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GunFight_PreRoundCountDown_InputBlock_C_ExecuteUbergraph_UI_GunFight_PreRoundCountDown_InputBlock, K2Node_CreateDelegate_OutputDelegate_1) == 0x000080, "Member 'UI_GunFight_PreRoundCountDown_InputBlock_C_ExecuteUbergraph_UI_GunFight_PreRoundCountDown_InputBlock::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(UI_GunFight_PreRoundCountDown_InputBlock_C_ExecuteUbergraph_UI_GunFight_PreRoundCountDown_InputBlock, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000090, "Member 'UI_GunFight_PreRoundCountDown_InputBlock_C_ExecuteUbergraph_UI_GunFight_PreRoundCountDown_InputBlock::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GunFight_PreRoundCountDown_InputBlock_C_ExecuteUbergraph_UI_GunFight_PreRoundCountDown_InputBlock, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000098, "Member 'UI_GunFight_PreRoundCountDown_InputBlock_C_ExecuteUbergraph_UI_GunFight_PreRoundCountDown_InputBlock::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GunFight_PreRoundCountDown_InputBlock_C_ExecuteUbergraph_UI_GunFight_PreRoundCountDown_InputBlock, K2Node_Event_IsDesignTime) == 0x00009C, "Member 'UI_GunFight_PreRoundCountDown_InputBlock_C_ExecuteUbergraph_UI_GunFight_PreRoundCountDown_InputBlock::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_GunFight_PreRoundCountDown_InputBlock_C_ExecuteUbergraph_UI_GunFight_PreRoundCountDown_InputBlock, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00009D, "Member 'UI_GunFight_PreRoundCountDown_InputBlock_C_ExecuteUbergraph_UI_GunFight_PreRoundCountDown_InputBlock::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GunFight_PreRoundCountDown_InputBlock_C_ExecuteUbergraph_UI_GunFight_PreRoundCountDown_InputBlock, K2Node_Event_MyGeometry) == 0x0000A0, "Member 'UI_GunFight_PreRoundCountDown_InputBlock_C_ExecuteUbergraph_UI_GunFight_PreRoundCountDown_InputBlock::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_GunFight_PreRoundCountDown_InputBlock_C_ExecuteUbergraph_UI_GunFight_PreRoundCountDown_InputBlock, K2Node_Event_InDeltaTime) == 0x0000D8, "Member 'UI_GunFight_PreRoundCountDown_InputBlock_C_ExecuteUbergraph_UI_GunFight_PreRoundCountDown_InputBlock::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(UI_GunFight_PreRoundCountDown_InputBlock_C_ExecuteUbergraph_UI_GunFight_PreRoundCountDown_InputBlock, CallFunc_GetFlameController_ReturnValue) == 0x0000E0, "Member 'UI_GunFight_PreRoundCountDown_InputBlock_C_ExecuteUbergraph_UI_GunFight_PreRoundCountDown_InputBlock::CallFunc_GetFlameController_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GunFight_PreRoundCountDown_InputBlock_C_ExecuteUbergraph_UI_GunFight_PreRoundCountDown_InputBlock, CallFunc_GetHumanCharacter_ReturnValue) == 0x0000E8, "Member 'UI_GunFight_PreRoundCountDown_InputBlock_C_ExecuteUbergraph_UI_GunFight_PreRoundCountDown_InputBlock::CallFunc_GetHumanCharacter_ReturnValue' has a wrong offset!");

// Function UI_GunFight_PreRoundCountDown_InputBlock.UI_GunFight_PreRoundCountDown_InputBlock_C.Tick
// 0x003C (0x003C - 0x0000)
struct UI_GunFight_PreRoundCountDown_InputBlock_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GunFight_PreRoundCountDown_InputBlock_C_Tick) == 0x000004, "Wrong alignment on UI_GunFight_PreRoundCountDown_InputBlock_C_Tick");
static_assert(sizeof(UI_GunFight_PreRoundCountDown_InputBlock_C_Tick) == 0x00003C, "Wrong size on UI_GunFight_PreRoundCountDown_InputBlock_C_Tick");
static_assert(offsetof(UI_GunFight_PreRoundCountDown_InputBlock_C_Tick, MyGeometry) == 0x000000, "Member 'UI_GunFight_PreRoundCountDown_InputBlock_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_GunFight_PreRoundCountDown_InputBlock_C_Tick, InDeltaTime) == 0x000038, "Member 'UI_GunFight_PreRoundCountDown_InputBlock_C_Tick::InDeltaTime' has a wrong offset!");

// Function UI_GunFight_PreRoundCountDown_InputBlock.UI_GunFight_PreRoundCountDown_InputBlock_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_GunFight_PreRoundCountDown_InputBlock_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_GunFight_PreRoundCountDown_InputBlock_C_PreConstruct) == 0x000001, "Wrong alignment on UI_GunFight_PreRoundCountDown_InputBlock_C_PreConstruct");
static_assert(sizeof(UI_GunFight_PreRoundCountDown_InputBlock_C_PreConstruct) == 0x000001, "Wrong size on UI_GunFight_PreRoundCountDown_InputBlock_C_PreConstruct");
static_assert(offsetof(UI_GunFight_PreRoundCountDown_InputBlock_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_GunFight_PreRoundCountDown_InputBlock_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_GunFight_PreRoundCountDown_InputBlock.UI_GunFight_PreRoundCountDown_InputBlock_C.Set PreRound Time
// 0x0004 (0x0004 - 0x0000)
struct UI_GunFight_PreRoundCountDown_InputBlock_C_Set_PreRound_Time final
{
public:
	int32                                         Time_To_Round_Start;                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GunFight_PreRoundCountDown_InputBlock_C_Set_PreRound_Time) == 0x000004, "Wrong alignment on UI_GunFight_PreRoundCountDown_InputBlock_C_Set_PreRound_Time");
static_assert(sizeof(UI_GunFight_PreRoundCountDown_InputBlock_C_Set_PreRound_Time) == 0x000004, "Wrong size on UI_GunFight_PreRoundCountDown_InputBlock_C_Set_PreRound_Time");
static_assert(offsetof(UI_GunFight_PreRoundCountDown_InputBlock_C_Set_PreRound_Time, Time_To_Round_Start) == 0x000000, "Member 'UI_GunFight_PreRoundCountDown_InputBlock_C_Set_PreRound_Time::Time_To_Round_Start' has a wrong offset!");

}

