#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AirDropContainer_Base

#include "Basic.hpp"

#include "BP_AirDropContainer_Base_classes.hpp"
#include "BP_AirDropContainer_Base_parameters.hpp"


namespace SDK
{

// Function BP_AirDropContainer_Base.BP_AirDropContainer_Base_C.ExecuteUbergraph_BP_AirDropContainer_Base
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AirDropContainer_Base_C::ExecuteUbergraph_BP_AirDropContainer_Base(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AirDropContainer_Base_C", "ExecuteUbergraph_BP_AirDropContainer_Base");

	Params::BP_AirDropContainer_Base_C_ExecuteUbergraph_BP_AirDropContainer_Base Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AirDropContainer_Base.BP_AirDropContainer_Base_C.BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_4_PreInteraction End on Server__DelegateSignature
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UInteractionItemComponent*        Sender                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Interacting_Actor                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Canceled                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AirDropContainer_Base_C::BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_4_PreInteraction_End_on_Server__DelegateSignature(class UInteractionItemComponent* Sender, class AActor* Interacting_Actor, bool Canceled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AirDropContainer_Base_C", "BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_4_PreInteraction End on Server__DelegateSignature");

	Params::BP_AirDropContainer_Base_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_4_PreInteraction_End_on_Server__DelegateSignature Parms{};

	Parms.Sender = Sender;
	Parms.Interacting_Actor = Interacting_Actor;
	Parms.Canceled = Canceled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AirDropContainer_Base.BP_AirDropContainer_Base_C.BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_5_PreInteraction Start on Server__DelegateSignature
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UInteractionItemComponent*        Sender                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Interacting_Actor                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AirDropContainer_Base_C::BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_5_PreInteraction_Start_on_Server__DelegateSignature(class UInteractionItemComponent* Sender, class AActor* Interacting_Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AirDropContainer_Base_C", "BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_5_PreInteraction Start on Server__DelegateSignature");

	Params::BP_AirDropContainer_Base_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_5_PreInteraction_Start_on_Server__DelegateSignature Parms{};

	Parms.Sender = Sender;
	Parms.Interacting_Actor = Interacting_Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AirDropContainer_Base.BP_AirDropContainer_Base_C.Landed
// (BlueprintCallable, BlueprintEvent)

void ABP_AirDropContainer_Base_C::Landed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AirDropContainer_Base_C", "Landed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AirDropContainer_Base.BP_AirDropContainer_Base_C.Loot Stored
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Item_Type                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AirDropContainer_Base_C::Loot_Stored(class UClass* Item_Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AirDropContainer_Base_C", "Loot Stored");

	Params::BP_AirDropContainer_Base_C_Loot_Stored Parms{};

	Parms.Item_Type = Item_Type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AirDropContainer_Base.BP_AirDropContainer_Base_C.Loot Taken
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Item_Type                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AirDropContainer_Base_C::Loot_Taken(class UClass* Item_Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AirDropContainer_Base_C", "Loot Taken");

	Params::BP_AirDropContainer_Base_C_Loot_Taken Parms{};

	Parms.Item_Type = Item_Type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AirDropContainer_Base.BP_AirDropContainer_Base_C.BndEvt__Cube1_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_AirDropContainer_Base_C::BndEvt__Cube1_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AirDropContainer_Base_C", "BndEvt__Cube1_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature");

	Params::BP_AirDropContainer_Base_C_BndEvt__Cube1_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AirDropContainer_Base.BP_AirDropContainer_Base_C.BoxColliderOverlap
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Other_Actor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AirDropContainer_Base_C::BoxColliderOverlap(class AActor* Other_Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AirDropContainer_Base_C", "BoxColliderOverlap");

	Params::BP_AirDropContainer_Base_C_BoxColliderOverlap Parms{};

	Parms.Other_Actor = Other_Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AirDropContainer_Base.BP_AirDropContainer_Base_C.CollapseParachute
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_AirDropContainer_Base_C::CollapseParachute()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AirDropContainer_Base_C", "CollapseParachute");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AirDropContainer_Base.BP_AirDropContainer_Base_C.VisualizeEmptyLoot
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_AirDropContainer_Base_C::VisualizeEmptyLoot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AirDropContainer_Base_C", "VisualizeEmptyLoot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AirDropContainer_Base.BP_AirDropContainer_Base_C.CollisionEffect
// (BlueprintCallable, BlueprintEvent)

void ABP_AirDropContainer_Base_C::CollisionEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AirDropContainer_Base_C", "CollisionEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AirDropContainer_Base.BP_AirDropContainer_Base_C.Parachute Collapse Timeline__UpdateFunc
// (BlueprintEvent)

void ABP_AirDropContainer_Base_C::Parachute_Collapse_Timeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AirDropContainer_Base_C", "Parachute Collapse Timeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AirDropContainer_Base.BP_AirDropContainer_Base_C.Parachute Collapse Timeline__FinishedFunc
// (BlueprintEvent)

void ABP_AirDropContainer_Base_C::Parachute_Collapse_Timeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AirDropContainer_Base_C", "Parachute Collapse Timeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AirDropContainer_Base.BP_AirDropContainer_Base_C.OnRep_Is Falling On Parachute
// (BlueprintCallable, BlueprintEvent)

void ABP_AirDropContainer_Base_C::OnRep_Is_Falling_On_Parachute()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AirDropContainer_Base_C", "OnRep_Is Falling On Parachute");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AirDropContainer_Base.BP_AirDropContainer_Base_C.AddLoot
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UClass*>                   Array                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_AirDropContainer_Base_C::AddLoot(TArray<class UClass*>& Array)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AirDropContainer_Base_C", "AddLoot");

	Params::BP_AirDropContainer_Base_C_AddLoot Parms{};

	Parms.Array = std::move(Array);

	UObject::ProcessEvent(Func, &Parms);

	Array = std::move(Parms.Array);
}


// Function BP_AirDropContainer_Base.BP_AirDropContainer_Base_C.Check Loot Presence
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_AirDropContainer_Base_C::Check_Loot_Presence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AirDropContainer_Base_C", "Check Loot Presence");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AirDropContainer_Base.BP_AirDropContainer_Base_C.Loot Accessed
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_AirDropContainer_Base_C::Loot_Accessed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AirDropContainer_Base_C", "Loot Accessed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AirDropContainer_Base.BP_AirDropContainer_Base_C.Close Local Inventory UI
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_AirDropContainer_Base_C::Close_Local_Inventory_UI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AirDropContainer_Base_C", "Close Local Inventory UI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AirDropContainer_Base.BP_AirDropContainer_Base_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_AirDropContainer_Base_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AirDropContainer_Base_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AirDropContainer_Base.BP_AirDropContainer_Base_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AirDropContainer_Base_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AirDropContainer_Base_C", "ReceiveTick");

	Params::BP_AirDropContainer_Base_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AirDropContainer_Base.BP_AirDropContainer_Base_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_AirDropContainer_Base_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AirDropContainer_Base_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AirDropContainer_Base.BP_AirDropContainer_Base_C.Determine State Based On Current Circumstances
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_Lootable_State                        Appropriate_State                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AirDropContainer_Base_C::Determine_State_Based_On_Current_Circumstances(E_Lootable_State* Appropriate_State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AirDropContainer_Base_C", "Determine State Based On Current Circumstances");

	Params::BP_AirDropContainer_Base_C_Determine_State_Based_On_Current_Circumstances Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Appropriate_State != nullptr)
		*Appropriate_State = Parms.Appropriate_State;
}

}

