#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GMComponent_ADM_Base

#include "Basic.hpp"

#include "BP_GMComponent_ADM_Base_classes.hpp"
#include "BP_GMComponent_ADM_Base_parameters.hpp"


namespace SDK
{

// Function BP_GMComponent_ADM_Base.BP_GMComponent_ADM_Base_C.ExecuteUbergraph_BP_GMComponent_ADM_Base
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GMComponent_ADM_Base_C::ExecuteUbergraph_BP_GMComponent_ADM_Base(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GMComponent_ADM_Base_C", "ExecuteUbergraph_BP_GMComponent_ADM_Base");

	Params::BP_GMComponent_ADM_Base_C_ExecuteUbergraph_BP_GMComponent_ADM_Base Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GMComponent_ADM_Base.BP_GMComponent_ADM_Base_C.Player Logging Out
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PlayerController_AirDropModular_C*Exiting_Controller                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GMComponent_ADM_Base_C::Player_Logging_Out(class ABP_PlayerController_AirDropModular_C* Exiting_Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GMComponent_ADM_Base_C", "Player Logging Out");

	Params::BP_GMComponent_ADM_Base_C_Player_Logging_Out Parms{};

	Parms.Exiting_Controller = Exiting_Controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GMComponent_ADM_Base.BP_GMComponent_ADM_Base_C.Player Logged In
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PlayerController_AirDropModular_C*New_Controller                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GMComponent_ADM_Base_C::Player_Logged_In(class ABP_PlayerController_AirDropModular_C* New_Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GMComponent_ADM_Base_C", "Player Logged In");

	Params::BP_GMComponent_ADM_Base_C_Player_Logged_In Parms{};

	Parms.New_Controller = New_Controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GMComponent_ADM_Base.BP_GMComponent_ADM_Base_C.Initialize Component
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void UBP_GMComponent_ADM_Base_C::Initialize_Component()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GMComponent_ADM_Base_C", "Initialize Component");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GMComponent_ADM_Base.BP_GMComponent_ADM_Base_C.ReceiveEndPlay
// (Event, Public, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GMComponent_ADM_Base_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GMComponent_ADM_Base_C", "ReceiveEndPlay");

	Params::BP_GMComponent_ADM_Base_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GMComponent_ADM_Base.BP_GMComponent_ADM_Base_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_GMComponent_ADM_Base_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GMComponent_ADM_Base_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GMComponent_ADM_Base.BP_GMComponent_ADM_Base_C.Hide Passive UI
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void UBP_GMComponent_ADM_Base_C::Hide_Passive_UI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GMComponent_ADM_Base_C", "Hide Passive UI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GMComponent_ADM_Base.BP_GMComponent_ADM_Base_C.Show Passive UI
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void UBP_GMComponent_ADM_Base_C::Show_Passive_UI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GMComponent_ADM_Base_C", "Show Passive UI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GMComponent_ADM_Base.BP_GMComponent_ADM_Base_C.Flash Debug UI Tab Labels
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Number_of_Flashes                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Flash_Label_Color                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GMComponent_ADM_Base_C::Flash_Debug_UI_Tab_Labels(int32 Number_of_Flashes, const struct FLinearColor& Flash_Label_Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GMComponent_ADM_Base_C", "Flash Debug UI Tab Labels");

	Params::BP_GMComponent_ADM_Base_C_Flash_Debug_UI_Tab_Labels Parms{};

	Parms.Number_of_Flashes = Number_of_Flashes;
	Parms.Flash_Label_Color = std::move(Flash_Label_Color);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GMComponent_ADM_Base.BP_GMComponent_ADM_Base_C.Player Closed Debug UI
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PlayerController_AirDropModular_C*Player_Controller                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GMComponent_ADM_Base_C::Player_Closed_Debug_UI(class ABP_PlayerController_AirDropModular_C* Player_Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GMComponent_ADM_Base_C", "Player Closed Debug UI");

	Params::BP_GMComponent_ADM_Base_C_Player_Closed_Debug_UI Parms{};

	Parms.Player_Controller = Player_Controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GMComponent_ADM_Base.BP_GMComponent_ADM_Base_C.Player Opened Debug UI
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PlayerController_AirDropModular_C*Player_Controller                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GMComponent_ADM_Base_C::Player_Opened_Debug_UI(class ABP_PlayerController_AirDropModular_C* Player_Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GMComponent_ADM_Base_C", "Player Opened Debug UI");

	Params::BP_GMComponent_ADM_Base_C_Player_Opened_Debug_UI Parms{};

	Parms.Player_Controller = Player_Controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GMComponent_ADM_Base.BP_GMComponent_ADM_Base_C.Game Mode Toggled
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Game_Mode_Is_Running                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_GMComponent_ADM_Base_C::Game_Mode_Toggled(bool Game_Mode_Is_Running)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GMComponent_ADM_Base_C", "Game Mode Toggled");

	Params::BP_GMComponent_ADM_Base_C_Game_Mode_Toggled Parms{};

	Parms.Game_Mode_Is_Running = Game_Mode_Is_Running;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GMComponent_ADM_Base.BP_GMComponent_ADM_Base_C.Create PCComponent for Player Controller
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PlayerController_AirDropModular_C*Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBP_PCComponent_ADM_C*            Player_Controller_Component                            (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GMComponent_ADM_Base_C::Create_PCComponent_for_Player_Controller(class ABP_PlayerController_AirDropModular_C* Controller, class UBP_PCComponent_ADM_C** Player_Controller_Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GMComponent_ADM_Base_C", "Create PCComponent for Player Controller");

	Params::BP_GMComponent_ADM_Base_C_Create_PCComponent_for_Player_Controller Parms{};

	Parms.Controller = Controller;

	UObject::ProcessEvent(Func, &Parms);

	if (Player_Controller_Component != nullptr)
		*Player_Controller_Component = Parms.Player_Controller_Component;
}


// Function BP_GMComponent_ADM_Base.BP_GMComponent_ADM_Base_C.Get PCComponent for Player Controller
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PlayerController_AirDropModular_C*Player_Controller                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBP_PCComponent_ADM_C*            Player_Controller_Component                            (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Found                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_GMComponent_ADM_Base_C::Get_PCComponent_for_Player_Controller(class ABP_PlayerController_AirDropModular_C* Player_Controller, class UBP_PCComponent_ADM_C** Player_Controller_Component, bool* Found)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GMComponent_ADM_Base_C", "Get PCComponent for Player Controller");

	Params::BP_GMComponent_ADM_Base_C_Get_PCComponent_for_Player_Controller Parms{};

	Parms.Player_Controller = Player_Controller;

	UObject::ProcessEvent(Func, &Parms);

	if (Player_Controller_Component != nullptr)
		*Player_Controller_Component = Parms.Player_Controller_Component;

	if (Found != nullptr)
		*Found = Parms.Found;
}


// Function BP_GMComponent_ADM_Base.BP_GMComponent_ADM_Base_C.Initialize Bindings
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_GMComponent_ADM_Base_C::Initialize_Bindings(bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GMComponent_ADM_Base_C", "Initialize Bindings");

	Params::BP_GMComponent_ADM_Base_C_Initialize_Bindings Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_GMComponent_ADM_Base.BP_GMComponent_ADM_Base_C.Create GSComponent for Game State
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_GameState_AirDropModular_C*   Game_State                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBP_GSComponent_ADM_C*            Game_State_Component_0                                 (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GMComponent_ADM_Base_C::Create_GSComponent_for_Game_State(class ABP_GameState_AirDropModular_C* Game_State, class UBP_GSComponent_ADM_C** Game_State_Component_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GMComponent_ADM_Base_C", "Create GSComponent for Game State");

	Params::BP_GMComponent_ADM_Base_C_Create_GSComponent_for_Game_State Parms{};

	Parms.Game_State = Game_State;

	UObject::ProcessEvent(Func, &Parms);

	if (Game_State_Component_0 != nullptr)
		*Game_State_Component_0 = Parms.Game_State_Component_0;
}


// Function BP_GMComponent_ADM_Base.BP_GMComponent_ADM_Base_C.Is Player Winner
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PlayerController_AirDropModular_C*Player_Controller                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Player_Is_Winner                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Output_is_Valid                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_GMComponent_ADM_Base_C::Is_Player_Winner(class ABP_PlayerController_AirDropModular_C* Player_Controller, bool* Player_Is_Winner, bool* Output_is_Valid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GMComponent_ADM_Base_C", "Is Player Winner");

	Params::BP_GMComponent_ADM_Base_C_Is_Player_Winner Parms{};

	Parms.Player_Controller = Player_Controller;

	UObject::ProcessEvent(Func, &Parms);

	if (Player_Is_Winner != nullptr)
		*Player_Is_Winner = Parms.Player_Is_Winner;

	if (Output_is_Valid != nullptr)
		*Output_is_Valid = Parms.Output_is_Valid;
}


// Function BP_GMComponent_ADM_Base.BP_GMComponent_ADM_Base_C.Get PCComponents for Player Controllers
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ABP_PlayerController_AirDropModular_C*>Player_Controllers                                     (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class UBP_PCComponent_ADM_C*>    Player_Controller_Component                            (Parm, OutParm, ContainsInstancedReference)

void UBP_GMComponent_ADM_Base_C::Get_PCComponents_for_Player_Controllers(TArray<class ABP_PlayerController_AirDropModular_C*>& Player_Controllers, TArray<class UBP_PCComponent_ADM_C*>* Player_Controller_Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GMComponent_ADM_Base_C", "Get PCComponents for Player Controllers");

	Params::BP_GMComponent_ADM_Base_C_Get_PCComponents_for_Player_Controllers Parms{};

	Parms.Player_Controllers = std::move(Player_Controllers);

	UObject::ProcessEvent(Func, &Parms);

	Player_Controllers = std::move(Parms.Player_Controllers);

	if (Player_Controller_Component != nullptr)
		*Player_Controller_Component = std::move(Parms.Player_Controller_Component);
}


// Function BP_GMComponent_ADM_Base.BP_GMComponent_ADM_Base_C.Ready To Start Match
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_GMComponent_ADM_Base_C::Ready_To_Start_Match(bool* Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GMComponent_ADM_Base_C", "Ready To Start Match");

	Params::BP_GMComponent_ADM_Base_C_Ready_To_Start_Match Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_GMComponent_ADM_Base.BP_GMComponent_ADM_Base_C.Get Rewards For Player
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PlayerController_AirDropModular_C*Player_Controller                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class FString>                   Rewards                                                (Parm, OutParm)

void UBP_GMComponent_ADM_Base_C::Get_Rewards_For_Player(class ABP_PlayerController_AirDropModular_C* Player_Controller, TArray<class FString>* Rewards)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GMComponent_ADM_Base_C", "Get Rewards For Player");

	Params::BP_GMComponent_ADM_Base_C_Get_Rewards_For_Player Parms{};

	Parms.Player_Controller = Player_Controller;

	UObject::ProcessEvent(Func, &Parms);

	if (Rewards != nullptr)
		*Rewards = std::move(Parms.Rewards);
}


// Function BP_GMComponent_ADM_Base.BP_GMComponent_ADM_Base_C.Is Initialization Successful
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsInitialized                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_GMComponent_ADM_Base_C::Is_Initialization_Successful(bool* IsInitialized)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GMComponent_ADM_Base_C", "Is Initialization Successful");

	Params::BP_GMComponent_ADM_Base_C_Is_Initialization_Successful Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsInitialized != nullptr)
		*IsInitialized = Parms.IsInitialized;
}

}

