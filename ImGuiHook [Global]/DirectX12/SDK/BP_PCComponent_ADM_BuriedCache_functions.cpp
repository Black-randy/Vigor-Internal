#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PCComponent_ADM_BuriedCache

#include "Basic.hpp"

#include "BP_PCComponent_ADM_BuriedCache_classes.hpp"
#include "BP_PCComponent_ADM_BuriedCache_parameters.hpp"


namespace SDK
{

// Function BP_PCComponent_ADM_BuriedCache.BP_PCComponent_ADM_BuriedCache_C.ExecuteUbergraph_BP_PCComponent_ADM_BuriedCache
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PCComponent_ADM_BuriedCache_C::ExecuteUbergraph_BP_PCComponent_ADM_BuriedCache(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PCComponent_ADM_BuriedCache_C", "ExecuteUbergraph_BP_PCComponent_ADM_BuriedCache");

	Params::BP_PCComponent_ADM_BuriedCache_C_ExecuteUbergraph_BP_PCComponent_ADM_BuriedCache Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PCComponent_ADM_BuriedCache.BP_PCComponent_ADM_BuriedCache_C.Add buried cache map marker
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PCComponent_ADM_BuriedCache_C::Add_buried_cache_map_marker(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PCComponent_ADM_BuriedCache_C", "Add buried cache map marker");

	Params::BP_PCComponent_ADM_BuriedCache_C_Add_buried_cache_map_marker Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PCComponent_ADM_BuriedCache.BP_PCComponent_ADM_BuriedCache_C.Polaroid Observed for Relevant Time
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Polaroid                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PCComponent_ADM_BuriedCache_C::Polaroid_Observed_for_Relevant_Time(class UClass* Polaroid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PCComponent_ADM_BuriedCache_C", "Polaroid Observed for Relevant Time");

	Params::BP_PCComponent_ADM_BuriedCache_C_Polaroid_Observed_for_Relevant_Time Parms{};

	Parms.Polaroid = Polaroid;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PCComponent_ADM_BuriedCache.BP_PCComponent_ADM_BuriedCache_C.Cache Accessed
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_ADM_BuriedCache_C*            Cache                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Already_Excavated                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UClass*                           Associated_Polaroid                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Locked                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PCComponent_ADM_BuriedCache_C::Cache_Accessed(class ABP_ADM_BuriedCache_C* Cache, bool Already_Excavated, class UClass* Associated_Polaroid, bool Locked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PCComponent_ADM_BuriedCache_C", "Cache Accessed");

	Params::BP_PCComponent_ADM_BuriedCache_C_Cache_Accessed Parms{};

	Parms.Cache = Cache;
	Parms.Already_Excavated = Already_Excavated;
	Parms.Associated_Polaroid = Associated_Polaroid;
	Parms.Locked = Locked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PCComponent_ADM_BuriedCache.BP_PCComponent_ADM_BuriedCache_C.Bag Item Stored
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class AItemForBackpack>     BagItemClass                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// int32                                   Count                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PCComponent_ADM_BuriedCache_C::Bag_Item_Stored(TSubclassOf<class AItemForBackpack> BagItemClass, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PCComponent_ADM_BuriedCache_C", "Bag Item Stored");

	Params::BP_PCComponent_ADM_BuriedCache_C_Bag_Item_Stored Parms{};

	Parms.BagItemClass = BagItemClass;
	Parms.Count = Count;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PCComponent_ADM_BuriedCache.BP_PCComponent_ADM_BuriedCache_C.Character Possessed on Server
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Character_C*                  Possessed_Character                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PCComponent_ADM_BuriedCache_C::Character_Possessed_on_Server(class ABP_Character_C* Possessed_Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PCComponent_ADM_BuriedCache_C", "Character Possessed on Server");

	Params::BP_PCComponent_ADM_BuriedCache_C_Character_Possessed_on_Server Parms{};

	Parms.Possessed_Character = Possessed_Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PCComponent_ADM_BuriedCache.BP_PCComponent_ADM_BuriedCache_C.Item Destroyed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Item_Type                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           Widget_Type                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PCComponent_ADM_BuriedCache_C::Item_Destroyed(class UClass* Item_Type, class UClass* Widget_Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PCComponent_ADM_BuriedCache_C", "Item Destroyed");

	Params::BP_PCComponent_ADM_BuriedCache_C_Item_Destroyed Parms{};

	Parms.Item_Type = Item_Type;
	Parms.Widget_Type = Widget_Type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PCComponent_ADM_BuriedCache.BP_PCComponent_ADM_BuriedCache_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_PCComponent_ADM_BuriedCache_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PCComponent_ADM_BuriedCache_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PCComponent_ADM_BuriedCache.BP_PCComponent_ADM_BuriedCache_C.Clear Ignoring Flag
// (BlueprintCallable, BlueprintEvent)

void UBP_PCComponent_ADM_BuriedCache_C::Clear_Ignoring_Flag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PCComponent_ADM_BuriedCache_C", "Clear Ignoring Flag");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PCComponent_ADM_BuriedCache.BP_PCComponent_ADM_BuriedCache_C.Delayed Polaroid UI Closure
// (BlueprintCallable, BlueprintEvent)

void UBP_PCComponent_ADM_BuriedCache_C::Delayed_Polaroid_UI_Closure()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PCComponent_ADM_BuriedCache_C", "Delayed Polaroid UI Closure");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PCComponent_ADM_BuriedCache.BP_PCComponent_ADM_BuriedCache_C.Close Polaroid UI
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUI_ItemGridSlot_C*               Requesting_Slot                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PCComponent_ADM_BuriedCache_C::Close_Polaroid_UI(class UUI_ItemGridSlot_C* Requesting_Slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PCComponent_ADM_BuriedCache_C", "Close Polaroid UI");

	Params::BP_PCComponent_ADM_BuriedCache_C_Close_Polaroid_UI Parms{};

	Parms.Requesting_Slot = Requesting_Slot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PCComponent_ADM_BuriedCache.BP_PCComponent_ADM_BuriedCache_C.Open Polariod UI
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Polaroid_Item                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UUI_ItemGridSlot_C*               Requesting_Slot                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PCComponent_ADM_BuriedCache_C::Open_Polariod_UI(const class UClass*& Polaroid_Item, class UUI_ItemGridSlot_C* Requesting_Slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PCComponent_ADM_BuriedCache_C", "Open Polariod UI");

	Params::BP_PCComponent_ADM_BuriedCache_C_Open_Polariod_UI Parms{};

	Parms.Polaroid_Item = Polaroid_Item;
	Parms.Requesting_Slot = Requesting_Slot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PCComponent_ADM_BuriedCache.BP_PCComponent_ADM_BuriedCache_C.Mark Buried Cache Key Locations
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void UBP_PCComponent_ADM_BuriedCache_C::Mark_Buried_Cache_Key_Locations()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PCComponent_ADM_BuriedCache_C", "Mark Buried Cache Key Locations");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PCComponent_ADM_BuriedCache.BP_PCComponent_ADM_BuriedCache_C.Mark Dummy Cache Locations
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void UBP_PCComponent_ADM_BuriedCache_C::Mark_Dummy_Cache_Locations()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PCComponent_ADM_BuriedCache_C", "Mark Dummy Cache Locations");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PCComponent_ADM_BuriedCache.BP_PCComponent_ADM_BuriedCache_C.Mark Chosen Cache Locations
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void UBP_PCComponent_ADM_BuriedCache_C::Mark_Chosen_Cache_Locations()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PCComponent_ADM_BuriedCache_C", "Mark Chosen Cache Locations");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PCComponent_ADM_BuriedCache.BP_PCComponent_ADM_BuriedCache_C.Get Buried Cache Key
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void UBP_PCComponent_ADM_BuriedCache_C::Get_Buried_Cache_Key()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PCComponent_ADM_BuriedCache_C", "Get Buried Cache Key");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PCComponent_ADM_BuriedCache.BP_PCComponent_ADM_BuriedCache_C.Spawn All Caches
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void UBP_PCComponent_ADM_BuriedCache_C::Spawn_All_Caches()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PCComponent_ADM_BuriedCache_C", "Spawn All Caches");

	UObject::ProcessEvent(Func, nullptr);
}

}

