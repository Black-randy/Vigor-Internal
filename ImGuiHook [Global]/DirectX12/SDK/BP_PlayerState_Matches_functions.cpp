#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerState_Matches

#include "Basic.hpp"

#include "BP_PlayerState_Matches_classes.hpp"
#include "BP_PlayerState_Matches_parameters.hpp"


namespace SDK
{

// Function BP_PlayerState_Matches.BP_PlayerState_Matches_C.ExecuteUbergraph_BP_PlayerState_Matches
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerState_Matches_C::ExecuteUbergraph_BP_PlayerState_Matches(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_Matches_C", "ExecuteUbergraph_BP_PlayerState_Matches");

	Params::BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerState_Matches.BP_PlayerState_Matches_C.Set Threat and Teamkiller Status
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Is_Threat_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Is_Teamkiller                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PlayerState_Matches_C::Set_Threat_and_Teamkiller_Status(bool Is_Threat_0, bool Is_Teamkiller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_Matches_C", "Set Threat and Teamkiller Status");

	Params::BP_PlayerState_Matches_C_Set_Threat_and_Teamkiller_Status Parms{};

	Parms.Is_Threat_0 = Is_Threat_0;
	Parms.Is_Teamkiller = Is_Teamkiller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerState_Matches.BP_PlayerState_Matches_C.OnLobbyFinished
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Delayed_Match_Start_Was_Used                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PlayerState_Matches_C::OnLobbyFinished(bool Delayed_Match_Start_Was_Used)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_Matches_C", "OnLobbyFinished");

	Params::BP_PlayerState_Matches_C_OnLobbyFinished Parms{};

	Parms.Delayed_Match_Start_Was_Used = Delayed_Match_Start_Was_Used;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerState_Matches.BP_PlayerState_Matches_C.Player Protected Teammate
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_PlayerState_Matches_C::Player_Protected_Teammate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_Matches_C", "Player Protected Teammate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerState_Matches.BP_PlayerState_Matches_C.Save Battle Pass Info on Server
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Level                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Premium                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PlayerState_Matches_C::Save_Battle_Pass_Info_on_Server(int32 Level, bool Premium)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_Matches_C", "Save Battle Pass Info on Server");

	Params::BP_PlayerState_Matches_C_Save_Battle_Pass_Info_on_Server Parms{};

	Parms.Level = Level;
	Parms.Premium = Premium;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerState_Matches.BP_PlayerState_Matches_C.Battle Pass System Ready
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerState_Matches_C::Battle_Pass_System_Ready()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_Matches_C", "Battle Pass System Ready");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerState_Matches.BP_PlayerState_Matches_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_PlayerState_Matches_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_Matches_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerState_Matches.BP_PlayerState_Matches_C.Player Left by Countdown
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_PlayerState_Matches_C::Player_Left_by_Countdown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_Matches_C", "Player Left by Countdown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerState_Matches.BP_PlayerState_Matches_C.Teammate was killed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHumanCharacter*                  Killer                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerState_Matches_C::Teammate_was_killed(class AHumanCharacter* Killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_Matches_C", "Teammate was killed");

	Params::BP_PlayerState_Matches_C_Teammate_was_killed Parms{};

	Parms.Killer = Killer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerState_Matches.BP_PlayerState_Matches_C.OnRep_UserCloudInfo
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerState_Matches_C::OnRep_UserCloudInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_Matches_C", "OnRep_UserCloudInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerState_Matches.BP_PlayerState_Matches_C.Log Gameplay Event
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Gameplay_Event_Name                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Amount                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PlayerState_Matches_C::Log_Gameplay_Event(class FName Gameplay_Event_Name, int32 Amount, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_Matches_C", "Log Gameplay Event");

	Params::BP_PlayerState_Matches_C_Log_Gameplay_Event Parms{};

	Parms.Gameplay_Event_Name = Gameplay_Event_Name;
	Parms.Amount = Amount;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_PlayerState_Matches.BP_PlayerState_Matches_C.Get Logged Gameplay Events
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TMap<class FName, int32>                Logged_Gameplay_Events_0                               (Parm, OutParm)

void ABP_PlayerState_Matches_C::Get_Logged_Gameplay_Events(TMap<class FName, int32>* Logged_Gameplay_Events_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_Matches_C", "Get Logged Gameplay Events");

	Params::BP_PlayerState_Matches_C_Get_Logged_Gameplay_Events Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Logged_Gameplay_Events_0 != nullptr)
		*Logged_Gameplay_Events_0 = std::move(Parms.Logged_Gameplay_Events_0);
}


// Function BP_PlayerState_Matches.BP_PlayerState_Matches_C.Is Kill Revenge
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerState*                     Killed_Player_State                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Is_Revenge                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PlayerState_Matches_C::Is_Kill_Revenge(class APlayerState* Killed_Player_State, bool* Is_Revenge)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_Matches_C", "Is Kill Revenge");

	Params::BP_PlayerState_Matches_C_Is_Kill_Revenge Parms{};

	Parms.Killed_Player_State = Killed_Player_State;

	UObject::ProcessEvent(Func, &Parms);

	if (Is_Revenge != nullptr)
		*Is_Revenge = Parms.Is_Revenge;
}


// Function BP_PlayerState_Matches.BP_PlayerState_Matches_C.Did Player Protect Teammate on Leave Match
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Did_Protect                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PlayerState_Matches_C::Did_Player_Protect_Teammate_on_Leave_Match(bool* Did_Protect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_Matches_C", "Did Player Protect Teammate on Leave Match");

	Params::BP_PlayerState_Matches_C_Did_Player_Protect_Teammate_on_Leave_Match Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Did_Protect != nullptr)
		*Did_Protect = Parms.Did_Protect;
}

}

