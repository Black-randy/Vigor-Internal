#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Mannequin_WinnerScreen_GunFight

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Struct_GunFightStatistics_structs.hpp"
#include "BP_Mannequin_WinnerScreen_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Mannequin_WinnerScreen_GunFight.BP_Mannequin_WinnerScreen_GunFight_C
// 0x0088 (0x03C0 - 0x0338)
class ABP_Mannequin_WinnerScreen_GunFight_C final : public ABP_Mannequin_WinnerScreen_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Mannequin_WinnerScreen_GunFight_C; // 0x0338(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetComponent*                       Widget;                                            // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FStruct_GunFightStatistics             Statistics;                                        // 0x0348(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             ScorePresentationEnded;                            // 0x0398(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             ScorePresentationUpdated;                          // 0x03A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         TeamIndex;                                         // 0x03B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ScoreBoostCount;                                   // 0x03BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ScorePresentationEnded__DelegateSignature(class ABP_Mannequin_WinnerScreen_GunFight_C* Mannequin, bool Skipped);
	void ScorePresentationUpdated__DelegateSignature(int32 ScoreShown);
	void ExecuteUbergraph_BP_Mannequin_WinnerScreen_GunFight(int32 EntryPoint);
	void PlayLooserEmotes();
	void OnCurrentShownScoreChanged(float Percent);
	void OnScoreAnimEndedEvent(class UUI_TeamMemberMarker_GunfightRewardScreen_C* Widget_0, bool Skipped);
	void InitFromCharacter(class AHumanCharacter* Character);
	void StartScoreAdditionWidget(float TimeToFill);
	void SkipScoreAdditionWidget();
	void GetIsCurrentlyAnimatingScore(bool* IsActive);
	void SetScoreWidgetVisibility(bool bVisible);
	void InitializeScoreWidget(bool bWasMVP);
	void InitVariables(const struct FStruct_GunFightStatistics& Statistics_0, int32 TeamIndex_0, int32 BoostCount);
	void ToggleScoreWidgetVisibility();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Mannequin_WinnerScreen_GunFight_C">();
	}
	static class ABP_Mannequin_WinnerScreen_GunFight_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Mannequin_WinnerScreen_GunFight_C>();
	}
};
static_assert(alignof(ABP_Mannequin_WinnerScreen_GunFight_C) == 0x000008, "Wrong alignment on ABP_Mannequin_WinnerScreen_GunFight_C");
static_assert(sizeof(ABP_Mannequin_WinnerScreen_GunFight_C) == 0x0003C0, "Wrong size on ABP_Mannequin_WinnerScreen_GunFight_C");
static_assert(offsetof(ABP_Mannequin_WinnerScreen_GunFight_C, UberGraphFrame_BP_Mannequin_WinnerScreen_GunFight_C) == 0x000338, "Member 'ABP_Mannequin_WinnerScreen_GunFight_C::UberGraphFrame_BP_Mannequin_WinnerScreen_GunFight_C' has a wrong offset!");
static_assert(offsetof(ABP_Mannequin_WinnerScreen_GunFight_C, Widget) == 0x000340, "Member 'ABP_Mannequin_WinnerScreen_GunFight_C::Widget' has a wrong offset!");
static_assert(offsetof(ABP_Mannequin_WinnerScreen_GunFight_C, Statistics) == 0x000348, "Member 'ABP_Mannequin_WinnerScreen_GunFight_C::Statistics' has a wrong offset!");
static_assert(offsetof(ABP_Mannequin_WinnerScreen_GunFight_C, ScorePresentationEnded) == 0x000398, "Member 'ABP_Mannequin_WinnerScreen_GunFight_C::ScorePresentationEnded' has a wrong offset!");
static_assert(offsetof(ABP_Mannequin_WinnerScreen_GunFight_C, ScorePresentationUpdated) == 0x0003A8, "Member 'ABP_Mannequin_WinnerScreen_GunFight_C::ScorePresentationUpdated' has a wrong offset!");
static_assert(offsetof(ABP_Mannequin_WinnerScreen_GunFight_C, TeamIndex) == 0x0003B8, "Member 'ABP_Mannequin_WinnerScreen_GunFight_C::TeamIndex' has a wrong offset!");
static_assert(offsetof(ABP_Mannequin_WinnerScreen_GunFight_C, ScoreBoostCount) == 0x0003BC, "Member 'ABP_Mannequin_WinnerScreen_GunFight_C::ScoreBoostCount' has a wrong offset!");

}

