#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerController_Tutorial

#include "Basic.hpp"

#include "Flame_structs.hpp"
#include "BP_PlayerController_Script_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PlayerController_Tutorial.BP_PlayerController_Tutorial_C
// 0x0018 (0x0D18 - 0x0D00)
class ABP_PlayerController_Tutorial_C : public ABP_PlayerController_Script_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_PlayerController_Tutorial_C;     // 0x0D00(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_MatchMusicComponent_C*              MatchMusic;                                        // 0x0D08(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_MatchMusicComponent_C*              BP_MatchMusicComponent;                            // 0x0D10(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_PlayerController_Tutorial(int32 EntryPoint);
	void SkipTutorial();
	void ReceiveBeginPlay();
	void LeaveSession(class FName MapToReturnTo_0);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void Is_Player_Ready_for_Analytics(bool* Is_Client_Ready);

	EGameScenario GetGameScenario() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PlayerController_Tutorial_C">();
	}
	static class ABP_PlayerController_Tutorial_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_PlayerController_Tutorial_C>();
	}
};
static_assert(alignof(ABP_PlayerController_Tutorial_C) == 0x000008, "Wrong alignment on ABP_PlayerController_Tutorial_C");
static_assert(sizeof(ABP_PlayerController_Tutorial_C) == 0x000D18, "Wrong size on ABP_PlayerController_Tutorial_C");
static_assert(offsetof(ABP_PlayerController_Tutorial_C, UberGraphFrame_BP_PlayerController_Tutorial_C) == 0x000D00, "Member 'ABP_PlayerController_Tutorial_C::UberGraphFrame_BP_PlayerController_Tutorial_C' has a wrong offset!");
static_assert(offsetof(ABP_PlayerController_Tutorial_C, MatchMusic) == 0x000D08, "Member 'ABP_PlayerController_Tutorial_C::MatchMusic' has a wrong offset!");
static_assert(offsetof(ABP_PlayerController_Tutorial_C, BP_MatchMusicComponent) == 0x000D10, "Member 'ABP_PlayerController_Tutorial_C::BP_MatchMusicComponent' has a wrong offset!");

}

