#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GameModeComponent_AirDrop

#include "Basic.hpp"

#include "BP_GameModeComponent_AirDrop_classes.hpp"
#include "BP_GameModeComponent_AirDrop_parameters.hpp"


namespace SDK
{

// Function BP_GameModeComponent_AirDrop.BP_GameModeComponent_AirDrop_C.Air Drop Dropped__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AirDropContainer_Base_C*      Dropped_Container                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GameModeComponent_AirDrop_C::Air_Drop_Dropped__DelegateSignature(class ABP_AirDropContainer_Base_C* Dropped_Container)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameModeComponent_AirDrop_C", "Air Drop Dropped__DelegateSignature");

	Params::BP_GameModeComponent_AirDrop_C_Air_Drop_Dropped__DelegateSignature Parms{};

	Parms.Dropped_Container = Dropped_Container;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameModeComponent_AirDrop.BP_GameModeComponent_AirDrop_C.Air Drop Touched Down__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AirDropContainer_Base_C*      Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GameModeComponent_AirDrop_C::Air_Drop_Touched_Down__DelegateSignature(class ABP_AirDropContainer_Base_C* Container)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameModeComponent_AirDrop_C", "Air Drop Touched Down__DelegateSignature");

	Params::BP_GameModeComponent_AirDrop_C_Air_Drop_Touched_Down__DelegateSignature Parms{};

	Parms.Container = Container;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameModeComponent_AirDrop.BP_GameModeComponent_AirDrop_C.Air Drop Looted__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AirDropContainer_Base_C*      Looted_Container                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           Item_Taken                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GameModeComponent_AirDrop_C::Air_Drop_Looted__DelegateSignature(class ABP_AirDropContainer_Base_C* Looted_Container, class UClass* Item_Taken)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameModeComponent_AirDrop_C", "Air Drop Looted__DelegateSignature");

	Params::BP_GameModeComponent_AirDrop_C_Air_Drop_Looted__DelegateSignature Parms{};

	Parms.Looted_Container = Looted_Container;
	Parms.Item_Taken = Item_Taken;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameModeComponent_AirDrop.BP_GameModeComponent_AirDrop_C.ExecuteUbergraph_BP_GameModeComponent_AirDrop
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GameModeComponent_AirDrop_C::ExecuteUbergraph_BP_GameModeComponent_AirDrop(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameModeComponent_AirDrop_C", "ExecuteUbergraph_BP_GameModeComponent_AirDrop");

	Params::BP_GameModeComponent_AirDrop_C_ExecuteUbergraph_BP_GameModeComponent_AirDrop Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameModeComponent_AirDrop.BP_GameModeComponent_AirDrop_C.Container Touched Down
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AirDropContainer_Base_C*      Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GameModeComponent_AirDrop_C::Container_Touched_Down(class ABP_AirDropContainer_Base_C* Container)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameModeComponent_AirDrop_C", "Container Touched Down");

	Params::BP_GameModeComponent_AirDrop_C_Container_Touched_Down Parms{};

	Parms.Container = Container;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameModeComponent_AirDrop.BP_GameModeComponent_AirDrop_C.Drop a Container
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Container_Type                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UClass*>                   Loot                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Altitude                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rotation_On_Land                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class ABP_AirDropContainer_Base_C*      New_Container                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GameModeComponent_AirDrop_C::Drop_a_Container(class UClass* Container_Type, TArray<class UClass*>& Loot, const struct FVector& Location, float Altitude, const struct FRotator& Rotation_On_Land, class ABP_AirDropContainer_Base_C** New_Container)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameModeComponent_AirDrop_C", "Drop a Container");

	Params::BP_GameModeComponent_AirDrop_C_Drop_a_Container Parms{};

	Parms.Container_Type = Container_Type;
	Parms.Loot = std::move(Loot);
	Parms.Location = std::move(Location);
	Parms.Altitude = Altitude;
	Parms.Rotation_On_Land = std::move(Rotation_On_Land);

	UObject::ProcessEvent(Func, &Parms);

	Loot = std::move(Parms.Loot);

	if (New_Container != nullptr)
		*New_Container = Parms.New_Container;
}


// Function BP_GameModeComponent_AirDrop.BP_GameModeComponent_AirDrop_C.Compute Drop Zone Area Marker Location
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Drop_Zone_Actor                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Marker_Draw_Radius                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Marker_Error_Radius                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Marker_Location                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GameModeComponent_AirDrop_C::Compute_Drop_Zone_Area_Marker_Location(class AActor* Drop_Zone_Actor, float Marker_Draw_Radius, float Marker_Error_Radius, struct FVector* Marker_Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameModeComponent_AirDrop_C", "Compute Drop Zone Area Marker Location");

	Params::BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location Parms{};

	Parms.Drop_Zone_Actor = Drop_Zone_Actor;
	Parms.Marker_Draw_Radius = Marker_Draw_Radius;
	Parms.Marker_Error_Radius = Marker_Error_Radius;

	UObject::ProcessEvent(Func, &Parms);

	if (Marker_Location != nullptr)
		*Marker_Location = std::move(Parms.Marker_Location);
}

}

