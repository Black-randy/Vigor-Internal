#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DebugCamera

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "PhysicsCore_structs.hpp"


namespace SDK::Params
{

// Function BP_DebugCamera.BP_DebugCamera_C.ExecuteUbergraph_BP_DebugCamera
// 0x0038 (0x0038 - 0x0000)
struct BP_DebugCamera_C_ExecuteUbergraph_BP_DebugCamera final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerCharacter*                  CallFunc_GetHumanCharacter_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_C*                 K2Node_DynamicCast_AsBP_Player_Controller;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerCharacter*                  CallFunc_GetHumanCharacter_ReturnValue_1;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DebugCamera_C_ExecuteUbergraph_BP_DebugCamera) == 0x000008, "Wrong alignment on BP_DebugCamera_C_ExecuteUbergraph_BP_DebugCamera");
static_assert(sizeof(BP_DebugCamera_C_ExecuteUbergraph_BP_DebugCamera) == 0x000038, "Wrong size on BP_DebugCamera_C_ExecuteUbergraph_BP_DebugCamera");
static_assert(offsetof(BP_DebugCamera_C_ExecuteUbergraph_BP_DebugCamera, EntryPoint) == 0x000000, "Member 'BP_DebugCamera_C_ExecuteUbergraph_BP_DebugCamera::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_ExecuteUbergraph_BP_DebugCamera, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BP_DebugCamera_C_ExecuteUbergraph_BP_DebugCamera::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_ExecuteUbergraph_BP_DebugCamera, CallFunc_GetHumanCharacter_ReturnValue) == 0x000010, "Member 'BP_DebugCamera_C_ExecuteUbergraph_BP_DebugCamera::CallFunc_GetHumanCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_ExecuteUbergraph_BP_DebugCamera, K2Node_DynamicCast_AsBP_Player_Controller) == 0x000018, "Member 'BP_DebugCamera_C_ExecuteUbergraph_BP_DebugCamera::K2Node_DynamicCast_AsBP_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_ExecuteUbergraph_BP_DebugCamera, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_DebugCamera_C_ExecuteUbergraph_BP_DebugCamera::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_ExecuteUbergraph_BP_DebugCamera, K2Node_Event_DeltaSeconds) == 0x000024, "Member 'BP_DebugCamera_C_ExecuteUbergraph_BP_DebugCamera::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_ExecuteUbergraph_BP_DebugCamera, CallFunc_GetViewTarget_ReturnValue) == 0x000028, "Member 'BP_DebugCamera_C_ExecuteUbergraph_BP_DebugCamera::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_ExecuteUbergraph_BP_DebugCamera, CallFunc_GetHumanCharacter_ReturnValue_1) == 0x000030, "Member 'BP_DebugCamera_C_ExecuteUbergraph_BP_DebugCamera::CallFunc_GetHumanCharacter_ReturnValue_1' has a wrong offset!");

// Function BP_DebugCamera.BP_DebugCamera_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_DebugCamera_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DebugCamera_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_DebugCamera_C_ReceiveTick");
static_assert(sizeof(BP_DebugCamera_C_ReceiveTick) == 0x000004, "Wrong size on BP_DebugCamera_C_ReceiveTick");
static_assert(offsetof(BP_DebugCamera_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_DebugCamera_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_DebugCamera.BP_DebugCamera_C.Movement
// 0x00E4 (0x00E4 - 0x0000)
struct BP_DebugCamera_C_Movement final
{
public:
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue;          // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetCachedMovementInput_ReturnValue;       // 0x0018(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddActorWorldOffset_SweepHitResult;    // 0x0058(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_DebugCamera_C_Movement) == 0x000004, "Wrong alignment on BP_DebugCamera_C_Movement");
static_assert(sizeof(BP_DebugCamera_C_Movement) == 0x0000E4, "Wrong size on BP_DebugCamera_C_Movement");
static_assert(offsetof(BP_DebugCamera_C_Movement, CallFunc_GetActorRightVector_ReturnValue) == 0x000000, "Member 'BP_DebugCamera_C_Movement::CallFunc_GetActorRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_Movement, CallFunc_GetActorForwardVector_ReturnValue) == 0x00000C, "Member 'BP_DebugCamera_C_Movement::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_Movement, CallFunc_GetCachedMovementInput_ReturnValue) == 0x000018, "Member 'BP_DebugCamera_C_Movement::CallFunc_GetCachedMovementInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_Movement, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_DebugCamera_C_Movement::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_Movement, CallFunc_BreakVector2D_X) == 0x000024, "Member 'BP_DebugCamera_C_Movement::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_Movement, CallFunc_BreakVector2D_Y) == 0x000028, "Member 'BP_DebugCamera_C_Movement::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_Movement, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00002C, "Member 'BP_DebugCamera_C_Movement::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_Movement, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000030, "Member 'BP_DebugCamera_C_Movement::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_Movement, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000034, "Member 'BP_DebugCamera_C_Movement::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_Movement, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000040, "Member 'BP_DebugCamera_C_Movement::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_Movement, CallFunc_Add_VectorVector_ReturnValue) == 0x00004C, "Member 'BP_DebugCamera_C_Movement::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_Movement, CallFunc_K2_AddActorWorldOffset_SweepHitResult) == 0x000058, "Member 'BP_DebugCamera_C_Movement::CallFunc_K2_AddActorWorldOffset_SweepHitResult' has a wrong offset!");

// Function BP_DebugCamera.BP_DebugCamera_C.Rotation
// 0x0050 (0x0050 - 0x0000)
struct BP_DebugCamera_C_Rotation final
{
public:
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetCachedAimInput_ReturnValue;            // 0x0018(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DebugCamera_C_Rotation) == 0x000004, "Wrong alignment on BP_DebugCamera_C_Rotation");
static_assert(sizeof(BP_DebugCamera_C_Rotation) == 0x000050, "Wrong size on BP_DebugCamera_C_Rotation");
static_assert(offsetof(BP_DebugCamera_C_Rotation, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000000, "Member 'BP_DebugCamera_C_Rotation::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_Rotation, CallFunc_BreakRotator_Roll) == 0x00000C, "Member 'BP_DebugCamera_C_Rotation::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_Rotation, CallFunc_BreakRotator_Pitch) == 0x000010, "Member 'BP_DebugCamera_C_Rotation::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_Rotation, CallFunc_BreakRotator_Yaw) == 0x000014, "Member 'BP_DebugCamera_C_Rotation::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_Rotation, CallFunc_GetCachedAimInput_ReturnValue) == 0x000018, "Member 'BP_DebugCamera_C_Rotation::CallFunc_GetCachedAimInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_Rotation, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_DebugCamera_C_Rotation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_Rotation, CallFunc_BreakVector2D_X) == 0x000024, "Member 'BP_DebugCamera_C_Rotation::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_Rotation, CallFunc_BreakVector2D_Y) == 0x000028, "Member 'BP_DebugCamera_C_Rotation::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_Rotation, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00002C, "Member 'BP_DebugCamera_C_Rotation::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_Rotation, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000030, "Member 'BP_DebugCamera_C_Rotation::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_Rotation, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000034, "Member 'BP_DebugCamera_C_Rotation::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_Rotation, CallFunc_Add_FloatFloat_ReturnValue) == 0x000038, "Member 'BP_DebugCamera_C_Rotation::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_Rotation, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x00003C, "Member 'BP_DebugCamera_C_Rotation::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_Rotation, CallFunc_MakeRotator_ReturnValue) == 0x000040, "Member 'BP_DebugCamera_C_Rotation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_Rotation, CallFunc_K2_SetActorRotation_ReturnValue) == 0x00004C, "Member 'BP_DebugCamera_C_Rotation::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");

// Function BP_DebugCamera.BP_DebugCamera_C.DrawText
// 0x0210 (0x0210 - 0x0000)
struct BP_DebugCamera_C_DrawText final
{
public:
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0000(0x0010)(ConstParm, ReferenceParm)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0010(0x0018)()
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0058(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E7[0x1];                                       // 0x00E7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0130(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              CallFunc_BreakHitResult_ShapeSurfaceType;          // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x013C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0168(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A4[0x4];                                      // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x01A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x01B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x01C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x01D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x01E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x01F8(0x0018)()
};
static_assert(alignof(BP_DebugCamera_C_DrawText) == 0x000008, "Wrong alignment on BP_DebugCamera_C_DrawText");
static_assert(sizeof(BP_DebugCamera_C_DrawText) == 0x000210, "Wrong size on BP_DebugCamera_C_DrawText");
static_assert(offsetof(BP_DebugCamera_C_DrawText, Temp_object_Variable) == 0x000000, "Member 'BP_DebugCamera_C_DrawText::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_DrawText, CallFunc_MakeLiteralText_ReturnValue) == 0x000010, "Member 'BP_DebugCamera_C_DrawText::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_DrawText, CallFunc_GetActorForwardVector_ReturnValue) == 0x000028, "Member 'BP_DebugCamera_C_DrawText::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_DrawText, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000034, "Member 'BP_DebugCamera_C_DrawText::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_DrawText, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000040, "Member 'BP_DebugCamera_C_DrawText::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_DrawText, CallFunc_Add_VectorVector_ReturnValue) == 0x00004C, "Member 'BP_DebugCamera_C_DrawText::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_DrawText, CallFunc_LineTraceSingle_OutHit) == 0x000058, "Member 'BP_DebugCamera_C_DrawText::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_DrawText, CallFunc_LineTraceSingle_ReturnValue) == 0x0000E4, "Member 'BP_DebugCamera_C_DrawText::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_DrawText, CallFunc_BreakHitResult_bBlockingHit) == 0x0000E5, "Member 'BP_DebugCamera_C_DrawText::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_DrawText, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000E6, "Member 'BP_DebugCamera_C_DrawText::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_DrawText, CallFunc_BreakHitResult_Time) == 0x0000E8, "Member 'BP_DebugCamera_C_DrawText::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_DrawText, CallFunc_BreakHitResult_Distance) == 0x0000EC, "Member 'BP_DebugCamera_C_DrawText::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_DrawText, CallFunc_BreakHitResult_Location) == 0x0000F0, "Member 'BP_DebugCamera_C_DrawText::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_DrawText, CallFunc_BreakHitResult_ImpactPoint) == 0x0000FC, "Member 'BP_DebugCamera_C_DrawText::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_DrawText, CallFunc_BreakHitResult_Normal) == 0x000108, "Member 'BP_DebugCamera_C_DrawText::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_DrawText, CallFunc_BreakHitResult_ImpactNormal) == 0x000114, "Member 'BP_DebugCamera_C_DrawText::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_DrawText, CallFunc_BreakHitResult_PhysMat) == 0x000120, "Member 'BP_DebugCamera_C_DrawText::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_DrawText, CallFunc_BreakHitResult_HitActor) == 0x000128, "Member 'BP_DebugCamera_C_DrawText::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_DrawText, CallFunc_BreakHitResult_HitComponent) == 0x000130, "Member 'BP_DebugCamera_C_DrawText::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_DrawText, CallFunc_BreakHitResult_ShapeSurfaceType) == 0x000138, "Member 'BP_DebugCamera_C_DrawText::CallFunc_BreakHitResult_ShapeSurfaceType' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_DrawText, CallFunc_BreakHitResult_HitBoneName) == 0x00013C, "Member 'BP_DebugCamera_C_DrawText::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_DrawText, CallFunc_BreakHitResult_HitItem) == 0x000144, "Member 'BP_DebugCamera_C_DrawText::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_DrawText, CallFunc_BreakHitResult_ElementIndex) == 0x000148, "Member 'BP_DebugCamera_C_DrawText::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_DrawText, CallFunc_BreakHitResult_FaceIndex) == 0x00014C, "Member 'BP_DebugCamera_C_DrawText::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_DrawText, CallFunc_BreakHitResult_TraceStart) == 0x000150, "Member 'BP_DebugCamera_C_DrawText::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_DrawText, CallFunc_BreakHitResult_TraceEnd) == 0x00015C, "Member 'BP_DebugCamera_C_DrawText::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_DrawText, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000168, "Member 'BP_DebugCamera_C_DrawText::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_DrawText, CallFunc_GetDisplayName_ReturnValue) == 0x000178, "Member 'BP_DebugCamera_C_DrawText::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_DrawText, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000188, "Member 'BP_DebugCamera_C_DrawText::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_DrawText, CallFunc_Concat_StrStr_ReturnValue) == 0x000190, "Member 'BP_DebugCamera_C_DrawText::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_DrawText, CallFunc_Round_ReturnValue) == 0x0001A0, "Member 'BP_DebugCamera_C_DrawText::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_DrawText, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0001A8, "Member 'BP_DebugCamera_C_DrawText::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_DrawText, CallFunc_Conv_IntToString_ReturnValue) == 0x0001B8, "Member 'BP_DebugCamera_C_DrawText::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_DrawText, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0001C8, "Member 'BP_DebugCamera_C_DrawText::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_DrawText, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0001D8, "Member 'BP_DebugCamera_C_DrawText::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_DrawText, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0001E8, "Member 'BP_DebugCamera_C_DrawText::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_DebugCamera_C_DrawText, CallFunc_Conv_StringToText_ReturnValue) == 0x0001F8, "Member 'BP_DebugCamera_C_DrawText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

}

