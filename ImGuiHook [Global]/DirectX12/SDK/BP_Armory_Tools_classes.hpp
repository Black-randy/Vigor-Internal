#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Armory_Tools

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "S_Armory_ToolData_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "E_Armory_ElementSizes_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Armory_Tools.BP_Armory_Tools_C
// 0x01D0 (0x03F0 - 0x0220)
class ABP_Armory_Tools_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ABP_Armory_C*                           ParentArmory;                                      // 0x0230(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           Sockets;                                           // 0x0238(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UStaticMeshComponent*>           Crates;                                            // 0x0248(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UStaticMeshComponent*>           CrateLids;                                         // 0x0258(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UStaticMeshComponent*>           CrateContents;                                     // 0x0268(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FS_Armory_ToolData                     CurrentIterationData;                              // 0x0278(0x00F0)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class UStaticMeshComponent*>           Blueprints;                                        // 0x0368(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class FName                                   CurrentArmorySocket;                               // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_ToolArmoryDecal_C*>          DecalActors;                                       // 0x0380(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	bool                                          Draw_Debug;                                        // 0x0390(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Closed;                                            // 0x0391(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          DisregardStash;                                    // 0x0392(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ShowOnlyDecals;                                    // 0x0393(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FLinearColor                           DebugDecalPointColor;                              // 0x0394(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DebugBlueprintPointcolor;                          // 0x03A4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DebugContentPointColor;                            // 0x03B4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DebugCratePointColor;                              // 0x03C4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DebugLidPointColor;                                // 0x03D4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DebugPointDuration;                                // 0x03E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DebugPointSize;                                    // 0x03E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanTick;                                           // 0x03EC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_Armory_Tools(int32 EntryPoint);
	void Clear();
	void ReceiveTick(float DeltaSeconds);
	void Pre_Init(class ABP_Armory_C* ParentArmory_0);
	void Init();
	void Update();
	struct FTransform MakeDecalTransform();
	void Gather_All_Sockets();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Armory_Tools_C">();
	}
	static class ABP_Armory_Tools_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Armory_Tools_C>();
	}
};
static_assert(alignof(ABP_Armory_Tools_C) == 0x000008, "Wrong alignment on ABP_Armory_Tools_C");
static_assert(sizeof(ABP_Armory_Tools_C) == 0x0003F0, "Wrong size on ABP_Armory_Tools_C");
static_assert(offsetof(ABP_Armory_Tools_C, UberGraphFrame) == 0x000220, "Member 'ABP_Armory_Tools_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Armory_Tools_C, DefaultSceneRoot) == 0x000228, "Member 'ABP_Armory_Tools_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Armory_Tools_C, ParentArmory) == 0x000230, "Member 'ABP_Armory_Tools_C::ParentArmory' has a wrong offset!");
static_assert(offsetof(ABP_Armory_Tools_C, Sockets) == 0x000238, "Member 'ABP_Armory_Tools_C::Sockets' has a wrong offset!");
static_assert(offsetof(ABP_Armory_Tools_C, Crates) == 0x000248, "Member 'ABP_Armory_Tools_C::Crates' has a wrong offset!");
static_assert(offsetof(ABP_Armory_Tools_C, CrateLids) == 0x000258, "Member 'ABP_Armory_Tools_C::CrateLids' has a wrong offset!");
static_assert(offsetof(ABP_Armory_Tools_C, CrateContents) == 0x000268, "Member 'ABP_Armory_Tools_C::CrateContents' has a wrong offset!");
static_assert(offsetof(ABP_Armory_Tools_C, CurrentIterationData) == 0x000278, "Member 'ABP_Armory_Tools_C::CurrentIterationData' has a wrong offset!");
static_assert(offsetof(ABP_Armory_Tools_C, Blueprints) == 0x000368, "Member 'ABP_Armory_Tools_C::Blueprints' has a wrong offset!");
static_assert(offsetof(ABP_Armory_Tools_C, CurrentArmorySocket) == 0x000378, "Member 'ABP_Armory_Tools_C::CurrentArmorySocket' has a wrong offset!");
static_assert(offsetof(ABP_Armory_Tools_C, DecalActors) == 0x000380, "Member 'ABP_Armory_Tools_C::DecalActors' has a wrong offset!");
static_assert(offsetof(ABP_Armory_Tools_C, Draw_Debug) == 0x000390, "Member 'ABP_Armory_Tools_C::Draw_Debug' has a wrong offset!");
static_assert(offsetof(ABP_Armory_Tools_C, Closed) == 0x000391, "Member 'ABP_Armory_Tools_C::Closed' has a wrong offset!");
static_assert(offsetof(ABP_Armory_Tools_C, DisregardStash) == 0x000392, "Member 'ABP_Armory_Tools_C::DisregardStash' has a wrong offset!");
static_assert(offsetof(ABP_Armory_Tools_C, ShowOnlyDecals) == 0x000393, "Member 'ABP_Armory_Tools_C::ShowOnlyDecals' has a wrong offset!");
static_assert(offsetof(ABP_Armory_Tools_C, DebugDecalPointColor) == 0x000394, "Member 'ABP_Armory_Tools_C::DebugDecalPointColor' has a wrong offset!");
static_assert(offsetof(ABP_Armory_Tools_C, DebugBlueprintPointcolor) == 0x0003A4, "Member 'ABP_Armory_Tools_C::DebugBlueprintPointcolor' has a wrong offset!");
static_assert(offsetof(ABP_Armory_Tools_C, DebugContentPointColor) == 0x0003B4, "Member 'ABP_Armory_Tools_C::DebugContentPointColor' has a wrong offset!");
static_assert(offsetof(ABP_Armory_Tools_C, DebugCratePointColor) == 0x0003C4, "Member 'ABP_Armory_Tools_C::DebugCratePointColor' has a wrong offset!");
static_assert(offsetof(ABP_Armory_Tools_C, DebugLidPointColor) == 0x0003D4, "Member 'ABP_Armory_Tools_C::DebugLidPointColor' has a wrong offset!");
static_assert(offsetof(ABP_Armory_Tools_C, DebugPointDuration) == 0x0003E4, "Member 'ABP_Armory_Tools_C::DebugPointDuration' has a wrong offset!");
static_assert(offsetof(ABP_Armory_Tools_C, DebugPointSize) == 0x0003E8, "Member 'ABP_Armory_Tools_C::DebugPointSize' has a wrong offset!");
static_assert(offsetof(ABP_Armory_Tools_C, CanTick) == 0x0003EC, "Member 'ABP_Armory_Tools_C::CanTick' has a wrong offset!");

}

