#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ADM_BarredVault

#include "Basic.hpp"

#include "E_Lootable_State_structs.hpp"
#include "F_ADM_BarredWindow_structs.hpp"
#include "E_ADM_BarredVault_State_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "F_ADM_BarredDoor_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_ADM_BarredVault.BP_ADM_BarredVault_C.ExecuteUbergraph_BP_ADM_BarredVault
// 0x0150 (0x0150 - 0x0000)
struct BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_BoobyTrap_Count_BoobyTrap_count;      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0030(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanCharacter*                        K2Node_DynamicCast_AsHuman_Character;              // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENetRole                                      CallFunc_GetNetworkRole_ReturnValue;               // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CA[0x6];                                       // 0x00CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UEventSystem*                           CallFunc_GetEventSystem_ReturnValue;               // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_EventSystem_C*                      K2Node_DynamicCast_AsBP_Event_System;              // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_Lootable_State                              K2Node_Event_Old_State;                            // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Lootable_State                              K2Node_Event_New_State;                            // 0x00EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_C*                        K2Node_Event_Interacting_Character;                // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_AirDropModular_C*  K2Node_DynamicCast_AsBP_Player_Controller_Air_Drop_Modular; // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_Matches_C*              K2Node_DynamicCast_AsBP_Player_State_Matches;      // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Log_Gameplay_Event_Success;               // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x0123(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_125[0x3];                                      // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PCComponent_ADM_C*                  CallFunc_Get_PCComponent_for_Player_Controller_Player_Controller_Component; // 0x0128(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_PCComponent_for_Player_Controller_Found; // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PCComponent_ADM_Event_BarredHouse_C* K2Node_DynamicCast_AsBP_PCComponent_ADM_Event_Barred_House; // 0x0138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x3];                                      // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault) == 0x000008, "Wrong alignment on BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault");
static_assert(sizeof(BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault) == 0x000150, "Wrong size on BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault");
static_assert(offsetof(BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault, EntryPoint) == 0x000000, "Member 'BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault, CallFunc_Get_BoobyTrap_Count_BoobyTrap_count) == 0x000004, "Member 'BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault::CallFunc_Get_BoobyTrap_Count_BoobyTrap_count' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000009, "Member 'BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault, CallFunc_IsDedicatedServer_ReturnValue) == 0x00000A, "Member 'BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault, K2Node_SwitchEnum_CmpSuccess) == 0x00000B, "Member 'BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault, K2Node_Event_DeltaSeconds) == 0x00000C, "Member 'BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000010, "Member 'BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault, K2Node_ComponentBoundEvent_OtherActor) == 0x000018, "Member 'BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault, K2Node_ComponentBoundEvent_OtherComp) == 0x000020, "Member 'BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000028, "Member 'BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault, K2Node_ComponentBoundEvent_bFromSweep) == 0x00002C, "Member 'BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault, K2Node_ComponentBoundEvent_SweepResult) == 0x000030, "Member 'BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault, K2Node_DynamicCast_AsHuman_Character) == 0x0000C0, "Member 'BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault::K2Node_DynamicCast_AsHuman_Character' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault, K2Node_DynamicCast_bSuccess) == 0x0000C8, "Member 'BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault, CallFunc_GetNetworkRole_ReturnValue) == 0x0000C9, "Member 'BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault::CallFunc_GetNetworkRole_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault, CallFunc_GetEventSystem_ReturnValue) == 0x0000D0, "Member 'BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault::CallFunc_GetEventSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000D8, "Member 'BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault, K2Node_DynamicCast_AsBP_Event_System) == 0x0000E0, "Member 'BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault::K2Node_DynamicCast_AsBP_Event_System' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault, K2Node_DynamicCast_bSuccess_1) == 0x0000E8, "Member 'BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault, K2Node_SwitchEnum_CmpSuccess_1) == 0x0000E9, "Member 'BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault, K2Node_Event_Old_State) == 0x0000EA, "Member 'BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault::K2Node_Event_Old_State' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault, K2Node_Event_New_State) == 0x0000EB, "Member 'BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault::K2Node_Event_New_State' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault, K2Node_Event_Interacting_Character) == 0x0000F0, "Member 'BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault::K2Node_Event_Interacting_Character' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0000F8, "Member 'BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault, CallFunc_GetController_ReturnValue) == 0x000100, "Member 'BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault, K2Node_DynamicCast_AsBP_Player_Controller_Air_Drop_Modular) == 0x000108, "Member 'BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault::K2Node_DynamicCast_AsBP_Player_Controller_Air_Drop_Modular' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault, K2Node_DynamicCast_bSuccess_2) == 0x000110, "Member 'BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault, K2Node_DynamicCast_AsBP_Player_State_Matches) == 0x000118, "Member 'BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault::K2Node_DynamicCast_AsBP_Player_State_Matches' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault, K2Node_DynamicCast_bSuccess_3) == 0x000120, "Member 'BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault, CallFunc_Log_Gameplay_Event_Success) == 0x000121, "Member 'BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault::CallFunc_Log_Gameplay_Event_Success' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault, CallFunc_IsServer_ReturnValue) == 0x000122, "Member 'BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x000123, "Member 'BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault, CallFunc_IsValid_ReturnValue) == 0x000124, "Member 'BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault, CallFunc_Get_PCComponent_for_Player_Controller_Player_Controller_Component) == 0x000128, "Member 'BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault::CallFunc_Get_PCComponent_for_Player_Controller_Player_Controller_Component' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault, CallFunc_Get_PCComponent_for_Player_Controller_Found) == 0x000130, "Member 'BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault::CallFunc_Get_PCComponent_for_Player_Controller_Found' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault, K2Node_DynamicCast_AsBP_PCComponent_ADM_Event_Barred_House) == 0x000138, "Member 'BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault::K2Node_DynamicCast_AsBP_PCComponent_ADM_Event_Barred_House' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault, K2Node_DynamicCast_bSuccess_4) == 0x000140, "Member 'BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault, CallFunc_Array_Add_ReturnValue) == 0x000144, "Member 'BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault, CallFunc_Array_Contains_ReturnValue) == 0x000148, "Member 'BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function BP_ADM_BarredVault.BP_ADM_BarredVault_C.Server Interaction Start
// 0x0008 (0x0008 - 0x0000)
struct BP_ADM_BarredVault_C_Server_Interaction_Start final
{
public:
	class ABP_Character_C*                        Interacting_Character;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ADM_BarredVault_C_Server_Interaction_Start) == 0x000008, "Wrong alignment on BP_ADM_BarredVault_C_Server_Interaction_Start");
static_assert(sizeof(BP_ADM_BarredVault_C_Server_Interaction_Start) == 0x000008, "Wrong size on BP_ADM_BarredVault_C_Server_Interaction_Start");
static_assert(offsetof(BP_ADM_BarredVault_C_Server_Interaction_Start, Interacting_Character) == 0x000000, "Member 'BP_ADM_BarredVault_C_Server_Interaction_Start::Interacting_Character' has a wrong offset!");

// Function BP_ADM_BarredVault.BP_ADM_BarredVault_C.State Changed
// 0x0002 (0x0002 - 0x0000)
struct BP_ADM_BarredVault_C_State_Changed final
{
public:
	E_Lootable_State                              Old_State;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Lootable_State                              New_State;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ADM_BarredVault_C_State_Changed) == 0x000001, "Wrong alignment on BP_ADM_BarredVault_C_State_Changed");
static_assert(sizeof(BP_ADM_BarredVault_C_State_Changed) == 0x000002, "Wrong size on BP_ADM_BarredVault_C_State_Changed");
static_assert(offsetof(BP_ADM_BarredVault_C_State_Changed, Old_State) == 0x000000, "Member 'BP_ADM_BarredVault_C_State_Changed::Old_State' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_State_Changed, New_State) == 0x000001, "Member 'BP_ADM_BarredVault_C_State_Changed::New_State' has a wrong offset!");

// Function BP_ADM_BarredVault.BP_ADM_BarredVault_C.BndEvt__OverlapVolumeEncounterHint_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct BP_ADM_BarredVault_C_BndEvt__OverlapVolumeEncounterHint_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_ADM_BarredVault_C_BndEvt__OverlapVolumeEncounterHint_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_ADM_BarredVault_C_BndEvt__OverlapVolumeEncounterHint_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_ADM_BarredVault_C_BndEvt__OverlapVolumeEncounterHint_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000B0, "Wrong size on BP_ADM_BarredVault_C_BndEvt__OverlapVolumeEncounterHint_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_ADM_BarredVault_C_BndEvt__OverlapVolumeEncounterHint_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_ADM_BarredVault_C_BndEvt__OverlapVolumeEncounterHint_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_BndEvt__OverlapVolumeEncounterHint_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_ADM_BarredVault_C_BndEvt__OverlapVolumeEncounterHint_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_BndEvt__OverlapVolumeEncounterHint_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_ADM_BarredVault_C_BndEvt__OverlapVolumeEncounterHint_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_BndEvt__OverlapVolumeEncounterHint_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_ADM_BarredVault_C_BndEvt__OverlapVolumeEncounterHint_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_BndEvt__OverlapVolumeEncounterHint_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_ADM_BarredVault_C_BndEvt__OverlapVolumeEncounterHint_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_BndEvt__OverlapVolumeEncounterHint_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_ADM_BarredVault_C_BndEvt__OverlapVolumeEncounterHint_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_ADM_BarredVault.BP_ADM_BarredVault_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_ADM_BarredVault_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ADM_BarredVault_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_ADM_BarredVault_C_ReceiveTick");
static_assert(sizeof(BP_ADM_BarredVault_C_ReceiveTick) == 0x000004, "Wrong size on BP_ADM_BarredVault_C_ReceiveTick");
static_assert(offsetof(BP_ADM_BarredVault_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_ADM_BarredVault_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_ADM_BarredVault.BP_ADM_BarredVault_C.UserConstructionScript
// 0x0040 (0x0040 - 0x0000)
struct BP_ADM_BarredVault_C_UserConstructionScript final
{
public:
	TSoftObjectPtr<class UObject>                 CallFunc_GetSoftReference_ReturnValue;             // 0x0000(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftReference_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          K2Node_DynamicCast_AsSkeletal_Mesh;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ADM_BarredVault_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_ADM_BarredVault_C_UserConstructionScript");
static_assert(sizeof(BP_ADM_BarredVault_C_UserConstructionScript) == 0x000040, "Wrong size on BP_ADM_BarredVault_C_UserConstructionScript");
static_assert(offsetof(BP_ADM_BarredVault_C_UserConstructionScript, CallFunc_GetSoftReference_ReturnValue) == 0x000000, "Member 'BP_ADM_BarredVault_C_UserConstructionScript::CallFunc_GetSoftReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_UserConstructionScript, CallFunc_LoadSoftReference_ReturnValue) == 0x000028, "Member 'BP_ADM_BarredVault_C_UserConstructionScript::CallFunc_LoadSoftReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_UserConstructionScript, K2Node_DynamicCast_AsSkeletal_Mesh) == 0x000030, "Member 'BP_ADM_BarredVault_C_UserConstructionScript::K2Node_DynamicCast_AsSkeletal_Mesh' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_UserConstructionScript, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_ADM_BarredVault_C_UserConstructionScript::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_UserConstructionScript, CallFunc_IsDedicatedServer_ReturnValue) == 0x000039, "Member 'BP_ADM_BarredVault_C_UserConstructionScript::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_UserConstructionScript, CallFunc_Not_PreBool_ReturnValue) == 0x00003A, "Member 'BP_ADM_BarredVault_C_UserConstructionScript::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_ADM_BarredVault.BP_ADM_BarredVault_C.Initialize Doors and Windows
// 0x0270 (0x0270 - 0x0000)
struct BP_ADM_BarredVault_C_Initialize_Doors_and_Windows final
{
public:
	class ABP_ADM_BarredVaultLocation_C*          Vault_Location;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Replacing_Barred_Window;                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWindow*                                Replaced_Window;                                   // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Replacing_Barred_Door;                             // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADoor*                                  Replaced_Door;                                     // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38[0x8];                                       // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FF_ADM_BarredWindow                    CallFunc_Array_Get_Item;                           // 0x0040(0x0070)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B2[0x6];                                       // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AWindow*                                CallFunc_ResolveWindowReference_ReturnValue;       // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWindow*                                CallFunc_GetValidWindow_ValidWindow;               // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0xC];                                       // 0x00E4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FF_ADM_BarredDoor                      CallFunc_Array_Get_Item_1;                         // 0x00F0(0x0070)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue_1;               // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADoor*                                  CallFunc_ResolveDoorReference_ReturnValue;         // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADoor*                                  CallFunc_GetValidDoor_ValidDoor;                   // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Window_Base_C*                      K2Node_DynamicCast_AsBP_Window_Base;               // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAttachedActors_OutActors;              // 0x0188(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValidClass_ReturnValue_2;               // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_199[0x3];                                      // 0x0199(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x3];                                      // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A8[0x8];                                      // 0x01A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x01B0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_Array_Get_Item_2;                         // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ADM_WindowBarringObject_Base_C*     CallFunc_FinishSpawningActor_ReturnValue;          // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FC[0x4];                                      // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_DoorDouble_Base_C*                  K2Node_DynamicCast_AsBP_Door_Double_Base;          // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Door_Base_C*                        K2Node_DynamicCast_AsBP_Door_Base;                 // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue_3;               // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue_4;               // 0x021A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21B[0x5];                                      // 0x021B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x0220(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ADM_DoorBarringObject_Base_C*       CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ADM_BarredVault_C_Initialize_Doors_and_Windows) == 0x000010, "Wrong alignment on BP_ADM_BarredVault_C_Initialize_Doors_and_Windows");
static_assert(sizeof(BP_ADM_BarredVault_C_Initialize_Doors_and_Windows) == 0x000270, "Wrong size on BP_ADM_BarredVault_C_Initialize_Doors_and_Windows");
static_assert(offsetof(BP_ADM_BarredVault_C_Initialize_Doors_and_Windows, Vault_Location) == 0x000000, "Member 'BP_ADM_BarredVault_C_Initialize_Doors_and_Windows::Vault_Location' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_Initialize_Doors_and_Windows, Replacing_Barred_Window) == 0x000008, "Member 'BP_ADM_BarredVault_C_Initialize_Doors_and_Windows::Replacing_Barred_Window' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_Initialize_Doors_and_Windows, Replaced_Window) == 0x000010, "Member 'BP_ADM_BarredVault_C_Initialize_Doors_and_Windows::Replaced_Window' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_Initialize_Doors_and_Windows, Replacing_Barred_Door) == 0x000018, "Member 'BP_ADM_BarredVault_C_Initialize_Doors_and_Windows::Replacing_Barred_Door' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_Initialize_Doors_and_Windows, Replaced_Door) == 0x000020, "Member 'BP_ADM_BarredVault_C_Initialize_Doors_and_Windows::Replaced_Door' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_Initialize_Doors_and_Windows, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_ADM_BarredVault_C_Initialize_Doors_and_Windows::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_Initialize_Doors_and_Windows, CallFunc_Array_Length_ReturnValue_1) == 0x00002C, "Member 'BP_ADM_BarredVault_C_Initialize_Doors_and_Windows::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_Initialize_Doors_and_Windows, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BP_ADM_BarredVault_C_Initialize_Doors_and_Windows::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_Initialize_Doors_and_Windows, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'BP_ADM_BarredVault_C_Initialize_Doors_and_Windows::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_Initialize_Doors_and_Windows, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_ADM_BarredVault_C_Initialize_Doors_and_Windows::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_Initialize_Doors_and_Windows, CallFunc_Less_IntInt_ReturnValue) == 0x0000B0, "Member 'BP_ADM_BarredVault_C_Initialize_Doors_and_Windows::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_Initialize_Doors_and_Windows, CallFunc_IsValidClass_ReturnValue) == 0x0000B1, "Member 'BP_ADM_BarredVault_C_Initialize_Doors_and_Windows::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_Initialize_Doors_and_Windows, CallFunc_ResolveWindowReference_ReturnValue) == 0x0000B8, "Member 'BP_ADM_BarredVault_C_Initialize_Doors_and_Windows::CallFunc_ResolveWindowReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_Initialize_Doors_and_Windows, CallFunc_GetValidWindow_ValidWindow) == 0x0000C0, "Member 'BP_ADM_BarredVault_C_Initialize_Doors_and_Windows::CallFunc_GetValidWindow_ValidWindow' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_Initialize_Doors_and_Windows, CallFunc_Add_IntInt_ReturnValue) == 0x0000C8, "Member 'BP_ADM_BarredVault_C_Initialize_Doors_and_Windows::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_Initialize_Doors_and_Windows, Temp_int_Loop_Counter_Variable_1) == 0x0000CC, "Member 'BP_ADM_BarredVault_C_Initialize_Doors_and_Windows::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_Initialize_Doors_and_Windows, Temp_int_Loop_Counter_Variable_2) == 0x0000D0, "Member 'BP_ADM_BarredVault_C_Initialize_Doors_and_Windows::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_Initialize_Doors_and_Windows, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000D4, "Member 'BP_ADM_BarredVault_C_Initialize_Doors_and_Windows::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_Initialize_Doors_and_Windows, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000D8, "Member 'BP_ADM_BarredVault_C_Initialize_Doors_and_Windows::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_Initialize_Doors_and_Windows, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000DC, "Member 'BP_ADM_BarredVault_C_Initialize_Doors_and_Windows::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_Initialize_Doors_and_Windows, Temp_int_Array_Index_Variable_1) == 0x0000E0, "Member 'BP_ADM_BarredVault_C_Initialize_Doors_and_Windows::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_Initialize_Doors_and_Windows, CallFunc_Array_Get_Item_1) == 0x0000F0, "Member 'BP_ADM_BarredVault_C_Initialize_Doors_and_Windows::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_Initialize_Doors_and_Windows, CallFunc_IsValidClass_ReturnValue_1) == 0x000160, "Member 'BP_ADM_BarredVault_C_Initialize_Doors_and_Windows::CallFunc_IsValidClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_Initialize_Doors_and_Windows, CallFunc_ResolveDoorReference_ReturnValue) == 0x000168, "Member 'BP_ADM_BarredVault_C_Initialize_Doors_and_Windows::CallFunc_ResolveDoorReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_Initialize_Doors_and_Windows, CallFunc_GetValidDoor_ValidDoor) == 0x000170, "Member 'BP_ADM_BarredVault_C_Initialize_Doors_and_Windows::CallFunc_GetValidDoor_ValidDoor' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_Initialize_Doors_and_Windows, K2Node_DynamicCast_AsBP_Window_Base) == 0x000178, "Member 'BP_ADM_BarredVault_C_Initialize_Doors_and_Windows::K2Node_DynamicCast_AsBP_Window_Base' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_Initialize_Doors_and_Windows, K2Node_DynamicCast_bSuccess) == 0x000180, "Member 'BP_ADM_BarredVault_C_Initialize_Doors_and_Windows::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_Initialize_Doors_and_Windows, CallFunc_GetAttachedActors_OutActors) == 0x000188, "Member 'BP_ADM_BarredVault_C_Initialize_Doors_and_Windows::CallFunc_GetAttachedActors_OutActors' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_Initialize_Doors_and_Windows, CallFunc_IsValidClass_ReturnValue_2) == 0x000198, "Member 'BP_ADM_BarredVault_C_Initialize_Doors_and_Windows::CallFunc_IsValidClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_Initialize_Doors_and_Windows, CallFunc_Array_Length_ReturnValue_2) == 0x00019C, "Member 'BP_ADM_BarredVault_C_Initialize_Doors_and_Windows::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_Initialize_Doors_and_Windows, CallFunc_Less_IntInt_ReturnValue_2) == 0x0001A0, "Member 'BP_ADM_BarredVault_C_Initialize_Doors_and_Windows::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_Initialize_Doors_and_Windows, Temp_int_Array_Index_Variable_2) == 0x0001A4, "Member 'BP_ADM_BarredVault_C_Initialize_Doors_and_Windows::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_Initialize_Doors_and_Windows, CallFunc_GetTransform_ReturnValue) == 0x0001B0, "Member 'BP_ADM_BarredVault_C_Initialize_Doors_and_Windows::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_Initialize_Doors_and_Windows, CallFunc_Array_Get_Item_2) == 0x0001E0, "Member 'BP_ADM_BarredVault_C_Initialize_Doors_and_Windows::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_Initialize_Doors_and_Windows, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0001E8, "Member 'BP_ADM_BarredVault_C_Initialize_Doors_and_Windows::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_Initialize_Doors_and_Windows, CallFunc_FinishSpawningActor_ReturnValue) == 0x0001F0, "Member 'BP_ADM_BarredVault_C_Initialize_Doors_and_Windows::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_Initialize_Doors_and_Windows, CallFunc_Array_AddUnique_ReturnValue) == 0x0001F8, "Member 'BP_ADM_BarredVault_C_Initialize_Doors_and_Windows::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_Initialize_Doors_and_Windows, K2Node_DynamicCast_AsBP_Door_Double_Base) == 0x000200, "Member 'BP_ADM_BarredVault_C_Initialize_Doors_and_Windows::K2Node_DynamicCast_AsBP_Door_Double_Base' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_Initialize_Doors_and_Windows, K2Node_DynamicCast_bSuccess_1) == 0x000208, "Member 'BP_ADM_BarredVault_C_Initialize_Doors_and_Windows::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_Initialize_Doors_and_Windows, K2Node_DynamicCast_AsBP_Door_Base) == 0x000210, "Member 'BP_ADM_BarredVault_C_Initialize_Doors_and_Windows::K2Node_DynamicCast_AsBP_Door_Base' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_Initialize_Doors_and_Windows, K2Node_DynamicCast_bSuccess_2) == 0x000218, "Member 'BP_ADM_BarredVault_C_Initialize_Doors_and_Windows::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_Initialize_Doors_and_Windows, CallFunc_IsValidClass_ReturnValue_3) == 0x000219, "Member 'BP_ADM_BarredVault_C_Initialize_Doors_and_Windows::CallFunc_IsValidClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_Initialize_Doors_and_Windows, CallFunc_IsValidClass_ReturnValue_4) == 0x00021A, "Member 'BP_ADM_BarredVault_C_Initialize_Doors_and_Windows::CallFunc_IsValidClass_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_Initialize_Doors_and_Windows, CallFunc_GetTransform_ReturnValue_1) == 0x000220, "Member 'BP_ADM_BarredVault_C_Initialize_Doors_and_Windows::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_Initialize_Doors_and_Windows, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x000250, "Member 'BP_ADM_BarredVault_C_Initialize_Doors_and_Windows::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_Initialize_Doors_and_Windows, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x000258, "Member 'BP_ADM_BarredVault_C_Initialize_Doors_and_Windows::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_Initialize_Doors_and_Windows, CallFunc_Array_AddUnique_ReturnValue_1) == 0x000260, "Member 'BP_ADM_BarredVault_C_Initialize_Doors_and_Windows::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");

// Function BP_ADM_BarredVault.BP_ADM_BarredVault_C.PlayUnlockingSound
// 0x0048 (0x0048 - 0x0000)
struct BP_ADM_BarredVault_C_PlayUnlockingSound final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RingRotationalSpeed;                               // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_1;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetSocketRotation_ReturnValue;            // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_2;                        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ADM_BarredVault_C_PlayUnlockingSound) == 0x000004, "Wrong alignment on BP_ADM_BarredVault_C_PlayUnlockingSound");
static_assert(sizeof(BP_ADM_BarredVault_C_PlayUnlockingSound) == 0x000048, "Wrong size on BP_ADM_BarredVault_C_PlayUnlockingSound");
static_assert(offsetof(BP_ADM_BarredVault_C_PlayUnlockingSound, DeltaTime) == 0x000000, "Member 'BP_ADM_BarredVault_C_PlayUnlockingSound::DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_PlayUnlockingSound, RingRotationalSpeed) == 0x000004, "Member 'BP_ADM_BarredVault_C_PlayUnlockingSound::RingRotationalSpeed' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_PlayUnlockingSound, CallFunc_Abs_ReturnValue) == 0x000008, "Member 'BP_ADM_BarredVault_C_PlayUnlockingSound::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_PlayUnlockingSound, CallFunc_MapRangeClamped_ReturnValue) == 0x00000C, "Member 'BP_ADM_BarredVault_C_PlayUnlockingSound::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_PlayUnlockingSound, CallFunc_Abs_ReturnValue_1) == 0x000010, "Member 'BP_ADM_BarredVault_C_PlayUnlockingSound::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_PlayUnlockingSound, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000014, "Member 'BP_ADM_BarredVault_C_PlayUnlockingSound::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_PlayUnlockingSound, CallFunc_MakeLiteralFloat_ReturnValue) == 0x000018, "Member 'BP_ADM_BarredVault_C_PlayUnlockingSound::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_PlayUnlockingSound, CallFunc_GetSocketRotation_ReturnValue) == 0x00001C, "Member 'BP_ADM_BarredVault_C_PlayUnlockingSound::CallFunc_GetSocketRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_PlayUnlockingSound, CallFunc_BreakRotator_Roll) == 0x000028, "Member 'BP_ADM_BarredVault_C_PlayUnlockingSound::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_PlayUnlockingSound, CallFunc_BreakRotator_Pitch) == 0x00002C, "Member 'BP_ADM_BarredVault_C_PlayUnlockingSound::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_PlayUnlockingSound, CallFunc_BreakRotator_Yaw) == 0x000030, "Member 'BP_ADM_BarredVault_C_PlayUnlockingSound::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_PlayUnlockingSound, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000034, "Member 'BP_ADM_BarredVault_C_PlayUnlockingSound::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_PlayUnlockingSound, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000038, "Member 'BP_ADM_BarredVault_C_PlayUnlockingSound::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_PlayUnlockingSound, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x00003C, "Member 'BP_ADM_BarredVault_C_PlayUnlockingSound::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_PlayUnlockingSound, CallFunc_Abs_ReturnValue_2) == 0x000040, "Member 'BP_ADM_BarredVault_C_PlayUnlockingSound::CallFunc_Abs_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_PlayUnlockingSound, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000044, "Member 'BP_ADM_BarredVault_C_PlayUnlockingSound::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_ADM_BarredVault.BP_ADM_BarredVault_C.Determine State Based On Current Circumstances
// 0x0004 (0x0004 - 0x0000)
struct BP_ADM_BarredVault_C_Determine_State_Based_On_Current_Circumstances final
{
public:
	E_Lootable_State                              Appropriate_State;                                 // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_ByteByte_ReturnValue;                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_Lootable_State                              CallFunc_Determine_State_Based_On_Current_Circumstances_Appropriate_State; // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ADM_BarredVault_C_Determine_State_Based_On_Current_Circumstances) == 0x000001, "Wrong alignment on BP_ADM_BarredVault_C_Determine_State_Based_On_Current_Circumstances");
static_assert(sizeof(BP_ADM_BarredVault_C_Determine_State_Based_On_Current_Circumstances) == 0x000004, "Wrong size on BP_ADM_BarredVault_C_Determine_State_Based_On_Current_Circumstances");
static_assert(offsetof(BP_ADM_BarredVault_C_Determine_State_Based_On_Current_Circumstances, Appropriate_State) == 0x000000, "Member 'BP_ADM_BarredVault_C_Determine_State_Based_On_Current_Circumstances::Appropriate_State' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_Determine_State_Based_On_Current_Circumstances, CallFunc_MakeLiteralByte_ReturnValue) == 0x000001, "Member 'BP_ADM_BarredVault_C_Determine_State_Based_On_Current_Circumstances::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_Determine_State_Based_On_Current_Circumstances, CallFunc_Less_ByteByte_ReturnValue) == 0x000002, "Member 'BP_ADM_BarredVault_C_Determine_State_Based_On_Current_Circumstances::CallFunc_Less_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_Determine_State_Based_On_Current_Circumstances, CallFunc_Determine_State_Based_On_Current_Circumstances_Appropriate_State) == 0x000003, "Member 'BP_ADM_BarredVault_C_Determine_State_Based_On_Current_Circumstances::CallFunc_Determine_State_Based_On_Current_Circumstances_Appropriate_State' has a wrong offset!");

// Function BP_ADM_BarredVault.BP_ADM_BarredVault_C.Set Status
// 0x0003 (0x0003 - 0x0000)
struct BP_ADM_BarredVault_C_Set_Status final
{
public:
	E_ADM_BarredVault_State                       Status_0;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Lootable_State                              CallFunc_Determine_State_Based_On_Current_Circumstances_Appropriate_State; // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_State_State_Changed;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ADM_BarredVault_C_Set_Status) == 0x000001, "Wrong alignment on BP_ADM_BarredVault_C_Set_Status");
static_assert(sizeof(BP_ADM_BarredVault_C_Set_Status) == 0x000003, "Wrong size on BP_ADM_BarredVault_C_Set_Status");
static_assert(offsetof(BP_ADM_BarredVault_C_Set_Status, Status_0) == 0x000000, "Member 'BP_ADM_BarredVault_C_Set_Status::Status_0' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_Set_Status, CallFunc_Determine_State_Based_On_Current_Circumstances_Appropriate_State) == 0x000001, "Member 'BP_ADM_BarredVault_C_Set_Status::CallFunc_Determine_State_Based_On_Current_Circumstances_Appropriate_State' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_Set_Status, CallFunc_Set_State_State_Changed) == 0x000002, "Member 'BP_ADM_BarredVault_C_Set_Status::CallFunc_Set_State_State_Changed' has a wrong offset!");

// Function BP_ADM_BarredVault.BP_ADM_BarredVault_C.GetValidDoor
// 0x0070 (0x0070 - 0x0000)
struct BP_ADM_BarredVault_C_GetValidDoor final
{
public:
	class ADoor*                                  Door;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADoor*                                  ValidDoor;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ADoor*>                          CallFunc_GetAllActorsOfClass_OutActors;            // 0x0030(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ADoor*                                  CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue_1;              // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ADM_BarredVault_C_GetValidDoor) == 0x000008, "Wrong alignment on BP_ADM_BarredVault_C_GetValidDoor");
static_assert(sizeof(BP_ADM_BarredVault_C_GetValidDoor) == 0x000070, "Wrong size on BP_ADM_BarredVault_C_GetValidDoor");
static_assert(offsetof(BP_ADM_BarredVault_C_GetValidDoor, Door) == 0x000000, "Member 'BP_ADM_BarredVault_C_GetValidDoor::Door' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_GetValidDoor, ValidDoor) == 0x000008, "Member 'BP_ADM_BarredVault_C_GetValidDoor::ValidDoor' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_GetValidDoor, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_ADM_BarredVault_C_GetValidDoor::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_GetValidDoor, CallFunc_GetObjectName_ReturnValue) == 0x000018, "Member 'BP_ADM_BarredVault_C_GetValidDoor::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_GetValidDoor, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BP_ADM_BarredVault_C_GetValidDoor::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_GetValidDoor, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_ADM_BarredVault_C_GetValidDoor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_GetValidDoor, CallFunc_GetAllActorsOfClass_OutActors) == 0x000030, "Member 'BP_ADM_BarredVault_C_GetValidDoor::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_GetValidDoor, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_ADM_BarredVault_C_GetValidDoor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_GetValidDoor, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_ADM_BarredVault_C_GetValidDoor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_GetValidDoor, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_ADM_BarredVault_C_GetValidDoor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_GetValidDoor, CallFunc_GetObjectName_ReturnValue_1) == 0x000058, "Member 'BP_ADM_BarredVault_C_GetValidDoor::CallFunc_GetObjectName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_GetValidDoor, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000068, "Member 'BP_ADM_BarredVault_C_GetValidDoor::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

// Function BP_ADM_BarredVault.BP_ADM_BarredVault_C.GetValidWindow
// 0x0070 (0x0070 - 0x0000)
struct BP_ADM_BarredVault_C_GetValidWindow final
{
public:
	class AWindow*                                Window;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWindow*                                ValidWindow;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AWindow*>                        CallFunc_GetAllActorsOfClass_OutActors;            // 0x0030(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AWindow*                                CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue_1;              // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ADM_BarredVault_C_GetValidWindow) == 0x000008, "Wrong alignment on BP_ADM_BarredVault_C_GetValidWindow");
static_assert(sizeof(BP_ADM_BarredVault_C_GetValidWindow) == 0x000070, "Wrong size on BP_ADM_BarredVault_C_GetValidWindow");
static_assert(offsetof(BP_ADM_BarredVault_C_GetValidWindow, Window) == 0x000000, "Member 'BP_ADM_BarredVault_C_GetValidWindow::Window' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_GetValidWindow, ValidWindow) == 0x000008, "Member 'BP_ADM_BarredVault_C_GetValidWindow::ValidWindow' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_GetValidWindow, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_ADM_BarredVault_C_GetValidWindow::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_GetValidWindow, CallFunc_GetObjectName_ReturnValue) == 0x000018, "Member 'BP_ADM_BarredVault_C_GetValidWindow::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_GetValidWindow, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BP_ADM_BarredVault_C_GetValidWindow::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_GetValidWindow, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_ADM_BarredVault_C_GetValidWindow::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_GetValidWindow, CallFunc_GetAllActorsOfClass_OutActors) == 0x000030, "Member 'BP_ADM_BarredVault_C_GetValidWindow::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_GetValidWindow, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_ADM_BarredVault_C_GetValidWindow::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_GetValidWindow, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_ADM_BarredVault_C_GetValidWindow::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_GetValidWindow, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_ADM_BarredVault_C_GetValidWindow::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_GetValidWindow, CallFunc_GetObjectName_ReturnValue_1) == 0x000058, "Member 'BP_ADM_BarredVault_C_GetValidWindow::CallFunc_GetObjectName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_GetValidWindow, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000068, "Member 'BP_ADM_BarredVault_C_GetValidWindow::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

// Function BP_ADM_BarredVault.BP_ADM_BarredVault_C.On Rep State
// 0x0007 (0x0007 - 0x0000)
struct BP_ADM_BarredVault_C_On_Rep_State final
{
public:
	bool                                          New_State_Is_Valid;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_Equipment_Storage_Empty_Is_Empty;      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_Lootable_State                              CallFunc_Get_State_State;                          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_On_Rep_State_New_State_Is_Valid;          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ADM_BarredVault_C_On_Rep_State) == 0x000001, "Wrong alignment on BP_ADM_BarredVault_C_On_Rep_State");
static_assert(sizeof(BP_ADM_BarredVault_C_On_Rep_State) == 0x000007, "Wrong size on BP_ADM_BarredVault_C_On_Rep_State");
static_assert(offsetof(BP_ADM_BarredVault_C_On_Rep_State, New_State_Is_Valid) == 0x000000, "Member 'BP_ADM_BarredVault_C_On_Rep_State::New_State_Is_Valid' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_On_Rep_State, CallFunc_IsDedicatedServer_ReturnValue) == 0x000001, "Member 'BP_ADM_BarredVault_C_On_Rep_State::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_On_Rep_State, CallFunc_Is_Equipment_Storage_Empty_Is_Empty) == 0x000002, "Member 'BP_ADM_BarredVault_C_On_Rep_State::CallFunc_Is_Equipment_Storage_Empty_Is_Empty' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_On_Rep_State, CallFunc_Get_State_State) == 0x000003, "Member 'BP_ADM_BarredVault_C_On_Rep_State::CallFunc_Get_State_State' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_On_Rep_State, K2Node_SwitchEnum_CmpSuccess) == 0x000004, "Member 'BP_ADM_BarredVault_C_On_Rep_State::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_On_Rep_State, CallFunc_On_Rep_State_New_State_Is_Valid) == 0x000005, "Member 'BP_ADM_BarredVault_C_On_Rep_State::CallFunc_On_Rep_State_New_State_Is_Valid' has a wrong offset!");
static_assert(offsetof(BP_ADM_BarredVault_C_On_Rep_State, K2Node_SwitchEnum_CmpSuccess_1) == 0x000006, "Member 'BP_ADM_BarredVault_C_On_Rep_State::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");

}

