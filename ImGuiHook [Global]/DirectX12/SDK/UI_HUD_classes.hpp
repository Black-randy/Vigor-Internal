#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_HUD

#include "Basic.hpp"

#include "Flame_structs.hpp"
#include "Flame_classes.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "E_ChallengeManagerState_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_HUD.UI_HUD_C
// 0x00A0 (0x0398 - 0x02F8)
class UUI_HUD_C final : public UHUDWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02F8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       FadeCharacterEquipment;                            // 0x0300(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UUI_ADSHint_C*                          ADSHint;                                           // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BeingFreezed;                                      // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BeingHealed;                                       // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Canvas;                                            // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             GameInfoSlot;                                      // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_BloodEffect_C*                      UI_BloodEffect;                                    // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_HealedByOther_C*                    UI_HealedByOther;                                  // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_HoldBreath_C*                       UI_HoldBreath;                                     // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_LootNotification_C*                 UI_LootNotificationWidget;                         // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_NetworkStats_C*                     UI_NetworkStats;                                   // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_PersistentIconHolder_C*             UI_PersistentIconHolder;                           // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               GameInfoOverlay;                                   // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ChallengeManager_C*                 ChallengeManager;                                  // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_GameInfo_C*                         GameInfoWidget;                                    // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShowGameInfo;                                     // 0x0378(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_379[0x7];                                      // 0x0379(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           NotificationsDisplayDelayTimer;                    // 0x0380(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_ChallengeSlot_C*>            NotificationsDelayedChallenges;                    // 0x0388(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)

public:
	void ExecuteUbergraph_UI_HUD(int32 EntryPoint);
	void DelayChallengeNotificationPopUps(float DelayTime);
	void FlushDelayedNotifications();
	void EventChallengeManagerCreated();
	void InitChallengeNotification();
	void Show(bool bShowHUD);
	void ShowConsumableNotification(class UClass* ConsumableClass, float EffectTimer, bool IsPersistentEffect);
	void ShowChallengeNotification(class ABP_ChallengeSlot_C* ChallengeSlot);
	void EventChallengeProgressUpdated(class ABP_ChallengeSlot_C* Slot_0, int32 New_Progress);
	void EventChallengeManagerReady();
	void PreConstruct(bool IsDesignTime);
	void Construct();
	void GetOwningCharacter(class ABP_Character_C** BP_Character);
	void SetMainHUDVisibility(bool ShowHUD);
	void Set_Freezing_Indicator(bool BeingFreezed_0, float Value);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_HUD_C">();
	}
	static class UUI_HUD_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_HUD_C>();
	}
};
static_assert(alignof(UUI_HUD_C) == 0x000008, "Wrong alignment on UUI_HUD_C");
static_assert(sizeof(UUI_HUD_C) == 0x000398, "Wrong size on UUI_HUD_C");
static_assert(offsetof(UUI_HUD_C, UberGraphFrame) == 0x0002F8, "Member 'UUI_HUD_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, FadeCharacterEquipment) == 0x000300, "Member 'UUI_HUD_C::FadeCharacterEquipment' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, ADSHint) == 0x000308, "Member 'UUI_HUD_C::ADSHint' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, BeingFreezed) == 0x000310, "Member 'UUI_HUD_C::BeingFreezed' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, BeingHealed) == 0x000318, "Member 'UUI_HUD_C::BeingHealed' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, Canvas) == 0x000320, "Member 'UUI_HUD_C::Canvas' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, GameInfoSlot) == 0x000328, "Member 'UUI_HUD_C::GameInfoSlot' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, UI_BloodEffect) == 0x000330, "Member 'UUI_HUD_C::UI_BloodEffect' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, UI_HealedByOther) == 0x000338, "Member 'UUI_HUD_C::UI_HealedByOther' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, UI_HoldBreath) == 0x000340, "Member 'UUI_HUD_C::UI_HoldBreath' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, UI_LootNotificationWidget) == 0x000348, "Member 'UUI_HUD_C::UI_LootNotificationWidget' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, UI_NetworkStats) == 0x000350, "Member 'UUI_HUD_C::UI_NetworkStats' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, UI_PersistentIconHolder) == 0x000358, "Member 'UUI_HUD_C::UI_PersistentIconHolder' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, GameInfoOverlay) == 0x000360, "Member 'UUI_HUD_C::GameInfoOverlay' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, ChallengeManager) == 0x000368, "Member 'UUI_HUD_C::ChallengeManager' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, GameInfoWidget) == 0x000370, "Member 'UUI_HUD_C::GameInfoWidget' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, bShowGameInfo) == 0x000378, "Member 'UUI_HUD_C::bShowGameInfo' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, NotificationsDisplayDelayTimer) == 0x000380, "Member 'UUI_HUD_C::NotificationsDisplayDelayTimer' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, NotificationsDelayedChallenges) == 0x000388, "Member 'UUI_HUD_C::NotificationsDelayedChallenges' has a wrong offset!");

}

