#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GameMode_Tutorial

#include "Basic.hpp"

#include "Flame_structs.hpp"


namespace SDK::Params
{

// Function BP_GameMode_Tutorial.BP_GameMode_Tutorial_C.ExecuteUbergraph_BP_GameMode_Tutorial
// 0x00F0 (0x00F0 - 0x0000)
struct BP_GameMode_Tutorial_C_ExecuteUbergraph_BP_GameMode_Tutorial final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFlameGameInstance*                     CallFunc_GetFlameGameInstance_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USaveGame*                              K2Node_CustomEvent_SaveGame_1;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class USaveGame* SaveGame)>    K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	class USaveGame*                              K2Node_CustomEvent_SaveGame;                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class USaveGame* SaveGame)>    K2Node_CreateDelegate_OutputDelegate_1;            // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	class USaveGame*                              Temp_object_Variable;                              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& SlotName, int32 UserIndex)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0048(0x0010)(ZeroConstructor, NoDestructor)
	class UBP_Shelter_SaveGame_C*                 K2Node_DynamicCast_AsBP_Shelter_Save_Game;         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_SlotName_1;                     // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_UserIndex_1;                    // 0x0078(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_SlotName;                       // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_UserIndex;                      // 0x0090(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& SlotName, int32 UserIndex)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0094(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable;                              // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UBP_Shelter_SaveGame_C*                 CallFunc_CreateSaveGameObject_ReturnValue;         // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetUserControllerId_ReturnValue;          // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFlameGameLoad*                         CallFunc_LoadGameFromSlotByPlatform_ReturnValue;   // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetUserControllerId_ReturnValue_1;        // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFlameGameInstance*                     CallFunc_GetFlameGameInstance_ReturnValue_1;       // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFlameGameSave*                         CallFunc_SaveGameToSlotByPlatform_ReturnValue;     // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameMode_Tutorial_C_ExecuteUbergraph_BP_GameMode_Tutorial) == 0x000008, "Wrong alignment on BP_GameMode_Tutorial_C_ExecuteUbergraph_BP_GameMode_Tutorial");
static_assert(sizeof(BP_GameMode_Tutorial_C_ExecuteUbergraph_BP_GameMode_Tutorial) == 0x0000F0, "Wrong size on BP_GameMode_Tutorial_C_ExecuteUbergraph_BP_GameMode_Tutorial");
static_assert(offsetof(BP_GameMode_Tutorial_C_ExecuteUbergraph_BP_GameMode_Tutorial, EntryPoint) == 0x000000, "Member 'BP_GameMode_Tutorial_C_ExecuteUbergraph_BP_GameMode_Tutorial::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_ExecuteUbergraph_BP_GameMode_Tutorial, CallFunc_GetFlameGameInstance_ReturnValue) == 0x000008, "Member 'BP_GameMode_Tutorial_C_ExecuteUbergraph_BP_GameMode_Tutorial::CallFunc_GetFlameGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_ExecuteUbergraph_BP_GameMode_Tutorial, K2Node_CustomEvent_SaveGame_1) == 0x000010, "Member 'BP_GameMode_Tutorial_C_ExecuteUbergraph_BP_GameMode_Tutorial::K2Node_CustomEvent_SaveGame_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_ExecuteUbergraph_BP_GameMode_Tutorial, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'BP_GameMode_Tutorial_C_ExecuteUbergraph_BP_GameMode_Tutorial::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_ExecuteUbergraph_BP_GameMode_Tutorial, K2Node_CustomEvent_SaveGame) == 0x000028, "Member 'BP_GameMode_Tutorial_C_ExecuteUbergraph_BP_GameMode_Tutorial::K2Node_CustomEvent_SaveGame' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_ExecuteUbergraph_BP_GameMode_Tutorial, K2Node_CreateDelegate_OutputDelegate_1) == 0x000030, "Member 'BP_GameMode_Tutorial_C_ExecuteUbergraph_BP_GameMode_Tutorial::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_ExecuteUbergraph_BP_GameMode_Tutorial, Temp_object_Variable) == 0x000040, "Member 'BP_GameMode_Tutorial_C_ExecuteUbergraph_BP_GameMode_Tutorial::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_ExecuteUbergraph_BP_GameMode_Tutorial, K2Node_CreateDelegate_OutputDelegate_2) == 0x000048, "Member 'BP_GameMode_Tutorial_C_ExecuteUbergraph_BP_GameMode_Tutorial::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_ExecuteUbergraph_BP_GameMode_Tutorial, K2Node_DynamicCast_AsBP_Shelter_Save_Game) == 0x000058, "Member 'BP_GameMode_Tutorial_C_ExecuteUbergraph_BP_GameMode_Tutorial::K2Node_DynamicCast_AsBP_Shelter_Save_Game' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_ExecuteUbergraph_BP_GameMode_Tutorial, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'BP_GameMode_Tutorial_C_ExecuteUbergraph_BP_GameMode_Tutorial::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_ExecuteUbergraph_BP_GameMode_Tutorial, K2Node_CustomEvent_SlotName_1) == 0x000068, "Member 'BP_GameMode_Tutorial_C_ExecuteUbergraph_BP_GameMode_Tutorial::K2Node_CustomEvent_SlotName_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_ExecuteUbergraph_BP_GameMode_Tutorial, K2Node_CustomEvent_UserIndex_1) == 0x000078, "Member 'BP_GameMode_Tutorial_C_ExecuteUbergraph_BP_GameMode_Tutorial::K2Node_CustomEvent_UserIndex_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_ExecuteUbergraph_BP_GameMode_Tutorial, K2Node_CustomEvent_SlotName) == 0x000080, "Member 'BP_GameMode_Tutorial_C_ExecuteUbergraph_BP_GameMode_Tutorial::K2Node_CustomEvent_SlotName' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_ExecuteUbergraph_BP_GameMode_Tutorial, K2Node_CustomEvent_UserIndex) == 0x000090, "Member 'BP_GameMode_Tutorial_C_ExecuteUbergraph_BP_GameMode_Tutorial::K2Node_CustomEvent_UserIndex' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_ExecuteUbergraph_BP_GameMode_Tutorial, K2Node_CreateDelegate_OutputDelegate_3) == 0x000094, "Member 'BP_GameMode_Tutorial_C_ExecuteUbergraph_BP_GameMode_Tutorial::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_ExecuteUbergraph_BP_GameMode_Tutorial, Temp_int_Variable) == 0x0000A4, "Member 'BP_GameMode_Tutorial_C_ExecuteUbergraph_BP_GameMode_Tutorial::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_ExecuteUbergraph_BP_GameMode_Tutorial, Temp_string_Variable) == 0x0000A8, "Member 'BP_GameMode_Tutorial_C_ExecuteUbergraph_BP_GameMode_Tutorial::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_ExecuteUbergraph_BP_GameMode_Tutorial, CallFunc_CreateSaveGameObject_ReturnValue) == 0x0000B8, "Member 'BP_GameMode_Tutorial_C_ExecuteUbergraph_BP_GameMode_Tutorial::CallFunc_CreateSaveGameObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_ExecuteUbergraph_BP_GameMode_Tutorial, CallFunc_GetUserControllerId_ReturnValue) == 0x0000C0, "Member 'BP_GameMode_Tutorial_C_ExecuteUbergraph_BP_GameMode_Tutorial::CallFunc_GetUserControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_ExecuteUbergraph_BP_GameMode_Tutorial, CallFunc_LoadGameFromSlotByPlatform_ReturnValue) == 0x0000C8, "Member 'BP_GameMode_Tutorial_C_ExecuteUbergraph_BP_GameMode_Tutorial::CallFunc_LoadGameFromSlotByPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_ExecuteUbergraph_BP_GameMode_Tutorial, CallFunc_GetUserControllerId_ReturnValue_1) == 0x0000D0, "Member 'BP_GameMode_Tutorial_C_ExecuteUbergraph_BP_GameMode_Tutorial::CallFunc_GetUserControllerId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_ExecuteUbergraph_BP_GameMode_Tutorial, CallFunc_IsValid_ReturnValue) == 0x0000D4, "Member 'BP_GameMode_Tutorial_C_ExecuteUbergraph_BP_GameMode_Tutorial::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_ExecuteUbergraph_BP_GameMode_Tutorial, CallFunc_GetFlameGameInstance_ReturnValue_1) == 0x0000D8, "Member 'BP_GameMode_Tutorial_C_ExecuteUbergraph_BP_GameMode_Tutorial::CallFunc_GetFlameGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_ExecuteUbergraph_BP_GameMode_Tutorial, CallFunc_SaveGameToSlotByPlatform_ReturnValue) == 0x0000E0, "Member 'BP_GameMode_Tutorial_C_ExecuteUbergraph_BP_GameMode_Tutorial::CallFunc_SaveGameToSlotByPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_ExecuteUbergraph_BP_GameMode_Tutorial, CallFunc_IsValid_ReturnValue_1) == 0x0000E8, "Member 'BP_GameMode_Tutorial_C_ExecuteUbergraph_BP_GameMode_Tutorial::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_GameMode_Tutorial.BP_GameMode_Tutorial_C.OnSaveSucceed_784D67F941A70CFF2AE4AC8F8016AA7E
// 0x0018 (0x0018 - 0x0000)
struct BP_GameMode_Tutorial_C_OnSaveSucceed_784D67F941A70CFF2AE4AC8F8016AA7E final
{
public:
	class FString                                 SlotName;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         UserIndex;                                         // 0x0010(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_Tutorial_C_OnSaveSucceed_784D67F941A70CFF2AE4AC8F8016AA7E) == 0x000008, "Wrong alignment on BP_GameMode_Tutorial_C_OnSaveSucceed_784D67F941A70CFF2AE4AC8F8016AA7E");
static_assert(sizeof(BP_GameMode_Tutorial_C_OnSaveSucceed_784D67F941A70CFF2AE4AC8F8016AA7E) == 0x000018, "Wrong size on BP_GameMode_Tutorial_C_OnSaveSucceed_784D67F941A70CFF2AE4AC8F8016AA7E");
static_assert(offsetof(BP_GameMode_Tutorial_C_OnSaveSucceed_784D67F941A70CFF2AE4AC8F8016AA7E, SlotName) == 0x000000, "Member 'BP_GameMode_Tutorial_C_OnSaveSucceed_784D67F941A70CFF2AE4AC8F8016AA7E::SlotName' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_OnSaveSucceed_784D67F941A70CFF2AE4AC8F8016AA7E, UserIndex) == 0x000010, "Member 'BP_GameMode_Tutorial_C_OnSaveSucceed_784D67F941A70CFF2AE4AC8F8016AA7E::UserIndex' has a wrong offset!");

// Function BP_GameMode_Tutorial.BP_GameMode_Tutorial_C.OnSaveFailed_784D67F941A70CFF2AE4AC8F8016AA7E
// 0x0018 (0x0018 - 0x0000)
struct BP_GameMode_Tutorial_C_OnSaveFailed_784D67F941A70CFF2AE4AC8F8016AA7E final
{
public:
	class FString                                 SlotName;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         UserIndex;                                         // 0x0010(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_Tutorial_C_OnSaveFailed_784D67F941A70CFF2AE4AC8F8016AA7E) == 0x000008, "Wrong alignment on BP_GameMode_Tutorial_C_OnSaveFailed_784D67F941A70CFF2AE4AC8F8016AA7E");
static_assert(sizeof(BP_GameMode_Tutorial_C_OnSaveFailed_784D67F941A70CFF2AE4AC8F8016AA7E) == 0x000018, "Wrong size on BP_GameMode_Tutorial_C_OnSaveFailed_784D67F941A70CFF2AE4AC8F8016AA7E");
static_assert(offsetof(BP_GameMode_Tutorial_C_OnSaveFailed_784D67F941A70CFF2AE4AC8F8016AA7E, SlotName) == 0x000000, "Member 'BP_GameMode_Tutorial_C_OnSaveFailed_784D67F941A70CFF2AE4AC8F8016AA7E::SlotName' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_OnSaveFailed_784D67F941A70CFF2AE4AC8F8016AA7E, UserIndex) == 0x000010, "Member 'BP_GameMode_Tutorial_C_OnSaveFailed_784D67F941A70CFF2AE4AC8F8016AA7E::UserIndex' has a wrong offset!");

// Function BP_GameMode_Tutorial.BP_GameMode_Tutorial_C.OnLoadSucceed_973791334CC256FA81961790F36709DB
// 0x0008 (0x0008 - 0x0000)
struct BP_GameMode_Tutorial_C_OnLoadSucceed_973791334CC256FA81961790F36709DB final
{
public:
	class USaveGame*                              SaveGame;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_Tutorial_C_OnLoadSucceed_973791334CC256FA81961790F36709DB) == 0x000008, "Wrong alignment on BP_GameMode_Tutorial_C_OnLoadSucceed_973791334CC256FA81961790F36709DB");
static_assert(sizeof(BP_GameMode_Tutorial_C_OnLoadSucceed_973791334CC256FA81961790F36709DB) == 0x000008, "Wrong size on BP_GameMode_Tutorial_C_OnLoadSucceed_973791334CC256FA81961790F36709DB");
static_assert(offsetof(BP_GameMode_Tutorial_C_OnLoadSucceed_973791334CC256FA81961790F36709DB, SaveGame) == 0x000000, "Member 'BP_GameMode_Tutorial_C_OnLoadSucceed_973791334CC256FA81961790F36709DB::SaveGame' has a wrong offset!");

// Function BP_GameMode_Tutorial.BP_GameMode_Tutorial_C.OnLoadFailed_973791334CC256FA81961790F36709DB
// 0x0008 (0x0008 - 0x0000)
struct BP_GameMode_Tutorial_C_OnLoadFailed_973791334CC256FA81961790F36709DB final
{
public:
	class USaveGame*                              SaveGame;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameMode_Tutorial_C_OnLoadFailed_973791334CC256FA81961790F36709DB) == 0x000008, "Wrong alignment on BP_GameMode_Tutorial_C_OnLoadFailed_973791334CC256FA81961790F36709DB");
static_assert(sizeof(BP_GameMode_Tutorial_C_OnLoadFailed_973791334CC256FA81961790F36709DB) == 0x000008, "Wrong size on BP_GameMode_Tutorial_C_OnLoadFailed_973791334CC256FA81961790F36709DB");
static_assert(offsetof(BP_GameMode_Tutorial_C_OnLoadFailed_973791334CC256FA81961790F36709DB, SaveGame) == 0x000000, "Member 'BP_GameMode_Tutorial_C_OnLoadFailed_973791334CC256FA81961790F36709DB::SaveGame' has a wrong offset!");

// Function BP_GameMode_Tutorial.BP_GameMode_Tutorial_C.FinishAnalytics
// 0x0170 (0x0170 - 0x0000)
struct BP_GameMode_Tutorial_C_FinishAnalytics final
{
public:
	class APlayerController*                      ExitingController;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Meaningful_Distance_Traveled;                      // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Kills;                                             // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Distance_Traveled;                                 // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Headshots;                                         // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Accuracy;                                          // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Match_Time;                                        // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKillerUserInfo                        Killer_Info;                                       // 0x0020(0x0040)(Edit, BlueprintVisible)
	ECloudDeathCauseType                          Cause_of_Death;                                    // 0x0060(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECloudMatchEndType                            Result;                                            // 0x0061(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanCharacter*                        Character;                                         // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         K2Node_MakeArray_Array;                            // 0x0070(0x0010)(ConstParm, ReferenceParm)
	class AHumanPlayerController*                 K2Node_DynamicCast_AsHuman_Player_Controller;      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Script_C*          K2Node_DynamicCast_AsBP_Player_Controller_Script;  // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Send_Player_Disconnected_Event_ReturnValue; // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A[0x6];                                       // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Script_C*          K2Node_DynamicCast_AsBP_Player_Controller_Script_1; // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Script_C*          K2Node_DynamicCast_AsBP_Player_Controller_Script_2; // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_Script_C*          K2Node_DynamicCast_AsBP_Player_Controller_Script_3; // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanCharacter*                        K2Node_DynamicCast_AsHuman_Character;              // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_102[0x6];                                      // 0x0102(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCloudBattlePassMatchEventInfo> K2Node_MakeArray_Array_1;                          // 0x0108(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11B[0x5];                                      // 0x011B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateFlame*                        K2Node_DynamicCast_AsGame_State_Flame;             // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_Script_C*                 K2Node_DynamicCast_AsBP_Character_Script;          // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameState_Script_C*                 K2Node_DynamicCast_AsBP_Game_State_Script;         // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_152[0x2];                                      // 0x0152(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItemsGrid*                             CallFunc_GetBackpack_ReturnValue;                  // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsDead_ReturnValue;                    // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CountOfResource_ReturnValue;              // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x016A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x016B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameMode_Tutorial_C_FinishAnalytics) == 0x000008, "Wrong alignment on BP_GameMode_Tutorial_C_FinishAnalytics");
static_assert(sizeof(BP_GameMode_Tutorial_C_FinishAnalytics) == 0x000170, "Wrong size on BP_GameMode_Tutorial_C_FinishAnalytics");
static_assert(offsetof(BP_GameMode_Tutorial_C_FinishAnalytics, ExitingController) == 0x000000, "Member 'BP_GameMode_Tutorial_C_FinishAnalytics::ExitingController' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_FinishAnalytics, Meaningful_Distance_Traveled) == 0x000008, "Member 'BP_GameMode_Tutorial_C_FinishAnalytics::Meaningful_Distance_Traveled' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_FinishAnalytics, Kills) == 0x00000C, "Member 'BP_GameMode_Tutorial_C_FinishAnalytics::Kills' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_FinishAnalytics, Distance_Traveled) == 0x000010, "Member 'BP_GameMode_Tutorial_C_FinishAnalytics::Distance_Traveled' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_FinishAnalytics, Headshots) == 0x000014, "Member 'BP_GameMode_Tutorial_C_FinishAnalytics::Headshots' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_FinishAnalytics, Accuracy) == 0x000018, "Member 'BP_GameMode_Tutorial_C_FinishAnalytics::Accuracy' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_FinishAnalytics, Match_Time) == 0x00001C, "Member 'BP_GameMode_Tutorial_C_FinishAnalytics::Match_Time' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_FinishAnalytics, Killer_Info) == 0x000020, "Member 'BP_GameMode_Tutorial_C_FinishAnalytics::Killer_Info' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_FinishAnalytics, Cause_of_Death) == 0x000060, "Member 'BP_GameMode_Tutorial_C_FinishAnalytics::Cause_of_Death' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_FinishAnalytics, Result) == 0x000061, "Member 'BP_GameMode_Tutorial_C_FinishAnalytics::Result' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_FinishAnalytics, Character) == 0x000068, "Member 'BP_GameMode_Tutorial_C_FinishAnalytics::Character' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_FinishAnalytics, K2Node_MakeArray_Array) == 0x000070, "Member 'BP_GameMode_Tutorial_C_FinishAnalytics::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_FinishAnalytics, K2Node_DynamicCast_AsHuman_Player_Controller) == 0x000080, "Member 'BP_GameMode_Tutorial_C_FinishAnalytics::K2Node_DynamicCast_AsHuman_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_FinishAnalytics, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'BP_GameMode_Tutorial_C_FinishAnalytics::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_FinishAnalytics, K2Node_DynamicCast_AsBP_Player_Controller_Script) == 0x000090, "Member 'BP_GameMode_Tutorial_C_FinishAnalytics::K2Node_DynamicCast_AsBP_Player_Controller_Script' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_FinishAnalytics, K2Node_DynamicCast_bSuccess_1) == 0x000098, "Member 'BP_GameMode_Tutorial_C_FinishAnalytics::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_FinishAnalytics, CallFunc_Send_Player_Disconnected_Event_ReturnValue) == 0x000099, "Member 'BP_GameMode_Tutorial_C_FinishAnalytics::CallFunc_Send_Player_Disconnected_Event_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_FinishAnalytics, K2Node_DynamicCast_AsBP_Player_Controller_Script_1) == 0x0000A0, "Member 'BP_GameMode_Tutorial_C_FinishAnalytics::K2Node_DynamicCast_AsBP_Player_Controller_Script_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_FinishAnalytics, K2Node_DynamicCast_bSuccess_2) == 0x0000A8, "Member 'BP_GameMode_Tutorial_C_FinishAnalytics::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_FinishAnalytics, K2Node_DynamicCast_AsBP_Player_Controller_Script_2) == 0x0000B0, "Member 'BP_GameMode_Tutorial_C_FinishAnalytics::K2Node_DynamicCast_AsBP_Player_Controller_Script_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_FinishAnalytics, K2Node_DynamicCast_bSuccess_3) == 0x0000B8, "Member 'BP_GameMode_Tutorial_C_FinishAnalytics::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_FinishAnalytics, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000BC, "Member 'BP_GameMode_Tutorial_C_FinishAnalytics::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_FinishAnalytics, CallFunc_FTrunc_ReturnValue) == 0x0000C0, "Member 'BP_GameMode_Tutorial_C_FinishAnalytics::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_FinishAnalytics, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0000C4, "Member 'BP_GameMode_Tutorial_C_FinishAnalytics::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_FinishAnalytics, CallFunc_FTrunc_ReturnValue_1) == 0x0000C8, "Member 'BP_GameMode_Tutorial_C_FinishAnalytics::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_FinishAnalytics, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000CC, "Member 'BP_GameMode_Tutorial_C_FinishAnalytics::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_FinishAnalytics, CallFunc_Multiply_IntInt_ReturnValue) == 0x0000D0, "Member 'BP_GameMode_Tutorial_C_FinishAnalytics::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_FinishAnalytics, CallFunc_Divide_IntInt_ReturnValue) == 0x0000D4, "Member 'BP_GameMode_Tutorial_C_FinishAnalytics::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_FinishAnalytics, K2Node_DynamicCast_AsBP_Player_Controller_Script_3) == 0x0000D8, "Member 'BP_GameMode_Tutorial_C_FinishAnalytics::K2Node_DynamicCast_AsBP_Player_Controller_Script_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_FinishAnalytics, K2Node_DynamicCast_bSuccess_4) == 0x0000E0, "Member 'BP_GameMode_Tutorial_C_FinishAnalytics::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_FinishAnalytics, CallFunc_K2_GetPawn_ReturnValue) == 0x0000E8, "Member 'BP_GameMode_Tutorial_C_FinishAnalytics::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_FinishAnalytics, CallFunc_IsValid_ReturnValue) == 0x0000F0, "Member 'BP_GameMode_Tutorial_C_FinishAnalytics::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_FinishAnalytics, K2Node_DynamicCast_AsHuman_Character) == 0x0000F8, "Member 'BP_GameMode_Tutorial_C_FinishAnalytics::K2Node_DynamicCast_AsHuman_Character' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_FinishAnalytics, K2Node_DynamicCast_bSuccess_5) == 0x000100, "Member 'BP_GameMode_Tutorial_C_FinishAnalytics::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_FinishAnalytics, CallFunc_IsValid_ReturnValue_1) == 0x000101, "Member 'BP_GameMode_Tutorial_C_FinishAnalytics::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_FinishAnalytics, K2Node_MakeArray_Array_1) == 0x000108, "Member 'BP_GameMode_Tutorial_C_FinishAnalytics::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_FinishAnalytics, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000118, "Member 'BP_GameMode_Tutorial_C_FinishAnalytics::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_FinishAnalytics, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000119, "Member 'BP_GameMode_Tutorial_C_FinishAnalytics::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_FinishAnalytics, CallFunc_BooleanAND_ReturnValue) == 0x00011A, "Member 'BP_GameMode_Tutorial_C_FinishAnalytics::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_FinishAnalytics, CallFunc_GetGameState_ReturnValue) == 0x000120, "Member 'BP_GameMode_Tutorial_C_FinishAnalytics::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_FinishAnalytics, K2Node_DynamicCast_AsGame_State_Flame) == 0x000128, "Member 'BP_GameMode_Tutorial_C_FinishAnalytics::K2Node_DynamicCast_AsGame_State_Flame' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_FinishAnalytics, K2Node_DynamicCast_bSuccess_6) == 0x000130, "Member 'BP_GameMode_Tutorial_C_FinishAnalytics::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_FinishAnalytics, K2Node_DynamicCast_AsBP_Character_Script) == 0x000138, "Member 'BP_GameMode_Tutorial_C_FinishAnalytics::K2Node_DynamicCast_AsBP_Character_Script' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_FinishAnalytics, K2Node_DynamicCast_bSuccess_7) == 0x000140, "Member 'BP_GameMode_Tutorial_C_FinishAnalytics::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_FinishAnalytics, K2Node_DynamicCast_AsBP_Game_State_Script) == 0x000148, "Member 'BP_GameMode_Tutorial_C_FinishAnalytics::K2Node_DynamicCast_AsBP_Game_State_Script' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_FinishAnalytics, K2Node_DynamicCast_bSuccess_8) == 0x000150, "Member 'BP_GameMode_Tutorial_C_FinishAnalytics::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_FinishAnalytics, CallFunc_Less_IntInt_ReturnValue) == 0x000151, "Member 'BP_GameMode_Tutorial_C_FinishAnalytics::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_FinishAnalytics, CallFunc_Subtract_IntInt_ReturnValue) == 0x000154, "Member 'BP_GameMode_Tutorial_C_FinishAnalytics::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_FinishAnalytics, CallFunc_GetBackpack_ReturnValue) == 0x000158, "Member 'BP_GameMode_Tutorial_C_FinishAnalytics::CallFunc_GetBackpack_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_FinishAnalytics, CallFunc_GetIsDead_ReturnValue) == 0x000160, "Member 'BP_GameMode_Tutorial_C_FinishAnalytics::CallFunc_GetIsDead_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_FinishAnalytics, CallFunc_CountOfResource_ReturnValue) == 0x000164, "Member 'BP_GameMode_Tutorial_C_FinishAnalytics::CallFunc_CountOfResource_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_FinishAnalytics, CallFunc_Greater_IntInt_ReturnValue) == 0x000168, "Member 'BP_GameMode_Tutorial_C_FinishAnalytics::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_FinishAnalytics, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000169, "Member 'BP_GameMode_Tutorial_C_FinishAnalytics::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_FinishAnalytics, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x00016A, "Member 'BP_GameMode_Tutorial_C_FinishAnalytics::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_FinishAnalytics, CallFunc_BooleanOR_ReturnValue) == 0x00016B, "Member 'BP_GameMode_Tutorial_C_FinishAnalytics::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_GameMode_Tutorial.BP_GameMode_Tutorial_C.OnPlayerDied
// 0x0018 (0x0018 - 0x0000)
struct BP_GameMode_Tutorial_C_OnPlayerDied final
{
public:
	class AHumanCharacter*                        Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanCharacter*                        Killer;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameMode_Tutorial_C_OnPlayerDied) == 0x000008, "Wrong alignment on BP_GameMode_Tutorial_C_OnPlayerDied");
static_assert(sizeof(BP_GameMode_Tutorial_C_OnPlayerDied) == 0x000018, "Wrong size on BP_GameMode_Tutorial_C_OnPlayerDied");
static_assert(offsetof(BP_GameMode_Tutorial_C_OnPlayerDied, Player) == 0x000000, "Member 'BP_GameMode_Tutorial_C_OnPlayerDied::Player' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_OnPlayerDied, Killer) == 0x000008, "Member 'BP_GameMode_Tutorial_C_OnPlayerDied::Killer' has a wrong offset!");
static_assert(offsetof(BP_GameMode_Tutorial_C_OnPlayerDied, ReturnValue) == 0x000010, "Member 'BP_GameMode_Tutorial_C_OnPlayerDied::ReturnValue' has a wrong offset!");

}

