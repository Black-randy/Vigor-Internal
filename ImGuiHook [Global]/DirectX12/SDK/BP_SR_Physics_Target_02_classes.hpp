#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SR_Physics_Target_02

#include "Basic.hpp"

#include "BP_SRTarget_Base_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SR_Physics_Target_02.BP_SR_Physics_Target_02_C
// 0x02F8 (0x05C0 - 0x02C8)
#pragma pack(push, 0x1)
class alignas(0x10) ABP_SR_Physics_Target_02_C : public ABP_SRTarget_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_SR_Physics_Target_02_C;          // 0x02C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   TargetPoleVertical;                                // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   TargetPole;                                        // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          PawnCollisionShell;                                // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPhysicsConstraintComponent*            PhysicsConstraint_Target_3;                        // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPhysicsConstraintComponent*            PhysicsConstraint_Target_4;                        // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPhysicsConstraintComponent*            PhysicsConstraint_Target_2;                        // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPhysicsConstraintComponent*            PhysicsConstraint_Target_1;                        // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene1;                                            // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPhysicsConstraintComponent*            PhysicsConstraintBasePole1;                        // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Target_04;                                         // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Target_03;                                         // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene3;                                            // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene2;                                            // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Target_02;                                         // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Target_01;                                         // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPhysicsConstraintComponent*            PhysicsConstraintBasePole;                         // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_ShootingChallenges_TargetComponent_C* BP_ShootingChallenges_TargetComponent;             // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BasePole;                                          // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         SpeedOfRotation;                                   // 0x0370(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Hit_Targets;                                       // 0x0374(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_378[0x8];                                      // 0x0378(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Location;                                          // 0x0380(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FTransform                             Target_1_transform;                                // 0x03B0(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FTransform                             Target_2_transform;                                // 0x03E0(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FTransform                             Target_3_transform;                                // 0x0410(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FTransform                             Target_4_transform;                                // 0x0440(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         LastPitchDelta;                                    // 0x0470(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_474[0xC];                                      // 0x0474(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             TargetPoleTransform;                               // 0x0480(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	TMap<class UStaticMeshComponent*, bool>       TargetToHit;                                       // 0x04B0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TMap<class UStaticMeshComponent*, int32>      TargetToIndicatorIndex;                            // 0x0500(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FTransform                             Pole_1_Transform;                                  // 0x0550(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FTransform                             Pole_2_Transform;                                  // 0x0580(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             BulletImpactSound;                                 // 0x05B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_SR_Physics_Target_02(int32 EntryPoint);
	void StabilizeTargets();
	void ReceiveBeginPlay();
	void ReceivePointDamage(float Damage, const class UDamageType* DamageType, const struct FVector& HitLocation, const struct FVector& HitNormal, class UPrimitiveComponent* HitComponent, class FName BoneName, const struct FVector& ShotFromDirection, class AController* InstigatedBy, class AActor* DamageCauser, const struct FHitResult& HitInfo);
	void SaveData();
	void ResetTargetServer();
	void SetupIndicators();
	void OnHitHandleChallenges(int32 IndicatorIndex);
	void SetSpawnPoint(class AActor* SpawnPoint);
	void SetTargetActivity(bool IsActive_0);
	void UserConstructionScript();
	void DEBUG_Reset();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SR_Physics_Target_02_C">();
	}
	static class ABP_SR_Physics_Target_02_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_SR_Physics_Target_02_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(ABP_SR_Physics_Target_02_C) == 0x000010, "Wrong alignment on ABP_SR_Physics_Target_02_C");
static_assert(sizeof(ABP_SR_Physics_Target_02_C) == 0x0005C0, "Wrong size on ABP_SR_Physics_Target_02_C");
static_assert(offsetof(ABP_SR_Physics_Target_02_C, UberGraphFrame_BP_SR_Physics_Target_02_C) == 0x0002C8, "Member 'ABP_SR_Physics_Target_02_C::UberGraphFrame_BP_SR_Physics_Target_02_C' has a wrong offset!");
static_assert(offsetof(ABP_SR_Physics_Target_02_C, TargetPoleVertical) == 0x0002D0, "Member 'ABP_SR_Physics_Target_02_C::TargetPoleVertical' has a wrong offset!");
static_assert(offsetof(ABP_SR_Physics_Target_02_C, TargetPole) == 0x0002D8, "Member 'ABP_SR_Physics_Target_02_C::TargetPole' has a wrong offset!");
static_assert(offsetof(ABP_SR_Physics_Target_02_C, StaticMesh) == 0x0002E0, "Member 'ABP_SR_Physics_Target_02_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_SR_Physics_Target_02_C, PawnCollisionShell) == 0x0002E8, "Member 'ABP_SR_Physics_Target_02_C::PawnCollisionShell' has a wrong offset!");
static_assert(offsetof(ABP_SR_Physics_Target_02_C, PhysicsConstraint_Target_3) == 0x0002F0, "Member 'ABP_SR_Physics_Target_02_C::PhysicsConstraint_Target_3' has a wrong offset!");
static_assert(offsetof(ABP_SR_Physics_Target_02_C, PhysicsConstraint_Target_4) == 0x0002F8, "Member 'ABP_SR_Physics_Target_02_C::PhysicsConstraint_Target_4' has a wrong offset!");
static_assert(offsetof(ABP_SR_Physics_Target_02_C, PhysicsConstraint_Target_2) == 0x000300, "Member 'ABP_SR_Physics_Target_02_C::PhysicsConstraint_Target_2' has a wrong offset!");
static_assert(offsetof(ABP_SR_Physics_Target_02_C, PhysicsConstraint_Target_1) == 0x000308, "Member 'ABP_SR_Physics_Target_02_C::PhysicsConstraint_Target_1' has a wrong offset!");
static_assert(offsetof(ABP_SR_Physics_Target_02_C, Scene) == 0x000310, "Member 'ABP_SR_Physics_Target_02_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_SR_Physics_Target_02_C, Scene1) == 0x000318, "Member 'ABP_SR_Physics_Target_02_C::Scene1' has a wrong offset!");
static_assert(offsetof(ABP_SR_Physics_Target_02_C, PhysicsConstraintBasePole1) == 0x000320, "Member 'ABP_SR_Physics_Target_02_C::PhysicsConstraintBasePole1' has a wrong offset!");
static_assert(offsetof(ABP_SR_Physics_Target_02_C, Target_04) == 0x000328, "Member 'ABP_SR_Physics_Target_02_C::Target_04' has a wrong offset!");
static_assert(offsetof(ABP_SR_Physics_Target_02_C, Target_03) == 0x000330, "Member 'ABP_SR_Physics_Target_02_C::Target_03' has a wrong offset!");
static_assert(offsetof(ABP_SR_Physics_Target_02_C, Scene3) == 0x000338, "Member 'ABP_SR_Physics_Target_02_C::Scene3' has a wrong offset!");
static_assert(offsetof(ABP_SR_Physics_Target_02_C, Scene2) == 0x000340, "Member 'ABP_SR_Physics_Target_02_C::Scene2' has a wrong offset!");
static_assert(offsetof(ABP_SR_Physics_Target_02_C, Target_02) == 0x000348, "Member 'ABP_SR_Physics_Target_02_C::Target_02' has a wrong offset!");
static_assert(offsetof(ABP_SR_Physics_Target_02_C, Target_01) == 0x000350, "Member 'ABP_SR_Physics_Target_02_C::Target_01' has a wrong offset!");
static_assert(offsetof(ABP_SR_Physics_Target_02_C, PhysicsConstraintBasePole) == 0x000358, "Member 'ABP_SR_Physics_Target_02_C::PhysicsConstraintBasePole' has a wrong offset!");
static_assert(offsetof(ABP_SR_Physics_Target_02_C, BP_ShootingChallenges_TargetComponent) == 0x000360, "Member 'ABP_SR_Physics_Target_02_C::BP_ShootingChallenges_TargetComponent' has a wrong offset!");
static_assert(offsetof(ABP_SR_Physics_Target_02_C, BasePole) == 0x000368, "Member 'ABP_SR_Physics_Target_02_C::BasePole' has a wrong offset!");
static_assert(offsetof(ABP_SR_Physics_Target_02_C, SpeedOfRotation) == 0x000370, "Member 'ABP_SR_Physics_Target_02_C::SpeedOfRotation' has a wrong offset!");
static_assert(offsetof(ABP_SR_Physics_Target_02_C, Hit_Targets) == 0x000374, "Member 'ABP_SR_Physics_Target_02_C::Hit_Targets' has a wrong offset!");
static_assert(offsetof(ABP_SR_Physics_Target_02_C, Location) == 0x000380, "Member 'ABP_SR_Physics_Target_02_C::Location' has a wrong offset!");
static_assert(offsetof(ABP_SR_Physics_Target_02_C, Target_1_transform) == 0x0003B0, "Member 'ABP_SR_Physics_Target_02_C::Target_1_transform' has a wrong offset!");
static_assert(offsetof(ABP_SR_Physics_Target_02_C, Target_2_transform) == 0x0003E0, "Member 'ABP_SR_Physics_Target_02_C::Target_2_transform' has a wrong offset!");
static_assert(offsetof(ABP_SR_Physics_Target_02_C, Target_3_transform) == 0x000410, "Member 'ABP_SR_Physics_Target_02_C::Target_3_transform' has a wrong offset!");
static_assert(offsetof(ABP_SR_Physics_Target_02_C, Target_4_transform) == 0x000440, "Member 'ABP_SR_Physics_Target_02_C::Target_4_transform' has a wrong offset!");
static_assert(offsetof(ABP_SR_Physics_Target_02_C, LastPitchDelta) == 0x000470, "Member 'ABP_SR_Physics_Target_02_C::LastPitchDelta' has a wrong offset!");
static_assert(offsetof(ABP_SR_Physics_Target_02_C, TargetPoleTransform) == 0x000480, "Member 'ABP_SR_Physics_Target_02_C::TargetPoleTransform' has a wrong offset!");
static_assert(offsetof(ABP_SR_Physics_Target_02_C, TargetToHit) == 0x0004B0, "Member 'ABP_SR_Physics_Target_02_C::TargetToHit' has a wrong offset!");
static_assert(offsetof(ABP_SR_Physics_Target_02_C, TargetToIndicatorIndex) == 0x000500, "Member 'ABP_SR_Physics_Target_02_C::TargetToIndicatorIndex' has a wrong offset!");
static_assert(offsetof(ABP_SR_Physics_Target_02_C, Pole_1_Transform) == 0x000550, "Member 'ABP_SR_Physics_Target_02_C::Pole_1_Transform' has a wrong offset!");
static_assert(offsetof(ABP_SR_Physics_Target_02_C, Pole_2_Transform) == 0x000580, "Member 'ABP_SR_Physics_Target_02_C::Pole_2_Transform' has a wrong offset!");
static_assert(offsetof(ABP_SR_Physics_Target_02_C, BulletImpactSound) == 0x0005B0, "Member 'ABP_SR_Physics_Target_02_C::BulletImpactSound' has a wrong offset!");

}

