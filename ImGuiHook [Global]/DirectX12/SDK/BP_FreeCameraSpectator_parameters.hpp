#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FreeCameraSpectator

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_FreeCameraSpectator.BP_FreeCameraSpectator_C.ExecuteUbergraph_BP_FreeCameraSpectator
// 0x0220 (0x0220 - 0x0000)
struct BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_Event_NewController;                        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_C*                 K2Node_DynamicCast_AsBP_Player_Controller;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_Event_OldController;                        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSurfacePoint_ReturnValue;              // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0068(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWaterComponent*                        CallFunc_GetComponentByClass_ReturnValue;          // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0130(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWaterComponent*                        CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0148(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x3];                                      // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0154(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16D[0x3];                                      // 0x016D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0174(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0180(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20D[0x3];                                      // 0x020D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_FreeCameraControls_C*               CallFunc_Create_ReturnValue;                       // 0x0210(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator) == 0x000008, "Wrong alignment on BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator");
static_assert(sizeof(BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator) == 0x000220, "Wrong size on BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator");
static_assert(offsetof(BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator, EntryPoint) == 0x000000, "Member 'BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator, CallFunc_IsDedicatedServer_ReturnValue) == 0x000004, "Member 'BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator, CallFunc_IsValid_ReturnValue) == 0x000005, "Member 'BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator, CallFunc_IsServer_ReturnValue) == 0x000006, "Member 'BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator, CallFunc_IsValid_ReturnValue_1) == 0x000007, "Member 'BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator, K2Node_Event_NewController) == 0x000010, "Member 'BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator::K2Node_Event_NewController' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator, K2Node_DynamicCast_AsBP_Player_Controller) == 0x000018, "Member 'BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator::K2Node_DynamicCast_AsBP_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator, K2Node_Event_OldController) == 0x000028, "Member 'BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator::K2Node_Event_OldController' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000030, "Member 'BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator, CallFunc_GetSurfacePoint_ReturnValue) == 0x00003C, "Member 'BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator::CallFunc_GetSurfacePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000048, "Member 'BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000050, "Member 'BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000058, "Member 'BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000060, "Member 'BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator, K2Node_ComponentBoundEvent_bFromSweep) == 0x000064, "Member 'BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator, K2Node_ComponentBoundEvent_SweepResult) == 0x000068, "Member 'BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator, CallFunc_GetComponentByClass_ReturnValue) == 0x0000F8, "Member 'BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator, CallFunc_IsValid_ReturnValue_2) == 0x000100, "Member 'BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000104, "Member 'BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator, CallFunc_MakeVector_ReturnValue) == 0x000108, "Member 'BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator, CallFunc_Add_VectorVector_ReturnValue) == 0x000114, "Member 'BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000120, "Member 'BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator, K2Node_ComponentBoundEvent_OtherActor) == 0x000128, "Member 'BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator, K2Node_ComponentBoundEvent_OtherComp) == 0x000130, "Member 'BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000138, "Member 'BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator, CallFunc_BreakVector_X) == 0x00013C, "Member 'BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator, CallFunc_BreakVector_Y) == 0x000140, "Member 'BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator, CallFunc_BreakVector_Z) == 0x000144, "Member 'BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000148, "Member 'BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator, CallFunc_IsValid_ReturnValue_3) == 0x000150, "Member 'BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000154, "Member 'BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator, CallFunc_BreakVector_X_1) == 0x000160, "Member 'BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator, CallFunc_BreakVector_Y_1) == 0x000164, "Member 'BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator, CallFunc_BreakVector_Z_1) == 0x000168, "Member 'BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00016C, "Member 'BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator, CallFunc_FMax_ReturnValue) == 0x000170, "Member 'BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator, CallFunc_MakeVector_ReturnValue_1) == 0x000174, "Member 'BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000180, "Member 'BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator, CallFunc_K2_SetActorLocation_ReturnValue) == 0x00020C, "Member 'BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator, CallFunc_Create_ReturnValue) == 0x000210, "Member 'BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator, K2Node_Event_EndPlayReason) == 0x000218, "Member 'BP_FreeCameraSpectator_C_ExecuteUbergraph_BP_FreeCameraSpectator::K2Node_Event_EndPlayReason' has a wrong offset!");

// Function BP_FreeCameraSpectator.BP_FreeCameraSpectator_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_FreeCameraSpectator_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FreeCameraSpectator_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_FreeCameraSpectator_C_ReceiveEndPlay");
static_assert(sizeof(BP_FreeCameraSpectator_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_FreeCameraSpectator_C_ReceiveEndPlay");
static_assert(offsetof(BP_FreeCameraSpectator_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_FreeCameraSpectator_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_FreeCameraSpectator.BP_FreeCameraSpectator_C.BndEvt__CollisionComponent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_FreeCameraSpectator_C_BndEvt__CollisionComponent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FreeCameraSpectator_C_BndEvt__CollisionComponent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_FreeCameraSpectator_C_BndEvt__CollisionComponent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_FreeCameraSpectator_C_BndEvt__CollisionComponent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_FreeCameraSpectator_C_BndEvt__CollisionComponent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_FreeCameraSpectator_C_BndEvt__CollisionComponent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_FreeCameraSpectator_C_BndEvt__CollisionComponent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_BndEvt__CollisionComponent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_FreeCameraSpectator_C_BndEvt__CollisionComponent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_BndEvt__CollisionComponent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_FreeCameraSpectator_C_BndEvt__CollisionComponent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_BndEvt__CollisionComponent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_FreeCameraSpectator_C_BndEvt__CollisionComponent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_FreeCameraSpectator.BP_FreeCameraSpectator_C.BndEvt__CollisionComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct BP_FreeCameraSpectator_C_BndEvt__CollisionComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_FreeCameraSpectator_C_BndEvt__CollisionComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_FreeCameraSpectator_C_BndEvt__CollisionComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_FreeCameraSpectator_C_BndEvt__CollisionComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000B0, "Wrong size on BP_FreeCameraSpectator_C_BndEvt__CollisionComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_FreeCameraSpectator_C_BndEvt__CollisionComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_FreeCameraSpectator_C_BndEvt__CollisionComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_BndEvt__CollisionComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_FreeCameraSpectator_C_BndEvt__CollisionComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_BndEvt__CollisionComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_FreeCameraSpectator_C_BndEvt__CollisionComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_BndEvt__CollisionComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_FreeCameraSpectator_C_BndEvt__CollisionComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_BndEvt__CollisionComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_FreeCameraSpectator_C_BndEvt__CollisionComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_BndEvt__CollisionComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_FreeCameraSpectator_C_BndEvt__CollisionComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_FreeCameraSpectator.BP_FreeCameraSpectator_C.ReceiveUnpossessed
// 0x0008 (0x0008 - 0x0000)
struct BP_FreeCameraSpectator_C_ReceiveUnpossessed final
{
public:
	class AController*                            OldController;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FreeCameraSpectator_C_ReceiveUnpossessed) == 0x000008, "Wrong alignment on BP_FreeCameraSpectator_C_ReceiveUnpossessed");
static_assert(sizeof(BP_FreeCameraSpectator_C_ReceiveUnpossessed) == 0x000008, "Wrong size on BP_FreeCameraSpectator_C_ReceiveUnpossessed");
static_assert(offsetof(BP_FreeCameraSpectator_C_ReceiveUnpossessed, OldController) == 0x000000, "Member 'BP_FreeCameraSpectator_C_ReceiveUnpossessed::OldController' has a wrong offset!");

// Function BP_FreeCameraSpectator.BP_FreeCameraSpectator_C.ReceivePossessed
// 0x0008 (0x0008 - 0x0000)
struct BP_FreeCameraSpectator_C_ReceivePossessed final
{
public:
	class AController*                            NewController;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FreeCameraSpectator_C_ReceivePossessed) == 0x000008, "Wrong alignment on BP_FreeCameraSpectator_C_ReceivePossessed");
static_assert(sizeof(BP_FreeCameraSpectator_C_ReceivePossessed) == 0x000008, "Wrong size on BP_FreeCameraSpectator_C_ReceivePossessed");
static_assert(offsetof(BP_FreeCameraSpectator_C_ReceivePossessed, NewController) == 0x000000, "Member 'BP_FreeCameraSpectator_C_ReceivePossessed::NewController' has a wrong offset!");

// Function BP_FreeCameraSpectator.BP_FreeCameraSpectator_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_FreeCameraSpectator_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FreeCameraSpectator_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_FreeCameraSpectator_C_ReceiveTick");
static_assert(sizeof(BP_FreeCameraSpectator_C_ReceiveTick) == 0x000004, "Wrong size on BP_FreeCameraSpectator_C_ReceiveTick");
static_assert(offsetof(BP_FreeCameraSpectator_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_FreeCameraSpectator_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_FreeCameraSpectator.BP_FreeCameraSpectator_C.CameraRotation
// 0x0030 (0x0030 - 0x0000)
struct BP_FreeCameraSpectator_C_CameraRotation final
{
public:
	float                                         Delta_seconds;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetCachedAimInput_ReturnValue;            // 0x0004(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue;    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue_1;     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FreeCameraSpectator_C_CameraRotation) == 0x000004, "Wrong alignment on BP_FreeCameraSpectator_C_CameraRotation");
static_assert(sizeof(BP_FreeCameraSpectator_C_CameraRotation) == 0x000030, "Wrong size on BP_FreeCameraSpectator_C_CameraRotation");
static_assert(offsetof(BP_FreeCameraSpectator_C_CameraRotation, Delta_seconds) == 0x000000, "Member 'BP_FreeCameraSpectator_C_CameraRotation::Delta_seconds' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_CameraRotation, CallFunc_GetCachedAimInput_ReturnValue) == 0x000004, "Member 'BP_FreeCameraSpectator_C_CameraRotation::CallFunc_GetCachedAimInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_CameraRotation, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'BP_FreeCameraSpectator_C_CameraRotation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_CameraRotation, CallFunc_Multiply_Vector2DVector2D_ReturnValue) == 0x000010, "Member 'BP_FreeCameraSpectator_C_CameraRotation::CallFunc_Multiply_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_CameraRotation, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000018, "Member 'BP_FreeCameraSpectator_C_CameraRotation::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_CameraRotation, CallFunc_Multiply_Vector2DFloat_ReturnValue_1) == 0x000020, "Member 'BP_FreeCameraSpectator_C_CameraRotation::CallFunc_Multiply_Vector2DFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_CameraRotation, CallFunc_BreakVector2D_X) == 0x000028, "Member 'BP_FreeCameraSpectator_C_CameraRotation::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_CameraRotation, CallFunc_BreakVector2D_Y) == 0x00002C, "Member 'BP_FreeCameraSpectator_C_CameraRotation::CallFunc_BreakVector2D_Y' has a wrong offset!");

// Function BP_FreeCameraSpectator.BP_FreeCameraSpectator_C.CameraUpDownMovement
// 0x001C (0x001C - 0x0000)
struct BP_FreeCameraSpectator_C_CameraUpDownMovement final
{
public:
	float                                         Delta_seconds;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FreeCameraSpectator_C_CameraUpDownMovement) == 0x000004, "Wrong alignment on BP_FreeCameraSpectator_C_CameraUpDownMovement");
static_assert(sizeof(BP_FreeCameraSpectator_C_CameraUpDownMovement) == 0x00001C, "Wrong size on BP_FreeCameraSpectator_C_CameraUpDownMovement");
static_assert(offsetof(BP_FreeCameraSpectator_C_CameraUpDownMovement, Delta_seconds) == 0x000000, "Member 'BP_FreeCameraSpectator_C_CameraUpDownMovement::Delta_seconds' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_CameraUpDownMovement, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000004, "Member 'BP_FreeCameraSpectator_C_CameraUpDownMovement::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_CameraUpDownMovement, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000005, "Member 'BP_FreeCameraSpectator_C_CameraUpDownMovement::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_CameraUpDownMovement, CallFunc_BooleanOR_ReturnValue) == 0x000006, "Member 'BP_FreeCameraSpectator_C_CameraUpDownMovement::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_CameraUpDownMovement, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000008, "Member 'BP_FreeCameraSpectator_C_CameraUpDownMovement::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_CameraUpDownMovement, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_FreeCameraSpectator_C_CameraUpDownMovement::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_CameraUpDownMovement, CallFunc_MakeVector_ReturnValue) == 0x000010, "Member 'BP_FreeCameraSpectator_C_CameraUpDownMovement::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BP_FreeCameraSpectator.BP_FreeCameraSpectator_C.CameraMovement
// 0x0070 (0x0070 - 0x0000)
struct BP_FreeCameraSpectator_C_CameraMovement final
{
public:
	float                                         Delta_seconds;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetCachedMovementInput_ReturnValue;       // 0x0028(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue_1;     // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FreeCameraSpectator_C_CameraMovement) == 0x000004, "Wrong alignment on BP_FreeCameraSpectator_C_CameraMovement");
static_assert(sizeof(BP_FreeCameraSpectator_C_CameraMovement) == 0x000070, "Wrong size on BP_FreeCameraSpectator_C_CameraMovement");
static_assert(offsetof(BP_FreeCameraSpectator_C_CameraMovement, Delta_seconds) == 0x000000, "Member 'BP_FreeCameraSpectator_C_CameraMovement::Delta_seconds' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_CameraMovement, CallFunc_GetControlRotation_ReturnValue) == 0x000004, "Member 'BP_FreeCameraSpectator_C_CameraMovement::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_CameraMovement, CallFunc_GetForwardVector_ReturnValue) == 0x000010, "Member 'BP_FreeCameraSpectator_C_CameraMovement::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_CameraMovement, CallFunc_GetRightVector_ReturnValue) == 0x00001C, "Member 'BP_FreeCameraSpectator_C_CameraMovement::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_CameraMovement, CallFunc_GetCachedMovementInput_ReturnValue) == 0x000028, "Member 'BP_FreeCameraSpectator_C_CameraMovement::CallFunc_GetCachedMovementInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_CameraMovement, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_FreeCameraSpectator_C_CameraMovement::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_CameraMovement, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000034, "Member 'BP_FreeCameraSpectator_C_CameraMovement::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_CameraMovement, CallFunc_Multiply_Vector2DFloat_ReturnValue_1) == 0x00003C, "Member 'BP_FreeCameraSpectator_C_CameraMovement::CallFunc_Multiply_Vector2DFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_CameraMovement, CallFunc_BreakVector2D_X) == 0x000044, "Member 'BP_FreeCameraSpectator_C_CameraMovement::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_CameraMovement, CallFunc_BreakVector2D_Y) == 0x000048, "Member 'BP_FreeCameraSpectator_C_CameraMovement::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_CameraMovement, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00004C, "Member 'BP_FreeCameraSpectator_C_CameraMovement::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_CameraMovement, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000058, "Member 'BP_FreeCameraSpectator_C_CameraMovement::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FreeCameraSpectator_C_CameraMovement, CallFunc_Add_VectorVector_ReturnValue) == 0x000064, "Member 'BP_FreeCameraSpectator_C_CameraMovement::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

}

