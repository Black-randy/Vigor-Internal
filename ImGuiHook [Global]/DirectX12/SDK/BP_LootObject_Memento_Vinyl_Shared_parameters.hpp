#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LootObject_Memento_Vinyl_Shared

#include "Basic.hpp"

#include "Flame_structs.hpp"
#include "F_Lootable_StateDescriptor_structs.hpp"
#include "E_Lootable_State_structs.hpp"


namespace SDK::Params
{

// Function BP_LootObject_Memento_Vinyl_Shared.BP_LootObject_Memento_Vinyl_Shared_C.ExecuteUbergraph_BP_LootObject_Memento_Vinyl_Shared
// 0x0088 (0x0088 - 0x0000)
struct BP_LootObject_Memento_Vinyl_Shared_C_ExecuteUbergraph_BP_LootObject_Memento_Vinyl_Shared final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	class UObject*                                Temp_object_Variable;                              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      K2Node_CustomEvent_New_Skin;                       // 0x0028(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Select_Default;                             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      K2Node_DynamicCast_AsMaterial_Instance;            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LootObject_Memento_Vinyl_Shared_C_ExecuteUbergraph_BP_LootObject_Memento_Vinyl_Shared) == 0x000008, "Wrong alignment on BP_LootObject_Memento_Vinyl_Shared_C_ExecuteUbergraph_BP_LootObject_Memento_Vinyl_Shared");
static_assert(sizeof(BP_LootObject_Memento_Vinyl_Shared_C_ExecuteUbergraph_BP_LootObject_Memento_Vinyl_Shared) == 0x000088, "Wrong size on BP_LootObject_Memento_Vinyl_Shared_C_ExecuteUbergraph_BP_LootObject_Memento_Vinyl_Shared");
static_assert(offsetof(BP_LootObject_Memento_Vinyl_Shared_C_ExecuteUbergraph_BP_LootObject_Memento_Vinyl_Shared, EntryPoint) == 0x000000, "Member 'BP_LootObject_Memento_Vinyl_Shared_C_ExecuteUbergraph_BP_LootObject_Memento_Vinyl_Shared::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_LootObject_Memento_Vinyl_Shared_C_ExecuteUbergraph_BP_LootObject_Memento_Vinyl_Shared, Temp_bool_Variable) == 0x000004, "Member 'BP_LootObject_Memento_Vinyl_Shared_C_ExecuteUbergraph_BP_LootObject_Memento_Vinyl_Shared::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_LootObject_Memento_Vinyl_Shared_C_ExecuteUbergraph_BP_LootObject_Memento_Vinyl_Shared, Temp_bool_Variable_1) == 0x000005, "Member 'BP_LootObject_Memento_Vinyl_Shared_C_ExecuteUbergraph_BP_LootObject_Memento_Vinyl_Shared::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LootObject_Memento_Vinyl_Shared_C_ExecuteUbergraph_BP_LootObject_Memento_Vinyl_Shared, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_LootObject_Memento_Vinyl_Shared_C_ExecuteUbergraph_BP_LootObject_Memento_Vinyl_Shared::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_LootObject_Memento_Vinyl_Shared_C_ExecuteUbergraph_BP_LootObject_Memento_Vinyl_Shared, Temp_object_Variable) == 0x000018, "Member 'BP_LootObject_Memento_Vinyl_Shared_C_ExecuteUbergraph_BP_LootObject_Memento_Vinyl_Shared::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_LootObject_Memento_Vinyl_Shared_C_ExecuteUbergraph_BP_LootObject_Memento_Vinyl_Shared, K2Node_CustomEvent_Loaded) == 0x000020, "Member 'BP_LootObject_Memento_Vinyl_Shared_C_ExecuteUbergraph_BP_LootObject_Memento_Vinyl_Shared::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(BP_LootObject_Memento_Vinyl_Shared_C_ExecuteUbergraph_BP_LootObject_Memento_Vinyl_Shared, K2Node_CustomEvent_New_Skin) == 0x000028, "Member 'BP_LootObject_Memento_Vinyl_Shared_C_ExecuteUbergraph_BP_LootObject_Memento_Vinyl_Shared::K2Node_CustomEvent_New_Skin' has a wrong offset!");
static_assert(offsetof(BP_LootObject_Memento_Vinyl_Shared_C_ExecuteUbergraph_BP_LootObject_Memento_Vinyl_Shared, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000050, "Member 'BP_LootObject_Memento_Vinyl_Shared_C_ExecuteUbergraph_BP_LootObject_Memento_Vinyl_Shared::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootObject_Memento_Vinyl_Shared_C_ExecuteUbergraph_BP_LootObject_Memento_Vinyl_Shared, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000058, "Member 'BP_LootObject_Memento_Vinyl_Shared_C_ExecuteUbergraph_BP_LootObject_Memento_Vinyl_Shared::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootObject_Memento_Vinyl_Shared_C_ExecuteUbergraph_BP_LootObject_Memento_Vinyl_Shared, K2Node_DynamicCast_AsMaterial_Interface) == 0x000060, "Member 'BP_LootObject_Memento_Vinyl_Shared_C_ExecuteUbergraph_BP_LootObject_Memento_Vinyl_Shared::K2Node_DynamicCast_AsMaterial_Interface' has a wrong offset!");
static_assert(offsetof(BP_LootObject_Memento_Vinyl_Shared_C_ExecuteUbergraph_BP_LootObject_Memento_Vinyl_Shared, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BP_LootObject_Memento_Vinyl_Shared_C_ExecuteUbergraph_BP_LootObject_Memento_Vinyl_Shared::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_LootObject_Memento_Vinyl_Shared_C_ExecuteUbergraph_BP_LootObject_Memento_Vinyl_Shared, CallFunc_IsValid_ReturnValue) == 0x000069, "Member 'BP_LootObject_Memento_Vinyl_Shared_C_ExecuteUbergraph_BP_LootObject_Memento_Vinyl_Shared::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootObject_Memento_Vinyl_Shared_C_ExecuteUbergraph_BP_LootObject_Memento_Vinyl_Shared, K2Node_Select_Default) == 0x000070, "Member 'BP_LootObject_Memento_Vinyl_Shared_C_ExecuteUbergraph_BP_LootObject_Memento_Vinyl_Shared::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_LootObject_Memento_Vinyl_Shared_C_ExecuteUbergraph_BP_LootObject_Memento_Vinyl_Shared, K2Node_DynamicCast_AsMaterial_Instance) == 0x000078, "Member 'BP_LootObject_Memento_Vinyl_Shared_C_ExecuteUbergraph_BP_LootObject_Memento_Vinyl_Shared::K2Node_DynamicCast_AsMaterial_Instance' has a wrong offset!");
static_assert(offsetof(BP_LootObject_Memento_Vinyl_Shared_C_ExecuteUbergraph_BP_LootObject_Memento_Vinyl_Shared, K2Node_DynamicCast_bSuccess_1) == 0x000080, "Member 'BP_LootObject_Memento_Vinyl_Shared_C_ExecuteUbergraph_BP_LootObject_Memento_Vinyl_Shared::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_LootObject_Memento_Vinyl_Shared.BP_LootObject_Memento_Vinyl_Shared_C.Set Album Skin
// 0x0028 (0x0028 - 0x0000)
struct BP_LootObject_Memento_Vinyl_Shared_C_Set_Album_Skin final
{
public:
	TSoftObjectPtr<class UMaterialInterface>      New_Skin;                                          // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_LootObject_Memento_Vinyl_Shared_C_Set_Album_Skin) == 0x000008, "Wrong alignment on BP_LootObject_Memento_Vinyl_Shared_C_Set_Album_Skin");
static_assert(sizeof(BP_LootObject_Memento_Vinyl_Shared_C_Set_Album_Skin) == 0x000028, "Wrong size on BP_LootObject_Memento_Vinyl_Shared_C_Set_Album_Skin");
static_assert(offsetof(BP_LootObject_Memento_Vinyl_Shared_C_Set_Album_Skin, New_Skin) == 0x000000, "Member 'BP_LootObject_Memento_Vinyl_Shared_C_Set_Album_Skin::New_Skin' has a wrong offset!");

// Function BP_LootObject_Memento_Vinyl_Shared.BP_LootObject_Memento_Vinyl_Shared_C.OnLoaded_303A9E7341428F48F05BE78AEFF91541
// 0x0008 (0x0008 - 0x0000)
struct BP_LootObject_Memento_Vinyl_Shared_C_OnLoaded_303A9E7341428F48F05BE78AEFF91541 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LootObject_Memento_Vinyl_Shared_C_OnLoaded_303A9E7341428F48F05BE78AEFF91541) == 0x000008, "Wrong alignment on BP_LootObject_Memento_Vinyl_Shared_C_OnLoaded_303A9E7341428F48F05BE78AEFF91541");
static_assert(sizeof(BP_LootObject_Memento_Vinyl_Shared_C_OnLoaded_303A9E7341428F48F05BE78AEFF91541) == 0x000008, "Wrong size on BP_LootObject_Memento_Vinyl_Shared_C_OnLoaded_303A9E7341428F48F05BE78AEFF91541");
static_assert(offsetof(BP_LootObject_Memento_Vinyl_Shared_C_OnLoaded_303A9E7341428F48F05BE78AEFF91541, Loaded) == 0x000000, "Member 'BP_LootObject_Memento_Vinyl_Shared_C_OnLoaded_303A9E7341428F48F05BE78AEFF91541::Loaded' has a wrong offset!");

// Function BP_LootObject_Memento_Vinyl_Shared.BP_LootObject_Memento_Vinyl_Shared_C.Apply Materials from State Descriptor
// 0x0180 (0x0180 - 0x0000)
struct BP_LootObject_Memento_Vinyl_Shared_C_Apply_Materials_from_State_Descriptor final
{
public:
	struct FF_Lootable_StateDescriptor            State_Descriptor;                                  // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	TMap<TSoftClassPtr<class UClass>, TSoftObjectPtr<class UMaterialInterface>> Album_Skins;                                       // 0x0040(0x0050)(Edit, BlueprintVisible)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<TSoftClassPtr<class UClass>, TSoftObjectPtr<class UMaterialInterface>> K2Node_MakeVariable_MakeVariableOutput;            // 0x00A0(0x0050)()
	E_Lootable_State                              CallFunc_Get_State_State;                          // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F2[0x6];                                       // 0x00F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBackpackItemSlot>              CallFunc_GetSlotsClassesConst_ReturnValue;         // 0x00F8(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10A[0x2];                                      // 0x010A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsBP_Memento_Vinyl_Base;   // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11A[0x6];                                      // 0x011A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   CallFunc_Conv_ClassToSoftClassReference_ReturnValue; // 0x0120(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Map_Find_Value;                           // 0x0148(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x3];                                      // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CountOfResource_ReturnValue;              // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LootObject_Memento_Vinyl_Shared_C_Apply_Materials_from_State_Descriptor) == 0x000008, "Wrong alignment on BP_LootObject_Memento_Vinyl_Shared_C_Apply_Materials_from_State_Descriptor");
static_assert(sizeof(BP_LootObject_Memento_Vinyl_Shared_C_Apply_Materials_from_State_Descriptor) == 0x000180, "Wrong size on BP_LootObject_Memento_Vinyl_Shared_C_Apply_Materials_from_State_Descriptor");
static_assert(offsetof(BP_LootObject_Memento_Vinyl_Shared_C_Apply_Materials_from_State_Descriptor, State_Descriptor) == 0x000000, "Member 'BP_LootObject_Memento_Vinyl_Shared_C_Apply_Materials_from_State_Descriptor::State_Descriptor' has a wrong offset!");
static_assert(offsetof(BP_LootObject_Memento_Vinyl_Shared_C_Apply_Materials_from_State_Descriptor, Album_Skins) == 0x000040, "Member 'BP_LootObject_Memento_Vinyl_Shared_C_Apply_Materials_from_State_Descriptor::Album_Skins' has a wrong offset!");
static_assert(offsetof(BP_LootObject_Memento_Vinyl_Shared_C_Apply_Materials_from_State_Descriptor, Temp_bool_True_if_break_was_hit_Variable) == 0x000090, "Member 'BP_LootObject_Memento_Vinyl_Shared_C_Apply_Materials_from_State_Descriptor::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_LootObject_Memento_Vinyl_Shared_C_Apply_Materials_from_State_Descriptor, Temp_int_Array_Index_Variable) == 0x000094, "Member 'BP_LootObject_Memento_Vinyl_Shared_C_Apply_Materials_from_State_Descriptor::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LootObject_Memento_Vinyl_Shared_C_Apply_Materials_from_State_Descriptor, Temp_int_Loop_Counter_Variable) == 0x000098, "Member 'BP_LootObject_Memento_Vinyl_Shared_C_Apply_Materials_from_State_Descriptor::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LootObject_Memento_Vinyl_Shared_C_Apply_Materials_from_State_Descriptor, CallFunc_Add_IntInt_ReturnValue) == 0x00009C, "Member 'BP_LootObject_Memento_Vinyl_Shared_C_Apply_Materials_from_State_Descriptor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootObject_Memento_Vinyl_Shared_C_Apply_Materials_from_State_Descriptor, K2Node_MakeVariable_MakeVariableOutput) == 0x0000A0, "Member 'BP_LootObject_Memento_Vinyl_Shared_C_Apply_Materials_from_State_Descriptor::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(BP_LootObject_Memento_Vinyl_Shared_C_Apply_Materials_from_State_Descriptor, CallFunc_Get_State_State) == 0x0000F0, "Member 'BP_LootObject_Memento_Vinyl_Shared_C_Apply_Materials_from_State_Descriptor::CallFunc_Get_State_State' has a wrong offset!");
static_assert(offsetof(BP_LootObject_Memento_Vinyl_Shared_C_Apply_Materials_from_State_Descriptor, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000F1, "Member 'BP_LootObject_Memento_Vinyl_Shared_C_Apply_Materials_from_State_Descriptor::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootObject_Memento_Vinyl_Shared_C_Apply_Materials_from_State_Descriptor, CallFunc_GetSlotsClassesConst_ReturnValue) == 0x0000F8, "Member 'BP_LootObject_Memento_Vinyl_Shared_C_Apply_Materials_from_State_Descriptor::CallFunc_GetSlotsClassesConst_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootObject_Memento_Vinyl_Shared_C_Apply_Materials_from_State_Descriptor, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000108, "Member 'BP_LootObject_Memento_Vinyl_Shared_C_Apply_Materials_from_State_Descriptor::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LootObject_Memento_Vinyl_Shared_C_Apply_Materials_from_State_Descriptor, CallFunc_BooleanOR_ReturnValue) == 0x000109, "Member 'BP_LootObject_Memento_Vinyl_Shared_C_Apply_Materials_from_State_Descriptor::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootObject_Memento_Vinyl_Shared_C_Apply_Materials_from_State_Descriptor, CallFunc_Array_Length_ReturnValue) == 0x00010C, "Member 'BP_LootObject_Memento_Vinyl_Shared_C_Apply_Materials_from_State_Descriptor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootObject_Memento_Vinyl_Shared_C_Apply_Materials_from_State_Descriptor, K2Node_ClassDynamicCast_AsBP_Memento_Vinyl_Base) == 0x000110, "Member 'BP_LootObject_Memento_Vinyl_Shared_C_Apply_Materials_from_State_Descriptor::K2Node_ClassDynamicCast_AsBP_Memento_Vinyl_Base' has a wrong offset!");
static_assert(offsetof(BP_LootObject_Memento_Vinyl_Shared_C_Apply_Materials_from_State_Descriptor, K2Node_ClassDynamicCast_bSuccess) == 0x000118, "Member 'BP_LootObject_Memento_Vinyl_Shared_C_Apply_Materials_from_State_Descriptor::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_LootObject_Memento_Vinyl_Shared_C_Apply_Materials_from_State_Descriptor, CallFunc_Less_IntInt_ReturnValue) == 0x000119, "Member 'BP_LootObject_Memento_Vinyl_Shared_C_Apply_Materials_from_State_Descriptor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootObject_Memento_Vinyl_Shared_C_Apply_Materials_from_State_Descriptor, CallFunc_Conv_ClassToSoftClassReference_ReturnValue) == 0x000120, "Member 'BP_LootObject_Memento_Vinyl_Shared_C_Apply_Materials_from_State_Descriptor::CallFunc_Conv_ClassToSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootObject_Memento_Vinyl_Shared_C_Apply_Materials_from_State_Descriptor, CallFunc_Map_Find_Value) == 0x000148, "Member 'BP_LootObject_Memento_Vinyl_Shared_C_Apply_Materials_from_State_Descriptor::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_LootObject_Memento_Vinyl_Shared_C_Apply_Materials_from_State_Descriptor, CallFunc_Map_Find_ReturnValue) == 0x000170, "Member 'BP_LootObject_Memento_Vinyl_Shared_C_Apply_Materials_from_State_Descriptor::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootObject_Memento_Vinyl_Shared_C_Apply_Materials_from_State_Descriptor, CallFunc_CountOfResource_ReturnValue) == 0x000174, "Member 'BP_LootObject_Memento_Vinyl_Shared_C_Apply_Materials_from_State_Descriptor::CallFunc_CountOfResource_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootObject_Memento_Vinyl_Shared_C_Apply_Materials_from_State_Descriptor, CallFunc_Greater_IntInt_ReturnValue) == 0x000178, "Member 'BP_LootObject_Memento_Vinyl_Shared_C_Apply_Materials_from_State_Descriptor::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootObject_Memento_Vinyl_Shared_C_Apply_Materials_from_State_Descriptor, CallFunc_BooleanAND_ReturnValue) == 0x000179, "Member 'BP_LootObject_Memento_Vinyl_Shared_C_Apply_Materials_from_State_Descriptor::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

