#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_AssaultRifle_07

#include "Basic.hpp"

#include "Flame_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function ABP_AssaultRifle_07.ABP_AssaultRifle_07_C.ExecuteUbergraph_ABP_AssaultRifle_07
// 0x0130 (0x0130 - 0x0000)
struct ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponent_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanCharacter*                        K2Node_DynamicCast_AsHuman_Character;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B[0x1];                                       // 0x003B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x003C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x004C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0060(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0068(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0070(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0080(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_2;        // 0x0090(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_3;        // 0x0098(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaTimeX;                           // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponent_ReturnValue_1;         // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AssaultRifle_07_C*                  K2Node_DynamicCast_AsBP_Assault_Rifle_07;          // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckSkin_IsTheSame;                      // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x00D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponent_ReturnValue_2;         // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_3;                   // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_4;                   // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanCharacter*                        K2Node_DynamicCast_AsHuman_Character_1;            // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x010B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EStance                                       CallFunc_GetStance_ReturnValue;                    // 0x010D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x010E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x010F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_112[0x2];                                      // 0x0112(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0114(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_4;        // 0x0128(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07) == 0x000008, "Wrong alignment on ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07");
static_assert(sizeof(ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07) == 0x000130, "Wrong size on ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07");
static_assert(offsetof(ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07, EntryPoint) == 0x000000, "Member 'ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07, Temp_bool_Has_Been_Initd_Variable) == 0x000004, "Member 'ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07, CallFunc_GetOwningComponent_ReturnValue) == 0x000008, "Member 'ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07::CallFunc_GetOwningComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07, CallFunc_IsValid_ReturnValue_1) == 0x000020, "Member 'ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07, CallFunc_GetOwner_ReturnValue_1) == 0x000028, "Member 'ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07, K2Node_DynamicCast_AsHuman_Character) == 0x000030, "Member 'ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07::K2Node_DynamicCast_AsHuman_Character' has a wrong offset!");
static_assert(offsetof(ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07, CallFunc_IsValid_ReturnValue_2) == 0x000039, "Member 'ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07, Temp_bool_IsClosed_Variable) == 0x00003A, "Member 'ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07, K2Node_CreateDelegate_OutputDelegate) == 0x00003C, "Member 'ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07, K2Node_CreateDelegate_OutputDelegate_1) == 0x00004C, "Member 'ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000060, "Member 'ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000068, "Member 'ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07, K2Node_CreateDelegate_OutputDelegate_2) == 0x000070, "Member 'ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07, K2Node_CreateDelegate_OutputDelegate_3) == 0x000080, "Member 'ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07, CallFunc_K2_SetTimerDelegate_ReturnValue_2) == 0x000090, "Member 'ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07::CallFunc_K2_SetTimerDelegate_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07, CallFunc_K2_SetTimerDelegate_ReturnValue_3) == 0x000098, "Member 'ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07::CallFunc_K2_SetTimerDelegate_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07, CallFunc_IsValid_ReturnValue_3) == 0x0000A0, "Member 'ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07, K2Node_Event_DeltaTimeX) == 0x0000A4, "Member 'ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07, CallFunc_GetOwningComponent_ReturnValue_1) == 0x0000A8, "Member 'ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07::CallFunc_GetOwningComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07, CallFunc_IsValid_ReturnValue_4) == 0x0000B0, "Member 'ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07, CallFunc_GetOwner_ReturnValue_2) == 0x0000B8, "Member 'ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07, CallFunc_IsValid_ReturnValue_5) == 0x0000C0, "Member 'ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07, K2Node_DynamicCast_AsBP_Assault_Rifle_07) == 0x0000C8, "Member 'ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07::K2Node_DynamicCast_AsBP_Assault_Rifle_07' has a wrong offset!");
static_assert(offsetof(ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07, K2Node_DynamicCast_bSuccess_1) == 0x0000D0, "Member 'ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07, CallFunc_CheckSkin_IsTheSame) == 0x0000D1, "Member 'ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07::CallFunc_CheckSkin_IsTheSame' has a wrong offset!");
static_assert(offsetof(ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07, CallFunc_IsValid_ReturnValue_6) == 0x0000D2, "Member 'ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07, Temp_bool_Has_Been_Initd_Variable_1) == 0x0000D3, "Member 'ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07, CallFunc_GetOwningComponent_ReturnValue_2) == 0x0000D8, "Member 'ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07::CallFunc_GetOwningComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07, CallFunc_IsValid_ReturnValue_7) == 0x0000E0, "Member 'ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07, CallFunc_GetOwner_ReturnValue_3) == 0x0000E8, "Member 'ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07::CallFunc_GetOwner_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07, CallFunc_IsValid_ReturnValue_8) == 0x0000F0, "Member 'ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07, CallFunc_GetOwner_ReturnValue_4) == 0x0000F8, "Member 'ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07::CallFunc_GetOwner_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07, K2Node_DynamicCast_AsHuman_Character_1) == 0x000100, "Member 'ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07::K2Node_DynamicCast_AsHuman_Character_1' has a wrong offset!");
static_assert(offsetof(ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07, K2Node_DynamicCast_bSuccess_2) == 0x000108, "Member 'ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07, CallFunc_IsValid_ReturnValue_9) == 0x000109, "Member 'ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07, Temp_bool_IsClosed_Variable_1) == 0x00010A, "Member 'ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07, CallFunc_IsValid_ReturnValue_10) == 0x00010B, "Member 'ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07, CallFunc_IsValid_ReturnValue_11) == 0x00010C, "Member 'ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07, CallFunc_GetStance_ReturnValue) == 0x00010D, "Member 'ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07::CallFunc_GetStance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07, CallFunc_IsValid_ReturnValue_12) == 0x00010E, "Member 'ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00010F, "Member 'ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07, Temp_bool_Has_Been_Initd_Variable_2) == 0x000110, "Member 'ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07, Temp_bool_IsClosed_Variable_2) == 0x000111, "Member 'ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07, K2Node_CreateDelegate_OutputDelegate_4) == 0x000114, "Member 'ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07, CallFunc_K2_SetTimerDelegate_ReturnValue_4) == 0x000128, "Member 'ABP_AssaultRifle_07_C_ExecuteUbergraph_ABP_AssaultRifle_07::CallFunc_K2_SetTimerDelegate_ReturnValue_4' has a wrong offset!");

// Function ABP_AssaultRifle_07.ABP_AssaultRifle_07_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct ABP_AssaultRifle_07_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_AssaultRifle_07_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on ABP_AssaultRifle_07_C_BlueprintUpdateAnimation");
static_assert(sizeof(ABP_AssaultRifle_07_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on ABP_AssaultRifle_07_C_BlueprintUpdateAnimation");
static_assert(offsetof(ABP_AssaultRifle_07_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'ABP_AssaultRifle_07_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function ABP_AssaultRifle_07.ABP_AssaultRifle_07_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ABP_AssaultRifle_07_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_AssaultRifle_07_C_AnimGraph) == 0x000008, "Wrong alignment on ABP_AssaultRifle_07_C_AnimGraph");
static_assert(sizeof(ABP_AssaultRifle_07_C_AnimGraph) == 0x000010, "Wrong size on ABP_AssaultRifle_07_C_AnimGraph");
static_assert(offsetof(ABP_AssaultRifle_07_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'ABP_AssaultRifle_07_C_AnimGraph::AnimGraph_0' has a wrong offset!");

}

