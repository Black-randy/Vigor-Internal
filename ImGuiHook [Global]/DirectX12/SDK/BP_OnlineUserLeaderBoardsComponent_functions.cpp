#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_OnlineUserLeaderBoardsComponent

#include "Basic.hpp"

#include "BP_OnlineUserLeaderBoardsComponent_classes.hpp"
#include "BP_OnlineUserLeaderBoardsComponent_parameters.hpp"


namespace SDK
{

// Function BP_OnlineUserLeaderBoardsComponent.BP_OnlineUserLeaderBoardsComponent_C.LeaderboardStatsLoaded__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UBP_OnlineUserLeaderBoardsComponent_C::LeaderboardStatsLoaded__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OnlineUserLeaderBoardsComponent_C", "LeaderboardStatsLoaded__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OnlineUserLeaderBoardsComponent.BP_OnlineUserLeaderBoardsComponent_C.ExecuteUbergraph_BP_OnlineUserLeaderBoardsComponent
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_OnlineUserLeaderBoardsComponent_C::ExecuteUbergraph_BP_OnlineUserLeaderBoardsComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OnlineUserLeaderBoardsComponent_C", "ExecuteUbergraph_BP_OnlineUserLeaderBoardsComponent");

	Params::BP_OnlineUserLeaderBoardsComponent_C_ExecuteUbergraph_BP_OnlineUserLeaderBoardsComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OnlineUserLeaderBoardsComponent.BP_OnlineUserLeaderBoardsComponent_C.RequestCloudLeaderboardsData
// (BlueprintCallable, BlueprintEvent)

void UBP_OnlineUserLeaderBoardsComponent_C::RequestCloudLeaderboardsData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OnlineUserLeaderBoardsComponent_C", "RequestCloudLeaderboardsData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OnlineUserLeaderBoardsComponent.BP_OnlineUserLeaderBoardsComponent_C.OnGetUserLeaderBoardsFinished
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FCloudRequestResult              RequestResult                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FCloudUserLeaderBoards           Data                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_OnlineUserLeaderBoardsComponent_C::OnGetUserLeaderBoardsFinished(const struct FCloudRequestResult& RequestResult, const struct FCloudUserLeaderBoards& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OnlineUserLeaderBoardsComponent_C", "OnGetUserLeaderBoardsFinished");

	Params::BP_OnlineUserLeaderBoardsComponent_C_OnGetUserLeaderBoardsFinished Parms{};

	Parms.RequestResult = std::move(RequestResult);
	Parms.Data = std::move(Data);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OnlineUserLeaderBoardsComponent.BP_OnlineUserLeaderBoardsComponent_C.GetStatsByGameMode
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EOnlineGameMode                         Game_Mode                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FCloudLeaderBoardsPerMode        Weekly                                                 (Parm, OutParm)
// struct FCloudLeaderBoardsPerMode        Seasonal                                               (Parm, OutParm)
// struct FCloudLeaderBoardsPerMode        AllTime                                                (Parm, OutParm)

void UBP_OnlineUserLeaderBoardsComponent_C::GetStatsByGameMode(EOnlineGameMode Game_Mode, struct FCloudLeaderBoardsPerMode* Weekly, struct FCloudLeaderBoardsPerMode* Seasonal, struct FCloudLeaderBoardsPerMode* AllTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OnlineUserLeaderBoardsComponent_C", "GetStatsByGameMode");

	Params::BP_OnlineUserLeaderBoardsComponent_C_GetStatsByGameMode Parms{};

	Parms.Game_Mode = Game_Mode;

	UObject::ProcessEvent(Func, &Parms);

	if (Weekly != nullptr)
		*Weekly = std::move(Parms.Weekly);

	if (Seasonal != nullptr)
		*Seasonal = std::move(Parms.Seasonal);

	if (AllTime != nullptr)
		*AllTime = std::move(Parms.AllTime);
}


// Function BP_OnlineUserLeaderBoardsComponent.BP_OnlineUserLeaderBoardsComponent_C.GetStatLeaderboards
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EOnlineGameMode                         Game_Mode                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Interval                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// EStatType                               Stat_Type                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RequestId                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_OnlineUserLeaderBoardsComponent_C::GetStatLeaderboards(EOnlineGameMode Game_Mode, const class FString& Interval, EStatType Stat_Type, int32* RequestId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OnlineUserLeaderBoardsComponent_C", "GetStatLeaderboards");

	Params::BP_OnlineUserLeaderBoardsComponent_C_GetStatLeaderboards Parms{};

	Parms.Game_Mode = Game_Mode;
	Parms.Interval = std::move(Interval);
	Parms.Stat_Type = Stat_Type;

	UObject::ProcessEvent(Func, &Parms);

	if (RequestId != nullptr)
		*RequestId = Parms.RequestId;
}

}

