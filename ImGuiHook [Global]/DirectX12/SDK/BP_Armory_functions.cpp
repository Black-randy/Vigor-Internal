#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Armory

#include "Basic.hpp"

#include "BP_Armory_classes.hpp"
#include "BP_Armory_parameters.hpp"


namespace SDK
{

// Function BP_Armory.BP_Armory_C.Armory Update Start__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_Armory_C::Armory_Update_Start__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Armory_C", "Armory Update Start__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Armory.BP_Armory_C.Armory Init__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_Armory_C::Armory_Init__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Armory_C", "Armory Init__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Armory.BP_Armory_C.ExecuteUbergraph_BP_Armory
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Armory_C::ExecuteUbergraph_BP_Armory(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Armory_C", "ExecuteUbergraph_BP_Armory");

	Params::BP_Armory_C_ExecuteUbergraph_BP_Armory Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Armory.BP_Armory_C.SetArmoryVisibility
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bNewVisibility                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Armory_C::SetArmoryVisibility(bool bNewVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Armory_C", "SetArmoryVisibility");

	Params::BP_Armory_C_SetArmoryVisibility Parms{};

	Parms.bNewVisibility = bNewVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Armory.BP_Armory_C.BndEvt__BP_Armory_VisibilityBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Armory_C::BndEvt__BP_Armory_VisibilityBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Armory_C", "BndEvt__BP_Armory_VisibilityBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");

	Params::BP_Armory_C_BndEvt__BP_Armory_VisibilityBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Armory.BP_Armory_C.BndEvt__BP_Armory_VisibilityBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_Armory_C::BndEvt__BP_Armory_VisibilityBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Armory_C", "BndEvt__BP_Armory_VisibilityBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");

	Params::BP_Armory_C_BndEvt__BP_Armory_VisibilityBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Armory.BP_Armory_C.UpdatePlan
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlan*                            Plan                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Armory_C::UpdatePlan(class APlan* Plan)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Armory_C", "UpdatePlan");

	Params::BP_Armory_C_UpdatePlan Parms{};

	Parms.Plan = Plan;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Armory.BP_Armory_C.UpdateOffsets
// (BlueprintCallable, BlueprintEvent)

void ABP_Armory_C::UpdateOffsets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Armory_C", "UpdateOffsets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Armory.BP_Armory_C.InitWeaponSkinsLoaded
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UShelterCustomizationComponent*   Wardrobe_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Armory_C::InitWeaponSkinsLoaded(class UShelterCustomizationComponent* Wardrobe_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Armory_C", "InitWeaponSkinsLoaded");

	Params::BP_Armory_C_InitWeaponSkinsLoaded Parms{};

	Parms.Wardrobe_0 = Wardrobe_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Armory.BP_Armory_C.ItemSkinChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UShelterCustomizationComponent*   Wardrobe_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           Skin                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Armory_C::ItemSkinChanged(class UShelterCustomizationComponent* Wardrobe_0, class UClass* Item, class UClass* Skin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Armory_C", "ItemSkinChanged");

	Params::BP_Armory_C_ItemSkinChanged Parms{};

	Parms.Wardrobe_0 = Wardrobe_0;
	Parms.Item = Item;
	Parms.Skin = Skin;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Armory.BP_Armory_C.Update
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AWeapon*                          Weapon                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Armory_C::Update(class AWeapon* Weapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Armory_C", "Update");

	Params::BP_Armory_C_Update Parms{};

	Parms.Weapon = Weapon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Armory.BP_Armory_C.Init Armory
// (BlueprintCallable, BlueprintEvent)

void ABP_Armory_C::Init_Armory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Armory_C", "Init Armory");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Armory.BP_Armory_C.StashRecieved
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AStash*                           Sender                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UStashComponent*                  Inventory                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Armory_C::StashRecieved(class AStash* Sender, class UStashComponent* Inventory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Armory_C", "StashRecieved");

	Params::BP_Armory_C_StashRecieved Parms{};

	Parms.Sender = Sender;
	Parms.Inventory = Inventory;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Armory.BP_Armory_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Armory_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Armory_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Armory.BP_Armory_C.WeaponFilter
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FName>                     Array                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class FName>                     Return1                                                (Parm, OutParm)

void ABP_Armory_C::WeaponFilter(TArray<class FName>& Array, TArray<class FName>* Return1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Armory_C", "WeaponFilter");

	Params::BP_Armory_C_WeaponFilter Parms{};

	Parms.Array = std::move(Array);

	UObject::ProcessEvent(Func, &Parms);

	Array = std::move(Parms.Array);

	if (Return1 != nullptr)
		*Return1 = std::move(Parms.Return1);
}


// Function BP_Armory.BP_Armory_C.CreateRack
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Armory_C::CreateRack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Armory_C", "CreateRack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Armory.BP_Armory_C.StoreInstancedVariableInComponent
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<TSoftObjectPtr<class UStaticMesh>>Array                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TSoftClassPtr<class UClass>             InputPin                                               (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// TSoftObjectPtr<class UAnimSequence>     WeaponPoseAnimation_0                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// TSoftObjectPtr<class UMaterialInstance> DecalMaterial_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// struct FVector                          WeaponWallOffset_0                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          BlueprintWallOffset_0                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         BlueprintRotation_0                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// E_Armory_ElementSizes                   WeaponSize_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_Armory_ElementSizes                   DecalSize_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         WeaponRotation_0                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TArray<class FName>                     WeaponBonesToHide_0                                    (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FVector                          DecalWallOffset_0                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Blueprint_CustomScale                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Decal_CustomScale                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Decal_Rotation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Armory_C::StoreInstancedVariableInComponent(TArray<TSoftObjectPtr<class UStaticMesh>>& Array, TSoftClassPtr<class UClass> InputPin, TSoftObjectPtr<class UAnimSequence> WeaponPoseAnimation_0, TSoftObjectPtr<class UMaterialInstance> DecalMaterial_0, const struct FVector& WeaponWallOffset_0, const struct FVector& BlueprintWallOffset_0, const struct FRotator& BlueprintRotation_0, E_Armory_ElementSizes WeaponSize_0, E_Armory_ElementSizes DecalSize_0, const struct FRotator& WeaponRotation_0, TArray<class FName>& WeaponBonesToHide_0, const struct FVector& DecalWallOffset_0, float Blueprint_CustomScale, float Decal_CustomScale, const struct FRotator& Decal_Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Armory_C", "StoreInstancedVariableInComponent");

	Params::BP_Armory_C_StoreInstancedVariableInComponent Parms{};

	Parms.Array = std::move(Array);
	Parms.InputPin = InputPin;
	Parms.WeaponPoseAnimation_0 = WeaponPoseAnimation_0;
	Parms.DecalMaterial_0 = DecalMaterial_0;
	Parms.WeaponWallOffset_0 = std::move(WeaponWallOffset_0);
	Parms.BlueprintWallOffset_0 = std::move(BlueprintWallOffset_0);
	Parms.BlueprintRotation_0 = std::move(BlueprintRotation_0);
	Parms.WeaponSize_0 = WeaponSize_0;
	Parms.DecalSize_0 = DecalSize_0;
	Parms.WeaponRotation_0 = std::move(WeaponRotation_0);
	Parms.WeaponBonesToHide_0 = std::move(WeaponBonesToHide_0);
	Parms.DecalWallOffset_0 = std::move(DecalWallOffset_0);
	Parms.Blueprint_CustomScale = Blueprint_CustomScale;
	Parms.Decal_CustomScale = Decal_CustomScale;
	Parms.Decal_Rotation = std::move(Decal_Rotation);

	UObject::ProcessEvent(Func, &Parms);

	Array = std::move(Parms.Array);
	WeaponBonesToHide_0 = std::move(Parms.WeaponBonesToHide_0);
}


// Function BP_Armory.BP_Armory_C.ApplySkinOnWeapon
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBPC_Armory_WeaponElement_C*      ArmoryElement                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AWeapon*                          Weapon                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Armory_C::ApplySkinOnWeapon(class UBPC_Armory_WeaponElement_C* ArmoryElement, class AWeapon* Weapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Armory_C", "ApplySkinOnWeapon");

	Params::BP_Armory_C_ApplySkinOnWeapon Parms{};

	Parms.ArmoryElement = ArmoryElement;
	Parms.Weapon = Weapon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Armory.BP_Armory_C.InitApplySkinOnAllWeapons
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Armory_C::InitApplySkinOnAllWeapons()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Armory_C", "InitApplySkinOnAllWeapons");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Armory.BP_Armory_C.DEBUG-RT_Placement
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Armory_C::DEBUGMinusRT_Placement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Armory_C", "DEBUG-RT_Placement");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Armory.BP_Armory_C.Set Weapon
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBPC_Armory_WeaponElement_C*      ArmoryElement                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Armory_C::Set_Weapon(class UBPC_Armory_WeaponElement_C* ArmoryElement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Armory_C", "Set Weapon");

	Params::BP_Armory_C_Set_Weapon Parms{};

	Parms.ArmoryElement = ArmoryElement;

	UObject::ProcessEvent(Func, &Parms);
}

}

