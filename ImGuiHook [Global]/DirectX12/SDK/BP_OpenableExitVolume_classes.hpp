#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_OpenableExitVolume

#include "Basic.hpp"

#include "BP_PlayableAreaExitVolume_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_OpenableExitVolume.BP_OpenableExitVolume_C
// 0x0048 (0x02A8 - 0x0260)
class ABP_OpenableExitVolume_C final : public ABP_PlayableAreaExitVolume_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_OpenableExitVolume_C;            // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          Is_Open;                                           // 0x0268(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_269[0x7];                                      // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             Exit_Openned;                                      // 0x0270(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Exit_Closed;                                       // 0x0280(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          Hide_Map_Marker_When_Closed;                       // 0x0290(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Escapable_While_Closed;                            // 0x0291(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_292[0x6];                                      // 0x0292(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             OpenMapMarkerTexture;                              // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             ClosedMapMarkerTexture;                            // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Exit_Openned__DelegateSignature();
	void Exit_Closed__DelegateSignature();
	void ExecuteUbergraph_BP_OpenableExitVolume(int32 EntryPoint);
	void Event_CallUnlockExitChallenge_OnServer(class AHumanCharacter* Human_Character);
	void Event_CallUnlockExitChallenge_Multicast(class AHumanCharacter* Human_Character);
	void Event_CallUnlockExitChallenge(class AHumanCharacter* HumanCharacter);
	void Event_UpdateOpenExitIcon();
	void Event_UpdateOpenExitIcon_OnClient();
	void Event_UpdateOpenExitIcon_Multicast();
	void Set_Marker_Active(bool Active);
	void ReceiveBeginPlay();
	void Character_Stepped_Into_Exit(class ABP_Character_Script_C* Character);
	void Open_Exit(class AHumanCharacter* HumanCharacer);
	void Close_Exit();
	void Set_Required_Resource(class UClass* Required_Resource);
	void Block_Exit();
	void Unlock_Exit();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_OpenableExitVolume_C">();
	}
	static class ABP_OpenableExitVolume_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_OpenableExitVolume_C>();
	}
};
static_assert(alignof(ABP_OpenableExitVolume_C) == 0x000008, "Wrong alignment on ABP_OpenableExitVolume_C");
static_assert(sizeof(ABP_OpenableExitVolume_C) == 0x0002A8, "Wrong size on ABP_OpenableExitVolume_C");
static_assert(offsetof(ABP_OpenableExitVolume_C, UberGraphFrame_BP_OpenableExitVolume_C) == 0x000260, "Member 'ABP_OpenableExitVolume_C::UberGraphFrame_BP_OpenableExitVolume_C' has a wrong offset!");
static_assert(offsetof(ABP_OpenableExitVolume_C, Is_Open) == 0x000268, "Member 'ABP_OpenableExitVolume_C::Is_Open' has a wrong offset!");
static_assert(offsetof(ABP_OpenableExitVolume_C, Exit_Openned) == 0x000270, "Member 'ABP_OpenableExitVolume_C::Exit_Openned' has a wrong offset!");
static_assert(offsetof(ABP_OpenableExitVolume_C, Exit_Closed) == 0x000280, "Member 'ABP_OpenableExitVolume_C::Exit_Closed' has a wrong offset!");
static_assert(offsetof(ABP_OpenableExitVolume_C, Hide_Map_Marker_When_Closed) == 0x000290, "Member 'ABP_OpenableExitVolume_C::Hide_Map_Marker_When_Closed' has a wrong offset!");
static_assert(offsetof(ABP_OpenableExitVolume_C, Escapable_While_Closed) == 0x000291, "Member 'ABP_OpenableExitVolume_C::Escapable_While_Closed' has a wrong offset!");
static_assert(offsetof(ABP_OpenableExitVolume_C, OpenMapMarkerTexture) == 0x000298, "Member 'ABP_OpenableExitVolume_C::OpenMapMarkerTexture' has a wrong offset!");
static_assert(offsetof(ABP_OpenableExitVolume_C, ClosedMapMarkerTexture) == 0x0002A0, "Member 'ABP_OpenableExitVolume_C::ClosedMapMarkerTexture' has a wrong offset!");

}

