#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_CombinationLock_DigitSegment

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function UI_CombinationLock_DigitSegment.UI_CombinationLock_DigitSegment_C.ExecuteUbergraph_UI_CombinationLock_DigitSegment
// 0x0018 (0x0018 - 0x0000)
struct UI_CombinationLock_DigitSegment_C_ExecuteUbergraph_UI_CombinationLock_DigitSegment final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UButton*                                K2Node_ComponentBoundEvent_Sender_1;               // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UButton*                                K2Node_ComponentBoundEvent_Sender;                 // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_CombinationLock_DigitSegment_C_ExecuteUbergraph_UI_CombinationLock_DigitSegment) == 0x000008, "Wrong alignment on UI_CombinationLock_DigitSegment_C_ExecuteUbergraph_UI_CombinationLock_DigitSegment");
static_assert(sizeof(UI_CombinationLock_DigitSegment_C_ExecuteUbergraph_UI_CombinationLock_DigitSegment) == 0x000018, "Wrong size on UI_CombinationLock_DigitSegment_C_ExecuteUbergraph_UI_CombinationLock_DigitSegment");
static_assert(offsetof(UI_CombinationLock_DigitSegment_C_ExecuteUbergraph_UI_CombinationLock_DigitSegment, EntryPoint) == 0x000000, "Member 'UI_CombinationLock_DigitSegment_C_ExecuteUbergraph_UI_CombinationLock_DigitSegment::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_CombinationLock_DigitSegment_C_ExecuteUbergraph_UI_CombinationLock_DigitSegment, K2Node_ComponentBoundEvent_Sender_1) == 0x000008, "Member 'UI_CombinationLock_DigitSegment_C_ExecuteUbergraph_UI_CombinationLock_DigitSegment::K2Node_ComponentBoundEvent_Sender_1' has a wrong offset!");
static_assert(offsetof(UI_CombinationLock_DigitSegment_C_ExecuteUbergraph_UI_CombinationLock_DigitSegment, K2Node_ComponentBoundEvent_Sender) == 0x000010, "Member 'UI_CombinationLock_DigitSegment_C_ExecuteUbergraph_UI_CombinationLock_DigitSegment::K2Node_ComponentBoundEvent_Sender' has a wrong offset!");

// Function UI_CombinationLock_DigitSegment.UI_CombinationLock_DigitSegment_C.BndEvt__Button_1_K2Node_ComponentBoundEvent_5_OnButtonFocusEvent__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct UI_CombinationLock_DigitSegment_C_BndEvt__Button_1_K2Node_ComponentBoundEvent_5_OnButtonFocusEvent__DelegateSignature final
{
public:
	class UButton*                                Sender;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_CombinationLock_DigitSegment_C_BndEvt__Button_1_K2Node_ComponentBoundEvent_5_OnButtonFocusEvent__DelegateSignature) == 0x000008, "Wrong alignment on UI_CombinationLock_DigitSegment_C_BndEvt__Button_1_K2Node_ComponentBoundEvent_5_OnButtonFocusEvent__DelegateSignature");
static_assert(sizeof(UI_CombinationLock_DigitSegment_C_BndEvt__Button_1_K2Node_ComponentBoundEvent_5_OnButtonFocusEvent__DelegateSignature) == 0x000008, "Wrong size on UI_CombinationLock_DigitSegment_C_BndEvt__Button_1_K2Node_ComponentBoundEvent_5_OnButtonFocusEvent__DelegateSignature");
static_assert(offsetof(UI_CombinationLock_DigitSegment_C_BndEvt__Button_1_K2Node_ComponentBoundEvent_5_OnButtonFocusEvent__DelegateSignature, Sender) == 0x000000, "Member 'UI_CombinationLock_DigitSegment_C_BndEvt__Button_1_K2Node_ComponentBoundEvent_5_OnButtonFocusEvent__DelegateSignature::Sender' has a wrong offset!");

// Function UI_CombinationLock_DigitSegment.UI_CombinationLock_DigitSegment_C.BndEvt__Button_1_K2Node_ComponentBoundEvent_4_OnButtonFocusEvent__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct UI_CombinationLock_DigitSegment_C_BndEvt__Button_1_K2Node_ComponentBoundEvent_4_OnButtonFocusEvent__DelegateSignature final
{
public:
	class UButton*                                Sender;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_CombinationLock_DigitSegment_C_BndEvt__Button_1_K2Node_ComponentBoundEvent_4_OnButtonFocusEvent__DelegateSignature) == 0x000008, "Wrong alignment on UI_CombinationLock_DigitSegment_C_BndEvt__Button_1_K2Node_ComponentBoundEvent_4_OnButtonFocusEvent__DelegateSignature");
static_assert(sizeof(UI_CombinationLock_DigitSegment_C_BndEvt__Button_1_K2Node_ComponentBoundEvent_4_OnButtonFocusEvent__DelegateSignature) == 0x000008, "Wrong size on UI_CombinationLock_DigitSegment_C_BndEvt__Button_1_K2Node_ComponentBoundEvent_4_OnButtonFocusEvent__DelegateSignature");
static_assert(offsetof(UI_CombinationLock_DigitSegment_C_BndEvt__Button_1_K2Node_ComponentBoundEvent_4_OnButtonFocusEvent__DelegateSignature, Sender) == 0x000000, "Member 'UI_CombinationLock_DigitSegment_C_BndEvt__Button_1_K2Node_ComponentBoundEvent_4_OnButtonFocusEvent__DelegateSignature::Sender' has a wrong offset!");

// Function UI_CombinationLock_DigitSegment.UI_CombinationLock_DigitSegment_C.OnFocusReceived
// 0x01B8 (0x01B8 - 0x0000)
struct UI_CombinationLock_DigitSegment_C_OnFocusReceived final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FFocusEvent                            InFocusEvent;                                      // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x00F8(0x00B8)()
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_CombinationLock_DigitSegment_C_OnFocusReceived) == 0x000008, "Wrong alignment on UI_CombinationLock_DigitSegment_C_OnFocusReceived");
static_assert(sizeof(UI_CombinationLock_DigitSegment_C_OnFocusReceived) == 0x0001B8, "Wrong size on UI_CombinationLock_DigitSegment_C_OnFocusReceived");
static_assert(offsetof(UI_CombinationLock_DigitSegment_C_OnFocusReceived, MyGeometry) == 0x000000, "Member 'UI_CombinationLock_DigitSegment_C_OnFocusReceived::MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_CombinationLock_DigitSegment_C_OnFocusReceived, InFocusEvent) == 0x000038, "Member 'UI_CombinationLock_DigitSegment_C_OnFocusReceived::InFocusEvent' has a wrong offset!");
static_assert(offsetof(UI_CombinationLock_DigitSegment_C_OnFocusReceived, ReturnValue) == 0x000040, "Member 'UI_CombinationLock_DigitSegment_C_OnFocusReceived::ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CombinationLock_DigitSegment_C_OnFocusReceived, CallFunc_Handled_ReturnValue) == 0x0000F8, "Member 'UI_CombinationLock_DigitSegment_C_OnFocusReceived::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CombinationLock_DigitSegment_C_OnFocusReceived, CallFunc_GetOwningPlayer_ReturnValue) == 0x0001B0, "Member 'UI_CombinationLock_DigitSegment_C_OnFocusReceived::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");

// Function UI_CombinationLock_DigitSegment.UI_CombinationLock_DigitSegment_C.Handle vertical input
// 0x0070 (0x0070 - 0x0000)
struct UI_CombinationLock_DigitSegment_C_Handle_vertical_input final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Temp_object_Variable_2;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Temp_object_Variable_3;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Temp_object_Variable_4;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUINavigation                                 Temp_byte_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUINavigation                                 Temp_byte_Variable_1;                              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       K2Node_Select_Default_1;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_CombinationLock_DigitSegment_C_Handle_vertical_input) == 0x000008, "Wrong alignment on UI_CombinationLock_DigitSegment_C_Handle_vertical_input");
static_assert(sizeof(UI_CombinationLock_DigitSegment_C_Handle_vertical_input) == 0x000070, "Wrong size on UI_CombinationLock_DigitSegment_C_Handle_vertical_input");
static_assert(offsetof(UI_CombinationLock_DigitSegment_C_Handle_vertical_input, Navigation_0) == 0x000000, "Member 'UI_CombinationLock_DigitSegment_C_Handle_vertical_input::Navigation_0' has a wrong offset!");
static_assert(offsetof(UI_CombinationLock_DigitSegment_C_Handle_vertical_input, Temp_object_Variable) == 0x000008, "Member 'UI_CombinationLock_DigitSegment_C_Handle_vertical_input::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(UI_CombinationLock_DigitSegment_C_Handle_vertical_input, Temp_object_Variable_1) == 0x000010, "Member 'UI_CombinationLock_DigitSegment_C_Handle_vertical_input::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_CombinationLock_DigitSegment_C_Handle_vertical_input, Temp_object_Variable_2) == 0x000018, "Member 'UI_CombinationLock_DigitSegment_C_Handle_vertical_input::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_CombinationLock_DigitSegment_C_Handle_vertical_input, Temp_object_Variable_3) == 0x000020, "Member 'UI_CombinationLock_DigitSegment_C_Handle_vertical_input::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_CombinationLock_DigitSegment_C_Handle_vertical_input, Temp_object_Variable_4) == 0x000028, "Member 'UI_CombinationLock_DigitSegment_C_Handle_vertical_input::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_CombinationLock_DigitSegment_C_Handle_vertical_input, Temp_byte_Variable) == 0x000030, "Member 'UI_CombinationLock_DigitSegment_C_Handle_vertical_input::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_CombinationLock_DigitSegment_C_Handle_vertical_input, Temp_int_Variable) == 0x000034, "Member 'UI_CombinationLock_DigitSegment_C_Handle_vertical_input::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UI_CombinationLock_DigitSegment_C_Handle_vertical_input, Temp_int_Variable_1) == 0x000038, "Member 'UI_CombinationLock_DigitSegment_C_Handle_vertical_input::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_CombinationLock_DigitSegment_C_Handle_vertical_input, Temp_int_Variable_2) == 0x00003C, "Member 'UI_CombinationLock_DigitSegment_C_Handle_vertical_input::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_CombinationLock_DigitSegment_C_Handle_vertical_input, Temp_int_Variable_3) == 0x000040, "Member 'UI_CombinationLock_DigitSegment_C_Handle_vertical_input::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_CombinationLock_DigitSegment_C_Handle_vertical_input, Temp_int_Variable_4) == 0x000044, "Member 'UI_CombinationLock_DigitSegment_C_Handle_vertical_input::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_CombinationLock_DigitSegment_C_Handle_vertical_input, Temp_int_Variable_5) == 0x000048, "Member 'UI_CombinationLock_DigitSegment_C_Handle_vertical_input::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_CombinationLock_DigitSegment_C_Handle_vertical_input, Temp_int_Variable_6) == 0x00004C, "Member 'UI_CombinationLock_DigitSegment_C_Handle_vertical_input::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_CombinationLock_DigitSegment_C_Handle_vertical_input, Temp_byte_Variable_1) == 0x000050, "Member 'UI_CombinationLock_DigitSegment_C_Handle_vertical_input::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_CombinationLock_DigitSegment_C_Handle_vertical_input, K2Node_Select_Default) == 0x000054, "Member 'UI_CombinationLock_DigitSegment_C_Handle_vertical_input::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_CombinationLock_DigitSegment_C_Handle_vertical_input, K2Node_Select_Default_1) == 0x000058, "Member 'UI_CombinationLock_DigitSegment_C_Handle_vertical_input::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_CombinationLock_DigitSegment_C_Handle_vertical_input, CallFunc_PlayAnimation_ReturnValue) == 0x000060, "Member 'UI_CombinationLock_DigitSegment_C_Handle_vertical_input::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CombinationLock_DigitSegment_C_Handle_vertical_input, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'UI_CombinationLock_DigitSegment_C_Handle_vertical_input::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CombinationLock_DigitSegment_C_Handle_vertical_input, CallFunc_Percent_IntInt_ReturnValue) == 0x00006C, "Member 'UI_CombinationLock_DigitSegment_C_Handle_vertical_input::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");

// Function UI_CombinationLock_DigitSegment.UI_CombinationLock_DigitSegment_C.Change digit on segment
// 0x0020 (0x0020 - 0x0000)
struct UI_CombinationLock_DigitSegment_C_Change_digit_on_segment final
{
public:
	int32                                         Current_digit_0;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
};
static_assert(alignof(UI_CombinationLock_DigitSegment_C_Change_digit_on_segment) == 0x000008, "Wrong alignment on UI_CombinationLock_DigitSegment_C_Change_digit_on_segment");
static_assert(sizeof(UI_CombinationLock_DigitSegment_C_Change_digit_on_segment) == 0x000020, "Wrong size on UI_CombinationLock_DigitSegment_C_Change_digit_on_segment");
static_assert(offsetof(UI_CombinationLock_DigitSegment_C_Change_digit_on_segment, Current_digit_0) == 0x000000, "Member 'UI_CombinationLock_DigitSegment_C_Change_digit_on_segment::Current_digit_0' has a wrong offset!");
static_assert(offsetof(UI_CombinationLock_DigitSegment_C_Change_digit_on_segment, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'UI_CombinationLock_DigitSegment_C_Change_digit_on_segment::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function UI_CombinationLock_DigitSegment.UI_CombinationLock_DigitSegment_C.Compare current digit to required
// 0x0002 (0x0002 - 0x0000)
struct UI_CombinationLock_DigitSegment_C_Compare_current_digit_to_required final
{
public:
	bool                                          Digit_is_correct;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_CombinationLock_DigitSegment_C_Compare_current_digit_to_required) == 0x000001, "Wrong alignment on UI_CombinationLock_DigitSegment_C_Compare_current_digit_to_required");
static_assert(sizeof(UI_CombinationLock_DigitSegment_C_Compare_current_digit_to_required) == 0x000002, "Wrong size on UI_CombinationLock_DigitSegment_C_Compare_current_digit_to_required");
static_assert(offsetof(UI_CombinationLock_DigitSegment_C_Compare_current_digit_to_required, Digit_is_correct) == 0x000000, "Member 'UI_CombinationLock_DigitSegment_C_Compare_current_digit_to_required::Digit_is_correct' has a wrong offset!");
static_assert(offsetof(UI_CombinationLock_DigitSegment_C_Compare_current_digit_to_required, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000001, "Member 'UI_CombinationLock_DigitSegment_C_Compare_current_digit_to_required::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function UI_CombinationLock_DigitSegment.UI_CombinationLock_DigitSegment_C.GetWidgetToFocus
// 0x0010 (0x0010 - 0x0000)
struct UI_CombinationLock_DigitSegment_C_GetWidgetToFocus final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetWidgetToFocus_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_CombinationLock_DigitSegment_C_GetWidgetToFocus) == 0x000008, "Wrong alignment on UI_CombinationLock_DigitSegment_C_GetWidgetToFocus");
static_assert(sizeof(UI_CombinationLock_DigitSegment_C_GetWidgetToFocus) == 0x000010, "Wrong size on UI_CombinationLock_DigitSegment_C_GetWidgetToFocus");
static_assert(offsetof(UI_CombinationLock_DigitSegment_C_GetWidgetToFocus, ReturnValue) == 0x000000, "Member 'UI_CombinationLock_DigitSegment_C_GetWidgetToFocus::ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CombinationLock_DigitSegment_C_GetWidgetToFocus, CallFunc_GetWidgetToFocus_ReturnValue) == 0x000008, "Member 'UI_CombinationLock_DigitSegment_C_GetWidgetToFocus::CallFunc_GetWidgetToFocus_ReturnValue' has a wrong offset!");

}

