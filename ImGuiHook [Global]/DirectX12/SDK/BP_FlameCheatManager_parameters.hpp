#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FlameCheatManager

#include "Basic.hpp"

#include "Struct_CheatLootVisualizationCommodityData_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Flame_structs.hpp"


namespace SDK::Params
{

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.ExecuteUbergraph_BP_FlameCheatManager
// 0x05C0 (0x05C0 - 0x0000)
struct BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsShipping_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsShipping_ReturnValue_1;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsShipping_ReturnValue_2;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsShipping_ReturnValue_3;                 // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsShipping_ReturnValue_4;                 // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsShipping_ReturnValue_5;                 // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsShipping_ReturnValue_6;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsShipping_ReturnValue_7;                 // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsShipping_ReturnValue_8;                 // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsShipping_ReturnValue_9;                 // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_8;                // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_9;                // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsShipping_ReturnValue_10;                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsShipping_ReturnValue_11;                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_10;               // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_11;               // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsShipping_ReturnValue_12;                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsShipping_ReturnValue_13;                // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_12;               // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_13;               // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsShipping_ReturnValue_14;                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsShipping_ReturnValue_15;                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_14;               // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_15;               // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsShipping_ReturnValue_16;                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsShipping_ReturnValue_17;                // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_16;               // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_17;               // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsShipping_ReturnValue_18;                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_18;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsShipping_ReturnValue_19;                // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_19;               // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsShipping_ReturnValue_20;                // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsShipping_ReturnValue_21;                // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_20;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_21;               // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsShipping_ReturnValue_22;                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_22;               // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsShipping_ReturnValue_23;                // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsShipping_ReturnValue_24;                // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_23;               // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_24;               // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsShipping_ReturnValue_25;                // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_57[0x1];                                       // 0x0057(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_25;               // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsShipping_ReturnValue_26;                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_26;               // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsShipping_ReturnValue_27;                // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsShipping_ReturnValue_28;                // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_27;               // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_28;               // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsShipping_ReturnValue_29;                // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsShipping_ReturnValue_30;                // 0x006F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_29;               // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_30;               // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Script_C*          K2Node_CustomEvent_Controller_55;                  // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_CustomEvent_Weapon_Type;                    // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_Script_C*          K2Node_CustomEvent_Controller_54;                  // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_CustomEvent_Item_Type;                      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Item_Amount;                    // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsShipping_ReturnValue_31;                // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Script_C*          K2Node_CustomEvent_Controller_53;                  // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_31;               // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Script_C*          K2Node_CustomEvent_Controller_52;                  // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_Script_C*          K2Node_CustomEvent_Controller_51;                  // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_Script_C*          K2Node_CustomEvent_Controller_50;                  // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_New_Health;                     // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Script_C*          K2Node_CustomEvent_Controller_49;                  // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_New_Max_Health;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Script_C*          K2Node_CustomEvent_Controller_48;                  // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_New_Invincibility_State;        // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsShipping_ReturnValue_32;                // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_32;               // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EB[0x5];                                       // 0x00EB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Script_C*          K2Node_CustomEvent_Controller_47;                  // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Heal_Amount;                    // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Script_C*          K2Node_CustomEvent_Controller_46;                  // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Damage_Amount;                  // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x010D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10E[0x2];                                      // 0x010E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Script_C*          K2Node_CustomEvent_Controller_45;                  // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_New_Infinite_Ammo_State;        // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Script_C*          K2Node_CustomEvent_Controller_44;                  // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Health_Debug_State;             // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x012A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12B[0x5];                                      // 0x012B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Script_C*          K2Node_CustomEvent_Controller_43;                  // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_Script_C*          K2Node_CustomEvent_Controller_42;                  // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsShipping_ReturnValue_33;                // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_33;               // 0x0143(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Script_C*          K2Node_CustomEvent_Controller_41;                  // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             K2Node_CustomEvent_Transform;                      // 0x0150(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Script_C*          K2Node_CustomEvent_Controller_40;                  // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Show_Player_Location_State;     // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsShipping_ReturnValue_34;                // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_34;               // 0x0192(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_193[0x5];                                      // 0x0193(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Script_C*          K2Node_CustomEvent_Controller_39;                  // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_ShowPlayersInSessionState;      // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A2[0x6];                                      // 0x01A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Script_C*          K2Node_CustomEvent_Controller_38;                  // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class APlayerStartFlame*>              K2Node_CustomEvent_AllPlayerStarts_;               // 0x01B0(0x0010)(ConstParm, ReferenceParm)
	TArray<class ABP_PlayerController_C*>         K2Node_CustomEvent_AllControllers;                 // 0x01C0(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D1[0x3];                                      // 0x01D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_TeleportToPlayerStart_TeleportationsCount1; // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_Script_C*          K2Node_CustomEvent_Controller_37;                  // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          K2Node_CustomEvent_GameMode;                       // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_Script_C*          K2Node_CustomEvent_Controller_36;                  // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_3dDebugState;                   // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameMode_C*                         K2Node_DynamicCast_AsBP_Game_Mode;                 // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsShipping_ReturnValue_35;                // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_202[0x6];                                      // 0x0202(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Script_C*          K2Node_CustomEvent_Controller_35;                  // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Consumable_Hud_State;           // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_35;               // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_9;                 // 0x0212(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_213[0x5];                                      // 0x0213(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Script_C*          K2Node_CustomEvent_Controller_34;                  // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_MachineHudState;                // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Script_C*          K2Node_CustomEvent_Controller_33;                  // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_3dDebugResourceItemsState;      // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Script_C*          K2Node_CustomEvent_Controller_32;                  // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_3dDebugObjectiveItemsState;     // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_241[0x7];                                      // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Script_C*          K2Node_CustomEvent_Controller_31;                  // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_3dDebugObjectiveSpawnsState;    // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_10;                // 0x0251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_252[0x6];                                      // 0x0252(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Script_C*          K2Node_CustomEvent_Controller_30;                  // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_3dDebugSpawnedLootState_1;      // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_261[0x7];                                      // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Script_C*          K2Node_CustomEvent_Controller_29;                  // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_3dDebugSpawnedLootState;        // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_11;                // 0x0271(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_272[0x6];                                      // 0x0272(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Script_C*          K2Node_CustomEvent_Controller_28;                  // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_3dDebugPlayerStartsState;       // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_12;                // 0x0281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_282[0x6];                                      // 0x0282(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Script_C*          K2Node_CustomEvent_Controller_27;                  // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_3dDebugPlayerState;             // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsShipping_ReturnValue_36;                // 0x0291(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_36;               // 0x0292(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_13;                // 0x0293(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_14;                // 0x0294(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_295[0x3];                                      // 0x0295(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Script_C*          K2Node_CustomEvent_Controller_26;                  // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_ToggleHitInfo;                  // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BulletManager_C*                    K2Node_CustomEvent_BulletManager;                  // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_Script_C*          K2Node_CustomEvent_Controller_25;                  // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_15;                // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_16;                // 0x02B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BA[0x6];                                      // 0x02BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Script_C*          K2Node_CustomEvent_Controller_24;                  // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_CustomEvent_Resource;                       // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Count;                          // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsShipping_ReturnValue_37;                // 0x02D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_17;                // 0x02D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_37;               // 0x02D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_18;                // 0x02D7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ABP_PlayerController_Script_C*          K2Node_CustomEvent_Controller_23;                  // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_CustomEvent_Class;                          // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_InInt;                          // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EC[0x4];                                      // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Script_C*          K2Node_CustomEvent_Controller_22;                  // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_3d_Debug_Blocking_Volume_State; // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_19;                // 0x02F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FA[0x6];                                      // 0x02FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Script_C*          K2Node_CustomEvent_Controller_21;                  // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_New_Infinite_Bullets_State;     // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_20;                // 0x0309(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30A[0x6];                                      // 0x030A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Script_C*          K2Node_CustomEvent_Controller_20;                  // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_TimeToElapse;                   // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31C[0x4];                                      // 0x031C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_ShelterImprovementBase_C*>   K2Node_CustomEvent_Shelter_Improvements;           // 0x0320(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_IsShipping_ReturnValue_38;                // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_38;               // 0x0331(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_21;                // 0x0332(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsShipping_ReturnValue_39;                // 0x0333(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsShipping_ReturnValue_40;                // 0x0334(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_39;               // 0x0335(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_40;               // 0x0336(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_22;                // 0x0337(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_23;                // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsShipping_ReturnValue_41;                // 0x0339(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsShipping_ReturnValue_42;                // 0x033A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_41;               // 0x033B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_42;               // 0x033C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_24;                // 0x033D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_25;                // 0x033E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33F[0x1];                                      // 0x033F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Script_C*          K2Node_CustomEvent_Controller_19;                  // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Toggle_Show_Traced_Actor_Display_Name; // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_349[0x7];                                      // 0x0349(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Script_C*          K2Node_CustomEvent_Controller_18;                  // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_CustomEvent_Consumable;                     // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Unequip;                        // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsShipping_ReturnValue_43;                // 0x0361(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_362[0x6];                                      // 0x0362(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Script_C*          K2Node_CustomEvent_Controller_17;                  // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Show_Player_Count_State;        // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_43;               // 0x0371(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_26;                // 0x0372(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_373[0x5];                                      // 0x0373(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Script_C*          K2Node_CustomEvent_Controller_16;                  // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_ShowBulletMaterialImpact;       // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_381[0x7];                                      // 0x0381(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Script_C*          K2Node_CustomEvent_Controller_15;                  // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_Character_Script_C*>         K2Node_CustomEvent_AllCharacters;                  // 0x0390(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_IsShipping_ReturnValue_44;                // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A1[0x7];                                      // 0x03A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Script_C*          K2Node_CustomEvent_Controller_14;                  // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_TimeToEncounter;                // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_TimeToLock;                     // 0x03B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_44;               // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_27;                // 0x03B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_28;                // 0x03BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BB[0x5];                                      // 0x03BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Script_C*          K2Node_CustomEvent_Controller_13;                  // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsShipping_ReturnValue_45;                // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_29;                // 0x03C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_45;               // 0x03CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_30;                // 0x03CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CC[0x4];                                      // 0x03CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Script_C*          K2Node_CustomEvent_Controller_12;                  // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_Script_C*          K2Node_CustomEvent_Controller_11;                  // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_MaxWalkSpeed;                   // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_31;                // 0x03E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsShipping_ReturnValue_46;                // 0x03E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_32;                // 0x03E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_46;               // 0x03E7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_33;                // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsShipping_ReturnValue_47;                // 0x03E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_47;               // 0x03EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3EB[0x5];                                      // 0x03EB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Script_C*          K2Node_CustomEvent_Controller_10;                  // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_34;                // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsShipping_ReturnValue_48;                // 0x03F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_35;                // 0x03FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_48;               // 0x03FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_36;                // 0x03FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3FD[0x3];                                      // 0x03FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0400(0x0010)(ZeroConstructor, NoDestructor)
	class ABP_PlayerController_Script_C*          K2Node_CustomEvent_Controller_9;                   // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_NewJumpZVelocity;               // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsShipping_ReturnValue_49;                // 0x041C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_49;               // 0x041D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_37;                // 0x041E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_38;                // 0x041F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ABP_PlayerController_Script_C*          K2Node_CustomEvent_CheatingPlayer;                 // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsShipping_ReturnValue_50;                // 0x0428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_39;                // 0x0429(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_50;               // 0x042A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_40;                // 0x042B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsShipping_ReturnValue_51;                // 0x042C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_51;               // 0x042D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42E[0x2];                                      // 0x042E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Script_C*          K2Node_CustomEvent_Controller_8;                   // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_CustomEvent_CheatWidget;                    // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_41;                // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_441[0x7];                                      // 0x0441(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Script_C*          K2Node_CustomEvent_Controller_7;                   // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_42;                // 0x0450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsShipping_ReturnValue_52;                // 0x0451(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_43;                // 0x0452(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_52;               // 0x0453(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_44;                // 0x0454(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsShipping_ReturnValue_53;                // 0x0455(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_53;               // 0x0456(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsShipping_ReturnValue_54;                // 0x0457(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_45;                // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_54;               // 0x0459(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_46;                // 0x045A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45B[0x5];                                      // 0x045B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Script_C*          K2Node_CustomEvent_Controller_6;                   // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_Script_C*          K2Node_CustomEvent_Controller_5;                   // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_47;                // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_471[0x7];                                      // 0x0471(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Script_C*          K2Node_CustomEvent_Controller_4;                   // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_48;                // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_49;                // 0x0481(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_482[0x6];                                      // 0x0482(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Script_C*          K2Node_CustomEvent_Controller_3;                   // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_LootObject_Memento_Base_C*>  CallFunc_GetAllActorsOfClass_OutActors;            // 0x0490(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_50;                // 0x04A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x04A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4AA[0x2];                                      // 0x04AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x04AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsShipping_ReturnValue_55;                // 0x04B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B2[0x6];                                      // 0x04B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_LootObject_Memento_Base_C*>  CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x04B8(0x0010)(ReferenceParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue_55;               // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C9[0x7];                                      // 0x04C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x04D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_51;                // 0x04D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x04D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DA[0x2];                                      // 0x04DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x04DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_Script_C*          K2Node_CustomEvent_Controller_2;                   // 0x04E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x04E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_52;                // 0x04E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4EA[0x6];                                      // 0x04EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x04F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GameModeComponent_MementosDistribution_C* CallFunc_GetComponentByClass_ReturnValue;          // 0x04F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Active;                         // 0x0500(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0501(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_502[0x6];                                      // 0x0502(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_1;                // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsShipping_ReturnValue_56;                // 0x0510(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0511(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_56;               // 0x0512(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_53;                // 0x0513(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_514[0x4];                                      // 0x0514(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CampingDetectionComponent_C*        CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0518(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0520(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_521[0x7];                                      // 0x0521(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_OpenableExitVolume_C*>       CallFunc_GetAllActorsOfClass_OutActors_2;          // 0x0528(0x0010)(ReferenceParm)
	class ABP_PlayerController_Script_C*          K2Node_CustomEvent_Controller_1;                   // 0x0538(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_OpenableExitVolume_C*               CallFunc_Array_Get_Item_2;                         // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_54;                // 0x0548(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_549[0x3];                                      // 0x0549(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x054C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0550(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_551[0x7];                                      // 0x0551(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Script_C*          K2Node_CustomEvent_Controller;                     // 0x0558(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Toggle_machine_mode;            // 0x0560(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_561[0x7];                                      // 0x0561(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Script_C*          K2Node_CustomEvent_CheatingController;             // 0x0568(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsLocked;                       // 0x0570(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_55;                // 0x0571(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_56;                // 0x0572(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_573[0x5];                                      // 0x0573(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_2;                // 0x0578(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsShipping_ReturnValue_57;                // 0x0580(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_581[0x7];                                      // 0x0581(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameMode_Shelter_C*                 K2Node_DynamicCast_AsBP_Game_Mode_Shelter;         // 0x0588(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0590(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_57;               // 0x0591(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_57;                // 0x0592(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_593[0x5];                                      // 0x0593(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_3;                // 0x0598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsShipping_ReturnValue_58;                // 0x05A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A1[0x7];                                      // 0x05A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameMode_Matches_C*                 K2Node_DynamicCast_AsBP_Game_Mode_Matches;         // 0x05A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x05B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager) == 0x000010, "Wrong alignment on BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager");
static_assert(sizeof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager) == 0x0005C0, "Wrong size on BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, EntryPoint) == 0x000000, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_IsShipping_ReturnValue) == 0x000004, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_IsShipping_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_IsShipping_ReturnValue_1) == 0x000005, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_IsShipping_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Not_PreBool_ReturnValue) == 0x000006, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Not_PreBool_ReturnValue_1) == 0x000007, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_IsShipping_ReturnValue_2) == 0x000008, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_IsShipping_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_IsShipping_ReturnValue_3) == 0x000009, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_IsShipping_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Not_PreBool_ReturnValue_2) == 0x00000A, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Not_PreBool_ReturnValue_3) == 0x00000B, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_IsShipping_ReturnValue_4) == 0x00000C, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_IsShipping_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_IsShipping_ReturnValue_5) == 0x00000D, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_IsShipping_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Not_PreBool_ReturnValue_4) == 0x00000E, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Not_PreBool_ReturnValue_5) == 0x00000F, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_IsShipping_ReturnValue_6) == 0x000010, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_IsShipping_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_IsShipping_ReturnValue_7) == 0x000011, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_IsShipping_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Not_PreBool_ReturnValue_6) == 0x000012, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Not_PreBool_ReturnValue_7) == 0x000013, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_IsShipping_ReturnValue_8) == 0x000014, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_IsShipping_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_IsShipping_ReturnValue_9) == 0x000015, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_IsShipping_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Not_PreBool_ReturnValue_8) == 0x000016, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Not_PreBool_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Not_PreBool_ReturnValue_9) == 0x000017, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Not_PreBool_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_IsShipping_ReturnValue_10) == 0x000018, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_IsShipping_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_IsShipping_ReturnValue_11) == 0x000019, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_IsShipping_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Not_PreBool_ReturnValue_10) == 0x00001A, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Not_PreBool_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Not_PreBool_ReturnValue_11) == 0x00001B, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Not_PreBool_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_IsShipping_ReturnValue_12) == 0x00001C, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_IsShipping_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_IsShipping_ReturnValue_13) == 0x00001D, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_IsShipping_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Not_PreBool_ReturnValue_12) == 0x00001E, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Not_PreBool_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Not_PreBool_ReturnValue_13) == 0x00001F, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Not_PreBool_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_IsShipping_ReturnValue_14) == 0x000020, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_IsShipping_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_IsShipping_ReturnValue_15) == 0x000021, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_IsShipping_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Not_PreBool_ReturnValue_14) == 0x000022, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Not_PreBool_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Not_PreBool_ReturnValue_15) == 0x000023, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Not_PreBool_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_IsShipping_ReturnValue_16) == 0x000024, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_IsShipping_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_IsShipping_ReturnValue_17) == 0x000025, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_IsShipping_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Not_PreBool_ReturnValue_16) == 0x000026, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Not_PreBool_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Not_PreBool_ReturnValue_17) == 0x000027, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Not_PreBool_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_IsShipping_ReturnValue_18) == 0x000028, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_IsShipping_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Not_PreBool_ReturnValue_18) == 0x000030, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Not_PreBool_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, Temp_int_Array_Index_Variable) == 0x000038, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_IsShipping_ReturnValue_19) == 0x00003C, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_IsShipping_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Not_PreBool_ReturnValue_19) == 0x00003D, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Not_PreBool_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_IsShipping_ReturnValue_20) == 0x00003E, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_IsShipping_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_IsShipping_ReturnValue_21) == 0x00003F, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_IsShipping_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Not_PreBool_ReturnValue_20) == 0x000040, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Not_PreBool_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Not_PreBool_ReturnValue_21) == 0x000041, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Not_PreBool_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, Temp_int_Loop_Counter_Variable_1) == 0x000044, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Add_IntInt_ReturnValue_1) == 0x000048, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, Temp_int_Array_Index_Variable_1) == 0x00004C, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_IsShipping_ReturnValue_22) == 0x000050, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_IsShipping_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Not_PreBool_ReturnValue_22) == 0x000051, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Not_PreBool_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_IsShipping_ReturnValue_23) == 0x000052, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_IsShipping_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_IsShipping_ReturnValue_24) == 0x000053, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_IsShipping_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Not_PreBool_ReturnValue_23) == 0x000054, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Not_PreBool_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Not_PreBool_ReturnValue_24) == 0x000055, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Not_PreBool_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_IsShipping_ReturnValue_25) == 0x000056, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_IsShipping_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, Temp_int_Loop_Counter_Variable_2) == 0x000058, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Not_PreBool_ReturnValue_25) == 0x00005C, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Not_PreBool_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Add_IntInt_ReturnValue_2) == 0x000060, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, Temp_int_Array_Index_Variable_2) == 0x000064, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_IsShipping_ReturnValue_26) == 0x000068, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_IsShipping_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Not_PreBool_ReturnValue_26) == 0x000069, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Not_PreBool_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_IsShipping_ReturnValue_27) == 0x00006A, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_IsShipping_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_IsShipping_ReturnValue_28) == 0x00006B, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_IsShipping_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Not_PreBool_ReturnValue_27) == 0x00006C, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Not_PreBool_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Not_PreBool_ReturnValue_28) == 0x00006D, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Not_PreBool_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_IsShipping_ReturnValue_29) == 0x00006E, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_IsShipping_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_IsShipping_ReturnValue_30) == 0x00006F, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_IsShipping_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Not_PreBool_ReturnValue_29) == 0x000070, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Not_PreBool_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Not_PreBool_ReturnValue_30) == 0x000071, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Not_PreBool_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Controller_55) == 0x000078, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Controller_55' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Weapon_Type) == 0x000080, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Weapon_Type' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Controller_54) == 0x000088, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Controller_54' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Item_Type) == 0x000090, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Item_Type' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Item_Amount) == 0x000098, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Item_Amount' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_IsShipping_ReturnValue_31) == 0x00009C, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_IsShipping_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Controller_53) == 0x0000A0, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Controller_53' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Not_PreBool_ReturnValue_31) == 0x0000A8, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Not_PreBool_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Controller_52) == 0x0000B0, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Controller_52' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Controller_51) == 0x0000B8, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Controller_51' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Controller_50) == 0x0000C0, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Controller_50' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_New_Health) == 0x0000C8, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_New_Health' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Controller_49) == 0x0000D0, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Controller_49' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_New_Max_Health) == 0x0000D8, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_New_Max_Health' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Controller_48) == 0x0000E0, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Controller_48' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_New_Invincibility_State) == 0x0000E8, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_New_Invincibility_State' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_IsShipping_ReturnValue_32) == 0x0000E9, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_IsShipping_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Not_PreBool_ReturnValue_32) == 0x0000EA, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Not_PreBool_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Controller_47) == 0x0000F0, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Controller_47' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Heal_Amount) == 0x0000F8, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Heal_Amount' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Controller_46) == 0x000100, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Controller_46' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Damage_Amount) == 0x000108, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Damage_Amount' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_BooleanAND_ReturnValue) == 0x00010C, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_BooleanAND_ReturnValue_1) == 0x00010D, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Controller_45) == 0x000110, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Controller_45' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_New_Infinite_Ammo_State) == 0x000118, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_New_Infinite_Ammo_State' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Controller_44) == 0x000120, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Controller_44' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Health_Debug_State) == 0x000128, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Health_Debug_State' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_BooleanAND_ReturnValue_2) == 0x000129, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_BooleanAND_ReturnValue_3) == 0x00012A, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Controller_43) == 0x000130, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Controller_43' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Controller_42) == 0x000138, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Controller_42' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_BooleanAND_ReturnValue_4) == 0x000140, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_BooleanAND_ReturnValue_5) == 0x000141, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_IsShipping_ReturnValue_33) == 0x000142, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_IsShipping_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Not_PreBool_ReturnValue_33) == 0x000143, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Not_PreBool_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Controller_41) == 0x000148, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Controller_41' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Transform) == 0x000150, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Transform' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_BooleanAND_ReturnValue_6) == 0x000180, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Controller_40) == 0x000188, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Controller_40' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Show_Player_Location_State) == 0x000190, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Show_Player_Location_State' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_IsShipping_ReturnValue_34) == 0x000191, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_IsShipping_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Not_PreBool_ReturnValue_34) == 0x000192, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Not_PreBool_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Controller_39) == 0x000198, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Controller_39' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_ShowPlayersInSessionState) == 0x0001A0, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_ShowPlayersInSessionState' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_BooleanAND_ReturnValue_7) == 0x0001A1, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Controller_38) == 0x0001A8, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Controller_38' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_AllPlayerStarts_) == 0x0001B0, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_AllPlayerStarts_' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_AllControllers) == 0x0001C0, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_AllControllers' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_BooleanAND_ReturnValue_8) == 0x0001D0, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_TeleportToPlayerStart_TeleportationsCount1) == 0x0001D4, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_TeleportToPlayerStart_TeleportationsCount1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Controller_37) == 0x0001D8, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Controller_37' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_GameMode) == 0x0001E0, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_GameMode' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Controller_36) == 0x0001E8, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Controller_36' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_3dDebugState) == 0x0001F0, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_3dDebugState' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_DynamicCast_AsBP_Game_Mode) == 0x0001F8, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_DynamicCast_AsBP_Game_Mode' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_DynamicCast_bSuccess) == 0x000200, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_IsShipping_ReturnValue_35) == 0x000201, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_IsShipping_ReturnValue_35' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Controller_35) == 0x000208, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Controller_35' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Consumable_Hud_State) == 0x000210, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Consumable_Hud_State' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Not_PreBool_ReturnValue_35) == 0x000211, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Not_PreBool_ReturnValue_35' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_BooleanAND_ReturnValue_9) == 0x000212, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_BooleanAND_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Controller_34) == 0x000218, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Controller_34' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_MachineHudState) == 0x000220, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_MachineHudState' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Controller_33) == 0x000228, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Controller_33' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_3dDebugResourceItemsState) == 0x000230, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_3dDebugResourceItemsState' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Controller_32) == 0x000238, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Controller_32' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_3dDebugObjectiveItemsState) == 0x000240, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_3dDebugObjectiveItemsState' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Controller_31) == 0x000248, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Controller_31' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_3dDebugObjectiveSpawnsState) == 0x000250, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_3dDebugObjectiveSpawnsState' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_BooleanAND_ReturnValue_10) == 0x000251, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_BooleanAND_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Controller_30) == 0x000258, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Controller_30' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_3dDebugSpawnedLootState_1) == 0x000260, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_3dDebugSpawnedLootState_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Controller_29) == 0x000268, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Controller_29' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_3dDebugSpawnedLootState) == 0x000270, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_3dDebugSpawnedLootState' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_BooleanAND_ReturnValue_11) == 0x000271, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_BooleanAND_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Controller_28) == 0x000278, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Controller_28' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_3dDebugPlayerStartsState) == 0x000280, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_3dDebugPlayerStartsState' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_BooleanAND_ReturnValue_12) == 0x000281, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_BooleanAND_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Controller_27) == 0x000288, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Controller_27' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_3dDebugPlayerState) == 0x000290, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_3dDebugPlayerState' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_IsShipping_ReturnValue_36) == 0x000291, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_IsShipping_ReturnValue_36' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Not_PreBool_ReturnValue_36) == 0x000292, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Not_PreBool_ReturnValue_36' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_BooleanAND_ReturnValue_13) == 0x000293, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_BooleanAND_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_BooleanAND_ReturnValue_14) == 0x000294, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_BooleanAND_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Controller_26) == 0x000298, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Controller_26' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_ToggleHitInfo) == 0x0002A0, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_ToggleHitInfo' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_BulletManager) == 0x0002A8, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_BulletManager' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Controller_25) == 0x0002B0, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Controller_25' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_BooleanAND_ReturnValue_15) == 0x0002B8, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_BooleanAND_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_BooleanAND_ReturnValue_16) == 0x0002B9, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_BooleanAND_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Controller_24) == 0x0002C0, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Controller_24' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Resource) == 0x0002C8, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Resource' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Count) == 0x0002D0, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Count' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_IsShipping_ReturnValue_37) == 0x0002D4, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_IsShipping_ReturnValue_37' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_BooleanAND_ReturnValue_17) == 0x0002D5, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_BooleanAND_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Not_PreBool_ReturnValue_37) == 0x0002D6, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Not_PreBool_ReturnValue_37' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_BooleanAND_ReturnValue_18) == 0x0002D7, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_BooleanAND_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Controller_23) == 0x0002D8, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Controller_23' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Class) == 0x0002E0, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Class' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_InInt) == 0x0002E8, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_InInt' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Controller_22) == 0x0002F0, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Controller_22' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_3d_Debug_Blocking_Volume_State) == 0x0002F8, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_3d_Debug_Blocking_Volume_State' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_BooleanAND_ReturnValue_19) == 0x0002F9, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_BooleanAND_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Controller_21) == 0x000300, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Controller_21' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_New_Infinite_Bullets_State) == 0x000308, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_New_Infinite_Bullets_State' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_BooleanAND_ReturnValue_20) == 0x000309, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_BooleanAND_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Controller_20) == 0x000310, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Controller_20' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_TimeToElapse) == 0x000318, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_TimeToElapse' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Shelter_Improvements) == 0x000320, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Shelter_Improvements' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_IsShipping_ReturnValue_38) == 0x000330, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_IsShipping_ReturnValue_38' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Not_PreBool_ReturnValue_38) == 0x000331, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Not_PreBool_ReturnValue_38' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_BooleanAND_ReturnValue_21) == 0x000332, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_BooleanAND_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_IsShipping_ReturnValue_39) == 0x000333, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_IsShipping_ReturnValue_39' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_IsShipping_ReturnValue_40) == 0x000334, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_IsShipping_ReturnValue_40' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Not_PreBool_ReturnValue_39) == 0x000335, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Not_PreBool_ReturnValue_39' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Not_PreBool_ReturnValue_40) == 0x000336, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Not_PreBool_ReturnValue_40' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_BooleanAND_ReturnValue_22) == 0x000337, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_BooleanAND_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_BooleanAND_ReturnValue_23) == 0x000338, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_BooleanAND_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_IsShipping_ReturnValue_41) == 0x000339, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_IsShipping_ReturnValue_41' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_IsShipping_ReturnValue_42) == 0x00033A, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_IsShipping_ReturnValue_42' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Not_PreBool_ReturnValue_41) == 0x00033B, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Not_PreBool_ReturnValue_41' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Not_PreBool_ReturnValue_42) == 0x00033C, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Not_PreBool_ReturnValue_42' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_BooleanAND_ReturnValue_24) == 0x00033D, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_BooleanAND_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_BooleanAND_ReturnValue_25) == 0x00033E, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_BooleanAND_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Controller_19) == 0x000340, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Controller_19' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Toggle_Show_Traced_Actor_Display_Name) == 0x000348, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Toggle_Show_Traced_Actor_Display_Name' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Controller_18) == 0x000350, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Controller_18' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Consumable) == 0x000358, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Consumable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Unequip) == 0x000360, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Unequip' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_IsShipping_ReturnValue_43) == 0x000361, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_IsShipping_ReturnValue_43' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Controller_17) == 0x000368, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Controller_17' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Show_Player_Count_State) == 0x000370, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Show_Player_Count_State' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Not_PreBool_ReturnValue_43) == 0x000371, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Not_PreBool_ReturnValue_43' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_BooleanAND_ReturnValue_26) == 0x000372, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_BooleanAND_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Controller_16) == 0x000378, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Controller_16' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_ShowBulletMaterialImpact) == 0x000380, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_ShowBulletMaterialImpact' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Controller_15) == 0x000388, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Controller_15' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_AllCharacters) == 0x000390, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_AllCharacters' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_IsShipping_ReturnValue_44) == 0x0003A0, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_IsShipping_ReturnValue_44' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Controller_14) == 0x0003A8, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Controller_14' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_TimeToEncounter) == 0x0003B0, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_TimeToEncounter' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_TimeToLock) == 0x0003B4, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_TimeToLock' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Not_PreBool_ReturnValue_44) == 0x0003B8, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Not_PreBool_ReturnValue_44' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_BooleanAND_ReturnValue_27) == 0x0003B9, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_BooleanAND_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_BooleanAND_ReturnValue_28) == 0x0003BA, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_BooleanAND_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Controller_13) == 0x0003C0, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Controller_13' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_IsShipping_ReturnValue_45) == 0x0003C8, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_IsShipping_ReturnValue_45' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_BooleanAND_ReturnValue_29) == 0x0003C9, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_BooleanAND_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Not_PreBool_ReturnValue_45) == 0x0003CA, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Not_PreBool_ReturnValue_45' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_BooleanAND_ReturnValue_30) == 0x0003CB, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_BooleanAND_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Controller_12) == 0x0003D0, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Controller_12' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Controller_11) == 0x0003D8, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Controller_11' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_MaxWalkSpeed) == 0x0003E0, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_MaxWalkSpeed' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_BooleanAND_ReturnValue_31) == 0x0003E4, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_BooleanAND_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_IsShipping_ReturnValue_46) == 0x0003E5, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_IsShipping_ReturnValue_46' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_BooleanAND_ReturnValue_32) == 0x0003E6, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_BooleanAND_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Not_PreBool_ReturnValue_46) == 0x0003E7, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Not_PreBool_ReturnValue_46' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_BooleanAND_ReturnValue_33) == 0x0003E8, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_BooleanAND_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_IsShipping_ReturnValue_47) == 0x0003E9, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_IsShipping_ReturnValue_47' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Not_PreBool_ReturnValue_47) == 0x0003EA, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Not_PreBool_ReturnValue_47' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Controller_10) == 0x0003F0, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Controller_10' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_BooleanAND_ReturnValue_34) == 0x0003F8, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_BooleanAND_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_IsShipping_ReturnValue_48) == 0x0003F9, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_IsShipping_ReturnValue_48' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_BooleanAND_ReturnValue_35) == 0x0003FA, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_BooleanAND_ReturnValue_35' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Not_PreBool_ReturnValue_48) == 0x0003FB, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Not_PreBool_ReturnValue_48' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_BooleanAND_ReturnValue_36) == 0x0003FC, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_BooleanAND_ReturnValue_36' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CreateDelegate_OutputDelegate) == 0x000400, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Controller_9) == 0x000410, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Controller_9' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_NewJumpZVelocity) == 0x000418, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_NewJumpZVelocity' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_IsShipping_ReturnValue_49) == 0x00041C, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_IsShipping_ReturnValue_49' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Not_PreBool_ReturnValue_49) == 0x00041D, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Not_PreBool_ReturnValue_49' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_BooleanAND_ReturnValue_37) == 0x00041E, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_BooleanAND_ReturnValue_37' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_BooleanAND_ReturnValue_38) == 0x00041F, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_BooleanAND_ReturnValue_38' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_CheatingPlayer) == 0x000420, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_CheatingPlayer' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_IsShipping_ReturnValue_50) == 0x000428, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_IsShipping_ReturnValue_50' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_BooleanAND_ReturnValue_39) == 0x000429, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_BooleanAND_ReturnValue_39' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Not_PreBool_ReturnValue_50) == 0x00042A, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Not_PreBool_ReturnValue_50' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_BooleanAND_ReturnValue_40) == 0x00042B, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_BooleanAND_ReturnValue_40' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_IsShipping_ReturnValue_51) == 0x00042C, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_IsShipping_ReturnValue_51' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Not_PreBool_ReturnValue_51) == 0x00042D, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Not_PreBool_ReturnValue_51' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Controller_8) == 0x000430, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Controller_8' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_CheatWidget) == 0x000438, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_CheatWidget' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_BooleanAND_ReturnValue_41) == 0x000440, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_BooleanAND_ReturnValue_41' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Controller_7) == 0x000448, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Controller_7' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_BooleanAND_ReturnValue_42) == 0x000450, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_BooleanAND_ReturnValue_42' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_IsShipping_ReturnValue_52) == 0x000451, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_IsShipping_ReturnValue_52' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_BooleanAND_ReturnValue_43) == 0x000452, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_BooleanAND_ReturnValue_43' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Not_PreBool_ReturnValue_52) == 0x000453, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Not_PreBool_ReturnValue_52' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_BooleanAND_ReturnValue_44) == 0x000454, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_BooleanAND_ReturnValue_44' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_IsShipping_ReturnValue_53) == 0x000455, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_IsShipping_ReturnValue_53' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Not_PreBool_ReturnValue_53) == 0x000456, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Not_PreBool_ReturnValue_53' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_IsShipping_ReturnValue_54) == 0x000457, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_IsShipping_ReturnValue_54' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_BooleanAND_ReturnValue_45) == 0x000458, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_BooleanAND_ReturnValue_45' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Not_PreBool_ReturnValue_54) == 0x000459, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Not_PreBool_ReturnValue_54' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_BooleanAND_ReturnValue_46) == 0x00045A, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_BooleanAND_ReturnValue_46' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Controller_6) == 0x000460, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Controller_6' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Controller_5) == 0x000468, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Controller_5' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_BooleanAND_ReturnValue_47) == 0x000470, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_BooleanAND_ReturnValue_47' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Controller_4) == 0x000478, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Controller_4' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_BooleanAND_ReturnValue_48) == 0x000480, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_BooleanAND_ReturnValue_48' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_BooleanAND_ReturnValue_49) == 0x000481, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_BooleanAND_ReturnValue_49' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Controller_3) == 0x000488, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Controller_3' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_GetAllActorsOfClass_OutActors) == 0x000490, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Array_Get_Item) == 0x0004A0, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_BooleanAND_ReturnValue_50) == 0x0004A8, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_BooleanAND_ReturnValue_50' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_IsValid_ReturnValue) == 0x0004A9, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Array_Length_ReturnValue) == 0x0004AC, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Less_IntInt_ReturnValue) == 0x0004B0, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_IsShipping_ReturnValue_55) == 0x0004B1, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_IsShipping_ReturnValue_55' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x0004B8, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Not_PreBool_ReturnValue_55) == 0x0004C8, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Not_PreBool_ReturnValue_55' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Array_Get_Item_1) == 0x0004D0, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_BooleanAND_ReturnValue_51) == 0x0004D8, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_BooleanAND_ReturnValue_51' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_IsValid_ReturnValue_1) == 0x0004D9, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Array_Length_ReturnValue_1) == 0x0004DC, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Controller_2) == 0x0004E0, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Controller_2' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Less_IntInt_ReturnValue_1) == 0x0004E8, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_BooleanAND_ReturnValue_52) == 0x0004E9, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_BooleanAND_ReturnValue_52' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_GetGameMode_ReturnValue) == 0x0004F0, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_GetComponentByClass_ReturnValue) == 0x0004F8, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Active) == 0x000500, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Active' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_IsValid_ReturnValue_2) == 0x000501, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_GetGameMode_ReturnValue_1) == 0x000508, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_GetGameMode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_IsShipping_ReturnValue_56) == 0x000510, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_IsShipping_ReturnValue_56' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_IsValid_ReturnValue_3) == 0x000511, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Not_PreBool_ReturnValue_56) == 0x000512, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Not_PreBool_ReturnValue_56' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_BooleanAND_ReturnValue_53) == 0x000513, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_BooleanAND_ReturnValue_53' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000518, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_IsValid_ReturnValue_4) == 0x000520, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_GetAllActorsOfClass_OutActors_2) == 0x000528, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_GetAllActorsOfClass_OutActors_2' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Controller_1) == 0x000538, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Controller_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Array_Get_Item_2) == 0x000540, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_BooleanAND_ReturnValue_54) == 0x000548, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_BooleanAND_ReturnValue_54' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Array_Length_ReturnValue_2) == 0x00054C, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Less_IntInt_ReturnValue_2) == 0x000550, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Controller) == 0x000558, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_Toggle_machine_mode) == 0x000560, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_Toggle_machine_mode' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_CheatingController) == 0x000568, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_CheatingController' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_CustomEvent_IsLocked) == 0x000570, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_CustomEvent_IsLocked' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_BooleanAND_ReturnValue_55) == 0x000571, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_BooleanAND_ReturnValue_55' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_BooleanAND_ReturnValue_56) == 0x000572, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_BooleanAND_ReturnValue_56' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_GetGameMode_ReturnValue_2) == 0x000578, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_GetGameMode_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_IsShipping_ReturnValue_57) == 0x000580, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_IsShipping_ReturnValue_57' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_DynamicCast_AsBP_Game_Mode_Shelter) == 0x000588, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_DynamicCast_AsBP_Game_Mode_Shelter' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_DynamicCast_bSuccess_1) == 0x000590, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_Not_PreBool_ReturnValue_57) == 0x000591, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_Not_PreBool_ReturnValue_57' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_BooleanAND_ReturnValue_57) == 0x000592, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_BooleanAND_ReturnValue_57' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_GetGameMode_ReturnValue_3) == 0x000598, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_GetGameMode_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, CallFunc_IsShipping_ReturnValue_58) == 0x0005A0, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::CallFunc_IsShipping_ReturnValue_58' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_DynamicCast_AsBP_Game_Mode_Matches) == 0x0005A8, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_DynamicCast_AsBP_Game_Mode_Matches' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager, K2Node_DynamicCast_bSuccess_2) == 0x0005B0, "Member 'BP_FlameCheatManager_C_ExecuteUbergraph_BP_FlameCheatManager::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.CheatToggleOnboardingUILocks
// 0x0010 (0x0010 - 0x0000)
struct BP_FlameCheatManager_C_CheatToggleOnboardingUILocks final
{
public:
	class ABP_PlayerController_Script_C*          CheatingController;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLocked;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FlameCheatManager_C_CheatToggleOnboardingUILocks) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_CheatToggleOnboardingUILocks");
static_assert(sizeof(BP_FlameCheatManager_C_CheatToggleOnboardingUILocks) == 0x000010, "Wrong size on BP_FlameCheatManager_C_CheatToggleOnboardingUILocks");
static_assert(offsetof(BP_FlameCheatManager_C_CheatToggleOnboardingUILocks, CheatingController) == 0x000000, "Member 'BP_FlameCheatManager_C_CheatToggleOnboardingUILocks::CheatingController' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_CheatToggleOnboardingUILocks, IsLocked) == 0x000008, "Member 'BP_FlameCheatManager_C_CheatToggleOnboardingUILocks::IsLocked' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.Cheat toggle machine mode
// 0x0010 (0x0010 - 0x0000)
struct BP_FlameCheatManager_C_Cheat_toggle_machine_mode final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Toggle_machine_mode_0;                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FlameCheatManager_C_Cheat_toggle_machine_mode) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_Cheat_toggle_machine_mode");
static_assert(sizeof(BP_FlameCheatManager_C_Cheat_toggle_machine_mode) == 0x000010, "Wrong size on BP_FlameCheatManager_C_Cheat_toggle_machine_mode");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_toggle_machine_mode, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_Cheat_toggle_machine_mode::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_toggle_machine_mode, Toggle_machine_mode_0) == 0x000008, "Member 'BP_FlameCheatManager_C_Cheat_toggle_machine_mode::Toggle_machine_mode_0' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.Cheat projectile debug
// 0x0008 (0x0008 - 0x0000)
struct BP_FlameCheatManager_C_Cheat_projectile_debug final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_Cheat_projectile_debug) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_Cheat_projectile_debug");
static_assert(sizeof(BP_FlameCheatManager_C_Cheat_projectile_debug) == 0x000008, "Wrong size on BP_FlameCheatManager_C_Cheat_projectile_debug");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_projectile_debug, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_Cheat_projectile_debug::Controller' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.Set Camping Detection Active
// 0x0001 (0x0001 - 0x0000)
struct BP_FlameCheatManager_C_Set_Camping_Detection_Active final
{
public:
	bool                                          Active;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FlameCheatManager_C_Set_Camping_Detection_Active) == 0x000001, "Wrong alignment on BP_FlameCheatManager_C_Set_Camping_Detection_Active");
static_assert(sizeof(BP_FlameCheatManager_C_Set_Camping_Detection_Active) == 0x000001, "Wrong size on BP_FlameCheatManager_C_Set_Camping_Detection_Active");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Camping_Detection_Active, Active) == 0x000000, "Member 'BP_FlameCheatManager_C_Set_Camping_Detection_Active::Active' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.SpawnAllMementos
// 0x0008 (0x0008 - 0x0000)
struct BP_FlameCheatManager_C_SpawnAllMementos final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_SpawnAllMementos) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_SpawnAllMementos");
static_assert(sizeof(BP_FlameCheatManager_C_SpawnAllMementos) == 0x000008, "Wrong size on BP_FlameCheatManager_C_SpawnAllMementos");
static_assert(offsetof(BP_FlameCheatManager_C_SpawnAllMementos, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_SpawnAllMementos::Controller' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.ShowSpawnedMementos
// 0x0008 (0x0008 - 0x0000)
struct BP_FlameCheatManager_C_ShowSpawnedMementos final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_ShowSpawnedMementos) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_ShowSpawnedMementos");
static_assert(sizeof(BP_FlameCheatManager_C_ShowSpawnedMementos) == 0x000008, "Wrong size on BP_FlameCheatManager_C_ShowSpawnedMementos");
static_assert(offsetof(BP_FlameCheatManager_C_ShowSpawnedMementos, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_ShowSpawnedMementos::Controller' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.ShowMementoSpawnPoints
// 0x0008 (0x0008 - 0x0000)
struct BP_FlameCheatManager_C_ShowMementoSpawnPoints final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_ShowMementoSpawnPoints) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_ShowMementoSpawnPoints");
static_assert(sizeof(BP_FlameCheatManager_C_ShowMementoSpawnPoints) == 0x000008, "Wrong size on BP_FlameCheatManager_C_ShowMementoSpawnPoints");
static_assert(offsetof(BP_FlameCheatManager_C_ShowMementoSpawnPoints, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_ShowMementoSpawnPoints::Controller' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.CheatSwitchFogOfWar
// 0x0008 (0x0008 - 0x0000)
struct BP_FlameCheatManager_C_CheatSwitchFogOfWar final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_CheatSwitchFogOfWar) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_CheatSwitchFogOfWar");
static_assert(sizeof(BP_FlameCheatManager_C_CheatSwitchFogOfWar) == 0x000008, "Wrong size on BP_FlameCheatManager_C_CheatSwitchFogOfWar");
static_assert(offsetof(BP_FlameCheatManager_C_CheatSwitchFogOfWar, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_CheatSwitchFogOfWar::Controller' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.CheatCameraFreeLook
// 0x0008 (0x0008 - 0x0000)
struct BP_FlameCheatManager_C_CheatCameraFreeLook final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_CheatCameraFreeLook) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_CheatCameraFreeLook");
static_assert(sizeof(BP_FlameCheatManager_C_CheatCameraFreeLook) == 0x000008, "Wrong size on BP_FlameCheatManager_C_CheatCameraFreeLook");
static_assert(offsetof(BP_FlameCheatManager_C_CheatCameraFreeLook, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_CheatCameraFreeLook::Controller' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.CheatStartSpectating
// 0x0008 (0x0008 - 0x0000)
struct BP_FlameCheatManager_C_CheatStartSpectating final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_CheatStartSpectating) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_CheatStartSpectating");
static_assert(sizeof(BP_FlameCheatManager_C_CheatStartSpectating) == 0x000008, "Wrong size on BP_FlameCheatManager_C_CheatStartSpectating");
static_assert(offsetof(BP_FlameCheatManager_C_CheatStartSpectating, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_CheatStartSpectating::Controller' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.CanCheat_M
// 0x0010 (0x0010 - 0x0000)
struct BP_FlameCheatManager_C_CanCheat_M final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CheatWidget;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_CanCheat_M) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_CanCheat_M");
static_assert(sizeof(BP_FlameCheatManager_C_CanCheat_M) == 0x000010, "Wrong size on BP_FlameCheatManager_C_CanCheat_M");
static_assert(offsetof(BP_FlameCheatManager_C_CanCheat_M, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_CanCheat_M::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_CanCheat_M, CheatWidget) == 0x000008, "Member 'BP_FlameCheatManager_C_CanCheat_M::CheatWidget' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.CheatSkipTutorial
// 0x0008 (0x0008 - 0x0000)
struct BP_FlameCheatManager_C_CheatSkipTutorial final
{
public:
	class ABP_PlayerController_Script_C*          CheatingPlayer;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_CheatSkipTutorial) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_CheatSkipTutorial");
static_assert(sizeof(BP_FlameCheatManager_C_CheatSkipTutorial) == 0x000008, "Wrong size on BP_FlameCheatManager_C_CheatSkipTutorial");
static_assert(offsetof(BP_FlameCheatManager_C_CheatSkipTutorial, CheatingPlayer) == 0x000000, "Member 'BP_FlameCheatManager_C_CheatSkipTutorial::CheatingPlayer' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.CheatBigJumps
// 0x0010 (0x0010 - 0x0000)
struct BP_FlameCheatManager_C_CheatBigJumps final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewJumpZVelocity;                                  // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_CheatBigJumps) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_CheatBigJumps");
static_assert(sizeof(BP_FlameCheatManager_C_CheatBigJumps) == 0x000010, "Wrong size on BP_FlameCheatManager_C_CheatBigJumps");
static_assert(offsetof(BP_FlameCheatManager_C_CheatBigJumps, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_CheatBigJumps::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_CheatBigJumps, NewJumpZVelocity) == 0x000008, "Member 'BP_FlameCheatManager_C_CheatBigJumps::NewJumpZVelocity' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.CheatMarkSelfAsTester
// 0x0008 (0x0008 - 0x0000)
struct BP_FlameCheatManager_C_CheatMarkSelfAsTester final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_CheatMarkSelfAsTester) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_CheatMarkSelfAsTester");
static_assert(sizeof(BP_FlameCheatManager_C_CheatMarkSelfAsTester) == 0x000008, "Wrong size on BP_FlameCheatManager_C_CheatMarkSelfAsTester");
static_assert(offsetof(BP_FlameCheatManager_C_CheatMarkSelfAsTester, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_CheatMarkSelfAsTester::Controller' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.CheatFastMovement
// 0x0010 (0x0010 - 0x0000)
struct BP_FlameCheatManager_C_CheatFastMovement final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxWalkSpeed;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_CheatFastMovement) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_CheatFastMovement");
static_assert(sizeof(BP_FlameCheatManager_C_CheatFastMovement) == 0x000010, "Wrong size on BP_FlameCheatManager_C_CheatFastMovement");
static_assert(offsetof(BP_FlameCheatManager_C_CheatFastMovement, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_CheatFastMovement::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_CheatFastMovement, MaxWalkSpeed) == 0x000008, "Member 'BP_FlameCheatManager_C_CheatFastMovement::MaxWalkSpeed' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.CheatInfiniteSprint
// 0x0008 (0x0008 - 0x0000)
struct BP_FlameCheatManager_C_CheatInfiniteSprint final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_CheatInfiniteSprint) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_CheatInfiniteSprint");
static_assert(sizeof(BP_FlameCheatManager_C_CheatInfiniteSprint) == 0x000008, "Wrong size on BP_FlameCheatManager_C_CheatInfiniteSprint");
static_assert(offsetof(BP_FlameCheatManager_C_CheatInfiniteSprint, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_CheatInfiniteSprint::Controller' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.CheatSetDevMode
// 0x0008 (0x0008 - 0x0000)
struct BP_FlameCheatManager_C_CheatSetDevMode final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_CheatSetDevMode) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_CheatSetDevMode");
static_assert(sizeof(BP_FlameCheatManager_C_CheatSetDevMode) == 0x000008, "Wrong size on BP_FlameCheatManager_C_CheatSetDevMode");
static_assert(offsetof(BP_FlameCheatManager_C_CheatSetDevMode, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_CheatSetDevMode::Controller' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.CheatSkipLobby
// 0x0010 (0x0010 - 0x0000)
struct BP_FlameCheatManager_C_CheatSkipLobby final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TimeToEncounter;                                   // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TimeToLock;                                        // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_CheatSkipLobby) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_CheatSkipLobby");
static_assert(sizeof(BP_FlameCheatManager_C_CheatSkipLobby) == 0x000010, "Wrong size on BP_FlameCheatManager_C_CheatSkipLobby");
static_assert(offsetof(BP_FlameCheatManager_C_CheatSkipLobby, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_CheatSkipLobby::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_CheatSkipLobby, TimeToEncounter) == 0x000008, "Member 'BP_FlameCheatManager_C_CheatSkipLobby::TimeToEncounter' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_CheatSkipLobby, TimeToLock) == 0x00000C, "Member 'BP_FlameCheatManager_C_CheatSkipLobby::TimeToLock' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.Cheat Create Testing Pawns
// 0x0018 (0x0018 - 0x0000)
struct BP_FlameCheatManager_C_Cheat_Create_Testing_Pawns final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_Character_Script_C*>         AllCharacters;                                     // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_FlameCheatManager_C_Cheat_Create_Testing_Pawns) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_Cheat_Create_Testing_Pawns");
static_assert(sizeof(BP_FlameCheatManager_C_Cheat_Create_Testing_Pawns) == 0x000018, "Wrong size on BP_FlameCheatManager_C_Cheat_Create_Testing_Pawns");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_Create_Testing_Pawns, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_Cheat_Create_Testing_Pawns::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_Create_Testing_Pawns, AllCharacters) == 0x000008, "Member 'BP_FlameCheatManager_C_Cheat_Create_Testing_Pawns::AllCharacters' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.Client Toggle Bullet Impact Material
// 0x0010 (0x0010 - 0x0000)
struct BP_FlameCheatManager_C_Client_Toggle_Bullet_Impact_Material final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowBulletMaterialImpact;                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FlameCheatManager_C_Client_Toggle_Bullet_Impact_Material) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_Client_Toggle_Bullet_Impact_Material");
static_assert(sizeof(BP_FlameCheatManager_C_Client_Toggle_Bullet_Impact_Material) == 0x000010, "Wrong size on BP_FlameCheatManager_C_Client_Toggle_Bullet_Impact_Material");
static_assert(offsetof(BP_FlameCheatManager_C_Client_Toggle_Bullet_Impact_Material, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_Client_Toggle_Bullet_Impact_Material::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Client_Toggle_Bullet_Impact_Material, ShowBulletMaterialImpact) == 0x000008, "Member 'BP_FlameCheatManager_C_Client_Toggle_Bullet_Impact_Material::ShowBulletMaterialImpact' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.Cheat Show Player Count Event
// 0x0010 (0x0010 - 0x0000)
struct BP_FlameCheatManager_C_Cheat_Show_Player_Count_Event final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Show_Player_Count_State;                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FlameCheatManager_C_Cheat_Show_Player_Count_Event) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_Cheat_Show_Player_Count_Event");
static_assert(sizeof(BP_FlameCheatManager_C_Cheat_Show_Player_Count_Event) == 0x000010, "Wrong size on BP_FlameCheatManager_C_Cheat_Show_Player_Count_Event");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_Show_Player_Count_Event, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_Cheat_Show_Player_Count_Event::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_Show_Player_Count_Event, Show_Player_Count_State) == 0x000008, "Member 'BP_FlameCheatManager_C_Cheat_Show_Player_Count_Event::Show_Player_Count_State' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.Cheat Equip Consumable
// 0x0018 (0x0018 - 0x0000)
struct BP_FlameCheatManager_C_Cheat_Equip_Consumable final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Consumable;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UnEquip;                                           // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FlameCheatManager_C_Cheat_Equip_Consumable) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_Cheat_Equip_Consumable");
static_assert(sizeof(BP_FlameCheatManager_C_Cheat_Equip_Consumable) == 0x000018, "Wrong size on BP_FlameCheatManager_C_Cheat_Equip_Consumable");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_Equip_Consumable, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_Cheat_Equip_Consumable::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_Equip_Consumable, Consumable) == 0x000008, "Member 'BP_FlameCheatManager_C_Cheat_Equip_Consumable::Consumable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_Equip_Consumable, UnEquip) == 0x000010, "Member 'BP_FlameCheatManager_C_Cheat_Equip_Consumable::UnEquip' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.Cheat Show Traced Actor DisplayName
// 0x0010 (0x0010 - 0x0000)
struct BP_FlameCheatManager_C_Cheat_Show_Traced_Actor_DisplayName final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Toggle_Show_Traced_Actor_Display_Name;             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FlameCheatManager_C_Cheat_Show_Traced_Actor_DisplayName) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_Cheat_Show_Traced_Actor_DisplayName");
static_assert(sizeof(BP_FlameCheatManager_C_Cheat_Show_Traced_Actor_DisplayName) == 0x000010, "Wrong size on BP_FlameCheatManager_C_Cheat_Show_Traced_Actor_DisplayName");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_Show_Traced_Actor_DisplayName, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_Cheat_Show_Traced_Actor_DisplayName::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_Show_Traced_Actor_DisplayName, Toggle_Show_Traced_Actor_Display_Name) == 0x000008, "Member 'BP_FlameCheatManager_C_Cheat_Show_Traced_Actor_DisplayName::Toggle_Show_Traced_Actor_Display_Name' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.Cheat Add Shelter Resource Elapsed Time
// 0x0020 (0x0020 - 0x0000)
struct BP_FlameCheatManager_C_Cheat_Add_Shelter_Resource_Elapsed_Time final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TimeToElapse;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_ShelterImprovementBase_C*>   Shelter_Improvements;                              // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_FlameCheatManager_C_Cheat_Add_Shelter_Resource_Elapsed_Time) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_Cheat_Add_Shelter_Resource_Elapsed_Time");
static_assert(sizeof(BP_FlameCheatManager_C_Cheat_Add_Shelter_Resource_Elapsed_Time) == 0x000020, "Wrong size on BP_FlameCheatManager_C_Cheat_Add_Shelter_Resource_Elapsed_Time");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_Add_Shelter_Resource_Elapsed_Time, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_Cheat_Add_Shelter_Resource_Elapsed_Time::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_Add_Shelter_Resource_Elapsed_Time, TimeToElapse) == 0x000008, "Member 'BP_FlameCheatManager_C_Cheat_Add_Shelter_Resource_Elapsed_Time::TimeToElapse' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_Add_Shelter_Resource_Elapsed_Time, Shelter_Improvements) == 0x000010, "Member 'BP_FlameCheatManager_C_Cheat_Add_Shelter_Resource_Elapsed_Time::Shelter_Improvements' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.Cheat Infinite Bullets
// 0x0010 (0x0010 - 0x0000)
struct BP_FlameCheatManager_C_Cheat_Infinite_Bullets final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          New_Infinite_Bullets_State;                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FlameCheatManager_C_Cheat_Infinite_Bullets) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_Cheat_Infinite_Bullets");
static_assert(sizeof(BP_FlameCheatManager_C_Cheat_Infinite_Bullets) == 0x000010, "Wrong size on BP_FlameCheatManager_C_Cheat_Infinite_Bullets");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_Infinite_Bullets, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_Cheat_Infinite_Bullets::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_Infinite_Bullets, New_Infinite_Bullets_State) == 0x000008, "Member 'BP_FlameCheatManager_C_Cheat_Infinite_Bullets::New_Infinite_Bullets_State' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.Cheat 3D Debug Blocking Volume
// 0x0010 (0x0010 - 0x0000)
struct BP_FlameCheatManager_C_Cheat_3D_Debug_Blocking_Volume final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Threed_Debug_Blocking_Volume_State;                // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FlameCheatManager_C_Cheat_3D_Debug_Blocking_Volume) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_Cheat_3D_Debug_Blocking_Volume");
static_assert(sizeof(BP_FlameCheatManager_C_Cheat_3D_Debug_Blocking_Volume) == 0x000010, "Wrong size on BP_FlameCheatManager_C_Cheat_3D_Debug_Blocking_Volume");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_3D_Debug_Blocking_Volume, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_Cheat_3D_Debug_Blocking_Volume::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_3D_Debug_Blocking_Volume, Threed_Debug_Blocking_Volume_State) == 0x000008, "Member 'BP_FlameCheatManager_C_Cheat_3D_Debug_Blocking_Volume::Threed_Debug_Blocking_Volume_State' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.Cheat Victory Add Lootbox
// 0x0018 (0x0018 - 0x0000)
struct BP_FlameCheatManager_C_Cheat_Victory_Add_Lootbox final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Class_0;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InInt;                                             // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_Cheat_Victory_Add_Lootbox) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_Cheat_Victory_Add_Lootbox");
static_assert(sizeof(BP_FlameCheatManager_C_Cheat_Victory_Add_Lootbox) == 0x000018, "Wrong size on BP_FlameCheatManager_C_Cheat_Victory_Add_Lootbox");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_Victory_Add_Lootbox, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_Cheat_Victory_Add_Lootbox::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_Victory_Add_Lootbox, Class_0) == 0x000008, "Member 'BP_FlameCheatManager_C_Cheat_Victory_Add_Lootbox::Class_0' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_Victory_Add_Lootbox, InInt) == 0x000010, "Member 'BP_FlameCheatManager_C_Cheat_Victory_Add_Lootbox::InInt' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.Cheat Retreat Add Resources
// 0x0018 (0x0018 - 0x0000)
struct BP_FlameCheatManager_C_Cheat_Retreat_Add_Resources final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Resource;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_Cheat_Retreat_Add_Resources) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_Cheat_Retreat_Add_Resources");
static_assert(sizeof(BP_FlameCheatManager_C_Cheat_Retreat_Add_Resources) == 0x000018, "Wrong size on BP_FlameCheatManager_C_Cheat_Retreat_Add_Resources");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_Retreat_Add_Resources, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_Cheat_Retreat_Add_Resources::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_Retreat_Add_Resources, Resource) == 0x000008, "Member 'BP_FlameCheatManager_C_Cheat_Retreat_Add_Resources::Resource' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_Retreat_Add_Resources, Count) == 0x000010, "Member 'BP_FlameCheatManager_C_Cheat_Retreat_Add_Resources::Count' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.Cheat Trade In Resources
// 0x0008 (0x0008 - 0x0000)
struct BP_FlameCheatManager_C_Cheat_Trade_In_Resources final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_Cheat_Trade_In_Resources) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_Cheat_Trade_In_Resources");
static_assert(sizeof(BP_FlameCheatManager_C_Cheat_Trade_In_Resources) == 0x000008, "Wrong size on BP_FlameCheatManager_C_Cheat_Trade_In_Resources");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_Trade_In_Resources, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_Cheat_Trade_In_Resources::Controller' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.CheatToggleHitInfo
// 0x0018 (0x0018 - 0x0000)
struct BP_FlameCheatManager_C_CheatToggleHitInfo final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ToggleHitInfo_0;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BulletManager_C*                    BulletManager;                                     // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_CheatToggleHitInfo) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_CheatToggleHitInfo");
static_assert(sizeof(BP_FlameCheatManager_C_CheatToggleHitInfo) == 0x000018, "Wrong size on BP_FlameCheatManager_C_CheatToggleHitInfo");
static_assert(offsetof(BP_FlameCheatManager_C_CheatToggleHitInfo, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_CheatToggleHitInfo::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_CheatToggleHitInfo, ToggleHitInfo_0) == 0x000008, "Member 'BP_FlameCheatManager_C_CheatToggleHitInfo::ToggleHitInfo_0' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_CheatToggleHitInfo, BulletManager) == 0x000010, "Member 'BP_FlameCheatManager_C_CheatToggleHitInfo::BulletManager' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.Cheat 3D Debug Player
// 0x0010 (0x0010 - 0x0000)
struct BP_FlameCheatManager_C_Cheat_3D_Debug_Player final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ThreedDebugPlayerState;                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FlameCheatManager_C_Cheat_3D_Debug_Player) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_Cheat_3D_Debug_Player");
static_assert(sizeof(BP_FlameCheatManager_C_Cheat_3D_Debug_Player) == 0x000010, "Wrong size on BP_FlameCheatManager_C_Cheat_3D_Debug_Player");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_3D_Debug_Player, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_Cheat_3D_Debug_Player::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_3D_Debug_Player, ThreedDebugPlayerState) == 0x000008, "Member 'BP_FlameCheatManager_C_Cheat_3D_Debug_Player::ThreedDebugPlayerState' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.Cheat 3D Debug Player Starts
// 0x0010 (0x0010 - 0x0000)
struct BP_FlameCheatManager_C_Cheat_3D_Debug_Player_Starts final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ThreedDebugPlayerStartsState;                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FlameCheatManager_C_Cheat_3D_Debug_Player_Starts) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_Cheat_3D_Debug_Player_Starts");
static_assert(sizeof(BP_FlameCheatManager_C_Cheat_3D_Debug_Player_Starts) == 0x000010, "Wrong size on BP_FlameCheatManager_C_Cheat_3D_Debug_Player_Starts");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_3D_Debug_Player_Starts, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_Cheat_3D_Debug_Player_Starts::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_3D_Debug_Player_Starts, ThreedDebugPlayerStartsState) == 0x000008, "Member 'BP_FlameCheatManager_C_Cheat_3D_Debug_Player_Starts::ThreedDebugPlayerStartsState' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.Cheat 3D Debug Loot Spawns
// 0x0010 (0x0010 - 0x0000)
struct BP_FlameCheatManager_C_Cheat_3D_Debug_Loot_Spawns final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ThreedDebugSpawnedLootState;                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FlameCheatManager_C_Cheat_3D_Debug_Loot_Spawns) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_Cheat_3D_Debug_Loot_Spawns");
static_assert(sizeof(BP_FlameCheatManager_C_Cheat_3D_Debug_Loot_Spawns) == 0x000010, "Wrong size on BP_FlameCheatManager_C_Cheat_3D_Debug_Loot_Spawns");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_3D_Debug_Loot_Spawns, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_Cheat_3D_Debug_Loot_Spawns::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_3D_Debug_Loot_Spawns, ThreedDebugSpawnedLootState) == 0x000008, "Member 'BP_FlameCheatManager_C_Cheat_3D_Debug_Loot_Spawns::ThreedDebugSpawnedLootState' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.Cheat 3D Debug Spawned Loot
// 0x0010 (0x0010 - 0x0000)
struct BP_FlameCheatManager_C_Cheat_3D_Debug_Spawned_Loot final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ThreedDebugSpawnedLootState;                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FlameCheatManager_C_Cheat_3D_Debug_Spawned_Loot) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_Cheat_3D_Debug_Spawned_Loot");
static_assert(sizeof(BP_FlameCheatManager_C_Cheat_3D_Debug_Spawned_Loot) == 0x000010, "Wrong size on BP_FlameCheatManager_C_Cheat_3D_Debug_Spawned_Loot");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_3D_Debug_Spawned_Loot, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_Cheat_3D_Debug_Spawned_Loot::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_3D_Debug_Spawned_Loot, ThreedDebugSpawnedLootState) == 0x000008, "Member 'BP_FlameCheatManager_C_Cheat_3D_Debug_Spawned_Loot::ThreedDebugSpawnedLootState' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.Cheat 3D Debug Objective Spawns
// 0x0010 (0x0010 - 0x0000)
struct BP_FlameCheatManager_C_Cheat_3D_Debug_Objective_Spawns final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ThreedDebugObjectiveSpawnsState;                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FlameCheatManager_C_Cheat_3D_Debug_Objective_Spawns) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_Cheat_3D_Debug_Objective_Spawns");
static_assert(sizeof(BP_FlameCheatManager_C_Cheat_3D_Debug_Objective_Spawns) == 0x000010, "Wrong size on BP_FlameCheatManager_C_Cheat_3D_Debug_Objective_Spawns");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_3D_Debug_Objective_Spawns, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_Cheat_3D_Debug_Objective_Spawns::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_3D_Debug_Objective_Spawns, ThreedDebugObjectiveSpawnsState) == 0x000008, "Member 'BP_FlameCheatManager_C_Cheat_3D_Debug_Objective_Spawns::ThreedDebugObjectiveSpawnsState' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.Cheat 3D Debug Objective Items
// 0x0010 (0x0010 - 0x0000)
struct BP_FlameCheatManager_C_Cheat_3D_Debug_Objective_Items final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ThreedDebugObjectiveItemsState;                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FlameCheatManager_C_Cheat_3D_Debug_Objective_Items) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_Cheat_3D_Debug_Objective_Items");
static_assert(sizeof(BP_FlameCheatManager_C_Cheat_3D_Debug_Objective_Items) == 0x000010, "Wrong size on BP_FlameCheatManager_C_Cheat_3D_Debug_Objective_Items");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_3D_Debug_Objective_Items, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_Cheat_3D_Debug_Objective_Items::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_3D_Debug_Objective_Items, ThreedDebugObjectiveItemsState) == 0x000008, "Member 'BP_FlameCheatManager_C_Cheat_3D_Debug_Objective_Items::ThreedDebugObjectiveItemsState' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.Cheat 3D Debug Resource Items
// 0x0010 (0x0010 - 0x0000)
struct BP_FlameCheatManager_C_Cheat_3D_Debug_Resource_Items final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ThreedDebugResourceItemsState;                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FlameCheatManager_C_Cheat_3D_Debug_Resource_Items) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_Cheat_3D_Debug_Resource_Items");
static_assert(sizeof(BP_FlameCheatManager_C_Cheat_3D_Debug_Resource_Items) == 0x000010, "Wrong size on BP_FlameCheatManager_C_Cheat_3D_Debug_Resource_Items");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_3D_Debug_Resource_Items, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_Cheat_3D_Debug_Resource_Items::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_3D_Debug_Resource_Items, ThreedDebugResourceItemsState) == 0x000008, "Member 'BP_FlameCheatManager_C_Cheat_3D_Debug_Resource_Items::ThreedDebugResourceItemsState' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.Cheat Machine Hud
// 0x0010 (0x0010 - 0x0000)
struct BP_FlameCheatManager_C_Cheat_Machine_Hud final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MachineHudState;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FlameCheatManager_C_Cheat_Machine_Hud) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_Cheat_Machine_Hud");
static_assert(sizeof(BP_FlameCheatManager_C_Cheat_Machine_Hud) == 0x000010, "Wrong size on BP_FlameCheatManager_C_Cheat_Machine_Hud");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_Machine_Hud, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_Cheat_Machine_Hud::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_Machine_Hud, MachineHudState) == 0x000008, "Member 'BP_FlameCheatManager_C_Cheat_Machine_Hud::MachineHudState' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.Cheat Consumable Hud
// 0x0010 (0x0010 - 0x0000)
struct BP_FlameCheatManager_C_Cheat_Consumable_Hud final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Consumable_Hud_State;                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FlameCheatManager_C_Cheat_Consumable_Hud) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_Cheat_Consumable_Hud");
static_assert(sizeof(BP_FlameCheatManager_C_Cheat_Consumable_Hud) == 0x000010, "Wrong size on BP_FlameCheatManager_C_Cheat_Consumable_Hud");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_Consumable_Hud, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_Cheat_Consumable_Hud::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_Consumable_Hud, Consumable_Hud_State) == 0x000008, "Member 'BP_FlameCheatManager_C_Cheat_Consumable_Hud::Consumable_Hud_State' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.Cheat 3D Debug
// 0x0010 (0x0010 - 0x0000)
struct BP_FlameCheatManager_C_Cheat_3D_Debug final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ThreedDebugState;                                  // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FlameCheatManager_C_Cheat_3D_Debug) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_Cheat_3D_Debug");
static_assert(sizeof(BP_FlameCheatManager_C_Cheat_3D_Debug) == 0x000010, "Wrong size on BP_FlameCheatManager_C_Cheat_3D_Debug");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_3D_Debug, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_Cheat_3D_Debug::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_3D_Debug, ThreedDebugState) == 0x000008, "Member 'BP_FlameCheatManager_C_Cheat_3D_Debug::ThreedDebugState' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.Cheat Game Mode Debug
// 0x0010 (0x0010 - 0x0000)
struct BP_FlameCheatManager_C_Cheat_Game_Mode_Debug final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          GameMode;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_Cheat_Game_Mode_Debug) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_Cheat_Game_Mode_Debug");
static_assert(sizeof(BP_FlameCheatManager_C_Cheat_Game_Mode_Debug) == 0x000010, "Wrong size on BP_FlameCheatManager_C_Cheat_Game_Mode_Debug");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_Game_Mode_Debug, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_Cheat_Game_Mode_Debug::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_Game_Mode_Debug, GameMode) == 0x000008, "Member 'BP_FlameCheatManager_C_Cheat_Game_Mode_Debug::GameMode' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.Cheat Teleport Player To Start
// 0x0028 (0x0028 - 0x0000)
struct BP_FlameCheatManager_C_Cheat_Teleport_Player_To_Start final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class APlayerStartFlame*>              AllPlayerStarts_;                                  // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class ABP_PlayerController_C*>         AllControllers;                                    // 0x0018(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_FlameCheatManager_C_Cheat_Teleport_Player_To_Start) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_Cheat_Teleport_Player_To_Start");
static_assert(sizeof(BP_FlameCheatManager_C_Cheat_Teleport_Player_To_Start) == 0x000028, "Wrong size on BP_FlameCheatManager_C_Cheat_Teleport_Player_To_Start");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_Teleport_Player_To_Start, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_Cheat_Teleport_Player_To_Start::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_Teleport_Player_To_Start, AllPlayerStarts_) == 0x000008, "Member 'BP_FlameCheatManager_C_Cheat_Teleport_Player_To_Start::AllPlayerStarts_' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_Teleport_Player_To_Start, AllControllers) == 0x000018, "Member 'BP_FlameCheatManager_C_Cheat_Teleport_Player_To_Start::AllControllers' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.Cheat Show Players In Session
// 0x0010 (0x0010 - 0x0000)
struct BP_FlameCheatManager_C_Cheat_Show_Players_In_Session final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowPlayersInSessionState;                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FlameCheatManager_C_Cheat_Show_Players_In_Session) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_Cheat_Show_Players_In_Session");
static_assert(sizeof(BP_FlameCheatManager_C_Cheat_Show_Players_In_Session) == 0x000010, "Wrong size on BP_FlameCheatManager_C_Cheat_Show_Players_In_Session");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_Show_Players_In_Session, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_Cheat_Show_Players_In_Session::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_Show_Players_In_Session, ShowPlayersInSessionState) == 0x000008, "Member 'BP_FlameCheatManager_C_Cheat_Show_Players_In_Session::ShowPlayersInSessionState' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.Cheat Show Player Location
// 0x0010 (0x0010 - 0x0000)
struct BP_FlameCheatManager_C_Cheat_Show_Player_Location final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Show_Player_Location_State;                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FlameCheatManager_C_Cheat_Show_Player_Location) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_Cheat_Show_Player_Location");
static_assert(sizeof(BP_FlameCheatManager_C_Cheat_Show_Player_Location) == 0x000010, "Wrong size on BP_FlameCheatManager_C_Cheat_Show_Player_Location");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_Show_Player_Location, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_Cheat_Show_Player_Location::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_Show_Player_Location, Show_Player_Location_State) == 0x000008, "Member 'BP_FlameCheatManager_C_Cheat_Show_Player_Location::Show_Player_Location_State' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.Cheat Set Player Transform
// 0x0040 (0x0040 - 0x0000)
struct BP_FlameCheatManager_C_Cheat_Set_Player_Transform final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FlameCheatManager_C_Cheat_Set_Player_Transform) == 0x000010, "Wrong alignment on BP_FlameCheatManager_C_Cheat_Set_Player_Transform");
static_assert(sizeof(BP_FlameCheatManager_C_Cheat_Set_Player_Transform) == 0x000040, "Wrong size on BP_FlameCheatManager_C_Cheat_Set_Player_Transform");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_Set_Player_Transform, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_Cheat_Set_Player_Transform::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_Set_Player_Transform, Transform) == 0x000010, "Member 'BP_FlameCheatManager_C_Cheat_Set_Player_Transform::Transform' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.Cheat Set FOV
// 0x0008 (0x0008 - 0x0000)
struct BP_FlameCheatManager_C_Cheat_Set_FOV final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_Cheat_Set_FOV) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_Cheat_Set_FOV");
static_assert(sizeof(BP_FlameCheatManager_C_Cheat_Set_FOV) == 0x000008, "Wrong size on BP_FlameCheatManager_C_Cheat_Set_FOV");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_Set_FOV, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_Cheat_Set_FOV::Controller' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.Cheat Definable Damage
// 0x0008 (0x0008 - 0x0000)
struct BP_FlameCheatManager_C_Cheat_Definable_Damage final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_Cheat_Definable_Damage) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_Cheat_Definable_Damage");
static_assert(sizeof(BP_FlameCheatManager_C_Cheat_Definable_Damage) == 0x000008, "Wrong size on BP_FlameCheatManager_C_Cheat_Definable_Damage");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_Definable_Damage, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_Cheat_Definable_Damage::Controller' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.Cheat Health Debug
// 0x0010 (0x0010 - 0x0000)
struct BP_FlameCheatManager_C_Cheat_Health_Debug final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Health_Debug_State;                                // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FlameCheatManager_C_Cheat_Health_Debug) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_Cheat_Health_Debug");
static_assert(sizeof(BP_FlameCheatManager_C_Cheat_Health_Debug) == 0x000010, "Wrong size on BP_FlameCheatManager_C_Cheat_Health_Debug");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_Health_Debug, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_Cheat_Health_Debug::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_Health_Debug, Health_Debug_State) == 0x000008, "Member 'BP_FlameCheatManager_C_Cheat_Health_Debug::Health_Debug_State' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.Cheat Infinite Ammo
// 0x0010 (0x0010 - 0x0000)
struct BP_FlameCheatManager_C_Cheat_Infinite_Ammo final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          New_Infinite_Ammo_State;                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FlameCheatManager_C_Cheat_Infinite_Ammo) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_Cheat_Infinite_Ammo");
static_assert(sizeof(BP_FlameCheatManager_C_Cheat_Infinite_Ammo) == 0x000010, "Wrong size on BP_FlameCheatManager_C_Cheat_Infinite_Ammo");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_Infinite_Ammo, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_Cheat_Infinite_Ammo::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_Infinite_Ammo, New_Infinite_Ammo_State) == 0x000008, "Member 'BP_FlameCheatManager_C_Cheat_Infinite_Ammo::New_Infinite_Ammo_State' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.Cheat Damage Character
// 0x0010 (0x0010 - 0x0000)
struct BP_FlameCheatManager_C_Cheat_Damage_Character final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage_Amount;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_Cheat_Damage_Character) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_Cheat_Damage_Character");
static_assert(sizeof(BP_FlameCheatManager_C_Cheat_Damage_Character) == 0x000010, "Wrong size on BP_FlameCheatManager_C_Cheat_Damage_Character");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_Damage_Character, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_Cheat_Damage_Character::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_Damage_Character, Damage_Amount) == 0x000008, "Member 'BP_FlameCheatManager_C_Cheat_Damage_Character::Damage_Amount' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.Cheat Heal Character
// 0x0010 (0x0010 - 0x0000)
struct BP_FlameCheatManager_C_Cheat_Heal_Character final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Heal_Amount;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_Cheat_Heal_Character) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_Cheat_Heal_Character");
static_assert(sizeof(BP_FlameCheatManager_C_Cheat_Heal_Character) == 0x000010, "Wrong size on BP_FlameCheatManager_C_Cheat_Heal_Character");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_Heal_Character, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_Cheat_Heal_Character::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_Heal_Character, Heal_Amount) == 0x000008, "Member 'BP_FlameCheatManager_C_Cheat_Heal_Character::Heal_Amount' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.Cheat Set Invincibility
// 0x0010 (0x0010 - 0x0000)
struct BP_FlameCheatManager_C_Cheat_Set_Invincibility final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          New_Invincibility_State;                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FlameCheatManager_C_Cheat_Set_Invincibility) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_Cheat_Set_Invincibility");
static_assert(sizeof(BP_FlameCheatManager_C_Cheat_Set_Invincibility) == 0x000010, "Wrong size on BP_FlameCheatManager_C_Cheat_Set_Invincibility");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_Set_Invincibility, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_Cheat_Set_Invincibility::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_Set_Invincibility, New_Invincibility_State) == 0x000008, "Member 'BP_FlameCheatManager_C_Cheat_Set_Invincibility::New_Invincibility_State' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.Cheat Set Max Health
// 0x0010 (0x0010 - 0x0000)
struct BP_FlameCheatManager_C_Cheat_Set_Max_Health final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         New_Max_Health;                                    // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_Cheat_Set_Max_Health) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_Cheat_Set_Max_Health");
static_assert(sizeof(BP_FlameCheatManager_C_Cheat_Set_Max_Health) == 0x000010, "Wrong size on BP_FlameCheatManager_C_Cheat_Set_Max_Health");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_Set_Max_Health, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_Cheat_Set_Max_Health::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_Set_Max_Health, New_Max_Health) == 0x000008, "Member 'BP_FlameCheatManager_C_Cheat_Set_Max_Health::New_Max_Health' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.Cheat Set Health
// 0x0010 (0x0010 - 0x0000)
struct BP_FlameCheatManager_C_Cheat_Set_Health final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         New_Health;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_Cheat_Set_Health) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_Cheat_Set_Health");
static_assert(sizeof(BP_FlameCheatManager_C_Cheat_Set_Health) == 0x000010, "Wrong size on BP_FlameCheatManager_C_Cheat_Set_Health");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_Set_Health, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_Cheat_Set_Health::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_Set_Health, New_Health) == 0x000008, "Member 'BP_FlameCheatManager_C_Cheat_Set_Health::New_Health' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.Cheat Kill Character
// 0x0008 (0x0008 - 0x0000)
struct BP_FlameCheatManager_C_Cheat_Kill_Character final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_Cheat_Kill_Character) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_Cheat_Kill_Character");
static_assert(sizeof(BP_FlameCheatManager_C_Cheat_Kill_Character) == 0x000008, "Wrong size on BP_FlameCheatManager_C_Cheat_Kill_Character");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_Kill_Character, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_Cheat_Kill_Character::Controller' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.Cheat Clear Objective Items From Backpack
// 0x0008 (0x0008 - 0x0000)
struct BP_FlameCheatManager_C_Cheat_Clear_Objective_Items_From_Backpack final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_Cheat_Clear_Objective_Items_From_Backpack) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_Cheat_Clear_Objective_Items_From_Backpack");
static_assert(sizeof(BP_FlameCheatManager_C_Cheat_Clear_Objective_Items_From_Backpack) == 0x000008, "Wrong size on BP_FlameCheatManager_C_Cheat_Clear_Objective_Items_From_Backpack");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_Clear_Objective_Items_From_Backpack, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_Cheat_Clear_Objective_Items_From_Backpack::Controller' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.Cheat Clear Backpack
// 0x0008 (0x0008 - 0x0000)
struct BP_FlameCheatManager_C_Cheat_Clear_Backpack final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_Cheat_Clear_Backpack) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_Cheat_Clear_Backpack");
static_assert(sizeof(BP_FlameCheatManager_C_Cheat_Clear_Backpack) == 0x000008, "Wrong size on BP_FlameCheatManager_C_Cheat_Clear_Backpack");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_Clear_Backpack, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_Cheat_Clear_Backpack::Controller' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.Cheat Add Item For Backpack
// 0x0018 (0x0018 - 0x0000)
struct BP_FlameCheatManager_C_Cheat_Add_Item_For_Backpack final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Item_Type;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Item_Amount;                                       // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_Cheat_Add_Item_For_Backpack) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_Cheat_Add_Item_For_Backpack");
static_assert(sizeof(BP_FlameCheatManager_C_Cheat_Add_Item_For_Backpack) == 0x000018, "Wrong size on BP_FlameCheatManager_C_Cheat_Add_Item_For_Backpack");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_Add_Item_For_Backpack, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_Cheat_Add_Item_For_Backpack::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_Add_Item_For_Backpack, Item_Type) == 0x000008, "Member 'BP_FlameCheatManager_C_Cheat_Add_Item_For_Backpack::Item_Type' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_Add_Item_For_Backpack, Item_Amount) == 0x000010, "Member 'BP_FlameCheatManager_C_Cheat_Add_Item_For_Backpack::Item_Amount' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.Cheat Add Weapon
// 0x0010 (0x0010 - 0x0000)
struct BP_FlameCheatManager_C_Cheat_Add_Weapon final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Weapon_Type;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_Cheat_Add_Weapon) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_Cheat_Add_Weapon");
static_assert(sizeof(BP_FlameCheatManager_C_Cheat_Add_Weapon) == 0x000010, "Wrong size on BP_FlameCheatManager_C_Cheat_Add_Weapon");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_Add_Weapon, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_Cheat_Add_Weapon::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Cheat_Add_Weapon, Weapon_Type) == 0x000008, "Member 'BP_FlameCheatManager_C_Cheat_Add_Weapon::Weapon_Type' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.Add Weapon
// 0x0070 (0x0070 - 0x0000)
struct BP_FlameCheatManager_C_Add_Weapon final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Weapon_Type;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetClassDisplayName_ReturnValue;          // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AHumanPlayerState*                      K2Node_DynamicCast_AsHuman_Player_State;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_Add_Weapon) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_Add_Weapon");
static_assert(sizeof(BP_FlameCheatManager_C_Add_Weapon) == 0x000070, "Wrong size on BP_FlameCheatManager_C_Add_Weapon");
static_assert(offsetof(BP_FlameCheatManager_C_Add_Weapon, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_Add_Weapon::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Add_Weapon, Weapon_Type) == 0x000008, "Member 'BP_FlameCheatManager_C_Add_Weapon::Weapon_Type' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Add_Weapon, CallFunc_GetClassDisplayName_ReturnValue) == 0x000010, "Member 'BP_FlameCheatManager_C_Add_Weapon::CallFunc_GetClassDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Add_Weapon, K2Node_DynamicCast_AsHuman_Player_State) == 0x000020, "Member 'BP_FlameCheatManager_C_Add_Weapon::K2Node_DynamicCast_AsHuman_Player_State' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Add_Weapon, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_FlameCheatManager_C_Add_Weapon::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Add_Weapon, CallFunc_GetPlayerName_ReturnValue) == 0x000030, "Member 'BP_FlameCheatManager_C_Add_Weapon::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Add_Weapon, CallFunc_Concat_StrStr_ReturnValue) == 0x000040, "Member 'BP_FlameCheatManager_C_Add_Weapon::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Add_Weapon, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000050, "Member 'BP_FlameCheatManager_C_Add_Weapon::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Add_Weapon, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000060, "Member 'BP_FlameCheatManager_C_Add_Weapon::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.Add Item For Backpack
// 0x00D0 (0x00D0 - 0x0000)
struct BP_FlameCheatManager_C_Add_Item_For_Backpack final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Item_Type;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Item_Amount;                                       // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetClassDisplayName_ReturnValue;          // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanCharacter*                        K2Node_DynamicCast_AsHuman_Character;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerState*                      K2Node_DynamicCast_AsHuman_Player_State;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UItemsGrid*                             CallFunc_GetBackpack_ReturnValue;                  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_StoreResource_ReturnValue;                // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_Add_Item_For_Backpack) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_Add_Item_For_Backpack");
static_assert(sizeof(BP_FlameCheatManager_C_Add_Item_For_Backpack) == 0x0000D0, "Wrong size on BP_FlameCheatManager_C_Add_Item_For_Backpack");
static_assert(offsetof(BP_FlameCheatManager_C_Add_Item_For_Backpack, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_Add_Item_For_Backpack::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Add_Item_For_Backpack, Item_Type) == 0x000008, "Member 'BP_FlameCheatManager_C_Add_Item_For_Backpack::Item_Type' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Add_Item_For_Backpack, Item_Amount) == 0x000010, "Member 'BP_FlameCheatManager_C_Add_Item_For_Backpack::Item_Amount' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Add_Item_For_Backpack, CallFunc_Conv_IntToString_ReturnValue) == 0x000018, "Member 'BP_FlameCheatManager_C_Add_Item_For_Backpack::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Add_Item_For_Backpack, CallFunc_GetClassDisplayName_ReturnValue) == 0x000028, "Member 'BP_FlameCheatManager_C_Add_Item_For_Backpack::CallFunc_GetClassDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Add_Item_For_Backpack, CallFunc_K2_GetPawn_ReturnValue) == 0x000038, "Member 'BP_FlameCheatManager_C_Add_Item_For_Backpack::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Add_Item_For_Backpack, K2Node_DynamicCast_AsHuman_Character) == 0x000040, "Member 'BP_FlameCheatManager_C_Add_Item_For_Backpack::K2Node_DynamicCast_AsHuman_Character' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Add_Item_For_Backpack, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_FlameCheatManager_C_Add_Item_For_Backpack::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Add_Item_For_Backpack, K2Node_DynamicCast_AsHuman_Player_State) == 0x000050, "Member 'BP_FlameCheatManager_C_Add_Item_For_Backpack::K2Node_DynamicCast_AsHuman_Player_State' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Add_Item_For_Backpack, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'BP_FlameCheatManager_C_Add_Item_For_Backpack::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Add_Item_For_Backpack, CallFunc_GetPlayerName_ReturnValue) == 0x000060, "Member 'BP_FlameCheatManager_C_Add_Item_For_Backpack::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Add_Item_For_Backpack, CallFunc_GetBackpack_ReturnValue) == 0x000070, "Member 'BP_FlameCheatManager_C_Add_Item_For_Backpack::CallFunc_GetBackpack_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Add_Item_For_Backpack, CallFunc_Concat_StrStr_ReturnValue) == 0x000078, "Member 'BP_FlameCheatManager_C_Add_Item_For_Backpack::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Add_Item_For_Backpack, CallFunc_StoreResource_ReturnValue) == 0x000088, "Member 'BP_FlameCheatManager_C_Add_Item_For_Backpack::CallFunc_StoreResource_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Add_Item_For_Backpack, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000090, "Member 'BP_FlameCheatManager_C_Add_Item_For_Backpack::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Add_Item_For_Backpack, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000A0, "Member 'BP_FlameCheatManager_C_Add_Item_For_Backpack::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Add_Item_For_Backpack, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000B0, "Member 'BP_FlameCheatManager_C_Add_Item_For_Backpack::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Add_Item_For_Backpack, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0000C0, "Member 'BP_FlameCheatManager_C_Add_Item_For_Backpack::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.Clear Backpack
// 0x0058 (0x0058 - 0x0000)
struct BP_FlameCheatManager_C_Clear_Backpack final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanCharacter*                        K2Node_DynamicCast_AsHuman_Character;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerState*                      K2Node_DynamicCast_AsHuman_Player_State;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UItemsGrid*                             CallFunc_GetBackpack_ReturnValue;                  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_Clear_Backpack) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_Clear_Backpack");
static_assert(sizeof(BP_FlameCheatManager_C_Clear_Backpack) == 0x000058, "Wrong size on BP_FlameCheatManager_C_Clear_Backpack");
static_assert(offsetof(BP_FlameCheatManager_C_Clear_Backpack, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_Clear_Backpack::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Clear_Backpack, CallFunc_K2_GetPawn_ReturnValue) == 0x000008, "Member 'BP_FlameCheatManager_C_Clear_Backpack::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Clear_Backpack, K2Node_DynamicCast_AsHuman_Character) == 0x000010, "Member 'BP_FlameCheatManager_C_Clear_Backpack::K2Node_DynamicCast_AsHuman_Character' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Clear_Backpack, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_FlameCheatManager_C_Clear_Backpack::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Clear_Backpack, K2Node_DynamicCast_AsHuman_Player_State) == 0x000020, "Member 'BP_FlameCheatManager_C_Clear_Backpack::K2Node_DynamicCast_AsHuman_Player_State' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Clear_Backpack, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'BP_FlameCheatManager_C_Clear_Backpack::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Clear_Backpack, CallFunc_GetPlayerName_ReturnValue) == 0x000030, "Member 'BP_FlameCheatManager_C_Clear_Backpack::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Clear_Backpack, CallFunc_GetBackpack_ReturnValue) == 0x000040, "Member 'BP_FlameCheatManager_C_Clear_Backpack::CallFunc_GetBackpack_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Clear_Backpack, CallFunc_Concat_StrStr_ReturnValue) == 0x000048, "Member 'BP_FlameCheatManager_C_Clear_Backpack::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.Clear Objective Items From Backpack
// 0x0038 (0x0038 - 0x0000)
struct BP_FlameCheatManager_C_Clear_Objective_Items_From_Backpack final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerState*                      K2Node_DynamicCast_AsHuman_Player_State;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_Clear_Objective_Items_From_Backpack) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_Clear_Objective_Items_From_Backpack");
static_assert(sizeof(BP_FlameCheatManager_C_Clear_Objective_Items_From_Backpack) == 0x000038, "Wrong size on BP_FlameCheatManager_C_Clear_Objective_Items_From_Backpack");
static_assert(offsetof(BP_FlameCheatManager_C_Clear_Objective_Items_From_Backpack, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_Clear_Objective_Items_From_Backpack::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Clear_Objective_Items_From_Backpack, K2Node_DynamicCast_AsHuman_Player_State) == 0x000008, "Member 'BP_FlameCheatManager_C_Clear_Objective_Items_From_Backpack::K2Node_DynamicCast_AsHuman_Player_State' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Clear_Objective_Items_From_Backpack, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_FlameCheatManager_C_Clear_Objective_Items_From_Backpack::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Clear_Objective_Items_From_Backpack, CallFunc_GetPlayerName_ReturnValue) == 0x000018, "Member 'BP_FlameCheatManager_C_Clear_Objective_Items_From_Backpack::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Clear_Objective_Items_From_Backpack, CallFunc_Concat_StrStr_ReturnValue) == 0x000028, "Member 'BP_FlameCheatManager_C_Clear_Objective_Items_From_Backpack::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.Kill Character
// 0x0050 (0x0050 - 0x0000)
struct BP_FlameCheatManager_C_Kill_Character final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanCharacter*                        K2Node_DynamicCast_AsHuman_Character;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerState*                      K2Node_DynamicCast_AsHuman_Player_State;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_Kill_Character) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_Kill_Character");
static_assert(sizeof(BP_FlameCheatManager_C_Kill_Character) == 0x000050, "Wrong size on BP_FlameCheatManager_C_Kill_Character");
static_assert(offsetof(BP_FlameCheatManager_C_Kill_Character, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_Kill_Character::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Kill_Character, CallFunc_K2_GetPawn_ReturnValue) == 0x000008, "Member 'BP_FlameCheatManager_C_Kill_Character::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Kill_Character, K2Node_DynamicCast_AsHuman_Character) == 0x000010, "Member 'BP_FlameCheatManager_C_Kill_Character::K2Node_DynamicCast_AsHuman_Character' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Kill_Character, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_FlameCheatManager_C_Kill_Character::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Kill_Character, K2Node_DynamicCast_AsHuman_Player_State) == 0x000020, "Member 'BP_FlameCheatManager_C_Kill_Character::K2Node_DynamicCast_AsHuman_Player_State' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Kill_Character, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'BP_FlameCheatManager_C_Kill_Character::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Kill_Character, CallFunc_GetPlayerName_ReturnValue) == 0x000030, "Member 'BP_FlameCheatManager_C_Kill_Character::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Kill_Character, CallFunc_Concat_StrStr_ReturnValue) == 0x000040, "Member 'BP_FlameCheatManager_C_Kill_Character::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.Set Health
// 0x0090 (0x0090 - 0x0000)
struct BP_FlameCheatManager_C_Set_Health final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         New_Health;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanCharacter*                        K2Node_DynamicCast_AsHuman_Character;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerState*                      K2Node_DynamicCast_AsHuman_Player_State;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTempHealth_ReturnValue;                // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_Set_Health) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_Set_Health");
static_assert(sizeof(BP_FlameCheatManager_C_Set_Health) == 0x000090, "Wrong size on BP_FlameCheatManager_C_Set_Health");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Health, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_Set_Health::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Health, New_Health) == 0x000008, "Member 'BP_FlameCheatManager_C_Set_Health::New_Health' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Health, CallFunc_Conv_FloatToString_ReturnValue) == 0x000010, "Member 'BP_FlameCheatManager_C_Set_Health::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Health, CallFunc_K2_GetPawn_ReturnValue) == 0x000020, "Member 'BP_FlameCheatManager_C_Set_Health::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Health, K2Node_DynamicCast_AsHuman_Character) == 0x000028, "Member 'BP_FlameCheatManager_C_Set_Health::K2Node_DynamicCast_AsHuman_Character' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Health, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_FlameCheatManager_C_Set_Health::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Health, K2Node_DynamicCast_AsHuman_Player_State) == 0x000038, "Member 'BP_FlameCheatManager_C_Set_Health::K2Node_DynamicCast_AsHuman_Player_State' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Health, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BP_FlameCheatManager_C_Set_Health::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Health, CallFunc_GetPlayerName_ReturnValue) == 0x000048, "Member 'BP_FlameCheatManager_C_Set_Health::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Health, CallFunc_Concat_StrStr_ReturnValue) == 0x000058, "Member 'BP_FlameCheatManager_C_Set_Health::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Health, CallFunc_GetTempHealth_ReturnValue) == 0x000068, "Member 'BP_FlameCheatManager_C_Set_Health::CallFunc_GetTempHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Health, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000070, "Member 'BP_FlameCheatManager_C_Set_Health::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Health, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000080, "Member 'BP_FlameCheatManager_C_Set_Health::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.Set Max Health
// 0x0088 (0x0088 - 0x0000)
struct BP_FlameCheatManager_C_Set_Max_Health final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         New_Max_Health;                                    // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AHumanCharacter*                        K2Node_DynamicCast_AsHuman_Character;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerState*                      K2Node_DynamicCast_AsHuman_Player_State;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_Set_Max_Health) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_Set_Max_Health");
static_assert(sizeof(BP_FlameCheatManager_C_Set_Max_Health) == 0x000088, "Wrong size on BP_FlameCheatManager_C_Set_Max_Health");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Max_Health, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_Set_Max_Health::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Max_Health, New_Max_Health) == 0x000008, "Member 'BP_FlameCheatManager_C_Set_Max_Health::New_Max_Health' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Max_Health, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'BP_FlameCheatManager_C_Set_Max_Health::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Max_Health, CallFunc_Conv_FloatToString_ReturnValue) == 0x000018, "Member 'BP_FlameCheatManager_C_Set_Max_Health::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Max_Health, K2Node_DynamicCast_AsHuman_Character) == 0x000028, "Member 'BP_FlameCheatManager_C_Set_Max_Health::K2Node_DynamicCast_AsHuman_Character' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Max_Health, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_FlameCheatManager_C_Set_Max_Health::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Max_Health, K2Node_DynamicCast_AsHuman_Player_State) == 0x000038, "Member 'BP_FlameCheatManager_C_Set_Max_Health::K2Node_DynamicCast_AsHuman_Player_State' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Max_Health, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BP_FlameCheatManager_C_Set_Max_Health::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Max_Health, CallFunc_GetPlayerName_ReturnValue) == 0x000048, "Member 'BP_FlameCheatManager_C_Set_Max_Health::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Max_Health, CallFunc_Concat_StrStr_ReturnValue) == 0x000058, "Member 'BP_FlameCheatManager_C_Set_Max_Health::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Max_Health, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000068, "Member 'BP_FlameCheatManager_C_Set_Max_Health::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Max_Health, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000078, "Member 'BP_FlameCheatManager_C_Set_Max_Health::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.Set Invincibility
// 0x00B0 (0x00B0 - 0x0000)
struct BP_FlameCheatManager_C_Set_Invincibility final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          New_Invincibility_State;                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanCharacter*                        K2Node_DynamicCast_AsHuman_Character;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerState*                      K2Node_DynamicCast_AsHuman_Player_State;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetInvincibility_ReturnValue;             // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_Set_Invincibility) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_Set_Invincibility");
static_assert(sizeof(BP_FlameCheatManager_C_Set_Invincibility) == 0x0000B0, "Wrong size on BP_FlameCheatManager_C_Set_Invincibility");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Invincibility, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_Set_Invincibility::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Invincibility, New_Invincibility_State) == 0x000008, "Member 'BP_FlameCheatManager_C_Set_Invincibility::New_Invincibility_State' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Invincibility, Temp_string_Variable) == 0x000010, "Member 'BP_FlameCheatManager_C_Set_Invincibility::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Invincibility, CallFunc_K2_GetPawn_ReturnValue) == 0x000020, "Member 'BP_FlameCheatManager_C_Set_Invincibility::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Invincibility, K2Node_DynamicCast_AsHuman_Character) == 0x000028, "Member 'BP_FlameCheatManager_C_Set_Invincibility::K2Node_DynamicCast_AsHuman_Character' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Invincibility, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_FlameCheatManager_C_Set_Invincibility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Invincibility, K2Node_DynamicCast_AsHuman_Player_State) == 0x000038, "Member 'BP_FlameCheatManager_C_Set_Invincibility::K2Node_DynamicCast_AsHuman_Player_State' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Invincibility, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BP_FlameCheatManager_C_Set_Invincibility::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Invincibility, CallFunc_SetInvincibility_ReturnValue) == 0x000041, "Member 'BP_FlameCheatManager_C_Set_Invincibility::CallFunc_SetInvincibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Invincibility, CallFunc_GetPlayerName_ReturnValue) == 0x000048, "Member 'BP_FlameCheatManager_C_Set_Invincibility::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Invincibility, Temp_bool_Variable) == 0x000058, "Member 'BP_FlameCheatManager_C_Set_Invincibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Invincibility, CallFunc_Concat_StrStr_ReturnValue) == 0x000060, "Member 'BP_FlameCheatManager_C_Set_Invincibility::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Invincibility, Temp_string_Variable_1) == 0x000070, "Member 'BP_FlameCheatManager_C_Set_Invincibility::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Invincibility, K2Node_Select_Default) == 0x000080, "Member 'BP_FlameCheatManager_C_Set_Invincibility::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Invincibility, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000090, "Member 'BP_FlameCheatManager_C_Set_Invincibility::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Invincibility, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000A0, "Member 'BP_FlameCheatManager_C_Set_Invincibility::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.Heal Character
// 0x0090 (0x0090 - 0x0000)
struct BP_FlameCheatManager_C_Heal_Character final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Heal_Amount;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanCharacter*                        K2Node_DynamicCast_AsHuman_Character;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerState*                      K2Node_DynamicCast_AsHuman_Player_State;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_ApplyHeal_ReturnValue;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_Heal_Character) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_Heal_Character");
static_assert(sizeof(BP_FlameCheatManager_C_Heal_Character) == 0x000090, "Wrong size on BP_FlameCheatManager_C_Heal_Character");
static_assert(offsetof(BP_FlameCheatManager_C_Heal_Character, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_Heal_Character::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Heal_Character, Heal_Amount) == 0x000008, "Member 'BP_FlameCheatManager_C_Heal_Character::Heal_Amount' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Heal_Character, CallFunc_Conv_FloatToString_ReturnValue) == 0x000010, "Member 'BP_FlameCheatManager_C_Heal_Character::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Heal_Character, CallFunc_K2_GetPawn_ReturnValue) == 0x000020, "Member 'BP_FlameCheatManager_C_Heal_Character::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Heal_Character, K2Node_DynamicCast_AsHuman_Character) == 0x000028, "Member 'BP_FlameCheatManager_C_Heal_Character::K2Node_DynamicCast_AsHuman_Character' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Heal_Character, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_FlameCheatManager_C_Heal_Character::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Heal_Character, K2Node_DynamicCast_AsHuman_Player_State) == 0x000038, "Member 'BP_FlameCheatManager_C_Heal_Character::K2Node_DynamicCast_AsHuman_Player_State' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Heal_Character, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BP_FlameCheatManager_C_Heal_Character::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Heal_Character, CallFunc_GetPlayerName_ReturnValue) == 0x000048, "Member 'BP_FlameCheatManager_C_Heal_Character::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Heal_Character, CallFunc_ApplyHeal_ReturnValue) == 0x000058, "Member 'BP_FlameCheatManager_C_Heal_Character::CallFunc_ApplyHeal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Heal_Character, CallFunc_Concat_StrStr_ReturnValue) == 0x000060, "Member 'BP_FlameCheatManager_C_Heal_Character::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Heal_Character, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000070, "Member 'BP_FlameCheatManager_C_Heal_Character::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Heal_Character, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000080, "Member 'BP_FlameCheatManager_C_Heal_Character::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.Damage Character
// 0x00A0 (0x00A0 - 0x0000)
struct BP_FlameCheatManager_C_Damage_Character final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage_Amount;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanCharacter*                        K2Node_DynamicCast_AsHuman_Character;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerState*                      K2Node_DynamicCast_AsHuman_Player_State;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FDamageEvent                           K2Node_MakeStruct_DamageEvent;                     // 0x0058(0x0010)()
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_ApplyDamage_ReturnValue;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_Damage_Character) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_Damage_Character");
static_assert(sizeof(BP_FlameCheatManager_C_Damage_Character) == 0x0000A0, "Wrong size on BP_FlameCheatManager_C_Damage_Character");
static_assert(offsetof(BP_FlameCheatManager_C_Damage_Character, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_Damage_Character::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Damage_Character, Damage_Amount) == 0x000008, "Member 'BP_FlameCheatManager_C_Damage_Character::Damage_Amount' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Damage_Character, CallFunc_Conv_FloatToString_ReturnValue) == 0x000010, "Member 'BP_FlameCheatManager_C_Damage_Character::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Damage_Character, CallFunc_K2_GetPawn_ReturnValue) == 0x000020, "Member 'BP_FlameCheatManager_C_Damage_Character::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Damage_Character, K2Node_DynamicCast_AsHuman_Character) == 0x000028, "Member 'BP_FlameCheatManager_C_Damage_Character::K2Node_DynamicCast_AsHuman_Character' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Damage_Character, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_FlameCheatManager_C_Damage_Character::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Damage_Character, K2Node_DynamicCast_AsHuman_Player_State) == 0x000038, "Member 'BP_FlameCheatManager_C_Damage_Character::K2Node_DynamicCast_AsHuman_Player_State' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Damage_Character, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BP_FlameCheatManager_C_Damage_Character::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Damage_Character, CallFunc_GetPlayerName_ReturnValue) == 0x000048, "Member 'BP_FlameCheatManager_C_Damage_Character::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Damage_Character, K2Node_MakeStruct_DamageEvent) == 0x000058, "Member 'BP_FlameCheatManager_C_Damage_Character::K2Node_MakeStruct_DamageEvent' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Damage_Character, CallFunc_Concat_StrStr_ReturnValue) == 0x000068, "Member 'BP_FlameCheatManager_C_Damage_Character::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Damage_Character, CallFunc_ApplyDamage_ReturnValue) == 0x000078, "Member 'BP_FlameCheatManager_C_Damage_Character::CallFunc_ApplyDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Damage_Character, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000080, "Member 'BP_FlameCheatManager_C_Damage_Character::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Damage_Character, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000090, "Member 'BP_FlameCheatManager_C_Damage_Character::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.Set Infinite Ammo
// 0x00B0 (0x00B0 - 0x0000)
struct BP_FlameCheatManager_C_Set_Infinite_Ammo final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Infinite_Ammo;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanCharacter*                        K2Node_DynamicCast_AsHuman_Character;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerState*                      K2Node_DynamicCast_AsHuman_Player_State;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_Set_Infinite_Ammo) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_Set_Infinite_Ammo");
static_assert(sizeof(BP_FlameCheatManager_C_Set_Infinite_Ammo) == 0x0000B0, "Wrong size on BP_FlameCheatManager_C_Set_Infinite_Ammo");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Infinite_Ammo, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_Set_Infinite_Ammo::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Infinite_Ammo, Infinite_Ammo) == 0x000008, "Member 'BP_FlameCheatManager_C_Set_Infinite_Ammo::Infinite_Ammo' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Infinite_Ammo, Temp_string_Variable) == 0x000010, "Member 'BP_FlameCheatManager_C_Set_Infinite_Ammo::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Infinite_Ammo, CallFunc_K2_GetPawn_ReturnValue) == 0x000020, "Member 'BP_FlameCheatManager_C_Set_Infinite_Ammo::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Infinite_Ammo, K2Node_DynamicCast_AsHuman_Character) == 0x000028, "Member 'BP_FlameCheatManager_C_Set_Infinite_Ammo::K2Node_DynamicCast_AsHuman_Character' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Infinite_Ammo, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_FlameCheatManager_C_Set_Infinite_Ammo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Infinite_Ammo, K2Node_DynamicCast_AsHuman_Player_State) == 0x000038, "Member 'BP_FlameCheatManager_C_Set_Infinite_Ammo::K2Node_DynamicCast_AsHuman_Player_State' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Infinite_Ammo, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BP_FlameCheatManager_C_Set_Infinite_Ammo::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Infinite_Ammo, CallFunc_GetPlayerName_ReturnValue) == 0x000048, "Member 'BP_FlameCheatManager_C_Set_Infinite_Ammo::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Infinite_Ammo, CallFunc_Concat_StrStr_ReturnValue) == 0x000058, "Member 'BP_FlameCheatManager_C_Set_Infinite_Ammo::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Infinite_Ammo, Temp_string_Variable_1) == 0x000068, "Member 'BP_FlameCheatManager_C_Set_Infinite_Ammo::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Infinite_Ammo, Temp_bool_Variable) == 0x000078, "Member 'BP_FlameCheatManager_C_Set_Infinite_Ammo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Infinite_Ammo, K2Node_Select_Default) == 0x000080, "Member 'BP_FlameCheatManager_C_Set_Infinite_Ammo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Infinite_Ammo, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000090, "Member 'BP_FlameCheatManager_C_Set_Infinite_Ammo::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Infinite_Ammo, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000A0, "Member 'BP_FlameCheatManager_C_Set_Infinite_Ammo::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.Health Debug
// 0x00A8 (0x00A8 - 0x0000)
struct BP_FlameCheatManager_C_Health_Debug final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Health_Debug_0;                                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AHumanPlayerState*                      K2Node_DynamicCast_AsHuman_Player_State;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABP_Character_Script_C*                 K2Node_DynamicCast_AsBP_Character_Script;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_Health_Debug) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_Health_Debug");
static_assert(sizeof(BP_FlameCheatManager_C_Health_Debug) == 0x0000A8, "Wrong size on BP_FlameCheatManager_C_Health_Debug");
static_assert(offsetof(BP_FlameCheatManager_C_Health_Debug, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_Health_Debug::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Health_Debug, Health_Debug_0) == 0x000008, "Member 'BP_FlameCheatManager_C_Health_Debug::Health_Debug_0' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Health_Debug, Temp_bool_Variable) == 0x000009, "Member 'BP_FlameCheatManager_C_Health_Debug::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Health_Debug, Temp_string_Variable) == 0x000010, "Member 'BP_FlameCheatManager_C_Health_Debug::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Health_Debug, Temp_string_Variable_1) == 0x000020, "Member 'BP_FlameCheatManager_C_Health_Debug::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Health_Debug, K2Node_DynamicCast_AsHuman_Player_State) == 0x000030, "Member 'BP_FlameCheatManager_C_Health_Debug::K2Node_DynamicCast_AsHuman_Player_State' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Health_Debug, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_FlameCheatManager_C_Health_Debug::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Health_Debug, CallFunc_GetPlayerName_ReturnValue) == 0x000040, "Member 'BP_FlameCheatManager_C_Health_Debug::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Health_Debug, CallFunc_K2_GetPawn_ReturnValue) == 0x000050, "Member 'BP_FlameCheatManager_C_Health_Debug::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Health_Debug, CallFunc_Concat_StrStr_ReturnValue) == 0x000058, "Member 'BP_FlameCheatManager_C_Health_Debug::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Health_Debug, K2Node_DynamicCast_AsBP_Character_Script) == 0x000068, "Member 'BP_FlameCheatManager_C_Health_Debug::K2Node_DynamicCast_AsBP_Character_Script' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Health_Debug, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'BP_FlameCheatManager_C_Health_Debug::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Health_Debug, K2Node_Select_Default) == 0x000078, "Member 'BP_FlameCheatManager_C_Health_Debug::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Health_Debug, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000088, "Member 'BP_FlameCheatManager_C_Health_Debug::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Health_Debug, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000098, "Member 'BP_FlameCheatManager_C_Health_Debug::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.DefinableDamage
// 0x0060 (0x0060 - 0x0000)
struct BP_FlameCheatManager_C_DefinableDamage final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Character_Script_C*                 K2Node_DynamicCast_AsBP_Character_Script;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerState*                      K2Node_DynamicCast_AsHuman_Player_State;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_DefinableDamage) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_DefinableDamage");
static_assert(sizeof(BP_FlameCheatManager_C_DefinableDamage) == 0x000060, "Wrong size on BP_FlameCheatManager_C_DefinableDamage");
static_assert(offsetof(BP_FlameCheatManager_C_DefinableDamage, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_DefinableDamage::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_DefinableDamage, CallFunc_K2_GetPawn_ReturnValue) == 0x000008, "Member 'BP_FlameCheatManager_C_DefinableDamage::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_DefinableDamage, K2Node_DynamicCast_AsBP_Character_Script) == 0x000010, "Member 'BP_FlameCheatManager_C_DefinableDamage::K2Node_DynamicCast_AsBP_Character_Script' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_DefinableDamage, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_FlameCheatManager_C_DefinableDamage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_DefinableDamage, K2Node_DynamicCast_AsHuman_Player_State) == 0x000020, "Member 'BP_FlameCheatManager_C_DefinableDamage::K2Node_DynamicCast_AsHuman_Player_State' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_DefinableDamage, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'BP_FlameCheatManager_C_DefinableDamage::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_DefinableDamage, CallFunc_GetPlayerName_ReturnValue) == 0x000030, "Member 'BP_FlameCheatManager_C_DefinableDamage::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_DefinableDamage, CallFunc_Concat_StrStr_ReturnValue) == 0x000040, "Member 'BP_FlameCheatManager_C_DefinableDamage::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_DefinableDamage, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000050, "Member 'BP_FlameCheatManager_C_DefinableDamage::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.Change FOV
// 0x0060 (0x0060 - 0x0000)
struct BP_FlameCheatManager_C_Change_FOV final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Character_Script_C*                 K2Node_DynamicCast_AsBP_Character_Script;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerState*                      K2Node_DynamicCast_AsHuman_Player_State;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_Change_FOV) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_Change_FOV");
static_assert(sizeof(BP_FlameCheatManager_C_Change_FOV) == 0x000060, "Wrong size on BP_FlameCheatManager_C_Change_FOV");
static_assert(offsetof(BP_FlameCheatManager_C_Change_FOV, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_Change_FOV::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Change_FOV, CallFunc_K2_GetPawn_ReturnValue) == 0x000008, "Member 'BP_FlameCheatManager_C_Change_FOV::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Change_FOV, K2Node_DynamicCast_AsBP_Character_Script) == 0x000010, "Member 'BP_FlameCheatManager_C_Change_FOV::K2Node_DynamicCast_AsBP_Character_Script' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Change_FOV, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_FlameCheatManager_C_Change_FOV::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Change_FOV, K2Node_DynamicCast_AsHuman_Player_State) == 0x000020, "Member 'BP_FlameCheatManager_C_Change_FOV::K2Node_DynamicCast_AsHuman_Player_State' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Change_FOV, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'BP_FlameCheatManager_C_Change_FOV::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Change_FOV, CallFunc_GetPlayerName_ReturnValue) == 0x000030, "Member 'BP_FlameCheatManager_C_Change_FOV::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Change_FOV, CallFunc_Concat_StrStr_ReturnValue) == 0x000040, "Member 'BP_FlameCheatManager_C_Change_FOV::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Change_FOV, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000050, "Member 'BP_FlameCheatManager_C_Change_FOV::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.Set Player Transform
// 0x0120 (0x0120 - 0x0000)
struct BP_FlameCheatManager_C_Set_Player_Transform final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0048(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerState*                      K2Node_DynamicCast_AsHuman_Player_State;           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E2[0x6];                                       // 0x00E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_Set_Player_Transform) == 0x000010, "Wrong alignment on BP_FlameCheatManager_C_Set_Player_Transform");
static_assert(sizeof(BP_FlameCheatManager_C_Set_Player_Transform) == 0x000120, "Wrong size on BP_FlameCheatManager_C_Set_Player_Transform");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Player_Transform, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_Set_Player_Transform::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Player_Transform, Transform) == 0x000010, "Member 'BP_FlameCheatManager_C_Set_Player_Transform::Transform' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Player_Transform, CallFunc_K2_GetPawn_ReturnValue) == 0x000040, "Member 'BP_FlameCheatManager_C_Set_Player_Transform::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Player_Transform, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000048, "Member 'BP_FlameCheatManager_C_Set_Player_Transform::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Player_Transform, CallFunc_K2_SetActorTransform_ReturnValue) == 0x0000D4, "Member 'BP_FlameCheatManager_C_Set_Player_Transform::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Player_Transform, K2Node_DynamicCast_AsHuman_Player_State) == 0x0000D8, "Member 'BP_FlameCheatManager_C_Set_Player_Transform::K2Node_DynamicCast_AsHuman_Player_State' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Player_Transform, K2Node_DynamicCast_bSuccess) == 0x0000E0, "Member 'BP_FlameCheatManager_C_Set_Player_Transform::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Player_Transform, CallFunc_IsValid_ReturnValue) == 0x0000E1, "Member 'BP_FlameCheatManager_C_Set_Player_Transform::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Player_Transform, CallFunc_GetPlayerName_ReturnValue) == 0x0000E8, "Member 'BP_FlameCheatManager_C_Set_Player_Transform::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Player_Transform, CallFunc_Concat_StrStr_ReturnValue) == 0x0000F8, "Member 'BP_FlameCheatManager_C_Set_Player_Transform::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Player_Transform, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000108, "Member 'BP_FlameCheatManager_C_Set_Player_Transform::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.ShowPlayerLocation
// 0x00A8 (0x00A8 - 0x0000)
struct BP_FlameCheatManager_C_ShowPlayerLocation final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Show_Player_Location;                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AHumanPlayerState*                      K2Node_DynamicCast_AsHuman_Player_State;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABP_Character_Script_C*                 K2Node_DynamicCast_AsBP_Character_Script;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_ShowPlayerLocation) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_ShowPlayerLocation");
static_assert(sizeof(BP_FlameCheatManager_C_ShowPlayerLocation) == 0x0000A8, "Wrong size on BP_FlameCheatManager_C_ShowPlayerLocation");
static_assert(offsetof(BP_FlameCheatManager_C_ShowPlayerLocation, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_ShowPlayerLocation::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowPlayerLocation, Show_Player_Location) == 0x000008, "Member 'BP_FlameCheatManager_C_ShowPlayerLocation::Show_Player_Location' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowPlayerLocation, Temp_bool_Variable) == 0x000009, "Member 'BP_FlameCheatManager_C_ShowPlayerLocation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowPlayerLocation, Temp_string_Variable) == 0x000010, "Member 'BP_FlameCheatManager_C_ShowPlayerLocation::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowPlayerLocation, Temp_string_Variable_1) == 0x000020, "Member 'BP_FlameCheatManager_C_ShowPlayerLocation::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowPlayerLocation, K2Node_DynamicCast_AsHuman_Player_State) == 0x000030, "Member 'BP_FlameCheatManager_C_ShowPlayerLocation::K2Node_DynamicCast_AsHuman_Player_State' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowPlayerLocation, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_FlameCheatManager_C_ShowPlayerLocation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowPlayerLocation, CallFunc_GetPlayerName_ReturnValue) == 0x000040, "Member 'BP_FlameCheatManager_C_ShowPlayerLocation::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowPlayerLocation, CallFunc_K2_GetPawn_ReturnValue) == 0x000050, "Member 'BP_FlameCheatManager_C_ShowPlayerLocation::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowPlayerLocation, CallFunc_Concat_StrStr_ReturnValue) == 0x000058, "Member 'BP_FlameCheatManager_C_ShowPlayerLocation::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowPlayerLocation, K2Node_DynamicCast_AsBP_Character_Script) == 0x000068, "Member 'BP_FlameCheatManager_C_ShowPlayerLocation::K2Node_DynamicCast_AsBP_Character_Script' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowPlayerLocation, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'BP_FlameCheatManager_C_ShowPlayerLocation::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowPlayerLocation, K2Node_Select_Default) == 0x000078, "Member 'BP_FlameCheatManager_C_ShowPlayerLocation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowPlayerLocation, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000088, "Member 'BP_FlameCheatManager_C_ShowPlayerLocation::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowPlayerLocation, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000098, "Member 'BP_FlameCheatManager_C_ShowPlayerLocation::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.Toggle machine mode
// 0x00D0 (0x00D0 - 0x0000)
struct BP_FlameCheatManager_C_Toggle_machine_mode final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Toggle_machine_mode_0;                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AHumanPlayerState*                      K2Node_DynamicCast_AsHuman_Player_State;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateFlame*                        K2Node_DynamicCast_AsGame_State_Flame;             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_Toggle_machine_mode) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_Toggle_machine_mode");
static_assert(sizeof(BP_FlameCheatManager_C_Toggle_machine_mode) == 0x0000D0, "Wrong size on BP_FlameCheatManager_C_Toggle_machine_mode");
static_assert(offsetof(BP_FlameCheatManager_C_Toggle_machine_mode, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_Toggle_machine_mode::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Toggle_machine_mode, Toggle_machine_mode_0) == 0x000008, "Member 'BP_FlameCheatManager_C_Toggle_machine_mode::Toggle_machine_mode_0' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Toggle_machine_mode, Temp_string_Variable) == 0x000010, "Member 'BP_FlameCheatManager_C_Toggle_machine_mode::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Toggle_machine_mode, K2Node_DynamicCast_AsHuman_Player_State) == 0x000020, "Member 'BP_FlameCheatManager_C_Toggle_machine_mode::K2Node_DynamicCast_AsHuman_Player_State' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Toggle_machine_mode, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_FlameCheatManager_C_Toggle_machine_mode::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Toggle_machine_mode, CallFunc_GetPlayerName_ReturnValue) == 0x000030, "Member 'BP_FlameCheatManager_C_Toggle_machine_mode::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Toggle_machine_mode, Temp_string_Variable_1) == 0x000040, "Member 'BP_FlameCheatManager_C_Toggle_machine_mode::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Toggle_machine_mode, CallFunc_Concat_StrStr_ReturnValue) == 0x000050, "Member 'BP_FlameCheatManager_C_Toggle_machine_mode::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Toggle_machine_mode, Temp_bool_Variable) == 0x000060, "Member 'BP_FlameCheatManager_C_Toggle_machine_mode::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Toggle_machine_mode, CallFunc_GetGameState_ReturnValue) == 0x000068, "Member 'BP_FlameCheatManager_C_Toggle_machine_mode::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Toggle_machine_mode, K2Node_DynamicCast_AsGame_State_Flame) == 0x000070, "Member 'BP_FlameCheatManager_C_Toggle_machine_mode::K2Node_DynamicCast_AsGame_State_Flame' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Toggle_machine_mode, K2Node_DynamicCast_bSuccess_1) == 0x000078, "Member 'BP_FlameCheatManager_C_Toggle_machine_mode::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Toggle_machine_mode, K2Node_Select_Default) == 0x000080, "Member 'BP_FlameCheatManager_C_Toggle_machine_mode::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Toggle_machine_mode, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000090, "Member 'BP_FlameCheatManager_C_Toggle_machine_mode::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Toggle_machine_mode, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x0000A0, "Member 'BP_FlameCheatManager_C_Toggle_machine_mode::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Toggle_machine_mode, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000B0, "Member 'BP_FlameCheatManager_C_Toggle_machine_mode::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Toggle_machine_mode, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000C0, "Member 'BP_FlameCheatManager_C_Toggle_machine_mode::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.ShowPlayersInSession
// 0x00A8 (0x00A8 - 0x0000)
struct BP_FlameCheatManager_C_ShowPlayersInSession final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ToggleShowPlayersInSession;                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerState*                      K2Node_DynamicCast_AsHuman_Player_State;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_Script_C*                 K2Node_DynamicCast_AsBP_Character_Script;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_ShowPlayersInSession) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_ShowPlayersInSession");
static_assert(sizeof(BP_FlameCheatManager_C_ShowPlayersInSession) == 0x0000A8, "Wrong size on BP_FlameCheatManager_C_ShowPlayersInSession");
static_assert(offsetof(BP_FlameCheatManager_C_ShowPlayersInSession, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_ShowPlayersInSession::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowPlayersInSession, ToggleShowPlayersInSession) == 0x000008, "Member 'BP_FlameCheatManager_C_ShowPlayersInSession::ToggleShowPlayersInSession' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowPlayersInSession, Temp_bool_Variable) == 0x000009, "Member 'BP_FlameCheatManager_C_ShowPlayersInSession::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowPlayersInSession, Temp_string_Variable) == 0x000010, "Member 'BP_FlameCheatManager_C_ShowPlayersInSession::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowPlayersInSession, Temp_string_Variable_1) == 0x000020, "Member 'BP_FlameCheatManager_C_ShowPlayersInSession::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowPlayersInSession, CallFunc_K2_GetPawn_ReturnValue) == 0x000030, "Member 'BP_FlameCheatManager_C_ShowPlayersInSession::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowPlayersInSession, K2Node_DynamicCast_AsHuman_Player_State) == 0x000038, "Member 'BP_FlameCheatManager_C_ShowPlayersInSession::K2Node_DynamicCast_AsHuman_Player_State' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowPlayersInSession, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_FlameCheatManager_C_ShowPlayersInSession::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowPlayersInSession, K2Node_DynamicCast_AsBP_Character_Script) == 0x000048, "Member 'BP_FlameCheatManager_C_ShowPlayersInSession::K2Node_DynamicCast_AsBP_Character_Script' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowPlayersInSession, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BP_FlameCheatManager_C_ShowPlayersInSession::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowPlayersInSession, CallFunc_GetPlayerName_ReturnValue) == 0x000058, "Member 'BP_FlameCheatManager_C_ShowPlayersInSession::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowPlayersInSession, CallFunc_Concat_StrStr_ReturnValue) == 0x000068, "Member 'BP_FlameCheatManager_C_ShowPlayersInSession::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowPlayersInSession, K2Node_Select_Default) == 0x000078, "Member 'BP_FlameCheatManager_C_ShowPlayersInSession::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowPlayersInSession, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000088, "Member 'BP_FlameCheatManager_C_ShowPlayersInSession::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowPlayersInSession, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000098, "Member 'BP_FlameCheatManager_C_ShowPlayersInSession::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.TeleportToPlayerStart
// 0x0170 (0x0170 - 0x0000)
struct BP_FlameCheatManager_C_TeleportToPlayerStart final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class APlayerStartFlame*>              AllPlayerStarts;                                   // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class ABP_PlayerController_C*>         AllControllers;                                    // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         TeleportationsCount1;                              // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AHumanCharacter*>                AllCharacters;                                     // 0x0030(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         TeleportationsCount;                               // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayerStartCount;                                  // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerState*                      K2Node_DynamicCast_AsHuman_Player_State;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABP_PlayerController_C*                 CallFunc_Array_Get_Item;                           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanCharacter*                        K2Node_DynamicCast_AsHuman_Character;              // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_C*                 CallFunc_Array_Get_Item_1;                         // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F5[0x3];                                       // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanCharacter*                        CallFunc_Array_Get_Item_2;                         // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerStartFlame*                      CallFunc_Array_Get_Item_3;                         // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0110(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_TeleportTo_ReturnValue;                // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FlameCheatManager_C_TeleportToPlayerStart) == 0x000010, "Wrong alignment on BP_FlameCheatManager_C_TeleportToPlayerStart");
static_assert(sizeof(BP_FlameCheatManager_C_TeleportToPlayerStart) == 0x000170, "Wrong size on BP_FlameCheatManager_C_TeleportToPlayerStart");
static_assert(offsetof(BP_FlameCheatManager_C_TeleportToPlayerStart, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_TeleportToPlayerStart::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_TeleportToPlayerStart, AllPlayerStarts) == 0x000008, "Member 'BP_FlameCheatManager_C_TeleportToPlayerStart::AllPlayerStarts' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_TeleportToPlayerStart, AllControllers) == 0x000018, "Member 'BP_FlameCheatManager_C_TeleportToPlayerStart::AllControllers' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_TeleportToPlayerStart, TeleportationsCount1) == 0x000028, "Member 'BP_FlameCheatManager_C_TeleportToPlayerStart::TeleportationsCount1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_TeleportToPlayerStart, AllCharacters) == 0x000030, "Member 'BP_FlameCheatManager_C_TeleportToPlayerStart::AllCharacters' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_TeleportToPlayerStart, TeleportationsCount) == 0x000040, "Member 'BP_FlameCheatManager_C_TeleportToPlayerStart::TeleportationsCount' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_TeleportToPlayerStart, PlayerStartCount) == 0x000044, "Member 'BP_FlameCheatManager_C_TeleportToPlayerStart::PlayerStartCount' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_TeleportToPlayerStart, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'BP_FlameCheatManager_C_TeleportToPlayerStart::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_TeleportToPlayerStart, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'BP_FlameCheatManager_C_TeleportToPlayerStart::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_TeleportToPlayerStart, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BP_FlameCheatManager_C_TeleportToPlayerStart::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_TeleportToPlayerStart, CallFunc_Greater_IntInt_ReturnValue) == 0x000054, "Member 'BP_FlameCheatManager_C_TeleportToPlayerStart::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_TeleportToPlayerStart, Temp_int_Array_Index_Variable) == 0x000058, "Member 'BP_FlameCheatManager_C_TeleportToPlayerStart::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_TeleportToPlayerStart, Temp_int_Loop_Counter_Variable_1) == 0x00005C, "Member 'BP_FlameCheatManager_C_TeleportToPlayerStart::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_TeleportToPlayerStart, CallFunc_Add_IntInt_ReturnValue_1) == 0x000060, "Member 'BP_FlameCheatManager_C_TeleportToPlayerStart::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_TeleportToPlayerStart, CallFunc_Array_Length_ReturnValue_1) == 0x000064, "Member 'BP_FlameCheatManager_C_TeleportToPlayerStart::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_TeleportToPlayerStart, K2Node_DynamicCast_AsHuman_Player_State) == 0x000068, "Member 'BP_FlameCheatManager_C_TeleportToPlayerStart::K2Node_DynamicCast_AsHuman_Player_State' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_TeleportToPlayerStart, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'BP_FlameCheatManager_C_TeleportToPlayerStart::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_TeleportToPlayerStart, CallFunc_Less_IntInt_ReturnValue) == 0x000071, "Member 'BP_FlameCheatManager_C_TeleportToPlayerStart::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_TeleportToPlayerStart, CallFunc_GetPlayerName_ReturnValue) == 0x000078, "Member 'BP_FlameCheatManager_C_TeleportToPlayerStart::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_TeleportToPlayerStart, CallFunc_Concat_StrStr_ReturnValue) == 0x000088, "Member 'BP_FlameCheatManager_C_TeleportToPlayerStart::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_TeleportToPlayerStart, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000098, "Member 'BP_FlameCheatManager_C_TeleportToPlayerStart::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_TeleportToPlayerStart, CallFunc_Array_Get_Item) == 0x0000A8, "Member 'BP_FlameCheatManager_C_TeleportToPlayerStart::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_TeleportToPlayerStart, CallFunc_Array_Length_ReturnValue_2) == 0x0000B0, "Member 'BP_FlameCheatManager_C_TeleportToPlayerStart::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_TeleportToPlayerStart, CallFunc_K2_GetPawn_ReturnValue) == 0x0000B8, "Member 'BP_FlameCheatManager_C_TeleportToPlayerStart::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_TeleportToPlayerStart, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000C0, "Member 'BP_FlameCheatManager_C_TeleportToPlayerStart::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_TeleportToPlayerStart, K2Node_DynamicCast_AsHuman_Character) == 0x0000C8, "Member 'BP_FlameCheatManager_C_TeleportToPlayerStart::K2Node_DynamicCast_AsHuman_Character' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_TeleportToPlayerStart, K2Node_DynamicCast_bSuccess_1) == 0x0000D0, "Member 'BP_FlameCheatManager_C_TeleportToPlayerStart::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_TeleportToPlayerStart, CallFunc_Array_AddUnique_ReturnValue) == 0x0000D4, "Member 'BP_FlameCheatManager_C_TeleportToPlayerStart::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_TeleportToPlayerStart, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000D8, "Member 'BP_FlameCheatManager_C_TeleportToPlayerStart::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_TeleportToPlayerStart, Temp_int_Variable) == 0x0000DC, "Member 'BP_FlameCheatManager_C_TeleportToPlayerStart::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_TeleportToPlayerStart, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0000E0, "Member 'BP_FlameCheatManager_C_TeleportToPlayerStart::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_TeleportToPlayerStart, CallFunc_Array_Length_ReturnValue_3) == 0x0000E4, "Member 'BP_FlameCheatManager_C_TeleportToPlayerStart::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_TeleportToPlayerStart, CallFunc_Array_Get_Item_1) == 0x0000E8, "Member 'BP_FlameCheatManager_C_TeleportToPlayerStart::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_TeleportToPlayerStart, Temp_int_Array_Index_Variable_1) == 0x0000F0, "Member 'BP_FlameCheatManager_C_TeleportToPlayerStart::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_TeleportToPlayerStart, CallFunc_IsValid_ReturnValue) == 0x0000F4, "Member 'BP_FlameCheatManager_C_TeleportToPlayerStart::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_TeleportToPlayerStart, CallFunc_Array_Get_Item_2) == 0x0000F8, "Member 'BP_FlameCheatManager_C_TeleportToPlayerStart::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_TeleportToPlayerStart, CallFunc_Percent_IntInt_ReturnValue) == 0x000100, "Member 'BP_FlameCheatManager_C_TeleportToPlayerStart::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_TeleportToPlayerStart, CallFunc_Array_Get_Item_3) == 0x000108, "Member 'BP_FlameCheatManager_C_TeleportToPlayerStart::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_TeleportToPlayerStart, CallFunc_GetTransform_ReturnValue) == 0x000110, "Member 'BP_FlameCheatManager_C_TeleportToPlayerStart::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_TeleportToPlayerStart, CallFunc_BreakTransform_Location) == 0x000140, "Member 'BP_FlameCheatManager_C_TeleportToPlayerStart::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_TeleportToPlayerStart, CallFunc_BreakTransform_Rotation) == 0x00014C, "Member 'BP_FlameCheatManager_C_TeleportToPlayerStart::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_TeleportToPlayerStart, CallFunc_BreakTransform_Scale) == 0x000158, "Member 'BP_FlameCheatManager_C_TeleportToPlayerStart::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_TeleportToPlayerStart, CallFunc_K2_TeleportTo_ReturnValue) == 0x000164, "Member 'BP_FlameCheatManager_C_TeleportToPlayerStart::CallFunc_K2_TeleportTo_ReturnValue' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.ShowGameModeDebug
// 0x0068 (0x0068 - 0x0000)
struct BP_FlameCheatManager_C_ShowGameModeDebug final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 WidgetToDraw;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Character_Script_C*                 K2Node_DynamicCast_AsBP_Character_Script;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerState*                      K2Node_DynamicCast_AsHuman_Player_State;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_ShowGameModeDebug) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_ShowGameModeDebug");
static_assert(sizeof(BP_FlameCheatManager_C_ShowGameModeDebug) == 0x000068, "Wrong size on BP_FlameCheatManager_C_ShowGameModeDebug");
static_assert(offsetof(BP_FlameCheatManager_C_ShowGameModeDebug, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_ShowGameModeDebug::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowGameModeDebug, WidgetToDraw) == 0x000008, "Member 'BP_FlameCheatManager_C_ShowGameModeDebug::WidgetToDraw' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowGameModeDebug, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'BP_FlameCheatManager_C_ShowGameModeDebug::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowGameModeDebug, K2Node_DynamicCast_AsBP_Character_Script) == 0x000018, "Member 'BP_FlameCheatManager_C_ShowGameModeDebug::K2Node_DynamicCast_AsBP_Character_Script' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowGameModeDebug, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_FlameCheatManager_C_ShowGameModeDebug::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowGameModeDebug, K2Node_DynamicCast_AsHuman_Player_State) == 0x000028, "Member 'BP_FlameCheatManager_C_ShowGameModeDebug::K2Node_DynamicCast_AsHuman_Player_State' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowGameModeDebug, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_FlameCheatManager_C_ShowGameModeDebug::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowGameModeDebug, CallFunc_GetPlayerName_ReturnValue) == 0x000038, "Member 'BP_FlameCheatManager_C_ShowGameModeDebug::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowGameModeDebug, CallFunc_Concat_StrStr_ReturnValue) == 0x000048, "Member 'BP_FlameCheatManager_C_ShowGameModeDebug::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowGameModeDebug, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000058, "Member 'BP_FlameCheatManager_C_ShowGameModeDebug::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.3dDebug
// 0x00A8 (0x00A8 - 0x0000)
struct BP_FlameCheatManager_C_ThreedDebug final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Toggle3dDebug;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable;                              // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABP_Character_Script_C*                 K2Node_DynamicCast_AsBP_Character_Script;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_1;                            // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AHumanPlayerState*                      K2Node_DynamicCast_AsHuman_Player_State;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_ThreedDebug) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_ThreedDebug");
static_assert(sizeof(BP_FlameCheatManager_C_ThreedDebug) == 0x0000A8, "Wrong size on BP_FlameCheatManager_C_ThreedDebug");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_ThreedDebug::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug, Toggle3dDebug) == 0x000008, "Member 'BP_FlameCheatManager_C_ThreedDebug::Toggle3dDebug' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug, Temp_bool_Variable) == 0x000009, "Member 'BP_FlameCheatManager_C_ThreedDebug::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'BP_FlameCheatManager_C_ThreedDebug::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug, Temp_string_Variable) == 0x000018, "Member 'BP_FlameCheatManager_C_ThreedDebug::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug, K2Node_DynamicCast_AsBP_Character_Script) == 0x000028, "Member 'BP_FlameCheatManager_C_ThreedDebug::K2Node_DynamicCast_AsBP_Character_Script' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_FlameCheatManager_C_ThreedDebug::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug, Temp_string_Variable_1) == 0x000038, "Member 'BP_FlameCheatManager_C_ThreedDebug::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug, K2Node_DynamicCast_AsHuman_Player_State) == 0x000048, "Member 'BP_FlameCheatManager_C_ThreedDebug::K2Node_DynamicCast_AsHuman_Player_State' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BP_FlameCheatManager_C_ThreedDebug::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug, CallFunc_GetPlayerName_ReturnValue) == 0x000058, "Member 'BP_FlameCheatManager_C_ThreedDebug::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug, K2Node_Select_Default) == 0x000068, "Member 'BP_FlameCheatManager_C_ThreedDebug::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug, CallFunc_Concat_StrStr_ReturnValue) == 0x000078, "Member 'BP_FlameCheatManager_C_ThreedDebug::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000088, "Member 'BP_FlameCheatManager_C_ThreedDebug::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000098, "Member 'BP_FlameCheatManager_C_ThreedDebug::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.ConsumableHud
// 0x00A8 (0x00A8 - 0x0000)
struct BP_FlameCheatManager_C_ConsumableHud final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ToggleConsumableHud;                               // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable;                              // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABP_Character_Script_C*                 K2Node_DynamicCast_AsBP_Character_Script;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_1;                            // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AHumanPlayerState*                      K2Node_DynamicCast_AsHuman_Player_State;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_ConsumableHud) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_ConsumableHud");
static_assert(sizeof(BP_FlameCheatManager_C_ConsumableHud) == 0x0000A8, "Wrong size on BP_FlameCheatManager_C_ConsumableHud");
static_assert(offsetof(BP_FlameCheatManager_C_ConsumableHud, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_ConsumableHud::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ConsumableHud, ToggleConsumableHud) == 0x000008, "Member 'BP_FlameCheatManager_C_ConsumableHud::ToggleConsumableHud' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ConsumableHud, Temp_bool_Variable) == 0x000009, "Member 'BP_FlameCheatManager_C_ConsumableHud::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ConsumableHud, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'BP_FlameCheatManager_C_ConsumableHud::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ConsumableHud, Temp_string_Variable) == 0x000018, "Member 'BP_FlameCheatManager_C_ConsumableHud::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ConsumableHud, K2Node_DynamicCast_AsBP_Character_Script) == 0x000028, "Member 'BP_FlameCheatManager_C_ConsumableHud::K2Node_DynamicCast_AsBP_Character_Script' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ConsumableHud, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_FlameCheatManager_C_ConsumableHud::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ConsumableHud, Temp_string_Variable_1) == 0x000038, "Member 'BP_FlameCheatManager_C_ConsumableHud::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ConsumableHud, K2Node_DynamicCast_AsHuman_Player_State) == 0x000048, "Member 'BP_FlameCheatManager_C_ConsumableHud::K2Node_DynamicCast_AsHuman_Player_State' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ConsumableHud, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BP_FlameCheatManager_C_ConsumableHud::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ConsumableHud, CallFunc_GetPlayerName_ReturnValue) == 0x000058, "Member 'BP_FlameCheatManager_C_ConsumableHud::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ConsumableHud, CallFunc_Concat_StrStr_ReturnValue) == 0x000068, "Member 'BP_FlameCheatManager_C_ConsumableHud::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ConsumableHud, K2Node_Select_Default) == 0x000078, "Member 'BP_FlameCheatManager_C_ConsumableHud::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ConsumableHud, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000088, "Member 'BP_FlameCheatManager_C_ConsumableHud::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ConsumableHud, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000098, "Member 'BP_FlameCheatManager_C_ConsumableHud::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.MachineHud
// 0x00A8 (0x00A8 - 0x0000)
struct BP_FlameCheatManager_C_MachineHud final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ToggleMachineHud;                                  // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Character_Script_C*                 K2Node_DynamicCast_AsBP_Character_Script;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AHumanPlayerState*                      K2Node_DynamicCast_AsHuman_Player_State;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_MachineHud) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_MachineHud");
static_assert(sizeof(BP_FlameCheatManager_C_MachineHud) == 0x0000A8, "Wrong size on BP_FlameCheatManager_C_MachineHud");
static_assert(offsetof(BP_FlameCheatManager_C_MachineHud, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_MachineHud::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_MachineHud, ToggleMachineHud) == 0x000008, "Member 'BP_FlameCheatManager_C_MachineHud::ToggleMachineHud' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_MachineHud, Temp_bool_Variable) == 0x000009, "Member 'BP_FlameCheatManager_C_MachineHud::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_MachineHud, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'BP_FlameCheatManager_C_MachineHud::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_MachineHud, K2Node_DynamicCast_AsBP_Character_Script) == 0x000018, "Member 'BP_FlameCheatManager_C_MachineHud::K2Node_DynamicCast_AsBP_Character_Script' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_MachineHud, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_FlameCheatManager_C_MachineHud::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_MachineHud, Temp_string_Variable) == 0x000028, "Member 'BP_FlameCheatManager_C_MachineHud::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_MachineHud, Temp_string_Variable_1) == 0x000038, "Member 'BP_FlameCheatManager_C_MachineHud::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_MachineHud, K2Node_DynamicCast_AsHuman_Player_State) == 0x000048, "Member 'BP_FlameCheatManager_C_MachineHud::K2Node_DynamicCast_AsHuman_Player_State' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_MachineHud, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BP_FlameCheatManager_C_MachineHud::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_MachineHud, CallFunc_GetPlayerName_ReturnValue) == 0x000058, "Member 'BP_FlameCheatManager_C_MachineHud::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_MachineHud, CallFunc_Concat_StrStr_ReturnValue) == 0x000068, "Member 'BP_FlameCheatManager_C_MachineHud::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_MachineHud, K2Node_Select_Default) == 0x000078, "Member 'BP_FlameCheatManager_C_MachineHud::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_MachineHud, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000088, "Member 'BP_FlameCheatManager_C_MachineHud::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_MachineHud, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000098, "Member 'BP_FlameCheatManager_C_MachineHud::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.3dDebug_ResourceItems
// 0x00C0 (0x00C0 - 0x0000)
struct BP_FlameCheatManager_C_ThreedDebug_ResourceItems final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Toggle3dDebugResourceItems;                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_Script_C*                 K2Node_DynamicCast_AsBP_Character_Script;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_1;                            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerState*                      K2Node_DynamicCast_AsHuman_Player_State;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_ThreedDebug_ResourceItems) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_ThreedDebug_ResourceItems");
static_assert(sizeof(BP_FlameCheatManager_C_ThreedDebug_ResourceItems) == 0x0000C0, "Wrong size on BP_FlameCheatManager_C_ThreedDebug_ResourceItems");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ResourceItems, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_ThreedDebug_ResourceItems::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ResourceItems, Toggle3dDebugResourceItems) == 0x000008, "Member 'BP_FlameCheatManager_C_ThreedDebug_ResourceItems::Toggle3dDebugResourceItems' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ResourceItems, Temp_bool_Variable) == 0x000009, "Member 'BP_FlameCheatManager_C_ThreedDebug_ResourceItems::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ResourceItems, CallFunc_BooleanAND_ReturnValue) == 0x00000A, "Member 'BP_FlameCheatManager_C_ThreedDebug_ResourceItems::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ResourceItems, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'BP_FlameCheatManager_C_ThreedDebug_ResourceItems::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ResourceItems, CallFunc_BooleanAND_ReturnValue_1) == 0x000018, "Member 'BP_FlameCheatManager_C_ThreedDebug_ResourceItems::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ResourceItems, K2Node_DynamicCast_AsBP_Character_Script) == 0x000020, "Member 'BP_FlameCheatManager_C_ThreedDebug_ResourceItems::K2Node_DynamicCast_AsBP_Character_Script' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ResourceItems, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_FlameCheatManager_C_ThreedDebug_ResourceItems::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ResourceItems, CallFunc_BooleanAND_ReturnValue_2) == 0x000029, "Member 'BP_FlameCheatManager_C_ThreedDebug_ResourceItems::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ResourceItems, CallFunc_BooleanAND_ReturnValue_3) == 0x00002A, "Member 'BP_FlameCheatManager_C_ThreedDebug_ResourceItems::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ResourceItems, Temp_string_Variable) == 0x000030, "Member 'BP_FlameCheatManager_C_ThreedDebug_ResourceItems::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ResourceItems, CallFunc_BooleanAND_ReturnValue_4) == 0x000040, "Member 'BP_FlameCheatManager_C_ThreedDebug_ResourceItems::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ResourceItems, CallFunc_BooleanAND_ReturnValue_5) == 0x000041, "Member 'BP_FlameCheatManager_C_ThreedDebug_ResourceItems::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ResourceItems, Temp_string_Variable_1) == 0x000048, "Member 'BP_FlameCheatManager_C_ThreedDebug_ResourceItems::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ResourceItems, CallFunc_BooleanAND_ReturnValue_6) == 0x000058, "Member 'BP_FlameCheatManager_C_ThreedDebug_ResourceItems::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ResourceItems, K2Node_DynamicCast_AsHuman_Player_State) == 0x000060, "Member 'BP_FlameCheatManager_C_ThreedDebug_ResourceItems::K2Node_DynamicCast_AsHuman_Player_State' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ResourceItems, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'BP_FlameCheatManager_C_ThreedDebug_ResourceItems::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ResourceItems, K2Node_Select_Default) == 0x000070, "Member 'BP_FlameCheatManager_C_ThreedDebug_ResourceItems::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ResourceItems, CallFunc_GetPlayerName_ReturnValue) == 0x000080, "Member 'BP_FlameCheatManager_C_ThreedDebug_ResourceItems::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ResourceItems, CallFunc_Concat_StrStr_ReturnValue) == 0x000090, "Member 'BP_FlameCheatManager_C_ThreedDebug_ResourceItems::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ResourceItems, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000A0, "Member 'BP_FlameCheatManager_C_ThreedDebug_ResourceItems::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ResourceItems, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000B0, "Member 'BP_FlameCheatManager_C_ThreedDebug_ResourceItems::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.3dDebug_ObjectiveItems
// 0x00C0 (0x00C0 - 0x0000)
struct BP_FlameCheatManager_C_ThreedDebug_ObjectiveItems final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Toggle3dDebugObjectiveItems;                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_Script_C*                 K2Node_DynamicCast_AsBP_Character_Script;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_1;                            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerState*                      K2Node_DynamicCast_AsHuman_Player_State;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_ThreedDebug_ObjectiveItems) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_ThreedDebug_ObjectiveItems");
static_assert(sizeof(BP_FlameCheatManager_C_ThreedDebug_ObjectiveItems) == 0x0000C0, "Wrong size on BP_FlameCheatManager_C_ThreedDebug_ObjectiveItems");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ObjectiveItems, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_ThreedDebug_ObjectiveItems::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ObjectiveItems, Toggle3dDebugObjectiveItems) == 0x000008, "Member 'BP_FlameCheatManager_C_ThreedDebug_ObjectiveItems::Toggle3dDebugObjectiveItems' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ObjectiveItems, Temp_bool_Variable) == 0x000009, "Member 'BP_FlameCheatManager_C_ThreedDebug_ObjectiveItems::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ObjectiveItems, CallFunc_BooleanAND_ReturnValue) == 0x00000A, "Member 'BP_FlameCheatManager_C_ThreedDebug_ObjectiveItems::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ObjectiveItems, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'BP_FlameCheatManager_C_ThreedDebug_ObjectiveItems::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ObjectiveItems, CallFunc_BooleanAND_ReturnValue_1) == 0x000018, "Member 'BP_FlameCheatManager_C_ThreedDebug_ObjectiveItems::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ObjectiveItems, K2Node_DynamicCast_AsBP_Character_Script) == 0x000020, "Member 'BP_FlameCheatManager_C_ThreedDebug_ObjectiveItems::K2Node_DynamicCast_AsBP_Character_Script' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ObjectiveItems, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_FlameCheatManager_C_ThreedDebug_ObjectiveItems::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ObjectiveItems, CallFunc_BooleanAND_ReturnValue_2) == 0x000029, "Member 'BP_FlameCheatManager_C_ThreedDebug_ObjectiveItems::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ObjectiveItems, CallFunc_BooleanAND_ReturnValue_3) == 0x00002A, "Member 'BP_FlameCheatManager_C_ThreedDebug_ObjectiveItems::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ObjectiveItems, Temp_string_Variable) == 0x000030, "Member 'BP_FlameCheatManager_C_ThreedDebug_ObjectiveItems::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ObjectiveItems, CallFunc_BooleanAND_ReturnValue_4) == 0x000040, "Member 'BP_FlameCheatManager_C_ThreedDebug_ObjectiveItems::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ObjectiveItems, CallFunc_BooleanAND_ReturnValue_5) == 0x000041, "Member 'BP_FlameCheatManager_C_ThreedDebug_ObjectiveItems::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ObjectiveItems, Temp_string_Variable_1) == 0x000048, "Member 'BP_FlameCheatManager_C_ThreedDebug_ObjectiveItems::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ObjectiveItems, CallFunc_BooleanAND_ReturnValue_6) == 0x000058, "Member 'BP_FlameCheatManager_C_ThreedDebug_ObjectiveItems::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ObjectiveItems, K2Node_DynamicCast_AsHuman_Player_State) == 0x000060, "Member 'BP_FlameCheatManager_C_ThreedDebug_ObjectiveItems::K2Node_DynamicCast_AsHuman_Player_State' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ObjectiveItems, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'BP_FlameCheatManager_C_ThreedDebug_ObjectiveItems::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ObjectiveItems, K2Node_Select_Default) == 0x000070, "Member 'BP_FlameCheatManager_C_ThreedDebug_ObjectiveItems::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ObjectiveItems, CallFunc_GetPlayerName_ReturnValue) == 0x000080, "Member 'BP_FlameCheatManager_C_ThreedDebug_ObjectiveItems::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ObjectiveItems, CallFunc_Concat_StrStr_ReturnValue) == 0x000090, "Member 'BP_FlameCheatManager_C_ThreedDebug_ObjectiveItems::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ObjectiveItems, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000A0, "Member 'BP_FlameCheatManager_C_ThreedDebug_ObjectiveItems::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ObjectiveItems, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000B0, "Member 'BP_FlameCheatManager_C_ThreedDebug_ObjectiveItems::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.3dDebug_ObjectiveSpawns
// 0x00C0 (0x00C0 - 0x0000)
struct BP_FlameCheatManager_C_ThreedDebug_ObjectiveSpawns final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Toggle3dDebugObjectiveSpawns;                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_Script_C*                 K2Node_DynamicCast_AsBP_Character_Script;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_1;                            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerState*                      K2Node_DynamicCast_AsHuman_Player_State;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_ThreedDebug_ObjectiveSpawns) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_ThreedDebug_ObjectiveSpawns");
static_assert(sizeof(BP_FlameCheatManager_C_ThreedDebug_ObjectiveSpawns) == 0x0000C0, "Wrong size on BP_FlameCheatManager_C_ThreedDebug_ObjectiveSpawns");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ObjectiveSpawns, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_ThreedDebug_ObjectiveSpawns::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ObjectiveSpawns, Toggle3dDebugObjectiveSpawns) == 0x000008, "Member 'BP_FlameCheatManager_C_ThreedDebug_ObjectiveSpawns::Toggle3dDebugObjectiveSpawns' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ObjectiveSpawns, Temp_bool_Variable) == 0x000009, "Member 'BP_FlameCheatManager_C_ThreedDebug_ObjectiveSpawns::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ObjectiveSpawns, CallFunc_BooleanAND_ReturnValue) == 0x00000A, "Member 'BP_FlameCheatManager_C_ThreedDebug_ObjectiveSpawns::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ObjectiveSpawns, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'BP_FlameCheatManager_C_ThreedDebug_ObjectiveSpawns::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ObjectiveSpawns, CallFunc_BooleanAND_ReturnValue_1) == 0x000018, "Member 'BP_FlameCheatManager_C_ThreedDebug_ObjectiveSpawns::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ObjectiveSpawns, K2Node_DynamicCast_AsBP_Character_Script) == 0x000020, "Member 'BP_FlameCheatManager_C_ThreedDebug_ObjectiveSpawns::K2Node_DynamicCast_AsBP_Character_Script' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ObjectiveSpawns, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_FlameCheatManager_C_ThreedDebug_ObjectiveSpawns::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ObjectiveSpawns, CallFunc_BooleanAND_ReturnValue_2) == 0x000029, "Member 'BP_FlameCheatManager_C_ThreedDebug_ObjectiveSpawns::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ObjectiveSpawns, CallFunc_BooleanAND_ReturnValue_3) == 0x00002A, "Member 'BP_FlameCheatManager_C_ThreedDebug_ObjectiveSpawns::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ObjectiveSpawns, Temp_string_Variable) == 0x000030, "Member 'BP_FlameCheatManager_C_ThreedDebug_ObjectiveSpawns::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ObjectiveSpawns, CallFunc_BooleanAND_ReturnValue_4) == 0x000040, "Member 'BP_FlameCheatManager_C_ThreedDebug_ObjectiveSpawns::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ObjectiveSpawns, CallFunc_BooleanAND_ReturnValue_5) == 0x000041, "Member 'BP_FlameCheatManager_C_ThreedDebug_ObjectiveSpawns::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ObjectiveSpawns, Temp_string_Variable_1) == 0x000048, "Member 'BP_FlameCheatManager_C_ThreedDebug_ObjectiveSpawns::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ObjectiveSpawns, CallFunc_BooleanAND_ReturnValue_6) == 0x000058, "Member 'BP_FlameCheatManager_C_ThreedDebug_ObjectiveSpawns::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ObjectiveSpawns, K2Node_DynamicCast_AsHuman_Player_State) == 0x000060, "Member 'BP_FlameCheatManager_C_ThreedDebug_ObjectiveSpawns::K2Node_DynamicCast_AsHuman_Player_State' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ObjectiveSpawns, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'BP_FlameCheatManager_C_ThreedDebug_ObjectiveSpawns::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ObjectiveSpawns, K2Node_Select_Default) == 0x000070, "Member 'BP_FlameCheatManager_C_ThreedDebug_ObjectiveSpawns::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ObjectiveSpawns, CallFunc_GetPlayerName_ReturnValue) == 0x000080, "Member 'BP_FlameCheatManager_C_ThreedDebug_ObjectiveSpawns::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ObjectiveSpawns, CallFunc_Concat_StrStr_ReturnValue) == 0x000090, "Member 'BP_FlameCheatManager_C_ThreedDebug_ObjectiveSpawns::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ObjectiveSpawns, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000A0, "Member 'BP_FlameCheatManager_C_ThreedDebug_ObjectiveSpawns::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_ObjectiveSpawns, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000B0, "Member 'BP_FlameCheatManager_C_ThreedDebug_ObjectiveSpawns::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.3dDebug_SpawnedLoot
// 0x00C0 (0x00C0 - 0x0000)
struct BP_FlameCheatManager_C_ThreedDebug_SpawnedLoot final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Toggle3dDebugSpawnedLoot;                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_Script_C*                 K2Node_DynamicCast_AsBP_Character_Script;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_1;                            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerState*                      K2Node_DynamicCast_AsHuman_Player_State;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_ThreedDebug_SpawnedLoot) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_ThreedDebug_SpawnedLoot");
static_assert(sizeof(BP_FlameCheatManager_C_ThreedDebug_SpawnedLoot) == 0x0000C0, "Wrong size on BP_FlameCheatManager_C_ThreedDebug_SpawnedLoot");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_SpawnedLoot, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_ThreedDebug_SpawnedLoot::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_SpawnedLoot, Toggle3dDebugSpawnedLoot) == 0x000008, "Member 'BP_FlameCheatManager_C_ThreedDebug_SpawnedLoot::Toggle3dDebugSpawnedLoot' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_SpawnedLoot, Temp_bool_Variable) == 0x000009, "Member 'BP_FlameCheatManager_C_ThreedDebug_SpawnedLoot::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_SpawnedLoot, CallFunc_BooleanAND_ReturnValue) == 0x00000A, "Member 'BP_FlameCheatManager_C_ThreedDebug_SpawnedLoot::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_SpawnedLoot, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'BP_FlameCheatManager_C_ThreedDebug_SpawnedLoot::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_SpawnedLoot, CallFunc_BooleanAND_ReturnValue_1) == 0x000018, "Member 'BP_FlameCheatManager_C_ThreedDebug_SpawnedLoot::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_SpawnedLoot, K2Node_DynamicCast_AsBP_Character_Script) == 0x000020, "Member 'BP_FlameCheatManager_C_ThreedDebug_SpawnedLoot::K2Node_DynamicCast_AsBP_Character_Script' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_SpawnedLoot, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_FlameCheatManager_C_ThreedDebug_SpawnedLoot::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_SpawnedLoot, CallFunc_BooleanAND_ReturnValue_2) == 0x000029, "Member 'BP_FlameCheatManager_C_ThreedDebug_SpawnedLoot::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_SpawnedLoot, CallFunc_BooleanAND_ReturnValue_3) == 0x00002A, "Member 'BP_FlameCheatManager_C_ThreedDebug_SpawnedLoot::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_SpawnedLoot, Temp_string_Variable) == 0x000030, "Member 'BP_FlameCheatManager_C_ThreedDebug_SpawnedLoot::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_SpawnedLoot, CallFunc_BooleanAND_ReturnValue_4) == 0x000040, "Member 'BP_FlameCheatManager_C_ThreedDebug_SpawnedLoot::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_SpawnedLoot, CallFunc_BooleanAND_ReturnValue_5) == 0x000041, "Member 'BP_FlameCheatManager_C_ThreedDebug_SpawnedLoot::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_SpawnedLoot, Temp_string_Variable_1) == 0x000048, "Member 'BP_FlameCheatManager_C_ThreedDebug_SpawnedLoot::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_SpawnedLoot, CallFunc_BooleanAND_ReturnValue_6) == 0x000058, "Member 'BP_FlameCheatManager_C_ThreedDebug_SpawnedLoot::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_SpawnedLoot, K2Node_DynamicCast_AsHuman_Player_State) == 0x000060, "Member 'BP_FlameCheatManager_C_ThreedDebug_SpawnedLoot::K2Node_DynamicCast_AsHuman_Player_State' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_SpawnedLoot, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'BP_FlameCheatManager_C_ThreedDebug_SpawnedLoot::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_SpawnedLoot, K2Node_Select_Default) == 0x000070, "Member 'BP_FlameCheatManager_C_ThreedDebug_SpawnedLoot::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_SpawnedLoot, CallFunc_GetPlayerName_ReturnValue) == 0x000080, "Member 'BP_FlameCheatManager_C_ThreedDebug_SpawnedLoot::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_SpawnedLoot, CallFunc_Concat_StrStr_ReturnValue) == 0x000090, "Member 'BP_FlameCheatManager_C_ThreedDebug_SpawnedLoot::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_SpawnedLoot, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000A0, "Member 'BP_FlameCheatManager_C_ThreedDebug_SpawnedLoot::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_SpawnedLoot, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000B0, "Member 'BP_FlameCheatManager_C_ThreedDebug_SpawnedLoot::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.3dDebug_LootSpawns
// 0x00C0 (0x00C0 - 0x0000)
struct BP_FlameCheatManager_C_ThreedDebug_LootSpawns final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Toggle3dDebugLootSpawns;                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_Script_C*                 K2Node_DynamicCast_AsBP_Character_Script;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_1;                            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerState*                      K2Node_DynamicCast_AsHuman_Player_State;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_ThreedDebug_LootSpawns) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_ThreedDebug_LootSpawns");
static_assert(sizeof(BP_FlameCheatManager_C_ThreedDebug_LootSpawns) == 0x0000C0, "Wrong size on BP_FlameCheatManager_C_ThreedDebug_LootSpawns");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_LootSpawns, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_ThreedDebug_LootSpawns::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_LootSpawns, Toggle3dDebugLootSpawns) == 0x000008, "Member 'BP_FlameCheatManager_C_ThreedDebug_LootSpawns::Toggle3dDebugLootSpawns' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_LootSpawns, Temp_bool_Variable) == 0x000009, "Member 'BP_FlameCheatManager_C_ThreedDebug_LootSpawns::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_LootSpawns, CallFunc_BooleanAND_ReturnValue) == 0x00000A, "Member 'BP_FlameCheatManager_C_ThreedDebug_LootSpawns::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_LootSpawns, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'BP_FlameCheatManager_C_ThreedDebug_LootSpawns::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_LootSpawns, CallFunc_BooleanAND_ReturnValue_1) == 0x000018, "Member 'BP_FlameCheatManager_C_ThreedDebug_LootSpawns::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_LootSpawns, K2Node_DynamicCast_AsBP_Character_Script) == 0x000020, "Member 'BP_FlameCheatManager_C_ThreedDebug_LootSpawns::K2Node_DynamicCast_AsBP_Character_Script' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_LootSpawns, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_FlameCheatManager_C_ThreedDebug_LootSpawns::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_LootSpawns, CallFunc_BooleanAND_ReturnValue_2) == 0x000029, "Member 'BP_FlameCheatManager_C_ThreedDebug_LootSpawns::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_LootSpawns, CallFunc_BooleanAND_ReturnValue_3) == 0x00002A, "Member 'BP_FlameCheatManager_C_ThreedDebug_LootSpawns::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_LootSpawns, Temp_string_Variable) == 0x000030, "Member 'BP_FlameCheatManager_C_ThreedDebug_LootSpawns::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_LootSpawns, CallFunc_BooleanAND_ReturnValue_4) == 0x000040, "Member 'BP_FlameCheatManager_C_ThreedDebug_LootSpawns::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_LootSpawns, CallFunc_BooleanAND_ReturnValue_5) == 0x000041, "Member 'BP_FlameCheatManager_C_ThreedDebug_LootSpawns::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_LootSpawns, Temp_string_Variable_1) == 0x000048, "Member 'BP_FlameCheatManager_C_ThreedDebug_LootSpawns::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_LootSpawns, CallFunc_BooleanAND_ReturnValue_6) == 0x000058, "Member 'BP_FlameCheatManager_C_ThreedDebug_LootSpawns::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_LootSpawns, K2Node_DynamicCast_AsHuman_Player_State) == 0x000060, "Member 'BP_FlameCheatManager_C_ThreedDebug_LootSpawns::K2Node_DynamicCast_AsHuman_Player_State' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_LootSpawns, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'BP_FlameCheatManager_C_ThreedDebug_LootSpawns::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_LootSpawns, K2Node_Select_Default) == 0x000070, "Member 'BP_FlameCheatManager_C_ThreedDebug_LootSpawns::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_LootSpawns, CallFunc_GetPlayerName_ReturnValue) == 0x000080, "Member 'BP_FlameCheatManager_C_ThreedDebug_LootSpawns::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_LootSpawns, CallFunc_Concat_StrStr_ReturnValue) == 0x000090, "Member 'BP_FlameCheatManager_C_ThreedDebug_LootSpawns::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_LootSpawns, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000A0, "Member 'BP_FlameCheatManager_C_ThreedDebug_LootSpawns::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_LootSpawns, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000B0, "Member 'BP_FlameCheatManager_C_ThreedDebug_LootSpawns::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.3dDebug_PlayerStarts
// 0x00C0 (0x00C0 - 0x0000)
struct BP_FlameCheatManager_C_ThreedDebug_PlayerStarts final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Toggle3dDebugPlayerStarts;                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_Script_C*                 K2Node_DynamicCast_AsBP_Character_Script;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_1;                            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerState*                      K2Node_DynamicCast_AsHuman_Player_State;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_ThreedDebug_PlayerStarts) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_ThreedDebug_PlayerStarts");
static_assert(sizeof(BP_FlameCheatManager_C_ThreedDebug_PlayerStarts) == 0x0000C0, "Wrong size on BP_FlameCheatManager_C_ThreedDebug_PlayerStarts");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_PlayerStarts, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_ThreedDebug_PlayerStarts::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_PlayerStarts, Toggle3dDebugPlayerStarts) == 0x000008, "Member 'BP_FlameCheatManager_C_ThreedDebug_PlayerStarts::Toggle3dDebugPlayerStarts' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_PlayerStarts, Temp_bool_Variable) == 0x000009, "Member 'BP_FlameCheatManager_C_ThreedDebug_PlayerStarts::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_PlayerStarts, CallFunc_BooleanAND_ReturnValue) == 0x00000A, "Member 'BP_FlameCheatManager_C_ThreedDebug_PlayerStarts::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_PlayerStarts, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'BP_FlameCheatManager_C_ThreedDebug_PlayerStarts::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_PlayerStarts, CallFunc_BooleanAND_ReturnValue_1) == 0x000018, "Member 'BP_FlameCheatManager_C_ThreedDebug_PlayerStarts::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_PlayerStarts, K2Node_DynamicCast_AsBP_Character_Script) == 0x000020, "Member 'BP_FlameCheatManager_C_ThreedDebug_PlayerStarts::K2Node_DynamicCast_AsBP_Character_Script' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_PlayerStarts, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_FlameCheatManager_C_ThreedDebug_PlayerStarts::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_PlayerStarts, CallFunc_BooleanAND_ReturnValue_2) == 0x000029, "Member 'BP_FlameCheatManager_C_ThreedDebug_PlayerStarts::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_PlayerStarts, CallFunc_BooleanAND_ReturnValue_3) == 0x00002A, "Member 'BP_FlameCheatManager_C_ThreedDebug_PlayerStarts::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_PlayerStarts, Temp_string_Variable) == 0x000030, "Member 'BP_FlameCheatManager_C_ThreedDebug_PlayerStarts::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_PlayerStarts, CallFunc_BooleanAND_ReturnValue_4) == 0x000040, "Member 'BP_FlameCheatManager_C_ThreedDebug_PlayerStarts::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_PlayerStarts, CallFunc_BooleanAND_ReturnValue_5) == 0x000041, "Member 'BP_FlameCheatManager_C_ThreedDebug_PlayerStarts::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_PlayerStarts, Temp_string_Variable_1) == 0x000048, "Member 'BP_FlameCheatManager_C_ThreedDebug_PlayerStarts::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_PlayerStarts, CallFunc_BooleanAND_ReturnValue_6) == 0x000058, "Member 'BP_FlameCheatManager_C_ThreedDebug_PlayerStarts::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_PlayerStarts, K2Node_DynamicCast_AsHuman_Player_State) == 0x000060, "Member 'BP_FlameCheatManager_C_ThreedDebug_PlayerStarts::K2Node_DynamicCast_AsHuman_Player_State' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_PlayerStarts, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'BP_FlameCheatManager_C_ThreedDebug_PlayerStarts::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_PlayerStarts, K2Node_Select_Default) == 0x000070, "Member 'BP_FlameCheatManager_C_ThreedDebug_PlayerStarts::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_PlayerStarts, CallFunc_GetPlayerName_ReturnValue) == 0x000080, "Member 'BP_FlameCheatManager_C_ThreedDebug_PlayerStarts::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_PlayerStarts, CallFunc_Concat_StrStr_ReturnValue) == 0x000090, "Member 'BP_FlameCheatManager_C_ThreedDebug_PlayerStarts::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_PlayerStarts, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000A0, "Member 'BP_FlameCheatManager_C_ThreedDebug_PlayerStarts::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_PlayerStarts, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000B0, "Member 'BP_FlameCheatManager_C_ThreedDebug_PlayerStarts::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.3dDebug_Player
// 0x00C0 (0x00C0 - 0x0000)
struct BP_FlameCheatManager_C_ThreedDebug_Player final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Toggle3dDebugPlayer;                               // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_Script_C*                 K2Node_DynamicCast_AsBP_Character_Script;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_1;                            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerState*                      K2Node_DynamicCast_AsHuman_Player_State;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_ThreedDebug_Player) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_ThreedDebug_Player");
static_assert(sizeof(BP_FlameCheatManager_C_ThreedDebug_Player) == 0x0000C0, "Wrong size on BP_FlameCheatManager_C_ThreedDebug_Player");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_Player, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_ThreedDebug_Player::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_Player, Toggle3dDebugPlayer) == 0x000008, "Member 'BP_FlameCheatManager_C_ThreedDebug_Player::Toggle3dDebugPlayer' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_Player, Temp_bool_Variable) == 0x000009, "Member 'BP_FlameCheatManager_C_ThreedDebug_Player::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_Player, CallFunc_BooleanAND_ReturnValue) == 0x00000A, "Member 'BP_FlameCheatManager_C_ThreedDebug_Player::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_Player, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'BP_FlameCheatManager_C_ThreedDebug_Player::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_Player, CallFunc_BooleanAND_ReturnValue_1) == 0x000018, "Member 'BP_FlameCheatManager_C_ThreedDebug_Player::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_Player, K2Node_DynamicCast_AsBP_Character_Script) == 0x000020, "Member 'BP_FlameCheatManager_C_ThreedDebug_Player::K2Node_DynamicCast_AsBP_Character_Script' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_Player, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_FlameCheatManager_C_ThreedDebug_Player::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_Player, CallFunc_BooleanAND_ReturnValue_2) == 0x000029, "Member 'BP_FlameCheatManager_C_ThreedDebug_Player::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_Player, CallFunc_BooleanAND_ReturnValue_3) == 0x00002A, "Member 'BP_FlameCheatManager_C_ThreedDebug_Player::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_Player, Temp_string_Variable) == 0x000030, "Member 'BP_FlameCheatManager_C_ThreedDebug_Player::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_Player, CallFunc_BooleanAND_ReturnValue_4) == 0x000040, "Member 'BP_FlameCheatManager_C_ThreedDebug_Player::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_Player, CallFunc_BooleanAND_ReturnValue_5) == 0x000041, "Member 'BP_FlameCheatManager_C_ThreedDebug_Player::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_Player, Temp_string_Variable_1) == 0x000048, "Member 'BP_FlameCheatManager_C_ThreedDebug_Player::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_Player, CallFunc_BooleanAND_ReturnValue_6) == 0x000058, "Member 'BP_FlameCheatManager_C_ThreedDebug_Player::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_Player, K2Node_DynamicCast_AsHuman_Player_State) == 0x000060, "Member 'BP_FlameCheatManager_C_ThreedDebug_Player::K2Node_DynamicCast_AsHuman_Player_State' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_Player, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'BP_FlameCheatManager_C_ThreedDebug_Player::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_Player, K2Node_Select_Default) == 0x000070, "Member 'BP_FlameCheatManager_C_ThreedDebug_Player::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_Player, CallFunc_GetPlayerName_ReturnValue) == 0x000080, "Member 'BP_FlameCheatManager_C_ThreedDebug_Player::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_Player, CallFunc_Concat_StrStr_ReturnValue) == 0x000090, "Member 'BP_FlameCheatManager_C_ThreedDebug_Player::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_Player, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000A0, "Member 'BP_FlameCheatManager_C_ThreedDebug_Player::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_Player, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000B0, "Member 'BP_FlameCheatManager_C_ThreedDebug_Player::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.ToggleHitInfo
// 0x00A0 (0x00A0 - 0x0000)
struct BP_FlameCheatManager_C_ToggleHitInfo final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HitInfo;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BulletManager_C*                    BulletManager;                                     // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerState*                      K2Node_DynamicCast_AsHuman_Player_State;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_ToggleHitInfo) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_ToggleHitInfo");
static_assert(sizeof(BP_FlameCheatManager_C_ToggleHitInfo) == 0x0000A0, "Wrong size on BP_FlameCheatManager_C_ToggleHitInfo");
static_assert(offsetof(BP_FlameCheatManager_C_ToggleHitInfo, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_ToggleHitInfo::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ToggleHitInfo, HitInfo) == 0x000008, "Member 'BP_FlameCheatManager_C_ToggleHitInfo::HitInfo' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ToggleHitInfo, BulletManager) == 0x000010, "Member 'BP_FlameCheatManager_C_ToggleHitInfo::BulletManager' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ToggleHitInfo, Temp_bool_Variable) == 0x000018, "Member 'BP_FlameCheatManager_C_ToggleHitInfo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ToggleHitInfo, K2Node_DynamicCast_AsHuman_Player_State) == 0x000020, "Member 'BP_FlameCheatManager_C_ToggleHitInfo::K2Node_DynamicCast_AsHuman_Player_State' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ToggleHitInfo, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_FlameCheatManager_C_ToggleHitInfo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ToggleHitInfo, Temp_string_Variable) == 0x000030, "Member 'BP_FlameCheatManager_C_ToggleHitInfo::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ToggleHitInfo, CallFunc_GetPlayerName_ReturnValue) == 0x000040, "Member 'BP_FlameCheatManager_C_ToggleHitInfo::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ToggleHitInfo, CallFunc_Concat_StrStr_ReturnValue) == 0x000050, "Member 'BP_FlameCheatManager_C_ToggleHitInfo::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ToggleHitInfo, Temp_string_Variable_1) == 0x000060, "Member 'BP_FlameCheatManager_C_ToggleHitInfo::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ToggleHitInfo, K2Node_Select_Default) == 0x000070, "Member 'BP_FlameCheatManager_C_ToggleHitInfo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ToggleHitInfo, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000080, "Member 'BP_FlameCheatManager_C_ToggleHitInfo::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ToggleHitInfo, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000090, "Member 'BP_FlameCheatManager_C_ToggleHitInfo::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.TradeInResources
// 0x0008 (0x0008 - 0x0000)
struct BP_FlameCheatManager_C_TradeInResources final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_TradeInResources) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_TradeInResources");
static_assert(sizeof(BP_FlameCheatManager_C_TradeInResources) == 0x000008, "Wrong size on BP_FlameCheatManager_C_TradeInResources");
static_assert(offsetof(BP_FlameCheatManager_C_TradeInResources, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_TradeInResources::Controller' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.RetreatAddResources
// 0x0100 (0x0100 - 0x0000)
struct BP_FlameCheatManager_C_RetreatAddResources final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Resource;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetClassDisplayName_ReturnValue;          // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AHumanCharacter*                        K2Node_DynamicCast_AsHuman_Character;              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UItemsGrid*                             CallFunc_GetBackpack_ReturnValue;                  // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_StoreResource_ReturnValue;                // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerState*                      K2Node_DynamicCast_AsHuman_Player_State;           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_RetreatAddResources) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_RetreatAddResources");
static_assert(sizeof(BP_FlameCheatManager_C_RetreatAddResources) == 0x000100, "Wrong size on BP_FlameCheatManager_C_RetreatAddResources");
static_assert(offsetof(BP_FlameCheatManager_C_RetreatAddResources, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_RetreatAddResources::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_RetreatAddResources, Resource) == 0x000008, "Member 'BP_FlameCheatManager_C_RetreatAddResources::Resource' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_RetreatAddResources, Count) == 0x000010, "Member 'BP_FlameCheatManager_C_RetreatAddResources::Count' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_RetreatAddResources, CallFunc_Conv_IntToString_ReturnValue) == 0x000018, "Member 'BP_FlameCheatManager_C_RetreatAddResources::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_RetreatAddResources, CallFunc_GetClassDisplayName_ReturnValue) == 0x000028, "Member 'BP_FlameCheatManager_C_RetreatAddResources::CallFunc_GetClassDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_RetreatAddResources, CallFunc_Concat_StrStr_ReturnValue) == 0x000038, "Member 'BP_FlameCheatManager_C_RetreatAddResources::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_RetreatAddResources, CallFunc_K2_GetPawn_ReturnValue) == 0x000048, "Member 'BP_FlameCheatManager_C_RetreatAddResources::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_RetreatAddResources, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000050, "Member 'BP_FlameCheatManager_C_RetreatAddResources::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_RetreatAddResources, K2Node_DynamicCast_AsHuman_Character) == 0x000060, "Member 'BP_FlameCheatManager_C_RetreatAddResources::K2Node_DynamicCast_AsHuman_Character' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_RetreatAddResources, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BP_FlameCheatManager_C_RetreatAddResources::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_RetreatAddResources, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000070, "Member 'BP_FlameCheatManager_C_RetreatAddResources::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_RetreatAddResources, CallFunc_GetBackpack_ReturnValue) == 0x000080, "Member 'BP_FlameCheatManager_C_RetreatAddResources::CallFunc_GetBackpack_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_RetreatAddResources, CallFunc_StoreResource_ReturnValue) == 0x000088, "Member 'BP_FlameCheatManager_C_RetreatAddResources::CallFunc_StoreResource_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_RetreatAddResources, K2Node_DynamicCast_AsHuman_Player_State) == 0x000090, "Member 'BP_FlameCheatManager_C_RetreatAddResources::K2Node_DynamicCast_AsHuman_Player_State' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_RetreatAddResources, K2Node_DynamicCast_bSuccess_1) == 0x000098, "Member 'BP_FlameCheatManager_C_RetreatAddResources::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_RetreatAddResources, CallFunc_GetPlayerName_ReturnValue) == 0x0000A0, "Member 'BP_FlameCheatManager_C_RetreatAddResources::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_RetreatAddResources, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000B0, "Member 'BP_FlameCheatManager_C_RetreatAddResources::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_RetreatAddResources, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0000C0, "Member 'BP_FlameCheatManager_C_RetreatAddResources::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_RetreatAddResources, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0000D0, "Member 'BP_FlameCheatManager_C_RetreatAddResources::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_RetreatAddResources, CallFunc_Concat_StrStr_ReturnValue_6) == 0x0000E0, "Member 'BP_FlameCheatManager_C_RetreatAddResources::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_RetreatAddResources, CallFunc_Concat_StrStr_ReturnValue_7) == 0x0000F0, "Member 'BP_FlameCheatManager_C_RetreatAddResources::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.VictoryAddPlayerLootbox
// 0x0018 (0x0018 - 0x0000)
struct BP_FlameCheatManager_C_VictoryAddPlayerLootbox final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Class_0;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InInt;                                             // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_VictoryAddPlayerLootbox) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_VictoryAddPlayerLootbox");
static_assert(sizeof(BP_FlameCheatManager_C_VictoryAddPlayerLootbox) == 0x000018, "Wrong size on BP_FlameCheatManager_C_VictoryAddPlayerLootbox");
static_assert(offsetof(BP_FlameCheatManager_C_VictoryAddPlayerLootbox, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_VictoryAddPlayerLootbox::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_VictoryAddPlayerLootbox, Class_0) == 0x000008, "Member 'BP_FlameCheatManager_C_VictoryAddPlayerLootbox::Class_0' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_VictoryAddPlayerLootbox, InInt) == 0x000010, "Member 'BP_FlameCheatManager_C_VictoryAddPlayerLootbox::InInt' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.3dDebug_BlockingVolumes
// 0x00C0 (0x00C0 - 0x0000)
struct BP_FlameCheatManager_C_ThreedDebug_BlockingVolumes final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Toggle_3d_Debug_Blocking_Volumes;                  // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_Script_C*                 K2Node_DynamicCast_AsBP_Character_Script;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_1;                            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerState*                      K2Node_DynamicCast_AsHuman_Player_State;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_ThreedDebug_BlockingVolumes) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_ThreedDebug_BlockingVolumes");
static_assert(sizeof(BP_FlameCheatManager_C_ThreedDebug_BlockingVolumes) == 0x0000C0, "Wrong size on BP_FlameCheatManager_C_ThreedDebug_BlockingVolumes");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_BlockingVolumes, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_ThreedDebug_BlockingVolumes::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_BlockingVolumes, Toggle_3d_Debug_Blocking_Volumes) == 0x000008, "Member 'BP_FlameCheatManager_C_ThreedDebug_BlockingVolumes::Toggle_3d_Debug_Blocking_Volumes' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_BlockingVolumes, Temp_bool_Variable) == 0x000009, "Member 'BP_FlameCheatManager_C_ThreedDebug_BlockingVolumes::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_BlockingVolumes, CallFunc_BooleanAND_ReturnValue) == 0x00000A, "Member 'BP_FlameCheatManager_C_ThreedDebug_BlockingVolumes::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_BlockingVolumes, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'BP_FlameCheatManager_C_ThreedDebug_BlockingVolumes::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_BlockingVolumes, CallFunc_BooleanAND_ReturnValue_1) == 0x000018, "Member 'BP_FlameCheatManager_C_ThreedDebug_BlockingVolumes::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_BlockingVolumes, K2Node_DynamicCast_AsBP_Character_Script) == 0x000020, "Member 'BP_FlameCheatManager_C_ThreedDebug_BlockingVolumes::K2Node_DynamicCast_AsBP_Character_Script' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_BlockingVolumes, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_FlameCheatManager_C_ThreedDebug_BlockingVolumes::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_BlockingVolumes, CallFunc_BooleanAND_ReturnValue_2) == 0x000029, "Member 'BP_FlameCheatManager_C_ThreedDebug_BlockingVolumes::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_BlockingVolumes, CallFunc_BooleanAND_ReturnValue_3) == 0x00002A, "Member 'BP_FlameCheatManager_C_ThreedDebug_BlockingVolumes::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_BlockingVolumes, Temp_string_Variable) == 0x000030, "Member 'BP_FlameCheatManager_C_ThreedDebug_BlockingVolumes::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_BlockingVolumes, CallFunc_BooleanAND_ReturnValue_4) == 0x000040, "Member 'BP_FlameCheatManager_C_ThreedDebug_BlockingVolumes::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_BlockingVolumes, CallFunc_BooleanAND_ReturnValue_5) == 0x000041, "Member 'BP_FlameCheatManager_C_ThreedDebug_BlockingVolumes::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_BlockingVolumes, Temp_string_Variable_1) == 0x000048, "Member 'BP_FlameCheatManager_C_ThreedDebug_BlockingVolumes::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_BlockingVolumes, CallFunc_BooleanAND_ReturnValue_6) == 0x000058, "Member 'BP_FlameCheatManager_C_ThreedDebug_BlockingVolumes::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_BlockingVolumes, K2Node_DynamicCast_AsHuman_Player_State) == 0x000060, "Member 'BP_FlameCheatManager_C_ThreedDebug_BlockingVolumes::K2Node_DynamicCast_AsHuman_Player_State' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_BlockingVolumes, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'BP_FlameCheatManager_C_ThreedDebug_BlockingVolumes::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_BlockingVolumes, K2Node_Select_Default) == 0x000070, "Member 'BP_FlameCheatManager_C_ThreedDebug_BlockingVolumes::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_BlockingVolumes, CallFunc_GetPlayerName_ReturnValue) == 0x000080, "Member 'BP_FlameCheatManager_C_ThreedDebug_BlockingVolumes::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_BlockingVolumes, CallFunc_Concat_StrStr_ReturnValue) == 0x000090, "Member 'BP_FlameCheatManager_C_ThreedDebug_BlockingVolumes::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_BlockingVolumes, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000A0, "Member 'BP_FlameCheatManager_C_ThreedDebug_BlockingVolumes::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ThreedDebug_BlockingVolumes, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000B0, "Member 'BP_FlameCheatManager_C_ThreedDebug_BlockingVolumes::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.Set Infinite Bullets
// 0x00A8 (0x00A8 - 0x0000)
struct BP_FlameCheatManager_C_Set_Infinite_Bullets final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Infinite_Bullets;                                  // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanCharacter*                        K2Node_DynamicCast_AsHuman_Character;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerState*                      K2Node_DynamicCast_AsHuman_Player_State;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable;                              // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_Set_Infinite_Bullets) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_Set_Infinite_Bullets");
static_assert(sizeof(BP_FlameCheatManager_C_Set_Infinite_Bullets) == 0x0000A8, "Wrong size on BP_FlameCheatManager_C_Set_Infinite_Bullets");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Infinite_Bullets, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_Set_Infinite_Bullets::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Infinite_Bullets, Infinite_Bullets) == 0x000008, "Member 'BP_FlameCheatManager_C_Set_Infinite_Bullets::Infinite_Bullets' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Infinite_Bullets, Temp_bool_Variable) == 0x000009, "Member 'BP_FlameCheatManager_C_Set_Infinite_Bullets::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Infinite_Bullets, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'BP_FlameCheatManager_C_Set_Infinite_Bullets::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Infinite_Bullets, K2Node_DynamicCast_AsHuman_Character) == 0x000018, "Member 'BP_FlameCheatManager_C_Set_Infinite_Bullets::K2Node_DynamicCast_AsHuman_Character' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Infinite_Bullets, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_FlameCheatManager_C_Set_Infinite_Bullets::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Infinite_Bullets, K2Node_DynamicCast_AsHuman_Player_State) == 0x000028, "Member 'BP_FlameCheatManager_C_Set_Infinite_Bullets::K2Node_DynamicCast_AsHuman_Player_State' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Infinite_Bullets, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_FlameCheatManager_C_Set_Infinite_Bullets::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Infinite_Bullets, CallFunc_GetPlayerName_ReturnValue) == 0x000038, "Member 'BP_FlameCheatManager_C_Set_Infinite_Bullets::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Infinite_Bullets, CallFunc_Concat_StrStr_ReturnValue) == 0x000048, "Member 'BP_FlameCheatManager_C_Set_Infinite_Bullets::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Infinite_Bullets, Temp_string_Variable) == 0x000058, "Member 'BP_FlameCheatManager_C_Set_Infinite_Bullets::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Infinite_Bullets, Temp_string_Variable_1) == 0x000068, "Member 'BP_FlameCheatManager_C_Set_Infinite_Bullets::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Infinite_Bullets, K2Node_Select_Default) == 0x000078, "Member 'BP_FlameCheatManager_C_Set_Infinite_Bullets::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Infinite_Bullets, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000088, "Member 'BP_FlameCheatManager_C_Set_Infinite_Bullets::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Set_Infinite_Bullets, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000098, "Member 'BP_FlameCheatManager_C_Set_Infinite_Bullets::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.AddShelterResourceElapsedTime
// 0x0020 (0x0020 - 0x0000)
struct BP_FlameCheatManager_C_AddShelterResourceElapsedTime final
{
public:
	int32                                         TimeToElapse;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_ShelterImprovementBase_C*>   Shelter_Improvements;                              // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class APlayerState*                           Player_State;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_AddShelterResourceElapsedTime) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_AddShelterResourceElapsedTime");
static_assert(sizeof(BP_FlameCheatManager_C_AddShelterResourceElapsedTime) == 0x000020, "Wrong size on BP_FlameCheatManager_C_AddShelterResourceElapsedTime");
static_assert(offsetof(BP_FlameCheatManager_C_AddShelterResourceElapsedTime, TimeToElapse) == 0x000000, "Member 'BP_FlameCheatManager_C_AddShelterResourceElapsedTime::TimeToElapse' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_AddShelterResourceElapsedTime, Shelter_Improvements) == 0x000008, "Member 'BP_FlameCheatManager_C_AddShelterResourceElapsedTime::Shelter_Improvements' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_AddShelterResourceElapsedTime, Player_State) == 0x000018, "Member 'BP_FlameCheatManager_C_AddShelterResourceElapsedTime::Player_State' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.ShowTracedActorDisplayName
// 0x00A8 (0x00A8 - 0x0000)
struct BP_FlameCheatManager_C_ShowTracedActorDisplayName final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowTracedActorDisplayName_0;                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AHumanPlayerState*                      K2Node_DynamicCast_AsHuman_Player_State;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABP_Character_Script_C*                 K2Node_DynamicCast_AsBP_Character_Script;          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_ShowTracedActorDisplayName) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_ShowTracedActorDisplayName");
static_assert(sizeof(BP_FlameCheatManager_C_ShowTracedActorDisplayName) == 0x0000A8, "Wrong size on BP_FlameCheatManager_C_ShowTracedActorDisplayName");
static_assert(offsetof(BP_FlameCheatManager_C_ShowTracedActorDisplayName, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_ShowTracedActorDisplayName::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowTracedActorDisplayName, ShowTracedActorDisplayName_0) == 0x000008, "Member 'BP_FlameCheatManager_C_ShowTracedActorDisplayName::ShowTracedActorDisplayName_0' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowTracedActorDisplayName, Temp_bool_Variable) == 0x000009, "Member 'BP_FlameCheatManager_C_ShowTracedActorDisplayName::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowTracedActorDisplayName, Temp_string_Variable) == 0x000010, "Member 'BP_FlameCheatManager_C_ShowTracedActorDisplayName::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowTracedActorDisplayName, Temp_string_Variable_1) == 0x000020, "Member 'BP_FlameCheatManager_C_ShowTracedActorDisplayName::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowTracedActorDisplayName, K2Node_Select_Default) == 0x000030, "Member 'BP_FlameCheatManager_C_ShowTracedActorDisplayName::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowTracedActorDisplayName, K2Node_DynamicCast_AsHuman_Player_State) == 0x000040, "Member 'BP_FlameCheatManager_C_ShowTracedActorDisplayName::K2Node_DynamicCast_AsHuman_Player_State' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowTracedActorDisplayName, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_FlameCheatManager_C_ShowTracedActorDisplayName::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowTracedActorDisplayName, CallFunc_GetPlayerName_ReturnValue) == 0x000050, "Member 'BP_FlameCheatManager_C_ShowTracedActorDisplayName::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowTracedActorDisplayName, CallFunc_K2_GetPawn_ReturnValue) == 0x000060, "Member 'BP_FlameCheatManager_C_ShowTracedActorDisplayName::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowTracedActorDisplayName, CallFunc_Concat_StrStr_ReturnValue) == 0x000068, "Member 'BP_FlameCheatManager_C_ShowTracedActorDisplayName::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowTracedActorDisplayName, K2Node_DynamicCast_AsBP_Character_Script) == 0x000078, "Member 'BP_FlameCheatManager_C_ShowTracedActorDisplayName::K2Node_DynamicCast_AsBP_Character_Script' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowTracedActorDisplayName, K2Node_DynamicCast_bSuccess_1) == 0x000080, "Member 'BP_FlameCheatManager_C_ShowTracedActorDisplayName::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowTracedActorDisplayName, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000088, "Member 'BP_FlameCheatManager_C_ShowTracedActorDisplayName::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowTracedActorDisplayName, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000098, "Member 'BP_FlameCheatManager_C_ShowTracedActorDisplayName::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.EquipConsumable
// 0x0028 (0x0028 - 0x0000)
struct BP_FlameCheatManager_C_EquipConsumable final
{
public:
	class ABP_PlayerController_C*                 Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Consumable;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UnEquip;                                           // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Script_C*          K2Node_DynamicCast_AsBP_Player_Controller_Script;  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FlameCheatManager_C_EquipConsumable) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_EquipConsumable");
static_assert(sizeof(BP_FlameCheatManager_C_EquipConsumable) == 0x000028, "Wrong size on BP_FlameCheatManager_C_EquipConsumable");
static_assert(offsetof(BP_FlameCheatManager_C_EquipConsumable, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_EquipConsumable::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_EquipConsumable, Consumable) == 0x000008, "Member 'BP_FlameCheatManager_C_EquipConsumable::Consumable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_EquipConsumable, UnEquip) == 0x000010, "Member 'BP_FlameCheatManager_C_EquipConsumable::UnEquip' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_EquipConsumable, K2Node_DynamicCast_AsBP_Player_Controller_Script) == 0x000018, "Member 'BP_FlameCheatManager_C_EquipConsumable::K2Node_DynamicCast_AsBP_Player_Controller_Script' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_EquipConsumable, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_FlameCheatManager_C_EquipConsumable::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.ShowPlayerCount
// 0x00A8 (0x00A8 - 0x0000)
struct BP_FlameCheatManager_C_ShowPlayerCount final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ToggleShowPlayerCount;                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerState*                      K2Node_DynamicCast_AsHuman_Player_State;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_Script_C*                 K2Node_DynamicCast_AsBP_Character_Script;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_ShowPlayerCount) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_ShowPlayerCount");
static_assert(sizeof(BP_FlameCheatManager_C_ShowPlayerCount) == 0x0000A8, "Wrong size on BP_FlameCheatManager_C_ShowPlayerCount");
static_assert(offsetof(BP_FlameCheatManager_C_ShowPlayerCount, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_ShowPlayerCount::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowPlayerCount, ToggleShowPlayerCount) == 0x000008, "Member 'BP_FlameCheatManager_C_ShowPlayerCount::ToggleShowPlayerCount' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowPlayerCount, Temp_bool_Variable) == 0x000009, "Member 'BP_FlameCheatManager_C_ShowPlayerCount::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowPlayerCount, Temp_string_Variable) == 0x000010, "Member 'BP_FlameCheatManager_C_ShowPlayerCount::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowPlayerCount, Temp_string_Variable_1) == 0x000020, "Member 'BP_FlameCheatManager_C_ShowPlayerCount::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowPlayerCount, CallFunc_K2_GetPawn_ReturnValue) == 0x000030, "Member 'BP_FlameCheatManager_C_ShowPlayerCount::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowPlayerCount, K2Node_DynamicCast_AsHuman_Player_State) == 0x000038, "Member 'BP_FlameCheatManager_C_ShowPlayerCount::K2Node_DynamicCast_AsHuman_Player_State' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowPlayerCount, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_FlameCheatManager_C_ShowPlayerCount::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowPlayerCount, K2Node_DynamicCast_AsBP_Character_Script) == 0x000048, "Member 'BP_FlameCheatManager_C_ShowPlayerCount::K2Node_DynamicCast_AsBP_Character_Script' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowPlayerCount, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BP_FlameCheatManager_C_ShowPlayerCount::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowPlayerCount, CallFunc_GetPlayerName_ReturnValue) == 0x000058, "Member 'BP_FlameCheatManager_C_ShowPlayerCount::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowPlayerCount, CallFunc_Concat_StrStr_ReturnValue) == 0x000068, "Member 'BP_FlameCheatManager_C_ShowPlayerCount::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowPlayerCount, K2Node_Select_Default) == 0x000078, "Member 'BP_FlameCheatManager_C_ShowPlayerCount::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowPlayerCount, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000088, "Member 'BP_FlameCheatManager_C_ShowPlayerCount::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ShowPlayerCount, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000098, "Member 'BP_FlameCheatManager_C_ShowPlayerCount::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.Toggle Bullet Impact Material
// 0x0090 (0x0090 - 0x0000)
struct BP_FlameCheatManager_C_Toggle_Bullet_Impact_Material final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ToggleBulletMaterialImpact;                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerState*                      K2Node_DynamicCast_AsHuman_Player_State;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_Toggle_Bullet_Impact_Material) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_Toggle_Bullet_Impact_Material");
static_assert(sizeof(BP_FlameCheatManager_C_Toggle_Bullet_Impact_Material) == 0x000090, "Wrong size on BP_FlameCheatManager_C_Toggle_Bullet_Impact_Material");
static_assert(offsetof(BP_FlameCheatManager_C_Toggle_Bullet_Impact_Material, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_Toggle_Bullet_Impact_Material::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Toggle_Bullet_Impact_Material, ToggleBulletMaterialImpact) == 0x000008, "Member 'BP_FlameCheatManager_C_Toggle_Bullet_Impact_Material::ToggleBulletMaterialImpact' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Toggle_Bullet_Impact_Material, Temp_bool_Variable) == 0x000009, "Member 'BP_FlameCheatManager_C_Toggle_Bullet_Impact_Material::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Toggle_Bullet_Impact_Material, K2Node_DynamicCast_AsHuman_Player_State) == 0x000010, "Member 'BP_FlameCheatManager_C_Toggle_Bullet_Impact_Material::K2Node_DynamicCast_AsHuman_Player_State' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Toggle_Bullet_Impact_Material, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_FlameCheatManager_C_Toggle_Bullet_Impact_Material::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Toggle_Bullet_Impact_Material, Temp_string_Variable) == 0x000020, "Member 'BP_FlameCheatManager_C_Toggle_Bullet_Impact_Material::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Toggle_Bullet_Impact_Material, CallFunc_GetPlayerName_ReturnValue) == 0x000030, "Member 'BP_FlameCheatManager_C_Toggle_Bullet_Impact_Material::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Toggle_Bullet_Impact_Material, CallFunc_Concat_StrStr_ReturnValue) == 0x000040, "Member 'BP_FlameCheatManager_C_Toggle_Bullet_Impact_Material::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Toggle_Bullet_Impact_Material, Temp_string_Variable_1) == 0x000050, "Member 'BP_FlameCheatManager_C_Toggle_Bullet_Impact_Material::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Toggle_Bullet_Impact_Material, K2Node_Select_Default) == 0x000060, "Member 'BP_FlameCheatManager_C_Toggle_Bullet_Impact_Material::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Toggle_Bullet_Impact_Material, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000070, "Member 'BP_FlameCheatManager_C_Toggle_Bullet_Impact_Material::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Toggle_Bullet_Impact_Material, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000080, "Member 'BP_FlameCheatManager_C_Toggle_Bullet_Impact_Material::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.CreateTestingPawns
// 0x00A8 (0x00A8 - 0x0000)
struct BP_FlameCheatManager_C_CreateTestingPawns final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_Character_Script_C*>         AllCharacters;                                     // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Count;                                             // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_Script_C*                 CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerState*                      K2Node_DynamicCast_AsHuman_Player_State;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_CreateTestingPawns) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_CreateTestingPawns");
static_assert(sizeof(BP_FlameCheatManager_C_CreateTestingPawns) == 0x0000A8, "Wrong size on BP_FlameCheatManager_C_CreateTestingPawns");
static_assert(offsetof(BP_FlameCheatManager_C_CreateTestingPawns, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_CreateTestingPawns::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_CreateTestingPawns, AllCharacters) == 0x000008, "Member 'BP_FlameCheatManager_C_CreateTestingPawns::AllCharacters' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_CreateTestingPawns, Count) == 0x000018, "Member 'BP_FlameCheatManager_C_CreateTestingPawns::Count' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_CreateTestingPawns, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_FlameCheatManager_C_CreateTestingPawns::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_CreateTestingPawns, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000028, "Member 'BP_FlameCheatManager_C_CreateTestingPawns::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_CreateTestingPawns, K2Node_DynamicCast_AsHuman_Player_State) == 0x000038, "Member 'BP_FlameCheatManager_C_CreateTestingPawns::K2Node_DynamicCast_AsHuman_Player_State' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_CreateTestingPawns, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_FlameCheatManager_C_CreateTestingPawns::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_CreateTestingPawns, CallFunc_GetPlayerName_ReturnValue) == 0x000048, "Member 'BP_FlameCheatManager_C_CreateTestingPawns::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_CreateTestingPawns, CallFunc_Concat_StrStr_ReturnValue) == 0x000058, "Member 'BP_FlameCheatManager_C_CreateTestingPawns::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_CreateTestingPawns, Temp_int_Variable) == 0x000068, "Member 'BP_FlameCheatManager_C_CreateTestingPawns::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_CreateTestingPawns, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000070, "Member 'BP_FlameCheatManager_C_CreateTestingPawns::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_CreateTestingPawns, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000080, "Member 'BP_FlameCheatManager_C_CreateTestingPawns::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_CreateTestingPawns, CallFunc_MakeVector_ReturnValue) == 0x000084, "Member 'BP_FlameCheatManager_C_CreateTestingPawns::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_CreateTestingPawns, CallFunc_Add_VectorVector_ReturnValue) == 0x000090, "Member 'BP_FlameCheatManager_C_CreateTestingPawns::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_CreateTestingPawns, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00009C, "Member 'BP_FlameCheatManager_C_CreateTestingPawns::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_CreateTestingPawns, CallFunc_Add_IntInt_ReturnValue) == 0x0000A0, "Member 'BP_FlameCheatManager_C_CreateTestingPawns::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.ToggleInfiniteSprint
// 0x00B8 (0x00B8 - 0x0000)
struct BP_FlameCheatManager_C_ToggleInfiniteSprint final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewInfiniteSprintState;                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InfiniteSprintOn;                                  // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerState*                      K2Node_DynamicCast_AsHuman_Player_State;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanCharacter*                        K2Node_DynamicCast_AsHuman_Character;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UStaminaComponent*                      CallFunc_GetStaminaComponent_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_ToggleInfiniteSprint) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_ToggleInfiniteSprint");
static_assert(sizeof(BP_FlameCheatManager_C_ToggleInfiniteSprint) == 0x0000B8, "Wrong size on BP_FlameCheatManager_C_ToggleInfiniteSprint");
static_assert(offsetof(BP_FlameCheatManager_C_ToggleInfiniteSprint, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_ToggleInfiniteSprint::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ToggleInfiniteSprint, NewInfiniteSprintState) == 0x000008, "Member 'BP_FlameCheatManager_C_ToggleInfiniteSprint::NewInfiniteSprintState' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ToggleInfiniteSprint, InfiniteSprintOn) == 0x000009, "Member 'BP_FlameCheatManager_C_ToggleInfiniteSprint::InfiniteSprintOn' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ToggleInfiniteSprint, Temp_bool_Variable) == 0x00000A, "Member 'BP_FlameCheatManager_C_ToggleInfiniteSprint::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ToggleInfiniteSprint, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'BP_FlameCheatManager_C_ToggleInfiniteSprint::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ToggleInfiniteSprint, K2Node_DynamicCast_AsHuman_Player_State) == 0x000018, "Member 'BP_FlameCheatManager_C_ToggleInfiniteSprint::K2Node_DynamicCast_AsHuman_Player_State' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ToggleInfiniteSprint, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_FlameCheatManager_C_ToggleInfiniteSprint::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ToggleInfiniteSprint, K2Node_DynamicCast_AsHuman_Character) == 0x000028, "Member 'BP_FlameCheatManager_C_ToggleInfiniteSprint::K2Node_DynamicCast_AsHuman_Character' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ToggleInfiniteSprint, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_FlameCheatManager_C_ToggleInfiniteSprint::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ToggleInfiniteSprint, CallFunc_GetPlayerName_ReturnValue) == 0x000038, "Member 'BP_FlameCheatManager_C_ToggleInfiniteSprint::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ToggleInfiniteSprint, CallFunc_GetStaminaComponent_ReturnValue) == 0x000048, "Member 'BP_FlameCheatManager_C_ToggleInfiniteSprint::CallFunc_GetStaminaComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ToggleInfiniteSprint, CallFunc_Concat_StrStr_ReturnValue) == 0x000050, "Member 'BP_FlameCheatManager_C_ToggleInfiniteSprint::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ToggleInfiniteSprint, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'BP_FlameCheatManager_C_ToggleInfiniteSprint::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ToggleInfiniteSprint, Temp_string_Variable) == 0x000068, "Member 'BP_FlameCheatManager_C_ToggleInfiniteSprint::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ToggleInfiniteSprint, Temp_string_Variable_1) == 0x000078, "Member 'BP_FlameCheatManager_C_ToggleInfiniteSprint::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ToggleInfiniteSprint, K2Node_Select_Default) == 0x000088, "Member 'BP_FlameCheatManager_C_ToggleInfiniteSprint::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ToggleInfiniteSprint, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000098, "Member 'BP_FlameCheatManager_C_ToggleInfiniteSprint::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_ToggleInfiniteSprint, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000A8, "Member 'BP_FlameCheatManager_C_ToggleInfiniteSprint::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.SkipLobby
// 0x0068 (0x0068 - 0x0000)
struct BP_FlameCheatManager_C_SkipLobby final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TimeToEncounter;                                   // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TimeToLock;                                        // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_PlayerLobby_Base_C*>         CallFunc_GetAllActorsOfClass_OutActors;            // 0x0040(0x0010)(ReferenceParm)
	class ABP_PlayerLobby_Base_C*                 CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_SkipLobby) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_SkipLobby");
static_assert(sizeof(BP_FlameCheatManager_C_SkipLobby) == 0x000068, "Wrong size on BP_FlameCheatManager_C_SkipLobby");
static_assert(offsetof(BP_FlameCheatManager_C_SkipLobby, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_SkipLobby::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_SkipLobby, TimeToEncounter) == 0x000008, "Member 'BP_FlameCheatManager_C_SkipLobby::TimeToEncounter' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_SkipLobby, TimeToLock) == 0x00000C, "Member 'BP_FlameCheatManager_C_SkipLobby::TimeToLock' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_SkipLobby, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_FlameCheatManager_C_SkipLobby::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_SkipLobby, CallFunc_GetDisplayName_ReturnValue) == 0x000018, "Member 'BP_FlameCheatManager_C_SkipLobby::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_SkipLobby, CallFunc_Concat_StrStr_ReturnValue) == 0x000028, "Member 'BP_FlameCheatManager_C_SkipLobby::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_SkipLobby, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BP_FlameCheatManager_C_SkipLobby::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_SkipLobby, CallFunc_GetAllActorsOfClass_OutActors) == 0x000040, "Member 'BP_FlameCheatManager_C_SkipLobby::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_SkipLobby, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_FlameCheatManager_C_SkipLobby::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_SkipLobby, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BP_FlameCheatManager_C_SkipLobby::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_SkipLobby, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'BP_FlameCheatManager_C_SkipLobby::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_SkipLobby, CallFunc_IsValid_ReturnValue) == 0x00005D, "Member 'BP_FlameCheatManager_C_SkipLobby::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_SkipLobby, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'BP_FlameCheatManager_C_SkipLobby::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.MarkSelfAsTester
// 0x0068 (0x0068 - 0x0000)
struct BP_FlameCheatManager_C_MarkSelfAsTester final
{
public:
	class ABP_PlayerController_Script_C*          CheatingPC;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           MarkerTint;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_PlayerController_C*>         AllControllers;                                    // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_PlayerController_Script_C*>  CallFunc_GetAllActorsOfClass_OutActors;            // 0x0040(0x0010)(ReferenceParm)
	class ABP_PlayerController_Script_C*          CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FlameCheatManager_C_MarkSelfAsTester) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_MarkSelfAsTester");
static_assert(sizeof(BP_FlameCheatManager_C_MarkSelfAsTester) == 0x000068, "Wrong size on BP_FlameCheatManager_C_MarkSelfAsTester");
static_assert(offsetof(BP_FlameCheatManager_C_MarkSelfAsTester, CheatingPC) == 0x000000, "Member 'BP_FlameCheatManager_C_MarkSelfAsTester::CheatingPC' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_MarkSelfAsTester, MarkerTint) == 0x000008, "Member 'BP_FlameCheatManager_C_MarkSelfAsTester::MarkerTint' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_MarkSelfAsTester, AllControllers) == 0x000018, "Member 'BP_FlameCheatManager_C_MarkSelfAsTester::AllControllers' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_MarkSelfAsTester, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BP_FlameCheatManager_C_MarkSelfAsTester::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_MarkSelfAsTester, CallFunc_K2_GetPawn_ReturnValue) == 0x000030, "Member 'BP_FlameCheatManager_C_MarkSelfAsTester::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_MarkSelfAsTester, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BP_FlameCheatManager_C_MarkSelfAsTester::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_MarkSelfAsTester, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'BP_FlameCheatManager_C_MarkSelfAsTester::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_MarkSelfAsTester, CallFunc_GetAllActorsOfClass_OutActors) == 0x000040, "Member 'BP_FlameCheatManager_C_MarkSelfAsTester::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_MarkSelfAsTester, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_FlameCheatManager_C_MarkSelfAsTester::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_MarkSelfAsTester, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BP_FlameCheatManager_C_MarkSelfAsTester::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_MarkSelfAsTester, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'BP_FlameCheatManager_C_MarkSelfAsTester::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_MarkSelfAsTester, CallFunc_Array_Length_ReturnValue_1) == 0x000060, "Member 'BP_FlameCheatManager_C_MarkSelfAsTester::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_MarkSelfAsTester, CallFunc_Greater_IntInt_ReturnValue) == 0x000064, "Member 'BP_FlameCheatManager_C_MarkSelfAsTester::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.FastMovement
// 0x00B0 (0x00B0 - 0x0000)
struct BP_FlameCheatManager_C_FastMovement final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxWalkSpeed;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FastSpeed;                                         // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerState*                      K2Node_DynamicCast_AsHuman_Player_State;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanCharacter*                        K2Node_DynamicCast_AsHuman_Character;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable;                              // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_FastMovement) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_FastMovement");
static_assert(sizeof(BP_FlameCheatManager_C_FastMovement) == 0x0000B0, "Wrong size on BP_FlameCheatManager_C_FastMovement");
static_assert(offsetof(BP_FlameCheatManager_C_FastMovement, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_FastMovement::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_FastMovement, MaxWalkSpeed) == 0x000008, "Member 'BP_FlameCheatManager_C_FastMovement::MaxWalkSpeed' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_FastMovement, FastSpeed) == 0x00000C, "Member 'BP_FlameCheatManager_C_FastMovement::FastSpeed' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_FastMovement, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'BP_FlameCheatManager_C_FastMovement::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_FastMovement, K2Node_DynamicCast_AsHuman_Player_State) == 0x000018, "Member 'BP_FlameCheatManager_C_FastMovement::K2Node_DynamicCast_AsHuman_Player_State' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_FastMovement, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_FlameCheatManager_C_FastMovement::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_FastMovement, K2Node_DynamicCast_AsHuman_Character) == 0x000028, "Member 'BP_FlameCheatManager_C_FastMovement::K2Node_DynamicCast_AsHuman_Character' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_FastMovement, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_FlameCheatManager_C_FastMovement::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_FastMovement, CallFunc_GetPlayerName_ReturnValue) == 0x000038, "Member 'BP_FlameCheatManager_C_FastMovement::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_FastMovement, CallFunc_Concat_StrStr_ReturnValue) == 0x000048, "Member 'BP_FlameCheatManager_C_FastMovement::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_FastMovement, Temp_string_Variable) == 0x000058, "Member 'BP_FlameCheatManager_C_FastMovement::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_FastMovement, Temp_string_Variable_1) == 0x000068, "Member 'BP_FlameCheatManager_C_FastMovement::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_FastMovement, Temp_bool_Variable) == 0x000078, "Member 'BP_FlameCheatManager_C_FastMovement::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_FastMovement, K2Node_Select_Default) == 0x000080, "Member 'BP_FlameCheatManager_C_FastMovement::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_FastMovement, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000090, "Member 'BP_FlameCheatManager_C_FastMovement::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_FastMovement, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000A0, "Member 'BP_FlameCheatManager_C_FastMovement::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.SetDevMode
// 0x0008 (0x0008 - 0x0000)
struct BP_FlameCheatManager_C_SetDevMode final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_SetDevMode) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_SetDevMode");
static_assert(sizeof(BP_FlameCheatManager_C_SetDevMode) == 0x000008, "Wrong size on BP_FlameCheatManager_C_SetDevMode");
static_assert(offsetof(BP_FlameCheatManager_C_SetDevMode, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_SetDevMode::Controller' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.BigJumps
// 0x00B0 (0x00B0 - 0x0000)
struct BP_FlameCheatManager_C_BigJumps final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewJumpZVelocity;                                  // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BigJumpEnabled;                                    // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerState*                      K2Node_DynamicCast_AsHuman_Player_State;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanCharacter*                        K2Node_DynamicCast_AsHuman_Character;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable;                              // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_BigJumps) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_BigJumps");
static_assert(sizeof(BP_FlameCheatManager_C_BigJumps) == 0x0000B0, "Wrong size on BP_FlameCheatManager_C_BigJumps");
static_assert(offsetof(BP_FlameCheatManager_C_BigJumps, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_BigJumps::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_BigJumps, NewJumpZVelocity) == 0x000008, "Member 'BP_FlameCheatManager_C_BigJumps::NewJumpZVelocity' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_BigJumps, BigJumpEnabled) == 0x00000C, "Member 'BP_FlameCheatManager_C_BigJumps::BigJumpEnabled' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_BigJumps, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'BP_FlameCheatManager_C_BigJumps::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_BigJumps, K2Node_DynamicCast_AsHuman_Player_State) == 0x000018, "Member 'BP_FlameCheatManager_C_BigJumps::K2Node_DynamicCast_AsHuman_Player_State' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_BigJumps, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_FlameCheatManager_C_BigJumps::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_BigJumps, K2Node_DynamicCast_AsHuman_Character) == 0x000028, "Member 'BP_FlameCheatManager_C_BigJumps::K2Node_DynamicCast_AsHuman_Character' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_BigJumps, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_FlameCheatManager_C_BigJumps::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_BigJumps, CallFunc_GetPlayerName_ReturnValue) == 0x000038, "Member 'BP_FlameCheatManager_C_BigJumps::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_BigJumps, CallFunc_Concat_StrStr_ReturnValue) == 0x000048, "Member 'BP_FlameCheatManager_C_BigJumps::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_BigJumps, Temp_string_Variable) == 0x000058, "Member 'BP_FlameCheatManager_C_BigJumps::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_BigJumps, Temp_string_Variable_1) == 0x000068, "Member 'BP_FlameCheatManager_C_BigJumps::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_BigJumps, Temp_bool_Variable) == 0x000078, "Member 'BP_FlameCheatManager_C_BigJumps::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_BigJumps, K2Node_Select_Default) == 0x000080, "Member 'BP_FlameCheatManager_C_BigJumps::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_BigJumps, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000090, "Member 'BP_FlameCheatManager_C_BigJumps::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_BigJumps, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000A0, "Member 'BP_FlameCheatManager_C_BigJumps::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.SkipTutorial
// 0x0048 (0x0048 - 0x0000)
struct BP_FlameCheatManager_C_SkipTutorial final
{
public:
	class ABP_PlayerController_Script_C*          CheatingPlayer;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameMode_Tutorial_C*                K2Node_DynamicCast_AsBP_Game_Mode_Tutorial;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SetTutorialCompleted_ReturnValue;         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FlameCheatManager_C_SkipTutorial) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_SkipTutorial");
static_assert(sizeof(BP_FlameCheatManager_C_SkipTutorial) == 0x000048, "Wrong size on BP_FlameCheatManager_C_SkipTutorial");
static_assert(offsetof(BP_FlameCheatManager_C_SkipTutorial, CheatingPlayer) == 0x000000, "Member 'BP_FlameCheatManager_C_SkipTutorial::CheatingPlayer' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_SkipTutorial, CallFunc_GetDisplayName_ReturnValue) == 0x000008, "Member 'BP_FlameCheatManager_C_SkipTutorial::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_SkipTutorial, CallFunc_Concat_StrStr_ReturnValue) == 0x000018, "Member 'BP_FlameCheatManager_C_SkipTutorial::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_SkipTutorial, CallFunc_GetGameMode_ReturnValue) == 0x000028, "Member 'BP_FlameCheatManager_C_SkipTutorial::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_SkipTutorial, K2Node_DynamicCast_AsBP_Game_Mode_Tutorial) == 0x000030, "Member 'BP_FlameCheatManager_C_SkipTutorial::K2Node_DynamicCast_AsBP_Game_Mode_Tutorial' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_SkipTutorial, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_FlameCheatManager_C_SkipTutorial::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_SkipTutorial, CallFunc_SetTutorialCompleted_ReturnValue) == 0x00003C, "Member 'BP_FlameCheatManager_C_SkipTutorial::CallFunc_SetTutorialCompleted_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_SkipTutorial, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BP_FlameCheatManager_C_SkipTutorial::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.GetLootData
// 0x00F8 (0x00F8 - 0x0000)
struct BP_FlameCheatManager_C_GetLootData final
{
public:
	class AActor*                                 InputPin;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UClass*>                         Weapons;                                           // 0x0010(0x0010)(Parm, OutParm)
	TArray<struct FBackpackItemSlot>              Items;                                             // 0x0020(0x0010)(Parm, OutParm)
	TArray<struct FBackpackItemSlot>              ItemsArray;                                        // 0x0030(0x0010)(Edit, BlueprintVisible)
	TArray<class UClass*>                         WeaponsArray;                                      // 0x0040(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UEquipmentStorageComponent*>     CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0058(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEquipmentStorageComponent*             CallFunc_Array_Get_Item;                           // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A[0x6];                                       // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBackpackItemSlot>              CallFunc_GetSlotsClassesConst_ReturnValue;         // 0x00A0(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBackpackItemSlot                      CallFunc_Array_Get_Item_1;                         // 0x00B8(0x0010)(NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D2[0x2];                                       // 0x00D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AWeapon*                                CallFunc_Array_Get_Item_2;                         // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_GetLootData) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_GetLootData");
static_assert(sizeof(BP_FlameCheatManager_C_GetLootData) == 0x0000F8, "Wrong size on BP_FlameCheatManager_C_GetLootData");
static_assert(offsetof(BP_FlameCheatManager_C_GetLootData, InputPin) == 0x000000, "Member 'BP_FlameCheatManager_C_GetLootData::InputPin' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_GetLootData, Actor) == 0x000008, "Member 'BP_FlameCheatManager_C_GetLootData::Actor' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_GetLootData, Weapons) == 0x000010, "Member 'BP_FlameCheatManager_C_GetLootData::Weapons' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_GetLootData, Items) == 0x000020, "Member 'BP_FlameCheatManager_C_GetLootData::Items' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_GetLootData, ItemsArray) == 0x000030, "Member 'BP_FlameCheatManager_C_GetLootData::ItemsArray' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_GetLootData, WeaponsArray) == 0x000040, "Member 'BP_FlameCheatManager_C_GetLootData::WeaponsArray' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_GetLootData, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'BP_FlameCheatManager_C_GetLootData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_GetLootData, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000058, "Member 'BP_FlameCheatManager_C_GetLootData::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_GetLootData, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'BP_FlameCheatManager_C_GetLootData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_GetLootData, CallFunc_Array_Length_ReturnValue) == 0x00006C, "Member 'BP_FlameCheatManager_C_GetLootData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_GetLootData, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'BP_FlameCheatManager_C_GetLootData::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_GetLootData, Temp_int_Loop_Counter_Variable_1) == 0x000074, "Member 'BP_FlameCheatManager_C_GetLootData::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_GetLootData, CallFunc_Add_IntInt_ReturnValue_1) == 0x000078, "Member 'BP_FlameCheatManager_C_GetLootData::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_GetLootData, Temp_int_Loop_Counter_Variable_2) == 0x00007C, "Member 'BP_FlameCheatManager_C_GetLootData::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_GetLootData, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'BP_FlameCheatManager_C_GetLootData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_GetLootData, CallFunc_Add_IntInt_ReturnValue_2) == 0x000084, "Member 'BP_FlameCheatManager_C_GetLootData::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_GetLootData, Temp_int_Array_Index_Variable) == 0x000088, "Member 'BP_FlameCheatManager_C_GetLootData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_GetLootData, Temp_int_Array_Index_Variable_1) == 0x00008C, "Member 'BP_FlameCheatManager_C_GetLootData::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_GetLootData, CallFunc_Array_Get_Item) == 0x000090, "Member 'BP_FlameCheatManager_C_GetLootData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_GetLootData, CallFunc_IsValid_ReturnValue_1) == 0x000098, "Member 'BP_FlameCheatManager_C_GetLootData::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_GetLootData, CallFunc_IsValid_ReturnValue_2) == 0x000099, "Member 'BP_FlameCheatManager_C_GetLootData::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_GetLootData, CallFunc_GetSlotsClassesConst_ReturnValue) == 0x0000A0, "Member 'BP_FlameCheatManager_C_GetLootData::CallFunc_GetSlotsClassesConst_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_GetLootData, CallFunc_Array_Length_ReturnValue_1) == 0x0000B0, "Member 'BP_FlameCheatManager_C_GetLootData::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_GetLootData, CallFunc_Array_Get_Item_1) == 0x0000B8, "Member 'BP_FlameCheatManager_C_GetLootData::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_GetLootData, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000C8, "Member 'BP_FlameCheatManager_C_GetLootData::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_GetLootData, CallFunc_Array_Length_ReturnValue_2) == 0x0000CC, "Member 'BP_FlameCheatManager_C_GetLootData::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_GetLootData, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000D0, "Member 'BP_FlameCheatManager_C_GetLootData::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_GetLootData, CallFunc_IsValid_ReturnValue_3) == 0x0000D1, "Member 'BP_FlameCheatManager_C_GetLootData::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_GetLootData, CallFunc_Array_Add_ReturnValue) == 0x0000D4, "Member 'BP_FlameCheatManager_C_GetLootData::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_GetLootData, Temp_int_Array_Index_Variable_2) == 0x0000D8, "Member 'BP_FlameCheatManager_C_GetLootData::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_GetLootData, CallFunc_Array_Get_Item_2) == 0x0000E0, "Member 'BP_FlameCheatManager_C_GetLootData::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_GetLootData, CallFunc_GetObjectClass_ReturnValue) == 0x0000E8, "Member 'BP_FlameCheatManager_C_GetLootData::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_GetLootData, CallFunc_Array_Add_ReturnValue_1) == 0x0000F0, "Member 'BP_FlameCheatManager_C_GetLootData::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.StartSpectating
// 0x0008 (0x0008 - 0x0000)
struct BP_FlameCheatManager_C_StartSpectating final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_StartSpectating) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_StartSpectating");
static_assert(sizeof(BP_FlameCheatManager_C_StartSpectating) == 0x000008, "Wrong size on BP_FlameCheatManager_C_StartSpectating");
static_assert(offsetof(BP_FlameCheatManager_C_StartSpectating, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_StartSpectating::Controller' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.Camera Free Look
// 0x00C0 (0x00C0 - 0x0000)
struct BP_FlameCheatManager_C_Camera_Free_Look final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Actor_Transform;                                   // 0x0010(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_FreeCameraSpectator_C*              K2Node_DynamicCast_AsBP_Free_Camera_Spectator;     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetInvincibility_ReturnValue;             // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53[0x5];                                       // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_C*                        K2Node_DynamicCast_AsBP_Character;                 // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0xF];                                       // 0x0061(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0070(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetInvincibility_ReturnValue_1;           // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3[0x5];                                       // 0x00A3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_FreeCameraSpectator_C*              CallFunc_FinishSpawningActor_ReturnValue;          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_Camera_Free_Look) == 0x000010, "Wrong alignment on BP_FlameCheatManager_C_Camera_Free_Look");
static_assert(sizeof(BP_FlameCheatManager_C_Camera_Free_Look) == 0x0000C0, "Wrong size on BP_FlameCheatManager_C_Camera_Free_Look");
static_assert(offsetof(BP_FlameCheatManager_C_Camera_Free_Look, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_Camera_Free_Look::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Camera_Free_Look, Actor_Transform) == 0x000010, "Member 'BP_FlameCheatManager_C_Camera_Free_Look::Actor_Transform' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Camera_Free_Look, CallFunc_K2_GetPawn_ReturnValue) == 0x000040, "Member 'BP_FlameCheatManager_C_Camera_Free_Look::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Camera_Free_Look, K2Node_DynamicCast_AsBP_Free_Camera_Spectator) == 0x000048, "Member 'BP_FlameCheatManager_C_Camera_Free_Look::K2Node_DynamicCast_AsBP_Free_Camera_Spectator' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Camera_Free_Look, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_FlameCheatManager_C_Camera_Free_Look::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Camera_Free_Look, CallFunc_IsValid_ReturnValue) == 0x000051, "Member 'BP_FlameCheatManager_C_Camera_Free_Look::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Camera_Free_Look, CallFunc_SetInvincibility_ReturnValue) == 0x000052, "Member 'BP_FlameCheatManager_C_Camera_Free_Look::CallFunc_SetInvincibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Camera_Free_Look, K2Node_DynamicCast_AsBP_Character) == 0x000058, "Member 'BP_FlameCheatManager_C_Camera_Free_Look::K2Node_DynamicCast_AsBP_Character' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Camera_Free_Look, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'BP_FlameCheatManager_C_Camera_Free_Look::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Camera_Free_Look, CallFunc_GetTransform_ReturnValue) == 0x000070, "Member 'BP_FlameCheatManager_C_Camera_Free_Look::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Camera_Free_Look, CallFunc_IsValid_ReturnValue_1) == 0x0000A0, "Member 'BP_FlameCheatManager_C_Camera_Free_Look::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Camera_Free_Look, CallFunc_SetInvincibility_ReturnValue_1) == 0x0000A1, "Member 'BP_FlameCheatManager_C_Camera_Free_Look::CallFunc_SetInvincibility_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Camera_Free_Look, CallFunc_IsValid_ReturnValue_2) == 0x0000A2, "Member 'BP_FlameCheatManager_C_Camera_Free_Look::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Camera_Free_Look, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000A8, "Member 'BP_FlameCheatManager_C_Camera_Free_Look::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Camera_Free_Look, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000B0, "Member 'BP_FlameCheatManager_C_Camera_Free_Look::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.Switch Fog of War
// 0x0018 (0x0018 - 0x0000)
struct BP_FlameCheatManager_C_Switch_Fog_of_War final
{
public:
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_FogOfWarComponent_C*                CallFunc_GetComponentByClass_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FlameCheatManager_C_Switch_Fog_of_War) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_Switch_Fog_of_War");
static_assert(sizeof(BP_FlameCheatManager_C_Switch_Fog_of_War) == 0x000018, "Wrong size on BP_FlameCheatManager_C_Switch_Fog_of_War");
static_assert(offsetof(BP_FlameCheatManager_C_Switch_Fog_of_War, Controller) == 0x000000, "Member 'BP_FlameCheatManager_C_Switch_Fog_of_War::Controller' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Switch_Fog_of_War, CallFunc_GetComponentByClass_ReturnValue) == 0x000008, "Member 'BP_FlameCheatManager_C_Switch_Fog_of_War::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Switch_Fog_of_War, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_FlameCheatManager_C_Switch_Fog_of_War::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Switch_Fog_of_War, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'BP_FlameCheatManager_C_Switch_Fog_of_War::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Switch_Fog_of_War, CallFunc_Not_PreBool_ReturnValue) == 0x000012, "Member 'BP_FlameCheatManager_C_Switch_Fog_of_War::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.Execute command line cheat
// 0x0018 (0x0018 - 0x0000)
struct BP_FlameCheatManager_C_Execute_command_line_cheat final
{
public:
	class FString                                 Command;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class ABP_PlayerController_Script_C*          Controller;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_Execute_command_line_cheat) == 0x000008, "Wrong alignment on BP_FlameCheatManager_C_Execute_command_line_cheat");
static_assert(sizeof(BP_FlameCheatManager_C_Execute_command_line_cheat) == 0x000018, "Wrong size on BP_FlameCheatManager_C_Execute_command_line_cheat");
static_assert(offsetof(BP_FlameCheatManager_C_Execute_command_line_cheat, Command) == 0x000000, "Member 'BP_FlameCheatManager_C_Execute_command_line_cheat::Command' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Execute_command_line_cheat, Controller) == 0x000010, "Member 'BP_FlameCheatManager_C_Execute_command_line_cheat::Controller' has a wrong offset!");

// Function BP_FlameCheatManager.BP_FlameCheatManager_C.Spawn All Loot Visualization Nodes
// 0x0590 (0x0590 - 0x0000)
struct BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes final
{
public:
	int32                                         NodeCommodityAmount;                               // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FStruct_CheatLootVisualizationCommodityData> CommodityList;                                     // 0x0008(0x0010)(Edit, BlueprintVisible)
	int32                                         NodeLootAmount;                                    // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   CallFunc_GetSoftClassReference_ReturnValue;        // 0x0068(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   CallFunc_GetSoftClassReference_ReturnValue_1;      // 0x0090(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   CallFunc_GetSoftClassReference_ReturnValue_2;      // 0x00B8(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   CallFunc_GetSoftClassReference_ReturnValue_3;      // 0x00E0(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   CallFunc_GetSoftClassReference_ReturnValue_4;      // 0x0108(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   CallFunc_GetSoftClassReference_ReturnValue_5;      // 0x0130(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable;                              // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x3];                                      // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_6;                  // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APlayerController*>              CallFunc_GetPlayerControllers_ReturnValue;         // 0x0180(0x0010)(ReferenceParm)
	TArray<class APlayerController*>              CallFunc_GetPlayerControllers_ReturnValue_1;       // 0x0190(0x0010)(ReferenceParm)
	class APlayerController*                      CallFunc_Array_Get_Item;                           // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_Array_Get_Item_1;                         // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_Script_C*          K2Node_DynamicCast_AsBP_Player_Controller_Script;  // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Script_C*          K2Node_DynamicCast_AsBP_Player_Controller_Script_1; // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C9[0x3];                                      // 0x01C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x01D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D6[0x2];                                      // 0x01D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_Cheat_LootVisualizationNode_C*> CallFunc_GetAllActorsOfClass_OutActors;            // 0x01D8(0x0010)(ReferenceParm)
	TArray<class ABP_Cheat_LootVisualizationNode_C*> CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x01E8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_202[0x6];                                      // 0x0202(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_1;                            // 0x0208(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_219[0x7];                                      // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_2;                            // 0x0220(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_3;                            // 0x0230(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_241[0x7];                                      // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0248(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_6;                   // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStruct_CheatLootVisualizationCommodityData CallFunc_Array_Get_Item_2;                         // 0x0268(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_Lootable_Base_C*>            CallFunc_GetAllActorsOfClass_OutActors_2;          // 0x02A8(0x0010)(ReferenceParm)
	class ABP_Lootable_Base_C*                    CallFunc_Array_Get_Item_3;                         // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x02C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x02C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C6[0x2];                                      // 0x02C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   CallFunc_Conv_ClassToSoftClassReference_ReturnValue; // 0x02D0(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x02F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_SoftClassReference_ReturnValue; // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_SoftClassReference_ReturnValue_1; // 0x0309(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_SoftClassReference_ReturnValue_2; // 0x030A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_SoftClassReference_ReturnValue_3; // 0x030B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_SoftClassReference_ReturnValue_4; // 0x030C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_SoftClassReference_ReturnValue_5; // 0x030D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x030E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x030F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_311[0x3];                                      // 0x0311(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0314(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_321[0xF];                                      // 0x0321(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0330(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_361[0x7];                                      // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_371[0x7];                                      // 0x0371(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default_1;                           // 0x0378(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABP_Cheat_LootVisualizationNode_C*      CallFunc_FinishSpawningActor_ReturnValue;          // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default_2;                           // 0x0390(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class UEquipmentStorageComponent*>     CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x03A0(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UEquipmentStorageComponent*             CallFunc_Array_Get_Item_4;                         // 0x03B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x03B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x03BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BD[0x3];                                      // 0x03BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBackpackItemSlot>              CallFunc_GetSlotsClassesConst_ReturnValue;         // 0x03C0(0x0010)(ConstParm, ReferenceParm)
	struct FBackpackItemSlot                      CallFunc_Array_Get_Item_5;                         // 0x03D0(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x03E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E5[0x3];                                      // 0x03E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_10;                // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EC[0x4];                                      // 0x03EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_CheatLootVisualizationCommodityData K2Node_SetFieldsInStruct_StructOut;                // 0x03F0(0x0038)(HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_11;                // 0x0428(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x042C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42D[0x3];                                      // 0x042D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   CallFunc_Conv_ClassToSoftClassReference_ReturnValue_1; // 0x0430(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_SoftClassReference_ReturnValue_6; // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_459[0x7];                                      // 0x0459(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AItemForBackpack*                       CallFunc_GetClassDefaultObject_ReturnValue;        // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRarity_ReturnValue;                    // 0x0468(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46C[0x4];                                      // 0x046C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_CheatLootVisualizationCommodityData K2Node_MakeStruct_Struct_CheatLootVisualizationCommodityData; // 0x0470(0x0038)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x04A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4AC[0x4];                                      // 0x04AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AWeapon*                                CallFunc_Array_Get_Item_6;                         // 0x04B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_8;               // 0x04B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BC[0x4];                                      // 0x04BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue_1;             // 0x04C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C9[0x7];                                      // 0x04C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   CallFunc_Conv_ClassToSoftClassReference_ReturnValue_2; // 0x04D0(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	int32                                         CallFunc_GetRarity_ReturnValue_1;                  // 0x04F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FC[0x4];                                      // 0x04FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0500(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FStruct_CheatLootVisualizationCommodityData K2Node_MakeStruct_Struct_CheatLootVisualizationCommodityData_1; // 0x0510(0x0038)(HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0548(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0558(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55C[0x4];                                      // 0x055C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0560(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_9;               // 0x0570(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_574[0x4];                                      // 0x0574(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0578(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0588(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes) == 0x000010, "Wrong alignment on BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes");
static_assert(sizeof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes) == 0x000590, "Wrong size on BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, NodeCommodityAmount) == 0x000000, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::NodeCommodityAmount' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CommodityList) == 0x000008, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CommodityList' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, NodeLootAmount) == 0x000018, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::NodeLootAmount' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, Temp_int_Loop_Counter_Variable_1) == 0x000028, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_Add_IntInt_ReturnValue_1) == 0x00002C, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, Temp_int_Loop_Counter_Variable_2) == 0x000030, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_Add_IntInt_ReturnValue_2) == 0x000034, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, Temp_int_Array_Index_Variable_1) == 0x000038, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, Temp_int_Array_Index_Variable_2) == 0x00003C, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, Temp_int_Loop_Counter_Variable_3) == 0x000040, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_Add_IntInt_ReturnValue_3) == 0x000044, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, Temp_int_Array_Index_Variable_3) == 0x000048, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, Temp_int_Loop_Counter_Variable_4) == 0x00004C, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_Add_IntInt_ReturnValue_4) == 0x000050, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, Temp_bool_True_if_break_was_hit_Variable) == 0x000054, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, Temp_int_Loop_Counter_Variable_5) == 0x000058, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_Add_IntInt_ReturnValue_5) == 0x00005C, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, Temp_int_Array_Index_Variable_4) == 0x000060, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, Temp_int_Array_Index_Variable_5) == 0x000064, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_GetSoftClassReference_ReturnValue) == 0x000068, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_GetSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_GetSoftClassReference_ReturnValue_1) == 0x000090, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_GetSoftClassReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_GetSoftClassReference_ReturnValue_2) == 0x0000B8, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_GetSoftClassReference_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_GetSoftClassReference_ReturnValue_3) == 0x0000E0, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_GetSoftClassReference_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_GetSoftClassReference_ReturnValue_4) == 0x000108, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_GetSoftClassReference_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_GetSoftClassReference_ReturnValue_5) == 0x000130, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_GetSoftClassReference_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, Temp_string_Variable) == 0x000158, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, Temp_bool_Variable) == 0x000168, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, Temp_int_Loop_Counter_Variable_6) == 0x00016C, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::Temp_int_Loop_Counter_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_Array_Length_ReturnValue) == 0x000170, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_Add_IntInt_ReturnValue_6) == 0x000174, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_Less_IntInt_ReturnValue) == 0x000178, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_GetPlayerControllers_ReturnValue) == 0x000180, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_GetPlayerControllers_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_GetPlayerControllers_ReturnValue_1) == 0x000190, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_GetPlayerControllers_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_Array_Get_Item) == 0x0001A0, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_Array_Get_Item_1) == 0x0001A8, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, K2Node_DynamicCast_AsBP_Player_Controller_Script) == 0x0001B0, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::K2Node_DynamicCast_AsBP_Player_Controller_Script' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, K2Node_DynamicCast_bSuccess) == 0x0001B8, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, K2Node_DynamicCast_AsBP_Player_Controller_Script_1) == 0x0001C0, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::K2Node_DynamicCast_AsBP_Player_Controller_Script_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, K2Node_DynamicCast_bSuccess_1) == 0x0001C8, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_Array_Length_ReturnValue_1) == 0x0001CC, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_Array_Length_ReturnValue_2) == 0x0001D0, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001D4, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_Less_IntInt_ReturnValue_2) == 0x0001D5, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_GetAllActorsOfClass_OutActors) == 0x0001D8, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x0001E8, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_Array_Length_ReturnValue_3) == 0x0001F8, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_Array_Length_ReturnValue_4) == 0x0001FC, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_Greater_IntInt_ReturnValue) == 0x000200, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_Not_PreBool_ReturnValue) == 0x000201, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, Temp_string_Variable_1) == 0x000208, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, Temp_bool_Variable_1) == 0x000218, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, Temp_string_Variable_2) == 0x000220, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, Temp_string_Variable_3) == 0x000230, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::Temp_string_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, Temp_bool_Variable_2) == 0x000240, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_Conv_IntToString_ReturnValue) == 0x000248, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_Add_IntInt_ReturnValue_7) == 0x000258, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_Add_IntInt_ReturnValue_8) == 0x00025C, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_Add_IntInt_ReturnValue_9) == 0x000260, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, Temp_int_Array_Index_Variable_6) == 0x000264, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::Temp_int_Array_Index_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_Array_Get_Item_2) == 0x000268, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0002A0, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_GetAllActorsOfClass_OutActors_2) == 0x0002A8, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_GetAllActorsOfClass_OutActors_2' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_Array_Get_Item_3) == 0x0002B8, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_Array_Length_ReturnValue_5) == 0x0002C0, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_Less_IntInt_ReturnValue_3) == 0x0002C4, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0002C5, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_GetObjectClass_ReturnValue) == 0x0002C8, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_Conv_ClassToSoftClassReference_ReturnValue) == 0x0002D0, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_Conv_ClassToSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, K2Node_Select_Default) == 0x0002F8, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_EqualEqual_SoftClassReference_ReturnValue) == 0x000308, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_EqualEqual_SoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_EqualEqual_SoftClassReference_ReturnValue_1) == 0x000309, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_EqualEqual_SoftClassReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_EqualEqual_SoftClassReference_ReturnValue_2) == 0x00030A, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_EqualEqual_SoftClassReference_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_EqualEqual_SoftClassReference_ReturnValue_3) == 0x00030B, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_EqualEqual_SoftClassReference_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_EqualEqual_SoftClassReference_ReturnValue_4) == 0x00030C, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_EqualEqual_SoftClassReference_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_EqualEqual_SoftClassReference_ReturnValue_5) == 0x00030D, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_EqualEqual_SoftClassReference_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_ClassIsChildOf_ReturnValue) == 0x00030E, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_BooleanOR_ReturnValue) == 0x00030F, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_BooleanOR_ReturnValue_1) == 0x000310, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000314, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_BooleanOR_ReturnValue_2) == 0x000320, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_MakeTransform_ReturnValue) == 0x000330, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_BooleanOR_ReturnValue_3) == 0x000360, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000368, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_BooleanOR_ReturnValue_4) == 0x000370, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, K2Node_Select_Default_1) == 0x000378, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_FinishSpawningActor_ReturnValue) == 0x000388, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, K2Node_Select_Default_2) == 0x000390, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x0003A0, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_Array_Get_Item_4) == 0x0003B0, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_Array_Length_ReturnValue_6) == 0x0003B8, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_Less_IntInt_ReturnValue_4) == 0x0003BC, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_GetSlotsClassesConst_ReturnValue) == 0x0003C0, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_GetSlotsClassesConst_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_Array_Get_Item_5) == 0x0003D0, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_Array_Length_ReturnValue_7) == 0x0003E0, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_Less_IntInt_ReturnValue_5) == 0x0003E4, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_Add_IntInt_ReturnValue_10) == 0x0003E8, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_Add_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, K2Node_SetFieldsInStruct_StructOut) == 0x0003F0, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_Add_IntInt_ReturnValue_11) == 0x000428, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_Add_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_Greater_IntInt_ReturnValue_2) == 0x00042C, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_Conv_ClassToSoftClassReference_ReturnValue_1) == 0x000430, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_Conv_ClassToSoftClassReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_EqualEqual_SoftClassReference_ReturnValue_6) == 0x000458, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_EqualEqual_SoftClassReference_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_GetClassDefaultObject_ReturnValue) == 0x000460, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_GetClassDefaultObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_GetRarity_ReturnValue) == 0x000468, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_GetRarity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, K2Node_MakeStruct_Struct_CheatLootVisualizationCommodityData) == 0x000470, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::K2Node_MakeStruct_Struct_CheatLootVisualizationCommodityData' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_Array_Add_ReturnValue) == 0x0004A8, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_Array_Get_Item_6) == 0x0004B0, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_Array_Length_ReturnValue_8) == 0x0004B8, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_Array_Length_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_GetObjectClass_ReturnValue_1) == 0x0004C0, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_GetObjectClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_Less_IntInt_ReturnValue_6) == 0x0004C8, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_Conv_ClassToSoftClassReference_ReturnValue_2) == 0x0004D0, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_Conv_ClassToSoftClassReference_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_GetRarity_ReturnValue_1) == 0x0004F8, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_GetRarity_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_GetDisplayName_ReturnValue) == 0x000500, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, K2Node_MakeStruct_Struct_CheatLootVisualizationCommodityData_1) == 0x000510, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::K2Node_MakeStruct_Struct_CheatLootVisualizationCommodityData_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_Concat_StrStr_ReturnValue) == 0x000548, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_Array_Add_ReturnValue_1) == 0x000558, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000560, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_Array_Length_ReturnValue_9) == 0x000570, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_Array_Length_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000578, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes, CallFunc_Conv_StringToName_ReturnValue) == 0x000588, "Member 'BP_FlameCheatManager_C_Spawn_All_Loot_Visualization_Nodes::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");

}

