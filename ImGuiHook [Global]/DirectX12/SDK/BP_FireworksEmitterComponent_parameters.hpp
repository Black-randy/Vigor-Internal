#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FireworksEmitterComponent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_FireworksEmitterComponent.BP_FireworksEmitterComponent_C.ExecuteUbergraph_BP_FireworksEmitterComponent
// 0x00D8 (0x00D8 - 0x0000)
struct BP_FireworksEmitterComponent_C_ExecuteUbergraph_BP_FireworksEmitterComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_EventName;                            // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_EmitterTime;                          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_ParticleTime;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Location;                             // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Velocity;                             // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Direction;                            // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Normal;                               // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_BoneName;                             // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      K2Node_Event_PhysMat;                              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_EventName_3;                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_EmitterTime_3;                        // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Location_2;                           // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Velocity_2;                           // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_EventName_2;                          // 0x007C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_EmitterTime_2;                        // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_ParticleCount;                        // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_EventName_1;                          // 0x009C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_EmitterTime_1;                        // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_ParticleTime_1;                       // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Location_1;                           // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Velocity_1;                           // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Direction_1;                          // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FireworksEmitterComponent_C_ExecuteUbergraph_BP_FireworksEmitterComponent) == 0x000008, "Wrong alignment on BP_FireworksEmitterComponent_C_ExecuteUbergraph_BP_FireworksEmitterComponent");
static_assert(sizeof(BP_FireworksEmitterComponent_C_ExecuteUbergraph_BP_FireworksEmitterComponent) == 0x0000D8, "Wrong size on BP_FireworksEmitterComponent_C_ExecuteUbergraph_BP_FireworksEmitterComponent");
static_assert(offsetof(BP_FireworksEmitterComponent_C_ExecuteUbergraph_BP_FireworksEmitterComponent, EntryPoint) == 0x000000, "Member 'BP_FireworksEmitterComponent_C_ExecuteUbergraph_BP_FireworksEmitterComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_FireworksEmitterComponent_C_ExecuteUbergraph_BP_FireworksEmitterComponent, K2Node_Event_EventName) == 0x000004, "Member 'BP_FireworksEmitterComponent_C_ExecuteUbergraph_BP_FireworksEmitterComponent::K2Node_Event_EventName' has a wrong offset!");
static_assert(offsetof(BP_FireworksEmitterComponent_C_ExecuteUbergraph_BP_FireworksEmitterComponent, K2Node_Event_EmitterTime) == 0x00000C, "Member 'BP_FireworksEmitterComponent_C_ExecuteUbergraph_BP_FireworksEmitterComponent::K2Node_Event_EmitterTime' has a wrong offset!");
static_assert(offsetof(BP_FireworksEmitterComponent_C_ExecuteUbergraph_BP_FireworksEmitterComponent, K2Node_Event_ParticleTime) == 0x000010, "Member 'BP_FireworksEmitterComponent_C_ExecuteUbergraph_BP_FireworksEmitterComponent::K2Node_Event_ParticleTime' has a wrong offset!");
static_assert(offsetof(BP_FireworksEmitterComponent_C_ExecuteUbergraph_BP_FireworksEmitterComponent, K2Node_Event_Location) == 0x000014, "Member 'BP_FireworksEmitterComponent_C_ExecuteUbergraph_BP_FireworksEmitterComponent::K2Node_Event_Location' has a wrong offset!");
static_assert(offsetof(BP_FireworksEmitterComponent_C_ExecuteUbergraph_BP_FireworksEmitterComponent, K2Node_Event_Velocity) == 0x000020, "Member 'BP_FireworksEmitterComponent_C_ExecuteUbergraph_BP_FireworksEmitterComponent::K2Node_Event_Velocity' has a wrong offset!");
static_assert(offsetof(BP_FireworksEmitterComponent_C_ExecuteUbergraph_BP_FireworksEmitterComponent, K2Node_Event_Direction) == 0x00002C, "Member 'BP_FireworksEmitterComponent_C_ExecuteUbergraph_BP_FireworksEmitterComponent::K2Node_Event_Direction' has a wrong offset!");
static_assert(offsetof(BP_FireworksEmitterComponent_C_ExecuteUbergraph_BP_FireworksEmitterComponent, K2Node_Event_Normal) == 0x000038, "Member 'BP_FireworksEmitterComponent_C_ExecuteUbergraph_BP_FireworksEmitterComponent::K2Node_Event_Normal' has a wrong offset!");
static_assert(offsetof(BP_FireworksEmitterComponent_C_ExecuteUbergraph_BP_FireworksEmitterComponent, K2Node_Event_BoneName) == 0x000044, "Member 'BP_FireworksEmitterComponent_C_ExecuteUbergraph_BP_FireworksEmitterComponent::K2Node_Event_BoneName' has a wrong offset!");
static_assert(offsetof(BP_FireworksEmitterComponent_C_ExecuteUbergraph_BP_FireworksEmitterComponent, K2Node_Event_PhysMat) == 0x000050, "Member 'BP_FireworksEmitterComponent_C_ExecuteUbergraph_BP_FireworksEmitterComponent::K2Node_Event_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_FireworksEmitterComponent_C_ExecuteUbergraph_BP_FireworksEmitterComponent, K2Node_Event_EventName_3) == 0x000058, "Member 'BP_FireworksEmitterComponent_C_ExecuteUbergraph_BP_FireworksEmitterComponent::K2Node_Event_EventName_3' has a wrong offset!");
static_assert(offsetof(BP_FireworksEmitterComponent_C_ExecuteUbergraph_BP_FireworksEmitterComponent, K2Node_Event_EmitterTime_3) == 0x000060, "Member 'BP_FireworksEmitterComponent_C_ExecuteUbergraph_BP_FireworksEmitterComponent::K2Node_Event_EmitterTime_3' has a wrong offset!");
static_assert(offsetof(BP_FireworksEmitterComponent_C_ExecuteUbergraph_BP_FireworksEmitterComponent, K2Node_Event_Location_2) == 0x000064, "Member 'BP_FireworksEmitterComponent_C_ExecuteUbergraph_BP_FireworksEmitterComponent::K2Node_Event_Location_2' has a wrong offset!");
static_assert(offsetof(BP_FireworksEmitterComponent_C_ExecuteUbergraph_BP_FireworksEmitterComponent, K2Node_Event_Velocity_2) == 0x000070, "Member 'BP_FireworksEmitterComponent_C_ExecuteUbergraph_BP_FireworksEmitterComponent::K2Node_Event_Velocity_2' has a wrong offset!");
static_assert(offsetof(BP_FireworksEmitterComponent_C_ExecuteUbergraph_BP_FireworksEmitterComponent, K2Node_Event_EventName_2) == 0x00007C, "Member 'BP_FireworksEmitterComponent_C_ExecuteUbergraph_BP_FireworksEmitterComponent::K2Node_Event_EventName_2' has a wrong offset!");
static_assert(offsetof(BP_FireworksEmitterComponent_C_ExecuteUbergraph_BP_FireworksEmitterComponent, K2Node_Event_EmitterTime_2) == 0x000084, "Member 'BP_FireworksEmitterComponent_C_ExecuteUbergraph_BP_FireworksEmitterComponent::K2Node_Event_EmitterTime_2' has a wrong offset!");
static_assert(offsetof(BP_FireworksEmitterComponent_C_ExecuteUbergraph_BP_FireworksEmitterComponent, K2Node_Event_ParticleCount) == 0x000088, "Member 'BP_FireworksEmitterComponent_C_ExecuteUbergraph_BP_FireworksEmitterComponent::K2Node_Event_ParticleCount' has a wrong offset!");
static_assert(offsetof(BP_FireworksEmitterComponent_C_ExecuteUbergraph_BP_FireworksEmitterComponent, CallFunc_Add_VectorVector_ReturnValue) == 0x00008C, "Member 'BP_FireworksEmitterComponent_C_ExecuteUbergraph_BP_FireworksEmitterComponent::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FireworksEmitterComponent_C_ExecuteUbergraph_BP_FireworksEmitterComponent, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000098, "Member 'BP_FireworksEmitterComponent_C_ExecuteUbergraph_BP_FireworksEmitterComponent::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FireworksEmitterComponent_C_ExecuteUbergraph_BP_FireworksEmitterComponent, K2Node_Event_EventName_1) == 0x00009C, "Member 'BP_FireworksEmitterComponent_C_ExecuteUbergraph_BP_FireworksEmitterComponent::K2Node_Event_EventName_1' has a wrong offset!");
static_assert(offsetof(BP_FireworksEmitterComponent_C_ExecuteUbergraph_BP_FireworksEmitterComponent, K2Node_Event_EmitterTime_1) == 0x0000A4, "Member 'BP_FireworksEmitterComponent_C_ExecuteUbergraph_BP_FireworksEmitterComponent::K2Node_Event_EmitterTime_1' has a wrong offset!");
static_assert(offsetof(BP_FireworksEmitterComponent_C_ExecuteUbergraph_BP_FireworksEmitterComponent, K2Node_Event_ParticleTime_1) == 0x0000A8, "Member 'BP_FireworksEmitterComponent_C_ExecuteUbergraph_BP_FireworksEmitterComponent::K2Node_Event_ParticleTime_1' has a wrong offset!");
static_assert(offsetof(BP_FireworksEmitterComponent_C_ExecuteUbergraph_BP_FireworksEmitterComponent, K2Node_Event_Location_1) == 0x0000AC, "Member 'BP_FireworksEmitterComponent_C_ExecuteUbergraph_BP_FireworksEmitterComponent::K2Node_Event_Location_1' has a wrong offset!");
static_assert(offsetof(BP_FireworksEmitterComponent_C_ExecuteUbergraph_BP_FireworksEmitterComponent, K2Node_Event_Velocity_1) == 0x0000B8, "Member 'BP_FireworksEmitterComponent_C_ExecuteUbergraph_BP_FireworksEmitterComponent::K2Node_Event_Velocity_1' has a wrong offset!");
static_assert(offsetof(BP_FireworksEmitterComponent_C_ExecuteUbergraph_BP_FireworksEmitterComponent, K2Node_Event_Direction_1) == 0x0000C4, "Member 'BP_FireworksEmitterComponent_C_ExecuteUbergraph_BP_FireworksEmitterComponent::K2Node_Event_Direction_1' has a wrong offset!");
static_assert(offsetof(BP_FireworksEmitterComponent_C_ExecuteUbergraph_BP_FireworksEmitterComponent, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x0000D0, "Member 'BP_FireworksEmitterComponent_C_ExecuteUbergraph_BP_FireworksEmitterComponent::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");

// Function BP_FireworksEmitterComponent.BP_FireworksEmitterComponent_C.OnParticleCollideImpl
// 0x0050 (0x0050 - 0x0000)
struct BP_FireworksEmitterComponent_C_OnParticleCollideImpl final
{
public:
	class FName                                   EventName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EmitterTime;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ParticleTime;                                      // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Velocity;                                          // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Direction;                                         // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Normal;                                            // 0x0034(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      PhysMat;                                           // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FireworksEmitterComponent_C_OnParticleCollideImpl) == 0x000008, "Wrong alignment on BP_FireworksEmitterComponent_C_OnParticleCollideImpl");
static_assert(sizeof(BP_FireworksEmitterComponent_C_OnParticleCollideImpl) == 0x000050, "Wrong size on BP_FireworksEmitterComponent_C_OnParticleCollideImpl");
static_assert(offsetof(BP_FireworksEmitterComponent_C_OnParticleCollideImpl, EventName) == 0x000000, "Member 'BP_FireworksEmitterComponent_C_OnParticleCollideImpl::EventName' has a wrong offset!");
static_assert(offsetof(BP_FireworksEmitterComponent_C_OnParticleCollideImpl, EmitterTime) == 0x000008, "Member 'BP_FireworksEmitterComponent_C_OnParticleCollideImpl::EmitterTime' has a wrong offset!");
static_assert(offsetof(BP_FireworksEmitterComponent_C_OnParticleCollideImpl, ParticleTime) == 0x00000C, "Member 'BP_FireworksEmitterComponent_C_OnParticleCollideImpl::ParticleTime' has a wrong offset!");
static_assert(offsetof(BP_FireworksEmitterComponent_C_OnParticleCollideImpl, Location) == 0x000010, "Member 'BP_FireworksEmitterComponent_C_OnParticleCollideImpl::Location' has a wrong offset!");
static_assert(offsetof(BP_FireworksEmitterComponent_C_OnParticleCollideImpl, Velocity) == 0x00001C, "Member 'BP_FireworksEmitterComponent_C_OnParticleCollideImpl::Velocity' has a wrong offset!");
static_assert(offsetof(BP_FireworksEmitterComponent_C_OnParticleCollideImpl, Direction) == 0x000028, "Member 'BP_FireworksEmitterComponent_C_OnParticleCollideImpl::Direction' has a wrong offset!");
static_assert(offsetof(BP_FireworksEmitterComponent_C_OnParticleCollideImpl, Normal) == 0x000034, "Member 'BP_FireworksEmitterComponent_C_OnParticleCollideImpl::Normal' has a wrong offset!");
static_assert(offsetof(BP_FireworksEmitterComponent_C_OnParticleCollideImpl, BoneName) == 0x000040, "Member 'BP_FireworksEmitterComponent_C_OnParticleCollideImpl::BoneName' has a wrong offset!");
static_assert(offsetof(BP_FireworksEmitterComponent_C_OnParticleCollideImpl, PhysMat) == 0x000048, "Member 'BP_FireworksEmitterComponent_C_OnParticleCollideImpl::PhysMat' has a wrong offset!");

// Function BP_FireworksEmitterComponent.BP_FireworksEmitterComponent_C.OnParticleDeathImpl
// 0x0034 (0x0034 - 0x0000)
struct BP_FireworksEmitterComponent_C_OnParticleDeathImpl final
{
public:
	class FName                                   EventName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EmitterTime;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ParticleTime;                                      // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Velocity;                                          // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Direction;                                         // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FireworksEmitterComponent_C_OnParticleDeathImpl) == 0x000004, "Wrong alignment on BP_FireworksEmitterComponent_C_OnParticleDeathImpl");
static_assert(sizeof(BP_FireworksEmitterComponent_C_OnParticleDeathImpl) == 0x000034, "Wrong size on BP_FireworksEmitterComponent_C_OnParticleDeathImpl");
static_assert(offsetof(BP_FireworksEmitterComponent_C_OnParticleDeathImpl, EventName) == 0x000000, "Member 'BP_FireworksEmitterComponent_C_OnParticleDeathImpl::EventName' has a wrong offset!");
static_assert(offsetof(BP_FireworksEmitterComponent_C_OnParticleDeathImpl, EmitterTime) == 0x000008, "Member 'BP_FireworksEmitterComponent_C_OnParticleDeathImpl::EmitterTime' has a wrong offset!");
static_assert(offsetof(BP_FireworksEmitterComponent_C_OnParticleDeathImpl, ParticleTime) == 0x00000C, "Member 'BP_FireworksEmitterComponent_C_OnParticleDeathImpl::ParticleTime' has a wrong offset!");
static_assert(offsetof(BP_FireworksEmitterComponent_C_OnParticleDeathImpl, Location) == 0x000010, "Member 'BP_FireworksEmitterComponent_C_OnParticleDeathImpl::Location' has a wrong offset!");
static_assert(offsetof(BP_FireworksEmitterComponent_C_OnParticleDeathImpl, Velocity) == 0x00001C, "Member 'BP_FireworksEmitterComponent_C_OnParticleDeathImpl::Velocity' has a wrong offset!");
static_assert(offsetof(BP_FireworksEmitterComponent_C_OnParticleDeathImpl, Direction) == 0x000028, "Member 'BP_FireworksEmitterComponent_C_OnParticleDeathImpl::Direction' has a wrong offset!");

// Function BP_FireworksEmitterComponent.BP_FireworksEmitterComponent_C.OnParticleBurstImpl
// 0x0010 (0x0010 - 0x0000)
struct BP_FireworksEmitterComponent_C_OnParticleBurstImpl final
{
public:
	class FName                                   EventName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EmitterTime;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ParticleCount;                                     // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FireworksEmitterComponent_C_OnParticleBurstImpl) == 0x000004, "Wrong alignment on BP_FireworksEmitterComponent_C_OnParticleBurstImpl");
static_assert(sizeof(BP_FireworksEmitterComponent_C_OnParticleBurstImpl) == 0x000010, "Wrong size on BP_FireworksEmitterComponent_C_OnParticleBurstImpl");
static_assert(offsetof(BP_FireworksEmitterComponent_C_OnParticleBurstImpl, EventName) == 0x000000, "Member 'BP_FireworksEmitterComponent_C_OnParticleBurstImpl::EventName' has a wrong offset!");
static_assert(offsetof(BP_FireworksEmitterComponent_C_OnParticleBurstImpl, EmitterTime) == 0x000008, "Member 'BP_FireworksEmitterComponent_C_OnParticleBurstImpl::EmitterTime' has a wrong offset!");
static_assert(offsetof(BP_FireworksEmitterComponent_C_OnParticleBurstImpl, ParticleCount) == 0x00000C, "Member 'BP_FireworksEmitterComponent_C_OnParticleBurstImpl::ParticleCount' has a wrong offset!");

// Function BP_FireworksEmitterComponent.BP_FireworksEmitterComponent_C.OnParticleSpawnImpl
// 0x0024 (0x0024 - 0x0000)
struct BP_FireworksEmitterComponent_C_OnParticleSpawnImpl final
{
public:
	class FName                                   EventName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EmitterTime;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Velocity;                                          // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FireworksEmitterComponent_C_OnParticleSpawnImpl) == 0x000004, "Wrong alignment on BP_FireworksEmitterComponent_C_OnParticleSpawnImpl");
static_assert(sizeof(BP_FireworksEmitterComponent_C_OnParticleSpawnImpl) == 0x000024, "Wrong size on BP_FireworksEmitterComponent_C_OnParticleSpawnImpl");
static_assert(offsetof(BP_FireworksEmitterComponent_C_OnParticleSpawnImpl, EventName) == 0x000000, "Member 'BP_FireworksEmitterComponent_C_OnParticleSpawnImpl::EventName' has a wrong offset!");
static_assert(offsetof(BP_FireworksEmitterComponent_C_OnParticleSpawnImpl, EmitterTime) == 0x000008, "Member 'BP_FireworksEmitterComponent_C_OnParticleSpawnImpl::EmitterTime' has a wrong offset!");
static_assert(offsetof(BP_FireworksEmitterComponent_C_OnParticleSpawnImpl, Location) == 0x00000C, "Member 'BP_FireworksEmitterComponent_C_OnParticleSpawnImpl::Location' has a wrong offset!");
static_assert(offsetof(BP_FireworksEmitterComponent_C_OnParticleSpawnImpl, Velocity) == 0x000018, "Member 'BP_FireworksEmitterComponent_C_OnParticleSpawnImpl::Velocity' has a wrong offset!");

}

