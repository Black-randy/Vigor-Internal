#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TellComponent_Exit

#include "Basic.hpp"

#include "BP_TellComponent_Exit_classes.hpp"
#include "BP_TellComponent_Exit_parameters.hpp"


namespace SDK
{

// Function BP_TellComponent_Exit.BP_TellComponent_Exit_C.ExecuteUbergraph_BP_TellComponent_Exit
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_TellComponent_Exit_C::ExecuteUbergraph_BP_TellComponent_Exit(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TellComponent_Exit_C", "ExecuteUbergraph_BP_TellComponent_Exit");

	Params::BP_TellComponent_Exit_C_ExecuteUbergraph_BP_TellComponent_Exit Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TellComponent_Exit.BP_TellComponent_Exit_C.EncounterStarted
// (BlueprintCallable, BlueprintEvent)

void UBP_TellComponent_Exit_C::EncounterStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TellComponent_Exit_C", "EncounterStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TellComponent_Exit.BP_TellComponent_Exit_C.PlayTellEffect
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_TellComponent_Exit_C::PlayTellEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TellComponent_Exit_C", "PlayTellEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TellComponent_Exit.BP_TellComponent_Exit_C.RegisterBirdsSpawn
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_ExitTell_BirdsSpawnPoint_C*   BirdsSpawn_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_TellComponent_Exit_C::RegisterBirdsSpawn(class ABP_ExitTell_BirdsSpawnPoint_C* BirdsSpawn_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TellComponent_Exit_C", "RegisterBirdsSpawn");

	Params::BP_TellComponent_Exit_C_RegisterBirdsSpawn Parms{};

	Parms.BirdsSpawn_0 = BirdsSpawn_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TellComponent_Exit.BP_TellComponent_Exit_C.SendAnalyticEvent
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHumanCharacter*                  IncomingPlayer                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TSet<class AHumanCharacter*>            Campers                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    TellFired                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_TellComponent_Exit_C::SendAnalyticEvent(class AHumanCharacter*& IncomingPlayer, TSet<class AHumanCharacter*>& Campers, bool TellFired)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TellComponent_Exit_C", "SendAnalyticEvent");

	Params::BP_TellComponent_Exit_C_SendAnalyticEvent Parms{};

	Parms.IncomingPlayer = IncomingPlayer;
	Parms.Campers = std::move(Campers);
	Parms.TellFired = TellFired;

	UObject::ProcessEvent(Func, &Parms);

	IncomingPlayer = Parms.IncomingPlayer;
	Campers = std::move(Parms.Campers);
}

}

