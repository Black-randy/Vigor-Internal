#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_OpenableExitVolume

#include "Basic.hpp"

#include "S_OpenableExitIcon_structs.hpp"


namespace SDK::Params
{

// Function BP_OpenableExitVolume.BP_OpenableExitVolume_C.ExecuteUbergraph_BP_OpenableExitVolume
// 0x0050 (0x0050 - 0x0000)
struct BP_OpenableExitVolume_C_ExecuteUbergraph_BP_OpenableExitVolume final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Active;                         // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanCharacter*                        K2Node_CustomEvent_HumanCharacter;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanCharacter*                        K2Node_CustomEvent_Human_Character_1;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanCharacter*                        K2Node_CustomEvent_Human_Character;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEventSystem*                           CallFunc_GetEventSystem_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_EventSystem_C*                      K2Node_DynamicCast_AsBP_Event_System;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_OpenableExitVolume_C_ExecuteUbergraph_BP_OpenableExitVolume) == 0x000008, "Wrong alignment on BP_OpenableExitVolume_C_ExecuteUbergraph_BP_OpenableExitVolume");
static_assert(sizeof(BP_OpenableExitVolume_C_ExecuteUbergraph_BP_OpenableExitVolume) == 0x000050, "Wrong size on BP_OpenableExitVolume_C_ExecuteUbergraph_BP_OpenableExitVolume");
static_assert(offsetof(BP_OpenableExitVolume_C_ExecuteUbergraph_BP_OpenableExitVolume, EntryPoint) == 0x000000, "Member 'BP_OpenableExitVolume_C_ExecuteUbergraph_BP_OpenableExitVolume::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_OpenableExitVolume_C_ExecuteUbergraph_BP_OpenableExitVolume, CallFunc_HasAuthority_ReturnValue) == 0x000004, "Member 'BP_OpenableExitVolume_C_ExecuteUbergraph_BP_OpenableExitVolume::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OpenableExitVolume_C_ExecuteUbergraph_BP_OpenableExitVolume, K2Node_CustomEvent_Active) == 0x000005, "Member 'BP_OpenableExitVolume_C_ExecuteUbergraph_BP_OpenableExitVolume::K2Node_CustomEvent_Active' has a wrong offset!");
static_assert(offsetof(BP_OpenableExitVolume_C_ExecuteUbergraph_BP_OpenableExitVolume, CallFunc_Not_PreBool_ReturnValue) == 0x000006, "Member 'BP_OpenableExitVolume_C_ExecuteUbergraph_BP_OpenableExitVolume::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OpenableExitVolume_C_ExecuteUbergraph_BP_OpenableExitVolume, K2Node_CustomEvent_HumanCharacter) == 0x000008, "Member 'BP_OpenableExitVolume_C_ExecuteUbergraph_BP_OpenableExitVolume::K2Node_CustomEvent_HumanCharacter' has a wrong offset!");
static_assert(offsetof(BP_OpenableExitVolume_C_ExecuteUbergraph_BP_OpenableExitVolume, CallFunc_HasAuthority_ReturnValue_1) == 0x000010, "Member 'BP_OpenableExitVolume_C_ExecuteUbergraph_BP_OpenableExitVolume::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OpenableExitVolume_C_ExecuteUbergraph_BP_OpenableExitVolume, K2Node_CustomEvent_Human_Character_1) == 0x000018, "Member 'BP_OpenableExitVolume_C_ExecuteUbergraph_BP_OpenableExitVolume::K2Node_CustomEvent_Human_Character_1' has a wrong offset!");
static_assert(offsetof(BP_OpenableExitVolume_C_ExecuteUbergraph_BP_OpenableExitVolume, K2Node_CustomEvent_Human_Character) == 0x000020, "Member 'BP_OpenableExitVolume_C_ExecuteUbergraph_BP_OpenableExitVolume::K2Node_CustomEvent_Human_Character' has a wrong offset!");
static_assert(offsetof(BP_OpenableExitVolume_C_ExecuteUbergraph_BP_OpenableExitVolume, CallFunc_GetEventSystem_ReturnValue) == 0x000028, "Member 'BP_OpenableExitVolume_C_ExecuteUbergraph_BP_OpenableExitVolume::CallFunc_GetEventSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OpenableExitVolume_C_ExecuteUbergraph_BP_OpenableExitVolume, K2Node_DynamicCast_AsBP_Event_System) == 0x000030, "Member 'BP_OpenableExitVolume_C_ExecuteUbergraph_BP_OpenableExitVolume::K2Node_DynamicCast_AsBP_Event_System' has a wrong offset!");
static_assert(offsetof(BP_OpenableExitVolume_C_ExecuteUbergraph_BP_OpenableExitVolume, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_OpenableExitVolume_C_ExecuteUbergraph_BP_OpenableExitVolume::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_OpenableExitVolume_C_ExecuteUbergraph_BP_OpenableExitVolume, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000040, "Member 'BP_OpenableExitVolume_C_ExecuteUbergraph_BP_OpenableExitVolume::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OpenableExitVolume_C_ExecuteUbergraph_BP_OpenableExitVolume, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000048, "Member 'BP_OpenableExitVolume_C_ExecuteUbergraph_BP_OpenableExitVolume::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_OpenableExitVolume.BP_OpenableExitVolume_C.Event CallUnlockExitChallenge OnServer
// 0x0008 (0x0008 - 0x0000)
struct BP_OpenableExitVolume_C_Event_CallUnlockExitChallenge_OnServer final
{
public:
	class AHumanCharacter*                        Human_Character;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OpenableExitVolume_C_Event_CallUnlockExitChallenge_OnServer) == 0x000008, "Wrong alignment on BP_OpenableExitVolume_C_Event_CallUnlockExitChallenge_OnServer");
static_assert(sizeof(BP_OpenableExitVolume_C_Event_CallUnlockExitChallenge_OnServer) == 0x000008, "Wrong size on BP_OpenableExitVolume_C_Event_CallUnlockExitChallenge_OnServer");
static_assert(offsetof(BP_OpenableExitVolume_C_Event_CallUnlockExitChallenge_OnServer, Human_Character) == 0x000000, "Member 'BP_OpenableExitVolume_C_Event_CallUnlockExitChallenge_OnServer::Human_Character' has a wrong offset!");

// Function BP_OpenableExitVolume.BP_OpenableExitVolume_C.Event CallUnlockExitChallenge Multicast
// 0x0008 (0x0008 - 0x0000)
struct BP_OpenableExitVolume_C_Event_CallUnlockExitChallenge_Multicast final
{
public:
	class AHumanCharacter*                        Human_Character;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OpenableExitVolume_C_Event_CallUnlockExitChallenge_Multicast) == 0x000008, "Wrong alignment on BP_OpenableExitVolume_C_Event_CallUnlockExitChallenge_Multicast");
static_assert(sizeof(BP_OpenableExitVolume_C_Event_CallUnlockExitChallenge_Multicast) == 0x000008, "Wrong size on BP_OpenableExitVolume_C_Event_CallUnlockExitChallenge_Multicast");
static_assert(offsetof(BP_OpenableExitVolume_C_Event_CallUnlockExitChallenge_Multicast, Human_Character) == 0x000000, "Member 'BP_OpenableExitVolume_C_Event_CallUnlockExitChallenge_Multicast::Human_Character' has a wrong offset!");

// Function BP_OpenableExitVolume.BP_OpenableExitVolume_C.Event CallUnlockExitChallenge
// 0x0008 (0x0008 - 0x0000)
struct BP_OpenableExitVolume_C_Event_CallUnlockExitChallenge final
{
public:
	class AHumanCharacter*                        HumanCharacter;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OpenableExitVolume_C_Event_CallUnlockExitChallenge) == 0x000008, "Wrong alignment on BP_OpenableExitVolume_C_Event_CallUnlockExitChallenge");
static_assert(sizeof(BP_OpenableExitVolume_C_Event_CallUnlockExitChallenge) == 0x000008, "Wrong size on BP_OpenableExitVolume_C_Event_CallUnlockExitChallenge");
static_assert(offsetof(BP_OpenableExitVolume_C_Event_CallUnlockExitChallenge, HumanCharacter) == 0x000000, "Member 'BP_OpenableExitVolume_C_Event_CallUnlockExitChallenge::HumanCharacter' has a wrong offset!");

// Function BP_OpenableExitVolume.BP_OpenableExitVolume_C.Set Marker Active
// 0x0001 (0x0001 - 0x0000)
struct BP_OpenableExitVolume_C_Set_Marker_Active final
{
public:
	bool                                          Active;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_OpenableExitVolume_C_Set_Marker_Active) == 0x000001, "Wrong alignment on BP_OpenableExitVolume_C_Set_Marker_Active");
static_assert(sizeof(BP_OpenableExitVolume_C_Set_Marker_Active) == 0x000001, "Wrong size on BP_OpenableExitVolume_C_Set_Marker_Active");
static_assert(offsetof(BP_OpenableExitVolume_C_Set_Marker_Active, Active) == 0x000000, "Member 'BP_OpenableExitVolume_C_Set_Marker_Active::Active' has a wrong offset!");

// Function BP_OpenableExitVolume.BP_OpenableExitVolume_C.Character Stepped Into Exit
// 0x0020 (0x0020 - 0x0000)
struct BP_OpenableExitVolume_C_Character_Stepped_Into_Exit final
{
public:
	class ABP_Character_Script_C*                 Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_Script_C*          K2Node_DynamicCast_AsBP_Player_Controller_Script;  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_OpenableExitVolume_C_Character_Stepped_Into_Exit) == 0x000008, "Wrong alignment on BP_OpenableExitVolume_C_Character_Stepped_Into_Exit");
static_assert(sizeof(BP_OpenableExitVolume_C_Character_Stepped_Into_Exit) == 0x000020, "Wrong size on BP_OpenableExitVolume_C_Character_Stepped_Into_Exit");
static_assert(offsetof(BP_OpenableExitVolume_C_Character_Stepped_Into_Exit, Character) == 0x000000, "Member 'BP_OpenableExitVolume_C_Character_Stepped_Into_Exit::Character' has a wrong offset!");
static_assert(offsetof(BP_OpenableExitVolume_C_Character_Stepped_Into_Exit, CallFunc_GetController_ReturnValue) == 0x000008, "Member 'BP_OpenableExitVolume_C_Character_Stepped_Into_Exit::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OpenableExitVolume_C_Character_Stepped_Into_Exit, K2Node_DynamicCast_AsBP_Player_Controller_Script) == 0x000010, "Member 'BP_OpenableExitVolume_C_Character_Stepped_Into_Exit::K2Node_DynamicCast_AsBP_Player_Controller_Script' has a wrong offset!");
static_assert(offsetof(BP_OpenableExitVolume_C_Character_Stepped_Into_Exit, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_OpenableExitVolume_C_Character_Stepped_Into_Exit::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_OpenableExitVolume_C_Character_Stepped_Into_Exit, CallFunc_BooleanOR_ReturnValue) == 0x000019, "Member 'BP_OpenableExitVolume_C_Character_Stepped_Into_Exit::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_OpenableExitVolume.BP_OpenableExitVolume_C.Open Exit
// 0x0050 (0x0050 - 0x0000)
struct BP_OpenableExitVolume_C_Open_Exit final
{
public:
	class AHumanCharacter*                        HumanCharacer;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0018(0x0010)(ReferenceParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Character_Script_C*                 K2Node_DynamicCast_AsBP_Character_Script;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_OpenableExitVolume_C_Open_Exit) == 0x000008, "Wrong alignment on BP_OpenableExitVolume_C_Open_Exit");
static_assert(sizeof(BP_OpenableExitVolume_C_Open_Exit) == 0x000050, "Wrong size on BP_OpenableExitVolume_C_Open_Exit");
static_assert(offsetof(BP_OpenableExitVolume_C_Open_Exit, HumanCharacer) == 0x000000, "Member 'BP_OpenableExitVolume_C_Open_Exit::HumanCharacer' has a wrong offset!");
static_assert(offsetof(BP_OpenableExitVolume_C_Open_Exit, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_OpenableExitVolume_C_Open_Exit::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_OpenableExitVolume_C_Open_Exit, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_OpenableExitVolume_C_Open_Exit::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_OpenableExitVolume_C_Open_Exit, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_OpenableExitVolume_C_Open_Exit::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OpenableExitVolume_C_Open_Exit, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000018, "Member 'BP_OpenableExitVolume_C_Open_Exit::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(BP_OpenableExitVolume_C_Open_Exit, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'BP_OpenableExitVolume_C_Open_Exit::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OpenableExitVolume_C_Open_Exit, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_OpenableExitVolume_C_Open_Exit::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_OpenableExitVolume_C_Open_Exit, K2Node_DynamicCast_AsBP_Character_Script) == 0x000038, "Member 'BP_OpenableExitVolume_C_Open_Exit::K2Node_DynamicCast_AsBP_Character_Script' has a wrong offset!");
static_assert(offsetof(BP_OpenableExitVolume_C_Open_Exit, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_OpenableExitVolume_C_Open_Exit::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_OpenableExitVolume_C_Open_Exit, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'BP_OpenableExitVolume_C_Open_Exit::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OpenableExitVolume_C_Open_Exit, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'BP_OpenableExitVolume_C_Open_Exit::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_OpenableExitVolume.BP_OpenableExitVolume_C.Set Required Resource
// 0x0050 (0x0050 - 0x0000)
struct BP_OpenableExitVolume_C_Set_Required_Resource final
{
public:
	class UClass*                                 Required_Resource;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetClassDisplayName_ReturnValue;          // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_OpenableExitIcon                    CallFunc_GetDataTableRowFromName_OutRow;           // 0x0030(0x0018)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_OpenableExitVolume_C_Set_Required_Resource) == 0x000008, "Wrong alignment on BP_OpenableExitVolume_C_Set_Required_Resource");
static_assert(sizeof(BP_OpenableExitVolume_C_Set_Required_Resource) == 0x000050, "Wrong size on BP_OpenableExitVolume_C_Set_Required_Resource");
static_assert(offsetof(BP_OpenableExitVolume_C_Set_Required_Resource, Required_Resource) == 0x000000, "Member 'BP_OpenableExitVolume_C_Set_Required_Resource::Required_Resource' has a wrong offset!");
static_assert(offsetof(BP_OpenableExitVolume_C_Set_Required_Resource, CallFunc_GetClassDisplayName_ReturnValue) == 0x000008, "Member 'BP_OpenableExitVolume_C_Set_Required_Resource::CallFunc_GetClassDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OpenableExitVolume_C_Set_Required_Resource, CallFunc_Replace_ReturnValue) == 0x000018, "Member 'BP_OpenableExitVolume_C_Set_Required_Resource::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OpenableExitVolume_C_Set_Required_Resource, CallFunc_Conv_StringToName_ReturnValue) == 0x000028, "Member 'BP_OpenableExitVolume_C_Set_Required_Resource::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OpenableExitVolume_C_Set_Required_Resource, CallFunc_GetDataTableRowFromName_OutRow) == 0x000030, "Member 'BP_OpenableExitVolume_C_Set_Required_Resource::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_OpenableExitVolume_C_Set_Required_Resource, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000048, "Member 'BP_OpenableExitVolume_C_Set_Required_Resource::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

}

