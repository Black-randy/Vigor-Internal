#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_LobbyMannequin

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "E_MeshSpecificJiggle_structs.hpp"


namespace SDK::Params
{

// Function ABP_LobbyMannequin.ABP_LobbyMannequin_C.ExecuteUbergraph_ABP_LobbyMannequin
// 0x0008 (0x0008 - 0x0000)
struct ABP_LobbyMannequin_C_ExecuteUbergraph_ABP_LobbyMannequin final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_LobbyMannequin_C_ExecuteUbergraph_ABP_LobbyMannequin) == 0x000004, "Wrong alignment on ABP_LobbyMannequin_C_ExecuteUbergraph_ABP_LobbyMannequin");
static_assert(sizeof(ABP_LobbyMannequin_C_ExecuteUbergraph_ABP_LobbyMannequin) == 0x000008, "Wrong size on ABP_LobbyMannequin_C_ExecuteUbergraph_ABP_LobbyMannequin");
static_assert(offsetof(ABP_LobbyMannequin_C_ExecuteUbergraph_ABP_LobbyMannequin, EntryPoint) == 0x000000, "Member 'ABP_LobbyMannequin_C_ExecuteUbergraph_ABP_LobbyMannequin::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_LobbyMannequin_C_ExecuteUbergraph_ABP_LobbyMannequin, K2Node_Event_DeltaTimeX) == 0x000004, "Member 'ABP_LobbyMannequin_C_ExecuteUbergraph_ABP_LobbyMannequin::K2Node_Event_DeltaTimeX' has a wrong offset!");

// Function ABP_LobbyMannequin.ABP_LobbyMannequin_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct ABP_LobbyMannequin_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_LobbyMannequin_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on ABP_LobbyMannequin_C_BlueprintUpdateAnimation");
static_assert(sizeof(ABP_LobbyMannequin_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on ABP_LobbyMannequin_C_BlueprintUpdateAnimation");
static_assert(offsetof(ABP_LobbyMannequin_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'ABP_LobbyMannequin_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function ABP_LobbyMannequin.ABP_LobbyMannequin_C.SetCurrentPose
// 0x0010 (0x0010 - 0x0000)
struct ABP_LobbyMannequin_C_SetCurrentPose final
{
public:
	class UAnimSequenceBase*                      Pose;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ABP_LobbyMannequin_C_SetCurrentPose) == 0x000008, "Wrong alignment on ABP_LobbyMannequin_C_SetCurrentPose");
static_assert(sizeof(ABP_LobbyMannequin_C_SetCurrentPose) == 0x000010, "Wrong size on ABP_LobbyMannequin_C_SetCurrentPose");
static_assert(offsetof(ABP_LobbyMannequin_C_SetCurrentPose, Pose) == 0x000000, "Member 'ABP_LobbyMannequin_C_SetCurrentPose::Pose' has a wrong offset!");
static_assert(offsetof(ABP_LobbyMannequin_C_SetCurrentPose, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000008, "Member 'ABP_LobbyMannequin_C_SetCurrentPose::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_LobbyMannequin_C_SetCurrentPose, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000009, "Member 'ABP_LobbyMannequin_C_SetCurrentPose::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_LobbyMannequin_C_SetCurrentPose, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00000A, "Member 'ABP_LobbyMannequin_C_SetCurrentPose::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");

// Function ABP_LobbyMannequin.ABP_LobbyMannequin_C.SetJiggleTypeAnims
// 0x0010 (0x0010 - 0x0000)
struct ABP_LobbyMannequin_C_SetJiggleTypeAnims final
{
public:
	class UAnimSequence*                          AnimPose;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         JigglePartIndex;                                   // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MeshSpecificJiggle                          JiggleType;                                        // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ABP_LobbyMannequin_C_SetJiggleTypeAnims) == 0x000008, "Wrong alignment on ABP_LobbyMannequin_C_SetJiggleTypeAnims");
static_assert(sizeof(ABP_LobbyMannequin_C_SetJiggleTypeAnims) == 0x000010, "Wrong size on ABP_LobbyMannequin_C_SetJiggleTypeAnims");
static_assert(offsetof(ABP_LobbyMannequin_C_SetJiggleTypeAnims, AnimPose) == 0x000000, "Member 'ABP_LobbyMannequin_C_SetJiggleTypeAnims::AnimPose' has a wrong offset!");
static_assert(offsetof(ABP_LobbyMannequin_C_SetJiggleTypeAnims, JigglePartIndex) == 0x000008, "Member 'ABP_LobbyMannequin_C_SetJiggleTypeAnims::JigglePartIndex' has a wrong offset!");
static_assert(offsetof(ABP_LobbyMannequin_C_SetJiggleTypeAnims, JiggleType) == 0x00000C, "Member 'ABP_LobbyMannequin_C_SetJiggleTypeAnims::JiggleType' has a wrong offset!");
static_assert(offsetof(ABP_LobbyMannequin_C_SetJiggleTypeAnims, K2Node_SwitchInteger_CmpSuccess) == 0x00000D, "Member 'ABP_LobbyMannequin_C_SetJiggleTypeAnims::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function ABP_LobbyMannequin.ABP_LobbyMannequin_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ABP_LobbyMannequin_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_LobbyMannequin_C_AnimGraph) == 0x000008, "Wrong alignment on ABP_LobbyMannequin_C_AnimGraph");
static_assert(sizeof(ABP_LobbyMannequin_C_AnimGraph) == 0x000010, "Wrong size on ABP_LobbyMannequin_C_AnimGraph");
static_assert(offsetof(ABP_LobbyMannequin_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'ABP_LobbyMannequin_C_AnimGraph::AnimGraph_0' has a wrong offset!");

// Function ABP_LobbyMannequin.ABP_LobbyMannequin_C.FixCustomizationsWithJiggle
// 0x0020 (0x0020 - 0x0000)
struct ABP_LobbyMannequin_C_FixCustomizationsWithJiggle final
{
public:
	struct FPoseLink                              InPose;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              FixCustomizationsWithJiggle_0;                     // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_LobbyMannequin_C_FixCustomizationsWithJiggle) == 0x000008, "Wrong alignment on ABP_LobbyMannequin_C_FixCustomizationsWithJiggle");
static_assert(sizeof(ABP_LobbyMannequin_C_FixCustomizationsWithJiggle) == 0x000020, "Wrong size on ABP_LobbyMannequin_C_FixCustomizationsWithJiggle");
static_assert(offsetof(ABP_LobbyMannequin_C_FixCustomizationsWithJiggle, InPose) == 0x000000, "Member 'ABP_LobbyMannequin_C_FixCustomizationsWithJiggle::InPose' has a wrong offset!");
static_assert(offsetof(ABP_LobbyMannequin_C_FixCustomizationsWithJiggle, FixCustomizationsWithJiggle_0) == 0x000010, "Member 'ABP_LobbyMannequin_C_FixCustomizationsWithJiggle::FixCustomizationsWithJiggle_0' has a wrong offset!");

}

