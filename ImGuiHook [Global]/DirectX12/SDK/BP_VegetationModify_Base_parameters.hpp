#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VegetationModify_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Flame_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "S_Vegetation_Modifier_Info_structs.hpp"


namespace SDK::Params
{

// Function BP_VegetationModify_Base.BP_VegetationModify_Base_C.ExecuteUbergraph_BP_VegetationModify_Base
// 0x0008 (0x0008 - 0x0000)
struct BP_VegetationModify_Base_C_ExecuteUbergraph_BP_VegetationModify_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VegetationModify_Base_C_ExecuteUbergraph_BP_VegetationModify_Base) == 0x000004, "Wrong alignment on BP_VegetationModify_Base_C_ExecuteUbergraph_BP_VegetationModify_Base");
static_assert(sizeof(BP_VegetationModify_Base_C_ExecuteUbergraph_BP_VegetationModify_Base) == 0x000008, "Wrong size on BP_VegetationModify_Base_C_ExecuteUbergraph_BP_VegetationModify_Base");
static_assert(offsetof(BP_VegetationModify_Base_C_ExecuteUbergraph_BP_VegetationModify_Base, EntryPoint) == 0x000000, "Member 'BP_VegetationModify_Base_C_ExecuteUbergraph_BP_VegetationModify_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_ExecuteUbergraph_BP_VegetationModify_Base, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_VegetationModify_Base_C_ExecuteUbergraph_BP_VegetationModify_Base::K2Node_Event_DeltaSeconds' has a wrong offset!");

// Function BP_VegetationModify_Base.BP_VegetationModify_Base_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_VegetationModify_Base_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds_0;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VegetationModify_Base_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_VegetationModify_Base_C_ReceiveTick");
static_assert(sizeof(BP_VegetationModify_Base_C_ReceiveTick) == 0x000004, "Wrong size on BP_VegetationModify_Base_C_ReceiveTick");
static_assert(offsetof(BP_VegetationModify_Base_C_ReceiveTick, DeltaSeconds_0) == 0x000000, "Member 'BP_VegetationModify_Base_C_ReceiveTick::DeltaSeconds_0' has a wrong offset!");

// Function BP_VegetationModify_Base.BP_VegetationModify_Base_C.DrawVegetationModifiers
// 0x00A8 (0x00A8 - 0x0000)
struct BP_VegetationModify_Base_C_DrawVegetationModifiers final
{
public:
	TArray<struct FCanvasUVTri>                   Triangles;                                         // 0x0000(0x0010)(Edit, BlueprintVisible)
	TArray<struct FCanvasUVQuad>                  Quads;                                             // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvas*                                CallFunc_BeginDrawCanvasToRenderTarget_Canvas;     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_BeginDrawCanvasToRenderTarget_Size;       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDrawToRenderTargetContext             CallFunc_BeginDrawCanvasToRenderTarget_Context;    // 0x0040(0x0010)(NoDestructor)
	struct FS_Vegetation_Modifier_Info            CallFunc_Array_Get_Item;                           // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInside_IsInside;                        // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_ConvertWorldToTexture_OutPixelCoords;     // 0x0084(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ConvertWorldToTexture_OutResultIsInsideTexture; // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCanvasUVQuad                          K2Node_MakeStruct_CanvasUVQuad;                    // 0x0090(0x000C)(NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VegetationModify_Base_C_DrawVegetationModifiers) == 0x000008, "Wrong alignment on BP_VegetationModify_Base_C_DrawVegetationModifiers");
static_assert(sizeof(BP_VegetationModify_Base_C_DrawVegetationModifiers) == 0x0000A8, "Wrong size on BP_VegetationModify_Base_C_DrawVegetationModifiers");
static_assert(offsetof(BP_VegetationModify_Base_C_DrawVegetationModifiers, Triangles) == 0x000000, "Member 'BP_VegetationModify_Base_C_DrawVegetationModifiers::Triangles' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_DrawVegetationModifiers, Quads) == 0x000010, "Member 'BP_VegetationModify_Base_C_DrawVegetationModifiers::Quads' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_DrawVegetationModifiers, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_VegetationModify_Base_C_DrawVegetationModifiers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_DrawVegetationModifiers, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_VegetationModify_Base_C_DrawVegetationModifiers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_DrawVegetationModifiers, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_VegetationModify_Base_C_DrawVegetationModifiers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_DrawVegetationModifiers, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'BP_VegetationModify_Base_C_DrawVegetationModifiers::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_DrawVegetationModifiers, CallFunc_BeginDrawCanvasToRenderTarget_Canvas) == 0x000030, "Member 'BP_VegetationModify_Base_C_DrawVegetationModifiers::CallFunc_BeginDrawCanvasToRenderTarget_Canvas' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_DrawVegetationModifiers, CallFunc_BeginDrawCanvasToRenderTarget_Size) == 0x000038, "Member 'BP_VegetationModify_Base_C_DrawVegetationModifiers::CallFunc_BeginDrawCanvasToRenderTarget_Size' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_DrawVegetationModifiers, CallFunc_BeginDrawCanvasToRenderTarget_Context) == 0x000040, "Member 'BP_VegetationModify_Base_C_DrawVegetationModifiers::CallFunc_BeginDrawCanvasToRenderTarget_Context' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_DrawVegetationModifiers, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_VegetationModify_Base_C_DrawVegetationModifiers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_DrawVegetationModifiers, CallFunc_IsInside_IsInside) == 0x000060, "Member 'BP_VegetationModify_Base_C_DrawVegetationModifiers::CallFunc_IsInside_IsInside' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_DrawVegetationModifiers, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000064, "Member 'BP_VegetationModify_Base_C_DrawVegetationModifiers::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_DrawVegetationModifiers, CallFunc_BreakVector_X) == 0x000068, "Member 'BP_VegetationModify_Base_C_DrawVegetationModifiers::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_DrawVegetationModifiers, CallFunc_BreakVector_Y) == 0x00006C, "Member 'BP_VegetationModify_Base_C_DrawVegetationModifiers::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_DrawVegetationModifiers, CallFunc_BreakVector_Z) == 0x000070, "Member 'BP_VegetationModify_Base_C_DrawVegetationModifiers::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_DrawVegetationModifiers, CallFunc_Array_Length_ReturnValue) == 0x000074, "Member 'BP_VegetationModify_Base_C_DrawVegetationModifiers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_DrawVegetationModifiers, CallFunc_MakeVector2D_ReturnValue) == 0x000078, "Member 'BP_VegetationModify_Base_C_DrawVegetationModifiers::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_DrawVegetationModifiers, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'BP_VegetationModify_Base_C_DrawVegetationModifiers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_DrawVegetationModifiers, CallFunc_ConvertWorldToTexture_OutPixelCoords) == 0x000084, "Member 'BP_VegetationModify_Base_C_DrawVegetationModifiers::CallFunc_ConvertWorldToTexture_OutPixelCoords' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_DrawVegetationModifiers, CallFunc_ConvertWorldToTexture_OutResultIsInsideTexture) == 0x00008C, "Member 'BP_VegetationModify_Base_C_DrawVegetationModifiers::CallFunc_ConvertWorldToTexture_OutResultIsInsideTexture' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_DrawVegetationModifiers, K2Node_MakeStruct_CanvasUVQuad) == 0x000090, "Member 'BP_VegetationModify_Base_C_DrawVegetationModifiers::K2Node_MakeStruct_CanvasUVQuad' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_DrawVegetationModifiers, CallFunc_Array_Add_ReturnValue) == 0x00009C, "Member 'BP_VegetationModify_Base_C_DrawVegetationModifiers::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_DrawVegetationModifiers, CallFunc_IsValid_ReturnValue_1) == 0x0000A0, "Member 'BP_VegetationModify_Base_C_DrawVegetationModifiers::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_DrawVegetationModifiers, CallFunc_BooleanAND_ReturnValue) == 0x0000A1, "Member 'BP_VegetationModify_Base_C_DrawVegetationModifiers::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_VegetationModify_Base.BP_VegetationModify_Base_C.InitRenderTargets
// 0x0048 (0x0048 - 0x0000)
struct BP_VegetationModify_Base_C_InitRenderTargets final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 CallFunc_Array_Get_Item_1;                         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 CallFunc_Array_Get_Item_2;                         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VegetationModify_Base_C_InitRenderTargets) == 0x000008, "Wrong alignment on BP_VegetationModify_Base_C_InitRenderTargets");
static_assert(sizeof(BP_VegetationModify_Base_C_InitRenderTargets) == 0x000048, "Wrong size on BP_VegetationModify_Base_C_InitRenderTargets");
static_assert(offsetof(BP_VegetationModify_Base_C_InitRenderTargets, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_VegetationModify_Base_C_InitRenderTargets::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_InitRenderTargets, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_VegetationModify_Base_C_InitRenderTargets::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_InitRenderTargets, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_VegetationModify_Base_C_InitRenderTargets::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_InitRenderTargets, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_VegetationModify_Base_C_InitRenderTargets::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_InitRenderTargets, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_VegetationModify_Base_C_InitRenderTargets::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_InitRenderTargets, CallFunc_Greater_IntInt_ReturnValue) == 0x00001C, "Member 'BP_VegetationModify_Base_C_InitRenderTargets::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_InitRenderTargets, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000020, "Member 'BP_VegetationModify_Base_C_InitRenderTargets::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_InitRenderTargets, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000024, "Member 'BP_VegetationModify_Base_C_InitRenderTargets::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_InitRenderTargets, CallFunc_Array_Get_Item_1) == 0x000028, "Member 'BP_VegetationModify_Base_C_InitRenderTargets::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_InitRenderTargets, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000030, "Member 'BP_VegetationModify_Base_C_InitRenderTargets::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_InitRenderTargets, CallFunc_Array_Get_Item_2) == 0x000038, "Member 'BP_VegetationModify_Base_C_InitRenderTargets::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_InitRenderTargets, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_VegetationModify_Base_C_InitRenderTargets::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_InitRenderTargets, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'BP_VegetationModify_Base_C_InitRenderTargets::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_InitRenderTargets, CallFunc_IsValid_ReturnValue) == 0x000045, "Member 'BP_VegetationModify_Base_C_InitRenderTargets::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_VegetationModify_Base.BP_VegetationModify_Base_C.UpdatePosition
// 0x0060 (0x0060 - 0x0000)
struct BP_VegetationModify_Base_C_UpdatePosition final
{
public:
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCurrentCameraPosition_OutPosition;     // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCurrentCameraPosition_OutPositionValid; // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_1;          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VegetationModify_Base_C_UpdatePosition) == 0x000004, "Wrong alignment on BP_VegetationModify_Base_C_UpdatePosition");
static_assert(sizeof(BP_VegetationModify_Base_C_UpdatePosition) == 0x000060, "Wrong size on BP_VegetationModify_Base_C_UpdatePosition");
static_assert(offsetof(BP_VegetationModify_Base_C_UpdatePosition, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000000, "Member 'BP_VegetationModify_Base_C_UpdatePosition::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_UpdatePosition, CallFunc_MakeVector2D_ReturnValue) == 0x000004, "Member 'BP_VegetationModify_Base_C_UpdatePosition::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_UpdatePosition, CallFunc_GetCurrentCameraPosition_OutPosition) == 0x00000C, "Member 'BP_VegetationModify_Base_C_UpdatePosition::CallFunc_GetCurrentCameraPosition_OutPosition' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_UpdatePosition, CallFunc_GetCurrentCameraPosition_OutPositionValid) == 0x000018, "Member 'BP_VegetationModify_Base_C_UpdatePosition::CallFunc_GetCurrentCameraPosition_OutPositionValid' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_UpdatePosition, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x00001C, "Member 'BP_VegetationModify_Base_C_UpdatePosition::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_UpdatePosition, CallFunc_BreakVector_X) == 0x000024, "Member 'BP_VegetationModify_Base_C_UpdatePosition::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_UpdatePosition, CallFunc_BreakVector_Y) == 0x000028, "Member 'BP_VegetationModify_Base_C_UpdatePosition::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_UpdatePosition, CallFunc_BreakVector_Z) == 0x00002C, "Member 'BP_VegetationModify_Base_C_UpdatePosition::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_UpdatePosition, CallFunc_MakeVector2D_ReturnValue_1) == 0x000030, "Member 'BP_VegetationModify_Base_C_UpdatePosition::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_UpdatePosition, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000038, "Member 'BP_VegetationModify_Base_C_UpdatePosition::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_UpdatePosition, CallFunc_BreakVector2D_X) == 0x000040, "Member 'BP_VegetationModify_Base_C_UpdatePosition::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_UpdatePosition, CallFunc_BreakVector2D_Y) == 0x000044, "Member 'BP_VegetationModify_Base_C_UpdatePosition::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_UpdatePosition, CallFunc_FTrunc_ReturnValue) == 0x000048, "Member 'BP_VegetationModify_Base_C_UpdatePosition::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_UpdatePosition, CallFunc_FTrunc_ReturnValue_1) == 0x00004C, "Member 'BP_VegetationModify_Base_C_UpdatePosition::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_UpdatePosition, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000050, "Member 'BP_VegetationModify_Base_C_UpdatePosition::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_UpdatePosition, CallFunc_Multiply_IntFloat_ReturnValue_1) == 0x000054, "Member 'BP_VegetationModify_Base_C_UpdatePosition::CallFunc_Multiply_IntFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_UpdatePosition, CallFunc_MakeVector2D_ReturnValue_2) == 0x000058, "Member 'BP_VegetationModify_Base_C_UpdatePosition::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");

// Function BP_VegetationModify_Base.BP_VegetationModify_Base_C.InitAll
// 0x0008 (0x0008 - 0x0000)
struct BP_VegetationModify_Base_C_InitAll final
{
public:
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VegetationModify_Base_C_InitAll) == 0x000004, "Wrong alignment on BP_VegetationModify_Base_C_InitAll");
static_assert(sizeof(BP_VegetationModify_Base_C_InitAll) == 0x000008, "Wrong size on BP_VegetationModify_Base_C_InitAll");
static_assert(offsetof(BP_VegetationModify_Base_C_InitAll, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000000, "Member 'BP_VegetationModify_Base_C_InitAll::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_InitAll, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_VegetationModify_Base_C_InitAll::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_VegetationModify_Base.BP_VegetationModify_Base_C.ConvertWorldToTexture
// 0x0038 (0x0038 - 0x0000)
struct BP_VegetationModify_Base_C_ConvertWorldToTexture final
{
public:
	struct FVector2D                              WorldPosXY;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              OutPixelCoords;                                    // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OutResultIsInsideTexture;                          // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue_1;         // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VegetationModify_Base_C_ConvertWorldToTexture) == 0x000004, "Wrong alignment on BP_VegetationModify_Base_C_ConvertWorldToTexture");
static_assert(sizeof(BP_VegetationModify_Base_C_ConvertWorldToTexture) == 0x000038, "Wrong size on BP_VegetationModify_Base_C_ConvertWorldToTexture");
static_assert(offsetof(BP_VegetationModify_Base_C_ConvertWorldToTexture, WorldPosXY) == 0x000000, "Member 'BP_VegetationModify_Base_C_ConvertWorldToTexture::WorldPosXY' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_ConvertWorldToTexture, OutPixelCoords) == 0x000008, "Member 'BP_VegetationModify_Base_C_ConvertWorldToTexture::OutPixelCoords' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_ConvertWorldToTexture, OutResultIsInsideTexture) == 0x000010, "Member 'BP_VegetationModify_Base_C_ConvertWorldToTexture::OutResultIsInsideTexture' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_ConvertWorldToTexture, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000014, "Member 'BP_VegetationModify_Base_C_ConvertWorldToTexture::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_ConvertWorldToTexture, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000018, "Member 'BP_VegetationModify_Base_C_ConvertWorldToTexture::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_ConvertWorldToTexture, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x00001C, "Member 'BP_VegetationModify_Base_C_ConvertWorldToTexture::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_ConvertWorldToTexture, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000024, "Member 'BP_VegetationModify_Base_C_ConvertWorldToTexture::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_ConvertWorldToTexture, CallFunc_BreakVector2D_X) == 0x00002C, "Member 'BP_VegetationModify_Base_C_ConvertWorldToTexture::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_ConvertWorldToTexture, CallFunc_BreakVector2D_Y) == 0x000030, "Member 'BP_VegetationModify_Base_C_ConvertWorldToTexture::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_ConvertWorldToTexture, CallFunc_InRange_FloatFloat_ReturnValue) == 0x000034, "Member 'BP_VegetationModify_Base_C_ConvertWorldToTexture::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_ConvertWorldToTexture, CallFunc_InRange_FloatFloat_ReturnValue_1) == 0x000035, "Member 'BP_VegetationModify_Base_C_ConvertWorldToTexture::CallFunc_InRange_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_ConvertWorldToTexture, CallFunc_BooleanAND_ReturnValue) == 0x000036, "Member 'BP_VegetationModify_Base_C_ConvertWorldToTexture::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_VegetationModify_Base.BP_VegetationModify_Base_C.Simulate
// 0x0004 (0x0004 - 0x0000)
struct BP_VegetationModify_Base_C_Simulate final
{
public:
	float                                         DeltaSeconds_0;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VegetationModify_Base_C_Simulate) == 0x000004, "Wrong alignment on BP_VegetationModify_Base_C_Simulate");
static_assert(sizeof(BP_VegetationModify_Base_C_Simulate) == 0x000004, "Wrong size on BP_VegetationModify_Base_C_Simulate");
static_assert(offsetof(BP_VegetationModify_Base_C_Simulate, DeltaSeconds_0) == 0x000000, "Member 'BP_VegetationModify_Base_C_Simulate::DeltaSeconds_0' has a wrong offset!");

// Function BP_VegetationModify_Base.BP_VegetationModify_Base_C.FlipRenderTargets
// 0x0068 (0x0068 - 0x0000)
struct BP_VegetationModify_Base_C_FlipRenderTargets final
{
public:
	float                                         DeltaTimeLocal;                                    // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LocalStartErasePos;                                // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              LocalMovement;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              LocalCanvasSize;                                   // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvas*                                LocalCanvas;                                       // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvas*                                CallFunc_BeginDrawCanvasToRenderTarget_Canvas;     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_BeginDrawCanvasToRenderTarget_Size;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDrawToRenderTargetContext             CallFunc_BeginDrawCanvasToRenderTarget_Context;    // 0x0030(0x0010)(NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue_1;     // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue_2;     // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VegetationModify_Base_C_FlipRenderTargets) == 0x000008, "Wrong alignment on BP_VegetationModify_Base_C_FlipRenderTargets");
static_assert(sizeof(BP_VegetationModify_Base_C_FlipRenderTargets) == 0x000068, "Wrong size on BP_VegetationModify_Base_C_FlipRenderTargets");
static_assert(offsetof(BP_VegetationModify_Base_C_FlipRenderTargets, DeltaTimeLocal) == 0x000000, "Member 'BP_VegetationModify_Base_C_FlipRenderTargets::DeltaTimeLocal' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_FlipRenderTargets, LocalStartErasePos) == 0x000004, "Member 'BP_VegetationModify_Base_C_FlipRenderTargets::LocalStartErasePos' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_FlipRenderTargets, LocalMovement) == 0x000008, "Member 'BP_VegetationModify_Base_C_FlipRenderTargets::LocalMovement' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_FlipRenderTargets, LocalCanvasSize) == 0x000010, "Member 'BP_VegetationModify_Base_C_FlipRenderTargets::LocalCanvasSize' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_FlipRenderTargets, LocalCanvas) == 0x000018, "Member 'BP_VegetationModify_Base_C_FlipRenderTargets::LocalCanvas' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_FlipRenderTargets, CallFunc_BeginDrawCanvasToRenderTarget_Canvas) == 0x000020, "Member 'BP_VegetationModify_Base_C_FlipRenderTargets::CallFunc_BeginDrawCanvasToRenderTarget_Canvas' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_FlipRenderTargets, CallFunc_BeginDrawCanvasToRenderTarget_Size) == 0x000028, "Member 'BP_VegetationModify_Base_C_FlipRenderTargets::CallFunc_BeginDrawCanvasToRenderTarget_Size' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_FlipRenderTargets, CallFunc_BeginDrawCanvasToRenderTarget_Context) == 0x000030, "Member 'BP_VegetationModify_Base_C_FlipRenderTargets::CallFunc_BeginDrawCanvasToRenderTarget_Context' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_FlipRenderTargets, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BP_VegetationModify_Base_C_FlipRenderTargets::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_FlipRenderTargets, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000044, "Member 'BP_VegetationModify_Base_C_FlipRenderTargets::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_FlipRenderTargets, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x00004C, "Member 'BP_VegetationModify_Base_C_FlipRenderTargets::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_FlipRenderTargets, CallFunc_Multiply_Vector2DFloat_ReturnValue_1) == 0x000054, "Member 'BP_VegetationModify_Base_C_FlipRenderTargets::CallFunc_Multiply_Vector2DFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_FlipRenderTargets, CallFunc_Multiply_Vector2DFloat_ReturnValue_2) == 0x00005C, "Member 'BP_VegetationModify_Base_C_FlipRenderTargets::CallFunc_Multiply_Vector2DFloat_ReturnValue_2' has a wrong offset!");

// Function BP_VegetationModify_Base.BP_VegetationModify_Base_C.InitMaterials
// 0x0040 (0x0040 - 0x0000)
struct BP_VegetationModify_Base_C_InitMaterials final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 CallFunc_Array_Get_Item_1;                         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_2; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VegetationModify_Base_C_InitMaterials) == 0x000008, "Wrong alignment on BP_VegetationModify_Base_C_InitMaterials");
static_assert(sizeof(BP_VegetationModify_Base_C_InitMaterials) == 0x000040, "Wrong size on BP_VegetationModify_Base_C_InitMaterials");
static_assert(offsetof(BP_VegetationModify_Base_C_InitMaterials, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'BP_VegetationModify_Base_C_InitMaterials::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_InitMaterials, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_VegetationModify_Base_C_InitMaterials::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_InitMaterials, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_VegetationModify_Base_C_InitMaterials::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_InitMaterials, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000018, "Member 'BP_VegetationModify_Base_C_InitMaterials::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_InitMaterials, CallFunc_Array_Get_Item_1) == 0x000020, "Member 'BP_VegetationModify_Base_C_InitMaterials::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_InitMaterials, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000028, "Member 'BP_VegetationModify_Base_C_InitMaterials::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_InitMaterials, CallFunc_CreateDynamicMaterialInstance_ReturnValue_2) == 0x000030, "Member 'BP_VegetationModify_Base_C_InitMaterials::CallFunc_CreateDynamicMaterialInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_InitMaterials, CallFunc_IsValid_ReturnValue_1) == 0x000038, "Member 'BP_VegetationModify_Base_C_InitMaterials::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_InitMaterials, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000039, "Member 'BP_VegetationModify_Base_C_InitMaterials::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");

// Function BP_VegetationModify_Base.BP_VegetationModify_Base_C.SetupMaterialParamsForWrite
// 0x0018 (0x0018 - 0x0000)
struct BP_VegetationModify_Base_C_SetupMaterialParamsForWrite final
{
public:
	float                                         CallFunc_BreakVector2D_X;                          // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VegetationModify_Base_C_SetupMaterialParamsForWrite) == 0x000004, "Wrong alignment on BP_VegetationModify_Base_C_SetupMaterialParamsForWrite");
static_assert(sizeof(BP_VegetationModify_Base_C_SetupMaterialParamsForWrite) == 0x000018, "Wrong size on BP_VegetationModify_Base_C_SetupMaterialParamsForWrite");
static_assert(offsetof(BP_VegetationModify_Base_C_SetupMaterialParamsForWrite, CallFunc_BreakVector2D_X) == 0x000000, "Member 'BP_VegetationModify_Base_C_SetupMaterialParamsForWrite::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_SetupMaterialParamsForWrite, CallFunc_BreakVector2D_Y) == 0x000004, "Member 'BP_VegetationModify_Base_C_SetupMaterialParamsForWrite::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_SetupMaterialParamsForWrite, CallFunc_MakeColor_ReturnValue) == 0x000008, "Member 'BP_VegetationModify_Base_C_SetupMaterialParamsForWrite::CallFunc_MakeColor_ReturnValue' has a wrong offset!");

// Function BP_VegetationModify_Base.BP_VegetationModify_Base_C.AddVegetationModifier
// 0x0028 (0x0028 - 0x0000)
struct BP_VegetationModify_Base_C_AddVegetationModifier final
{
public:
	struct FVector                                WorldPos;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius;                                            // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_Vegetation_Modifier_Info            K2Node_MakeStruct_S_Vegetation_Modifier_Info;      // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInside_IsInside;                        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VegetationModify_Base_C_AddVegetationModifier) == 0x000004, "Wrong alignment on BP_VegetationModify_Base_C_AddVegetationModifier");
static_assert(sizeof(BP_VegetationModify_Base_C_AddVegetationModifier) == 0x000028, "Wrong size on BP_VegetationModify_Base_C_AddVegetationModifier");
static_assert(offsetof(BP_VegetationModify_Base_C_AddVegetationModifier, WorldPos) == 0x000000, "Member 'BP_VegetationModify_Base_C_AddVegetationModifier::WorldPos' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_AddVegetationModifier, Radius) == 0x00000C, "Member 'BP_VegetationModify_Base_C_AddVegetationModifier::Radius' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_AddVegetationModifier, K2Node_MakeStruct_S_Vegetation_Modifier_Info) == 0x000010, "Member 'BP_VegetationModify_Base_C_AddVegetationModifier::K2Node_MakeStruct_S_Vegetation_Modifier_Info' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_AddVegetationModifier, CallFunc_IsInside_IsInside) == 0x000020, "Member 'BP_VegetationModify_Base_C_AddVegetationModifier::CallFunc_IsInside_IsInside' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_AddVegetationModifier, CallFunc_Array_Add_ReturnValue) == 0x000024, "Member 'BP_VegetationModify_Base_C_AddVegetationModifier::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_VegetationModify_Base.BP_VegetationModify_Base_C.IsInside
// 0x0058 (0x0058 - 0x0000)
struct BP_VegetationModify_Base_C_IsInside final
{
public:
	struct FVector                                WorldPos;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius;                                            // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInside_0;                                        // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Add_Vector2DFloat_ReturnValue;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VegetationModify_Base_C_IsInside) == 0x000004, "Wrong alignment on BP_VegetationModify_Base_C_IsInside");
static_assert(sizeof(BP_VegetationModify_Base_C_IsInside) == 0x000058, "Wrong size on BP_VegetationModify_Base_C_IsInside");
static_assert(offsetof(BP_VegetationModify_Base_C_IsInside, WorldPos) == 0x000000, "Member 'BP_VegetationModify_Base_C_IsInside::WorldPos' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_IsInside, Radius) == 0x00000C, "Member 'BP_VegetationModify_Base_C_IsInside::Radius' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_IsInside, IsInside_0) == 0x000010, "Member 'BP_VegetationModify_Base_C_IsInside::IsInside_0' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_IsInside, CallFunc_BreakVector_X) == 0x000014, "Member 'BP_VegetationModify_Base_C_IsInside::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_IsInside, CallFunc_BreakVector_Y) == 0x000018, "Member 'BP_VegetationModify_Base_C_IsInside::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_IsInside, CallFunc_BreakVector_Z) == 0x00001C, "Member 'BP_VegetationModify_Base_C_IsInside::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_IsInside, CallFunc_BreakVector2D_X) == 0x000020, "Member 'BP_VegetationModify_Base_C_IsInside::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_IsInside, CallFunc_BreakVector2D_Y) == 0x000024, "Member 'BP_VegetationModify_Base_C_IsInside::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_IsInside, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000028, "Member 'BP_VegetationModify_Base_C_IsInside::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_IsInside, CallFunc_Add_FloatFloat_ReturnValue) == 0x00002C, "Member 'BP_VegetationModify_Base_C_IsInside::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_IsInside, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000030, "Member 'BP_VegetationModify_Base_C_IsInside::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_IsInside, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000034, "Member 'BP_VegetationModify_Base_C_IsInside::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_IsInside, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000038, "Member 'BP_VegetationModify_Base_C_IsInside::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_IsInside, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x00003C, "Member 'BP_VegetationModify_Base_C_IsInside::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_IsInside, CallFunc_Add_Vector2DFloat_ReturnValue) == 0x000040, "Member 'BP_VegetationModify_Base_C_IsInside::CallFunc_Add_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_IsInside, CallFunc_BreakVector2D_X_1) == 0x000048, "Member 'BP_VegetationModify_Base_C_IsInside::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_IsInside, CallFunc_BreakVector2D_Y_1) == 0x00004C, "Member 'BP_VegetationModify_Base_C_IsInside::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_IsInside, CallFunc_Less_FloatFloat_ReturnValue) == 0x000050, "Member 'BP_VegetationModify_Base_C_IsInside::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_IsInside, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000051, "Member 'BP_VegetationModify_Base_C_IsInside::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_IsInside, CallFunc_BooleanAND_ReturnValue) == 0x000052, "Member 'BP_VegetationModify_Base_C_IsInside::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_IsInside, CallFunc_BooleanAND_ReturnValue_1) == 0x000053, "Member 'BP_VegetationModify_Base_C_IsInside::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_IsInside, CallFunc_BooleanAND_ReturnValue_2) == 0x000054, "Member 'BP_VegetationModify_Base_C_IsInside::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function BP_VegetationModify_Base.BP_VegetationModify_Base_C.DrawQuads
// 0x0190 (0x0190 - 0x0000)
struct BP_VegetationModify_Base_C_DrawQuads final
{
public:
	class UCanvas*                                Canvas;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCanvasUVQuad>                  Quads;                                             // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FCanvasUVTri>                   Triangles;                                         // 0x0018(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCanvasUVQuad                          CallFunc_Array_Get_Item;                           // 0x0044(0x000C)(NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue_1;       // 0x0074(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x007C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_3;               // 0x0084(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue_2;       // 0x008C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue_3;       // 0x0094(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCanvasUVTri                           K2Node_MakeStruct_CanvasUVTri;                     // 0x009C(0x0060)(ZeroConstructor, NoDestructor)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_4;               // 0x00FC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue_4;       // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_5;               // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue_5;       // 0x011C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCanvasUVTri                           K2Node_MakeStruct_CanvasUVTri_1;                   // 0x0124(0x0060)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VegetationModify_Base_C_DrawQuads) == 0x000008, "Wrong alignment on BP_VegetationModify_Base_C_DrawQuads");
static_assert(sizeof(BP_VegetationModify_Base_C_DrawQuads) == 0x000190, "Wrong size on BP_VegetationModify_Base_C_DrawQuads");
static_assert(offsetof(BP_VegetationModify_Base_C_DrawQuads, Canvas) == 0x000000, "Member 'BP_VegetationModify_Base_C_DrawQuads::Canvas' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_DrawQuads, Quads) == 0x000008, "Member 'BP_VegetationModify_Base_C_DrawQuads::Quads' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_DrawQuads, Triangles) == 0x000018, "Member 'BP_VegetationModify_Base_C_DrawQuads::Triangles' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_DrawQuads, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_VegetationModify_Base_C_DrawQuads::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_DrawQuads, CallFunc_Array_Length_ReturnValue_1) == 0x00002C, "Member 'BP_VegetationModify_Base_C_DrawQuads::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_DrawQuads, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_VegetationModify_Base_C_DrawQuads::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_DrawQuads, CallFunc_Greater_IntInt_ReturnValue) == 0x000031, "Member 'BP_VegetationModify_Base_C_DrawQuads::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_DrawQuads, CallFunc_Array_Length_ReturnValue_2) == 0x000034, "Member 'BP_VegetationModify_Base_C_DrawQuads::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_DrawQuads, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000038, "Member 'BP_VegetationModify_Base_C_DrawQuads::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_DrawQuads, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'BP_VegetationModify_Base_C_DrawQuads::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_DrawQuads, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'BP_VegetationModify_Base_C_DrawQuads::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_DrawQuads, CallFunc_Array_Get_Item) == 0x000044, "Member 'BP_VegetationModify_Base_C_DrawQuads::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_DrawQuads, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_VegetationModify_Base_C_DrawQuads::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_DrawQuads, CallFunc_MakeVector2D_ReturnValue) == 0x000054, "Member 'BP_VegetationModify_Base_C_DrawQuads::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_DrawQuads, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x00005C, "Member 'BP_VegetationModify_Base_C_DrawQuads::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_DrawQuads, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000064, "Member 'BP_VegetationModify_Base_C_DrawQuads::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_DrawQuads, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000068, "Member 'BP_VegetationModify_Base_C_DrawQuads::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_DrawQuads, CallFunc_MakeVector2D_ReturnValue_1) == 0x00006C, "Member 'BP_VegetationModify_Base_C_DrawQuads::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_DrawQuads, CallFunc_Add_Vector2DVector2D_ReturnValue_1) == 0x000074, "Member 'BP_VegetationModify_Base_C_DrawQuads::CallFunc_Add_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_DrawQuads, CallFunc_MakeVector2D_ReturnValue_2) == 0x00007C, "Member 'BP_VegetationModify_Base_C_DrawQuads::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_DrawQuads, CallFunc_MakeVector2D_ReturnValue_3) == 0x000084, "Member 'BP_VegetationModify_Base_C_DrawQuads::CallFunc_MakeVector2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_DrawQuads, CallFunc_Add_Vector2DVector2D_ReturnValue_2) == 0x00008C, "Member 'BP_VegetationModify_Base_C_DrawQuads::CallFunc_Add_Vector2DVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_DrawQuads, CallFunc_Add_Vector2DVector2D_ReturnValue_3) == 0x000094, "Member 'BP_VegetationModify_Base_C_DrawQuads::CallFunc_Add_Vector2DVector2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_DrawQuads, K2Node_MakeStruct_CanvasUVTri) == 0x00009C, "Member 'BP_VegetationModify_Base_C_DrawQuads::K2Node_MakeStruct_CanvasUVTri' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_DrawQuads, CallFunc_MakeVector2D_ReturnValue_4) == 0x0000FC, "Member 'BP_VegetationModify_Base_C_DrawQuads::CallFunc_MakeVector2D_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_DrawQuads, CallFunc_Array_Add_ReturnValue) == 0x000104, "Member 'BP_VegetationModify_Base_C_DrawQuads::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_DrawQuads, CallFunc_Add_Vector2DVector2D_ReturnValue_4) == 0x000108, "Member 'BP_VegetationModify_Base_C_DrawQuads::CallFunc_Add_Vector2DVector2D_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_DrawQuads, CallFunc_MakeVector2D_ReturnValue_5) == 0x000110, "Member 'BP_VegetationModify_Base_C_DrawQuads::CallFunc_MakeVector2D_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_DrawQuads, CallFunc_Add_IntInt_ReturnValue) == 0x000118, "Member 'BP_VegetationModify_Base_C_DrawQuads::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_DrawQuads, CallFunc_Add_Vector2DVector2D_ReturnValue_5) == 0x00011C, "Member 'BP_VegetationModify_Base_C_DrawQuads::CallFunc_Add_Vector2DVector2D_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_DrawQuads, K2Node_MakeStruct_CanvasUVTri_1) == 0x000124, "Member 'BP_VegetationModify_Base_C_DrawQuads::K2Node_MakeStruct_CanvasUVTri_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_DrawQuads, CallFunc_Array_Add_ReturnValue_1) == 0x000184, "Member 'BP_VegetationModify_Base_C_DrawQuads::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationModify_Base_C_DrawQuads, CallFunc_IsValid_ReturnValue_1) == 0x000188, "Member 'BP_VegetationModify_Base_C_DrawQuads::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

}

