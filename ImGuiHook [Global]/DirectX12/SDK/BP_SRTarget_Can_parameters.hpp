#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SRTarget_Can

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "PhysicsCore_structs.hpp"


namespace SDK::Params
{

// Function BP_SRTarget_Can.BP_SRTarget_Can_C.ExecuteUbergraph_BP_SRTarget_Can
// 0x0450 (0x0450 - 0x0000)
struct BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DamageReceived;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageType*                      K2Node_Event_DamageType_1;                         // 0x0008(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Origin;                               // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitInfo_1;                            // 0x001C(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AController*                            K2Node_Event_InstigatedBy_1;                       // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser_1;                       // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BA[0x2];                                       // 0x00BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0108(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              CallFunc_BreakHitResult_ShapeSurfaceType;          // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0114(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0150(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0160(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16D[0x3];                                      // 0x016D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0170(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x01FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x01FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FE[0x2];                                      // 0x01FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0208(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0214(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0220(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x022C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0248(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              CallFunc_BreakHitResult_ShapeSurfaceType_1;        // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_251[0x3];                                      // 0x0251(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0254(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x0268(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x0274(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_289[0x3];                                      // 0x0289(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x028C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Damage;                               // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29C[0x4];                                      // 0x029C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      K2Node_Event_DamageType;                           // 0x02A0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitLocation;                          // 0x02A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x02B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_HitComponent;                         // 0x02C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_BoneName;                             // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_ShotFromDirection;                    // 0x02D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DC[0x4];                                      // 0x02DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_Event_InstigatedBy;                         // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitInfo;                              // 0x02F0(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_37C[0x4];                                      // 0x037C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent;           // 0x0380(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0390(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse;          // 0x0398(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit;                    // 0x03A4(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0430(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0434(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0440(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0444(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_445[0x3];                                      // 0x0445(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0448(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can) == 0x000008, "Wrong alignment on BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can");
static_assert(sizeof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can) == 0x000450, "Wrong size on BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, EntryPoint) == 0x000000, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, K2Node_Event_DamageReceived) == 0x000004, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::K2Node_Event_DamageReceived' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, K2Node_Event_DamageType_1) == 0x000008, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::K2Node_Event_DamageType_1' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, K2Node_Event_Origin) == 0x000010, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::K2Node_Event_Origin' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, K2Node_Event_HitInfo_1) == 0x00001C, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::K2Node_Event_HitInfo_1' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, K2Node_Event_InstigatedBy_1) == 0x0000A8, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::K2Node_Event_InstigatedBy_1' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, K2Node_Event_DamageCauser_1) == 0x0000B0, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::K2Node_Event_DamageCauser_1' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, CallFunc_BreakHitResult_bBlockingHit) == 0x0000B8, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000B9, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, CallFunc_BreakHitResult_Time) == 0x0000BC, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, CallFunc_BreakHitResult_Distance) == 0x0000C0, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, CallFunc_BreakHitResult_Location) == 0x0000C4, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, CallFunc_BreakHitResult_ImpactPoint) == 0x0000D0, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, CallFunc_BreakHitResult_Normal) == 0x0000DC, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, CallFunc_BreakHitResult_ImpactNormal) == 0x0000E8, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, CallFunc_BreakHitResult_PhysMat) == 0x0000F8, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, CallFunc_BreakHitResult_HitActor) == 0x000100, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, CallFunc_BreakHitResult_HitComponent) == 0x000108, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, CallFunc_BreakHitResult_ShapeSurfaceType) == 0x000110, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::CallFunc_BreakHitResult_ShapeSurfaceType' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, CallFunc_BreakHitResult_HitBoneName) == 0x000114, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, CallFunc_BreakHitResult_HitItem) == 0x00011C, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, CallFunc_BreakHitResult_ElementIndex) == 0x000120, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, CallFunc_BreakHitResult_FaceIndex) == 0x000124, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, CallFunc_BreakHitResult_TraceStart) == 0x000128, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, CallFunc_BreakHitResult_TraceEnd) == 0x000134, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000140, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000144, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000150, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000158, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000160, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000168, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, K2Node_ComponentBoundEvent_bFromSweep) == 0x00016C, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, K2Node_ComponentBoundEvent_SweepResult) == 0x000170, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, CallFunc_BreakHitResult_bBlockingHit_1) == 0x0001FC, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x0001FD, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, CallFunc_BreakHitResult_Time_1) == 0x000200, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, CallFunc_BreakHitResult_Distance_1) == 0x000204, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, CallFunc_BreakHitResult_Location_1) == 0x000208, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000214, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, CallFunc_BreakHitResult_Normal_1) == 0x000220, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, CallFunc_BreakHitResult_ImpactNormal_1) == 0x00022C, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, CallFunc_BreakHitResult_PhysMat_1) == 0x000238, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, CallFunc_BreakHitResult_HitActor_1) == 0x000240, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, CallFunc_BreakHitResult_HitComponent_1) == 0x000248, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, CallFunc_BreakHitResult_ShapeSurfaceType_1) == 0x000250, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::CallFunc_BreakHitResult_ShapeSurfaceType_1' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, CallFunc_BreakHitResult_HitBoneName_1) == 0x000254, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, CallFunc_BreakHitResult_HitItem_1) == 0x00025C, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, CallFunc_BreakHitResult_ElementIndex_1) == 0x000260, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, CallFunc_BreakHitResult_FaceIndex_1) == 0x000264, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, CallFunc_BreakHitResult_TraceStart_1) == 0x000268, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, CallFunc_BreakHitResult_TraceEnd_1) == 0x000274, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, K2Node_DynamicCast_AsPawn) == 0x000280, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, K2Node_DynamicCast_bSuccess) == 0x000288, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x00028C, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, K2Node_Event_Damage) == 0x000298, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, K2Node_Event_DamageType) == 0x0002A0, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::K2Node_Event_DamageType' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, K2Node_Event_HitLocation) == 0x0002A8, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, K2Node_Event_HitNormal) == 0x0002B4, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, K2Node_Event_HitComponent) == 0x0002C0, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::K2Node_Event_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, K2Node_Event_BoneName) == 0x0002C8, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::K2Node_Event_BoneName' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, K2Node_Event_ShotFromDirection) == 0x0002D0, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::K2Node_Event_ShotFromDirection' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, K2Node_Event_InstigatedBy) == 0x0002E0, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, K2Node_Event_DamageCauser) == 0x0002E8, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, K2Node_Event_HitInfo) == 0x0002F0, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::K2Node_Event_HitInfo' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, K2Node_ComponentBoundEvent_HitComponent) == 0x000380, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::K2Node_ComponentBoundEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, K2Node_ComponentBoundEvent_OtherActor) == 0x000388, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, K2Node_ComponentBoundEvent_OtherComp) == 0x000390, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, K2Node_ComponentBoundEvent_NormalImpulse) == 0x000398, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::K2Node_ComponentBoundEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, K2Node_ComponentBoundEvent_Hit) == 0x0003A4, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::K2Node_ComponentBoundEvent_Hit' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, CallFunc_VSize_ReturnValue) == 0x000430, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000434, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, CallFunc_MapRangeClamped_ReturnValue) == 0x000440, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000444, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000448, "Member 'BP_SRTarget_Can_C_ExecuteUbergraph_BP_SRTarget_Can::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");

// Function BP_SRTarget_Can.BP_SRTarget_Can_C.BndEvt__StaticMesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct BP_SRTarget_Can_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0024(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_SRTarget_Can_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_SRTarget_Can_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(BP_SRTarget_Can_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature) == 0x0000B0, "Wrong size on BP_SRTarget_Can_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(BP_SRTarget_Can_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'BP_SRTarget_Can_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_SRTarget_Can_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_SRTarget_Can_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'BP_SRTarget_Can_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, Hit) == 0x000024, "Member 'BP_SRTarget_Can_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::Hit' has a wrong offset!");

// Function BP_SRTarget_Can.BP_SRTarget_Can_C.ReceivePointDamage
// 0x00E8 (0x00E8 - 0x0000)
struct BP_SRTarget_Can_C_ReceivePointDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      DamageType;                                        // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ShotFromDirection;                                 // 0x0038(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            InstigatedBy;                                      // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitInfo;                                           // 0x0058(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_SRTarget_Can_C_ReceivePointDamage) == 0x000008, "Wrong alignment on BP_SRTarget_Can_C_ReceivePointDamage");
static_assert(sizeof(BP_SRTarget_Can_C_ReceivePointDamage) == 0x0000E8, "Wrong size on BP_SRTarget_Can_C_ReceivePointDamage");
static_assert(offsetof(BP_SRTarget_Can_C_ReceivePointDamage, Damage) == 0x000000, "Member 'BP_SRTarget_Can_C_ReceivePointDamage::Damage' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ReceivePointDamage, DamageType) == 0x000008, "Member 'BP_SRTarget_Can_C_ReceivePointDamage::DamageType' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ReceivePointDamage, HitLocation) == 0x000010, "Member 'BP_SRTarget_Can_C_ReceivePointDamage::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ReceivePointDamage, HitNormal) == 0x00001C, "Member 'BP_SRTarget_Can_C_ReceivePointDamage::HitNormal' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ReceivePointDamage, HitComponent) == 0x000028, "Member 'BP_SRTarget_Can_C_ReceivePointDamage::HitComponent' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ReceivePointDamage, BoneName) == 0x000030, "Member 'BP_SRTarget_Can_C_ReceivePointDamage::BoneName' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ReceivePointDamage, ShotFromDirection) == 0x000038, "Member 'BP_SRTarget_Can_C_ReceivePointDamage::ShotFromDirection' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ReceivePointDamage, InstigatedBy) == 0x000048, "Member 'BP_SRTarget_Can_C_ReceivePointDamage::InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ReceivePointDamage, DamageCauser) == 0x000050, "Member 'BP_SRTarget_Can_C_ReceivePointDamage::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ReceivePointDamage, HitInfo) == 0x000058, "Member 'BP_SRTarget_Can_C_ReceivePointDamage::HitInfo' has a wrong offset!");

// Function BP_SRTarget_Can.BP_SRTarget_Can_C.BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct BP_SRTarget_Can_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_SRTarget_Can_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_SRTarget_Can_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_SRTarget_Can_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000B0, "Wrong size on BP_SRTarget_Can_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_SRTarget_Can_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_SRTarget_Can_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_SRTarget_Can_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_SRTarget_Can_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_SRTarget_Can_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_SRTarget_Can_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_SRTarget_Can_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_SRTarget_Can.BP_SRTarget_Can_C.ReceiveRadialDamage
// 0x00B8 (0x00B8 - 0x0000)
struct BP_SRTarget_Can_C_ReceiveRadialDamage final
{
public:
	float                                         DamageReceived;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      DamageType;                                        // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Origin;                                            // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitInfo;                                           // 0x001C(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AController*                            InstigatedBy;                                      // 0x00A8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x00B0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SRTarget_Can_C_ReceiveRadialDamage) == 0x000008, "Wrong alignment on BP_SRTarget_Can_C_ReceiveRadialDamage");
static_assert(sizeof(BP_SRTarget_Can_C_ReceiveRadialDamage) == 0x0000B8, "Wrong size on BP_SRTarget_Can_C_ReceiveRadialDamage");
static_assert(offsetof(BP_SRTarget_Can_C_ReceiveRadialDamage, DamageReceived) == 0x000000, "Member 'BP_SRTarget_Can_C_ReceiveRadialDamage::DamageReceived' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ReceiveRadialDamage, DamageType) == 0x000008, "Member 'BP_SRTarget_Can_C_ReceiveRadialDamage::DamageType' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ReceiveRadialDamage, Origin) == 0x000010, "Member 'BP_SRTarget_Can_C_ReceiveRadialDamage::Origin' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ReceiveRadialDamage, HitInfo) == 0x00001C, "Member 'BP_SRTarget_Can_C_ReceiveRadialDamage::HitInfo' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ReceiveRadialDamage, InstigatedBy) == 0x0000A8, "Member 'BP_SRTarget_Can_C_ReceiveRadialDamage::InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_SRTarget_Can_C_ReceiveRadialDamage, DamageCauser) == 0x0000B0, "Member 'BP_SRTarget_Can_C_ReceiveRadialDamage::DamageCauser' has a wrong offset!");

}

