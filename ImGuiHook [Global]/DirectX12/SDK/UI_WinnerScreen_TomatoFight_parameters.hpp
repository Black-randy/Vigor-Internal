#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_WinnerScreen_TomatoFight

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Struct_ScoreboardTab_structs.hpp"
#include "EFightVariant_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function UI_WinnerScreen_TomatoFight.UI_WinnerScreen_TomatoFight_C.ExecuteUbergraph_UI_WinnerScreen_TomatoFight
// 0x03D8 (0x03D8 - 0x0000)
struct UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_RewardPopUp_C*                      CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0040(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0050(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         K2Node_CustomEvent_Time;                           // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0068(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0080(0x0018)()
	bool                                          Temp_bool_Variable;                                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x009C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_1;       // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x00B8(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00C8(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0108(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0148(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0158(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0168(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0180(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0198(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x01D8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x01E8(0x0018)()
	float                                         CallFunc_GetRenderOpacity_ReturnValue;             // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0204(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_205[0x3];                                      // 0x0205(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0208(0x0018)()
	EUMGSequencePlayMode                          Temp_byte_Variable;                                // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsLocalPlayerWinning;                 // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_222[0x6];                                      // 0x0222(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FStruct_ScoreboardTab>          K2Node_Event_ScoreboardTabs;                       // 0x0228(0x0010)(ConstParm, ReferenceParm)
	float                                         K2Node_Event_FadeDelay;                            // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x023C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23D[0x3];                                      // 0x023D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0240(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerController*                 CallFunc_GetFlameController_ReturnValue;           // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_289[0x7];                                      // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_WorldSpectator_C*                   K2Node_DynamicCast_AsBP_World_Spectator;           // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B1[0x7];                                      // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameState_TomatoFight_C*            K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight;   // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFightVariant                                 CallFunc_GetGameVariant_Variant;                   // 0x02C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x02C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EUMGSequencePlayMode                          Temp_byte_Variable_1;                              // 0x02C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C4[0x4];                                      // 0x02C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 CallFunc_GetFlameController_ReturnValue_1;         // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_Teams_C*           K2Node_DynamicCast_AsBP_Player_Controller_Teams;   // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D9[0x3];                                      // 0x02D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_AwardedXP;                            // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class UClass*, int32>                    K2Node_Event_AwardedItems;                         // 0x02E0(0x0050)()
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_331[0x7];                                      // 0x0331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0338(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerController*                 CallFunc_GetFlameController_ReturnValue_2;         // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_349[0x7];                                      // 0x0349(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_1;                 // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default_1;                           // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_361[0x7];                                      // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_WorldSpectator_C*                   K2Node_DynamicCast_AsBP_World_Spectator_1;         // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_379[0x7];                                      // 0x0379(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_2;                              // 0x0380(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_399[0x7];                                      // 0x0399(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_3;                              // 0x03A0(0x0018)()
	bool                                          Temp_bool_Variable_2;                              // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B9[0x7];                                      // 0x03B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_2;                           // 0x03C0(0x0018)()
};
static_assert(alignof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight) == 0x000008, "Wrong alignment on UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight");
static_assert(sizeof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight) == 0x0003D8, "Wrong size on UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, EntryPoint) == 0x000000, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, CallFunc_Create_ReturnValue) == 0x000008, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, CallFunc_PlayAnimationForward_ReturnValue) == 0x000010, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, K2Node_CreateDelegate_OutputDelegate_1) == 0x000028, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000038, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, K2Node_CreateDelegate_OutputDelegate_2) == 0x000040, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, K2Node_CreateDelegate_OutputDelegate_3) == 0x000050, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, K2Node_CustomEvent_Time) == 0x000060, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::K2Node_CustomEvent_Time' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, Temp_text_Variable) == 0x000068, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, Temp_text_Variable_1) == 0x000080, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, Temp_bool_Variable) == 0x000098, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, K2Node_CreateDelegate_OutputDelegate_4) == 0x00009C, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, CallFunc_PlayAnimationForward_ReturnValue_1) == 0x0000B0, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::CallFunc_PlayAnimationForward_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0000B8, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000C0, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, K2Node_MakeStruct_FormatArgumentData) == 0x0000C8, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, K2Node_MakeStruct_FormatArgumentData_1) == 0x000108, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, K2Node_MakeArray_Array) == 0x000148, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, K2Node_MakeArray_Array_1) == 0x000158, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, CallFunc_Format_ReturnValue) == 0x000168, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, CallFunc_Format_ReturnValue_1) == 0x000180, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, K2Node_MakeStruct_FormatArgumentData_2) == 0x000198, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, K2Node_MakeArray_Array_2) == 0x0001D8, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, CallFunc_Format_ReturnValue_2) == 0x0001E8, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, CallFunc_GetRenderOpacity_ReturnValue) == 0x000200, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::CallFunc_GetRenderOpacity_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, CallFunc_Less_FloatFloat_ReturnValue) == 0x000204, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, K2Node_Select_Default) == 0x000208, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, Temp_byte_Variable) == 0x000220, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, K2Node_Event_IsLocalPlayerWinning) == 0x000221, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::K2Node_Event_IsLocalPlayerWinning' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, K2Node_Event_ScoreboardTabs) == 0x000228, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::K2Node_Event_ScoreboardTabs' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, K2Node_Event_FadeDelay) == 0x000238, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::K2Node_Event_FadeDelay' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, K2Node_Event_IsDesignTime) == 0x00023C, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, K2Node_Event_MyGeometry) == 0x000240, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, K2Node_Event_InDeltaTime) == 0x000278, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, Temp_int_Variable) == 0x00027C, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, CallFunc_GetFlameController_ReturnValue) == 0x000280, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::CallFunc_GetFlameController_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000288, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, CallFunc_K2_GetPawn_ReturnValue) == 0x000290, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, K2Node_DynamicCast_AsBP_World_Spectator) == 0x000298, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::K2Node_DynamicCast_AsBP_World_Spectator' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, K2Node_DynamicCast_bSuccess) == 0x0002A0, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, CallFunc_GetGameState_ReturnValue) == 0x0002A8, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, CallFunc_IsValid_ReturnValue_1) == 0x0002B0, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight) == 0x0002B8, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, K2Node_DynamicCast_bSuccess_1) == 0x0002C0, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, CallFunc_GetGameVariant_Variant) == 0x0002C1, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::CallFunc_GetGameVariant_Variant' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, K2Node_SwitchEnum_CmpSuccess) == 0x0002C2, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, Temp_byte_Variable_1) == 0x0002C3, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, CallFunc_GetFlameController_ReturnValue_1) == 0x0002C8, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::CallFunc_GetFlameController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, K2Node_DynamicCast_AsBP_Player_Controller_Teams) == 0x0002D0, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::K2Node_DynamicCast_AsBP_Player_Controller_Teams' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, K2Node_DynamicCast_bSuccess_2) == 0x0002D8, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, K2Node_Event_AwardedXP) == 0x0002DC, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::K2Node_Event_AwardedXP' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, K2Node_Event_AwardedItems) == 0x0002E0, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::K2Node_Event_AwardedItems' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, CallFunc_IsValid_ReturnValue_2) == 0x000330, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, CallFunc_AddChild_ReturnValue) == 0x000338, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, CallFunc_GetFlameController_ReturnValue_2) == 0x000340, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::CallFunc_GetFlameController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, Temp_bool_Variable_1) == 0x000348, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, CallFunc_K2_GetPawn_ReturnValue_1) == 0x000350, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::CallFunc_K2_GetPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, CallFunc_GetController_ReturnValue) == 0x000358, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, K2Node_Select_Default_1) == 0x000360, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, CallFunc_PlayAnimation_ReturnValue) == 0x000368, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, K2Node_DynamicCast_AsBP_World_Spectator_1) == 0x000370, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::K2Node_DynamicCast_AsBP_World_Spectator_1' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, K2Node_DynamicCast_bSuccess_3) == 0x000378, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, Temp_text_Variable_2) == 0x000380, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, CallFunc_IsValid_ReturnValue_3) == 0x000398, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, Temp_text_Variable_3) == 0x0003A0, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, Temp_bool_Variable_2) == 0x0003B8, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight, K2Node_Select_Default_2) == 0x0003C0, "Member 'UI_WinnerScreen_TomatoFight_C_ExecuteUbergraph_UI_WinnerScreen_TomatoFight::K2Node_Select_Default_2' has a wrong offset!");

// Function UI_WinnerScreen_TomatoFight.UI_WinnerScreen_TomatoFight_C.ShowRewardPopUp
// 0x0058 (0x0058 - 0x0000)
struct UI_WinnerScreen_TomatoFight_C_ShowRewardPopUp final
{
public:
	int32                                         AwardedXP;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class UClass*, int32>                    AwardedItems;                                      // 0x0008(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(UI_WinnerScreen_TomatoFight_C_ShowRewardPopUp) == 0x000008, "Wrong alignment on UI_WinnerScreen_TomatoFight_C_ShowRewardPopUp");
static_assert(sizeof(UI_WinnerScreen_TomatoFight_C_ShowRewardPopUp) == 0x000058, "Wrong size on UI_WinnerScreen_TomatoFight_C_ShowRewardPopUp");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ShowRewardPopUp, AwardedXP) == 0x000000, "Member 'UI_WinnerScreen_TomatoFight_C_ShowRewardPopUp::AwardedXP' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_ShowRewardPopUp, AwardedItems) == 0x000008, "Member 'UI_WinnerScreen_TomatoFight_C_ShowRewardPopUp::AwardedItems' has a wrong offset!");

// Function UI_WinnerScreen_TomatoFight.UI_WinnerScreen_TomatoFight_C.Tick
// 0x003C (0x003C - 0x0000)
struct UI_WinnerScreen_TomatoFight_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_WinnerScreen_TomatoFight_C_Tick) == 0x000004, "Wrong alignment on UI_WinnerScreen_TomatoFight_C_Tick");
static_assert(sizeof(UI_WinnerScreen_TomatoFight_C_Tick) == 0x00003C, "Wrong size on UI_WinnerScreen_TomatoFight_C_Tick");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_Tick, MyGeometry) == 0x000000, "Member 'UI_WinnerScreen_TomatoFight_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_Tick, InDeltaTime) == 0x000038, "Member 'UI_WinnerScreen_TomatoFight_C_Tick::InDeltaTime' has a wrong offset!");

// Function UI_WinnerScreen_TomatoFight.UI_WinnerScreen_TomatoFight_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_WinnerScreen_TomatoFight_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_WinnerScreen_TomatoFight_C_PreConstruct) == 0x000001, "Wrong alignment on UI_WinnerScreen_TomatoFight_C_PreConstruct");
static_assert(sizeof(UI_WinnerScreen_TomatoFight_C_PreConstruct) == 0x000001, "Wrong size on UI_WinnerScreen_TomatoFight_C_PreConstruct");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_WinnerScreen_TomatoFight_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_WinnerScreen_TomatoFight.UI_WinnerScreen_TomatoFight_C.Show Scoreboard
// 0x0020 (0x0020 - 0x0000)
struct UI_WinnerScreen_TomatoFight_C_Show_Scoreboard final
{
public:
	bool                                          IsLocalPlayerWinning;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FStruct_ScoreboardTab>          ScoreboardTabs;                                    // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	float                                         FadeDelay;                                         // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_WinnerScreen_TomatoFight_C_Show_Scoreboard) == 0x000008, "Wrong alignment on UI_WinnerScreen_TomatoFight_C_Show_Scoreboard");
static_assert(sizeof(UI_WinnerScreen_TomatoFight_C_Show_Scoreboard) == 0x000020, "Wrong size on UI_WinnerScreen_TomatoFight_C_Show_Scoreboard");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_Show_Scoreboard, IsLocalPlayerWinning) == 0x000000, "Member 'UI_WinnerScreen_TomatoFight_C_Show_Scoreboard::IsLocalPlayerWinning' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_Show_Scoreboard, ScoreboardTabs) == 0x000008, "Member 'UI_WinnerScreen_TomatoFight_C_Show_Scoreboard::ScoreboardTabs' has a wrong offset!");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_Show_Scoreboard, FadeDelay) == 0x000018, "Member 'UI_WinnerScreen_TomatoFight_C_Show_Scoreboard::FadeDelay' has a wrong offset!");

// Function UI_WinnerScreen_TomatoFight.UI_WinnerScreen_TomatoFight_C.Set Leave Time
// 0x0004 (0x0004 - 0x0000)
struct UI_WinnerScreen_TomatoFight_C_Set_Leave_Time final
{
public:
	int32                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_WinnerScreen_TomatoFight_C_Set_Leave_Time) == 0x000004, "Wrong alignment on UI_WinnerScreen_TomatoFight_C_Set_Leave_Time");
static_assert(sizeof(UI_WinnerScreen_TomatoFight_C_Set_Leave_Time) == 0x000004, "Wrong size on UI_WinnerScreen_TomatoFight_C_Set_Leave_Time");
static_assert(offsetof(UI_WinnerScreen_TomatoFight_C_Set_Leave_Time, Time) == 0x000000, "Member 'UI_WinnerScreen_TomatoFight_C_Set_Leave_Time::Time' has a wrong offset!");

}

