#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_CircularProgress

#include "Basic.hpp"

#include "Flame_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_CircularProgress.UI_CircularProgress_C
// 0x0020 (0x02D8 - 0x02B8)
class UUI_CircularProgress_C final : public UFlameWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Image_0;                                           // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         Progress;                                          // 0x02C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         StartingAngle;                                     // 0x02CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UTexture*                               Texture;                                           // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_UI_CircularProgress(int32 EntryPoint);
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void SetProgress(float Value);
	void SetStartingAngle(float Value);
	void SetProgressTexture(class UTexture* Value);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_CircularProgress_C">();
	}
	static class UUI_CircularProgress_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_CircularProgress_C>();
	}
};
static_assert(alignof(UUI_CircularProgress_C) == 0x000008, "Wrong alignment on UUI_CircularProgress_C");
static_assert(sizeof(UUI_CircularProgress_C) == 0x0002D8, "Wrong size on UUI_CircularProgress_C");
static_assert(offsetof(UUI_CircularProgress_C, UberGraphFrame) == 0x0002B8, "Member 'UUI_CircularProgress_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_CircularProgress_C, Image_0) == 0x0002C0, "Member 'UUI_CircularProgress_C::Image_0' has a wrong offset!");
static_assert(offsetof(UUI_CircularProgress_C, Progress) == 0x0002C8, "Member 'UUI_CircularProgress_C::Progress' has a wrong offset!");
static_assert(offsetof(UUI_CircularProgress_C, StartingAngle) == 0x0002CC, "Member 'UUI_CircularProgress_C::StartingAngle' has a wrong offset!");
static_assert(offsetof(UUI_CircularProgress_C, Texture) == 0x0002D0, "Member 'UUI_CircularProgress_C::Texture' has a wrong offset!");

}

