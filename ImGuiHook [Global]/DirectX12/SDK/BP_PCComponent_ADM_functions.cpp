#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PCComponent_ADM

#include "Basic.hpp"

#include "BP_PCComponent_ADM_classes.hpp"
#include "BP_PCComponent_ADM_parameters.hpp"


namespace SDK
{

// Function BP_PCComponent_ADM.BP_PCComponent_ADM_C.ExecuteUbergraph_BP_PCComponent_ADM
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PCComponent_ADM_C::ExecuteUbergraph_BP_PCComponent_ADM(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PCComponent_ADM_C", "ExecuteUbergraph_BP_PCComponent_ADM");

	Params::BP_PCComponent_ADM_C_ExecuteUbergraph_BP_PCComponent_ADM Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PCComponent_ADM.BP_PCComponent_ADM_C.Character Possessed on Server
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Character_C*                  Possessed_Character                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PCComponent_ADM_C::Character_Possessed_on_Server(class ABP_Character_C* Possessed_Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PCComponent_ADM_C", "Character Possessed on Server");

	Params::BP_PCComponent_ADM_C_Character_Possessed_on_Server Parms{};

	Parms.Possessed_Character = Possessed_Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PCComponent_ADM.BP_PCComponent_ADM_C.Registration on Client Failed
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void UBP_PCComponent_ADM_C::Registration_on_Client_Failed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PCComponent_ADM_C", "Registration on Client Failed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PCComponent_ADM.BP_PCComponent_ADM_C.Register with Game State Based on Module ID
// (BlueprintCallable, BlueprintEvent)

void UBP_PCComponent_ADM_C::Register_with_Game_State_Based_on_Module_ID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PCComponent_ADM_C", "Register with Game State Based on Module ID");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PCComponent_ADM.BP_PCComponent_ADM_C.Registration on Client Completed
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void UBP_PCComponent_ADM_C::Registration_on_Client_Completed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PCComponent_ADM_C", "Registration on Client Completed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PCComponent_ADM.BP_PCComponent_ADM_C.ReceiveEndPlay
// (Event, Public, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PCComponent_ADM_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PCComponent_ADM_C", "ReceiveEndPlay");

	Params::BP_PCComponent_ADM_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PCComponent_ADM.BP_PCComponent_ADM_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_PCComponent_ADM_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PCComponent_ADM_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PCComponent_ADM.BP_PCComponent_ADM_C.Register with Game State on Client
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_GSComponent_ADM_C*            Game_State_Component_0                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Module_ID_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PCComponent_ADM_C::Register_with_Game_State_on_Client(class UBP_GSComponent_ADM_C* Game_State_Component_0, int32 Module_ID_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PCComponent_ADM_C", "Register with Game State on Client");

	Params::BP_PCComponent_ADM_C_Register_with_Game_State_on_Client Parms{};

	Parms.Game_State_Component_0 = Game_State_Component_0;
	Parms.Module_ID_0 = Module_ID_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PCComponent_ADM.BP_PCComponent_ADM_C.Flash Debug UI Tab Label
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Number_of_Flashes                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Flash_Label_Color                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PCComponent_ADM_C::Flash_Debug_UI_Tab_Label(int32 Number_of_Flashes, const struct FLinearColor& Flash_Label_Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PCComponent_ADM_C", "Flash Debug UI Tab Label");

	Params::BP_PCComponent_ADM_C_Flash_Debug_UI_Tab_Label Parms{};

	Parms.Number_of_Flashes = Number_of_Flashes;
	Parms.Flash_Label_Color = std::move(Flash_Label_Color);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PCComponent_ADM.BP_PCComponent_ADM_C.Get Player Controller
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ABP_PlayerController_AirDropModular_C*Player_Controller                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PCComponent_ADM_C::Get_Player_Controller(class ABP_PlayerController_AirDropModular_C** Player_Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PCComponent_ADM_C", "Get Player Controller");

	Params::BP_PCComponent_ADM_C_Get_Player_Controller Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Player_Controller != nullptr)
		*Player_Controller = Parms.Player_Controller;
}


// Function BP_PCComponent_ADM.BP_PCComponent_ADM_C.Get Player Character
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AHumanCharacter*                  Human_Character                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PCComponent_ADM_C::Get_Player_Character(class AHumanCharacter** Human_Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PCComponent_ADM_C", "Get Player Character");

	Params::BP_PCComponent_ADM_C_Get_Player_Character Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Human_Character != nullptr)
		*Human_Character = Parms.Human_Character;
}


// Function BP_PCComponent_ADM.BP_PCComponent_ADM_C.Get Player State
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APlayerState*                     PlayerState                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PCComponent_ADM_C::Get_Player_State(class APlayerState** PlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PCComponent_ADM_C", "Get Player State");

	Params::BP_PCComponent_ADM_C_Get_Player_State Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PlayerState != nullptr)
		*PlayerState = Parms.PlayerState;
}

}

