#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GameMode_Matches

#include "Basic.hpp"

#include "BP_GameMode_Matches_classes.hpp"
#include "BP_GameMode_Matches_parameters.hpp"


namespace SDK
{

// Function BP_GameMode_Matches.BP_GameMode_Matches_C.Lobby Phase Started__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_GameMode_Matches_C::Lobby_Phase_Started__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Matches_C", "Lobby Phase Started__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_Matches.BP_GameMode_Matches_C.Lobby Phase Finished__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Lobby_Was_Used                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_GameMode_Matches_C::Lobby_Phase_Finished__DelegateSignature(bool Lobby_Was_Used)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Matches_C", "Lobby Phase Finished__DelegateSignature");

	Params::BP_GameMode_Matches_C_Lobby_Phase_Finished__DelegateSignature Parms{};

	Parms.Lobby_Was_Used = Lobby_Was_Used;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_Matches.BP_GameMode_Matches_C.Delayed Match Start Phase Started__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_GameMode_Matches_C::Delayed_Match_Start_Phase_Started__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Matches_C", "Delayed Match Start Phase Started__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_Matches.BP_GameMode_Matches_C.Delayed Match Start Phase Finished__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Delayed_Match_Start_Was_Used                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_GameMode_Matches_C::Delayed_Match_Start_Phase_Finished__DelegateSignature(bool Delayed_Match_Start_Was_Used)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Matches_C", "Delayed Match Start Phase Finished__DelegateSignature");

	Params::BP_GameMode_Matches_C_Delayed_Match_Start_Phase_Finished__DelegateSignature Parms{};

	Parms.Delayed_Match_Start_Was_Used = Delayed_Match_Start_Was_Used;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_Matches.BP_GameMode_Matches_C.Match Has Started__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_GameMode_Matches_C::Match_Has_Started__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Matches_C", "Match Has Started__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_Matches.BP_GameMode_Matches_C.LobbyOpened__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_GameMode_Matches_C::LobbyOpened__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Matches_C", "LobbyOpened__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_Matches.BP_GameMode_Matches_C.ExecuteUbergraph_BP_GameMode_Matches
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_Matches_C::ExecuteUbergraph_BP_GameMode_Matches(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Matches_C", "ExecuteUbergraph_BP_GameMode_Matches");

	Params::BP_GameMode_Matches_C_ExecuteUbergraph_BP_GameMode_Matches Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_Matches.BP_GameMode_Matches_C.DEV_CollectTelemetry
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_GameMode_Matches_C::DEV_CollectTelemetry()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Matches_C", "DEV_CollectTelemetry");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_Matches.BP_GameMode_Matches_C.SLM_DelayedOnPostLogin
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                Object                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_Matches_C::SLM_DelayedOnPostLogin(class APlayerController* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Matches_C", "SLM_DelayedOnPostLogin");

	Params::BP_GameMode_Matches_C_SLM_DelayedOnPostLogin Parms{};

	Parms.Object = Object;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_Matches.BP_GameMode_Matches_C.SubLevelsLoaded_DelayedBeginPlay
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    SLM_Load_Complete                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_GameMode_Matches_C::SubLevelsLoaded_DelayedBeginPlay(bool SLM_Load_Complete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Matches_C", "SubLevelsLoaded_DelayedBeginPlay");

	Params::BP_GameMode_Matches_C_SubLevelsLoaded_DelayedBeginPlay Parms{};

	Parms.SLM_Load_Complete = SLM_Load_Complete;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_Matches.BP_GameMode_Matches_C.CheckForSubLevels
// (BlueprintCallable, BlueprintEvent)

void ABP_GameMode_Matches_C::CheckForSubLevels()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Matches_C", "CheckForSubLevels");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_Matches.BP_GameMode_Matches_C.Handle Player Death
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PlayerController_Matches_C*   Dead_Player                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_Matches_C::Handle_Player_Death(class ABP_PlayerController_Matches_C* Dead_Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Matches_C", "Handle Player Death");

	Params::BP_GameMode_Matches_C_Handle_Player_Death Parms{};

	Parms.Dead_Player = Dead_Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_Matches.BP_GameMode_Matches_C.LobbyLocked
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FCloudRequestResult              RequestResult                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FCloudMatchCommitInfo            CloudSettings                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_GameMode_Matches_C::LobbyLocked(const struct FCloudRequestResult& RequestResult, const struct FCloudMatchCommitInfo& CloudSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Matches_C", "LobbyLocked");

	Params::BP_GameMode_Matches_C_LobbyLocked Parms{};

	Parms.RequestResult = std::move(RequestResult);
	Parms.CloudSettings = std::move(CloudSettings);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_Matches.BP_GameMode_Matches_C.Lobby Finished
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FCloudRequestResult              RequestResult                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FCloudMatchCommitInfo            CloudSettings                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_GameMode_Matches_C::Lobby_Finished(const struct FCloudRequestResult& RequestResult, const struct FCloudMatchCommitInfo& CloudSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Matches_C", "Lobby Finished");

	Params::BP_GameMode_Matches_C_Lobby_Finished Parms{};

	Parms.RequestResult = std::move(RequestResult);
	Parms.CloudSettings = std::move(CloudSettings);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_Matches.BP_GameMode_Matches_C.Delayed Match Start Countdown
// (BlueprintCallable, BlueprintEvent)

void ABP_GameMode_Matches_C::Delayed_Match_Start_Countdown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Matches_C", "Delayed Match Start Countdown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_Matches.BP_GameMode_Matches_C.EndMatchForPlayer
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PlayerController_Script_C*    Leaving_Player_Controller                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_Matches_C::EndMatchForPlayer(class ABP_PlayerController_Script_C* Leaving_Player_Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Matches_C", "EndMatchForPlayer");

	Params::BP_GameMode_Matches_C_EndMatchForPlayer Parms{};

	Parms.Leaving_Player_Controller = Leaving_Player_Controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_Matches.BP_GameMode_Matches_C.K2_OnLogout
// (Event, Public, BlueprintEvent)
// Parameters:
// class AController*                      ExitingController                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_Matches_C::K2_OnLogout(class AController* ExitingController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Matches_C", "K2_OnLogout");

	Params::BP_GameMode_Matches_C_K2_OnLogout Parms{};

	Parms.ExitingController = ExitingController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_Matches.BP_GameMode_Matches_C.DefaultTimer
// (BlueprintCallable, BlueprintEvent)

void ABP_GameMode_Matches_C::DefaultTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Matches_C", "DefaultTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_Matches.BP_GameMode_Matches_C.K2_OnSetMatchState
// (Event, Protected, BlueprintEvent)
// Parameters:
// class FName                             NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_Matches_C::K2_OnSetMatchState(class FName NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Matches_C", "K2_OnSetMatchState");

	Params::BP_GameMode_Matches_C_K2_OnSetMatchState Parms{};

	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_Matches.BP_GameMode_Matches_C.K2_PostLogin
// (Event, Public, BlueprintEvent)
// Parameters:
// class APlayerController*                NewPlayer                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_Matches_C::K2_PostLogin(class APlayerController* NewPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Matches_C", "K2_PostLogin");

	Params::BP_GameMode_Matches_C_K2_PostLogin Parms{};

	Parms.NewPlayer = NewPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_Matches.BP_GameMode_Matches_C.PlayerCanRestart
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_GameMode_Matches_C::PlayerCanRestart(class APlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Matches_C", "PlayerCanRestart");

	Params::BP_GameMode_Matches_C_PlayerCanRestart Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_GameMode_Matches.BP_GameMode_Matches_C.IsWinner
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsWinner_0                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_GameMode_Matches_C::IsWinner(class APlayerController* PlayerController, bool* IsWinner_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Matches_C", "IsWinner");

	Params::BP_GameMode_Matches_C_IsWinner Parms{};

	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);

	if (IsWinner_0 != nullptr)
		*IsWinner_0 = Parms.IsWinner_0;
}


// Function BP_GameMode_Matches.BP_GameMode_Matches_C.HandleMatchHasStarted
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_GameMode_Matches_C::HandleMatchHasStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Matches_C", "HandleMatchHasStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_Matches.BP_GameMode_Matches_C.Process Player Results
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                Exiting_Controller                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_Matches_C::Process_Player_Results(class APlayerController* Exiting_Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Matches_C", "Process Player Results");

	Params::BP_GameMode_Matches_C_Process_Player_Results Parms{};

	Parms.Exiting_Controller = Exiting_Controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_Matches.BP_GameMode_Matches_C.Get Rewards For Player
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class FString>                   Rewards                                                (Parm, OutParm)

void ABP_GameMode_Matches_C::Get_Rewards_For_Player(class APlayerController* Controller, TArray<class FString>* Rewards)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Matches_C", "Get Rewards For Player");

	Params::BP_GameMode_Matches_C_Get_Rewards_For_Player Parms{};

	Parms.Controller = Controller;

	UObject::ProcessEvent(Func, &Parms);

	if (Rewards != nullptr)
		*Rewards = std::move(Parms.Rewards);
}


// Function BP_GameMode_Matches.BP_GameMode_Matches_C.ReadyToStartMatch
// (Event, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_GameMode_Matches_C::ReadyToStartMatch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Matches_C", "ReadyToStartMatch");

	Params::BP_GameMode_Matches_C_ReadyToStartMatch Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_GameMode_Matches.BP_GameMode_Matches_C.Should Lobby Be Used
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_GameMode_Matches_C::Should_Lobby_Be_Used()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Matches_C", "Should Lobby Be Used");

	Params::BP_GameMode_Matches_C_Should_Lobby_Be_Used Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_GameMode_Matches.BP_GameMode_Matches_C.Should Delayed Match Start Be Used
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_GameMode_Matches_C::Should_Delayed_Match_Start_Be_Used()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Matches_C", "Should Delayed Match Start Be Used");

	Params::BP_GameMode_Matches_C_Should_Delayed_Match_Start_Be_Used Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_GameMode_Matches.BP_GameMode_Matches_C.Get Match Phase
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_MatchPhase                            Match_Phase_0                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_Matches_C::Get_Match_Phase(E_MatchPhase* Match_Phase_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Matches_C", "Get Match Phase");

	Params::BP_GameMode_Matches_C_Get_Match_Phase Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Match_Phase_0 != nullptr)
		*Match_Phase_0 = Parms.Match_Phase_0;
}


// Function BP_GameMode_Matches.BP_GameMode_Matches_C.GetInactivePlayerStateByID
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Player_ID                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_PlayerState_Matches_C*        CorrespondingInactivePlayerState                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_Matches_C::GetInactivePlayerStateByID(int32 Player_ID, class ABP_PlayerState_Matches_C** CorrespondingInactivePlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Matches_C", "GetInactivePlayerStateByID");

	Params::BP_GameMode_Matches_C_GetInactivePlayerStateByID Parms{};

	Parms.Player_ID = Player_ID;

	UObject::ProcessEvent(Func, &Parms);

	if (CorrespondingInactivePlayerState != nullptr)
		*CorrespondingInactivePlayerState = Parms.CorrespondingInactivePlayerState;
}


// Function BP_GameMode_Matches.BP_GameMode_Matches_C.OnPlayerDied
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHumanCharacter*                  Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AHumanCharacter*                  Killer                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_GameMode_Matches_C::OnPlayerDied(class AHumanCharacter* Player, class AHumanCharacter* Killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Matches_C", "OnPlayerDied");

	Params::BP_GameMode_Matches_C_OnPlayerDied Parms{};

	Parms.Player = Player;
	Parms.Killer = Killer;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_GameMode_Matches.BP_GameMode_Matches_C.ChoosePlayerStart
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class AActor* ABP_GameMode_Matches_C::ChoosePlayerStart(class AController* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Matches_C", "ChoosePlayerStart");

	Params::BP_GameMode_Matches_C_ChoosePlayerStart Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_GameMode_Matches.BP_GameMode_Matches_C.FindPlayerStart
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           IncomingName                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class AActor* ABP_GameMode_Matches_C::FindPlayerStart(class AController* Player, const class FString& IncomingName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Matches_C", "FindPlayerStart");

	Params::BP_GameMode_Matches_C_FindPlayerStart Parms{};

	Parms.Player = Player;
	Parms.IncomingName = std::move(IncomingName);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_GameMode_Matches.BP_GameMode_Matches_C.Set Player Lonewolf Status
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PlayerController_Matches_C*   Player_Controller                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_Matches_C::Set_Player_Lonewolf_Status(class ABP_PlayerController_Matches_C* Player_Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Matches_C", "Set Player Lonewolf Status");

	Params::BP_GameMode_Matches_C_Set_Player_Lonewolf_Status Parms{};

	Parms.Player_Controller = Player_Controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_Matches.BP_GameMode_Matches_C.Save Players Info
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                Player_Controller                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_Matches_C::Save_Players_Info(class APlayerController* Player_Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Matches_C", "Save Players Info");

	Params::BP_GameMode_Matches_C_Save_Players_Info Parms{};

	Parms.Player_Controller = Player_Controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_Matches.BP_GameMode_Matches_C.Prepare Starts
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   StartsFound                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_Matches_C::Prepare_Starts(int32* StartsFound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Matches_C", "Prepare Starts");

	Params::BP_GameMode_Matches_C_Prepare_Starts Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (StartsFound != nullptr)
		*StartsFound = Parms.StartsFound;
}


// Function BP_GameMode_Matches.BP_GameMode_Matches_C.DEV_RecordPlayerPositions
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      AllPlayerPositions                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_Matches_C::DEV_RecordPlayerPositions(class UJsonObject** AllPlayerPositions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Matches_C", "DEV_RecordPlayerPositions");

	Params::BP_GameMode_Matches_C_DEV_RecordPlayerPositions Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AllPlayerPositions != nullptr)
		*AllPlayerPositions = Parms.AllPlayerPositions;
}


// Function BP_GameMode_Matches.BP_GameMode_Matches_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_GameMode_Matches_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Matches_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}

}

