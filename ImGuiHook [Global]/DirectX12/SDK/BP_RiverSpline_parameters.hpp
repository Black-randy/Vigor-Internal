#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RiverSpline

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "RiverSplineSegmentDetails_structs.hpp"
#include "Engine_structs.hpp"
#include "Flame_structs.hpp"
#include "PhysicsCore_structs.hpp"


namespace SDK::Params
{

// Function BP_RiverSpline.BP_RiverSpline_C.ExecuteUbergraph_BP_RiverSpline
// 0x0050 (0x0050 - 0x0000)
struct BP_RiverSpline_C_ExecuteUbergraph_BP_RiverSpline final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRiverSplineSegmentDetails             CallFunc_Array_Get_Item;                           // 0x0018(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_1;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_RiverSpline_Mesh_C*                 K2Node_DynamicCast_AsBP_River_Spline_Mesh;         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RiverSpline_C_ExecuteUbergraph_BP_RiverSpline) == 0x000008, "Wrong alignment on BP_RiverSpline_C_ExecuteUbergraph_BP_RiverSpline");
static_assert(sizeof(BP_RiverSpline_C_ExecuteUbergraph_BP_RiverSpline) == 0x000050, "Wrong size on BP_RiverSpline_C_ExecuteUbergraph_BP_RiverSpline");
static_assert(offsetof(BP_RiverSpline_C_ExecuteUbergraph_BP_RiverSpline, EntryPoint) == 0x000000, "Member 'BP_RiverSpline_C_ExecuteUbergraph_BP_RiverSpline::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_ExecuteUbergraph_BP_RiverSpline, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'BP_RiverSpline_C_ExecuteUbergraph_BP_RiverSpline::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_ExecuteUbergraph_BP_RiverSpline, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_RiverSpline_C_ExecuteUbergraph_BP_RiverSpline::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_ExecuteUbergraph_BP_RiverSpline, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_RiverSpline_C_ExecuteUbergraph_BP_RiverSpline::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_ExecuteUbergraph_BP_RiverSpline, CallFunc_Less_IntInt_ReturnValue) == 0x000010, "Member 'BP_RiverSpline_C_ExecuteUbergraph_BP_RiverSpline::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_ExecuteUbergraph_BP_RiverSpline, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_RiverSpline_C_ExecuteUbergraph_BP_RiverSpline::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_ExecuteUbergraph_BP_RiverSpline, CallFunc_Array_Get_Item_1) == 0x000038, "Member 'BP_RiverSpline_C_ExecuteUbergraph_BP_RiverSpline::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_ExecuteUbergraph_BP_RiverSpline, K2Node_DynamicCast_AsBP_River_Spline_Mesh) == 0x000040, "Member 'BP_RiverSpline_C_ExecuteUbergraph_BP_RiverSpline::K2Node_DynamicCast_AsBP_River_Spline_Mesh' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_ExecuteUbergraph_BP_RiverSpline, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_RiverSpline_C_ExecuteUbergraph_BP_RiverSpline::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_ExecuteUbergraph_BP_RiverSpline, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'BP_RiverSpline_C_ExecuteUbergraph_BP_RiverSpline::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_RiverSpline.BP_RiverSpline_C.BuildRiverSegment
// 0x0480 (0x0480 - 0x0000)
struct BP_RiverSpline_C_BuildRiverSegment final
{
public:
	int32                                         CurrentIndex;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            InputMesh;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LocalEndRiverDepth;                                // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_RiverSpline_Mesh_C*                 CurrentRiverSplineMesh;                            // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LocalEndScale;                                     // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LocalStartScale;                                   // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LocalStartRiverDepth;                              // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MeshWidth;                                         // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LocalEndDistance;                                  // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LocalStartDistance;                                // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LocalEndLocation;                                  // 0x0038(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LocalStartLocation;                                // 0x0044(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LocalEndRightOffset;                               // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LocalEndRightVector;                               // 0x0054(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LocalStartRightVector;                             // 0x0060(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LocalStartRightOffset;                             // 0x006C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineMeshComponent*                   LocalCurrentSplineMesh;                            // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LocalEndTangent;                                   // 0x0078(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LocalEndWorldLocation;                             // 0x0084(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LocalStartTangent;                                 // 0x0090(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LocalStartWorldLocation;                           // 0x009C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            LocalRiverMesh;                                    // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LocalNextIndex;                                    // 0x00B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LocalIndex;                                        // 0x00B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVectorAtSplinePoint_ReturnValue;     // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVectorAtSplinePoint_ReturnValue_1;   // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetScaleAtSplinePoint_ReturnValue;        // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item;                           // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetScaleAtSplinePoint_ReturnValue_1;      // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetScaleAtSplinePoint_ReturnValue_2;      // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBox                                   CallFunc_GetBoundingBox_ReturnValue;               // 0x0134(0x001C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0154(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetScaleAtSplinePoint_ReturnValue_3;      // 0x0194(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_4;                          // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_4;                          // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_4;                          // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetScaleAtSplinePoint_ReturnValue_4;      // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_5;                          // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_5;                          // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_5;                          // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetScaleAtSplinePoint_ReturnValue_5;      // 0x01C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_6;                          // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_6;                          // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_6;                          // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x01E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x01F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x01FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0208(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MathExpression_ReturnValue;                 // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MathExpression_ReturnValue_1;               // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x021C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0228(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x0234(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x0240(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24C[0x4];                                      // 0x024C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_C*                        CallFunc_GetClassDefaultObject_ReturnValue;        // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0258(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x0264(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_3;      // 0x0270(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x027C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0284(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x028C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x028D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_28E[0x2];                                      // 0x028E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRiverDimensions_RightOffset;           // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRiverDimensions_BankDistance;          // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRiverDimensions_RiverDepth;            // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRiverDimensions_RightOffset_1;         // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRiverDimensions_BankDistance_1;        // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRiverDimensions_RiverDepth_1;          // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x02A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2AA[0x2];                                      // 0x02AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetScaleAtSplinePoint_ReturnValue_6;      // 0x02AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetScaleAtSplinePoint_ReturnValue_7;      // 0x02B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C4[0xC];                                      // 0x02C4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x02D0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FTransform                             Temp_struct_Variable_1;                            // 0x0300(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class USplineMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0330(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineMeshComponent*                   CallFunc_AddComponent_ReturnValue_1;               // 0x0338(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_341[0x3];                                      // 0x0341(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLocationAndTangentAtSplinePoint_Location; // 0x0344(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAndTangentAtSplinePoint_Tangent; // 0x0350(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVectorAtSplinePoint_ReturnValue;  // 0x035C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAndTangentAtSplinePoint_Location_1; // 0x0368(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAndTangentAtSplinePoint_Tangent_1; // 0x0374(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVectorAtSplinePoint_ReturnValue_1; // 0x0380(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue;     // 0x038C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue_1;   // 0x0398(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A4[0xC];                                      // 0x03A4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable_2;                            // 0x03B0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_1;              // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E1[0x7];                                      // 0x03E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UChildActorComponent*                   CallFunc_AddComponent_ReturnValue_2;               // 0x03E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRiverSplineSegmentDetails             K2Node_MakeStruct_RiverSplineSegmentDetails;       // 0x03F0(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_414[0x4];                                      // 0x0414(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_RiverSpline_Mesh_C*                 K2Node_DynamicCast_AsBP_River_Spline_Mesh;         // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_421[0x3];                                      // 0x0421(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLocalBounds_Min;                       // 0x0424(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocalBounds_Max;                       // 0x0430(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x043C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_7;                          // 0x0444(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_7;                          // 0x0448(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_7;                          // 0x044C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MathExpression_ReturnValue_2;               // 0x0450(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MathExpression_ReturnValue_3;               // 0x0454(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MathExpression_ReturnValue_4;               // 0x0458(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MathExpression_ReturnValue_5;               // 0x045C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_3;               // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_4;               // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_5;               // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0478(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RiverSpline_C_BuildRiverSegment) == 0x000010, "Wrong alignment on BP_RiverSpline_C_BuildRiverSegment");
static_assert(sizeof(BP_RiverSpline_C_BuildRiverSegment) == 0x000480, "Wrong size on BP_RiverSpline_C_BuildRiverSegment");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CurrentIndex) == 0x000000, "Member 'BP_RiverSpline_C_BuildRiverSegment::CurrentIndex' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, InputMesh) == 0x000008, "Member 'BP_RiverSpline_C_BuildRiverSegment::InputMesh' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, LocalEndRiverDepth) == 0x000010, "Member 'BP_RiverSpline_C_BuildRiverSegment::LocalEndRiverDepth' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CurrentRiverSplineMesh) == 0x000018, "Member 'BP_RiverSpline_C_BuildRiverSegment::CurrentRiverSplineMesh' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, LocalEndScale) == 0x000020, "Member 'BP_RiverSpline_C_BuildRiverSegment::LocalEndScale' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, LocalStartScale) == 0x000024, "Member 'BP_RiverSpline_C_BuildRiverSegment::LocalStartScale' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, LocalStartRiverDepth) == 0x000028, "Member 'BP_RiverSpline_C_BuildRiverSegment::LocalStartRiverDepth' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, MeshWidth) == 0x00002C, "Member 'BP_RiverSpline_C_BuildRiverSegment::MeshWidth' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, LocalEndDistance) == 0x000030, "Member 'BP_RiverSpline_C_BuildRiverSegment::LocalEndDistance' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, LocalStartDistance) == 0x000034, "Member 'BP_RiverSpline_C_BuildRiverSegment::LocalStartDistance' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, LocalEndLocation) == 0x000038, "Member 'BP_RiverSpline_C_BuildRiverSegment::LocalEndLocation' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, LocalStartLocation) == 0x000044, "Member 'BP_RiverSpline_C_BuildRiverSegment::LocalStartLocation' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, LocalEndRightOffset) == 0x000050, "Member 'BP_RiverSpline_C_BuildRiverSegment::LocalEndRightOffset' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, LocalEndRightVector) == 0x000054, "Member 'BP_RiverSpline_C_BuildRiverSegment::LocalEndRightVector' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, LocalStartRightVector) == 0x000060, "Member 'BP_RiverSpline_C_BuildRiverSegment::LocalStartRightVector' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, LocalStartRightOffset) == 0x00006C, "Member 'BP_RiverSpline_C_BuildRiverSegment::LocalStartRightOffset' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, LocalCurrentSplineMesh) == 0x000070, "Member 'BP_RiverSpline_C_BuildRiverSegment::LocalCurrentSplineMesh' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, LocalEndTangent) == 0x000078, "Member 'BP_RiverSpline_C_BuildRiverSegment::LocalEndTangent' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, LocalEndWorldLocation) == 0x000084, "Member 'BP_RiverSpline_C_BuildRiverSegment::LocalEndWorldLocation' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, LocalStartTangent) == 0x000090, "Member 'BP_RiverSpline_C_BuildRiverSegment::LocalStartTangent' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, LocalStartWorldLocation) == 0x00009C, "Member 'BP_RiverSpline_C_BuildRiverSegment::LocalStartWorldLocation' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, LocalRiverMesh) == 0x0000A8, "Member 'BP_RiverSpline_C_BuildRiverSegment::LocalRiverMesh' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, LocalNextIndex) == 0x0000B0, "Member 'BP_RiverSpline_C_BuildRiverSegment::LocalNextIndex' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, LocalIndex) == 0x0000B4, "Member 'BP_RiverSpline_C_BuildRiverSegment::LocalIndex' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_Add_IntInt_ReturnValue) == 0x0000B8, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_GetUpVectorAtSplinePoint_ReturnValue) == 0x0000BC, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_GetUpVectorAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_GetUpVectorAtSplinePoint_ReturnValue_1) == 0x0000C8, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_GetUpVectorAtSplinePoint_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_GetScaleAtSplinePoint_ReturnValue) == 0x0000D4, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_GetScaleAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_BreakVector_X) == 0x0000E0, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_BreakVector_Y) == 0x0000E4, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_BreakVector_Z) == 0x0000E8, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_Array_Get_Item) == 0x0000EC, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_GetScaleAtSplinePoint_ReturnValue_1) == 0x0000F0, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_GetScaleAtSplinePoint_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_BreakVector_X_1) == 0x0000FC, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_BreakVector_Y_1) == 0x000100, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_BreakVector_Z_1) == 0x000104, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_Add_FloatFloat_ReturnValue) == 0x000108, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x00010C, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000110, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000114, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_IsValid_ReturnValue) == 0x000118, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_GetScaleAtSplinePoint_ReturnValue_2) == 0x00011C, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_GetScaleAtSplinePoint_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_BreakVector_X_2) == 0x000128, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_BreakVector_Y_2) == 0x00012C, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_BreakVector_Z_2) == 0x000130, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_GetBoundingBox_ReturnValue) == 0x000134, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_GetBoundingBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000150, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_MakeVector_ReturnValue) == 0x000154, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_BreakVector_X_3) == 0x000160, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_BreakVector_Y_3) == 0x000164, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_BreakVector_Z_3) == 0x000168, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00016C, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000170, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00017C, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_Add_VectorVector_ReturnValue) == 0x000188, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_GetScaleAtSplinePoint_ReturnValue_3) == 0x000194, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_GetScaleAtSplinePoint_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_BreakVector_X_4) == 0x0001A0, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_BreakVector_Y_4) == 0x0001A4, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_BreakVector_Z_4) == 0x0001A8, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_GetScaleAtSplinePoint_ReturnValue_4) == 0x0001AC, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_GetScaleAtSplinePoint_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_BreakVector_X_5) == 0x0001B8, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_BreakVector_Y_5) == 0x0001BC, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_BreakVector_Z_5) == 0x0001C0, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_GetScaleAtSplinePoint_ReturnValue_5) == 0x0001C4, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_GetScaleAtSplinePoint_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_BreakVector_X_6) == 0x0001D0, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_BreakVector_X_6' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_BreakVector_Y_6) == 0x0001D4, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_BreakVector_Y_6' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_BreakVector_Z_6) == 0x0001D8, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_BreakVector_Z_6' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0001DC, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x0001E0, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_MakeVector_ReturnValue_1) == 0x0001E4, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0001F0, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0001FC, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000208, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, K2Node_MathExpression_ReturnValue) == 0x000214, "Member 'BP_RiverSpline_C_BuildRiverSegment::K2Node_MathExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, K2Node_MathExpression_ReturnValue_1) == 0x000218, "Member 'BP_RiverSpline_C_BuildRiverSegment::K2Node_MathExpression_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x00021C, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000228, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x000234, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_Add_VectorVector_ReturnValue_3) == 0x000240, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_GetClassDefaultObject_ReturnValue) == 0x000250, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_GetClassDefaultObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_MakeVector_ReturnValue_2) == 0x000258, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x000264, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_Subtract_VectorVector_ReturnValue_3) == 0x000270, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_Subtract_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_MakeVector2D_ReturnValue) == 0x00027C, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_MakeVector2D_ReturnValue_1) == 0x000284, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_Less_FloatFloat_ReturnValue) == 0x00028C, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00028D, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_GetRiverDimensions_RightOffset) == 0x000290, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_GetRiverDimensions_RightOffset' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_GetRiverDimensions_BankDistance) == 0x000294, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_GetRiverDimensions_BankDistance' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_GetRiverDimensions_RiverDepth) == 0x000298, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_GetRiverDimensions_RiverDepth' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_GetRiverDimensions_RightOffset_1) == 0x00029C, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_GetRiverDimensions_RightOffset_1' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_GetRiverDimensions_BankDistance_1) == 0x0002A0, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_GetRiverDimensions_BankDistance_1' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_GetRiverDimensions_RiverDepth_1) == 0x0002A4, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_GetRiverDimensions_RiverDepth_1' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x0002A8, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x0002A9, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_GetScaleAtSplinePoint_ReturnValue_6) == 0x0002AC, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_GetScaleAtSplinePoint_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_GetScaleAtSplinePoint_ReturnValue_7) == 0x0002B8, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_GetScaleAtSplinePoint_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, Temp_struct_Variable) == 0x0002D0, "Member 'BP_RiverSpline_C_BuildRiverSegment::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, Temp_struct_Variable_1) == 0x000300, "Member 'BP_RiverSpline_C_BuildRiverSegment::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_AddComponent_ReturnValue) == 0x000330, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_AddComponent_ReturnValue_1) == 0x000338, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_AddComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_SetStaticMesh_ReturnValue) == 0x000340, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_GetLocationAndTangentAtSplinePoint_Location) == 0x000344, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_GetLocationAndTangentAtSplinePoint_Location' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_GetLocationAndTangentAtSplinePoint_Tangent) == 0x000350, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_GetLocationAndTangentAtSplinePoint_Tangent' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_GetRightVectorAtSplinePoint_ReturnValue) == 0x00035C, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_GetRightVectorAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_GetLocationAndTangentAtSplinePoint_Location_1) == 0x000368, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_GetLocationAndTangentAtSplinePoint_Location_1' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_GetLocationAndTangentAtSplinePoint_Tangent_1) == 0x000374, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_GetLocationAndTangentAtSplinePoint_Tangent_1' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_GetRightVectorAtSplinePoint_ReturnValue_1) == 0x000380, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_GetRightVectorAtSplinePoint_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_GetLocationAtSplinePoint_ReturnValue) == 0x00038C, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_GetLocationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_GetLocationAtSplinePoint_ReturnValue_1) == 0x000398, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_GetLocationAtSplinePoint_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, Temp_struct_Variable_2) == 0x0003B0, "Member 'BP_RiverSpline_C_BuildRiverSegment::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_SetStaticMesh_ReturnValue_1) == 0x0003E0, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_SetStaticMesh_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_AddComponent_ReturnValue_2) == 0x0003E8, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_AddComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, K2Node_MakeStruct_RiverSplineSegmentDetails) == 0x0003F0, "Member 'BP_RiverSpline_C_BuildRiverSegment::K2Node_MakeStruct_RiverSplineSegmentDetails' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_Array_Add_ReturnValue) == 0x000410, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, K2Node_DynamicCast_AsBP_River_Spline_Mesh) == 0x000418, "Member 'BP_RiverSpline_C_BuildRiverSegment::K2Node_DynamicCast_AsBP_River_Spline_Mesh' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, K2Node_DynamicCast_bSuccess) == 0x000420, "Member 'BP_RiverSpline_C_BuildRiverSegment::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_GetLocalBounds_Min) == 0x000424, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_GetLocalBounds_Min' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_GetLocalBounds_Max) == 0x000430, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_GetLocalBounds_Max' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_MakeVector2D_ReturnValue_2) == 0x00043C, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_BreakVector_X_7) == 0x000444, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_BreakVector_X_7' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_BreakVector_Y_7) == 0x000448, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_BreakVector_Y_7' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_BreakVector_Z_7) == 0x00044C, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_BreakVector_Z_7' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, K2Node_MathExpression_ReturnValue_2) == 0x000450, "Member 'BP_RiverSpline_C_BuildRiverSegment::K2Node_MathExpression_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, K2Node_MathExpression_ReturnValue_3) == 0x000454, "Member 'BP_RiverSpline_C_BuildRiverSegment::K2Node_MathExpression_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, K2Node_MathExpression_ReturnValue_4) == 0x000458, "Member 'BP_RiverSpline_C_BuildRiverSegment::K2Node_MathExpression_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, K2Node_MathExpression_ReturnValue_5) == 0x00045C, "Member 'BP_RiverSpline_C_BuildRiverSegment::K2Node_MathExpression_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_MakeVector2D_ReturnValue_3) == 0x000460, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_MakeVector2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_MakeVector2D_ReturnValue_4) == 0x000468, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_MakeVector2D_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_MakeVector2D_ReturnValue_5) == 0x000470, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_MakeVector2D_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildRiverSegment, CallFunc_Percent_IntInt_ReturnValue) == 0x000478, "Member 'BP_RiverSpline_C_BuildRiverSegment::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");

// Function BP_RiverSpline.BP_RiverSpline_C.GetRiverDimensions
// 0x00B8 (0x00B8 - 0x0000)
struct BP_RiverSpline_C_GetRiverDimensions final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RightVector;                                       // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RightOffset;                                       // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BankDistance;                                      // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RiverDepth;                                        // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRiverSplinePointDimensions            LocalDimensions;                                   // 0x0028(0x0018)(Edit, BlueprintVisible, NoDestructor)
	float                                         Depth;                                             // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LocalLeftDistance;                                 // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LocalRightVector;                                  // 0x0048(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LocalStartLocation;                                // 0x0054(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_1;                       // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTraceDistance_Distance;                // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTraceDistance_Distance_1;              // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A2[0x2];                                       // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_MathExpression_ReturnValue;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTraceDistance_Distance_2;              // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RiverSpline_C_GetRiverDimensions) == 0x000004, "Wrong alignment on BP_RiverSpline_C_GetRiverDimensions");
static_assert(sizeof(BP_RiverSpline_C_GetRiverDimensions) == 0x0000B8, "Wrong size on BP_RiverSpline_C_GetRiverDimensions");
static_assert(offsetof(BP_RiverSpline_C_GetRiverDimensions, Location) == 0x000000, "Member 'BP_RiverSpline_C_GetRiverDimensions::Location' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_GetRiverDimensions, RightVector) == 0x00000C, "Member 'BP_RiverSpline_C_GetRiverDimensions::RightVector' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_GetRiverDimensions, Index_0) == 0x000018, "Member 'BP_RiverSpline_C_GetRiverDimensions::Index_0' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_GetRiverDimensions, RightOffset) == 0x00001C, "Member 'BP_RiverSpline_C_GetRiverDimensions::RightOffset' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_GetRiverDimensions, BankDistance) == 0x000020, "Member 'BP_RiverSpline_C_GetRiverDimensions::BankDistance' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_GetRiverDimensions, RiverDepth) == 0x000024, "Member 'BP_RiverSpline_C_GetRiverDimensions::RiverDepth' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_GetRiverDimensions, LocalDimensions) == 0x000028, "Member 'BP_RiverSpline_C_GetRiverDimensions::LocalDimensions' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_GetRiverDimensions, Depth) == 0x000040, "Member 'BP_RiverSpline_C_GetRiverDimensions::Depth' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_GetRiverDimensions, LocalLeftDistance) == 0x000044, "Member 'BP_RiverSpline_C_GetRiverDimensions::LocalLeftDistance' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_GetRiverDimensions, LocalRightVector) == 0x000048, "Member 'BP_RiverSpline_C_GetRiverDimensions::LocalRightVector' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_GetRiverDimensions, LocalStartLocation) == 0x000054, "Member 'BP_RiverSpline_C_GetRiverDimensions::LocalStartLocation' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_GetRiverDimensions, CallFunc_FMax_ReturnValue) == 0x000060, "Member 'BP_RiverSpline_C_GetRiverDimensions::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_GetRiverDimensions, CallFunc_FMax_ReturnValue_1) == 0x000064, "Member 'BP_RiverSpline_C_GetRiverDimensions::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_GetRiverDimensions, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x000068, "Member 'BP_RiverSpline_C_GetRiverDimensions::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_GetRiverDimensions, CallFunc_Subtract_IntInt_ReturnValue) == 0x00006C, "Member 'BP_RiverSpline_C_GetRiverDimensions::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_GetRiverDimensions, Temp_float_Variable) == 0x000070, "Member 'BP_RiverSpline_C_GetRiverDimensions::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_GetRiverDimensions, Temp_int_Variable) == 0x000074, "Member 'BP_RiverSpline_C_GetRiverDimensions::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_GetRiverDimensions, CallFunc_Add_VectorVector_ReturnValue) == 0x000078, "Member 'BP_RiverSpline_C_GetRiverDimensions::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_GetRiverDimensions, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000084, "Member 'BP_RiverSpline_C_GetRiverDimensions::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_GetRiverDimensions, CallFunc_Add_IntInt_ReturnValue) == 0x000088, "Member 'BP_RiverSpline_C_GetRiverDimensions::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_GetRiverDimensions, CallFunc_GetTraceDistance_Distance) == 0x00008C, "Member 'BP_RiverSpline_C_GetRiverDimensions::CallFunc_GetTraceDistance_Distance' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_GetRiverDimensions, CallFunc_GetTraceDistance_Distance_1) == 0x000090, "Member 'BP_RiverSpline_C_GetRiverDimensions::CallFunc_GetTraceDistance_Distance_1' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_GetRiverDimensions, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000094, "Member 'BP_RiverSpline_C_GetRiverDimensions::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_GetRiverDimensions, CallFunc_Less_FloatFloat_ReturnValue) == 0x0000A0, "Member 'BP_RiverSpline_C_GetRiverDimensions::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_GetRiverDimensions, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000A1, "Member 'BP_RiverSpline_C_GetRiverDimensions::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_GetRiverDimensions, K2Node_MathExpression_ReturnValue) == 0x0000A4, "Member 'BP_RiverSpline_C_GetRiverDimensions::K2Node_MathExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_GetRiverDimensions, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000A8, "Member 'BP_RiverSpline_C_GetRiverDimensions::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_GetRiverDimensions, CallFunc_GetTraceDistance_Distance_2) == 0x0000AC, "Member 'BP_RiverSpline_C_GetRiverDimensions::CallFunc_GetTraceDistance_Distance_2' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_GetRiverDimensions, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x0000B0, "Member 'BP_RiverSpline_C_GetRiverDimensions::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_GetRiverDimensions, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000B4, "Member 'BP_RiverSpline_C_GetRiverDimensions::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_RiverSpline.BP_RiverSpline_C.GetTraceDistance
// 0x0168 (0x0168 - 0x0000)
struct BP_RiverSpline_C_GetTraceDistance final
{
public:
	struct FVector                                Start;                                             // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Direction;                                         // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Distance;                                          // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0038(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0048(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D7[0x1];                                       // 0x00D7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              CallFunc_BreakHitResult_ShapeSurfaceType;          // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x012C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RiverSpline_C_GetTraceDistance) == 0x000008, "Wrong alignment on BP_RiverSpline_C_GetTraceDistance");
static_assert(sizeof(BP_RiverSpline_C_GetTraceDistance) == 0x000168, "Wrong size on BP_RiverSpline_C_GetTraceDistance");
static_assert(offsetof(BP_RiverSpline_C_GetTraceDistance, Start) == 0x000000, "Member 'BP_RiverSpline_C_GetTraceDistance::Start' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_GetTraceDistance, Direction) == 0x00000C, "Member 'BP_RiverSpline_C_GetTraceDistance::Direction' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_GetTraceDistance, Distance) == 0x000018, "Member 'BP_RiverSpline_C_GetTraceDistance::Distance' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_GetTraceDistance, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00001C, "Member 'BP_RiverSpline_C_GetTraceDistance::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_GetTraceDistance, CallFunc_Add_VectorVector_ReturnValue) == 0x000028, "Member 'BP_RiverSpline_C_GetTraceDistance::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_GetTraceDistance, K2Node_MakeArray_Array) == 0x000038, "Member 'BP_RiverSpline_C_GetTraceDistance::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_GetTraceDistance, CallFunc_LineTraceSingle_OutHit) == 0x000048, "Member 'BP_RiverSpline_C_GetTraceDistance::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_GetTraceDistance, CallFunc_LineTraceSingle_ReturnValue) == 0x0000D4, "Member 'BP_RiverSpline_C_GetTraceDistance::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_GetTraceDistance, CallFunc_BreakHitResult_bBlockingHit) == 0x0000D5, "Member 'BP_RiverSpline_C_GetTraceDistance::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_GetTraceDistance, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000D6, "Member 'BP_RiverSpline_C_GetTraceDistance::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_GetTraceDistance, CallFunc_BreakHitResult_Time) == 0x0000D8, "Member 'BP_RiverSpline_C_GetTraceDistance::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_GetTraceDistance, CallFunc_BreakHitResult_Distance) == 0x0000DC, "Member 'BP_RiverSpline_C_GetTraceDistance::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_GetTraceDistance, CallFunc_BreakHitResult_Location) == 0x0000E0, "Member 'BP_RiverSpline_C_GetTraceDistance::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_GetTraceDistance, CallFunc_BreakHitResult_ImpactPoint) == 0x0000EC, "Member 'BP_RiverSpline_C_GetTraceDistance::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_GetTraceDistance, CallFunc_BreakHitResult_Normal) == 0x0000F8, "Member 'BP_RiverSpline_C_GetTraceDistance::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_GetTraceDistance, CallFunc_BreakHitResult_ImpactNormal) == 0x000104, "Member 'BP_RiverSpline_C_GetTraceDistance::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_GetTraceDistance, CallFunc_BreakHitResult_PhysMat) == 0x000110, "Member 'BP_RiverSpline_C_GetTraceDistance::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_GetTraceDistance, CallFunc_BreakHitResult_HitActor) == 0x000118, "Member 'BP_RiverSpline_C_GetTraceDistance::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_GetTraceDistance, CallFunc_BreakHitResult_HitComponent) == 0x000120, "Member 'BP_RiverSpline_C_GetTraceDistance::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_GetTraceDistance, CallFunc_BreakHitResult_ShapeSurfaceType) == 0x000128, "Member 'BP_RiverSpline_C_GetTraceDistance::CallFunc_BreakHitResult_ShapeSurfaceType' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_GetTraceDistance, CallFunc_BreakHitResult_HitBoneName) == 0x00012C, "Member 'BP_RiverSpline_C_GetTraceDistance::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_GetTraceDistance, CallFunc_BreakHitResult_HitItem) == 0x000134, "Member 'BP_RiverSpline_C_GetTraceDistance::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_GetTraceDistance, CallFunc_BreakHitResult_ElementIndex) == 0x000138, "Member 'BP_RiverSpline_C_GetTraceDistance::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_GetTraceDistance, CallFunc_BreakHitResult_FaceIndex) == 0x00013C, "Member 'BP_RiverSpline_C_GetTraceDistance::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_GetTraceDistance, CallFunc_BreakHitResult_TraceStart) == 0x000140, "Member 'BP_RiverSpline_C_GetTraceDistance::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_GetTraceDistance, CallFunc_BreakHitResult_TraceEnd) == 0x00014C, "Member 'BP_RiverSpline_C_GetTraceDistance::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_GetTraceDistance, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000158, "Member 'BP_RiverSpline_C_GetTraceDistance::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_GetTraceDistance, CallFunc_VSize_ReturnValue) == 0x000164, "Member 'BP_RiverSpline_C_GetTraceDistance::CallFunc_VSize_ReturnValue' has a wrong offset!");

// Function BP_RiverSpline.BP_RiverSpline_C.BuildSpline
// 0x0070 (0x0070 - 0x0000)
struct BP_RiverSpline_C_BuildSpline final
{
public:
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_C*                        CallFunc_GetClassDefaultObject_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_27[0x1];                                       // 0x0027(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRiverSplinePointDimensions            K2Node_MakeStruct_RiverSplinePointDimensions;      // 0x0028(0x0018)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63[0x1];                                       // 0x0063(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_RiverSpline_C_BuildSpline) == 0x000008, "Wrong alignment on BP_RiverSpline_C_BuildSpline");
static_assert(sizeof(BP_RiverSpline_C_BuildSpline) == 0x000070, "Wrong size on BP_RiverSpline_C_BuildSpline");
static_assert(offsetof(BP_RiverSpline_C_BuildSpline, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x000000, "Member 'BP_RiverSpline_C_BuildSpline::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildSpline, CallFunc_GetClassDefaultObject_ReturnValue) == 0x000008, "Member 'BP_RiverSpline_C_BuildSpline::CallFunc_GetClassDefaultObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildSpline, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_RiverSpline_C_BuildSpline::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildSpline, CallFunc_Array_Add_ReturnValue) == 0x000014, "Member 'BP_RiverSpline_C_BuildSpline::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildSpline, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_RiverSpline_C_BuildSpline::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildSpline, CallFunc_Subtract_IntInt_ReturnValue) == 0x00001C, "Member 'BP_RiverSpline_C_BuildSpline::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildSpline, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000020, "Member 'BP_RiverSpline_C_BuildSpline::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildSpline, CallFunc_Greater_IntInt_ReturnValue) == 0x000024, "Member 'BP_RiverSpline_C_BuildSpline::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildSpline, CallFunc_Less_IntInt_ReturnValue) == 0x000025, "Member 'BP_RiverSpline_C_BuildSpline::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildSpline, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000026, "Member 'BP_RiverSpline_C_BuildSpline::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildSpline, K2Node_MakeStruct_RiverSplinePointDimensions) == 0x000028, "Member 'BP_RiverSpline_C_BuildSpline::K2Node_MakeStruct_RiverSplinePointDimensions' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildSpline, CallFunc_Array_Length_ReturnValue_1) == 0x000040, "Member 'BP_RiverSpline_C_BuildSpline::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildSpline, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000044, "Member 'BP_RiverSpline_C_BuildSpline::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildSpline, CallFunc_Array_Add_ReturnValue_1) == 0x000048, "Member 'BP_RiverSpline_C_BuildSpline::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildSpline, CallFunc_Less_IntInt_ReturnValue_1) == 0x00004C, "Member 'BP_RiverSpline_C_BuildSpline::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildSpline, Temp_int_Variable) == 0x000050, "Member 'BP_RiverSpline_C_BuildSpline::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildSpline, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000054, "Member 'BP_RiverSpline_C_BuildSpline::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildSpline, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'BP_RiverSpline_C_BuildSpline::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildSpline, Temp_int_Variable_1) == 0x00005C, "Member 'BP_RiverSpline_C_BuildSpline::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildSpline, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000060, "Member 'BP_RiverSpline_C_BuildSpline::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildSpline, CallFunc_Less_IntInt_ReturnValue_2) == 0x000061, "Member 'BP_RiverSpline_C_BuildSpline::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildSpline, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000062, "Member 'BP_RiverSpline_C_BuildSpline::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildSpline, CallFunc_Add_IntInt_ReturnValue_1) == 0x000064, "Member 'BP_RiverSpline_C_BuildSpline::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildSpline, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000068, "Member 'BP_RiverSpline_C_BuildSpline::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_BuildSpline, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x00006C, "Member 'BP_RiverSpline_C_BuildSpline::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_RiverSpline.BP_RiverSpline_C.InverseSpline
// 0x0120 (0x0120 - 0x0000)
struct BP_RiverSpline_C_InverseSpline final
{
public:
	TArray<struct FVector>                        TempSplinePointScales;                             // 0x0000(0x0010)(Edit, BlueprintVisible)
	int32                                         PrevNumSplinePoints;                               // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTransform>                     TempSplinePoints;                                  // 0x0018(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Variable;                                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_VectorVector_ReturnValue;        // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_VectorVector_ReturnValue_1;      // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetScaleAtSplinePoint_ReturnValue;        // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransformAtSplinePoint_ReturnValue;    // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Array_Get_Item_1;                         // 0x00B0(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_4;            // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RiverSpline_C_InverseSpline) == 0x000010, "Wrong alignment on BP_RiverSpline_C_InverseSpline");
static_assert(sizeof(BP_RiverSpline_C_InverseSpline) == 0x000120, "Wrong size on BP_RiverSpline_C_InverseSpline");
static_assert(offsetof(BP_RiverSpline_C_InverseSpline, TempSplinePointScales) == 0x000000, "Member 'BP_RiverSpline_C_InverseSpline::TempSplinePointScales' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_InverseSpline, PrevNumSplinePoints) == 0x000010, "Member 'BP_RiverSpline_C_InverseSpline::PrevNumSplinePoints' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_InverseSpline, TempSplinePoints) == 0x000018, "Member 'BP_RiverSpline_C_InverseSpline::TempSplinePoints' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_InverseSpline, Temp_int_Variable) == 0x000028, "Member 'BP_RiverSpline_C_InverseSpline::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_InverseSpline, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'BP_RiverSpline_C_InverseSpline::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_InverseSpline, CallFunc_Subtract_IntInt_ReturnValue) == 0x000030, "Member 'BP_RiverSpline_C_InverseSpline::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_InverseSpline, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BP_RiverSpline_C_InverseSpline::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_InverseSpline, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BP_RiverSpline_C_InverseSpline::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_InverseSpline, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00003C, "Member 'BP_RiverSpline_C_InverseSpline::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_InverseSpline, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000040, "Member 'BP_RiverSpline_C_InverseSpline::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_InverseSpline, Temp_int_Array_Index_Variable) == 0x000044, "Member 'BP_RiverSpline_C_InverseSpline::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_InverseSpline, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_RiverSpline_C_InverseSpline::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_InverseSpline, CallFunc_NotEqual_VectorVector_ReturnValue) == 0x000054, "Member 'BP_RiverSpline_C_InverseSpline::CallFunc_NotEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_InverseSpline, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000058, "Member 'BP_RiverSpline_C_InverseSpline::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_InverseSpline, CallFunc_NotEqual_VectorVector_ReturnValue_1) == 0x00005C, "Member 'BP_RiverSpline_C_InverseSpline::CallFunc_NotEqual_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_InverseSpline, CallFunc_BooleanAND_ReturnValue) == 0x00005D, "Member 'BP_RiverSpline_C_InverseSpline::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_InverseSpline, CallFunc_GetScaleAtSplinePoint_ReturnValue) == 0x000060, "Member 'BP_RiverSpline_C_InverseSpline::CallFunc_GetScaleAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_InverseSpline, CallFunc_Array_Add_ReturnValue) == 0x00006C, "Member 'BP_RiverSpline_C_InverseSpline::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_InverseSpline, CallFunc_GetTransformAtSplinePoint_ReturnValue) == 0x000070, "Member 'BP_RiverSpline_C_InverseSpline::CallFunc_GetTransformAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_InverseSpline, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x0000A0, "Member 'BP_RiverSpline_C_InverseSpline::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_InverseSpline, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x0000A4, "Member 'BP_RiverSpline_C_InverseSpline::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_InverseSpline, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_RiverSpline_C_InverseSpline::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_InverseSpline, CallFunc_Array_Get_Item_1) == 0x0000B0, "Member 'BP_RiverSpline_C_InverseSpline::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_InverseSpline, CallFunc_Array_Add_ReturnValue_1) == 0x0000E0, "Member 'BP_RiverSpline_C_InverseSpline::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_InverseSpline, CallFunc_BreakTransform_Location) == 0x0000E4, "Member 'BP_RiverSpline_C_InverseSpline::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_InverseSpline, CallFunc_BreakTransform_Rotation) == 0x0000F0, "Member 'BP_RiverSpline_C_InverseSpline::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_InverseSpline, CallFunc_BreakTransform_Scale) == 0x0000FC, "Member 'BP_RiverSpline_C_InverseSpline::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_InverseSpline, CallFunc_Array_Length_ReturnValue_1) == 0x000108, "Member 'BP_RiverSpline_C_InverseSpline::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_InverseSpline, CallFunc_Subtract_IntInt_ReturnValue_4) == 0x00010C, "Member 'BP_RiverSpline_C_InverseSpline::CallFunc_Subtract_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_InverseSpline, CallFunc_Max_ReturnValue) == 0x000110, "Member 'BP_RiverSpline_C_InverseSpline::CallFunc_Max_ReturnValue' has a wrong offset!");

// Function BP_RiverSpline.BP_RiverSpline_C.Max
// 0x0030 (0x0030 - 0x0000)
struct BP_RiverSpline_C_Max final
{
public:
	struct FVector                                First;                                             // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Second;                                            // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Largest;                                           // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSizeSquared_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSizeSquared_ReturnValue_1;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_RiverSpline_C_Max) == 0x000004, "Wrong alignment on BP_RiverSpline_C_Max");
static_assert(sizeof(BP_RiverSpline_C_Max) == 0x000030, "Wrong size on BP_RiverSpline_C_Max");
static_assert(offsetof(BP_RiverSpline_C_Max, First) == 0x000000, "Member 'BP_RiverSpline_C_Max::First' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_Max, Second) == 0x00000C, "Member 'BP_RiverSpline_C_Max::Second' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_Max, Largest) == 0x000018, "Member 'BP_RiverSpline_C_Max::Largest' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_Max, CallFunc_VSizeSquared_ReturnValue) == 0x000024, "Member 'BP_RiverSpline_C_Max::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_Max, CallFunc_VSizeSquared_ReturnValue_1) == 0x000028, "Member 'BP_RiverSpline_C_Max::CallFunc_VSizeSquared_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_Max, CallFunc_Less_FloatFloat_ReturnValue) == 0x00002C, "Member 'BP_RiverSpline_C_Max::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_C_Max, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00002D, "Member 'BP_RiverSpline_C_Max::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

}

