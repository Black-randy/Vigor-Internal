#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Mannequin_withWeapons

#include "Basic.hpp"

#include "BP_Mannequin_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Mannequin_withWeapons.BP_Mannequin_withWeapons_C
// 0x0090 (0x0310 - 0x0280)
class ABP_Mannequin_withWeapons_C : public ABP_Mannequin_C
{
public:
	class USkeletalMeshComponent*                 Skin_ExtraGeometry_4;                              // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Skin_ExtraGeometry_3;                              // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Skin_ExtraGeometry_2;                              // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Skin_ExtraGeometry_1;                              // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SKSecondaryB;                                      // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SKSecondaryA;                                      // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SKPrimaryB;                                        // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SKPrimaryA;                                        // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TMap<TSoftObjectPtr<class USkeletalMesh>, TSoftObjectPtr<class UAnimSequence>> WeaponMesh_To_AnimPose;                            // 0x02C0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void CheckWeaponForCustomAnim(class USkeletalMeshComponent* WeaponMesh);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Mannequin_withWeapons_C">();
	}
	static class ABP_Mannequin_withWeapons_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Mannequin_withWeapons_C>();
	}
};
static_assert(alignof(ABP_Mannequin_withWeapons_C) == 0x000008, "Wrong alignment on ABP_Mannequin_withWeapons_C");
static_assert(sizeof(ABP_Mannequin_withWeapons_C) == 0x000310, "Wrong size on ABP_Mannequin_withWeapons_C");
static_assert(offsetof(ABP_Mannequin_withWeapons_C, Skin_ExtraGeometry_4) == 0x000280, "Member 'ABP_Mannequin_withWeapons_C::Skin_ExtraGeometry_4' has a wrong offset!");
static_assert(offsetof(ABP_Mannequin_withWeapons_C, Skin_ExtraGeometry_3) == 0x000288, "Member 'ABP_Mannequin_withWeapons_C::Skin_ExtraGeometry_3' has a wrong offset!");
static_assert(offsetof(ABP_Mannequin_withWeapons_C, Skin_ExtraGeometry_2) == 0x000290, "Member 'ABP_Mannequin_withWeapons_C::Skin_ExtraGeometry_2' has a wrong offset!");
static_assert(offsetof(ABP_Mannequin_withWeapons_C, Skin_ExtraGeometry_1) == 0x000298, "Member 'ABP_Mannequin_withWeapons_C::Skin_ExtraGeometry_1' has a wrong offset!");
static_assert(offsetof(ABP_Mannequin_withWeapons_C, SKSecondaryB) == 0x0002A0, "Member 'ABP_Mannequin_withWeapons_C::SKSecondaryB' has a wrong offset!");
static_assert(offsetof(ABP_Mannequin_withWeapons_C, SKSecondaryA) == 0x0002A8, "Member 'ABP_Mannequin_withWeapons_C::SKSecondaryA' has a wrong offset!");
static_assert(offsetof(ABP_Mannequin_withWeapons_C, SKPrimaryB) == 0x0002B0, "Member 'ABP_Mannequin_withWeapons_C::SKPrimaryB' has a wrong offset!");
static_assert(offsetof(ABP_Mannequin_withWeapons_C, SKPrimaryA) == 0x0002B8, "Member 'ABP_Mannequin_withWeapons_C::SKPrimaryA' has a wrong offset!");
static_assert(offsetof(ABP_Mannequin_withWeapons_C, WeaponMesh_To_AnimPose) == 0x0002C0, "Member 'ABP_Mannequin_withWeapons_C::WeaponMesh_To_AnimPose' has a wrong offset!");

}

