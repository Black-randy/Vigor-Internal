#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HealingComponent

#include "Basic.hpp"

#include "Flame_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "S_HC_Poison_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_HealingComponent.BP_HealingComponent_C
// 0x0090 (0x0140 - 0x00B0)
class UBP_HealingComponent_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         MainTimerDelay;                                    // 0x00B8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimedHeal;                                         // 0x00BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHealthComponent*                       HealthComponent;                                   // 0x00C0(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_HealingConsumable_Base_C*>   RegisteredConsumables;                             // 0x00C8(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnTemplate, DisableEditOnInstance)
	TMap<class UUI_HealthBar_C*, bool>            AllHealthBars_Client;                              // 0x00D8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<struct FS_HC_Poison>                   Poisons;                                           // 0x0128(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnInstance)
	struct FTimerHandle                           MainTimerAuthority;                                // 0x0138(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_HealingComponent(int32 EntryPoint);
	void ReceiveBeginPlay();
	void UpdateStatusOnClient();
	void OwningClientCall_HealedAmount(float Amount);
	void GetHealthStatus(float DeltaTime, float* TrueHealthFractionInit, float* TempHealthFractionInit, float* ExpectedHealing);
	void GetHealthComponent(class UHealthComponent** HealthComponent_0);
	void AddHeal(const float Amount, EHealthType HealthType);
	void ApplyPainkiller();
	void ApplyAntibiotic(float Duration);
	void RegisterConsumable(class ABP_HealingConsumable_Base_C* HealingConsumable);
	void UnregisterConsumable(class ABP_HealingConsumable_Base_C* HealingConsumable);
	void UpdateConsumableEffectsOnAuthority();
	void ClearEffects();
	void ApplyPoison(const struct FS_HC_Poison& Poison);
	void UpdatePoisons(float TickDuration, float* AmountToUnHeal, struct FS_HC_Poison* InstigatingPoison);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_HealingComponent_C">();
	}
	static class UBP_HealingComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_HealingComponent_C>();
	}
};
static_assert(alignof(UBP_HealingComponent_C) == 0x000008, "Wrong alignment on UBP_HealingComponent_C");
static_assert(sizeof(UBP_HealingComponent_C) == 0x000140, "Wrong size on UBP_HealingComponent_C");
static_assert(offsetof(UBP_HealingComponent_C, UberGraphFrame) == 0x0000B0, "Member 'UBP_HealingComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_HealingComponent_C, MainTimerDelay) == 0x0000B8, "Member 'UBP_HealingComponent_C::MainTimerDelay' has a wrong offset!");
static_assert(offsetof(UBP_HealingComponent_C, TimedHeal) == 0x0000BC, "Member 'UBP_HealingComponent_C::TimedHeal' has a wrong offset!");
static_assert(offsetof(UBP_HealingComponent_C, HealthComponent) == 0x0000C0, "Member 'UBP_HealingComponent_C::HealthComponent' has a wrong offset!");
static_assert(offsetof(UBP_HealingComponent_C, RegisteredConsumables) == 0x0000C8, "Member 'UBP_HealingComponent_C::RegisteredConsumables' has a wrong offset!");
static_assert(offsetof(UBP_HealingComponent_C, AllHealthBars_Client) == 0x0000D8, "Member 'UBP_HealingComponent_C::AllHealthBars_Client' has a wrong offset!");
static_assert(offsetof(UBP_HealingComponent_C, Poisons) == 0x000128, "Member 'UBP_HealingComponent_C::Poisons' has a wrong offset!");
static_assert(offsetof(UBP_HealingComponent_C, MainTimerAuthority) == 0x000138, "Member 'UBP_HealingComponent_C::MainTimerAuthority' has a wrong offset!");

}

