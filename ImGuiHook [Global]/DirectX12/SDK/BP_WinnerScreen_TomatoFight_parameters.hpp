#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WinnerScreen_TomatoFight

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_WinnerScreen_TomatoFight.BP_WinnerScreen_TomatoFight_C.ExecuteUbergraph_BP_WinnerScreen_TomatoFight
// 0x0028 (0x0028 - 0x0000)
struct BP_WinnerScreen_TomatoFight_C_ExecuteUbergraph_BP_WinnerScreen_TomatoFight final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanCharacter*                        K2Node_Event_HumanCharacter;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Mannequin_WinnerScreen_Base_C*      CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WinnerScreen_TomatoFight_C_ExecuteUbergraph_BP_WinnerScreen_TomatoFight) == 0x000008, "Wrong alignment on BP_WinnerScreen_TomatoFight_C_ExecuteUbergraph_BP_WinnerScreen_TomatoFight");
static_assert(sizeof(BP_WinnerScreen_TomatoFight_C_ExecuteUbergraph_BP_WinnerScreen_TomatoFight) == 0x000028, "Wrong size on BP_WinnerScreen_TomatoFight_C_ExecuteUbergraph_BP_WinnerScreen_TomatoFight");
static_assert(offsetof(BP_WinnerScreen_TomatoFight_C_ExecuteUbergraph_BP_WinnerScreen_TomatoFight, EntryPoint) == 0x000000, "Member 'BP_WinnerScreen_TomatoFight_C_ExecuteUbergraph_BP_WinnerScreen_TomatoFight::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_WinnerScreen_TomatoFight_C_ExecuteUbergraph_BP_WinnerScreen_TomatoFight, K2Node_Event_HumanCharacter) == 0x000008, "Member 'BP_WinnerScreen_TomatoFight_C_ExecuteUbergraph_BP_WinnerScreen_TomatoFight::K2Node_Event_HumanCharacter' has a wrong offset!");
static_assert(offsetof(BP_WinnerScreen_TomatoFight_C_ExecuteUbergraph_BP_WinnerScreen_TomatoFight, Temp_int_Variable) == 0x000010, "Member 'BP_WinnerScreen_TomatoFight_C_ExecuteUbergraph_BP_WinnerScreen_TomatoFight::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_WinnerScreen_TomatoFight_C_ExecuteUbergraph_BP_WinnerScreen_TomatoFight, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_WinnerScreen_TomatoFight_C_ExecuteUbergraph_BP_WinnerScreen_TomatoFight::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinnerScreen_TomatoFight_C_ExecuteUbergraph_BP_WinnerScreen_TomatoFight, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_WinnerScreen_TomatoFight_C_ExecuteUbergraph_BP_WinnerScreen_TomatoFight::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_WinnerScreen_TomatoFight_C_ExecuteUbergraph_BP_WinnerScreen_TomatoFight, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000020, "Member 'BP_WinnerScreen_TomatoFight_C_ExecuteUbergraph_BP_WinnerScreen_TomatoFight::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function BP_WinnerScreen_TomatoFight.BP_WinnerScreen_TomatoFight_C.Set Highlighted Player
// 0x0008 (0x0008 - 0x0000)
struct BP_WinnerScreen_TomatoFight_C_Set_Highlighted_Player final
{
public:
	class AHumanCharacter*                        HumanCharacter;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WinnerScreen_TomatoFight_C_Set_Highlighted_Player) == 0x000008, "Wrong alignment on BP_WinnerScreen_TomatoFight_C_Set_Highlighted_Player");
static_assert(sizeof(BP_WinnerScreen_TomatoFight_C_Set_Highlighted_Player) == 0x000008, "Wrong size on BP_WinnerScreen_TomatoFight_C_Set_Highlighted_Player");
static_assert(offsetof(BP_WinnerScreen_TomatoFight_C_Set_Highlighted_Player, HumanCharacter) == 0x000000, "Member 'BP_WinnerScreen_TomatoFight_C_Set_Highlighted_Player::HumanCharacter' has a wrong offset!");

// Function BP_WinnerScreen_TomatoFight.BP_WinnerScreen_TomatoFight_C.Cycle Next Hightlighted Player
// 0x0020 (0x0020 - 0x0000)
struct BP_WinnerScreen_TomatoFight_C_Cycle_Next_Hightlighted_Player final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanCharacter*                        CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WinnerScreen_TomatoFight_C_Cycle_Next_Hightlighted_Player) == 0x000008, "Wrong alignment on BP_WinnerScreen_TomatoFight_C_Cycle_Next_Hightlighted_Player");
static_assert(sizeof(BP_WinnerScreen_TomatoFight_C_Cycle_Next_Hightlighted_Player) == 0x000020, "Wrong size on BP_WinnerScreen_TomatoFight_C_Cycle_Next_Hightlighted_Player");
static_assert(offsetof(BP_WinnerScreen_TomatoFight_C_Cycle_Next_Hightlighted_Player, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_WinnerScreen_TomatoFight_C_Cycle_Next_Hightlighted_Player::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WinnerScreen_TomatoFight_C_Cycle_Next_Hightlighted_Player, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_WinnerScreen_TomatoFight_C_Cycle_Next_Hightlighted_Player::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WinnerScreen_TomatoFight_C_Cycle_Next_Hightlighted_Player, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_WinnerScreen_TomatoFight_C_Cycle_Next_Hightlighted_Player::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinnerScreen_TomatoFight_C_Cycle_Next_Hightlighted_Player, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BP_WinnerScreen_TomatoFight_C_Cycle_Next_Hightlighted_Player::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinnerScreen_TomatoFight_C_Cycle_Next_Hightlighted_Player, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_WinnerScreen_TomatoFight_C_Cycle_Next_Hightlighted_Player::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_WinnerScreen_TomatoFight_C_Cycle_Next_Hightlighted_Player, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'BP_WinnerScreen_TomatoFight_C_Cycle_Next_Hightlighted_Player::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinnerScreen_TomatoFight_C_Cycle_Next_Hightlighted_Player, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'BP_WinnerScreen_TomatoFight_C_Cycle_Next_Hightlighted_Player::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_WinnerScreen_TomatoFight.BP_WinnerScreen_TomatoFight_C.HideScoreWidget
// 0x0050 (0x0050 - 0x0000)
struct BP_WinnerScreen_TomatoFight_C_HideScoreWidget final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Mannequin_WinnerScreen_Base_C*      CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Mannequin_WinnerScreen_GunFight_C*  K2Node_DynamicCast_AsBP_Mannequin_Winner_Screen_Gun_Fight; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_TeamMemberMarker_GunfightRewardScreen_C* K2Node_DynamicCast_AsUI_Team_Member_Marker_Gunfight_Reward_Screen; // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRenderOpacity_ReturnValue;             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WinnerScreen_TomatoFight_C_HideScoreWidget) == 0x000008, "Wrong alignment on BP_WinnerScreen_TomatoFight_C_HideScoreWidget");
static_assert(sizeof(BP_WinnerScreen_TomatoFight_C_HideScoreWidget) == 0x000050, "Wrong size on BP_WinnerScreen_TomatoFight_C_HideScoreWidget");
static_assert(offsetof(BP_WinnerScreen_TomatoFight_C_HideScoreWidget, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BP_WinnerScreen_TomatoFight_C_HideScoreWidget::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WinnerScreen_TomatoFight_C_HideScoreWidget, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_WinnerScreen_TomatoFight_C_HideScoreWidget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinnerScreen_TomatoFight_C_HideScoreWidget, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_WinnerScreen_TomatoFight_C_HideScoreWidget::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WinnerScreen_TomatoFight_C_HideScoreWidget, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_WinnerScreen_TomatoFight_C_HideScoreWidget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_WinnerScreen_TomatoFight_C_HideScoreWidget, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_WinnerScreen_TomatoFight_C_HideScoreWidget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinnerScreen_TomatoFight_C_HideScoreWidget, K2Node_DynamicCast_AsBP_Mannequin_Winner_Screen_Gun_Fight) == 0x000020, "Member 'BP_WinnerScreen_TomatoFight_C_HideScoreWidget::K2Node_DynamicCast_AsBP_Mannequin_Winner_Screen_Gun_Fight' has a wrong offset!");
static_assert(offsetof(BP_WinnerScreen_TomatoFight_C_HideScoreWidget, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_WinnerScreen_TomatoFight_C_HideScoreWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_WinnerScreen_TomatoFight_C_HideScoreWidget, CallFunc_Less_IntInt_ReturnValue) == 0x000029, "Member 'BP_WinnerScreen_TomatoFight_C_HideScoreWidget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinnerScreen_TomatoFight_C_HideScoreWidget, CallFunc_IsValid_ReturnValue) == 0x00002A, "Member 'BP_WinnerScreen_TomatoFight_C_HideScoreWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinnerScreen_TomatoFight_C_HideScoreWidget, CallFunc_GetUserWidgetObject_ReturnValue) == 0x000030, "Member 'BP_WinnerScreen_TomatoFight_C_HideScoreWidget::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinnerScreen_TomatoFight_C_HideScoreWidget, K2Node_DynamicCast_AsUI_Team_Member_Marker_Gunfight_Reward_Screen) == 0x000038, "Member 'BP_WinnerScreen_TomatoFight_C_HideScoreWidget::K2Node_DynamicCast_AsUI_Team_Member_Marker_Gunfight_Reward_Screen' has a wrong offset!");
static_assert(offsetof(BP_WinnerScreen_TomatoFight_C_HideScoreWidget, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BP_WinnerScreen_TomatoFight_C_HideScoreWidget::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_WinnerScreen_TomatoFight_C_HideScoreWidget, CallFunc_IsValid_ReturnValue_1) == 0x000041, "Member 'BP_WinnerScreen_TomatoFight_C_HideScoreWidget::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WinnerScreen_TomatoFight_C_HideScoreWidget, CallFunc_GetRenderOpacity_ReturnValue) == 0x000044, "Member 'BP_WinnerScreen_TomatoFight_C_HideScoreWidget::CallFunc_GetRenderOpacity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinnerScreen_TomatoFight_C_HideScoreWidget, CallFunc_Less_FloatFloat_ReturnValue) == 0x000048, "Member 'BP_WinnerScreen_TomatoFight_C_HideScoreWidget::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinnerScreen_TomatoFight_C_HideScoreWidget, CallFunc_Not_PreBool_ReturnValue) == 0x000049, "Member 'BP_WinnerScreen_TomatoFight_C_HideScoreWidget::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

}

