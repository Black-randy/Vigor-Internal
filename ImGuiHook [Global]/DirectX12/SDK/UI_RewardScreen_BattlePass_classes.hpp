#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_RewardScreen_BattlePass

#include "Basic.hpp"

#include "Flame_structs.hpp"
#include "Flame_classes.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_RewardScreen_BattlePass.UI_RewardScreen_BattlePass_C
// 0x0228 (0x04E0 - 0x02B8)
class UUI_RewardScreen_BattlePass_C final : public UFlameWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       LevelUp;                                           // 0x02C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       BoostCount;                                        // 0x02C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       XpCount;                                           // 0x02D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UScrollBox*                             Actions;                                           // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           ActionsList;                                       // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        ActionsWidgetSwitcher;                             // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               AnimatedBarSizeBox;                                // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BattlePassIcon;                                    // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameTextBlock*                        BoostEarned;                                       // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameTextBlock*                        BoostText;                                         // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               BoostTextOverlay;                                  // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               BottomPart;                                        // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Canvas_DoubleXP_Event;                             // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameTextBlock*                        CurrentLevel;                                      // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HBox_DoubleXP_BoosterTicket;                       // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_6;                                           // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_7;                                           // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_216;                                         // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_246;                                         // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_391;                                         // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_521;                                         // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_BoosterBackground;                           // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_BoosterImage;                                // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameTextBlock*                        LevelInfo;                                         // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               LoneWolfOverlay;                                   // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               MaxLevelBarSizeBox;                                // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameTextBlock*                        NextLevel;                                         // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           NoSeasonInProgress;                                // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               NoXP;                                              // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_BoosterIcon;                               // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        ProgressBarSwitcher;                               // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameTextBlock*                        Text_BattlePassTitleActive;                        // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameTextBlock*                        Text_DoubleXP_Event_RemainingTime;                 // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           TopPart;                                           // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        TopPartWidgetSwitcher_0;                           // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_BattlePassProgressBar_C*            UI_BattlePassProgressBar;                          // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameTextBlock*                        XpEarned;                                          // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameTextBlock*                        XPToNextLevel;                                     // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class UUI_RewardScreen_MatchEventItem_C*> EventListItems;                                    // 0x03F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          XP_Visualisation_in_progress;                      // 0x0400(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_401[0x3];                                      // 0x0401(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCloudBattlePassMatchResults           Shown_Match_Results;                               // 0x0404(0x001C)(Edit, BlueprintVisible, NoDestructor)
	int32                                         Current_Accumulated_XP;                            // 0x0420(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Current_Level;                                     // 0x0424(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Remaining_XP_after_Level_ups;                      // 0x0428(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42C[0x4];                                      // 0x042C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBattlePassLevel>               Relevant_Level_Ups;                                // 0x0430(0x0010)(Edit, BlueprintVisible)
	int32                                         Remaining_XP_current;                              // 0x0440(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Remaining_Gained_Base_XP;                          // 0x0444(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Remaining_Gained_Bonus_XP;                         // 0x0448(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayedLevelIndex;                                  // 0x044C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         XP_Needed_for_Current_Level;                       // 0x0450(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Total_XP;                                          // 0x0454(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_RewardScreen_LevelUp_C*             RewardScreenLevelUp;                               // 0x0458(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FBattlePassLevel>               Achieved_Levels;                                   // 0x0460(0x0010)(Edit, BlueprintVisible)
	bool                                          LeveledUp;                                         // 0x0470(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_471[0x3];                                      // 0x0471(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxLevelInCurrentSeason;                           // 0x0474(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Gained_XP_PopUp_Shown;                             // 0x0478(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Boosted_XP_PopUp_Shown;                            // 0x0479(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_47A[0x2];                                      // 0x047A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_XP_Needed_For_Current_Level;                  // 0x047C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Was_Lonewolf;                                      // 0x0480(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_481[0x7];                                      // 0x0481(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BattlePassSystem_C*                 BattlePassSystem;                                  // 0x0488(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DoubleXP_Event_Active;                             // 0x0490(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          DoubleXP_BoosterTicketUsed;                        // 0x0491(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_492[0x2];                                      // 0x0492(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCloudBattlePassMatchResults           MatchResult;                                       // 0x0494(0x001C)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	bool                                          IsLegacyCard;                                      // 0x04B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B1[0x3];                                      // 0x04B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   SeasonName;                                        // 0x04B4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BC[0x4];                                      // 0x04BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCloudBattlePassMatchEventResult> MatchEvents;                                       // 0x04C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FCloudBattlePassEventXp>        XpBreakdown;                                       // 0x04D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_UI_RewardScreen_BattlePass(int32 EntryPoint);
	void List_Battle_Pass_Match_Results(class UBP_BattlePassSystem_C* BattlePassSystem_0, class UUI_RewardScreen_LevelUp_C* Level_Up_Screen, const TArray<struct FCloudBattlePassMatchEventResult>& Match_Events, const struct FCloudBattlePassMatchResults& Match_Result, const TArray<struct FCloudBattlePassEventXp>& XpBreakdown_0, bool Was_Lonewolf_0, bool IsLegacyCard_0, const struct FCloudUserLobbyInfo& UserCloudLobbyInfo);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Construct();
	void Show_Gained_XP_PopUp();
	void Level_Up();
	void Finished_Current_Level_Progress(bool IsLevelUp);
	void Start_Playing_Level_Progresses();
	void Play_Next_Level_Progress();
	void Show_Booster_XP_PopUp();
	void Show_XP_Progress(const struct FCloudBattlePassMatchResults& Match_Results);
	void ResetXPProgressBar();
	void FillActions(TArray<struct FCloudBattlePassMatchEventResult>& Match_Events);
	void SetSeasonActive(bool Active);
	void GetAction(class FName Action_Name, int32 Amount, bool* Is_Legit, class FText* ActionName, int32* XP);
	void GetSeasonInfo(class FName Season_Name, struct FBattlePassSeason* Season_Info, bool* Found);
	void GetRelevantLevelUps(class FName Season_Name, int32 Start_Level, int32 Total_XP_0, TArray<struct FBattlePassLevel>* Level_Ups, bool* Max_Level_Reached);
	void ShowLevelUpProgress(int32 Experience_Needed);
	void Set_XP_For_Next_Level(int32 Current_XP, int32 XP_To_Next_Level, int32 Current_Level_0, bool MaxLevel);
	void Show_Rewards(TArray<struct FBattlePassLevel>& Achieved_Level_Ups);
	void Get_Remaining_Time_In_Progress(float Time_Left, int32 XP, int32 XP_Needed, float* New_Time_Left, float* Time_Clamped_XP);
	void CheckForDoubleXP_BoosterTicket(const struct FCloudUserLobbyInfo& CloudUserLobbyInfo, bool* BoosterPresent);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_RewardScreen_BattlePass_C">();
	}
	static class UUI_RewardScreen_BattlePass_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_RewardScreen_BattlePass_C>();
	}
};
static_assert(alignof(UUI_RewardScreen_BattlePass_C) == 0x000008, "Wrong alignment on UUI_RewardScreen_BattlePass_C");
static_assert(sizeof(UUI_RewardScreen_BattlePass_C) == 0x0004E0, "Wrong size on UUI_RewardScreen_BattlePass_C");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, UberGraphFrame) == 0x0002B8, "Member 'UUI_RewardScreen_BattlePass_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, LevelUp) == 0x0002C0, "Member 'UUI_RewardScreen_BattlePass_C::LevelUp' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, BoostCount) == 0x0002C8, "Member 'UUI_RewardScreen_BattlePass_C::BoostCount' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, XpCount) == 0x0002D0, "Member 'UUI_RewardScreen_BattlePass_C::XpCount' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, Actions) == 0x0002D8, "Member 'UUI_RewardScreen_BattlePass_C::Actions' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, ActionsList) == 0x0002E0, "Member 'UUI_RewardScreen_BattlePass_C::ActionsList' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, ActionsWidgetSwitcher) == 0x0002E8, "Member 'UUI_RewardScreen_BattlePass_C::ActionsWidgetSwitcher' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, AnimatedBarSizeBox) == 0x0002F0, "Member 'UUI_RewardScreen_BattlePass_C::AnimatedBarSizeBox' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, BattlePassIcon) == 0x0002F8, "Member 'UUI_RewardScreen_BattlePass_C::BattlePassIcon' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, BoostEarned) == 0x000300, "Member 'UUI_RewardScreen_BattlePass_C::BoostEarned' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, BoostText) == 0x000308, "Member 'UUI_RewardScreen_BattlePass_C::BoostText' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, BoostTextOverlay) == 0x000310, "Member 'UUI_RewardScreen_BattlePass_C::BoostTextOverlay' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, BottomPart) == 0x000318, "Member 'UUI_RewardScreen_BattlePass_C::BottomPart' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, Canvas_DoubleXP_Event) == 0x000320, "Member 'UUI_RewardScreen_BattlePass_C::Canvas_DoubleXP_Event' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, CurrentLevel) == 0x000328, "Member 'UUI_RewardScreen_BattlePass_C::CurrentLevel' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, HBox_DoubleXP_BoosterTicket) == 0x000330, "Member 'UUI_RewardScreen_BattlePass_C::HBox_DoubleXP_BoosterTicket' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, Image_6) == 0x000338, "Member 'UUI_RewardScreen_BattlePass_C::Image_6' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, Image_7) == 0x000340, "Member 'UUI_RewardScreen_BattlePass_C::Image_7' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, Image_216) == 0x000348, "Member 'UUI_RewardScreen_BattlePass_C::Image_216' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, Image_246) == 0x000350, "Member 'UUI_RewardScreen_BattlePass_C::Image_246' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, Image_391) == 0x000358, "Member 'UUI_RewardScreen_BattlePass_C::Image_391' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, Image_521) == 0x000360, "Member 'UUI_RewardScreen_BattlePass_C::Image_521' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, Image_BoosterBackground) == 0x000368, "Member 'UUI_RewardScreen_BattlePass_C::Image_BoosterBackground' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, Image_BoosterImage) == 0x000370, "Member 'UUI_RewardScreen_BattlePass_C::Image_BoosterImage' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, LevelInfo) == 0x000378, "Member 'UUI_RewardScreen_BattlePass_C::LevelInfo' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, LoneWolfOverlay) == 0x000380, "Member 'UUI_RewardScreen_BattlePass_C::LoneWolfOverlay' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, MaxLevelBarSizeBox) == 0x000388, "Member 'UUI_RewardScreen_BattlePass_C::MaxLevelBarSizeBox' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, NextLevel) == 0x000390, "Member 'UUI_RewardScreen_BattlePass_C::NextLevel' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, NoSeasonInProgress) == 0x000398, "Member 'UUI_RewardScreen_BattlePass_C::NoSeasonInProgress' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, NoXP) == 0x0003A0, "Member 'UUI_RewardScreen_BattlePass_C::NoXP' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, Overlay_BoosterIcon) == 0x0003A8, "Member 'UUI_RewardScreen_BattlePass_C::Overlay_BoosterIcon' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, ProgressBarSwitcher) == 0x0003B0, "Member 'UUI_RewardScreen_BattlePass_C::ProgressBarSwitcher' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, Text_BattlePassTitleActive) == 0x0003B8, "Member 'UUI_RewardScreen_BattlePass_C::Text_BattlePassTitleActive' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, Text_DoubleXP_Event_RemainingTime) == 0x0003C0, "Member 'UUI_RewardScreen_BattlePass_C::Text_DoubleXP_Event_RemainingTime' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, TopPart) == 0x0003C8, "Member 'UUI_RewardScreen_BattlePass_C::TopPart' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, TopPartWidgetSwitcher_0) == 0x0003D0, "Member 'UUI_RewardScreen_BattlePass_C::TopPartWidgetSwitcher_0' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, UI_BattlePassProgressBar) == 0x0003D8, "Member 'UUI_RewardScreen_BattlePass_C::UI_BattlePassProgressBar' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, XpEarned) == 0x0003E0, "Member 'UUI_RewardScreen_BattlePass_C::XpEarned' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, XPToNextLevel) == 0x0003E8, "Member 'UUI_RewardScreen_BattlePass_C::XPToNextLevel' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, EventListItems) == 0x0003F0, "Member 'UUI_RewardScreen_BattlePass_C::EventListItems' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, XP_Visualisation_in_progress) == 0x000400, "Member 'UUI_RewardScreen_BattlePass_C::XP_Visualisation_in_progress' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, Shown_Match_Results) == 0x000404, "Member 'UUI_RewardScreen_BattlePass_C::Shown_Match_Results' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, Current_Accumulated_XP) == 0x000420, "Member 'UUI_RewardScreen_BattlePass_C::Current_Accumulated_XP' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, Current_Level) == 0x000424, "Member 'UUI_RewardScreen_BattlePass_C::Current_Level' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, Remaining_XP_after_Level_ups) == 0x000428, "Member 'UUI_RewardScreen_BattlePass_C::Remaining_XP_after_Level_ups' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, Relevant_Level_Ups) == 0x000430, "Member 'UUI_RewardScreen_BattlePass_C::Relevant_Level_Ups' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, Remaining_XP_current) == 0x000440, "Member 'UUI_RewardScreen_BattlePass_C::Remaining_XP_current' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, Remaining_Gained_Base_XP) == 0x000444, "Member 'UUI_RewardScreen_BattlePass_C::Remaining_Gained_Base_XP' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, Remaining_Gained_Bonus_XP) == 0x000448, "Member 'UUI_RewardScreen_BattlePass_C::Remaining_Gained_Bonus_XP' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, PlayedLevelIndex) == 0x00044C, "Member 'UUI_RewardScreen_BattlePass_C::PlayedLevelIndex' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, XP_Needed_for_Current_Level) == 0x000450, "Member 'UUI_RewardScreen_BattlePass_C::XP_Needed_for_Current_Level' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, Total_XP) == 0x000454, "Member 'UUI_RewardScreen_BattlePass_C::Total_XP' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, RewardScreenLevelUp) == 0x000458, "Member 'UUI_RewardScreen_BattlePass_C::RewardScreenLevelUp' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, Achieved_Levels) == 0x000460, "Member 'UUI_RewardScreen_BattlePass_C::Achieved_Levels' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, LeveledUp) == 0x000470, "Member 'UUI_RewardScreen_BattlePass_C::LeveledUp' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, MaxLevelInCurrentSeason) == 0x000474, "Member 'UUI_RewardScreen_BattlePass_C::MaxLevelInCurrentSeason' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, Gained_XP_PopUp_Shown) == 0x000478, "Member 'UUI_RewardScreen_BattlePass_C::Gained_XP_PopUp_Shown' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, Boosted_XP_PopUp_Shown) == 0x000479, "Member 'UUI_RewardScreen_BattlePass_C::Boosted_XP_PopUp_Shown' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, Temp_XP_Needed_For_Current_Level) == 0x00047C, "Member 'UUI_RewardScreen_BattlePass_C::Temp_XP_Needed_For_Current_Level' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, Was_Lonewolf) == 0x000480, "Member 'UUI_RewardScreen_BattlePass_C::Was_Lonewolf' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, BattlePassSystem) == 0x000488, "Member 'UUI_RewardScreen_BattlePass_C::BattlePassSystem' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, DoubleXP_Event_Active) == 0x000490, "Member 'UUI_RewardScreen_BattlePass_C::DoubleXP_Event_Active' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, DoubleXP_BoosterTicketUsed) == 0x000491, "Member 'UUI_RewardScreen_BattlePass_C::DoubleXP_BoosterTicketUsed' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, MatchResult) == 0x000494, "Member 'UUI_RewardScreen_BattlePass_C::MatchResult' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, IsLegacyCard) == 0x0004B0, "Member 'UUI_RewardScreen_BattlePass_C::IsLegacyCard' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, SeasonName) == 0x0004B4, "Member 'UUI_RewardScreen_BattlePass_C::SeasonName' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, MatchEvents) == 0x0004C0, "Member 'UUI_RewardScreen_BattlePass_C::MatchEvents' has a wrong offset!");
static_assert(offsetof(UUI_RewardScreen_BattlePass_C, XpBreakdown) == 0x0004D0, "Member 'UUI_RewardScreen_BattlePass_C::XpBreakdown' has a wrong offset!");

}

