#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BaseGrenade_Consumable

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_BaseGrenade_Consumable.BP_BaseGrenade_Consumable_C.ExecuteUbergraph_BP_BaseGrenade_Consumable
// 0x0060 (0x0060 - 0x0000)
struct BP_BaseGrenade_Consumable_C_ExecuteUbergraph_BP_BaseGrenade_Consumable final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_ShowArc;                              // 0x001D(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanCharacter*                        K2Node_DynamicCast_AsHuman_Character;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineMeshComponent*                   CallFunc_Array_Get_Item_1;                         // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BaseGrenade_Consumable_C_ExecuteUbergraph_BP_BaseGrenade_Consumable) == 0x000008, "Wrong alignment on BP_BaseGrenade_Consumable_C_ExecuteUbergraph_BP_BaseGrenade_Consumable");
static_assert(sizeof(BP_BaseGrenade_Consumable_C_ExecuteUbergraph_BP_BaseGrenade_Consumable) == 0x000060, "Wrong size on BP_BaseGrenade_Consumable_C_ExecuteUbergraph_BP_BaseGrenade_Consumable");
static_assert(offsetof(BP_BaseGrenade_Consumable_C_ExecuteUbergraph_BP_BaseGrenade_Consumable, EntryPoint) == 0x000000, "Member 'BP_BaseGrenade_Consumable_C_ExecuteUbergraph_BP_BaseGrenade_Consumable::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BaseGrenade_Consumable_C_ExecuteUbergraph_BP_BaseGrenade_Consumable, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_BaseGrenade_Consumable_C_ExecuteUbergraph_BP_BaseGrenade_Consumable::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BaseGrenade_Consumable_C_ExecuteUbergraph_BP_BaseGrenade_Consumable, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'BP_BaseGrenade_Consumable_C_ExecuteUbergraph_BP_BaseGrenade_Consumable::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseGrenade_Consumable_C_ExecuteUbergraph_BP_BaseGrenade_Consumable, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_BaseGrenade_Consumable_C_ExecuteUbergraph_BP_BaseGrenade_Consumable::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BaseGrenade_Consumable_C_ExecuteUbergraph_BP_BaseGrenade_Consumable, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000010, "Member 'BP_BaseGrenade_Consumable_C_ExecuteUbergraph_BP_BaseGrenade_Consumable::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseGrenade_Consumable_C_ExecuteUbergraph_BP_BaseGrenade_Consumable, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_BaseGrenade_Consumable_C_ExecuteUbergraph_BP_BaseGrenade_Consumable::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseGrenade_Consumable_C_ExecuteUbergraph_BP_BaseGrenade_Consumable, Temp_int_Array_Index_Variable_1) == 0x000018, "Member 'BP_BaseGrenade_Consumable_C_ExecuteUbergraph_BP_BaseGrenade_Consumable::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BaseGrenade_Consumable_C_ExecuteUbergraph_BP_BaseGrenade_Consumable, CallFunc_IsDedicatedServer_ReturnValue) == 0x00001C, "Member 'BP_BaseGrenade_Consumable_C_ExecuteUbergraph_BP_BaseGrenade_Consumable::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseGrenade_Consumable_C_ExecuteUbergraph_BP_BaseGrenade_Consumable, K2Node_Event_ShowArc) == 0x00001D, "Member 'BP_BaseGrenade_Consumable_C_ExecuteUbergraph_BP_BaseGrenade_Consumable::K2Node_Event_ShowArc' has a wrong offset!");
static_assert(offsetof(BP_BaseGrenade_Consumable_C_ExecuteUbergraph_BP_BaseGrenade_Consumable, CallFunc_GetOwner_ReturnValue) == 0x000020, "Member 'BP_BaseGrenade_Consumable_C_ExecuteUbergraph_BP_BaseGrenade_Consumable::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseGrenade_Consumable_C_ExecuteUbergraph_BP_BaseGrenade_Consumable, K2Node_DynamicCast_AsHuman_Character) == 0x000028, "Member 'BP_BaseGrenade_Consumable_C_ExecuteUbergraph_BP_BaseGrenade_Consumable::K2Node_DynamicCast_AsHuman_Character' has a wrong offset!");
static_assert(offsetof(BP_BaseGrenade_Consumable_C_ExecuteUbergraph_BP_BaseGrenade_Consumable, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_BaseGrenade_Consumable_C_ExecuteUbergraph_BP_BaseGrenade_Consumable::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BaseGrenade_Consumable_C_ExecuteUbergraph_BP_BaseGrenade_Consumable, Temp_int_Loop_Counter_Variable_1) == 0x000034, "Member 'BP_BaseGrenade_Consumable_C_ExecuteUbergraph_BP_BaseGrenade_Consumable::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BaseGrenade_Consumable_C_ExecuteUbergraph_BP_BaseGrenade_Consumable, CallFunc_Add_IntInt_ReturnValue_1) == 0x000038, "Member 'BP_BaseGrenade_Consumable_C_ExecuteUbergraph_BP_BaseGrenade_Consumable::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseGrenade_Consumable_C_ExecuteUbergraph_BP_BaseGrenade_Consumable, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_BaseGrenade_Consumable_C_ExecuteUbergraph_BP_BaseGrenade_Consumable::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BaseGrenade_Consumable_C_ExecuteUbergraph_BP_BaseGrenade_Consumable, CallFunc_Array_Get_Item_1) == 0x000048, "Member 'BP_BaseGrenade_Consumable_C_ExecuteUbergraph_BP_BaseGrenade_Consumable::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_BaseGrenade_Consumable_C_ExecuteUbergraph_BP_BaseGrenade_Consumable, CallFunc_Array_Length_ReturnValue_1) == 0x000050, "Member 'BP_BaseGrenade_Consumable_C_ExecuteUbergraph_BP_BaseGrenade_Consumable::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseGrenade_Consumable_C_ExecuteUbergraph_BP_BaseGrenade_Consumable, CallFunc_Array_Length_ReturnValue_2) == 0x000054, "Member 'BP_BaseGrenade_Consumable_C_ExecuteUbergraph_BP_BaseGrenade_Consumable::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BaseGrenade_Consumable_C_ExecuteUbergraph_BP_BaseGrenade_Consumable, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'BP_BaseGrenade_Consumable_C_ExecuteUbergraph_BP_BaseGrenade_Consumable::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseGrenade_Consumable_C_ExecuteUbergraph_BP_BaseGrenade_Consumable, CallFunc_Less_IntInt_ReturnValue_1) == 0x000059, "Member 'BP_BaseGrenade_Consumable_C_ExecuteUbergraph_BP_BaseGrenade_Consumable::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_BaseGrenade_Consumable.BP_BaseGrenade_Consumable_C.OnAimingChanged
// 0x0001 (0x0001 - 0x0000)
struct BP_BaseGrenade_Consumable_C_OnAimingChanged final
{
public:
	bool                                          ShowArc;                                           // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BaseGrenade_Consumable_C_OnAimingChanged) == 0x000001, "Wrong alignment on BP_BaseGrenade_Consumable_C_OnAimingChanged");
static_assert(sizeof(BP_BaseGrenade_Consumable_C_OnAimingChanged) == 0x000001, "Wrong size on BP_BaseGrenade_Consumable_C_OnAimingChanged");
static_assert(offsetof(BP_BaseGrenade_Consumable_C_OnAimingChanged, ShowArc) == 0x000000, "Member 'BP_BaseGrenade_Consumable_C_OnAimingChanged::ShowArc' has a wrong offset!");

// Function BP_BaseGrenade_Consumable.BP_BaseGrenade_Consumable_C.Calculate Direction BP
// 0x0060 (0x0060 - 0x0000)
struct BP_BaseGrenade_Consumable_C_Calculate_Direction_BP final
{
public:
	class AHumanCharacter*                        Owner_0;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Impuls;                                            // 0x0008(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerCharacter*                  K2Node_DynamicCast_AsHuman_Player_Character;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseGrenade_Consumable_C_Calculate_Direction_BP) == 0x000008, "Wrong alignment on BP_BaseGrenade_Consumable_C_Calculate_Direction_BP");
static_assert(sizeof(BP_BaseGrenade_Consumable_C_Calculate_Direction_BP) == 0x000060, "Wrong size on BP_BaseGrenade_Consumable_C_Calculate_Direction_BP");
static_assert(offsetof(BP_BaseGrenade_Consumable_C_Calculate_Direction_BP, Owner_0) == 0x000000, "Member 'BP_BaseGrenade_Consumable_C_Calculate_Direction_BP::Owner_0' has a wrong offset!");
static_assert(offsetof(BP_BaseGrenade_Consumable_C_Calculate_Direction_BP, Impuls) == 0x000008, "Member 'BP_BaseGrenade_Consumable_C_Calculate_Direction_BP::Impuls' has a wrong offset!");
static_assert(offsetof(BP_BaseGrenade_Consumable_C_Calculate_Direction_BP, K2Node_DynamicCast_AsHuman_Player_Character) == 0x000018, "Member 'BP_BaseGrenade_Consumable_C_Calculate_Direction_BP::K2Node_DynamicCast_AsHuman_Player_Character' has a wrong offset!");
static_assert(offsetof(BP_BaseGrenade_Consumable_C_Calculate_Direction_BP, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_BaseGrenade_Consumable_C_Calculate_Direction_BP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BaseGrenade_Consumable_C_Calculate_Direction_BP, CallFunc_GetForwardVector_ReturnValue) == 0x000024, "Member 'BP_BaseGrenade_Consumable_C_Calculate_Direction_BP::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseGrenade_Consumable_C_Calculate_Direction_BP, CallFunc_GetUpVector_ReturnValue) == 0x000030, "Member 'BP_BaseGrenade_Consumable_C_Calculate_Direction_BP::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseGrenade_Consumable_C_Calculate_Direction_BP, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00003C, "Member 'BP_BaseGrenade_Consumable_C_Calculate_Direction_BP::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseGrenade_Consumable_C_Calculate_Direction_BP, CallFunc_Add_VectorVector_ReturnValue) == 0x000048, "Member 'BP_BaseGrenade_Consumable_C_Calculate_Direction_BP::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseGrenade_Consumable_C_Calculate_Direction_BP, CallFunc_Normal_ReturnValue) == 0x000054, "Member 'BP_BaseGrenade_Consumable_C_Calculate_Direction_BP::CallFunc_Normal_ReturnValue' has a wrong offset!");

// Function BP_BaseGrenade_Consumable.BP_BaseGrenade_Consumable_C.Calculate Location BP
// 0x0048 (0x0048 - 0x0000)
struct BP_BaseGrenade_Consumable_C_Calculate_Location_BP final
{
public:
	class AHumanCharacter*                        Owner_0;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseGrenade_Consumable_C_Calculate_Location_BP) == 0x000008, "Wrong alignment on BP_BaseGrenade_Consumable_C_Calculate_Location_BP");
static_assert(sizeof(BP_BaseGrenade_Consumable_C_Calculate_Location_BP) == 0x000048, "Wrong size on BP_BaseGrenade_Consumable_C_Calculate_Location_BP");
static_assert(offsetof(BP_BaseGrenade_Consumable_C_Calculate_Location_BP, Owner_0) == 0x000000, "Member 'BP_BaseGrenade_Consumable_C_Calculate_Location_BP::Owner_0' has a wrong offset!");
static_assert(offsetof(BP_BaseGrenade_Consumable_C_Calculate_Location_BP, Location) == 0x000008, "Member 'BP_BaseGrenade_Consumable_C_Calculate_Location_BP::Location' has a wrong offset!");
static_assert(offsetof(BP_BaseGrenade_Consumable_C_Calculate_Location_BP, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000014, "Member 'BP_BaseGrenade_Consumable_C_Calculate_Location_BP::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseGrenade_Consumable_C_Calculate_Location_BP, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'BP_BaseGrenade_Consumable_C_Calculate_Location_BP::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseGrenade_Consumable_C_Calculate_Location_BP, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x00002C, "Member 'BP_BaseGrenade_Consumable_C_Calculate_Location_BP::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseGrenade_Consumable_C_Calculate_Location_BP, CallFunc_Add_VectorVector_ReturnValue) == 0x000038, "Member 'BP_BaseGrenade_Consumable_C_Calculate_Location_BP::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_BaseGrenade_Consumable.BP_BaseGrenade_Consumable_C.GetCustomGripAnimation
// 0x0028 (0x0028 - 0x0000)
struct BP_BaseGrenade_Consumable_C_GetCustomGripAnimation final
{
public:
	class UAnimSequence*                          HandAnim;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Valid;                                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftReference_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          K2Node_DynamicCast_AsAnim_Sequence;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BaseGrenade_Consumable_C_GetCustomGripAnimation) == 0x000008, "Wrong alignment on BP_BaseGrenade_Consumable_C_GetCustomGripAnimation");
static_assert(sizeof(BP_BaseGrenade_Consumable_C_GetCustomGripAnimation) == 0x000028, "Wrong size on BP_BaseGrenade_Consumable_C_GetCustomGripAnimation");
static_assert(offsetof(BP_BaseGrenade_Consumable_C_GetCustomGripAnimation, HandAnim) == 0x000000, "Member 'BP_BaseGrenade_Consumable_C_GetCustomGripAnimation::HandAnim' has a wrong offset!");
static_assert(offsetof(BP_BaseGrenade_Consumable_C_GetCustomGripAnimation, Valid) == 0x000008, "Member 'BP_BaseGrenade_Consumable_C_GetCustomGripAnimation::Valid' has a wrong offset!");
static_assert(offsetof(BP_BaseGrenade_Consumable_C_GetCustomGripAnimation, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000009, "Member 'BP_BaseGrenade_Consumable_C_GetCustomGripAnimation::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseGrenade_Consumable_C_GetCustomGripAnimation, CallFunc_LoadSoftReference_ReturnValue) == 0x000010, "Member 'BP_BaseGrenade_Consumable_C_GetCustomGripAnimation::CallFunc_LoadSoftReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseGrenade_Consumable_C_GetCustomGripAnimation, K2Node_DynamicCast_AsAnim_Sequence) == 0x000018, "Member 'BP_BaseGrenade_Consumable_C_GetCustomGripAnimation::K2Node_DynamicCast_AsAnim_Sequence' has a wrong offset!");
static_assert(offsetof(BP_BaseGrenade_Consumable_C_GetCustomGripAnimation, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_BaseGrenade_Consumable_C_GetCustomGripAnimation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BaseGrenade_Consumable_C_GetCustomGripAnimation, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_BaseGrenade_Consumable_C_GetCustomGripAnimation::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

