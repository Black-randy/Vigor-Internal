#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LeaderboardSystemMonitor

#include "Basic.hpp"

#include "Flame_classes.hpp"
#include "S_LeaderboardMonitorRule_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_LeaderboardSystemMonitor.BP_LeaderboardSystemMonitor_C
// 0x0028 (0x0070 - 0x0048)
class UBP_LeaderboardSystemMonitor_C final : public ULeaderboardSystemMonitor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0048(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TArray<struct FS_LeaderboardMonitorRule>      ReadRules;                                         // 0x0050(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FS_LeaderboardMonitorRule>      WriteRules;                                        // 0x0060(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_BP_LeaderboardSystemMonitor(int32 EntryPoint);
	void OnLeaderboardWriteCall(class FName BoardName, int32 PlayerValue);
	void OnLeaderboardReadCall(const struct FLeaderboardReadContext& BoardContext);
	void CountReadUntilTime(struct FTimespan& TimeWindow, int32* CountedItems);
	void CheckReadRules();
	void CountWriteUntilTime(struct FTimespan& TimeWindow, int32* CountedItems);
	void CheckWriteRules();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_LeaderboardSystemMonitor_C">();
	}
	static class UBP_LeaderboardSystemMonitor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_LeaderboardSystemMonitor_C>();
	}
};
static_assert(alignof(UBP_LeaderboardSystemMonitor_C) == 0x000008, "Wrong alignment on UBP_LeaderboardSystemMonitor_C");
static_assert(sizeof(UBP_LeaderboardSystemMonitor_C) == 0x000070, "Wrong size on UBP_LeaderboardSystemMonitor_C");
static_assert(offsetof(UBP_LeaderboardSystemMonitor_C, UberGraphFrame) == 0x000048, "Member 'UBP_LeaderboardSystemMonitor_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_LeaderboardSystemMonitor_C, ReadRules) == 0x000050, "Member 'UBP_LeaderboardSystemMonitor_C::ReadRules' has a wrong offset!");
static_assert(offsetof(UBP_LeaderboardSystemMonitor_C, WriteRules) == 0x000060, "Member 'UBP_LeaderboardSystemMonitor_C::WriteRules' has a wrong offset!");

}

