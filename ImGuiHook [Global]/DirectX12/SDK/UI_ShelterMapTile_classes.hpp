#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_ShelterMapTile

#include "Basic.hpp"

#include "Flame_structs.hpp"
#include "Flame_classes.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_ShelterMapTile.UI_ShelterMapTile_C
// 0x0090 (0x05B0 - 0x0520)
class UUI_ShelterMapTile_C final : public UShelterMapTile
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0520(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       AnimArrows;                                        // 0x0528(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       RotateCW;                                          // 0x0530(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBox*                         HBox_DoubleParts;                                  // 0x0538(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HBox_DoubleResources;                              // 0x0540(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HBox_DoubleXP;                                     // 0x0548(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_3;                                           // 0x0550(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               LockedOverlay;                                     // 0x0558(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                MouseHoverer;                                      // 0x0560(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               OnboardingOverlay;                                 // 0x0568(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_MapLock;                                   // 0x0570(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameTextBlock*                        Text_DoubleParts_Count;                            // 0x0578(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameTextBlock*                        Text_DoubleResources_Count;                        // 0x0580(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameTextBlock*                        Text_DoubleXP_State;                               // 0x0588(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameTextBlock*                        Text_RemainingEncounters;                          // 0x0590(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           TileCanvas;                                        // 0x0598(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VBox_Labels;                                       // 0x05A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IsCurrentlyFocused;                                // 0x05A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsMouseHover;                                      // 0x05A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_UI_ShelterMapTile(int32 EntryPoint);
	void RemoveMaptileFocus();
	void BndEvt__ActionMoreInfo_K2Node_ComponentBoundEvent_2_OnActionHoldEvent__DelegateSignature();
	void OnTileInitialized();
	void BndEvt__UI_ShelterMapTile_MouseHoverer_K2Node_ComponentBoundEvent_3_OnButtonHoverEvent__DelegateSignature(class UButton* Sender);
	void BndEvt__UI_ShelterMapTile_MouseHoverer_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature(class UButton* Sender);
	void BndEvt__UI_ShelterMapTile_Button_0_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature(class UButton* Sender);
	void SetLockOverlayVisibility(bool NewVisibility);
	void UnlockTile();
	void LockTile();
	void UpdateRemainingTime();
	struct FEventReply OnFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent);
	void Update_Personal_Ticket_States();
	struct FEventReply OnMouseButtonDoubleClick(const struct FGeometry& InMyGeometry, const struct FPointerEvent& InMouseEvent);
	struct FEventReply OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void ManualMouseDown();
	void CanFocusTile(bool* CanFocus);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_ShelterMapTile_C">();
	}
	static class UUI_ShelterMapTile_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_ShelterMapTile_C>();
	}
};
static_assert(alignof(UUI_ShelterMapTile_C) == 0x000008, "Wrong alignment on UUI_ShelterMapTile_C");
static_assert(sizeof(UUI_ShelterMapTile_C) == 0x0005B0, "Wrong size on UUI_ShelterMapTile_C");
static_assert(offsetof(UUI_ShelterMapTile_C, UberGraphFrame) == 0x000520, "Member 'UUI_ShelterMapTile_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_ShelterMapTile_C, AnimArrows) == 0x000528, "Member 'UUI_ShelterMapTile_C::AnimArrows' has a wrong offset!");
static_assert(offsetof(UUI_ShelterMapTile_C, RotateCW) == 0x000530, "Member 'UUI_ShelterMapTile_C::RotateCW' has a wrong offset!");
static_assert(offsetof(UUI_ShelterMapTile_C, HBox_DoubleParts) == 0x000538, "Member 'UUI_ShelterMapTile_C::HBox_DoubleParts' has a wrong offset!");
static_assert(offsetof(UUI_ShelterMapTile_C, HBox_DoubleResources) == 0x000540, "Member 'UUI_ShelterMapTile_C::HBox_DoubleResources' has a wrong offset!");
static_assert(offsetof(UUI_ShelterMapTile_C, HBox_DoubleXP) == 0x000548, "Member 'UUI_ShelterMapTile_C::HBox_DoubleXP' has a wrong offset!");
static_assert(offsetof(UUI_ShelterMapTile_C, Image_3) == 0x000550, "Member 'UUI_ShelterMapTile_C::Image_3' has a wrong offset!");
static_assert(offsetof(UUI_ShelterMapTile_C, LockedOverlay) == 0x000558, "Member 'UUI_ShelterMapTile_C::LockedOverlay' has a wrong offset!");
static_assert(offsetof(UUI_ShelterMapTile_C, MouseHoverer) == 0x000560, "Member 'UUI_ShelterMapTile_C::MouseHoverer' has a wrong offset!");
static_assert(offsetof(UUI_ShelterMapTile_C, OnboardingOverlay) == 0x000568, "Member 'UUI_ShelterMapTile_C::OnboardingOverlay' has a wrong offset!");
static_assert(offsetof(UUI_ShelterMapTile_C, Overlay_MapLock) == 0x000570, "Member 'UUI_ShelterMapTile_C::Overlay_MapLock' has a wrong offset!");
static_assert(offsetof(UUI_ShelterMapTile_C, Text_DoubleParts_Count) == 0x000578, "Member 'UUI_ShelterMapTile_C::Text_DoubleParts_Count' has a wrong offset!");
static_assert(offsetof(UUI_ShelterMapTile_C, Text_DoubleResources_Count) == 0x000580, "Member 'UUI_ShelterMapTile_C::Text_DoubleResources_Count' has a wrong offset!");
static_assert(offsetof(UUI_ShelterMapTile_C, Text_DoubleXP_State) == 0x000588, "Member 'UUI_ShelterMapTile_C::Text_DoubleXP_State' has a wrong offset!");
static_assert(offsetof(UUI_ShelterMapTile_C, Text_RemainingEncounters) == 0x000590, "Member 'UUI_ShelterMapTile_C::Text_RemainingEncounters' has a wrong offset!");
static_assert(offsetof(UUI_ShelterMapTile_C, TileCanvas) == 0x000598, "Member 'UUI_ShelterMapTile_C::TileCanvas' has a wrong offset!");
static_assert(offsetof(UUI_ShelterMapTile_C, VBox_Labels) == 0x0005A0, "Member 'UUI_ShelterMapTile_C::VBox_Labels' has a wrong offset!");
static_assert(offsetof(UUI_ShelterMapTile_C, IsCurrentlyFocused) == 0x0005A8, "Member 'UUI_ShelterMapTile_C::IsCurrentlyFocused' has a wrong offset!");
static_assert(offsetof(UUI_ShelterMapTile_C, IsMouseHover) == 0x0005A9, "Member 'UUI_ShelterMapTile_C::IsMouseHover' has a wrong offset!");

}

