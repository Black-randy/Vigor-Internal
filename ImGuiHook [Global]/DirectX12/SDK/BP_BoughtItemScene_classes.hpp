#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BoughtItemScene

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BoughtItemScene.BP_BoughtItemScene_C
// 0x0100 (0x0320 - 0x0220)
class ABP_BoughtItemScene_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_ItemTransform_BoughtScene_C*        BP_ItemTransform_BoughtScene;                      // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube;                                              // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    RimLight;                                          // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight;                                         // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    FillLight;                                         // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   GlowyPlane;                                        // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   PlaneUIBackground;                                 // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_ItemRarityHighlight;                            // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        BuyEfect;                                          // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Center_Bar;                                        // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       Camera;                                            // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Root;                                              // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ABP_ItemPreview_C*                      ItemPreview;                                       // 0x0288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AEmitter*                               ImplosionParticle;                                 // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanRotate;                                         // 0x0298(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          WeaponSkinHack;                                    // 0x0299(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29A[0x2];                                      // 0x029A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DriveInTime;                                       // 0x029C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PremiumPackShowcase;                               // 0x02A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 ItemClassForEffects;                               // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Start_Y_Offset;                                    // 0x02B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B4[0x4];                                      // 0x02B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           MovingInTimer;                                     // 0x02B8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           RotationTimer;                                     // 0x02C0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         MiddleEffectTime;                                  // 0x02C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CC[0x4];                                      // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFlameWidget*                           SceneUI;                                           // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D8[0x8];                                      // 0x02D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             InitialCameraTransform;                            // 0x02E0(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         DeltaTimeMove;                                     // 0x0310(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OriignalCameraPosition;                            // 0x0314(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_BoughtItemScene(int32 EntryPoint);
	void OnMoveInFinished();
	void OnAutorotationTimer();
	void StopMoving();
	void MoveOut();
	void Move();
	void StartEffectMiddle();
	void MoveIn();
	void ReceiveBeginPlay();
	void StartRotation();
	void PreviewItem(class UClass* ItemClass, bool PlayMoveInAnimation, int32 Optional_PreviewParam);
	void ShowItem(class UClass* Item, int32 Optional_PreviewParam);
	void Transform_Item(class UClass* Item, int32 Optional_Preview_Parameter);
	void HandleRarity(class UClass* Item);
	void ActivateParticles(class UClass* InputPin, const struct FVector& CameraLocation);
	void StartMiddleEffects(class UClass* Item_class);
	void InitCameraPosition();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BoughtItemScene_C">();
	}
	static class ABP_BoughtItemScene_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_BoughtItemScene_C>();
	}
};
static_assert(alignof(ABP_BoughtItemScene_C) == 0x000010, "Wrong alignment on ABP_BoughtItemScene_C");
static_assert(sizeof(ABP_BoughtItemScene_C) == 0x000320, "Wrong size on ABP_BoughtItemScene_C");
static_assert(offsetof(ABP_BoughtItemScene_C, UberGraphFrame) == 0x000220, "Member 'ABP_BoughtItemScene_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_BoughtItemScene_C, BP_ItemTransform_BoughtScene) == 0x000228, "Member 'ABP_BoughtItemScene_C::BP_ItemTransform_BoughtScene' has a wrong offset!");
static_assert(offsetof(ABP_BoughtItemScene_C, Cube) == 0x000230, "Member 'ABP_BoughtItemScene_C::Cube' has a wrong offset!");
static_assert(offsetof(ABP_BoughtItemScene_C, RimLight) == 0x000238, "Member 'ABP_BoughtItemScene_C::RimLight' has a wrong offset!");
static_assert(offsetof(ABP_BoughtItemScene_C, SpotLight) == 0x000240, "Member 'ABP_BoughtItemScene_C::SpotLight' has a wrong offset!");
static_assert(offsetof(ABP_BoughtItemScene_C, FillLight) == 0x000248, "Member 'ABP_BoughtItemScene_C::FillLight' has a wrong offset!");
static_assert(offsetof(ABP_BoughtItemScene_C, GlowyPlane) == 0x000250, "Member 'ABP_BoughtItemScene_C::GlowyPlane' has a wrong offset!");
static_assert(offsetof(ABP_BoughtItemScene_C, PlaneUIBackground) == 0x000258, "Member 'ABP_BoughtItemScene_C::PlaneUIBackground' has a wrong offset!");
static_assert(offsetof(ABP_BoughtItemScene_C, PS_ItemRarityHighlight) == 0x000260, "Member 'ABP_BoughtItemScene_C::PS_ItemRarityHighlight' has a wrong offset!");
static_assert(offsetof(ABP_BoughtItemScene_C, BuyEfect) == 0x000268, "Member 'ABP_BoughtItemScene_C::BuyEfect' has a wrong offset!");
static_assert(offsetof(ABP_BoughtItemScene_C, Center_Bar) == 0x000270, "Member 'ABP_BoughtItemScene_C::Center_Bar' has a wrong offset!");
static_assert(offsetof(ABP_BoughtItemScene_C, Camera) == 0x000278, "Member 'ABP_BoughtItemScene_C::Camera' has a wrong offset!");
static_assert(offsetof(ABP_BoughtItemScene_C, Root) == 0x000280, "Member 'ABP_BoughtItemScene_C::Root' has a wrong offset!");
static_assert(offsetof(ABP_BoughtItemScene_C, ItemPreview) == 0x000288, "Member 'ABP_BoughtItemScene_C::ItemPreview' has a wrong offset!");
static_assert(offsetof(ABP_BoughtItemScene_C, ImplosionParticle) == 0x000290, "Member 'ABP_BoughtItemScene_C::ImplosionParticle' has a wrong offset!");
static_assert(offsetof(ABP_BoughtItemScene_C, CanRotate) == 0x000298, "Member 'ABP_BoughtItemScene_C::CanRotate' has a wrong offset!");
static_assert(offsetof(ABP_BoughtItemScene_C, WeaponSkinHack) == 0x000299, "Member 'ABP_BoughtItemScene_C::WeaponSkinHack' has a wrong offset!");
static_assert(offsetof(ABP_BoughtItemScene_C, DriveInTime) == 0x00029C, "Member 'ABP_BoughtItemScene_C::DriveInTime' has a wrong offset!");
static_assert(offsetof(ABP_BoughtItemScene_C, PremiumPackShowcase) == 0x0002A0, "Member 'ABP_BoughtItemScene_C::PremiumPackShowcase' has a wrong offset!");
static_assert(offsetof(ABP_BoughtItemScene_C, ItemClassForEffects) == 0x0002A8, "Member 'ABP_BoughtItemScene_C::ItemClassForEffects' has a wrong offset!");
static_assert(offsetof(ABP_BoughtItemScene_C, Start_Y_Offset) == 0x0002B0, "Member 'ABP_BoughtItemScene_C::Start_Y_Offset' has a wrong offset!");
static_assert(offsetof(ABP_BoughtItemScene_C, MovingInTimer) == 0x0002B8, "Member 'ABP_BoughtItemScene_C::MovingInTimer' has a wrong offset!");
static_assert(offsetof(ABP_BoughtItemScene_C, RotationTimer) == 0x0002C0, "Member 'ABP_BoughtItemScene_C::RotationTimer' has a wrong offset!");
static_assert(offsetof(ABP_BoughtItemScene_C, MiddleEffectTime) == 0x0002C8, "Member 'ABP_BoughtItemScene_C::MiddleEffectTime' has a wrong offset!");
static_assert(offsetof(ABP_BoughtItemScene_C, SceneUI) == 0x0002D0, "Member 'ABP_BoughtItemScene_C::SceneUI' has a wrong offset!");
static_assert(offsetof(ABP_BoughtItemScene_C, InitialCameraTransform) == 0x0002E0, "Member 'ABP_BoughtItemScene_C::InitialCameraTransform' has a wrong offset!");
static_assert(offsetof(ABP_BoughtItemScene_C, DeltaTimeMove) == 0x000310, "Member 'ABP_BoughtItemScene_C::DeltaTimeMove' has a wrong offset!");
static_assert(offsetof(ABP_BoughtItemScene_C, OriignalCameraPosition) == 0x000314, "Member 'ABP_BoughtItemScene_C::OriignalCameraPosition' has a wrong offset!");

}

