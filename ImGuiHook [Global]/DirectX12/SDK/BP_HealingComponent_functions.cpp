#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HealingComponent

#include "Basic.hpp"

#include "BP_HealingComponent_classes.hpp"
#include "BP_HealingComponent_parameters.hpp"


namespace SDK
{

// Function BP_HealingComponent.BP_HealingComponent_C.ExecuteUbergraph_BP_HealingComponent
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HealingComponent_C::ExecuteUbergraph_BP_HealingComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HealingComponent_C", "ExecuteUbergraph_BP_HealingComponent");

	Params::BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HealingComponent.BP_HealingComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_HealingComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HealingComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HealingComponent.BP_HealingComponent_C.UpdateStatusOnClient
// (BlueprintCallable, BlueprintEvent)

void UBP_HealingComponent_C::UpdateStatusOnClient()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HealingComponent_C", "UpdateStatusOnClient");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HealingComponent.BP_HealingComponent_C.OwningClientCall HealedAmount
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Amount                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HealingComponent_C::OwningClientCall_HealedAmount(float Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HealingComponent_C", "OwningClientCall HealedAmount");

	Params::BP_HealingComponent_C_OwningClientCall_HealedAmount Parms{};

	Parms.Amount = Amount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HealingComponent.BP_HealingComponent_C.GetHealthStatus
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TrueHealthFractionInit                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TempHealthFractionInit                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ExpectedHealing                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HealingComponent_C::GetHealthStatus(float DeltaTime, float* TrueHealthFractionInit, float* TempHealthFractionInit, float* ExpectedHealing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HealingComponent_C", "GetHealthStatus");

	Params::BP_HealingComponent_C_GetHealthStatus Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);

	if (TrueHealthFractionInit != nullptr)
		*TrueHealthFractionInit = Parms.TrueHealthFractionInit;

	if (TempHealthFractionInit != nullptr)
		*TempHealthFractionInit = Parms.TempHealthFractionInit;

	if (ExpectedHealing != nullptr)
		*ExpectedHealing = Parms.ExpectedHealing;
}


// Function BP_HealingComponent.BP_HealingComponent_C.GetHealthComponent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UHealthComponent*                 HealthComponent_0                                      (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HealingComponent_C::GetHealthComponent(class UHealthComponent** HealthComponent_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HealingComponent_C", "GetHealthComponent");

	Params::BP_HealingComponent_C_GetHealthComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (HealthComponent_0 != nullptr)
		*HealthComponent_0 = Parms.HealthComponent_0;
}


// Function BP_HealingComponent.BP_HealingComponent_C.AddHeal
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Amount                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EHealthType                             HealthType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HealingComponent_C::AddHeal(const float Amount, EHealthType HealthType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HealingComponent_C", "AddHeal");

	Params::BP_HealingComponent_C_AddHeal Parms{};

	Parms.Amount = Amount;
	Parms.HealthType = HealthType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HealingComponent.BP_HealingComponent_C.ApplyPainkiller
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_HealingComponent_C::ApplyPainkiller()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HealingComponent_C", "ApplyPainkiller");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HealingComponent.BP_HealingComponent_C.ApplyAntibiotic
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Duration                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HealingComponent_C::ApplyAntibiotic(float Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HealingComponent_C", "ApplyAntibiotic");

	Params::BP_HealingComponent_C_ApplyAntibiotic Parms{};

	Parms.Duration = Duration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HealingComponent.BP_HealingComponent_C.RegisterConsumable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_HealingConsumable_Base_C*     HealingConsumable                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HealingComponent_C::RegisterConsumable(class ABP_HealingConsumable_Base_C* HealingConsumable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HealingComponent_C", "RegisterConsumable");

	Params::BP_HealingComponent_C_RegisterConsumable Parms{};

	Parms.HealingConsumable = HealingConsumable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HealingComponent.BP_HealingComponent_C.UnregisterConsumable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_HealingConsumable_Base_C*     HealingConsumable                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HealingComponent_C::UnregisterConsumable(class ABP_HealingConsumable_Base_C* HealingConsumable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HealingComponent_C", "UnregisterConsumable");

	Params::BP_HealingComponent_C_UnregisterConsumable Parms{};

	Parms.HealingConsumable = HealingConsumable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HealingComponent.BP_HealingComponent_C.UpdateConsumableEffectsOnAuthority
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_HealingComponent_C::UpdateConsumableEffectsOnAuthority()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HealingComponent_C", "UpdateConsumableEffectsOnAuthority");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HealingComponent.BP_HealingComponent_C.ClearEffects
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_HealingComponent_C::ClearEffects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HealingComponent_C", "ClearEffects");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HealingComponent.BP_HealingComponent_C.ApplyPoison
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_HC_Poison                     Poison                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HealingComponent_C::ApplyPoison(const struct FS_HC_Poison& Poison)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HealingComponent_C", "ApplyPoison");

	Params::BP_HealingComponent_C_ApplyPoison Parms{};

	Parms.Poison = std::move(Poison);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HealingComponent.BP_HealingComponent_C.UpdatePoisons
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   TickDuration                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   AmountToUnHeal                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FS_HC_Poison                     InstigatingPoison                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HealingComponent_C::UpdatePoisons(float TickDuration, float* AmountToUnHeal, struct FS_HC_Poison* InstigatingPoison)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HealingComponent_C", "UpdatePoisons");

	Params::BP_HealingComponent_C_UpdatePoisons Parms{};

	Parms.TickDuration = TickDuration;

	UObject::ProcessEvent(Func, &Parms);

	if (AmountToUnHeal != nullptr)
		*AmountToUnHeal = Parms.AmountToUnHeal;

	if (InstigatingPoison != nullptr)
		*InstigatingPoison = std::move(Parms.InstigatingPoison);
}

}

