#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WorldSpectator

#include "Basic.hpp"

#include "BP_WorldSpectator_classes.hpp"
#include "BP_WorldSpectator_parameters.hpp"


namespace SDK
{

// Function BP_WorldSpectator.BP_WorldSpectator_C.ExecuteUbergraph_BP_WorldSpectator
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_WorldSpectator_C::ExecuteUbergraph_BP_WorldSpectator(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WorldSpectator_C", "ExecuteUbergraph_BP_WorldSpectator");

	Params::BP_WorldSpectator_C_ExecuteUbergraph_BP_WorldSpectator Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WorldSpectator.BP_WorldSpectator_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_WorldSpectator_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WorldSpectator_C", "ReceiveTick");

	Params::BP_WorldSpectator_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WorldSpectator.BP_WorldSpectator_C.TargetChanged
// (BlueprintCallable, BlueprintEvent)

void ABP_WorldSpectator_C::TargetChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WorldSpectator_C", "TargetChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WorldSpectator.BP_WorldSpectator_C.OnServerTargetChanged
// (Event, Protected, BlueprintEvent)

void ABP_WorldSpectator_C::OnServerTargetChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WorldSpectator_C", "OnServerTargetChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WorldSpectator.BP_WorldSpectator_C.Cycle Spectator
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Next_Player                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_WorldSpectator_C::Cycle_Spectator(bool Next_Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WorldSpectator_C", "Cycle Spectator");

	Params::BP_WorldSpectator_C_Cycle_Spectator Parms{};

	Parms.Next_Player = Next_Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WorldSpectator.BP_WorldSpectator_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_WorldSpectator_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WorldSpectator_C", "ReceiveEndPlay");

	Params::BP_WorldSpectator_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WorldSpectator.BP_WorldSpectator_C.SpectateTargetBecameTeamKiller
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHumanCharacter*                  Killer                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_WorldSpectator_C::SpectateTargetBecameTeamKiller(class AHumanCharacter* Killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WorldSpectator_C", "SpectateTargetBecameTeamKiller");

	Params::BP_WorldSpectator_C_SpectateTargetBecameTeamKiller Parms{};

	Parms.Killer = Killer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WorldSpectator.BP_WorldSpectator_C.SpectateTargetBecameThreat
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHumanCharacter*                  Killer                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_WorldSpectator_C::SpectateTargetBecameThreat(class AHumanCharacter* Killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WorldSpectator_C", "SpectateTargetBecameThreat");

	Params::BP_WorldSpectator_C_SpectateTargetBecameThreat Parms{};

	Parms.Killer = Killer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WorldSpectator.BP_WorldSpectator_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_WorldSpectator_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WorldSpectator_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WorldSpectator.BP_WorldSpectator_C.OnTargetChanged
// (Event, Protected, BlueprintEvent)

void ABP_WorldSpectator_C::OnTargetChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WorldSpectator_C", "OnTargetChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WorldSpectator.BP_WorldSpectator_C.ReceiveUnpossessed
// (Event, Public, BlueprintEvent)
// Parameters:
// class AController*                      OldController                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_WorldSpectator_C::ReceiveUnpossessed(class AController* OldController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WorldSpectator_C", "ReceiveUnpossessed");

	Params::BP_WorldSpectator_C_ReceiveUnpossessed Parms{};

	Parms.OldController = OldController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WorldSpectator.BP_WorldSpectator_C.Ended Spectating Current Player
// (BlueprintCallable, BlueprintEvent)

void ABP_WorldSpectator_C::Ended_Spectating_Current_Player()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WorldSpectator_C", "Ended Spectating Current Player");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WorldSpectator.BP_WorldSpectator_C.Stopped Spectating
// (BlueprintCallable, BlueprintEvent)

void ABP_WorldSpectator_C::Stopped_Spectating()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WorldSpectator_C", "Stopped Spectating");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WorldSpectator.BP_WorldSpectator_C.Started Spectating
// (BlueprintCallable, BlueprintEvent)

void ABP_WorldSpectator_C::Started_Spectating()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WorldSpectator_C", "Started Spectating");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WorldSpectator.BP_WorldSpectator_C.StartSmoothMovement
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          OldLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          NewLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_WorldSpectator_C::StartSmoothMovement(const struct FVector& OldLocation, const struct FVector& NewLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WorldSpectator_C", "StartSmoothMovement");

	Params::BP_WorldSpectator_C_StartSmoothMovement Parms{};

	Parms.OldLocation = std::move(OldLocation);
	Parms.NewLocation = std::move(NewLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WorldSpectator.BP_WorldSpectator_C.UpdateSmoothMovement
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Dt                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_WorldSpectator_C::UpdateSmoothMovement(float Dt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WorldSpectator_C", "UpdateSmoothMovement");

	Params::BP_WorldSpectator_C_UpdateSmoothMovement Parms{};

	Parms.Dt = Dt;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WorldSpectator.BP_WorldSpectator_C.Debug Print
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Duration                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     TextColor                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_WorldSpectator_C::Debug_Print(float Duration, const struct FLinearColor& TextColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WorldSpectator_C", "Debug Print");

	Params::BP_WorldSpectator_C_Debug_Print Parms{};

	Parms.Duration = Duration;
	Parms.TextColor = std::move(TextColor);

	UObject::ProcessEvent(Func, &Parms);
}

}

