#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CassettePlayer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CassettePlayer.BP_CassettePlayer_C
// 0x0118 (0x0338 - 0x0220)
class ABP_CassettePlayer_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   CassetteDrawer_03;                                 // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CassetteDrawer_02;                                 // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CassetteDrawer_01;                                 // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Camera;                                            // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_InteractionItemComponent_C*         BP_InteractionItemComponent;                       // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        LevelMusicComponent;                               // 0x0258(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CassetteTrack_C*                    DefaultTrack;                                      // 0x0260(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             CassetteTrackList_DataTable;                       // 0x0268(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_CassettePlayer_C*                   CassettePlayerUI;                                  // 0x0270(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_CassetteTrack_C*>            TrackList;                                         // 0x0278(0x0010)(Edit, BlueprintVisible)
	class UBP_CassetteTrack_C*                    SelectedTrack;                                     // 0x0288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CassetteTrack_C*                    CurrentTrack;                                      // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ShelterCassetteCamera_C*            CassetteCamera;                                    // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 PrevViewTarget;                                    // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInstance>       SelectedCassetteMaterial;                          // 0x02A8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          IsShuffleActive;                                   // 0x02D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           NextTrackPlayTimer;                                // 0x02D8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_CassetteTrack_C*>            TrackQueue;                                        // 0x02E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         FadeInOutTime;                                     // 0x02F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F4[0x4];                                      // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           FadeOutFadeInTimer;                                // 0x02F8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          Initialized;                                       // 0x0300(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_301[0x7];                                      // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           LastTrackPlayedTimer;                              // 0x0308(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         ShelterLevel;                                      // 0x0310(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ShelterLevelRequired;                              // 0x0314(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OnboardingFinishedBound;                           // 0x0318(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          PlayDefaultOnShelterEntry;                         // 0x0319(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31A[0x6];                                      // 0x031A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             CurrentlyPlayedSound;                              // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipFirstNotification;                             // 0x0328(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bShouldCallTrackFinished;                          // 0x0329(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32A[0x6];                                      // 0x032A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   PreviewCassetteMesh;                               // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_CassettePlayer(int32 EntryPoint);
	void ReceiveDestroyed();
	void BattlepassReward_Event(const struct FCloudRequestResult& RequestResult, const struct FCloudBattlePassRewardsClaim& Data);
	void AnnounceSelfToGM();
	void Shelter_Level_Changed(int32 NewLevel);
	void StashLoaded(class AStash* Sender, class UStashComponent* Inventory);
	void Internal_Load_and_Play_Track(const class UBP_CassetteTrack_C*& Track_Reference, class UBP_CassetteTrack_C* Previous_Track);
	void Onboarding_Finished();
	void DelayedCheckForPlayerController();
	void ReceiveBeginPlay();
	void Show_Next_Track_Notification(const struct FMusicTrackRow& TrackInfo);
	void SongElapsedTime();
	void BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_0_Interaction_Start_On_Client__DelegateSignature(class UInteractionItemComponent* Sender, class AActor* Interacting_Actor);
	void Analytics_Player_Played_Track(const struct FS_CassetteTrackInfo& TrackInfo);
	void Analytics_Player_Interacted();
	void OnLoaded_303A9E7341428F48F05BE78A0F49287F(class UObject* Loaded);
	void UserConstructionScript();
	void Initialize(TArray<class UBP_CassetteTrack_C*>& TrackList_0);
	void SelectTrack(class UBP_CassetteTrack_C* Track, TSoftObjectPtr<class UMaterialInstance> CassetteMaterial);
	void ShowUI();
	void HideUI();
	void PlayTrack(class UBP_CassetteTrack_C* Track);
	void ResetQueue(class UBP_CassetteTrack_C* IgnoredTrack);
	void StopTrack();
	void FadeOutOldTrack();
	void FadeInLastPlayedTrack();
	void GetCassetteTracksFromDataTable(TArray<class UBP_CassetteTrack_C*>* MusicTrackList);
	void HasPlayerUnlockedCassetteTrack(class UClass* CheckedCassetteTrack, bool* IsUnlocked);
	void UnlockMusicTracks();
	void RefreshCassettePlayerVisibility();
	void IsCassettePlayerAvailable(bool* Available);
	void OnTrackFinished();
	void DoesPlayerOwnAtLeastOneCassette(const class AStash* Stash, bool* OwnsSome);
	void ToggleCassetteCamera(bool bShouldUseTheCamera, bool bInstantTransition, class AActor* PreviousViewTarget);
	void RotateTheCassette(float InputAxis);
	void AddCassetteStaticMeshToCharacter();
	void RemoveCassetteStaticMeshFromCharacter();
	void ChangePreviewCassetteMaterial();
	void CheckOwnedCassettes();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CassettePlayer_C">();
	}
	static class ABP_CassettePlayer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_CassettePlayer_C>();
	}
};
static_assert(alignof(ABP_CassettePlayer_C) == 0x000008, "Wrong alignment on ABP_CassettePlayer_C");
static_assert(sizeof(ABP_CassettePlayer_C) == 0x000338, "Wrong size on ABP_CassettePlayer_C");
static_assert(offsetof(ABP_CassettePlayer_C, UberGraphFrame) == 0x000220, "Member 'ABP_CassettePlayer_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_CassettePlayer_C, CassetteDrawer_03) == 0x000228, "Member 'ABP_CassettePlayer_C::CassetteDrawer_03' has a wrong offset!");
static_assert(offsetof(ABP_CassettePlayer_C, CassetteDrawer_02) == 0x000230, "Member 'ABP_CassettePlayer_C::CassetteDrawer_02' has a wrong offset!");
static_assert(offsetof(ABP_CassettePlayer_C, CassetteDrawer_01) == 0x000238, "Member 'ABP_CassettePlayer_C::CassetteDrawer_01' has a wrong offset!");
static_assert(offsetof(ABP_CassettePlayer_C, Camera) == 0x000240, "Member 'ABP_CassettePlayer_C::Camera' has a wrong offset!");
static_assert(offsetof(ABP_CassettePlayer_C, Scene) == 0x000248, "Member 'ABP_CassettePlayer_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_CassettePlayer_C, BP_InteractionItemComponent) == 0x000250, "Member 'ABP_CassettePlayer_C::BP_InteractionItemComponent' has a wrong offset!");
static_assert(offsetof(ABP_CassettePlayer_C, LevelMusicComponent) == 0x000258, "Member 'ABP_CassettePlayer_C::LevelMusicComponent' has a wrong offset!");
static_assert(offsetof(ABP_CassettePlayer_C, DefaultTrack) == 0x000260, "Member 'ABP_CassettePlayer_C::DefaultTrack' has a wrong offset!");
static_assert(offsetof(ABP_CassettePlayer_C, CassetteTrackList_DataTable) == 0x000268, "Member 'ABP_CassettePlayer_C::CassetteTrackList_DataTable' has a wrong offset!");
static_assert(offsetof(ABP_CassettePlayer_C, CassettePlayerUI) == 0x000270, "Member 'ABP_CassettePlayer_C::CassettePlayerUI' has a wrong offset!");
static_assert(offsetof(ABP_CassettePlayer_C, TrackList) == 0x000278, "Member 'ABP_CassettePlayer_C::TrackList' has a wrong offset!");
static_assert(offsetof(ABP_CassettePlayer_C, SelectedTrack) == 0x000288, "Member 'ABP_CassettePlayer_C::SelectedTrack' has a wrong offset!");
static_assert(offsetof(ABP_CassettePlayer_C, CurrentTrack) == 0x000290, "Member 'ABP_CassettePlayer_C::CurrentTrack' has a wrong offset!");
static_assert(offsetof(ABP_CassettePlayer_C, CassetteCamera) == 0x000298, "Member 'ABP_CassettePlayer_C::CassetteCamera' has a wrong offset!");
static_assert(offsetof(ABP_CassettePlayer_C, PrevViewTarget) == 0x0002A0, "Member 'ABP_CassettePlayer_C::PrevViewTarget' has a wrong offset!");
static_assert(offsetof(ABP_CassettePlayer_C, SelectedCassetteMaterial) == 0x0002A8, "Member 'ABP_CassettePlayer_C::SelectedCassetteMaterial' has a wrong offset!");
static_assert(offsetof(ABP_CassettePlayer_C, IsShuffleActive) == 0x0002D0, "Member 'ABP_CassettePlayer_C::IsShuffleActive' has a wrong offset!");
static_assert(offsetof(ABP_CassettePlayer_C, NextTrackPlayTimer) == 0x0002D8, "Member 'ABP_CassettePlayer_C::NextTrackPlayTimer' has a wrong offset!");
static_assert(offsetof(ABP_CassettePlayer_C, TrackQueue) == 0x0002E0, "Member 'ABP_CassettePlayer_C::TrackQueue' has a wrong offset!");
static_assert(offsetof(ABP_CassettePlayer_C, FadeInOutTime) == 0x0002F0, "Member 'ABP_CassettePlayer_C::FadeInOutTime' has a wrong offset!");
static_assert(offsetof(ABP_CassettePlayer_C, FadeOutFadeInTimer) == 0x0002F8, "Member 'ABP_CassettePlayer_C::FadeOutFadeInTimer' has a wrong offset!");
static_assert(offsetof(ABP_CassettePlayer_C, Initialized) == 0x000300, "Member 'ABP_CassettePlayer_C::Initialized' has a wrong offset!");
static_assert(offsetof(ABP_CassettePlayer_C, LastTrackPlayedTimer) == 0x000308, "Member 'ABP_CassettePlayer_C::LastTrackPlayedTimer' has a wrong offset!");
static_assert(offsetof(ABP_CassettePlayer_C, ShelterLevel) == 0x000310, "Member 'ABP_CassettePlayer_C::ShelterLevel' has a wrong offset!");
static_assert(offsetof(ABP_CassettePlayer_C, ShelterLevelRequired) == 0x000314, "Member 'ABP_CassettePlayer_C::ShelterLevelRequired' has a wrong offset!");
static_assert(offsetof(ABP_CassettePlayer_C, OnboardingFinishedBound) == 0x000318, "Member 'ABP_CassettePlayer_C::OnboardingFinishedBound' has a wrong offset!");
static_assert(offsetof(ABP_CassettePlayer_C, PlayDefaultOnShelterEntry) == 0x000319, "Member 'ABP_CassettePlayer_C::PlayDefaultOnShelterEntry' has a wrong offset!");
static_assert(offsetof(ABP_CassettePlayer_C, CurrentlyPlayedSound) == 0x000320, "Member 'ABP_CassettePlayer_C::CurrentlyPlayedSound' has a wrong offset!");
static_assert(offsetof(ABP_CassettePlayer_C, SkipFirstNotification) == 0x000328, "Member 'ABP_CassettePlayer_C::SkipFirstNotification' has a wrong offset!");
static_assert(offsetof(ABP_CassettePlayer_C, bShouldCallTrackFinished) == 0x000329, "Member 'ABP_CassettePlayer_C::bShouldCallTrackFinished' has a wrong offset!");
static_assert(offsetof(ABP_CassettePlayer_C, PreviewCassetteMesh) == 0x000330, "Member 'ABP_CassettePlayer_C::PreviewCassetteMesh' has a wrong offset!");

}

