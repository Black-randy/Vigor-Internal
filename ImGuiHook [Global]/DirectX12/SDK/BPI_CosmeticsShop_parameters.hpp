#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_CosmeticsShop

#include "Basic.hpp"

#include "Flame_structs.hpp"


namespace SDK::Params
{

// Function BPI_CosmeticsShop.BPI_CosmeticsShop_C.GetRefToMainCategoryListButton
// 0x0010 (0x0010 - 0x0000)
struct BPI_CosmeticsShop_C_GetRefToMainCategoryListButton final
{
public:
	class UUI_CosmeticsMainCategory_C*            MenuLabel;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bValid;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_CosmeticsShop_C_GetRefToMainCategoryListButton) == 0x000008, "Wrong alignment on BPI_CosmeticsShop_C_GetRefToMainCategoryListButton");
static_assert(sizeof(BPI_CosmeticsShop_C_GetRefToMainCategoryListButton) == 0x000010, "Wrong size on BPI_CosmeticsShop_C_GetRefToMainCategoryListButton");
static_assert(offsetof(BPI_CosmeticsShop_C_GetRefToMainCategoryListButton, MenuLabel) == 0x000000, "Member 'BPI_CosmeticsShop_C_GetRefToMainCategoryListButton::MenuLabel' has a wrong offset!");
static_assert(offsetof(BPI_CosmeticsShop_C_GetRefToMainCategoryListButton, bValid) == 0x000008, "Member 'BPI_CosmeticsShop_C_GetRefToMainCategoryListButton::bValid' has a wrong offset!");

// Function BPI_CosmeticsShop.BPI_CosmeticsShop_C.GetRefToSubCategoryListButton
// 0x0010 (0x0010 - 0x0000)
struct BPI_CosmeticsShop_C_GetRefToSubCategoryListButton final
{
public:
	bool                                          bValid;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_CosmeticsSubCategory_C*             SubCategory;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_CosmeticsShop_C_GetRefToSubCategoryListButton) == 0x000008, "Wrong alignment on BPI_CosmeticsShop_C_GetRefToSubCategoryListButton");
static_assert(sizeof(BPI_CosmeticsShop_C_GetRefToSubCategoryListButton) == 0x000010, "Wrong size on BPI_CosmeticsShop_C_GetRefToSubCategoryListButton");
static_assert(offsetof(BPI_CosmeticsShop_C_GetRefToSubCategoryListButton, bValid) == 0x000000, "Member 'BPI_CosmeticsShop_C_GetRefToSubCategoryListButton::bValid' has a wrong offset!");
static_assert(offsetof(BPI_CosmeticsShop_C_GetRefToSubCategoryListButton, SubCategory) == 0x000008, "Member 'BPI_CosmeticsShop_C_GetRefToSubCategoryListButton::SubCategory' has a wrong offset!");

// Function BPI_CosmeticsShop.BPI_CosmeticsShop_C.GetRefToCosmeticsListButton
// 0x0010 (0x0010 - 0x0000)
struct BPI_CosmeticsShop_C_GetRefToCosmeticsListButton final
{
public:
	class UUI_CosmeticsListButton_C*              ListBTN;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bValid;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_CosmeticsShop_C_GetRefToCosmeticsListButton) == 0x000008, "Wrong alignment on BPI_CosmeticsShop_C_GetRefToCosmeticsListButton");
static_assert(sizeof(BPI_CosmeticsShop_C_GetRefToCosmeticsListButton) == 0x000010, "Wrong size on BPI_CosmeticsShop_C_GetRefToCosmeticsListButton");
static_assert(offsetof(BPI_CosmeticsShop_C_GetRefToCosmeticsListButton, ListBTN) == 0x000000, "Member 'BPI_CosmeticsShop_C_GetRefToCosmeticsListButton::ListBTN' has a wrong offset!");
static_assert(offsetof(BPI_CosmeticsShop_C_GetRefToCosmeticsListButton, bValid) == 0x000008, "Member 'BPI_CosmeticsShop_C_GetRefToCosmeticsListButton::bValid' has a wrong offset!");

// Function BPI_CosmeticsShop.BPI_CosmeticsShop_C.IsCategoryExpanded
// 0x0002 (0x0002 - 0x0000)
struct BPI_CosmeticsShop_C_IsCategoryExpanded final
{
public:
	bool                                          bValid;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsExpanded;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_CosmeticsShop_C_IsCategoryExpanded) == 0x000001, "Wrong alignment on BPI_CosmeticsShop_C_IsCategoryExpanded");
static_assert(sizeof(BPI_CosmeticsShop_C_IsCategoryExpanded) == 0x000002, "Wrong size on BPI_CosmeticsShop_C_IsCategoryExpanded");
static_assert(offsetof(BPI_CosmeticsShop_C_IsCategoryExpanded, bValid) == 0x000000, "Member 'BPI_CosmeticsShop_C_IsCategoryExpanded::bValid' has a wrong offset!");
static_assert(offsetof(BPI_CosmeticsShop_C_IsCategoryExpanded, bIsExpanded) == 0x000001, "Member 'BPI_CosmeticsShop_C_IsCategoryExpanded::bIsExpanded' has a wrong offset!");

// Function BPI_CosmeticsShop.BPI_CosmeticsShop_C.UpdateScrollBaronWidget
// 0x0008 (0x0008 - 0x0000)
struct BPI_CosmeticsShop_C_UpdateScrollBaronWidget final
{
public:
	class UWidget*                                WidgetToFocus;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_CosmeticsShop_C_UpdateScrollBaronWidget) == 0x000008, "Wrong alignment on BPI_CosmeticsShop_C_UpdateScrollBaronWidget");
static_assert(sizeof(BPI_CosmeticsShop_C_UpdateScrollBaronWidget) == 0x000008, "Wrong size on BPI_CosmeticsShop_C_UpdateScrollBaronWidget");
static_assert(offsetof(BPI_CosmeticsShop_C_UpdateScrollBaronWidget, WidgetToFocus) == 0x000000, "Member 'BPI_CosmeticsShop_C_UpdateScrollBaronWidget::WidgetToFocus' has a wrong offset!");

// Function BPI_CosmeticsShop.BPI_CosmeticsShop_C.GetLastScrollElement
// 0x0010 (0x0010 - 0x0000)
struct BPI_CosmeticsShop_C_GetLastScrollElement final
{
public:
	bool                                          bValid;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                LastWidget;                                        // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_CosmeticsShop_C_GetLastScrollElement) == 0x000008, "Wrong alignment on BPI_CosmeticsShop_C_GetLastScrollElement");
static_assert(sizeof(BPI_CosmeticsShop_C_GetLastScrollElement) == 0x000010, "Wrong size on BPI_CosmeticsShop_C_GetLastScrollElement");
static_assert(offsetof(BPI_CosmeticsShop_C_GetLastScrollElement, bValid) == 0x000000, "Member 'BPI_CosmeticsShop_C_GetLastScrollElement::bValid' has a wrong offset!");
static_assert(offsetof(BPI_CosmeticsShop_C_GetLastScrollElement, LastWidget) == 0x000008, "Member 'BPI_CosmeticsShop_C_GetLastScrollElement::LastWidget' has a wrong offset!");

// Function BPI_CosmeticsShop.BPI_CosmeticsShop_C.GetFirstScrollElement
// 0x0010 (0x0010 - 0x0000)
struct BPI_CosmeticsShop_C_GetFirstScrollElement final
{
public:
	bool                                          bValid;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                FirstElement;                                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_CosmeticsShop_C_GetFirstScrollElement) == 0x000008, "Wrong alignment on BPI_CosmeticsShop_C_GetFirstScrollElement");
static_assert(sizeof(BPI_CosmeticsShop_C_GetFirstScrollElement) == 0x000010, "Wrong size on BPI_CosmeticsShop_C_GetFirstScrollElement");
static_assert(offsetof(BPI_CosmeticsShop_C_GetFirstScrollElement, bValid) == 0x000000, "Member 'BPI_CosmeticsShop_C_GetFirstScrollElement::bValid' has a wrong offset!");
static_assert(offsetof(BPI_CosmeticsShop_C_GetFirstScrollElement, FirstElement) == 0x000008, "Member 'BPI_CosmeticsShop_C_GetFirstScrollElement::FirstElement' has a wrong offset!");

// Function BPI_CosmeticsShop.BPI_CosmeticsShop_C.SetCategoryIconHighlightVisibility
// 0x0001 (0x0001 - 0x0000)
struct BPI_CosmeticsShop_C_SetCategoryIconHighlightVisibility final
{
public:
	bool                                          NewVisibility;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_CosmeticsShop_C_SetCategoryIconHighlightVisibility) == 0x000001, "Wrong alignment on BPI_CosmeticsShop_C_SetCategoryIconHighlightVisibility");
static_assert(sizeof(BPI_CosmeticsShop_C_SetCategoryIconHighlightVisibility) == 0x000001, "Wrong size on BPI_CosmeticsShop_C_SetCategoryIconHighlightVisibility");
static_assert(offsetof(BPI_CosmeticsShop_C_SetCategoryIconHighlightVisibility, NewVisibility) == 0x000000, "Member 'BPI_CosmeticsShop_C_SetCategoryIconHighlightVisibility::NewVisibility' has a wrong offset!");

// Function BPI_CosmeticsShop.BPI_CosmeticsShop_C.IsListButtonChildOfSubCategory
// 0x0010 (0x0010 - 0x0000)
struct BPI_CosmeticsShop_C_IsListButtonChildOfSubCategory final
{
public:
	class UUI_CosmeticsListButton_C*              ListButton;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsChild;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_CosmeticsShop_C_IsListButtonChildOfSubCategory) == 0x000008, "Wrong alignment on BPI_CosmeticsShop_C_IsListButtonChildOfSubCategory");
static_assert(sizeof(BPI_CosmeticsShop_C_IsListButtonChildOfSubCategory) == 0x000010, "Wrong size on BPI_CosmeticsShop_C_IsListButtonChildOfSubCategory");
static_assert(offsetof(BPI_CosmeticsShop_C_IsListButtonChildOfSubCategory, ListButton) == 0x000000, "Member 'BPI_CosmeticsShop_C_IsListButtonChildOfSubCategory::ListButton' has a wrong offset!");
static_assert(offsetof(BPI_CosmeticsShop_C_IsListButtonChildOfSubCategory, bIsChild) == 0x000008, "Member 'BPI_CosmeticsShop_C_IsListButtonChildOfSubCategory::bIsChild' has a wrong offset!");

// Function BPI_CosmeticsShop.BPI_CosmeticsShop_C.SetExpandibleBool
// 0x0001 (0x0001 - 0x0000)
struct BPI_CosmeticsShop_C_SetExpandibleBool final
{
public:
	bool                                          bShouldBeExpanded;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_CosmeticsShop_C_SetExpandibleBool) == 0x000001, "Wrong alignment on BPI_CosmeticsShop_C_SetExpandibleBool");
static_assert(sizeof(BPI_CosmeticsShop_C_SetExpandibleBool) == 0x000001, "Wrong size on BPI_CosmeticsShop_C_SetExpandibleBool");
static_assert(offsetof(BPI_CosmeticsShop_C_SetExpandibleBool, bShouldBeExpanded) == 0x000000, "Member 'BPI_CosmeticsShop_C_SetExpandibleBool::bShouldBeExpanded' has a wrong offset!");

// Function BPI_CosmeticsShop.BPI_CosmeticsShop_C.GetItemTypeCategory
// 0x0002 (0x0002 - 0x0000)
struct BPI_CosmeticsShop_C_GetItemTypeCategory final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ESellingPointType                             SellingPointType;                                  // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_CosmeticsShop_C_GetItemTypeCategory) == 0x000001, "Wrong alignment on BPI_CosmeticsShop_C_GetItemTypeCategory");
static_assert(sizeof(BPI_CosmeticsShop_C_GetItemTypeCategory) == 0x000002, "Wrong size on BPI_CosmeticsShop_C_GetItemTypeCategory");
static_assert(offsetof(BPI_CosmeticsShop_C_GetItemTypeCategory, Success) == 0x000000, "Member 'BPI_CosmeticsShop_C_GetItemTypeCategory::Success' has a wrong offset!");
static_assert(offsetof(BPI_CosmeticsShop_C_GetItemTypeCategory, SellingPointType) == 0x000001, "Member 'BPI_CosmeticsShop_C_GetItemTypeCategory::SellingPointType' has a wrong offset!");

// Function BPI_CosmeticsShop.BPI_CosmeticsShop_C.DestroyComponentByTAG
// 0x000C (0x000C - 0x0000)
struct BPI_CosmeticsShop_C_DestroyComponentByTAG final
{
public:
	class FName                                   Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Valid;                                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ComponentFound;                                    // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_CosmeticsShop_C_DestroyComponentByTAG) == 0x000004, "Wrong alignment on BPI_CosmeticsShop_C_DestroyComponentByTAG");
static_assert(sizeof(BPI_CosmeticsShop_C_DestroyComponentByTAG) == 0x00000C, "Wrong size on BPI_CosmeticsShop_C_DestroyComponentByTAG");
static_assert(offsetof(BPI_CosmeticsShop_C_DestroyComponentByTAG, Tag) == 0x000000, "Member 'BPI_CosmeticsShop_C_DestroyComponentByTAG::Tag' has a wrong offset!");
static_assert(offsetof(BPI_CosmeticsShop_C_DestroyComponentByTAG, Valid) == 0x000008, "Member 'BPI_CosmeticsShop_C_DestroyComponentByTAG::Valid' has a wrong offset!");
static_assert(offsetof(BPI_CosmeticsShop_C_DestroyComponentByTAG, ComponentFound) == 0x000009, "Member 'BPI_CosmeticsShop_C_DestroyComponentByTAG::ComponentFound' has a wrong offset!");

}

