#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: S_ItemTransformSetting

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK
{

// UserDefinedStruct S_ItemTransformSetting.S_ItemTransformSetting
// 0x0140 (0x0140 - 0x0000)
struct FS_ItemTransformSetting final
{
public:
	struct FRotator                               ItemRotation_7_7D0C49FE4A9124F29C35C6B156C792E6;   // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         ItemScale_10_086E8B984578F6D1FF6F78A25FBC7BB0;     // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RotationPivotOffset_75_67D69291466EB3E2914403AA98F69FEB; // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CameraTransform_5_ADED96ED49E5FF873A996D8E26E748C1; // 0x0020(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FTransform                             RectLight_1_Transform_17_9F63F1F24C7CD1B0CCAB29954F4AE4CB; // 0x0050(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FTransform                             RectLight_2_Transform_18_4781D6BF48F3B32101A480985099EFC8; // 0x0080(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FTransform                             SpotLight_1_Transform_20_027B565B45399477D81133B56C682E34; // 0x00B0(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	bool                                          UseItemRotation_AlternativeinItemContext_57_FE90BF524AAC2390EB09BC9E373B4D6A; // 0x00E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               ItemRotation_Alternative_58_91EF129D432215C345B10E8A60CFA34E; // 0x00E4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          UseItemScale_AlternativeinItemContext_59_77A7CDD843EB852BFDA99596BB640B10; // 0x00F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ItemScale_Alternative_60_991365A0448F29EC445D148EA21DB057; // 0x00F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseCameraTransform_AlternativeinItemContext_61_E1AE0F7B41E0311115B1528233262844; // 0x00F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CameraTransform_Alternative_62_ED9D56C5409CBB3131A79A8AB4A53F7D; // 0x0100(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	bool                                          UseRotationPivotOffset_AlternativeinItemContext_77_E33BBADC474B041BBB69E4A7D8EEBE9E; // 0x0130(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RotationPivotOffset_Alternative_76_DC0B7E8647B31610F86F78AACB7B1144; // 0x0134(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FS_ItemTransformSetting) == 0x000010, "Wrong alignment on FS_ItemTransformSetting");
static_assert(sizeof(FS_ItemTransformSetting) == 0x000140, "Wrong size on FS_ItemTransformSetting");
static_assert(offsetof(FS_ItemTransformSetting, ItemRotation_7_7D0C49FE4A9124F29C35C6B156C792E6) == 0x000000, "Member 'FS_ItemTransformSetting::ItemRotation_7_7D0C49FE4A9124F29C35C6B156C792E6' has a wrong offset!");
static_assert(offsetof(FS_ItemTransformSetting, ItemScale_10_086E8B984578F6D1FF6F78A25FBC7BB0) == 0x00000C, "Member 'FS_ItemTransformSetting::ItemScale_10_086E8B984578F6D1FF6F78A25FBC7BB0' has a wrong offset!");
static_assert(offsetof(FS_ItemTransformSetting, RotationPivotOffset_75_67D69291466EB3E2914403AA98F69FEB) == 0x000010, "Member 'FS_ItemTransformSetting::RotationPivotOffset_75_67D69291466EB3E2914403AA98F69FEB' has a wrong offset!");
static_assert(offsetof(FS_ItemTransformSetting, CameraTransform_5_ADED96ED49E5FF873A996D8E26E748C1) == 0x000020, "Member 'FS_ItemTransformSetting::CameraTransform_5_ADED96ED49E5FF873A996D8E26E748C1' has a wrong offset!");
static_assert(offsetof(FS_ItemTransformSetting, RectLight_1_Transform_17_9F63F1F24C7CD1B0CCAB29954F4AE4CB) == 0x000050, "Member 'FS_ItemTransformSetting::RectLight_1_Transform_17_9F63F1F24C7CD1B0CCAB29954F4AE4CB' has a wrong offset!");
static_assert(offsetof(FS_ItemTransformSetting, RectLight_2_Transform_18_4781D6BF48F3B32101A480985099EFC8) == 0x000080, "Member 'FS_ItemTransformSetting::RectLight_2_Transform_18_4781D6BF48F3B32101A480985099EFC8' has a wrong offset!");
static_assert(offsetof(FS_ItemTransformSetting, SpotLight_1_Transform_20_027B565B45399477D81133B56C682E34) == 0x0000B0, "Member 'FS_ItemTransformSetting::SpotLight_1_Transform_20_027B565B45399477D81133B56C682E34' has a wrong offset!");
static_assert(offsetof(FS_ItemTransformSetting, UseItemRotation_AlternativeinItemContext_57_FE90BF524AAC2390EB09BC9E373B4D6A) == 0x0000E0, "Member 'FS_ItemTransformSetting::UseItemRotation_AlternativeinItemContext_57_FE90BF524AAC2390EB09BC9E373B4D6A' has a wrong offset!");
static_assert(offsetof(FS_ItemTransformSetting, ItemRotation_Alternative_58_91EF129D432215C345B10E8A60CFA34E) == 0x0000E4, "Member 'FS_ItemTransformSetting::ItemRotation_Alternative_58_91EF129D432215C345B10E8A60CFA34E' has a wrong offset!");
static_assert(offsetof(FS_ItemTransformSetting, UseItemScale_AlternativeinItemContext_59_77A7CDD843EB852BFDA99596BB640B10) == 0x0000F0, "Member 'FS_ItemTransformSetting::UseItemScale_AlternativeinItemContext_59_77A7CDD843EB852BFDA99596BB640B10' has a wrong offset!");
static_assert(offsetof(FS_ItemTransformSetting, ItemScale_Alternative_60_991365A0448F29EC445D148EA21DB057) == 0x0000F4, "Member 'FS_ItemTransformSetting::ItemScale_Alternative_60_991365A0448F29EC445D148EA21DB057' has a wrong offset!");
static_assert(offsetof(FS_ItemTransformSetting, UseCameraTransform_AlternativeinItemContext_61_E1AE0F7B41E0311115B1528233262844) == 0x0000F8, "Member 'FS_ItemTransformSetting::UseCameraTransform_AlternativeinItemContext_61_E1AE0F7B41E0311115B1528233262844' has a wrong offset!");
static_assert(offsetof(FS_ItemTransformSetting, CameraTransform_Alternative_62_ED9D56C5409CBB3131A79A8AB4A53F7D) == 0x000100, "Member 'FS_ItemTransformSetting::CameraTransform_Alternative_62_ED9D56C5409CBB3131A79A8AB4A53F7D' has a wrong offset!");
static_assert(offsetof(FS_ItemTransformSetting, UseRotationPivotOffset_AlternativeinItemContext_77_E33BBADC474B041BBB69E4A7D8EEBE9E) == 0x000130, "Member 'FS_ItemTransformSetting::UseRotationPivotOffset_AlternativeinItemContext_77_E33BBADC474B041BBB69E4A7D8EEBE9E' has a wrong offset!");
static_assert(offsetof(FS_ItemTransformSetting, RotationPivotOffset_Alternative_76_DC0B7E8647B31610F86F78AACB7B1144) == 0x000134, "Member 'FS_ItemTransformSetting::RotationPivotOffset_Alternative_76_DC0B7E8647B31610F86F78AACB7B1144' has a wrong offset!");

}

