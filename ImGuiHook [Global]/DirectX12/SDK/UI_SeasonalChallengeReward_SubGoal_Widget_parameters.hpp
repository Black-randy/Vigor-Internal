#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_SeasonalChallengeReward_SubGoal_Widget

#include "Basic.hpp"

#include "Struct_SeasonalChallengesSubGoalInfo_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function UI_SeasonalChallengeReward_SubGoal_Widget.UI_SeasonalChallengeReward_SubGoal_Widget_C.ExecuteUbergraph_UI_SeasonalChallengeReward_SubGoal_Widget
// 0x000C (0x000C - 0x0000)
struct UI_SeasonalChallengeReward_SubGoal_Widget_C_ExecuteUbergraph_UI_SeasonalChallengeReward_SubGoal_Widget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Count;                          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_SeasonalChallengeReward_SubGoal_Widget_C_ExecuteUbergraph_UI_SeasonalChallengeReward_SubGoal_Widget) == 0x000004, "Wrong alignment on UI_SeasonalChallengeReward_SubGoal_Widget_C_ExecuteUbergraph_UI_SeasonalChallengeReward_SubGoal_Widget");
static_assert(sizeof(UI_SeasonalChallengeReward_SubGoal_Widget_C_ExecuteUbergraph_UI_SeasonalChallengeReward_SubGoal_Widget) == 0x00000C, "Wrong size on UI_SeasonalChallengeReward_SubGoal_Widget_C_ExecuteUbergraph_UI_SeasonalChallengeReward_SubGoal_Widget");
static_assert(offsetof(UI_SeasonalChallengeReward_SubGoal_Widget_C_ExecuteUbergraph_UI_SeasonalChallengeReward_SubGoal_Widget, EntryPoint) == 0x000000, "Member 'UI_SeasonalChallengeReward_SubGoal_Widget_C_ExecuteUbergraph_UI_SeasonalChallengeReward_SubGoal_Widget::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_SeasonalChallengeReward_SubGoal_Widget_C_ExecuteUbergraph_UI_SeasonalChallengeReward_SubGoal_Widget, K2Node_Event_IsDesignTime) == 0x000004, "Member 'UI_SeasonalChallengeReward_SubGoal_Widget_C_ExecuteUbergraph_UI_SeasonalChallengeReward_SubGoal_Widget::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_SeasonalChallengeReward_SubGoal_Widget_C_ExecuteUbergraph_UI_SeasonalChallengeReward_SubGoal_Widget, K2Node_CustomEvent_Count) == 0x000008, "Member 'UI_SeasonalChallengeReward_SubGoal_Widget_C_ExecuteUbergraph_UI_SeasonalChallengeReward_SubGoal_Widget::K2Node_CustomEvent_Count' has a wrong offset!");

// Function UI_SeasonalChallengeReward_SubGoal_Widget.UI_SeasonalChallengeReward_SubGoal_Widget_C.UpdateChallengesCompletedCount
// 0x0004 (0x0004 - 0x0000)
struct UI_SeasonalChallengeReward_SubGoal_Widget_C_UpdateChallengesCompletedCount final
{
public:
	int32                                         Count;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_SeasonalChallengeReward_SubGoal_Widget_C_UpdateChallengesCompletedCount) == 0x000004, "Wrong alignment on UI_SeasonalChallengeReward_SubGoal_Widget_C_UpdateChallengesCompletedCount");
static_assert(sizeof(UI_SeasonalChallengeReward_SubGoal_Widget_C_UpdateChallengesCompletedCount) == 0x000004, "Wrong size on UI_SeasonalChallengeReward_SubGoal_Widget_C_UpdateChallengesCompletedCount");
static_assert(offsetof(UI_SeasonalChallengeReward_SubGoal_Widget_C_UpdateChallengesCompletedCount, Count) == 0x000000, "Member 'UI_SeasonalChallengeReward_SubGoal_Widget_C_UpdateChallengesCompletedCount::Count' has a wrong offset!");

// Function UI_SeasonalChallengeReward_SubGoal_Widget.UI_SeasonalChallengeReward_SubGoal_Widget_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_SeasonalChallengeReward_SubGoal_Widget_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_SeasonalChallengeReward_SubGoal_Widget_C_PreConstruct) == 0x000001, "Wrong alignment on UI_SeasonalChallengeReward_SubGoal_Widget_C_PreConstruct");
static_assert(sizeof(UI_SeasonalChallengeReward_SubGoal_Widget_C_PreConstruct) == 0x000001, "Wrong size on UI_SeasonalChallengeReward_SubGoal_Widget_C_PreConstruct");
static_assert(offsetof(UI_SeasonalChallengeReward_SubGoal_Widget_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_SeasonalChallengeReward_SubGoal_Widget_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_SeasonalChallengeReward_SubGoal_Widget.UI_SeasonalChallengeReward_SubGoal_Widget_C.Init_SubGoalWidget_UI
// 0x0130 (0x0130 - 0x0000)
struct UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI final
{
public:
	int32                                         TotalCompletedChallenges;                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_SeasonalChallengesSubGoalInfo  SubGoalInfo_0;                                     // 0x0008(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43[0x1];                                       // 0x0043(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F[0x1];                                       // 0x004F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_IntInt_ReturnValue;               // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x005F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0060(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A6[0x2];                                       // 0x00A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Max_ReturnValue;                          // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00C0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0100(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0118(0x0018)()
};
static_assert(alignof(UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI) == 0x000008, "Wrong alignment on UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI");
static_assert(sizeof(UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI) == 0x000130, "Wrong size on UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI");
static_assert(offsetof(UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI, TotalCompletedChallenges) == 0x000000, "Member 'UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI::TotalCompletedChallenges' has a wrong offset!");
static_assert(offsetof(UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI, SubGoalInfo_0) == 0x000008, "Member 'UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI::SubGoalInfo_0' has a wrong offset!");
static_assert(offsetof(UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI, Temp_byte_Variable) == 0x000040, "Member 'UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI, CallFunc_Less_IntInt_ReturnValue) == 0x000041, "Member 'UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI, Temp_bool_Variable) == 0x000042, "Member 'UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI, Temp_float_Variable) == 0x000044, "Member 'UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI, Temp_float_Variable_1) == 0x000048, "Member 'UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI, Temp_bool_Variable_1) == 0x00004C, "Member 'UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI, Temp_byte_Variable_1) == 0x00004D, "Member 'UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI, Temp_byte_Variable_2) == 0x00004E, "Member 'UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI, CallFunc_Subtract_IntInt_ReturnValue) == 0x000050, "Member 'UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI, CallFunc_InRange_IntInt_ReturnValue) == 0x000054, "Member 'UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI::CallFunc_InRange_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI, K2Node_Select_Default) == 0x000058, "Member 'UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI, Temp_byte_Variable_3) == 0x00005C, "Member 'UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI, K2Node_Select_Default_1) == 0x00005D, "Member 'UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI, Temp_bool_Variable_2) == 0x00005E, "Member 'UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI, K2Node_Select_Default_2) == 0x00005F, "Member 'UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI, K2Node_MakeStruct_FormatArgumentData) == 0x000060, "Member 'UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000A0, "Member 'UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI, Temp_byte_Variable_4) == 0x0000A4, "Member 'UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI, Temp_byte_Variable_5) == 0x0000A5, "Member 'UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x0000A8, "Member 'UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI, Temp_bool_Variable_3) == 0x0000AC, "Member 'UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI, CallFunc_Max_ReturnValue) == 0x0000B0, "Member 'UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI, CallFunc_Min_ReturnValue) == 0x0000B4, "Member 'UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI, K2Node_Select_Default_3) == 0x0000B8, "Member 'UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000C0, "Member 'UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI, K2Node_MakeArray_Array) == 0x000100, "Member 'UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000110, "Member 'UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI, CallFunc_Format_ReturnValue) == 0x000118, "Member 'UI_SeasonalChallengeReward_SubGoal_Widget_C_Init_SubGoalWidget_UI::CallFunc_Format_ReturnValue' has a wrong offset!");

}

