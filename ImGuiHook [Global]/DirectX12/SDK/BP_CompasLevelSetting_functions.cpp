#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CompasLevelSetting

#include "Basic.hpp"

#include "BP_CompasLevelSetting_classes.hpp"
#include "BP_CompasLevelSetting_parameters.hpp"


namespace SDK
{

// Function BP_CompasLevelSetting.BP_CompasLevelSetting_C.ExecuteUbergraph_BP_CompasLevelSetting
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CompasLevelSetting_C::ExecuteUbergraph_BP_CompasLevelSetting(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CompasLevelSetting_C", "ExecuteUbergraph_BP_CompasLevelSetting");

	Params::BP_CompasLevelSetting_C_ExecuteUbergraph_BP_CompasLevelSetting Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CompasLevelSetting.BP_CompasLevelSetting_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_CompasLevelSetting_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CompasLevelSetting_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CompasLevelSetting.BP_CompasLevelSetting_C.GetCompassRotator
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         Compass_Rotator                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                         Landscape_Rotator                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Valid_Landscape                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_CompasLevelSetting_C::GetCompassRotator(struct FRotator* Compass_Rotator, struct FRotator* Landscape_Rotator, bool* Valid_Landscape)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CompasLevelSetting_C", "GetCompassRotator");

	Params::BP_CompasLevelSetting_C_GetCompassRotator Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Compass_Rotator != nullptr)
		*Compass_Rotator = std::move(Parms.Compass_Rotator);

	if (Landscape_Rotator != nullptr)
		*Landscape_Rotator = std::move(Parms.Landscape_Rotator);

	if (Valid_Landscape != nullptr)
		*Valid_Landscape = Parms.Valid_Landscape;
}

}

