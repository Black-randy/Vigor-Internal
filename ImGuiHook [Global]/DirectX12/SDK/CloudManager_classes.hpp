#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CloudManager

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "DeveloperSettings_classes.hpp"


namespace SDK
{

// Class CloudManager.BisAuthManagerEOSLogin
// 0x0010 (0x0230 - 0x0220)
class ABisAuthManagerEOSLogin final : public AInfo
{
public:
	uint8                                         Pad_220[0x10];                                     // 0x0220(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool CanLinkToEpicGamesAccount(const class UObject* WorldContextObject);
	class FString GetLoggedInAuthAttribute(const class UObject* WorldContextObject, const class FString& InAuthAttrName);
	class FString GetLoggedInEpicAccountId(const class UObject* WorldContextObject);
	class FString GetLoggedInProductUserId(const class UObject* WorldContextObject);
	struct FUniqueNetIdRepl GetLoggedInUserId(const class UObject* WorldContextObject);
	class FString GetLoggedInUsername(const class UObject* WorldContextObject);
	bool IsSignedIn(const class UObject* WorldContextObject);
	void StartLogout(const class UObject* WorldContextObject, TDelegate<void(bool WasSuccessful)> OnDone);
	class FString UniqueNetIdToString(const struct FUniqueNetIdRepl& UniqueNetId);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BisAuthManagerEOSLogin">();
	}
	static class ABisAuthManagerEOSLogin* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABisAuthManagerEOSLogin>();
	}
};
static_assert(alignof(ABisAuthManagerEOSLogin) == 0x000008, "Wrong alignment on ABisAuthManagerEOSLogin");
static_assert(sizeof(ABisAuthManagerEOSLogin) == 0x000230, "Wrong size on ABisAuthManagerEOSLogin");

// Class CloudManager.CloudManagerSettings
// 0x0058 (0x0090 - 0x0038)
class UCloudManagerSettings final : public UDeveloperSettings
{
public:
	class FString                                 CloudLogMethod;                                    // 0x0038(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 CloudLogUrl;                                       // 0x0048(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 CloudLogBatchUrl;                                  // 0x0058(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 CloudLogBatchMethod;                               // 0x0068(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CloudLogBatchTimerInSeconds;                       // 0x0078(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CloudAuthTokenRefreshMinSeconds;                   // 0x0080(0x0008)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        CloudAuthTokenRefreshSafeWindowSeconds;            // 0x0088(0x0008)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CloudManagerSettings">();
	}
	static class UCloudManagerSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCloudManagerSettings>();
	}
};
static_assert(alignof(UCloudManagerSettings) == 0x000008, "Wrong alignment on UCloudManagerSettings");
static_assert(sizeof(UCloudManagerSettings) == 0x000090, "Wrong size on UCloudManagerSettings");
static_assert(offsetof(UCloudManagerSettings, CloudLogMethod) == 0x000038, "Member 'UCloudManagerSettings::CloudLogMethod' has a wrong offset!");
static_assert(offsetof(UCloudManagerSettings, CloudLogUrl) == 0x000048, "Member 'UCloudManagerSettings::CloudLogUrl' has a wrong offset!");
static_assert(offsetof(UCloudManagerSettings, CloudLogBatchUrl) == 0x000058, "Member 'UCloudManagerSettings::CloudLogBatchUrl' has a wrong offset!");
static_assert(offsetof(UCloudManagerSettings, CloudLogBatchMethod) == 0x000068, "Member 'UCloudManagerSettings::CloudLogBatchMethod' has a wrong offset!");
static_assert(offsetof(UCloudManagerSettings, CloudLogBatchTimerInSeconds) == 0x000078, "Member 'UCloudManagerSettings::CloudLogBatchTimerInSeconds' has a wrong offset!");
static_assert(offsetof(UCloudManagerSettings, CloudAuthTokenRefreshMinSeconds) == 0x000080, "Member 'UCloudManagerSettings::CloudAuthTokenRefreshMinSeconds' has a wrong offset!");
static_assert(offsetof(UCloudManagerSettings, CloudAuthTokenRefreshSafeWindowSeconds) == 0x000088, "Member 'UCloudManagerSettings::CloudAuthTokenRefreshSafeWindowSeconds' has a wrong offset!");

// Class CloudManager.LogSubsystem
// 0x0030 (0x0060 - 0x0030)
class ULogSubsystem final : public UGameInstanceSubsystem
{
public:
	uint8                                         Pad_30[0x30];                                      // 0x0030(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void TimerTick();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LogSubsystem">();
	}
	static class ULogSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULogSubsystem>();
	}
};
static_assert(alignof(ULogSubsystem) == 0x000008, "Wrong alignment on ULogSubsystem");
static_assert(sizeof(ULogSubsystem) == 0x000060, "Wrong size on ULogSubsystem");

}

