#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MementoLootManager_Vinyls

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_MementoLootManager_Vinyls.BP_MementoLootManager_Vinyls_C.Spawn Mementos
// 0x0058 (0x0058 - 0x0000)
struct BP_MementoLootManager_Vinyls_C_Spawn_Mementos final
{
public:
	bool                                          Cheat_in_All;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UClass*>                         Spawned_Mementos;                                  // 0x0008(0x0010)(Parm, OutParm)
	TArray<class UClass*>                         Spawned_Vinyls;                                    // 0x0018(0x0010)(Edit, BlueprintVisible)
	TArray<class UClass*>                         CallFunc_Set_Up_Commodities_to_Spawn_on_All_Locations_Mementos_Set; // 0x0028(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Choose_Vinyl_to_Spawn_Chosen_Vinyl;       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AddCommodity_ReturnValue;                 // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Cheating_Allowed_Result;               // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MementoLootManager_Vinyls_C_Spawn_Mementos) == 0x000008, "Wrong alignment on BP_MementoLootManager_Vinyls_C_Spawn_Mementos");
static_assert(sizeof(BP_MementoLootManager_Vinyls_C_Spawn_Mementos) == 0x000058, "Wrong size on BP_MementoLootManager_Vinyls_C_Spawn_Mementos");
static_assert(offsetof(BP_MementoLootManager_Vinyls_C_Spawn_Mementos, Cheat_in_All) == 0x000000, "Member 'BP_MementoLootManager_Vinyls_C_Spawn_Mementos::Cheat_in_All' has a wrong offset!");
static_assert(offsetof(BP_MementoLootManager_Vinyls_C_Spawn_Mementos, Spawned_Mementos) == 0x000008, "Member 'BP_MementoLootManager_Vinyls_C_Spawn_Mementos::Spawned_Mementos' has a wrong offset!");
static_assert(offsetof(BP_MementoLootManager_Vinyls_C_Spawn_Mementos, Spawned_Vinyls) == 0x000018, "Member 'BP_MementoLootManager_Vinyls_C_Spawn_Mementos::Spawned_Vinyls' has a wrong offset!");
static_assert(offsetof(BP_MementoLootManager_Vinyls_C_Spawn_Mementos, CallFunc_Set_Up_Commodities_to_Spawn_on_All_Locations_Mementos_Set) == 0x000028, "Member 'BP_MementoLootManager_Vinyls_C_Spawn_Mementos::CallFunc_Set_Up_Commodities_to_Spawn_on_All_Locations_Mementos_Set' has a wrong offset!");
static_assert(offsetof(BP_MementoLootManager_Vinyls_C_Spawn_Mementos, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_MementoLootManager_Vinyls_C_Spawn_Mementos::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MementoLootManager_Vinyls_C_Spawn_Mementos, CallFunc_Greater_IntInt_ReturnValue) == 0x00003C, "Member 'BP_MementoLootManager_Vinyls_C_Spawn_Mementos::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MementoLootManager_Vinyls_C_Spawn_Mementos, CallFunc_Choose_Vinyl_to_Spawn_Chosen_Vinyl) == 0x000040, "Member 'BP_MementoLootManager_Vinyls_C_Spawn_Mementos::CallFunc_Choose_Vinyl_to_Spawn_Chosen_Vinyl' has a wrong offset!");
static_assert(offsetof(BP_MementoLootManager_Vinyls_C_Spawn_Mementos, CallFunc_Not_PreBool_ReturnValue) == 0x000048, "Member 'BP_MementoLootManager_Vinyls_C_Spawn_Mementos::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MementoLootManager_Vinyls_C_Spawn_Mementos, CallFunc_AddCommodity_ReturnValue) == 0x000049, "Member 'BP_MementoLootManager_Vinyls_C_Spawn_Mementos::CallFunc_AddCommodity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MementoLootManager_Vinyls_C_Spawn_Mementos, CallFunc_Array_Add_ReturnValue) == 0x00004C, "Member 'BP_MementoLootManager_Vinyls_C_Spawn_Mementos::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MementoLootManager_Vinyls_C_Spawn_Mementos, CallFunc_Is_Cheating_Allowed_Result) == 0x000050, "Member 'BP_MementoLootManager_Vinyls_C_Spawn_Mementos::CallFunc_Is_Cheating_Allowed_Result' has a wrong offset!");
static_assert(offsetof(BP_MementoLootManager_Vinyls_C_Spawn_Mementos, CallFunc_BooleanAND_ReturnValue) == 0x000051, "Member 'BP_MementoLootManager_Vinyls_C_Spawn_Mementos::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_MementoLootManager_Vinyls.BP_MementoLootManager_Vinyls_C.Choose Vinyl to Spawn
// 0x00C0 (0x00C0 - 0x0000)
struct BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn final
{
public:
	class UClass*                                 Chosen_Vinyl;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Vinyl_Candidate;                                   // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Random_Roll_Result;                                // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Weight_Sum;                                        // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Vinyl_Pool_Weights;                                // 0x0018(0x0010)(Edit, BlueprintVisible)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_2;        // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B[0x1];                                       // 0x006B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_Array_Get_Item_1;                         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A[0x2];                                       // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item_2;                         // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0090(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValidClass_ReturnValue_1;               // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_3;                         // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn) == 0x000008, "Wrong alignment on BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn");
static_assert(sizeof(BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn) == 0x0000C0, "Wrong size on BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn");
static_assert(offsetof(BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn, Chosen_Vinyl) == 0x000000, "Member 'BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn::Chosen_Vinyl' has a wrong offset!");
static_assert(offsetof(BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn, Vinyl_Candidate) == 0x000008, "Member 'BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn::Vinyl_Candidate' has a wrong offset!");
static_assert(offsetof(BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn, Random_Roll_Result) == 0x000010, "Member 'BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn::Random_Roll_Result' has a wrong offset!");
static_assert(offsetof(BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn, Weight_Sum) == 0x000014, "Member 'BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn::Weight_Sum' has a wrong offset!");
static_assert(offsetof(BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn, Vinyl_Pool_Weights) == 0x000018, "Member 'BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn::Vinyl_Pool_Weights' has a wrong offset!");
static_assert(offsetof(BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn, Temp_bool_True_if_break_was_hit_Variable) == 0x000028, "Member 'BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn, CallFunc_Not_PreBool_ReturnValue) == 0x000030, "Member 'BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn, Temp_int_Loop_Counter_Variable_1) == 0x00003C, "Member 'BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn, CallFunc_Add_IntInt_ReturnValue_1) == 0x000040, "Member 'BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn, Temp_bool_True_if_break_was_hit_Variable_1) == 0x000044, "Member 'BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn, Temp_int_Array_Index_Variable_1) == 0x000048, "Member 'BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn, CallFunc_Not_PreBool_ReturnValue_1) == 0x00004C, "Member 'BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn, Temp_int_Loop_Counter_Variable_2) == 0x000050, "Member 'BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn, Temp_bool_True_if_break_was_hit_Variable_2) == 0x000054, "Member 'BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn::Temp_bool_True_if_break_was_hit_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn, CallFunc_Add_IntInt_ReturnValue_2) == 0x000058, "Member 'BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn, CallFunc_Array_Length_ReturnValue) == 0x00005C, "Member 'BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn, CallFunc_Array_Get_Item) == 0x000060, "Member 'BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000069, "Member 'BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x00006A, "Member 'BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn, Temp_int_Array_Index_Variable_2) == 0x00006C, "Member 'BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn, CallFunc_IsValidClass_ReturnValue) == 0x000078, "Member 'BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn, CallFunc_Greater_IntInt_ReturnValue) == 0x000079, "Member 'BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn, CallFunc_Array_Get_Item_2) == 0x00007C, "Member 'BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn, CallFunc_Add_IntInt_ReturnValue_3) == 0x000080, "Member 'BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn, CallFunc_Array_Length_ReturnValue_1) == 0x000084, "Member 'BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn, CallFunc_Less_IntInt_ReturnValue_1) == 0x000088, "Member 'BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn, CallFunc_BooleanAND_ReturnValue) == 0x000089, "Member 'BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn, K2Node_MakeArray_Array) == 0x000090, "Member 'BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn, CallFunc_IsValidClass_ReturnValue_1) == 0x0000A0, "Member 'BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn::CallFunc_IsValidClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn, CallFunc_RandomInteger_ReturnValue) == 0x0000A4, "Member 'BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn, CallFunc_Array_Length_ReturnValue_2) == 0x0000A8, "Member 'BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn, CallFunc_Array_Get_Item_3) == 0x0000AC, "Member 'BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000B0, "Member 'BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn, CallFunc_Add_IntInt_ReturnValue_4) == 0x0000B4, "Member 'BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn, CallFunc_BooleanAND_ReturnValue_1) == 0x0000B8, "Member 'BP_MementoLootManager_Vinyls_C_Choose_Vinyl_to_Spawn::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

}

