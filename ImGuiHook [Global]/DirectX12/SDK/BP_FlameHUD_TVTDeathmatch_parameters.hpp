#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FlameHUD_TVTDeathmatch

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_FlameHUD_TVTDeathmatch.BP_FlameHUD_TVTDeathmatch_C.ExecuteUbergraph_BP_FlameHUD_TVTDeathmatch
// 0x0028 (0x0028 - 0x0000)
struct BP_FlameHUD_TVTDeathmatch_C_ExecuteUbergraph_BP_FlameHUD_TVTDeathmatch final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FlameHUD_TVTDeathmatch_C_ExecuteUbergraph_BP_FlameHUD_TVTDeathmatch) == 0x000008, "Wrong alignment on BP_FlameHUD_TVTDeathmatch_C_ExecuteUbergraph_BP_FlameHUD_TVTDeathmatch");
static_assert(sizeof(BP_FlameHUD_TVTDeathmatch_C_ExecuteUbergraph_BP_FlameHUD_TVTDeathmatch) == 0x000028, "Wrong size on BP_FlameHUD_TVTDeathmatch_C_ExecuteUbergraph_BP_FlameHUD_TVTDeathmatch");
static_assert(offsetof(BP_FlameHUD_TVTDeathmatch_C_ExecuteUbergraph_BP_FlameHUD_TVTDeathmatch, EntryPoint) == 0x000000, "Member 'BP_FlameHUD_TVTDeathmatch_C_ExecuteUbergraph_BP_FlameHUD_TVTDeathmatch::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_FlameHUD_TVTDeathmatch_C_ExecuteUbergraph_BP_FlameHUD_TVTDeathmatch, CallFunc_IsDedicatedServer_ReturnValue) == 0x000004, "Member 'BP_FlameHUD_TVTDeathmatch_C_ExecuteUbergraph_BP_FlameHUD_TVTDeathmatch::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameHUD_TVTDeathmatch_C_ExecuteUbergraph_BP_FlameHUD_TVTDeathmatch, CallFunc_IsValid_ReturnValue) == 0x000005, "Member 'BP_FlameHUD_TVTDeathmatch_C_ExecuteUbergraph_BP_FlameHUD_TVTDeathmatch::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameHUD_TVTDeathmatch_C_ExecuteUbergraph_BP_FlameHUD_TVTDeathmatch, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_FlameHUD_TVTDeathmatch_C_ExecuteUbergraph_BP_FlameHUD_TVTDeathmatch::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_FlameHUD_TVTDeathmatch_C_ExecuteUbergraph_BP_FlameHUD_TVTDeathmatch, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'BP_FlameHUD_TVTDeathmatch_C_ExecuteUbergraph_BP_FlameHUD_TVTDeathmatch::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlameHUD_TVTDeathmatch_C_ExecuteUbergraph_BP_FlameHUD_TVTDeathmatch, CallFunc_IsValid_ReturnValue_1) == 0x000020, "Member 'BP_FlameHUD_TVTDeathmatch_C_ExecuteUbergraph_BP_FlameHUD_TVTDeathmatch::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlameHUD_TVTDeathmatch_C_ExecuteUbergraph_BP_FlameHUD_TVTDeathmatch, CallFunc_IsValid_ReturnValue_2) == 0x000021, "Member 'BP_FlameHUD_TVTDeathmatch_C_ExecuteUbergraph_BP_FlameHUD_TVTDeathmatch::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

}

