#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_WeaponSelectionWheelSlot

#include "Basic.hpp"

#include "Flame_classes.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_WeaponSelectionWheelSlot.UI_WeaponSelectionWheelSlot_C
// 0x0020 (0x03B8 - 0x0398)
class UUI_WeaponSelectionWheelSlot_C final : public USelectionWheelWeaponSlot
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0398(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextBlock*                             MagazineAmmo;                                      // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Slash;                                             // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TotalAmmo;                                         // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_UI_WeaponSelectionWheelSlot(int32 EntryPoint);
	void OnItemChanged();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Construct();
	void UpdateAmmoVisibility();
	void UpdateAmmoCount();
	void Update();
	void UpdateAmmoIcon();

	void GetAmmoIcon(class UTexture2D** Icon) const;
	void GetAmmoClass(class UClass** AmmoClass) const;
	void GetAmmoCountOffset(struct FVector2D* AmmoCountOffset) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_WeaponSelectionWheelSlot_C">();
	}
	static class UUI_WeaponSelectionWheelSlot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_WeaponSelectionWheelSlot_C>();
	}
};
static_assert(alignof(UUI_WeaponSelectionWheelSlot_C) == 0x000008, "Wrong alignment on UUI_WeaponSelectionWheelSlot_C");
static_assert(sizeof(UUI_WeaponSelectionWheelSlot_C) == 0x0003B8, "Wrong size on UUI_WeaponSelectionWheelSlot_C");
static_assert(offsetof(UUI_WeaponSelectionWheelSlot_C, UberGraphFrame) == 0x000398, "Member 'UUI_WeaponSelectionWheelSlot_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_WeaponSelectionWheelSlot_C, MagazineAmmo) == 0x0003A0, "Member 'UUI_WeaponSelectionWheelSlot_C::MagazineAmmo' has a wrong offset!");
static_assert(offsetof(UUI_WeaponSelectionWheelSlot_C, Slash) == 0x0003A8, "Member 'UUI_WeaponSelectionWheelSlot_C::Slash' has a wrong offset!");
static_assert(offsetof(UUI_WeaponSelectionWheelSlot_C, TotalAmmo) == 0x0003B0, "Member 'UUI_WeaponSelectionWheelSlot_C::TotalAmmo' has a wrong offset!");

}

