#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FootStepComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Flame_structs.hpp"
#include "PhysicsCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_FootStepComponent.BP_FootStepComponent_C.ExecuteUbergraph_BP_FootStepComponent
// 0x0390 (0x0390 - 0x0000)
struct BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFootStepLegIndex                             Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFootStepLegIndex                             Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 K2Node_Event_MeshComp_2;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      K2Node_Event_Animation_2;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EProneStepLimbIndex                           K2Node_Event_ProneStepLimbIndex;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_GetProneStepAudioComponent_ReturnValue;   // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EProneStepLimbIndex                           Temp_byte_Variable_2;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EProneStepLimbIndex                           Temp_byte_Variable_3;                              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldProcessStep_ToProcess;              // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldProcessStep_ToProcess_1;            // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 K2Node_Event_MeshComp_1;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      K2Node_Event_Animation_1;                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              K2Node_Event_SurfaceType;                          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELadderStepLimbIndex                          K2Node_Event_LadderStepLimbIndex;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldProcessStep_ToProcess_2;            // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43[0x5];                                       // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             CallFunc_GetLadderStepSound_Result;                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_GetProneStepAudioComponent_ReturnValue_1; // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue_1;                   // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 K2Node_Event_MeshComp;                             // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      K2Node_Event_Animation;                            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFootStepLegIndex                             K2Node_Event_FootStepLegIndex;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFootStepMovementType                         K2Node_Event_FootStepMovementType;                 // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x2];                                       // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMaterialFrame_Frame;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_GetFootStepAudioComponent_ReturnValue;    // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateFlame*                        K2Node_DynamicCast_AsGame_State_Flame;             // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFootStepLegIndex                             Temp_byte_Variable_4;                              // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanCharacter*                        K2Node_DynamicCast_AsHuman_Character;              // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Select_Default_1;                           // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_2;                           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E8[0x8];                                       // 0x00E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x00F0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_3;                           // 0x0144(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_TraceGround_OutHit;                       // 0x014C(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_TraceGround_ReturnValue;                  // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPhysicalSurface                              CallFunc_GetHitSurfaceType_ReturnValue;            // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DA[0x6];                                      // 0x01DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             CallFunc_GetProneStepSound_Result;                 // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E9[0x3];                                      // 0x01E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x01EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default_4;                           // 0x01F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_5;                           // 0x0204(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20C[0x4];                                      // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue_1;         // 0x0210(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0240(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x024C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0258(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_TraceGround_OutHit_1;                     // 0x0264(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_TraceGround_ReturnValue_1;                // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F1[0x3];                                      // 0x02F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x02F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              CallFunc_GetHitSurfaceType_ReturnValue_1;          // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0301(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0302(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_303[0x1];                                      // 0x0303(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x030C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0318(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0324(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0330(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33C[0x4];                                      // 0x033C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0350(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              CallFunc_BreakHitResult_ShapeSurfaceType;          // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_359[0x3];                                      // 0x0359(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x035C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0364(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x036C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0370(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x037C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             CallFunc_GetFootStepSound_Result;                  // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent) == 0x000010, "Wrong alignment on BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent");
static_assert(sizeof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent) == 0x000390, "Wrong size on BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, EntryPoint) == 0x000000, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, Temp_byte_Variable) == 0x000004, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, Temp_byte_Variable_1) == 0x000005, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, K2Node_Event_MeshComp_2) == 0x000008, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::K2Node_Event_MeshComp_2' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, K2Node_Event_Animation_2) == 0x000010, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::K2Node_Event_Animation_2' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, K2Node_Event_ProneStepLimbIndex) == 0x000018, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::K2Node_Event_ProneStepLimbIndex' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, CallFunc_IsServer_ReturnValue) == 0x000019, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, CallFunc_GetProneStepAudioComponent_ReturnValue) == 0x000020, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::CallFunc_GetProneStepAudioComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, Temp_byte_Variable_2) == 0x000028, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, Temp_byte_Variable_3) == 0x000029, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, CallFunc_ShouldProcessStep_ToProcess) == 0x00002A, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::CallFunc_ShouldProcessStep_ToProcess' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, CallFunc_ShouldProcessStep_ToProcess_1) == 0x00002B, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::CallFunc_ShouldProcessStep_ToProcess_1' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, K2Node_Event_MeshComp_1) == 0x000030, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::K2Node_Event_MeshComp_1' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, K2Node_Event_Animation_1) == 0x000038, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::K2Node_Event_Animation_1' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, K2Node_Event_SurfaceType) == 0x000040, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::K2Node_Event_SurfaceType' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, K2Node_Event_LadderStepLimbIndex) == 0x000041, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::K2Node_Event_LadderStepLimbIndex' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, CallFunc_ShouldProcessStep_ToProcess_2) == 0x000042, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::CallFunc_ShouldProcessStep_ToProcess_2' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, CallFunc_GetLadderStepSound_Result) == 0x000048, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::CallFunc_GetLadderStepSound_Result' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, CallFunc_GetProneStepAudioComponent_ReturnValue_1) == 0x000050, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::CallFunc_GetProneStepAudioComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, Temp_name_Variable) == 0x000058, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, Temp_bool_Variable) == 0x000060, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, CallFunc_IsServer_ReturnValue_1) == 0x000061, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::CallFunc_IsServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, K2Node_Event_MeshComp) == 0x000068, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::K2Node_Event_MeshComp' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, K2Node_Event_Animation) == 0x000070, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::K2Node_Event_Animation' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, K2Node_Event_FootStepLegIndex) == 0x000078, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::K2Node_Event_FootStepLegIndex' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, K2Node_Event_FootStepMovementType) == 0x000079, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::K2Node_Event_FootStepMovementType' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, CallFunc_GetMaterialFrame_Frame) == 0x00007C, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::CallFunc_GetMaterialFrame_Frame' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, CallFunc_GetFootStepAudioComponent_ReturnValue) == 0x000080, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::CallFunc_GetFootStepAudioComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, CallFunc_GetGameState_ReturnValue) == 0x000088, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, CallFunc_IsValid_ReturnValue) == 0x000090, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, K2Node_DynamicCast_AsGame_State_Flame) == 0x000098, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::K2Node_DynamicCast_AsGame_State_Flame' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000A4, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, Temp_byte_Variable_4) == 0x0000B0, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, K2Node_Select_Default) == 0x0000B4, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, CallFunc_GetOwner_ReturnValue) == 0x0000B8, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, K2Node_DynamicCast_AsHuman_Character) == 0x0000C0, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::K2Node_DynamicCast_AsHuman_Character' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, K2Node_DynamicCast_bSuccess_1) == 0x0000C8, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, K2Node_Select_Default_1) == 0x0000CC, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, K2Node_Select_Default_2) == 0x0000D8, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, Temp_name_Variable_1) == 0x0000E0, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, CallFunc_GetSocketTransform_ReturnValue) == 0x0000F0, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, CallFunc_BreakTransform_Location) == 0x000120, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, CallFunc_BreakTransform_Rotation) == 0x00012C, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, CallFunc_BreakTransform_Scale) == 0x000138, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, K2Node_Select_Default_3) == 0x000144, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, CallFunc_TraceGround_OutHit) == 0x00014C, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::CallFunc_TraceGround_OutHit' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, CallFunc_TraceGround_ReturnValue) == 0x0001D8, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::CallFunc_TraceGround_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, CallFunc_GetHitSurfaceType_ReturnValue) == 0x0001D9, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::CallFunc_GetHitSurfaceType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, CallFunc_GetProneStepSound_Result) == 0x0001E0, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::CallFunc_GetProneStepSound_Result' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, CallFunc_IsValid_ReturnValue_1) == 0x0001E8, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0001EC, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, K2Node_Select_Default_4) == 0x0001F8, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, K2Node_Select_Default_5) == 0x000204, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, CallFunc_GetSocketTransform_ReturnValue_1) == 0x000210, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::CallFunc_GetSocketTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, CallFunc_BreakTransform_Location_1) == 0x000240, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, CallFunc_BreakTransform_Rotation_1) == 0x00024C, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, CallFunc_BreakTransform_Scale_1) == 0x000258, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, CallFunc_TraceGround_OutHit_1) == 0x000264, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::CallFunc_TraceGround_OutHit_1' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, CallFunc_TraceGround_ReturnValue_1) == 0x0002F0, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::CallFunc_TraceGround_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, CallFunc_GetForwardVector_ReturnValue) == 0x0002F4, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, CallFunc_GetHitSurfaceType_ReturnValue_1) == 0x000300, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::CallFunc_GetHitSurfaceType_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, CallFunc_BreakHitResult_bBlockingHit) == 0x000301, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, CallFunc_BreakHitResult_bInitialOverlap) == 0x000302, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, CallFunc_BreakHitResult_Time) == 0x000304, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, CallFunc_BreakHitResult_Distance) == 0x000308, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, CallFunc_BreakHitResult_Location) == 0x00030C, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, CallFunc_BreakHitResult_ImpactPoint) == 0x000318, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, CallFunc_BreakHitResult_Normal) == 0x000324, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, CallFunc_BreakHitResult_ImpactNormal) == 0x000330, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, CallFunc_BreakHitResult_PhysMat) == 0x000340, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, CallFunc_BreakHitResult_HitActor) == 0x000348, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, CallFunc_BreakHitResult_HitComponent) == 0x000350, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, CallFunc_BreakHitResult_ShapeSurfaceType) == 0x000358, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::CallFunc_BreakHitResult_ShapeSurfaceType' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, CallFunc_BreakHitResult_HitBoneName) == 0x00035C, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, CallFunc_BreakHitResult_HitItem) == 0x000364, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, CallFunc_BreakHitResult_ElementIndex) == 0x000368, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, CallFunc_BreakHitResult_FaceIndex) == 0x00036C, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, CallFunc_BreakHitResult_TraceStart) == 0x000370, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, CallFunc_BreakHitResult_TraceEnd) == 0x00037C, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent, CallFunc_GetFootStepSound_Result) == 0x000388, "Member 'BP_FootStepComponent_C_ExecuteUbergraph_BP_FootStepComponent::CallFunc_GetFootStepSound_Result' has a wrong offset!");

// Function BP_FootStepComponent.BP_FootStepComponent_C.OnFootStep
// 0x0018 (0x0018 - 0x0000)
struct BP_FootStepComponent_C_OnFootStep final
{
public:
	class USkeletalMeshComponent*                 MeshComp;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Animation;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFootStepLegIndex                             FootStepLegIndex;                                  // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFootStepMovementType                         FootStepMovementType;                              // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FootStepComponent_C_OnFootStep) == 0x000008, "Wrong alignment on BP_FootStepComponent_C_OnFootStep");
static_assert(sizeof(BP_FootStepComponent_C_OnFootStep) == 0x000018, "Wrong size on BP_FootStepComponent_C_OnFootStep");
static_assert(offsetof(BP_FootStepComponent_C_OnFootStep, MeshComp) == 0x000000, "Member 'BP_FootStepComponent_C_OnFootStep::MeshComp' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_OnFootStep, Animation) == 0x000008, "Member 'BP_FootStepComponent_C_OnFootStep::Animation' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_OnFootStep, FootStepLegIndex) == 0x000010, "Member 'BP_FootStepComponent_C_OnFootStep::FootStepLegIndex' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_OnFootStep, FootStepMovementType) == 0x000011, "Member 'BP_FootStepComponent_C_OnFootStep::FootStepMovementType' has a wrong offset!");

// Function BP_FootStepComponent.BP_FootStepComponent_C.OnLadderStep
// 0x0018 (0x0018 - 0x0000)
struct BP_FootStepComponent_C_OnLadderStep final
{
public:
	class USkeletalMeshComponent*                 MeshComp;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Animation;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              SurfaceType;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELadderStepLimbIndex                          LadderStepLimbIndex;                               // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FootStepComponent_C_OnLadderStep) == 0x000008, "Wrong alignment on BP_FootStepComponent_C_OnLadderStep");
static_assert(sizeof(BP_FootStepComponent_C_OnLadderStep) == 0x000018, "Wrong size on BP_FootStepComponent_C_OnLadderStep");
static_assert(offsetof(BP_FootStepComponent_C_OnLadderStep, MeshComp) == 0x000000, "Member 'BP_FootStepComponent_C_OnLadderStep::MeshComp' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_OnLadderStep, Animation) == 0x000008, "Member 'BP_FootStepComponent_C_OnLadderStep::Animation' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_OnLadderStep, SurfaceType) == 0x000010, "Member 'BP_FootStepComponent_C_OnLadderStep::SurfaceType' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_OnLadderStep, LadderStepLimbIndex) == 0x000011, "Member 'BP_FootStepComponent_C_OnLadderStep::LadderStepLimbIndex' has a wrong offset!");

// Function BP_FootStepComponent.BP_FootStepComponent_C.OnProneStep
// 0x0018 (0x0018 - 0x0000)
struct BP_FootStepComponent_C_OnProneStep final
{
public:
	class USkeletalMeshComponent*                 MeshComp;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Animation;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EProneStepLimbIndex                           ProneStepLimbIndex;                                // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FootStepComponent_C_OnProneStep) == 0x000008, "Wrong alignment on BP_FootStepComponent_C_OnProneStep");
static_assert(sizeof(BP_FootStepComponent_C_OnProneStep) == 0x000018, "Wrong size on BP_FootStepComponent_C_OnProneStep");
static_assert(offsetof(BP_FootStepComponent_C_OnProneStep, MeshComp) == 0x000000, "Member 'BP_FootStepComponent_C_OnProneStep::MeshComp' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_OnProneStep, Animation) == 0x000008, "Member 'BP_FootStepComponent_C_OnProneStep::Animation' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_OnProneStep, ProneStepLimbIndex) == 0x000010, "Member 'BP_FootStepComponent_C_OnProneStep::ProneStepLimbIndex' has a wrong offset!");

// Function BP_FootStepComponent.BP_FootStepComponent_C.GetMaterialFrame
// 0x0030 (0x0030 - 0x0000)
struct BP_FootStepComponent_C_GetMaterialFrame final
{
public:
	EFootStepLegIndex                             FootStepLegIndex;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Frame;                                             // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFootStepLegIndex                             Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_Select_Default;                             // 0x0010(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FootStepComponent_C_GetMaterialFrame) == 0x000008, "Wrong alignment on BP_FootStepComponent_C_GetMaterialFrame");
static_assert(sizeof(BP_FootStepComponent_C_GetMaterialFrame) == 0x000030, "Wrong size on BP_FootStepComponent_C_GetMaterialFrame");
static_assert(offsetof(BP_FootStepComponent_C_GetMaterialFrame, FootStepLegIndex) == 0x000000, "Member 'BP_FootStepComponent_C_GetMaterialFrame::FootStepLegIndex' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetMaterialFrame, Frame) == 0x000004, "Member 'BP_FootStepComponent_C_GetMaterialFrame::Frame' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetMaterialFrame, Temp_byte_Variable) == 0x000008, "Member 'BP_FootStepComponent_C_GetMaterialFrame::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetMaterialFrame, K2Node_Select_Default) == 0x000010, "Member 'BP_FootStepComponent_C_GetMaterialFrame::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetMaterialFrame, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000020, "Member 'BP_FootStepComponent_C_GetMaterialFrame::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetMaterialFrame, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_FootStepComponent_C_GetMaterialFrame::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetMaterialFrame, CallFunc_RandomInteger_ReturnValue) == 0x000028, "Member 'BP_FootStepComponent_C_GetMaterialFrame::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetMaterialFrame, CallFunc_Array_Get_Item) == 0x00002C, "Member 'BP_FootStepComponent_C_GetMaterialFrame::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_FootStepComponent.BP_FootStepComponent_C.TraceGround
// 0x0178 (0x0178 - 0x0000)
struct BP_FootStepComponent_C_TraceGround final
{
public:
	struct FVector                                LocationOffset;                                    // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MeshSocketLocation;                                // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             OutHit;                                            // 0x0018(0x008C)(Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00A4(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x00A8(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x00E8(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0175(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FootStepComponent_C_TraceGround) == 0x000008, "Wrong alignment on BP_FootStepComponent_C_TraceGround");
static_assert(sizeof(BP_FootStepComponent_C_TraceGround) == 0x000178, "Wrong size on BP_FootStepComponent_C_TraceGround");
static_assert(offsetof(BP_FootStepComponent_C_TraceGround, LocationOffset) == 0x000000, "Member 'BP_FootStepComponent_C_TraceGround::LocationOffset' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_TraceGround, MeshSocketLocation) == 0x00000C, "Member 'BP_FootStepComponent_C_TraceGround::MeshSocketLocation' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_TraceGround, OutHit) == 0x000018, "Member 'BP_FootStepComponent_C_TraceGround::OutHit' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_TraceGround, ReturnValue) == 0x0000A4, "Member 'BP_FootStepComponent_C_TraceGround::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_TraceGround, Temp_object_Variable) == 0x0000A8, "Member 'BP_FootStepComponent_C_TraceGround::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_TraceGround, CallFunc_Add_VectorVector_ReturnValue) == 0x0000B8, "Member 'BP_FootStepComponent_C_TraceGround::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_TraceGround, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000C4, "Member 'BP_FootStepComponent_C_TraceGround::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_TraceGround, CallFunc_Add_VectorVector_ReturnValue_2) == 0x0000D0, "Member 'BP_FootStepComponent_C_TraceGround::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_TraceGround, CallFunc_GetPlayerPawn_ReturnValue) == 0x0000E0, "Member 'BP_FootStepComponent_C_TraceGround::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_TraceGround, CallFunc_LineTraceSingle_OutHit) == 0x0000E8, "Member 'BP_FootStepComponent_C_TraceGround::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_TraceGround, CallFunc_LineTraceSingle_ReturnValue) == 0x000174, "Member 'BP_FootStepComponent_C_TraceGround::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_TraceGround, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000175, "Member 'BP_FootStepComponent_C_TraceGround::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_FootStepComponent.BP_FootStepComponent_C.SpawnDecal
// 0x0158 (0x0158 - 0x0000)
struct BP_FootStepComponent_C_SpawnDecal final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Normal;                                            // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Direction;                                         // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OrientationCoef;                                   // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FrameIndex;                                        // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              SurfaceType;                                       // 0x002C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable;                              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_1;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_2;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_3;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_4;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_5;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_6;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_7;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_8;                            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_9;                            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_10;                           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_11;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_12;                           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_13;                           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_14;                           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_15;                           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_16;                           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_17;                           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_18;                           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_19;                           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_20;                           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_21;                           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_22;                           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_23;                           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_24;                           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_25;                           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_26;                           // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_27;                           // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_28;                           // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_29;                           // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_30;                           // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_31;                           // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_32;                           // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              Temp_byte_Variable;                                // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDecalComponent*                        CallFunc_AddFootPrint_ReturnValue;                 // 0x0150(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FootStepComponent_C_SpawnDecal) == 0x000008, "Wrong alignment on BP_FootStepComponent_C_SpawnDecal");
static_assert(sizeof(BP_FootStepComponent_C_SpawnDecal) == 0x000158, "Wrong size on BP_FootStepComponent_C_SpawnDecal");
static_assert(offsetof(BP_FootStepComponent_C_SpawnDecal, Location) == 0x000000, "Member 'BP_FootStepComponent_C_SpawnDecal::Location' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SpawnDecal, Normal) == 0x00000C, "Member 'BP_FootStepComponent_C_SpawnDecal::Normal' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SpawnDecal, Direction) == 0x000018, "Member 'BP_FootStepComponent_C_SpawnDecal::Direction' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SpawnDecal, OrientationCoef) == 0x000024, "Member 'BP_FootStepComponent_C_SpawnDecal::OrientationCoef' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SpawnDecal, FrameIndex) == 0x000028, "Member 'BP_FootStepComponent_C_SpawnDecal::FrameIndex' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SpawnDecal, SurfaceType) == 0x00002C, "Member 'BP_FootStepComponent_C_SpawnDecal::SurfaceType' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SpawnDecal, Temp_object_Variable) == 0x000030, "Member 'BP_FootStepComponent_C_SpawnDecal::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SpawnDecal, Temp_object_Variable_1) == 0x000038, "Member 'BP_FootStepComponent_C_SpawnDecal::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SpawnDecal, Temp_object_Variable_2) == 0x000040, "Member 'BP_FootStepComponent_C_SpawnDecal::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SpawnDecal, Temp_object_Variable_3) == 0x000048, "Member 'BP_FootStepComponent_C_SpawnDecal::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SpawnDecal, Temp_object_Variable_4) == 0x000050, "Member 'BP_FootStepComponent_C_SpawnDecal::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SpawnDecal, Temp_object_Variable_5) == 0x000058, "Member 'BP_FootStepComponent_C_SpawnDecal::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SpawnDecal, Temp_object_Variable_6) == 0x000060, "Member 'BP_FootStepComponent_C_SpawnDecal::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SpawnDecal, Temp_object_Variable_7) == 0x000068, "Member 'BP_FootStepComponent_C_SpawnDecal::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SpawnDecal, Temp_object_Variable_8) == 0x000070, "Member 'BP_FootStepComponent_C_SpawnDecal::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SpawnDecal, Temp_object_Variable_9) == 0x000078, "Member 'BP_FootStepComponent_C_SpawnDecal::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SpawnDecal, Temp_object_Variable_10) == 0x000080, "Member 'BP_FootStepComponent_C_SpawnDecal::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SpawnDecal, Temp_object_Variable_11) == 0x000088, "Member 'BP_FootStepComponent_C_SpawnDecal::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SpawnDecal, Temp_object_Variable_12) == 0x000090, "Member 'BP_FootStepComponent_C_SpawnDecal::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SpawnDecal, Temp_object_Variable_13) == 0x000098, "Member 'BP_FootStepComponent_C_SpawnDecal::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SpawnDecal, Temp_object_Variable_14) == 0x0000A0, "Member 'BP_FootStepComponent_C_SpawnDecal::Temp_object_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SpawnDecal, Temp_object_Variable_15) == 0x0000A8, "Member 'BP_FootStepComponent_C_SpawnDecal::Temp_object_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SpawnDecal, Temp_object_Variable_16) == 0x0000B0, "Member 'BP_FootStepComponent_C_SpawnDecal::Temp_object_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SpawnDecal, Temp_object_Variable_17) == 0x0000B8, "Member 'BP_FootStepComponent_C_SpawnDecal::Temp_object_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SpawnDecal, Temp_object_Variable_18) == 0x0000C0, "Member 'BP_FootStepComponent_C_SpawnDecal::Temp_object_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SpawnDecal, Temp_object_Variable_19) == 0x0000C8, "Member 'BP_FootStepComponent_C_SpawnDecal::Temp_object_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SpawnDecal, Temp_object_Variable_20) == 0x0000D0, "Member 'BP_FootStepComponent_C_SpawnDecal::Temp_object_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SpawnDecal, Temp_object_Variable_21) == 0x0000D8, "Member 'BP_FootStepComponent_C_SpawnDecal::Temp_object_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SpawnDecal, Temp_object_Variable_22) == 0x0000E0, "Member 'BP_FootStepComponent_C_SpawnDecal::Temp_object_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SpawnDecal, Temp_object_Variable_23) == 0x0000E8, "Member 'BP_FootStepComponent_C_SpawnDecal::Temp_object_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SpawnDecal, Temp_object_Variable_24) == 0x0000F0, "Member 'BP_FootStepComponent_C_SpawnDecal::Temp_object_Variable_24' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SpawnDecal, Temp_object_Variable_25) == 0x0000F8, "Member 'BP_FootStepComponent_C_SpawnDecal::Temp_object_Variable_25' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SpawnDecal, Temp_object_Variable_26) == 0x000100, "Member 'BP_FootStepComponent_C_SpawnDecal::Temp_object_Variable_26' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SpawnDecal, Temp_object_Variable_27) == 0x000108, "Member 'BP_FootStepComponent_C_SpawnDecal::Temp_object_Variable_27' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SpawnDecal, Temp_object_Variable_28) == 0x000110, "Member 'BP_FootStepComponent_C_SpawnDecal::Temp_object_Variable_28' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SpawnDecal, Temp_object_Variable_29) == 0x000118, "Member 'BP_FootStepComponent_C_SpawnDecal::Temp_object_Variable_29' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SpawnDecal, Temp_object_Variable_30) == 0x000120, "Member 'BP_FootStepComponent_C_SpawnDecal::Temp_object_Variable_30' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SpawnDecal, Temp_object_Variable_31) == 0x000128, "Member 'BP_FootStepComponent_C_SpawnDecal::Temp_object_Variable_31' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SpawnDecal, Temp_object_Variable_32) == 0x000130, "Member 'BP_FootStepComponent_C_SpawnDecal::Temp_object_Variable_32' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SpawnDecal, Temp_byte_Variable) == 0x000138, "Member 'BP_FootStepComponent_C_SpawnDecal::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SpawnDecal, K2Node_Select_Default) == 0x000140, "Member 'BP_FootStepComponent_C_SpawnDecal::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SpawnDecal, CallFunc_IsValid_ReturnValue) == 0x000148, "Member 'BP_FootStepComponent_C_SpawnDecal::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SpawnDecal, CallFunc_AddFootPrint_ReturnValue) == 0x000150, "Member 'BP_FootStepComponent_C_SpawnDecal::CallFunc_AddFootPrint_ReturnValue' has a wrong offset!");

// Function BP_FootStepComponent.BP_FootStepComponent_C.SetWaterParameters
// 0x0040 (0x0040 - 0x0000)
struct BP_FootStepComponent_C_SetWaterParameters final
{
public:
	class UAudioComponent*                        Audio_Component;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTargetWaterSoakIndex_SoakIndex;        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetTargetWaterSoakIndex_ShouldInterpolate; // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetWaterDetails_bIsInWater;               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWaterDetails_Depth;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetWaterDetails_Flow;                     // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWaterDetails_MaxDepth;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FootStepComponent_C_SetWaterParameters) == 0x000008, "Wrong alignment on BP_FootStepComponent_C_SetWaterParameters");
static_assert(sizeof(BP_FootStepComponent_C_SetWaterParameters) == 0x000040, "Wrong size on BP_FootStepComponent_C_SetWaterParameters");
static_assert(offsetof(BP_FootStepComponent_C_SetWaterParameters, Audio_Component) == 0x000000, "Member 'BP_FootStepComponent_C_SetWaterParameters::Audio_Component' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SetWaterParameters, Temp_float_Variable) == 0x000008, "Member 'BP_FootStepComponent_C_SetWaterParameters::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SetWaterParameters, CallFunc_GetTargetWaterSoakIndex_SoakIndex) == 0x00000C, "Member 'BP_FootStepComponent_C_SetWaterParameters::CallFunc_GetTargetWaterSoakIndex_SoakIndex' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SetWaterParameters, CallFunc_GetTargetWaterSoakIndex_ShouldInterpolate) == 0x000010, "Member 'BP_FootStepComponent_C_SetWaterParameters::CallFunc_GetTargetWaterSoakIndex_ShouldInterpolate' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SetWaterParameters, Temp_bool_Variable) == 0x000011, "Member 'BP_FootStepComponent_C_SetWaterParameters::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SetWaterParameters, CallFunc_FInterpTo_ReturnValue) == 0x000014, "Member 'BP_FootStepComponent_C_SetWaterParameters::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SetWaterParameters, Temp_bool_Variable_1) == 0x000018, "Member 'BP_FootStepComponent_C_SetWaterParameters::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SetWaterParameters, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000019, "Member 'BP_FootStepComponent_C_SetWaterParameters::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SetWaterParameters, K2Node_Select_Default) == 0x00001C, "Member 'BP_FootStepComponent_C_SetWaterParameters::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SetWaterParameters, K2Node_Select_Default_1) == 0x000020, "Member 'BP_FootStepComponent_C_SetWaterParameters::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SetWaterParameters, CallFunc_GetWaterDetails_bIsInWater) == 0x000024, "Member 'BP_FootStepComponent_C_SetWaterParameters::CallFunc_GetWaterDetails_bIsInWater' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SetWaterParameters, CallFunc_GetWaterDetails_Depth) == 0x000028, "Member 'BP_FootStepComponent_C_SetWaterParameters::CallFunc_GetWaterDetails_Depth' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SetWaterParameters, CallFunc_GetWaterDetails_Flow) == 0x00002C, "Member 'BP_FootStepComponent_C_SetWaterParameters::CallFunc_GetWaterDetails_Flow' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SetWaterParameters, CallFunc_GetWaterDetails_MaxDepth) == 0x000038, "Member 'BP_FootStepComponent_C_SetWaterParameters::CallFunc_GetWaterDetails_MaxDepth' has a wrong offset!");

// Function BP_FootStepComponent.BP_FootStepComponent_C.GetFootStepSound
// 0x05E0 (0x05E0 - 0x0000)
struct BP_FootStepComponent_C_GetFootStepSound final
{
public:
	EPhysicalSurface                              SurfaceType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFootStepMovementType                         FootStepMovementType;                              // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Result;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              PhysicalSurfaceType;                               // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable;                              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable_1;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_2;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_3;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_4;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_5;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_6;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_7;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_8;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_9;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_10;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_11;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_12;                           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_13;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_14;                           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_15;                           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_16;                           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_17;                           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_18;                           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_19;                           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_20;                           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_21;                           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_22;                           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_23;                           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_24;                           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_25;                           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              Temp_byte_Variable;                                // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable_26;                           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_27;                           // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_28;                           // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_29;                           // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_30;                           // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_31;                           // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_32;                           // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_33;                           // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_34;                           // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_35;                           // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_36;                           // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_37;                           // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_38;                           // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_39;                           // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_40;                           // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_41;                           // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_42;                           // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_43;                           // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_44;                           // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_45;                           // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_46;                           // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_47;                           // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_48;                           // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_49;                           // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_50;                           // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_51;                           // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_52;                           // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_53;                           // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_54;                           // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_55;                           // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_56;                           // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_57;                           // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_58;                           // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              Temp_byte_Variable_1;                              // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_201[0x7];                                      // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable_59;                           // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_60;                           // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_61;                           // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_62;                           // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_63;                           // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_64;                           // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_65;                           // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_66;                           // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_67;                           // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_68;                           // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_69;                           // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_70;                           // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_71;                           // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_72;                           // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_73;                           // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_74;                           // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_75;                           // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_76;                           // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_77;                           // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_78;                           // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_79;                           // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_80;                           // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_81;                           // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_82;                           // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_83;                           // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_84;                           // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_85;                           // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_86;                           // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_87;                           // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_88;                           // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_89;                           // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_90;                           // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_91;                           // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              Temp_byte_Variable_2;                              // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_311[0x7];                                      // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable_92;                           // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_93;                           // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_94;                           // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_95;                           // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_96;                           // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_97;                           // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_98;                           // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_99;                           // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_100;                          // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_101;                          // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_102;                          // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_103;                          // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_104;                          // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_105;                          // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_106;                          // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_107;                          // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_108;                          // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_109;                          // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_110;                          // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_111;                          // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_112;                          // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_113;                          // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_114;                          // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_115;                          // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_116;                          // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_117;                          // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_118;                          // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_119;                          // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_120;                          // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_121;                          // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_122;                          // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_123;                          // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_124;                          // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              Temp_byte_Variable_3;                              // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_421[0x7];                                      // 0x0421(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable_125;                          // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_126;                          // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_127;                          // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_128;                          // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_129;                          // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_130;                          // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_131;                          // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_132;                          // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_133;                          // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_134;                          // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_135;                          // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_136;                          // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_137;                          // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_138;                          // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_139;                          // 0x0498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_140;                          // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_141;                          // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_142;                          // 0x04B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_143;                          // 0x04B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_144;                          // 0x04C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_145;                          // 0x04C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_146;                          // 0x04D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_147;                          // 0x04D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_148;                          // 0x04E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_149;                          // 0x04E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_150;                          // 0x04F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_151;                          // 0x04F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_152;                          // 0x0500(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_153;                          // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_154;                          // 0x0510(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_155;                          // 0x0518(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_156;                          // 0x0520(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_157;                          // 0x0528(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPawnMovementComponent*                 CallFunc_GetMovementComponent_ReturnValue;         // 0x0530(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetWaterDetails_bIsInWater;               // 0x0538(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_539[0x3];                                      // 0x0539(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWaterDetails_Depth;                    // 0x053C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetWaterDetails_Flow;                     // 0x0540(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWaterDetails_MaxDepth;                 // 0x054C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0550(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_551[0x3];                                      // 0x0551(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0554(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EStance                                       CallFunc_GetStance_ReturnValue;                    // 0x0558(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_559[0x7];                                      // 0x0559(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable_158;                          // 0x0560(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0568(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_569[0x7];                                      // 0x0569(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable_159;                          // 0x0570(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_160;                          // 0x0578(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_Select_Default;                             // 0x0580(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_Select_Default_1;                           // 0x0588(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_Select_Default_2;                           // 0x0590(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_Select_Default_3;                           // 0x0598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_161;                          // 0x05A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x05A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AC[0x4];                                      // 0x05AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable_162;                          // 0x05B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x05B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B9[0x7];                                      // 0x05B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable_163;                          // 0x05C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_164;                          // 0x05C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              Temp_byte_Variable_4;                              // 0x05D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D1[0x7];                                      // 0x05D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_Select_Default_4;                           // 0x05D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FootStepComponent_C_GetFootStepSound) == 0x000008, "Wrong alignment on BP_FootStepComponent_C_GetFootStepSound");
static_assert(sizeof(BP_FootStepComponent_C_GetFootStepSound) == 0x0005E0, "Wrong size on BP_FootStepComponent_C_GetFootStepSound");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, SurfaceType) == 0x000000, "Member 'BP_FootStepComponent_C_GetFootStepSound::SurfaceType' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, FootStepMovementType) == 0x000001, "Member 'BP_FootStepComponent_C_GetFootStepSound::FootStepMovementType' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Result) == 0x000008, "Member 'BP_FootStepComponent_C_GetFootStepSound::Result' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, PhysicalSurfaceType) == 0x000010, "Member 'BP_FootStepComponent_C_GetFootStepSound::PhysicalSurfaceType' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable) == 0x000018, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, K2Node_SwitchEnum_CmpSuccess) == 0x000020, "Member 'BP_FootStepComponent_C_GetFootStepSound::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_1) == 0x000028, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_2) == 0x000030, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_3) == 0x000038, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_4) == 0x000040, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_5) == 0x000048, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_6) == 0x000050, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_7) == 0x000058, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_8) == 0x000060, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_9) == 0x000068, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_10) == 0x000070, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_11) == 0x000078, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_12) == 0x000080, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_13) == 0x000088, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_14) == 0x000090, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_15) == 0x000098, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_16) == 0x0000A0, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_17) == 0x0000A8, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_18) == 0x0000B0, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_19) == 0x0000B8, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_20) == 0x0000C0, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_21) == 0x0000C8, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_22) == 0x0000D0, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_23) == 0x0000D8, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_24) == 0x0000E0, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_24' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_25) == 0x0000E8, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_25' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_byte_Variable) == 0x0000F0, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_26) == 0x0000F8, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_26' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_27) == 0x000100, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_27' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_28) == 0x000108, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_28' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_29) == 0x000110, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_29' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_30) == 0x000118, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_30' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_31) == 0x000120, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_31' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_32) == 0x000128, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_32' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_33) == 0x000130, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_33' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_34) == 0x000138, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_34' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_35) == 0x000140, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_35' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_36) == 0x000148, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_36' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_37) == 0x000150, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_37' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_38) == 0x000158, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_38' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_39) == 0x000160, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_39' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_40) == 0x000168, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_40' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_41) == 0x000170, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_41' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_42) == 0x000178, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_42' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_43) == 0x000180, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_43' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_44) == 0x000188, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_44' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_45) == 0x000190, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_45' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_46) == 0x000198, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_46' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_47) == 0x0001A0, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_47' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_48) == 0x0001A8, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_48' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_49) == 0x0001B0, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_49' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_50) == 0x0001B8, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_50' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_51) == 0x0001C0, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_51' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_52) == 0x0001C8, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_52' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_53) == 0x0001D0, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_53' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_54) == 0x0001D8, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_54' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_55) == 0x0001E0, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_55' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_56) == 0x0001E8, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_56' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_57) == 0x0001F0, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_57' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_58) == 0x0001F8, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_58' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_byte_Variable_1) == 0x000200, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_59) == 0x000208, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_59' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_60) == 0x000210, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_60' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_61) == 0x000218, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_61' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_62) == 0x000220, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_62' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_63) == 0x000228, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_63' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_64) == 0x000230, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_64' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_65) == 0x000238, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_65' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_66) == 0x000240, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_66' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_67) == 0x000248, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_67' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_68) == 0x000250, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_68' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_69) == 0x000258, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_69' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_70) == 0x000260, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_70' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_71) == 0x000268, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_71' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_72) == 0x000270, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_72' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_73) == 0x000278, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_73' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_74) == 0x000280, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_74' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_75) == 0x000288, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_75' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_76) == 0x000290, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_76' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_77) == 0x000298, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_77' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_78) == 0x0002A0, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_78' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_79) == 0x0002A8, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_79' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_80) == 0x0002B0, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_80' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_81) == 0x0002B8, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_81' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_82) == 0x0002C0, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_82' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_83) == 0x0002C8, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_83' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_84) == 0x0002D0, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_84' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_85) == 0x0002D8, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_85' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_86) == 0x0002E0, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_86' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_87) == 0x0002E8, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_87' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_88) == 0x0002F0, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_88' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_89) == 0x0002F8, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_89' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_90) == 0x000300, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_90' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_91) == 0x000308, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_91' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_byte_Variable_2) == 0x000310, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_92) == 0x000318, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_92' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_93) == 0x000320, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_93' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_94) == 0x000328, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_94' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_95) == 0x000330, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_95' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_96) == 0x000338, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_96' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_97) == 0x000340, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_97' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_98) == 0x000348, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_98' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_99) == 0x000350, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_99' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_100) == 0x000358, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_100' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_101) == 0x000360, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_101' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_102) == 0x000368, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_102' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_103) == 0x000370, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_103' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_104) == 0x000378, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_104' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_105) == 0x000380, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_105' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_106) == 0x000388, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_106' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_107) == 0x000390, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_107' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_108) == 0x000398, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_108' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_109) == 0x0003A0, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_109' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_110) == 0x0003A8, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_110' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_111) == 0x0003B0, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_111' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_112) == 0x0003B8, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_112' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_113) == 0x0003C0, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_113' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_114) == 0x0003C8, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_114' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_115) == 0x0003D0, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_115' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_116) == 0x0003D8, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_116' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_117) == 0x0003E0, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_117' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_118) == 0x0003E8, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_118' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_119) == 0x0003F0, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_119' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_120) == 0x0003F8, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_120' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_121) == 0x000400, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_121' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_122) == 0x000408, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_122' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_123) == 0x000410, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_123' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_124) == 0x000418, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_124' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_byte_Variable_3) == 0x000420, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_125) == 0x000428, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_125' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_126) == 0x000430, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_126' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_127) == 0x000438, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_127' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_128) == 0x000440, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_128' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_129) == 0x000448, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_129' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_130) == 0x000450, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_130' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_131) == 0x000458, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_131' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_132) == 0x000460, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_132' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_133) == 0x000468, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_133' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_134) == 0x000470, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_134' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_135) == 0x000478, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_135' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_136) == 0x000480, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_136' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_137) == 0x000488, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_137' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_138) == 0x000490, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_138' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_139) == 0x000498, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_139' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_140) == 0x0004A0, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_140' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_141) == 0x0004A8, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_141' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_142) == 0x0004B0, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_142' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_143) == 0x0004B8, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_143' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_144) == 0x0004C0, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_144' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_145) == 0x0004C8, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_145' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_146) == 0x0004D0, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_146' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_147) == 0x0004D8, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_147' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_148) == 0x0004E0, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_148' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_149) == 0x0004E8, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_149' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_150) == 0x0004F0, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_150' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_151) == 0x0004F8, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_151' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_152) == 0x000500, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_152' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_153) == 0x000508, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_153' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_154) == 0x000510, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_154' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_155) == 0x000518, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_155' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_156) == 0x000520, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_156' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_157) == 0x000528, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_157' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, CallFunc_GetMovementComponent_ReturnValue) == 0x000530, "Member 'BP_FootStepComponent_C_GetFootStepSound::CallFunc_GetMovementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, CallFunc_GetWaterDetails_bIsInWater) == 0x000538, "Member 'BP_FootStepComponent_C_GetFootStepSound::CallFunc_GetWaterDetails_bIsInWater' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, CallFunc_GetWaterDetails_Depth) == 0x00053C, "Member 'BP_FootStepComponent_C_GetFootStepSound::CallFunc_GetWaterDetails_Depth' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, CallFunc_GetWaterDetails_Flow) == 0x000540, "Member 'BP_FootStepComponent_C_GetFootStepSound::CallFunc_GetWaterDetails_Flow' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, CallFunc_GetWaterDetails_MaxDepth) == 0x00054C, "Member 'BP_FootStepComponent_C_GetFootStepSound::CallFunc_GetWaterDetails_MaxDepth' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000550, "Member 'BP_FootStepComponent_C_GetFootStepSound::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, CallFunc_VSize_ReturnValue) == 0x000554, "Member 'BP_FootStepComponent_C_GetFootStepSound::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, CallFunc_GetStance_ReturnValue) == 0x000558, "Member 'BP_FootStepComponent_C_GetFootStepSound::CallFunc_GetStance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_158) == 0x000560, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_158' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, K2Node_SwitchEnum_CmpSuccess_1) == 0x000568, "Member 'BP_FootStepComponent_C_GetFootStepSound::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_159) == 0x000570, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_159' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_160) == 0x000578, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_160' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, K2Node_Select_Default) == 0x000580, "Member 'BP_FootStepComponent_C_GetFootStepSound::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, K2Node_Select_Default_1) == 0x000588, "Member 'BP_FootStepComponent_C_GetFootStepSound::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, K2Node_Select_Default_2) == 0x000590, "Member 'BP_FootStepComponent_C_GetFootStepSound::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, K2Node_Select_Default_3) == 0x000598, "Member 'BP_FootStepComponent_C_GetFootStepSound::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_161) == 0x0005A0, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_161' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, CallFunc_MakeLiteralFloat_ReturnValue) == 0x0005A8, "Member 'BP_FootStepComponent_C_GetFootStepSound::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_162) == 0x0005B0, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_162' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0005B8, "Member 'BP_FootStepComponent_C_GetFootStepSound::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_163) == 0x0005C0, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_163' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_object_Variable_164) == 0x0005C8, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_object_Variable_164' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, Temp_byte_Variable_4) == 0x0005D0, "Member 'BP_FootStepComponent_C_GetFootStepSound::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepSound, K2Node_Select_Default_4) == 0x0005D8, "Member 'BP_FootStepComponent_C_GetFootStepSound::K2Node_Select_Default_4' has a wrong offset!");

// Function BP_FootStepComponent.BP_FootStepComponent_C.SetVolumeAndPitch
// 0x0010 (0x0010 - 0x0000)
struct BP_FootStepComponent_C_SetVolumeAndPitch final
{
public:
	class UAudioComponent*                        AudioComponent;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMovementSoundProperties_VolumeMultiplier; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMovementSoundProperties_PitchMultiplier; // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FootStepComponent_C_SetVolumeAndPitch) == 0x000008, "Wrong alignment on BP_FootStepComponent_C_SetVolumeAndPitch");
static_assert(sizeof(BP_FootStepComponent_C_SetVolumeAndPitch) == 0x000010, "Wrong size on BP_FootStepComponent_C_SetVolumeAndPitch");
static_assert(offsetof(BP_FootStepComponent_C_SetVolumeAndPitch, AudioComponent) == 0x000000, "Member 'BP_FootStepComponent_C_SetVolumeAndPitch::AudioComponent' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SetVolumeAndPitch, CallFunc_GetMovementSoundProperties_VolumeMultiplier) == 0x000008, "Member 'BP_FootStepComponent_C_SetVolumeAndPitch::CallFunc_GetMovementSoundProperties_VolumeMultiplier' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SetVolumeAndPitch, CallFunc_GetMovementSoundProperties_PitchMultiplier) == 0x00000C, "Member 'BP_FootStepComponent_C_SetVolumeAndPitch::CallFunc_GetMovementSoundProperties_PitchMultiplier' has a wrong offset!");

// Function BP_FootStepComponent.BP_FootStepComponent_C.GetProneStepSound
// 0x0248 (0x0248 - 0x0000)
struct BP_FootStepComponent_C_GetProneStepSound final
{
public:
	EPhysicalSurface                              SurfaceType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EProneStepLimbIndex                           ProneStepLimbIndex;                                // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Result;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable_1;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_2;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_3;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_4;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_5;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_6;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_7;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_8;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_9;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_10;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_11;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_12;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_13;                           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_14;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_15;                           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_16;                           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_17;                           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_18;                           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_19;                           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_20;                           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_21;                           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_22;                           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_23;                           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_24;                           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_25;                           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_26;                           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_27;                           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_28;                           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_29;                           // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_30;                           // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              Temp_byte_Variable;                                // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable_31;                           // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_32;                           // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_33;                           // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_34;                           // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_35;                           // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_36;                           // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_37;                           // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_38;                           // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_39;                           // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_40;                           // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_41;                           // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_42;                           // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_43;                           // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_44;                           // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_45;                           // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_46;                           // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_47;                           // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_48;                           // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_49;                           // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_50;                           // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_51;                           // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_52;                           // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_53;                           // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_54;                           // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_55;                           // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_56;                           // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_57;                           // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_58;                           // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_59;                           // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_60;                           // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_61;                           // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_62;                           // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_63;                           // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_64;                           // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_Select_Default;                             // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_65;                           // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              Temp_byte_Variable_1;                              // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_239[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_Select_Default_1;                           // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FootStepComponent_C_GetProneStepSound) == 0x000008, "Wrong alignment on BP_FootStepComponent_C_GetProneStepSound");
static_assert(sizeof(BP_FootStepComponent_C_GetProneStepSound) == 0x000248, "Wrong size on BP_FootStepComponent_C_GetProneStepSound");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, SurfaceType) == 0x000000, "Member 'BP_FootStepComponent_C_GetProneStepSound::SurfaceType' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, ProneStepLimbIndex) == 0x000001, "Member 'BP_FootStepComponent_C_GetProneStepSound::ProneStepLimbIndex' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Result) == 0x000008, "Member 'BP_FootStepComponent_C_GetProneStepSound::Result' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable) == 0x000010, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'BP_FootStepComponent_C_GetProneStepSound::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_1) == 0x000020, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_2) == 0x000028, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_3) == 0x000030, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_4) == 0x000038, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_5) == 0x000040, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_6) == 0x000048, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_7) == 0x000050, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_8) == 0x000058, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_9) == 0x000060, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_10) == 0x000068, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_11) == 0x000070, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_12) == 0x000078, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_13) == 0x000080, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_14) == 0x000088, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_15) == 0x000090, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_16) == 0x000098, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_17) == 0x0000A0, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_18) == 0x0000A8, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_19) == 0x0000B0, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_20) == 0x0000B8, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_21) == 0x0000C0, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_22) == 0x0000C8, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_23) == 0x0000D0, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_24) == 0x0000D8, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_24' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_25) == 0x0000E0, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_25' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_26) == 0x0000E8, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_26' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_27) == 0x0000F0, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_27' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_28) == 0x0000F8, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_28' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_29) == 0x000100, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_29' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_30) == 0x000108, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_30' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_byte_Variable) == 0x000110, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_31) == 0x000118, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_31' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_32) == 0x000120, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_32' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_33) == 0x000128, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_33' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_34) == 0x000130, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_34' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_35) == 0x000138, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_35' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_36) == 0x000140, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_36' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_37) == 0x000148, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_37' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_38) == 0x000150, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_38' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_39) == 0x000158, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_39' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_40) == 0x000160, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_40' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_41) == 0x000168, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_41' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_42) == 0x000170, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_42' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_43) == 0x000178, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_43' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_44) == 0x000180, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_44' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_45) == 0x000188, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_45' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_46) == 0x000190, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_46' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_47) == 0x000198, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_47' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_48) == 0x0001A0, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_48' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_49) == 0x0001A8, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_49' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_50) == 0x0001B0, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_50' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_51) == 0x0001B8, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_51' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_52) == 0x0001C0, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_52' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_53) == 0x0001C8, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_53' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_54) == 0x0001D0, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_54' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_55) == 0x0001D8, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_55' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_56) == 0x0001E0, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_56' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_57) == 0x0001E8, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_57' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_58) == 0x0001F0, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_58' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_59) == 0x0001F8, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_59' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_60) == 0x000200, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_60' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_61) == 0x000208, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_61' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_62) == 0x000210, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_62' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_63) == 0x000218, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_63' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_64) == 0x000220, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_64' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, K2Node_Select_Default) == 0x000228, "Member 'BP_FootStepComponent_C_GetProneStepSound::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_object_Variable_65) == 0x000230, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_object_Variable_65' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, Temp_byte_Variable_1) == 0x000238, "Member 'BP_FootStepComponent_C_GetProneStepSound::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepSound, K2Node_Select_Default_1) == 0x000240, "Member 'BP_FootStepComponent_C_GetProneStepSound::K2Node_Select_Default_1' has a wrong offset!");

// Function BP_FootStepComponent.BP_FootStepComponent_C.PlayStepSound
// 0x0018 (0x0018 - 0x0000)
struct BP_FootStepComponent_C_PlayStepSound final
{
public:
	class USoundBase*                             Sound;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        ComponentToUse;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FootStepComponent_C_PlayStepSound) == 0x000008, "Wrong alignment on BP_FootStepComponent_C_PlayStepSound");
static_assert(sizeof(BP_FootStepComponent_C_PlayStepSound) == 0x000018, "Wrong size on BP_FootStepComponent_C_PlayStepSound");
static_assert(offsetof(BP_FootStepComponent_C_PlayStepSound, Sound) == 0x000000, "Member 'BP_FootStepComponent_C_PlayStepSound::Sound' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_PlayStepSound, ComponentToUse) == 0x000008, "Member 'BP_FootStepComponent_C_PlayStepSound::ComponentToUse' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_PlayStepSound, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_FootStepComponent_C_PlayStepSound::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_FootStepComponent.BP_FootStepComponent_C.SetAttenuationSettings
// 0x0010 (0x0010 - 0x0000)
struct BP_FootStepComponent_C_SetAttenuationSettings final
{
public:
	class UAudioComponent*                        AudioComponent;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EStance                                       CallFunc_GetStance_ReturnValue;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSprinting_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FootStepComponent_C_SetAttenuationSettings) == 0x000008, "Wrong alignment on BP_FootStepComponent_C_SetAttenuationSettings");
static_assert(sizeof(BP_FootStepComponent_C_SetAttenuationSettings) == 0x000010, "Wrong size on BP_FootStepComponent_C_SetAttenuationSettings");
static_assert(offsetof(BP_FootStepComponent_C_SetAttenuationSettings, AudioComponent) == 0x000000, "Member 'BP_FootStepComponent_C_SetAttenuationSettings::AudioComponent' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SetAttenuationSettings, CallFunc_GetStance_ReturnValue) == 0x000008, "Member 'BP_FootStepComponent_C_SetAttenuationSettings::CallFunc_GetStance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SetAttenuationSettings, CallFunc_IsSprinting_ReturnValue) == 0x000009, "Member 'BP_FootStepComponent_C_SetAttenuationSettings::CallFunc_IsSprinting_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SetAttenuationSettings, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000A, "Member 'BP_FootStepComponent_C_SetAttenuationSettings::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SetAttenuationSettings, CallFunc_BooleanAND_ReturnValue) == 0x00000B, "Member 'BP_FootStepComponent_C_SetAttenuationSettings::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_FootStepComponent.BP_FootStepComponent_C.GetFootStepAudioComponent
// 0x0020 (0x0020 - 0x0000)
struct BP_FootStepComponent_C_GetFootStepAudioComponent final
{
public:
	EFootStepLegIndex                             FootStepLegIndex;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFootStepLegIndex                             Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FootStepComponent_C_GetFootStepAudioComponent) == 0x000008, "Wrong alignment on BP_FootStepComponent_C_GetFootStepAudioComponent");
static_assert(sizeof(BP_FootStepComponent_C_GetFootStepAudioComponent) == 0x000020, "Wrong size on BP_FootStepComponent_C_GetFootStepAudioComponent");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepAudioComponent, FootStepLegIndex) == 0x000000, "Member 'BP_FootStepComponent_C_GetFootStepAudioComponent::FootStepLegIndex' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepAudioComponent, ReturnValue) == 0x000008, "Member 'BP_FootStepComponent_C_GetFootStepAudioComponent::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepAudioComponent, Temp_byte_Variable) == 0x000010, "Member 'BP_FootStepComponent_C_GetFootStepAudioComponent::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetFootStepAudioComponent, K2Node_Select_Default) == 0x000018, "Member 'BP_FootStepComponent_C_GetFootStepAudioComponent::K2Node_Select_Default' has a wrong offset!");

// Function BP_FootStepComponent.BP_FootStepComponent_C.GetProneStepAudioComponent
// 0x0020 (0x0020 - 0x0000)
struct BP_FootStepComponent_C_GetProneStepAudioComponent final
{
public:
	EProneStepLimbIndex                           ProneStepLimbIndex;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EProneStepLimbIndex                           Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FootStepComponent_C_GetProneStepAudioComponent) == 0x000008, "Wrong alignment on BP_FootStepComponent_C_GetProneStepAudioComponent");
static_assert(sizeof(BP_FootStepComponent_C_GetProneStepAudioComponent) == 0x000020, "Wrong size on BP_FootStepComponent_C_GetProneStepAudioComponent");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepAudioComponent, ProneStepLimbIndex) == 0x000000, "Member 'BP_FootStepComponent_C_GetProneStepAudioComponent::ProneStepLimbIndex' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepAudioComponent, ReturnValue) == 0x000008, "Member 'BP_FootStepComponent_C_GetProneStepAudioComponent::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepAudioComponent, Temp_byte_Variable) == 0x000010, "Member 'BP_FootStepComponent_C_GetProneStepAudioComponent::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetProneStepAudioComponent, K2Node_Select_Default) == 0x000018, "Member 'BP_FootStepComponent_C_GetProneStepAudioComponent::K2Node_Select_Default' has a wrong offset!");

// Function BP_FootStepComponent.BP_FootStepComponent_C.ShouldProcessStep
// 0x0040 (0x0040 - 0x0000)
struct BP_FootStepComponent_C_ShouldProcessStep final
{
public:
	bool                                          ToProcess;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetCurrentCameraPosition_OutPosition;     // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCurrentCameraPosition_OutPositionValid; // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSizeSquared_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Square_ReturnValue;                       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FootStepComponent_C_ShouldProcessStep) == 0x000004, "Wrong alignment on BP_FootStepComponent_C_ShouldProcessStep");
static_assert(sizeof(BP_FootStepComponent_C_ShouldProcessStep) == 0x000040, "Wrong size on BP_FootStepComponent_C_ShouldProcessStep");
static_assert(offsetof(BP_FootStepComponent_C_ShouldProcessStep, ToProcess) == 0x000000, "Member 'BP_FootStepComponent_C_ShouldProcessStep::ToProcess' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ShouldProcessStep, CallFunc_IsDedicatedServer_ReturnValue) == 0x000001, "Member 'BP_FootStepComponent_C_ShouldProcessStep::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ShouldProcessStep, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000004, "Member 'BP_FootStepComponent_C_ShouldProcessStep::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ShouldProcessStep, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_FootStepComponent_C_ShouldProcessStep::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ShouldProcessStep, CallFunc_GetCurrentCameraPosition_OutPosition) == 0x000014, "Member 'BP_FootStepComponent_C_ShouldProcessStep::CallFunc_GetCurrentCameraPosition_OutPosition' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ShouldProcessStep, CallFunc_GetCurrentCameraPosition_OutPositionValid) == 0x000020, "Member 'BP_FootStepComponent_C_ShouldProcessStep::CallFunc_GetCurrentCameraPosition_OutPositionValid' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ShouldProcessStep, CallFunc_Not_PreBool_ReturnValue) == 0x000021, "Member 'BP_FootStepComponent_C_ShouldProcessStep::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ShouldProcessStep, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000024, "Member 'BP_FootStepComponent_C_ShouldProcessStep::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ShouldProcessStep, CallFunc_BooleanOR_ReturnValue) == 0x000030, "Member 'BP_FootStepComponent_C_ShouldProcessStep::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ShouldProcessStep, CallFunc_VSizeSquared_ReturnValue) == 0x000034, "Member 'BP_FootStepComponent_C_ShouldProcessStep::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ShouldProcessStep, CallFunc_Square_ReturnValue) == 0x000038, "Member 'BP_FootStepComponent_C_ShouldProcessStep::CallFunc_Square_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ShouldProcessStep, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00003C, "Member 'BP_FootStepComponent_C_ShouldProcessStep::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_ShouldProcessStep, CallFunc_BooleanAND_ReturnValue) == 0x00003D, "Member 'BP_FootStepComponent_C_ShouldProcessStep::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_FootStepComponent.BP_FootStepComponent_C.SetEnvironmentParameters
// 0x0020 (0x0020 - 0x0000)
struct BP_FootStepComponent_C_SetEnvironmentParameters final
{
public:
	class UAudioComponent*                        AudioComponent;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerController*                 K2Node_DynamicCast_AsHuman_Player_Controller;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInsideBuilding_ReturnValue;             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FootStepComponent_C_SetEnvironmentParameters) == 0x000008, "Wrong alignment on BP_FootStepComponent_C_SetEnvironmentParameters");
static_assert(sizeof(BP_FootStepComponent_C_SetEnvironmentParameters) == 0x000020, "Wrong size on BP_FootStepComponent_C_SetEnvironmentParameters");
static_assert(offsetof(BP_FootStepComponent_C_SetEnvironmentParameters, AudioComponent) == 0x000000, "Member 'BP_FootStepComponent_C_SetEnvironmentParameters::AudioComponent' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SetEnvironmentParameters, CallFunc_GetController_ReturnValue) == 0x000008, "Member 'BP_FootStepComponent_C_SetEnvironmentParameters::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SetEnvironmentParameters, K2Node_DynamicCast_AsHuman_Player_Controller) == 0x000010, "Member 'BP_FootStepComponent_C_SetEnvironmentParameters::K2Node_DynamicCast_AsHuman_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SetEnvironmentParameters, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_FootStepComponent_C_SetEnvironmentParameters::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_SetEnvironmentParameters, CallFunc_IsInsideBuilding_ReturnValue) == 0x000019, "Member 'BP_FootStepComponent_C_SetEnvironmentParameters::CallFunc_IsInsideBuilding_ReturnValue' has a wrong offset!");

// Function BP_FootStepComponent.BP_FootStepComponent_C.GetTargetWaterSoakIndex
// 0x0050 (0x0050 - 0x0000)
struct BP_FootStepComponent_C_GetTargetWaterSoakIndex final
{
public:
	float                                         SoakIndex;                                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldInterpolate;                                 // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetWaterDetails_bIsInWater;               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWaterDetails_Depth;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetWaterDetails_Flow;                     // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWaterDetails_MaxDepth;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAudioWeatherInfo                      CallFunc_GetAudioWeatherInfo_ReturnValue;          // 0x001C(0x0018)(NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerController*                 K2Node_DynamicCast_AsHuman_Player_Controller;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInsideBuilding_ReturnValue;             // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FootStepComponent_C_GetTargetWaterSoakIndex) == 0x000008, "Wrong alignment on BP_FootStepComponent_C_GetTargetWaterSoakIndex");
static_assert(sizeof(BP_FootStepComponent_C_GetTargetWaterSoakIndex) == 0x000050, "Wrong size on BP_FootStepComponent_C_GetTargetWaterSoakIndex");
static_assert(offsetof(BP_FootStepComponent_C_GetTargetWaterSoakIndex, SoakIndex) == 0x000000, "Member 'BP_FootStepComponent_C_GetTargetWaterSoakIndex::SoakIndex' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetTargetWaterSoakIndex, ShouldInterpolate) == 0x000004, "Member 'BP_FootStepComponent_C_GetTargetWaterSoakIndex::ShouldInterpolate' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetTargetWaterSoakIndex, CallFunc_GetWaterDetails_bIsInWater) == 0x000005, "Member 'BP_FootStepComponent_C_GetTargetWaterSoakIndex::CallFunc_GetWaterDetails_bIsInWater' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetTargetWaterSoakIndex, CallFunc_GetWaterDetails_Depth) == 0x000008, "Member 'BP_FootStepComponent_C_GetTargetWaterSoakIndex::CallFunc_GetWaterDetails_Depth' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetTargetWaterSoakIndex, CallFunc_GetWaterDetails_Flow) == 0x00000C, "Member 'BP_FootStepComponent_C_GetTargetWaterSoakIndex::CallFunc_GetWaterDetails_Flow' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetTargetWaterSoakIndex, CallFunc_GetWaterDetails_MaxDepth) == 0x000018, "Member 'BP_FootStepComponent_C_GetTargetWaterSoakIndex::CallFunc_GetWaterDetails_MaxDepth' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetTargetWaterSoakIndex, CallFunc_GetAudioWeatherInfo_ReturnValue) == 0x00001C, "Member 'BP_FootStepComponent_C_GetTargetWaterSoakIndex::CallFunc_GetAudioWeatherInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetTargetWaterSoakIndex, CallFunc_GetController_ReturnValue) == 0x000038, "Member 'BP_FootStepComponent_C_GetTargetWaterSoakIndex::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetTargetWaterSoakIndex, K2Node_DynamicCast_AsHuman_Player_Controller) == 0x000040, "Member 'BP_FootStepComponent_C_GetTargetWaterSoakIndex::K2Node_DynamicCast_AsHuman_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetTargetWaterSoakIndex, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_FootStepComponent_C_GetTargetWaterSoakIndex::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetTargetWaterSoakIndex, CallFunc_IsInsideBuilding_ReturnValue) == 0x000049, "Member 'BP_FootStepComponent_C_GetTargetWaterSoakIndex::CallFunc_IsInsideBuilding_ReturnValue' has a wrong offset!");

// Function BP_FootStepComponent.BP_FootStepComponent_C.GetLadderStepSound
// 0x0248 (0x0248 - 0x0000)
struct BP_FootStepComponent_C_GetLadderStepSound final
{
public:
	EPhysicalSurface                              SurfaceType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELadderStepLimbIndex                          LadderStepLimbIndex;                               // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Result;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable_1;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_2;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_3;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_4;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_5;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_6;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_7;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_8;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_9;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_10;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_11;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_12;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_13;                           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_14;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_15;                           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_16;                           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_17;                           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_18;                           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_19;                           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_20;                           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_21;                           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_22;                           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_23;                           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_24;                           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_25;                           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_26;                           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_27;                           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_28;                           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_29;                           // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_30;                           // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_31;                           // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              Temp_byte_Variable;                                // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable_32;                           // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_33;                           // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_34;                           // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_35;                           // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_36;                           // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_37;                           // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_38;                           // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_39;                           // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_40;                           // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_41;                           // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_42;                           // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_43;                           // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_44;                           // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_45;                           // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_46;                           // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_47;                           // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_48;                           // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_49;                           // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_50;                           // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_51;                           // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_52;                           // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_53;                           // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_54;                           // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_55;                           // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_56;                           // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_57;                           // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_58;                           // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_59;                           // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_60;                           // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_61;                           // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_62;                           // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_63;                           // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_64;                           // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_65;                           // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_Select_Default;                             // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              Temp_byte_Variable_1;                              // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_239[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_Select_Default_1;                           // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FootStepComponent_C_GetLadderStepSound) == 0x000008, "Wrong alignment on BP_FootStepComponent_C_GetLadderStepSound");
static_assert(sizeof(BP_FootStepComponent_C_GetLadderStepSound) == 0x000248, "Wrong size on BP_FootStepComponent_C_GetLadderStepSound");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, SurfaceType) == 0x000000, "Member 'BP_FootStepComponent_C_GetLadderStepSound::SurfaceType' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, LadderStepLimbIndex) == 0x000001, "Member 'BP_FootStepComponent_C_GetLadderStepSound::LadderStepLimbIndex' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Result) == 0x000008, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Result' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable) == 0x000010, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'BP_FootStepComponent_C_GetLadderStepSound::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_1) == 0x000020, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_2) == 0x000028, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_3) == 0x000030, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_4) == 0x000038, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_5) == 0x000040, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_6) == 0x000048, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_7) == 0x000050, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_8) == 0x000058, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_9) == 0x000060, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_10) == 0x000068, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_11) == 0x000070, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_12) == 0x000078, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_13) == 0x000080, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_14) == 0x000088, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_15) == 0x000090, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_16) == 0x000098, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_17) == 0x0000A0, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_18) == 0x0000A8, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_19) == 0x0000B0, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_20) == 0x0000B8, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_21) == 0x0000C0, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_22) == 0x0000C8, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_23) == 0x0000D0, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_24) == 0x0000D8, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_24' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_25) == 0x0000E0, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_25' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_26) == 0x0000E8, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_26' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_27) == 0x0000F0, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_27' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_28) == 0x0000F8, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_28' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_29) == 0x000100, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_29' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_30) == 0x000108, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_30' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_31) == 0x000110, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_31' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_byte_Variable) == 0x000118, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_32) == 0x000120, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_32' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_33) == 0x000128, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_33' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_34) == 0x000130, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_34' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_35) == 0x000138, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_35' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_36) == 0x000140, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_36' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_37) == 0x000148, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_37' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_38) == 0x000150, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_38' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_39) == 0x000158, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_39' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_40) == 0x000160, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_40' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_41) == 0x000168, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_41' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_42) == 0x000170, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_42' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_43) == 0x000178, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_43' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_44) == 0x000180, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_44' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_45) == 0x000188, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_45' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_46) == 0x000190, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_46' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_47) == 0x000198, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_47' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_48) == 0x0001A0, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_48' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_49) == 0x0001A8, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_49' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_50) == 0x0001B0, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_50' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_51) == 0x0001B8, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_51' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_52) == 0x0001C0, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_52' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_53) == 0x0001C8, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_53' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_54) == 0x0001D0, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_54' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_55) == 0x0001D8, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_55' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_56) == 0x0001E0, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_56' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_57) == 0x0001E8, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_57' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_58) == 0x0001F0, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_58' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_59) == 0x0001F8, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_59' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_60) == 0x000200, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_60' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_61) == 0x000208, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_61' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_62) == 0x000210, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_62' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_63) == 0x000218, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_63' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_64) == 0x000220, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_64' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_object_Variable_65) == 0x000228, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_object_Variable_65' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, K2Node_Select_Default) == 0x000230, "Member 'BP_FootStepComponent_C_GetLadderStepSound::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, Temp_byte_Variable_1) == 0x000238, "Member 'BP_FootStepComponent_C_GetLadderStepSound::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepSound, K2Node_Select_Default_1) == 0x000240, "Member 'BP_FootStepComponent_C_GetLadderStepSound::K2Node_Select_Default_1' has a wrong offset!");

// Function BP_FootStepComponent.BP_FootStepComponent_C.GetLadderStepAudioComponent
// 0x0020 (0x0020 - 0x0000)
struct BP_FootStepComponent_C_GetLadderStepAudioComponent final
{
public:
	ELadderStepLimbIndex                          LadderStepLimbIndex;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELadderStepLimbIndex                          Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FootStepComponent_C_GetLadderStepAudioComponent) == 0x000008, "Wrong alignment on BP_FootStepComponent_C_GetLadderStepAudioComponent");
static_assert(sizeof(BP_FootStepComponent_C_GetLadderStepAudioComponent) == 0x000020, "Wrong size on BP_FootStepComponent_C_GetLadderStepAudioComponent");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepAudioComponent, LadderStepLimbIndex) == 0x000000, "Member 'BP_FootStepComponent_C_GetLadderStepAudioComponent::LadderStepLimbIndex' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepAudioComponent, ReturnValue) == 0x000008, "Member 'BP_FootStepComponent_C_GetLadderStepAudioComponent::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepAudioComponent, Temp_byte_Variable) == 0x000010, "Member 'BP_FootStepComponent_C_GetLadderStepAudioComponent::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_FootStepComponent_C_GetLadderStepAudioComponent, K2Node_Select_Default) == 0x000018, "Member 'BP_FootStepComponent_C_GetLadderStepAudioComponent::K2Node_Select_Default' has a wrong offset!");

}

