#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NoFrame_Barricade_Breakable

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_ADM_BarredDoor_Breakable_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_NoFrame_Barricade_Breakable.BP_NoFrame_Barricade_Breakable_C
// 0x0080 (0x0498 - 0x0418)
class ABP_NoFrame_Barricade_Breakable_C final : public ABP_ADM_BarredDoor_Breakable_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_NoFrame_Barricade_Breakable_C;   // 0x0418(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_ADM_DoorBarricade_Component_C*      DoorBarricade_10;                                  // 0x0420(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plank_1C;                                          // 0x0428(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_ADM_DoorBarricade_Component_C*      DoorBarricade_9;                                   // 0x0430(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_ADM_DoorBarricade_Component_C*      DoorBarricade_8;                                   // 0x0438(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_ADM_DoorBarricade_Component_C*      DoorBarricade_7;                                   // 0x0440(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_ADM_DoorBarricade_Component_C*      DoorBarricade_6;                                   // 0x0448(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plank_3C;                                          // 0x0450(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plank_4B;                                          // 0x0458(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plank_4A;                                          // 0x0460(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plank_3B;                                          // 0x0468(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plank_3A;                                          // 0x0470(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plank_2B;                                          // 0x0478(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plank_2A;                                          // 0x0480(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plank_1B;                                          // 0x0488(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plank_1A;                                          // 0x0490(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_NoFrame_Barricade_Breakable(int32 EntryPoint);
	void InitBarricades();
	void SetupMainBarricades();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_NoFrame_Barricade_Breakable_C">();
	}
	static class ABP_NoFrame_Barricade_Breakable_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_NoFrame_Barricade_Breakable_C>();
	}
};
static_assert(alignof(ABP_NoFrame_Barricade_Breakable_C) == 0x000008, "Wrong alignment on ABP_NoFrame_Barricade_Breakable_C");
static_assert(sizeof(ABP_NoFrame_Barricade_Breakable_C) == 0x000498, "Wrong size on ABP_NoFrame_Barricade_Breakable_C");
static_assert(offsetof(ABP_NoFrame_Barricade_Breakable_C, UberGraphFrame_BP_NoFrame_Barricade_Breakable_C) == 0x000418, "Member 'ABP_NoFrame_Barricade_Breakable_C::UberGraphFrame_BP_NoFrame_Barricade_Breakable_C' has a wrong offset!");
static_assert(offsetof(ABP_NoFrame_Barricade_Breakable_C, DoorBarricade_10) == 0x000420, "Member 'ABP_NoFrame_Barricade_Breakable_C::DoorBarricade_10' has a wrong offset!");
static_assert(offsetof(ABP_NoFrame_Barricade_Breakable_C, Plank_1C) == 0x000428, "Member 'ABP_NoFrame_Barricade_Breakable_C::Plank_1C' has a wrong offset!");
static_assert(offsetof(ABP_NoFrame_Barricade_Breakable_C, DoorBarricade_9) == 0x000430, "Member 'ABP_NoFrame_Barricade_Breakable_C::DoorBarricade_9' has a wrong offset!");
static_assert(offsetof(ABP_NoFrame_Barricade_Breakable_C, DoorBarricade_8) == 0x000438, "Member 'ABP_NoFrame_Barricade_Breakable_C::DoorBarricade_8' has a wrong offset!");
static_assert(offsetof(ABP_NoFrame_Barricade_Breakable_C, DoorBarricade_7) == 0x000440, "Member 'ABP_NoFrame_Barricade_Breakable_C::DoorBarricade_7' has a wrong offset!");
static_assert(offsetof(ABP_NoFrame_Barricade_Breakable_C, DoorBarricade_6) == 0x000448, "Member 'ABP_NoFrame_Barricade_Breakable_C::DoorBarricade_6' has a wrong offset!");
static_assert(offsetof(ABP_NoFrame_Barricade_Breakable_C, Plank_3C) == 0x000450, "Member 'ABP_NoFrame_Barricade_Breakable_C::Plank_3C' has a wrong offset!");
static_assert(offsetof(ABP_NoFrame_Barricade_Breakable_C, Plank_4B) == 0x000458, "Member 'ABP_NoFrame_Barricade_Breakable_C::Plank_4B' has a wrong offset!");
static_assert(offsetof(ABP_NoFrame_Barricade_Breakable_C, Plank_4A) == 0x000460, "Member 'ABP_NoFrame_Barricade_Breakable_C::Plank_4A' has a wrong offset!");
static_assert(offsetof(ABP_NoFrame_Barricade_Breakable_C, Plank_3B) == 0x000468, "Member 'ABP_NoFrame_Barricade_Breakable_C::Plank_3B' has a wrong offset!");
static_assert(offsetof(ABP_NoFrame_Barricade_Breakable_C, Plank_3A) == 0x000470, "Member 'ABP_NoFrame_Barricade_Breakable_C::Plank_3A' has a wrong offset!");
static_assert(offsetof(ABP_NoFrame_Barricade_Breakable_C, Plank_2B) == 0x000478, "Member 'ABP_NoFrame_Barricade_Breakable_C::Plank_2B' has a wrong offset!");
static_assert(offsetof(ABP_NoFrame_Barricade_Breakable_C, Plank_2A) == 0x000480, "Member 'ABP_NoFrame_Barricade_Breakable_C::Plank_2A' has a wrong offset!");
static_assert(offsetof(ABP_NoFrame_Barricade_Breakable_C, Plank_1B) == 0x000488, "Member 'ABP_NoFrame_Barricade_Breakable_C::Plank_1B' has a wrong offset!");
static_assert(offsetof(ABP_NoFrame_Barricade_Breakable_C, Plank_1A) == 0x000490, "Member 'ABP_NoFrame_Barricade_Breakable_C::Plank_1A' has a wrong offset!");

}

