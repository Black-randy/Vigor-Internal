#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ADM_LockedContainer_Lock

#include "Basic.hpp"

#include "BP_ADM_LockedContainer_Lock_classes.hpp"
#include "BP_ADM_LockedContainer_Lock_parameters.hpp"


namespace SDK
{

// Function BP_ADM_LockedContainer_Lock.BP_ADM_LockedContainer_Lock_C.ExecuteUbergraph_BP_ADM_LockedContainer_Lock
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ADM_LockedContainer_Lock_C::ExecuteUbergraph_BP_ADM_LockedContainer_Lock(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ADM_LockedContainer_Lock_C", "ExecuteUbergraph_BP_ADM_LockedContainer_Lock");

	Params::BP_ADM_LockedContainer_Lock_C_ExecuteUbergraph_BP_ADM_LockedContainer_Lock Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ADM_LockedContainer_Lock.BP_ADM_LockedContainer_Lock_C.SetLockMesh
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftObjectPtr<class UObject>           SM_SoftRef                                             (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_ADM_LockedContainer_Lock_C::SetLockMesh(TSoftObjectPtr<class UObject> SM_SoftRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ADM_LockedContainer_Lock_C", "SetLockMesh");

	Params::BP_ADM_LockedContainer_Lock_C_SetLockMesh Parms{};

	Parms.SM_SoftRef = SM_SoftRef;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ADM_LockedContainer_Lock.BP_ADM_LockedContainer_Lock_C.OnLockSolved
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ByDamage                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_ADM_LockedContainer_Lock_C::OnLockSolved(bool ByDamage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ADM_LockedContainer_Lock_C", "OnLockSolved");

	Params::BP_ADM_LockedContainer_Lock_C_OnLockSolved Parms{};

	Parms.ByDamage = ByDamage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ADM_LockedContainer_Lock.BP_ADM_LockedContainer_Lock_C.ProccessExplosion
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ExplosionRadius                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AController*                      InstigatorController                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DamagingExplosion                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   EnviromentDamageMultiplier                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ADM_LockedContainer_Lock_C::ProccessExplosion(const struct FVector& Location, float ExplosionRadius, class AController* InstigatorController, class AActor* DamageCauser, bool DamagingExplosion, float EnviromentDamageMultiplier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ADM_LockedContainer_Lock_C", "ProccessExplosion");

	Params::BP_ADM_LockedContainer_Lock_C_ProccessExplosion Parms{};

	Parms.Location = std::move(Location);
	Parms.ExplosionRadius = ExplosionRadius;
	Parms.InstigatorController = InstigatorController;
	Parms.DamageCauser = DamageCauser;
	Parms.DamagingExplosion = DamagingExplosion;
	Parms.EnviromentDamageMultiplier = EnviromentDamageMultiplier;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ADM_LockedContainer_Lock.BP_ADM_LockedContainer_Lock_C.Generate digits in the lock
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Ammount_of_digits_in_code                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ADM_LockedContainer_Lock_C::Generate_digits_in_the_lock(int32 Ammount_of_digits_in_code)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ADM_LockedContainer_Lock_C", "Generate digits in the lock");

	Params::BP_ADM_LockedContainer_Lock_C_Generate_digits_in_the_lock Parms{};

	Parms.Ammount_of_digits_in_code = Ammount_of_digits_in_code;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ADM_LockedContainer_Lock.BP_ADM_LockedContainer_Lock_C.Lock alarm duration over
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_ADM_LockedContainer_Lock_C::Lock_alarm_duration_over()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ADM_LockedContainer_Lock_C", "Lock alarm duration over");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ADM_LockedContainer_Lock.BP_ADM_LockedContainer_Lock_C.Trap_SetStaticMesh
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftObjectPtr<class UStaticMesh>       SoftMesh                                               (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_ADM_LockedContainer_Lock_C::Trap_SetStaticMesh(TSoftObjectPtr<class UStaticMesh> SoftMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ADM_LockedContainer_Lock_C", "Trap_SetStaticMesh");

	Params::BP_ADM_LockedContainer_Lock_C_Trap_SetStaticMesh Parms{};

	Parms.SoftMesh = SoftMesh;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ADM_LockedContainer_Lock.BP_ADM_LockedContainer_Lock_C.Load soft sound and play
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftObjectPtr<class UObject>           Soft_sound                                             (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// float                                   Fade_in_duration                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ADM_LockedContainer_Lock_C::Load_soft_sound_and_play(TSoftObjectPtr<class UObject> Soft_sound, float Fade_in_duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ADM_LockedContainer_Lock_C", "Load soft sound and play");

	Params::BP_ADM_LockedContainer_Lock_C_Load_soft_sound_and_play Parms{};

	Parms.Soft_sound = Soft_sound;
	Parms.Fade_in_duration = Fade_in_duration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ADM_LockedContainer_Lock.BP_ADM_LockedContainer_Lock_C.Lock got shot
// (BlueprintCallable, BlueprintEvent)

void ABP_ADM_LockedContainer_Lock_C::Lock_got_shot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ADM_LockedContainer_Lock_C", "Lock got shot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ADM_LockedContainer_Lock.BP_ADM_LockedContainer_Lock_C.ReceiveAnyDamage
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UDamageType*                      DamageType                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AController*                      InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ADM_LockedContainer_Lock_C::ReceiveAnyDamage(float Damage, const class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ADM_LockedContainer_Lock_C", "ReceiveAnyDamage");

	Params::BP_ADM_LockedContainer_Lock_C_ReceiveAnyDamage Parms{};

	Parms.Damage = Damage;
	Parms.DamageType = DamageType;
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ADM_LockedContainer_Lock.BP_ADM_LockedContainer_Lock_C.BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_0_Interaction Start on Server__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UInteractionItemComponent*        Sender                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Interacting_Actor                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ADM_LockedContainer_Lock_C::BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_0_Interaction_Start_on_Server__DelegateSignature(class UInteractionItemComponent* Sender, class AActor* Interacting_Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ADM_LockedContainer_Lock_C", "BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_0_Interaction Start on Server__DelegateSignature");

	Params::BP_ADM_LockedContainer_Lock_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_0_Interaction_Start_on_Server__DelegateSignature Parms{};

	Parms.Sender = Sender;
	Parms.Interacting_Actor = Interacting_Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ADM_LockedContainer_Lock.BP_ADM_LockedContainer_Lock_C.OnLoaded_303A9E7341428F48F05BE78A8CF2AD35
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ADM_LockedContainer_Lock_C::OnLoaded_303A9E7341428F48F05BE78A8CF2AD35(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ADM_LockedContainer_Lock_C", "OnLoaded_303A9E7341428F48F05BE78A8CF2AD35");

	Params::BP_ADM_LockedContainer_Lock_C_OnLoaded_303A9E7341428F48F05BE78A8CF2AD35 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ADM_LockedContainer_Lock.BP_ADM_LockedContainer_Lock_C.OnLoaded_303A9E7341428F48F05BE78A6556E323
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ADM_LockedContainer_Lock_C::OnLoaded_303A9E7341428F48F05BE78A6556E323(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ADM_LockedContainer_Lock_C", "OnLoaded_303A9E7341428F48F05BE78A6556E323");

	Params::BP_ADM_LockedContainer_Lock_C_OnLoaded_303A9E7341428F48F05BE78A6556E323 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ADM_LockedContainer_Lock.BP_ADM_LockedContainer_Lock_C.Lock play effects broken
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ADM_LockedContainer_Lock_C::Lock_play_effects_broken()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ADM_LockedContainer_Lock_C", "Lock play effects broken");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ADM_LockedContainer_Lock.BP_ADM_LockedContainer_Lock_C.Lock play effects unlocked
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ADM_LockedContainer_Lock_C::Lock_play_effects_unlocked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ADM_LockedContainer_Lock_C", "Lock play effects unlocked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ADM_LockedContainer_Lock.BP_ADM_LockedContainer_Lock_C.GetIsValidTypeOfDamage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_ADM_LockedContainer_Lock_C::GetIsValidTypeOfDamage(class AActor* DamageCauser, bool* IsValid) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ADM_LockedContainer_Lock_C", "GetIsValidTypeOfDamage");

	Params::BP_ADM_LockedContainer_Lock_C_GetIsValidTypeOfDamage Parms{};

	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;
}

}

