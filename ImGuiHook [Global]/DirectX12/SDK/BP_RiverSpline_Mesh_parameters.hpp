#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RiverSpline_Mesh

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_RiverSpline_Mesh.BP_RiverSpline_Mesh_C.DefineSpline
// 0x0040 (0x0040 - 0x0000)
struct BP_RiverSpline_Mesh_C_DefineSpline final
{
public:
	float                                         Speed;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_RiverSpline_C*                      K2Node_DynamicCast_AsBP_River_Spline;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RiverSpline_Mesh_C_DefineSpline) == 0x000008, "Wrong alignment on BP_RiverSpline_Mesh_C_DefineSpline");
static_assert(sizeof(BP_RiverSpline_Mesh_C_DefineSpline) == 0x000040, "Wrong size on BP_RiverSpline_Mesh_C_DefineSpline");
static_assert(offsetof(BP_RiverSpline_Mesh_C_DefineSpline, Speed) == 0x000000, "Member 'BP_RiverSpline_Mesh_C_DefineSpline::Speed' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_Mesh_C_DefineSpline, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_RiverSpline_Mesh_C_DefineSpline::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_Mesh_C_DefineSpline, K2Node_DynamicCast_AsBP_River_Spline) == 0x000010, "Member 'BP_RiverSpline_Mesh_C_DefineSpline::K2Node_DynamicCast_AsBP_River_Spline' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_Mesh_C_DefineSpline, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_RiverSpline_Mesh_C_DefineSpline::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_Mesh_C_DefineSpline, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00001C, "Member 'BP_RiverSpline_Mesh_C_DefineSpline::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_Mesh_C_DefineSpline, CallFunc_Normal_ReturnValue) == 0x000028, "Member 'BP_RiverSpline_Mesh_C_DefineSpline::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RiverSpline_Mesh_C_DefineSpline, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000034, "Member 'BP_RiverSpline_Mesh_C_DefineSpline::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");

}

