#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VegetationModify_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "S_Vegetation_Modifier_Info_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_VegetationModify_Base.BP_VegetationModify_Base_C
// 0x00B8 (0x02D8 - 0x0220)
class ABP_VegetationModify_Base_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        Scene;                                             // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMaterial*                              WriteMaterial;                                     // 0x0230(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterial*                              SwapMaterial;                                      // 0x0238(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterial*                              EraseMaterial;                                     // 0x0240(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               WriteMaterialInstance;                             // 0x0248(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SizeInPixels;                                      // 0x0250(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SizeInCM;                                          // 0x0254(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SizeInCMInv;                                       // 0x0258(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25C[0x4];                                      // 0x025C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_Vegetation_Modifier_Info>    VegetationModifiers;                               // 0x0260(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector2D                              CurCenterPos;                                      // 0x0270(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              PrevCenterPos;                                     // 0x0278(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CurLeftTopPos;                                     // 0x0280(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 CurrentRenderTarget;                               // 0x0288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 PrevRenderTarget;                                  // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentRenderTargetIdx;                            // 0x0298(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29C[0x4];                                      // 0x029C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UTextureRenderTarget2D*>         RenderTargets;                                     // 0x02A0(0x0010)(Edit, BlueprintVisible)
	float                                         CmPerPixel;                                        // 0x02B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PixelsPerCm;                                       // 0x02B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               SwapMaterialInst1To2;                              // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               SwapMaterialInst2To1;                              // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              TexCoordOffset;                                    // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x02D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_VegetationModify_Base(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds_0);
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void DrawVegetationModifiers();
	void InitRenderTargets();
	void UpdatePosition();
	void InitAll();
	void ConvertWorldToTexture(const struct FVector2D& WorldPosXY, struct FVector2D* OutPixelCoords, bool* OutResultIsInsideTexture);
	void Simulate(float DeltaSeconds_0);
	void FlipRenderTargets();
	void InitMaterials();
	void InitRenderTargetsMatParams();
	void InitMaterialDerivedValues();
	void SetupMaterialParamsForSwap();
	void SetupMaterialParamsForRead();
	void SetupMaterialParamsForWrite();
	void AddVegetationModifier(const struct FVector& WorldPos, float Radius);
	void IsInside(const struct FVector& WorldPos, float Radius, bool* IsInside_0);
	void DrawQuads(class UCanvas* Canvas, TArray<struct FCanvasUVQuad>& Quads);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_VegetationModify_Base_C">();
	}
	static class ABP_VegetationModify_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_VegetationModify_Base_C>();
	}
};
static_assert(alignof(ABP_VegetationModify_Base_C) == 0x000008, "Wrong alignment on ABP_VegetationModify_Base_C");
static_assert(sizeof(ABP_VegetationModify_Base_C) == 0x0002D8, "Wrong size on ABP_VegetationModify_Base_C");
static_assert(offsetof(ABP_VegetationModify_Base_C, UberGraphFrame) == 0x000220, "Member 'ABP_VegetationModify_Base_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_VegetationModify_Base_C, Scene) == 0x000228, "Member 'ABP_VegetationModify_Base_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_VegetationModify_Base_C, WriteMaterial) == 0x000230, "Member 'ABP_VegetationModify_Base_C::WriteMaterial' has a wrong offset!");
static_assert(offsetof(ABP_VegetationModify_Base_C, SwapMaterial) == 0x000238, "Member 'ABP_VegetationModify_Base_C::SwapMaterial' has a wrong offset!");
static_assert(offsetof(ABP_VegetationModify_Base_C, EraseMaterial) == 0x000240, "Member 'ABP_VegetationModify_Base_C::EraseMaterial' has a wrong offset!");
static_assert(offsetof(ABP_VegetationModify_Base_C, WriteMaterialInstance) == 0x000248, "Member 'ABP_VegetationModify_Base_C::WriteMaterialInstance' has a wrong offset!");
static_assert(offsetof(ABP_VegetationModify_Base_C, SizeInPixels) == 0x000250, "Member 'ABP_VegetationModify_Base_C::SizeInPixels' has a wrong offset!");
static_assert(offsetof(ABP_VegetationModify_Base_C, SizeInCM) == 0x000254, "Member 'ABP_VegetationModify_Base_C::SizeInCM' has a wrong offset!");
static_assert(offsetof(ABP_VegetationModify_Base_C, SizeInCMInv) == 0x000258, "Member 'ABP_VegetationModify_Base_C::SizeInCMInv' has a wrong offset!");
static_assert(offsetof(ABP_VegetationModify_Base_C, VegetationModifiers) == 0x000260, "Member 'ABP_VegetationModify_Base_C::VegetationModifiers' has a wrong offset!");
static_assert(offsetof(ABP_VegetationModify_Base_C, CurCenterPos) == 0x000270, "Member 'ABP_VegetationModify_Base_C::CurCenterPos' has a wrong offset!");
static_assert(offsetof(ABP_VegetationModify_Base_C, PrevCenterPos) == 0x000278, "Member 'ABP_VegetationModify_Base_C::PrevCenterPos' has a wrong offset!");
static_assert(offsetof(ABP_VegetationModify_Base_C, CurLeftTopPos) == 0x000280, "Member 'ABP_VegetationModify_Base_C::CurLeftTopPos' has a wrong offset!");
static_assert(offsetof(ABP_VegetationModify_Base_C, CurrentRenderTarget) == 0x000288, "Member 'ABP_VegetationModify_Base_C::CurrentRenderTarget' has a wrong offset!");
static_assert(offsetof(ABP_VegetationModify_Base_C, PrevRenderTarget) == 0x000290, "Member 'ABP_VegetationModify_Base_C::PrevRenderTarget' has a wrong offset!");
static_assert(offsetof(ABP_VegetationModify_Base_C, CurrentRenderTargetIdx) == 0x000298, "Member 'ABP_VegetationModify_Base_C::CurrentRenderTargetIdx' has a wrong offset!");
static_assert(offsetof(ABP_VegetationModify_Base_C, RenderTargets) == 0x0002A0, "Member 'ABP_VegetationModify_Base_C::RenderTargets' has a wrong offset!");
static_assert(offsetof(ABP_VegetationModify_Base_C, CmPerPixel) == 0x0002B0, "Member 'ABP_VegetationModify_Base_C::CmPerPixel' has a wrong offset!");
static_assert(offsetof(ABP_VegetationModify_Base_C, PixelsPerCm) == 0x0002B4, "Member 'ABP_VegetationModify_Base_C::PixelsPerCm' has a wrong offset!");
static_assert(offsetof(ABP_VegetationModify_Base_C, SwapMaterialInst1To2) == 0x0002B8, "Member 'ABP_VegetationModify_Base_C::SwapMaterialInst1To2' has a wrong offset!");
static_assert(offsetof(ABP_VegetationModify_Base_C, SwapMaterialInst2To1) == 0x0002C0, "Member 'ABP_VegetationModify_Base_C::SwapMaterialInst2To1' has a wrong offset!");
static_assert(offsetof(ABP_VegetationModify_Base_C, TexCoordOffset) == 0x0002C8, "Member 'ABP_VegetationModify_Base_C::TexCoordOffset' has a wrong offset!");
static_assert(offsetof(ABP_VegetationModify_Base_C, DeltaSeconds) == 0x0002D0, "Member 'ABP_VegetationModify_Base_C::DeltaSeconds' has a wrong offset!");

}

