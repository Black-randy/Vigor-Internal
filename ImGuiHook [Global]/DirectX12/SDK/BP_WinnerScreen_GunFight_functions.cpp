#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WinnerScreen_GunFight

#include "Basic.hpp"

#include "BP_WinnerScreen_GunFight_classes.hpp"
#include "BP_WinnerScreen_GunFight_parameters.hpp"


namespace SDK
{

// Function BP_WinnerScreen_GunFight.BP_WinnerScreen_GunFight_C.ExecuteUbergraph_BP_WinnerScreen_GunFight
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_WinnerScreen_GunFight_C::ExecuteUbergraph_BP_WinnerScreen_GunFight(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinnerScreen_GunFight_C", "ExecuteUbergraph_BP_WinnerScreen_GunFight");

	Params::BP_WinnerScreen_GunFight_C_ExecuteUbergraph_BP_WinnerScreen_GunFight Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WinnerScreen_GunFight.BP_WinnerScreen_GunFight_C.StartWinnerScreenTick
// (BlueprintCallable, BlueprintEvent)

void ABP_WinnerScreen_GunFight_C::StartWinnerScreenTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinnerScreen_GunFight_C", "StartWinnerScreenTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WinnerScreen_GunFight.BP_WinnerScreen_GunFight_C.StartLooserMontage
// (BlueprintCallable, BlueprintEvent)

void ABP_WinnerScreen_GunFight_C::StartLooserMontage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinnerScreen_GunFight_C", "StartLooserMontage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WinnerScreen_GunFight.BP_WinnerScreen_GunFight_C.AnimateMannequins
// (BlueprintCallable, BlueprintEvent)

void ABP_WinnerScreen_GunFight_C::AnimateMannequins()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinnerScreen_GunFight_C", "AnimateMannequins");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WinnerScreen_GunFight.BP_WinnerScreen_GunFight_C.SkipCraneRewardAnim
// (BlueprintCallable, BlueprintEvent)

void ABP_WinnerScreen_GunFight_C::SkipCraneRewardAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinnerScreen_GunFight_C", "SkipCraneRewardAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WinnerScreen_GunFight.BP_WinnerScreen_GunFight_C.SpillAnimFinished
// (BlueprintCallable, BlueprintEvent)

void ABP_WinnerScreen_GunFight_C::SpillAnimFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinnerScreen_GunFight_C", "SpillAnimFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WinnerScreen_GunFight.BP_WinnerScreen_GunFight_C.RewardCranePhaseStart
// (BlueprintCallable, BlueprintEvent)

void ABP_WinnerScreen_GunFight_C::RewardCranePhaseStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinnerScreen_GunFight_C", "RewardCranePhaseStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WinnerScreen_GunFight.BP_WinnerScreen_GunFight_C.CraneAnimStopped
// (BlueprintCallable, BlueprintEvent)

void ABP_WinnerScreen_GunFight_C::CraneAnimStopped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinnerScreen_GunFight_C", "CraneAnimStopped");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WinnerScreen_GunFight.BP_WinnerScreen_GunFight_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_WinnerScreen_GunFight_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinnerScreen_GunFight_C", "ReceiveTick");

	Params::BP_WinnerScreen_GunFight_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WinnerScreen_GunFight.BP_WinnerScreen_GunFight_C.DelayedRewardThresholdUpdate
// (BlueprintCallable, BlueprintEvent)

void ABP_WinnerScreen_GunFight_C::DelayedRewardThresholdUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinnerScreen_GunFight_C", "DelayedRewardThresholdUpdate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WinnerScreen_GunFight.BP_WinnerScreen_GunFight_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_WinnerScreen_GunFight_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinnerScreen_GunFight_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WinnerScreen_GunFight.BP_WinnerScreen_GunFight_C.SkipBoostPhase
// (BlueprintCallable, BlueprintEvent)

void ABP_WinnerScreen_GunFight_C::SkipBoostPhase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinnerScreen_GunFight_C", "SkipBoostPhase");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WinnerScreen_GunFight.BP_WinnerScreen_GunFight_C.BoostPhaseEnded
// (BlueprintCallable, BlueprintEvent)

void ABP_WinnerScreen_GunFight_C::BoostPhaseEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinnerScreen_GunFight_C", "BoostPhaseEnded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WinnerScreen_GunFight.BP_WinnerScreen_GunFight_C.BoostPhaseStart
// (BlueprintCallable, BlueprintEvent)

void ABP_WinnerScreen_GunFight_C::BoostPhaseStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinnerScreen_GunFight_C", "BoostPhaseStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WinnerScreen_GunFight.BP_WinnerScreen_GunFight_C.PreBoostPhaseEnded
// (BlueprintCallable, BlueprintEvent)

void ABP_WinnerScreen_GunFight_C::PreBoostPhaseEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinnerScreen_GunFight_C", "PreBoostPhaseEnded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WinnerScreen_GunFight.BP_WinnerScreen_GunFight_C.ShowRewardPreview
// (BlueprintCallable, BlueprintEvent)

void ABP_WinnerScreen_GunFight_C::ShowRewardPreview()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinnerScreen_GunFight_C", "ShowRewardPreview");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WinnerScreen_GunFight.BP_WinnerScreen_GunFight_C.PeriodicallyAnimateMannequins
// (BlueprintCallable, BlueprintEvent)

void ABP_WinnerScreen_GunFight_C::PeriodicallyAnimateMannequins()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinnerScreen_GunFight_C", "PeriodicallyAnimateMannequins");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WinnerScreen_GunFight.BP_WinnerScreen_GunFight_C.ReceiveDestroyed
// (Event, Public, BlueprintEvent)

void ABP_WinnerScreen_GunFight_C::ReceiveDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinnerScreen_GunFight_C", "ReceiveDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WinnerScreen_GunFight.BP_WinnerScreen_GunFight_C.StopFillSoundEffect
// (BlueprintCallable, BlueprintEvent)

void ABP_WinnerScreen_GunFight_C::StopFillSoundEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinnerScreen_GunFight_C", "StopFillSoundEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WinnerScreen_GunFight.BP_WinnerScreen_GunFight_C.PlayScoreSkipSoundEffect
// (BlueprintCallable, BlueprintEvent)

void ABP_WinnerScreen_GunFight_C::PlayScoreSkipSoundEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinnerScreen_GunFight_C", "PlayScoreSkipSoundEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WinnerScreen_GunFight.BP_WinnerScreen_GunFight_C.PlayFillSoundEffect
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    PlayBeefierSound                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_WinnerScreen_GunFight_C::PlayFillSoundEffect(bool PlayBeefierSound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinnerScreen_GunFight_C", "PlayFillSoundEffect");

	Params::BP_WinnerScreen_GunFight_C_PlayFillSoundEffect Parms{};

	Parms.PlayBeefierSound = PlayBeefierSound;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WinnerScreen_GunFight.BP_WinnerScreen_GunFight_C.WinningScreenReadyGunfight
// (Net, NetReliable, NetMulticast, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class AHumanCharacter*>          Team1Characters                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<struct FStruct_GunFightStatistics>Team1_Statistics_0                                     (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// int32                                   Team1_BoosterCount                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class AHumanCharacter*>          Team2Characters                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<struct FStruct_GunFightStatistics>Team2_Statistics_0                                     (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// int32                                   Team2_BoosterCount                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_WinnerScreen_GunFight_C::WinningScreenReadyGunfight(const TArray<class AHumanCharacter*>& Team1Characters, const TArray<struct FStruct_GunFightStatistics>& Team1_Statistics_0, int32 Team1_BoosterCount, const TArray<class AHumanCharacter*>& Team2Characters, const TArray<struct FStruct_GunFightStatistics>& Team2_Statistics_0, int32 Team2_BoosterCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinnerScreen_GunFight_C", "WinningScreenReadyGunfight");

	Params::BP_WinnerScreen_GunFight_C_WinningScreenReadyGunfight Parms{};

	Parms.Team1Characters = std::move(Team1Characters);
	Parms.Team1_Statistics_0 = std::move(Team1_Statistics_0);
	Parms.Team1_BoosterCount = Team1_BoosterCount;
	Parms.Team2Characters = std::move(Team2Characters);
	Parms.Team2_Statistics_0 = std::move(Team2_Statistics_0);
	Parms.Team2_BoosterCount = Team2_BoosterCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WinnerScreen_GunFight.BP_WinnerScreen_GunFight_C.WaitForFadeIn
// (BlueprintCallable, BlueprintEvent)

void ABP_WinnerScreen_GunFight_C::WaitForFadeIn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinnerScreen_GunFight_C", "WaitForFadeIn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WinnerScreen_GunFight.BP_WinnerScreen_GunFight_C.Winning Screen Delay
// (BlueprintCallable, BlueprintEvent)

void ABP_WinnerScreen_GunFight_C::Winning_Screen_Delay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinnerScreen_GunFight_C", "Winning Screen Delay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WinnerScreen_GunFight.BP_WinnerScreen_GunFight_C.CharactersForUI_Ready
// (BlueprintCallable, BlueprintEvent)

void ABP_WinnerScreen_GunFight_C::CharactersForUI_Ready()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinnerScreen_GunFight_C", "CharactersForUI_Ready");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WinnerScreen_GunFight.BP_WinnerScreen_GunFight_C.WinnerScreenAdded
// (BlueprintCallable, BlueprintEvent)

void ABP_WinnerScreen_GunFight_C::WinnerScreenAdded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinnerScreen_GunFight_C", "WinnerScreenAdded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WinnerScreen_GunFight.BP_WinnerScreen_GunFight_C.ShowScoreboardGunfight
// (BlueprintCallable, BlueprintEvent)

void ABP_WinnerScreen_GunFight_C::ShowScoreboardGunfight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinnerScreen_GunFight_C", "ShowScoreboardGunfight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WinnerScreen_GunFight.BP_WinnerScreen_GunFight_C.Start FadeOut
// (BlueprintCallable, BlueprintEvent)

void ABP_WinnerScreen_GunFight_C::Start_FadeOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinnerScreen_GunFight_C", "Start FadeOut");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WinnerScreen_GunFight.BP_WinnerScreen_GunFight_C.InitializeAllValidMannequinScoreWidgets
// (BlueprintCallable, BlueprintEvent)

void ABP_WinnerScreen_GunFight_C::InitializeAllValidMannequinScoreWidgets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinnerScreen_GunFight_C", "InitializeAllValidMannequinScoreWidgets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WinnerScreen_GunFight.BP_WinnerScreen_GunFight_C.OnScoreShownUpdated
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ScoreShown                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_WinnerScreen_GunFight_C::OnScoreShownUpdated(int32 ScoreShown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinnerScreen_GunFight_C", "OnScoreShownUpdated");

	Params::BP_WinnerScreen_GunFight_C_OnScoreShownUpdated Parms{};

	Parms.ScoreShown = ScoreShown;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WinnerScreen_GunFight.BP_WinnerScreen_GunFight_C.ResetScoreAddition
// (BlueprintCallable, BlueprintEvent)

void ABP_WinnerScreen_GunFight_C::ResetScoreAddition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinnerScreen_GunFight_C", "ResetScoreAddition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WinnerScreen_GunFight.BP_WinnerScreen_GunFight_C.OnMannequinScoreDone_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Mannequin_WinnerScreen_GunFight_C*Mannequin                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Skipped                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_WinnerScreen_GunFight_C::OnMannequinScoreDone_Event(class ABP_Mannequin_WinnerScreen_GunFight_C* Mannequin, bool Skipped)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinnerScreen_GunFight_C", "OnMannequinScoreDone_Event");

	Params::BP_WinnerScreen_GunFight_C_OnMannequinScoreDone_Event Parms{};

	Parms.Mannequin = Mannequin;
	Parms.Skipped = Skipped;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WinnerScreen_GunFight.BP_WinnerScreen_GunFight_C.WinningScreenReadyGM_Specific_ClientEvent
// (BlueprintCallable, BlueprintEvent)

void ABP_WinnerScreen_GunFight_C::WinningScreenReadyGM_Specific_ClientEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinnerScreen_GunFight_C", "WinningScreenReadyGM_Specific_ClientEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WinnerScreen_GunFight.BP_WinnerScreen_GunFight_C.StartTheScoreTeamAddition
// (BlueprintCallable, BlueprintEvent)

void ABP_WinnerScreen_GunFight_C::StartTheScoreTeamAddition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinnerScreen_GunFight_C", "StartTheScoreTeamAddition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WinnerScreen_GunFight.BP_WinnerScreen_GunFight_C.Set Highlighted Player
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHumanCharacter*                  HumanCharacter                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_WinnerScreen_GunFight_C::Set_Highlighted_Player(class AHumanCharacter* HumanCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinnerScreen_GunFight_C", "Set Highlighted Player");

	Params::BP_WinnerScreen_GunFight_C_Set_Highlighted_Player Parms{};

	Parms.HumanCharacter = HumanCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WinnerScreen_GunFight.BP_WinnerScreen_GunFight_C.BoostPhaseTimeline__UpdateFunc
// (BlueprintEvent)

void ABP_WinnerScreen_GunFight_C::BoostPhaseTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinnerScreen_GunFight_C", "BoostPhaseTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WinnerScreen_GunFight.BP_WinnerScreen_GunFight_C.BoostPhaseTimeline__FinishedFunc
// (BlueprintEvent)

void ABP_WinnerScreen_GunFight_C::BoostPhaseTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinnerScreen_GunFight_C", "BoostPhaseTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WinnerScreen_GunFight.BP_WinnerScreen_GunFight_C.Cycle Next Hightlighted Player
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_WinnerScreen_GunFight_C::Cycle_Next_Hightlighted_Player()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinnerScreen_GunFight_C", "Cycle Next Hightlighted Player");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WinnerScreen_GunFight.BP_WinnerScreen_GunFight_C.GetCurrentlyShowcasingMannequin
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bFound                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class ABP_Mannequin_WinnerScreen_GunFight_C*Mannequin                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_WinnerScreen_GunFight_C::GetCurrentlyShowcasingMannequin(bool* bFound, class ABP_Mannequin_WinnerScreen_GunFight_C** Mannequin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinnerScreen_GunFight_C", "GetCurrentlyShowcasingMannequin");

	Params::BP_WinnerScreen_GunFight_C_GetCurrentlyShowcasingMannequin Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bFound != nullptr)
		*bFound = Parms.bFound;

	if (Mannequin != nullptr)
		*Mannequin = Parms.Mannequin;
}


// Function BP_WinnerScreen_GunFight.BP_WinnerScreen_GunFight_C.GetScoreFillTime
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Score                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_WinnerScreen_GunFight_C::GetScoreFillTime(int32 Score, float* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinnerScreen_GunFight_C", "GetScoreFillTime");

	Params::BP_WinnerScreen_GunFight_C_GetScoreFillTime Parms{};

	Parms.Score = Score;

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function BP_WinnerScreen_GunFight.BP_WinnerScreen_GunFight_C.FilterOutOppositeTeam
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_WinnerScreen_GunFight_C::FilterOutOppositeTeam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinnerScreen_GunFight_C", "FilterOutOppositeTeam");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WinnerScreen_GunFight.BP_WinnerScreen_GunFight_C.FilterControllersIntoTeams
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TMap<class AHumanPlayerController*, class AHumanCharacter*>ControllersToCharacters                                (BlueprintVisible, BlueprintReadOnly, Parm)
// TArray<class AHumanCharacter*>          Team1_Characters                                       (Parm, OutParm)
// TArray<struct FStruct_GunFightStatistics>Team1_Statistics_0                                     (Parm, OutParm)
// int32                                   Team1_BoosterCount                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class AHumanCharacter*>          Team2_Characters                                       (Parm, OutParm)
// TArray<struct FStruct_GunFightStatistics>Team2_Statistics_0                                     (Parm, OutParm)
// int32                                   Team2_BoosterCount                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_WinnerScreen_GunFight_C::FilterControllersIntoTeams(const TMap<class AHumanPlayerController*, class AHumanCharacter*>& ControllersToCharacters, TArray<class AHumanCharacter*>* Team1_Characters, TArray<struct FStruct_GunFightStatistics>* Team1_Statistics_0, int32* Team1_BoosterCount, TArray<class AHumanCharacter*>* Team2_Characters, TArray<struct FStruct_GunFightStatistics>* Team2_Statistics_0, int32* Team2_BoosterCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinnerScreen_GunFight_C", "FilterControllersIntoTeams");

	Params::BP_WinnerScreen_GunFight_C_FilterControllersIntoTeams Parms{};

	Parms.ControllersToCharacters = std::move(ControllersToCharacters);

	UObject::ProcessEvent(Func, &Parms);

	if (Team1_Characters != nullptr)
		*Team1_Characters = std::move(Parms.Team1_Characters);

	if (Team1_Statistics_0 != nullptr)
		*Team1_Statistics_0 = std::move(Parms.Team1_Statistics_0);

	if (Team1_BoosterCount != nullptr)
		*Team1_BoosterCount = Parms.Team1_BoosterCount;

	if (Team2_Characters != nullptr)
		*Team2_Characters = std::move(Parms.Team2_Characters);

	if (Team2_Statistics_0 != nullptr)
		*Team2_Statistics_0 = std::move(Parms.Team2_Statistics_0);

	if (Team2_BoosterCount != nullptr)
		*Team2_BoosterCount = Parms.Team2_BoosterCount;
}


// Function BP_WinnerScreen_GunFight.BP_WinnerScreen_GunFight_C.PlayRewardSoundEffect
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bPlayerWon                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   RewardTier                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_WinnerScreen_GunFight_C::PlayRewardSoundEffect(bool bPlayerWon, int32 RewardTier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinnerScreen_GunFight_C", "PlayRewardSoundEffect");

	Params::BP_WinnerScreen_GunFight_C_PlayRewardSoundEffect Parms{};

	Parms.bPlayerWon = bPlayerWon;
	Parms.RewardTier = RewardTier;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WinnerScreen_GunFight.BP_WinnerScreen_GunFight_C.HandleRewardTresholds
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    CheckAll                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_WinnerScreen_GunFight_C::HandleRewardTresholds(bool CheckAll)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinnerScreen_GunFight_C", "HandleRewardTresholds");

	Params::BP_WinnerScreen_GunFight_C_HandleRewardTresholds Parms{};

	Parms.CheckAll = CheckAll;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WinnerScreen_GunFight.BP_WinnerScreen_GunFight_C.UpdateRewardUI
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RewardTier                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_WinnerScreen_GunFight_C::UpdateRewardUI(int32 RewardTier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinnerScreen_GunFight_C", "UpdateRewardUI");

	Params::BP_WinnerScreen_GunFight_C_UpdateRewardUI Parms{};

	Parms.RewardTier = RewardTier;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WinnerScreen_GunFight.BP_WinnerScreen_GunFight_C.GetLocalTeamRewardTresholdMultiplier
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   TresholdMultiplier                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_WinnerScreen_GunFight_C::GetLocalTeamRewardTresholdMultiplier(float* TresholdMultiplier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinnerScreen_GunFight_C", "GetLocalTeamRewardTresholdMultiplier");

	Params::BP_WinnerScreen_GunFight_C_GetLocalTeamRewardTresholdMultiplier Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TresholdMultiplier != nullptr)
		*TresholdMultiplier = Parms.TresholdMultiplier;
}


// Function BP_WinnerScreen_GunFight.BP_WinnerScreen_GunFight_C.Setup Reward Thresholds
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_WinnerScreen_GunFight_C::Setup_Reward_Thresholds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinnerScreen_GunFight_C", "Setup Reward Thresholds");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WinnerScreen_GunFight.BP_WinnerScreen_GunFight_C.GetHighestRewardReached
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RewardIndex                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UClass*>                   MatchInfoRewards                                       (Parm, OutParm)

void ABP_WinnerScreen_GunFight_C::GetHighestRewardReached(int32* RewardIndex, TArray<class UClass*>* MatchInfoRewards)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinnerScreen_GunFight_C", "GetHighestRewardReached");

	Params::BP_WinnerScreen_GunFight_C_GetHighestRewardReached Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RewardIndex != nullptr)
		*RewardIndex = Parms.RewardIndex;

	if (MatchInfoRewards != nullptr)
		*MatchInfoRewards = std::move(Parms.MatchInfoRewards);
}

}

