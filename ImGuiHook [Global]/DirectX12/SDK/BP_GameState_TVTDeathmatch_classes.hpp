#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GameState_TVTDeathmatch

#include "Basic.hpp"

#include "Flame_structs.hpp"
#include "Engine_structs.hpp"
#include "F_Shootout_Lootbox_Loot_structs.hpp"
#include "Struct_TVTDeathmatchStatistics_structs.hpp"
#include "BP_GameState_Teams_classes.hpp"
#include "E_TeamsMatchPhase_structs.hpp"
#include "FlameUI_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_GameState_TVTDeathmatch.BP_GameState_TVTDeathmatch_C
// 0x00C8 (0x0580 - 0x04B8)
class ABP_GameState_TVTDeathmatch_C final : public ABP_GameState_Teams_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_GameState_TVTDeathmatch_C;       // 0x04B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          Last_Five_Minutes_Played;                          // 0x04C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Last_Minute_Played;                                // 0x04C1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Last_Ten_Seconds_Played;                           // 0x04C2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C3[0x5];                                      // 0x04C3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FStruct_TVTDeathmatchStatistics> Inactive_Players_Statistics;                       // 0x04C8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UUI_TVTDeathmatch_KillFeed_C*           Kill_Feed_UI;                                      // 0x04D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Leave_Match_Time;                                  // 0x04E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          _Last_Man_Standing_Started;                        // 0x04E4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E5[0x3];                                      // 0x04E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_WinnerScreen_Base_C*                WinnerScreen;                                      // 0x04E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Match_Start_Wait_Time_Repl_Timer;                  // 0x04F0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMap<ECloudMatchLootboxType, struct FF_Shootout_Lootbox_Loot> Possible_loot;                                     // 0x04F8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FCloudMatchLootbox>             PossibleCloudLootboxes;                            // 0x0548(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         How_many_mags_spawn_with_weapon;                   // 0x0558(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         How_many_consumables_spawn;                        // 0x055C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_TVTDeathmatch_Box_C*>        LootBoxes;                                         // 0x0560(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnTemplate, DisableEditOnInstance)
	int32                                         Lootbox_respawn_time;                              // 0x0570(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_574[0x4];                                      // 0x0574(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        Last_10_Seconds_Sound;                             // 0x0578(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_GameState_TVTDeathmatch(int32 EntryPoint);
	void Clear_UI();
	void Handle_Match_Phase(E_TeamsMatchPhase Match_Phase_0);
	void Replicate_Match_Start_Wait_Time();
	void Add_Inactive_Player_Statistic(const struct FStruct_TVTDeathmatchStatistics& Player_Statistic);
	void Player_Scored_7_Kill_Streak(class ABP_PlayerController_C* Player_Controller, const class FString& Player_name, EFlamePlatform PlayerPlatform);
	void Last_Man_Standing_Started();
	void Player_Scored_3_Kill_Streak(class ABP_PlayerController_C* Player_Controller, const class FString& Player_name, EFlamePlatform PlayerPlatform);
	void Player_Scored_5_Kill_Streak(class ABP_PlayerController_C* Player_Controller, const class FString& Player_name, EFlamePlatform PlayerPlatform);
	void Notify_Player_Statistics_Changed();
	void Players_Update_Time_Remaining(int32 Remaining_Time);
	void Set_Match_Remaining_Time(int32 Remaining_Time);
	void Last_Ten_Seconds_In_Match();
	void Last_Minute_In_Match();
	void Last_Five_Minutes_In_Match();
	void Show_Kill_Feed(const struct FStruct_TVTDeathmatch_KillFeed& KillFeed);
	void Check_Remaining_Time_Sound_Cues();
	void Get_Winning_Player_Statistics(TArray<struct FStruct_TVTDeathmatchStatistics>* Winning_Player_Statistics);
	void Get_Sorted_Statistics(TArray<struct FStruct_TVTDeathmatchStatistics>& Statistics, TArray<struct FStruct_TVTDeathmatchStatistics>* Sorted_Statistics);
	void Get_Statistics(TArray<struct FStruct_TVTDeathmatchStatistics>* Statistics);
	void Find_Winner_Screen();
	void Display_Winner_Screen();
	void GetScoreboardTabs(TArray<struct FStruct_ScoreboardTab>* Tabs);
	void IsLocalPlayerWinning(bool* IsWinning);
	void Get_Unique_Net_ID_From_Player_ID(int32 Player_ID, struct FUniqueNetIdRepl* Net_id);
	void BuildCustomMessage(int32 KillCount, class FText* Message);
	void GetGameModeStringName(class FString* StringName);
	void Get_Weight_Based_Random_Items(TArray<struct FCloudMatchLootboxItem>& Items, int32 ItemSpawnCount, TArray<struct FCloudItemInfo>* PickedItems);
	void Get_Weight_Based_Random_Item(TArray<struct FCloudMatchLootboxItem>& Items, struct FCloudMatchLootboxItem* PickedItem);

	void Get_Cloud_Lootbox_Definition_by_Type(ECloudMatchLootboxType Box_Type, bool* Found, struct FCloudMatchLootbox* LootboxDefinition) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_GameState_TVTDeathmatch_C">();
	}
	static class ABP_GameState_TVTDeathmatch_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_GameState_TVTDeathmatch_C>();
	}
};
static_assert(alignof(ABP_GameState_TVTDeathmatch_C) == 0x000008, "Wrong alignment on ABP_GameState_TVTDeathmatch_C");
static_assert(sizeof(ABP_GameState_TVTDeathmatch_C) == 0x000580, "Wrong size on ABP_GameState_TVTDeathmatch_C");
static_assert(offsetof(ABP_GameState_TVTDeathmatch_C, UberGraphFrame_BP_GameState_TVTDeathmatch_C) == 0x0004B8, "Member 'ABP_GameState_TVTDeathmatch_C::UberGraphFrame_BP_GameState_TVTDeathmatch_C' has a wrong offset!");
static_assert(offsetof(ABP_GameState_TVTDeathmatch_C, Last_Five_Minutes_Played) == 0x0004C0, "Member 'ABP_GameState_TVTDeathmatch_C::Last_Five_Minutes_Played' has a wrong offset!");
static_assert(offsetof(ABP_GameState_TVTDeathmatch_C, Last_Minute_Played) == 0x0004C1, "Member 'ABP_GameState_TVTDeathmatch_C::Last_Minute_Played' has a wrong offset!");
static_assert(offsetof(ABP_GameState_TVTDeathmatch_C, Last_Ten_Seconds_Played) == 0x0004C2, "Member 'ABP_GameState_TVTDeathmatch_C::Last_Ten_Seconds_Played' has a wrong offset!");
static_assert(offsetof(ABP_GameState_TVTDeathmatch_C, Inactive_Players_Statistics) == 0x0004C8, "Member 'ABP_GameState_TVTDeathmatch_C::Inactive_Players_Statistics' has a wrong offset!");
static_assert(offsetof(ABP_GameState_TVTDeathmatch_C, Kill_Feed_UI) == 0x0004D8, "Member 'ABP_GameState_TVTDeathmatch_C::Kill_Feed_UI' has a wrong offset!");
static_assert(offsetof(ABP_GameState_TVTDeathmatch_C, Leave_Match_Time) == 0x0004E0, "Member 'ABP_GameState_TVTDeathmatch_C::Leave_Match_Time' has a wrong offset!");
static_assert(offsetof(ABP_GameState_TVTDeathmatch_C, _Last_Man_Standing_Started) == 0x0004E4, "Member 'ABP_GameState_TVTDeathmatch_C::_Last_Man_Standing_Started' has a wrong offset!");
static_assert(offsetof(ABP_GameState_TVTDeathmatch_C, WinnerScreen) == 0x0004E8, "Member 'ABP_GameState_TVTDeathmatch_C::WinnerScreen' has a wrong offset!");
static_assert(offsetof(ABP_GameState_TVTDeathmatch_C, Match_Start_Wait_Time_Repl_Timer) == 0x0004F0, "Member 'ABP_GameState_TVTDeathmatch_C::Match_Start_Wait_Time_Repl_Timer' has a wrong offset!");
static_assert(offsetof(ABP_GameState_TVTDeathmatch_C, Possible_loot) == 0x0004F8, "Member 'ABP_GameState_TVTDeathmatch_C::Possible_loot' has a wrong offset!");
static_assert(offsetof(ABP_GameState_TVTDeathmatch_C, PossibleCloudLootboxes) == 0x000548, "Member 'ABP_GameState_TVTDeathmatch_C::PossibleCloudLootboxes' has a wrong offset!");
static_assert(offsetof(ABP_GameState_TVTDeathmatch_C, How_many_mags_spawn_with_weapon) == 0x000558, "Member 'ABP_GameState_TVTDeathmatch_C::How_many_mags_spawn_with_weapon' has a wrong offset!");
static_assert(offsetof(ABP_GameState_TVTDeathmatch_C, How_many_consumables_spawn) == 0x00055C, "Member 'ABP_GameState_TVTDeathmatch_C::How_many_consumables_spawn' has a wrong offset!");
static_assert(offsetof(ABP_GameState_TVTDeathmatch_C, LootBoxes) == 0x000560, "Member 'ABP_GameState_TVTDeathmatch_C::LootBoxes' has a wrong offset!");
static_assert(offsetof(ABP_GameState_TVTDeathmatch_C, Lootbox_respawn_time) == 0x000570, "Member 'ABP_GameState_TVTDeathmatch_C::Lootbox_respawn_time' has a wrong offset!");
static_assert(offsetof(ABP_GameState_TVTDeathmatch_C, Last_10_Seconds_Sound) == 0x000578, "Member 'ABP_GameState_TVTDeathmatch_C::Last_10_Seconds_Sound' has a wrong offset!");

}

