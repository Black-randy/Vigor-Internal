#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SRTarget_WaterBarell

#include "Basic.hpp"

#include "BP_SRTarget_WaterBarell_classes.hpp"
#include "BP_SRTarget_WaterBarell_parameters.hpp"


namespace SDK
{

// Function BP_SRTarget_WaterBarell.BP_SRTarget_WaterBarell_C.ExecuteUbergraph_BP_SRTarget_WaterBarell
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SRTarget_WaterBarell_C::ExecuteUbergraph_BP_SRTarget_WaterBarell(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SRTarget_WaterBarell_C", "ExecuteUbergraph_BP_SRTarget_WaterBarell");

	Params::BP_SRTarget_WaterBarell_C_ExecuteUbergraph_BP_SRTarget_WaterBarell Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SRTarget_WaterBarell.BP_SRTarget_WaterBarell_C.MulticastedDestroySpillWater
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_SRTarget_WaterBarell_C::MulticastedDestroySpillWater()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SRTarget_WaterBarell_C", "MulticastedDestroySpillWater");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SRTarget_WaterBarell.BP_SRTarget_WaterBarell_C.MulticastedSpillWater
// (Net, NetMulticast, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Normal                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SRTarget_WaterBarell_C::MulticastedSpillWater(const struct FVector& Location, const struct FVector& Normal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SRTarget_WaterBarell_C", "MulticastedSpillWater");

	Params::BP_SRTarget_WaterBarell_C_MulticastedSpillWater Parms{};

	Parms.Location = std::move(Location);
	Parms.Normal = std::move(Normal);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SRTarget_WaterBarell.BP_SRTarget_WaterBarell_C.ResetTargetServer
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_SRTarget_WaterBarell_C::ResetTargetServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SRTarget_WaterBarell_C", "ResetTargetServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SRTarget_WaterBarell.BP_SRTarget_WaterBarell_C.ReceivePointDamage
// (BlueprintAuthorityOnly, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UDamageType*                      DamageType                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitNormal                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ShotFromDirection                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AController*                      InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitInfo                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_SRTarget_WaterBarell_C::ReceivePointDamage(float Damage, const class UDamageType* DamageType, const struct FVector& HitLocation, const struct FVector& HitNormal, class UPrimitiveComponent* HitComponent, class FName BoneName, const struct FVector& ShotFromDirection, class AController* InstigatedBy, class AActor* DamageCauser, const struct FHitResult& HitInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SRTarget_WaterBarell_C", "ReceivePointDamage");

	Params::BP_SRTarget_WaterBarell_C_ReceivePointDamage Parms{};

	Parms.Damage = Damage;
	Parms.DamageType = DamageType;
	Parms.HitLocation = std::move(HitLocation);
	Parms.HitNormal = std::move(HitNormal);
	Parms.HitComponent = HitComponent;
	Parms.BoneName = BoneName;
	Parms.ShotFromDirection = std::move(ShotFromDirection);
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;
	Parms.HitInfo = std::move(HitInfo);

	UObject::ProcessEvent(Func, &Parms);
}

}

