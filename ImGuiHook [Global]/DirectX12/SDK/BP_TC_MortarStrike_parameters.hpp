#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TC_MortarStrike

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "PhysicsCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_TC_MortarStrike.BP_TC_MortarStrike_C.ExecuteUbergraph_BP_TC_MortarStrike
// 0x0090 (0x0090 - 0x0000)
struct BP_TC_MortarStrike_C_ExecuteUbergraph_BP_TC_MortarStrike final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             Temp_struct_Variable;                              // 0x0010(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_AddComponent_ReturnValue;                 // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlacableTrap_Object_Base_C*         K2Node_Event_PlacedTrap;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_TC_MortarStrike_Object_C*           K2Node_DynamicCast_AsBP_TC_Mortar_Strike_Object;   // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_TC_MortarStrike_Hologram_C*         K2Node_DynamicCast_AsBP_TC_Mortar_Strike_Hologram; // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_Event_PlayerController;                     // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TC_MortarStrike_C_ExecuteUbergraph_BP_TC_MortarStrike) == 0x000010, "Wrong alignment on BP_TC_MortarStrike_C_ExecuteUbergraph_BP_TC_MortarStrike");
static_assert(sizeof(BP_TC_MortarStrike_C_ExecuteUbergraph_BP_TC_MortarStrike) == 0x000090, "Wrong size on BP_TC_MortarStrike_C_ExecuteUbergraph_BP_TC_MortarStrike");
static_assert(offsetof(BP_TC_MortarStrike_C_ExecuteUbergraph_BP_TC_MortarStrike, EntryPoint) == 0x000000, "Member 'BP_TC_MortarStrike_C_ExecuteUbergraph_BP_TC_MortarStrike::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_TC_MortarStrike_C_ExecuteUbergraph_BP_TC_MortarStrike, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_TC_MortarStrike_C_ExecuteUbergraph_BP_TC_MortarStrike::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TC_MortarStrike_C_ExecuteUbergraph_BP_TC_MortarStrike, Temp_struct_Variable) == 0x000010, "Member 'BP_TC_MortarStrike_C_ExecuteUbergraph_BP_TC_MortarStrike::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_TC_MortarStrike_C_ExecuteUbergraph_BP_TC_MortarStrike, CallFunc_IsDedicatedServer_ReturnValue) == 0x000040, "Member 'BP_TC_MortarStrike_C_ExecuteUbergraph_BP_TC_MortarStrike::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TC_MortarStrike_C_ExecuteUbergraph_BP_TC_MortarStrike, CallFunc_AddComponent_ReturnValue) == 0x000048, "Member 'BP_TC_MortarStrike_C_ExecuteUbergraph_BP_TC_MortarStrike::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TC_MortarStrike_C_ExecuteUbergraph_BP_TC_MortarStrike, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000050, "Member 'BP_TC_MortarStrike_C_ExecuteUbergraph_BP_TC_MortarStrike::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TC_MortarStrike_C_ExecuteUbergraph_BP_TC_MortarStrike, K2Node_Event_PlacedTrap) == 0x000058, "Member 'BP_TC_MortarStrike_C_ExecuteUbergraph_BP_TC_MortarStrike::K2Node_Event_PlacedTrap' has a wrong offset!");
static_assert(offsetof(BP_TC_MortarStrike_C_ExecuteUbergraph_BP_TC_MortarStrike, K2Node_DynamicCast_AsBP_TC_Mortar_Strike_Object) == 0x000060, "Member 'BP_TC_MortarStrike_C_ExecuteUbergraph_BP_TC_MortarStrike::K2Node_DynamicCast_AsBP_TC_Mortar_Strike_Object' has a wrong offset!");
static_assert(offsetof(BP_TC_MortarStrike_C_ExecuteUbergraph_BP_TC_MortarStrike, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BP_TC_MortarStrike_C_ExecuteUbergraph_BP_TC_MortarStrike::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_TC_MortarStrike_C_ExecuteUbergraph_BP_TC_MortarStrike, CallFunc_IsValid_ReturnValue) == 0x000069, "Member 'BP_TC_MortarStrike_C_ExecuteUbergraph_BP_TC_MortarStrike::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TC_MortarStrike_C_ExecuteUbergraph_BP_TC_MortarStrike, K2Node_DynamicCast_AsBP_TC_Mortar_Strike_Hologram) == 0x000070, "Member 'BP_TC_MortarStrike_C_ExecuteUbergraph_BP_TC_MortarStrike::K2Node_DynamicCast_AsBP_TC_Mortar_Strike_Hologram' has a wrong offset!");
static_assert(offsetof(BP_TC_MortarStrike_C_ExecuteUbergraph_BP_TC_MortarStrike, K2Node_DynamicCast_bSuccess_1) == 0x000078, "Member 'BP_TC_MortarStrike_C_ExecuteUbergraph_BP_TC_MortarStrike::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_TC_MortarStrike_C_ExecuteUbergraph_BP_TC_MortarStrike, K2Node_Event_PlayerController) == 0x000080, "Member 'BP_TC_MortarStrike_C_ExecuteUbergraph_BP_TC_MortarStrike::K2Node_Event_PlayerController' has a wrong offset!");

// Function BP_TC_MortarStrike.BP_TC_MortarStrike_C.Trap_Object_Spawn
// 0x0008 (0x0008 - 0x0000)
struct BP_TC_MortarStrike_C_Trap_Object_Spawn final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TC_MortarStrike_C_Trap_Object_Spawn) == 0x000008, "Wrong alignment on BP_TC_MortarStrike_C_Trap_Object_Spawn");
static_assert(sizeof(BP_TC_MortarStrike_C_Trap_Object_Spawn) == 0x000008, "Wrong size on BP_TC_MortarStrike_C_Trap_Object_Spawn");
static_assert(offsetof(BP_TC_MortarStrike_C_Trap_Object_Spawn, PlayerController) == 0x000000, "Member 'BP_TC_MortarStrike_C_Trap_Object_Spawn::PlayerController' has a wrong offset!");

// Function BP_TC_MortarStrike.BP_TC_MortarStrike_C.Trap_Set_Variables
// 0x0008 (0x0008 - 0x0000)
struct BP_TC_MortarStrike_C_Trap_Set_Variables final
{
public:
	class ABP_PlacableTrap_Object_Base_C*         PlacedTrap;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TC_MortarStrike_C_Trap_Set_Variables) == 0x000008, "Wrong alignment on BP_TC_MortarStrike_C_Trap_Set_Variables");
static_assert(sizeof(BP_TC_MortarStrike_C_Trap_Set_Variables) == 0x000008, "Wrong size on BP_TC_MortarStrike_C_Trap_Set_Variables");
static_assert(offsetof(BP_TC_MortarStrike_C_Trap_Set_Variables, PlacedTrap) == 0x000000, "Member 'BP_TC_MortarStrike_C_Trap_Set_Variables::PlacedTrap' has a wrong offset!");

// Function BP_TC_MortarStrike.BP_TC_MortarStrike_C.Trap_Placement_CanBePlaced
// 0x00B8 (0x00B8 - 0x0000)
struct BP_TC_MortarStrike_C_Trap_Placement_CanBePlaced final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         MaxZNormal;                                        // 0x008C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<TSoftClassPtr<class UClass>>           ActorsThatBlocksThePlacement;                      // 0x0090(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<EPhysicalSurface>                      SurfacesThatBlocksThePlacement;                    // 0x00A0(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Trap_CanBePlacedInWater;                           // 0x00B0(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Trap_CanBePlacedVertically;                        // 0x00B1(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CanBePlaced;                                       // 0x00B2(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TC_MortarStrike_C_Trap_Placement_CanBePlaced) == 0x000008, "Wrong alignment on BP_TC_MortarStrike_C_Trap_Placement_CanBePlaced");
static_assert(sizeof(BP_TC_MortarStrike_C_Trap_Placement_CanBePlaced) == 0x0000B8, "Wrong size on BP_TC_MortarStrike_C_Trap_Placement_CanBePlaced");
static_assert(offsetof(BP_TC_MortarStrike_C_Trap_Placement_CanBePlaced, Hit) == 0x000000, "Member 'BP_TC_MortarStrike_C_Trap_Placement_CanBePlaced::Hit' has a wrong offset!");
static_assert(offsetof(BP_TC_MortarStrike_C_Trap_Placement_CanBePlaced, MaxZNormal) == 0x00008C, "Member 'BP_TC_MortarStrike_C_Trap_Placement_CanBePlaced::MaxZNormal' has a wrong offset!");
static_assert(offsetof(BP_TC_MortarStrike_C_Trap_Placement_CanBePlaced, ActorsThatBlocksThePlacement) == 0x000090, "Member 'BP_TC_MortarStrike_C_Trap_Placement_CanBePlaced::ActorsThatBlocksThePlacement' has a wrong offset!");
static_assert(offsetof(BP_TC_MortarStrike_C_Trap_Placement_CanBePlaced, SurfacesThatBlocksThePlacement) == 0x0000A0, "Member 'BP_TC_MortarStrike_C_Trap_Placement_CanBePlaced::SurfacesThatBlocksThePlacement' has a wrong offset!");
static_assert(offsetof(BP_TC_MortarStrike_C_Trap_Placement_CanBePlaced, Trap_CanBePlacedInWater) == 0x0000B0, "Member 'BP_TC_MortarStrike_C_Trap_Placement_CanBePlaced::Trap_CanBePlacedInWater' has a wrong offset!");
static_assert(offsetof(BP_TC_MortarStrike_C_Trap_Placement_CanBePlaced, Trap_CanBePlacedVertically) == 0x0000B1, "Member 'BP_TC_MortarStrike_C_Trap_Placement_CanBePlaced::Trap_CanBePlacedVertically' has a wrong offset!");
static_assert(offsetof(BP_TC_MortarStrike_C_Trap_Placement_CanBePlaced, CanBePlaced) == 0x0000B2, "Member 'BP_TC_MortarStrike_C_Trap_Placement_CanBePlaced::CanBePlaced' has a wrong offset!");

}

