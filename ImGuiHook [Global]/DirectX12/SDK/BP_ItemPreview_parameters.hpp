#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ItemPreview

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "EItemPreviewContext_structs.hpp"
#include "Flame_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "S_JiggleDefinition_structs.hpp"
#include "S_JiggleSettings_structs.hpp"
#include "E_MeshSpecificJiggle_structs.hpp"


namespace SDK::Params
{

// Function BP_ItemPreview.BP_ItemPreview_C.ExecuteUbergraph_BP_ItemPreview
// 0x00E0 (0x00E0 - 0x0000)
struct BP_ItemPreview_C_ExecuteUbergraph_BP_ItemPreview final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_2;                   // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_1;                   // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_1;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_2;            // 0x003C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable;                                // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0054(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0068(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_CustomEvent_MontageToPlay;                  // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_4;                   // 0x00AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_3;                   // 0x00B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_4;            // 0x00BC(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_5;            // 0x00D0(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_ItemPreview_C_ExecuteUbergraph_BP_ItemPreview) == 0x000008, "Wrong alignment on BP_ItemPreview_C_ExecuteUbergraph_BP_ItemPreview");
static_assert(sizeof(BP_ItemPreview_C_ExecuteUbergraph_BP_ItemPreview) == 0x0000E0, "Wrong size on BP_ItemPreview_C_ExecuteUbergraph_BP_ItemPreview");
static_assert(offsetof(BP_ItemPreview_C_ExecuteUbergraph_BP_ItemPreview, EntryPoint) == 0x000000, "Member 'BP_ItemPreview_C_ExecuteUbergraph_BP_ItemPreview::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ExecuteUbergraph_BP_ItemPreview, K2Node_CustomEvent_NotifyName_2) == 0x000004, "Member 'BP_ItemPreview_C_ExecuteUbergraph_BP_ItemPreview::K2Node_CustomEvent_NotifyName_2' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ExecuteUbergraph_BP_ItemPreview, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'BP_ItemPreview_C_ExecuteUbergraph_BP_ItemPreview::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ExecuteUbergraph_BP_ItemPreview, K2Node_CustomEvent_NotifyName_1) == 0x00001C, "Member 'BP_ItemPreview_C_ExecuteUbergraph_BP_ItemPreview::K2Node_CustomEvent_NotifyName_1' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ExecuteUbergraph_BP_ItemPreview, K2Node_CreateDelegate_OutputDelegate_1) == 0x000024, "Member 'BP_ItemPreview_C_ExecuteUbergraph_BP_ItemPreview::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ExecuteUbergraph_BP_ItemPreview, K2Node_CustomEvent_NotifyName) == 0x000034, "Member 'BP_ItemPreview_C_ExecuteUbergraph_BP_ItemPreview::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ExecuteUbergraph_BP_ItemPreview, K2Node_CreateDelegate_OutputDelegate_2) == 0x00003C, "Member 'BP_ItemPreview_C_ExecuteUbergraph_BP_ItemPreview::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ExecuteUbergraph_BP_ItemPreview, Temp_name_Variable) == 0x00004C, "Member 'BP_ItemPreview_C_ExecuteUbergraph_BP_ItemPreview::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ExecuteUbergraph_BP_ItemPreview, K2Node_CreateDelegate_OutputDelegate_3) == 0x000054, "Member 'BP_ItemPreview_C_ExecuteUbergraph_BP_ItemPreview::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ExecuteUbergraph_BP_ItemPreview, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000068, "Member 'BP_ItemPreview_C_ExecuteUbergraph_BP_ItemPreview::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ExecuteUbergraph_BP_ItemPreview, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'BP_ItemPreview_C_ExecuteUbergraph_BP_ItemPreview::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ExecuteUbergraph_BP_ItemPreview, CallFunc_IsValid_ReturnValue_1) == 0x000071, "Member 'BP_ItemPreview_C_ExecuteUbergraph_BP_ItemPreview::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ExecuteUbergraph_BP_ItemPreview, CallFunc_GetAnimInstance_ReturnValue) == 0x000078, "Member 'BP_ItemPreview_C_ExecuteUbergraph_BP_ItemPreview::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ExecuteUbergraph_BP_ItemPreview, CallFunc_IsValid_ReturnValue_2) == 0x000080, "Member 'BP_ItemPreview_C_ExecuteUbergraph_BP_ItemPreview::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ExecuteUbergraph_BP_ItemPreview, CallFunc_IsValid_ReturnValue_3) == 0x000081, "Member 'BP_ItemPreview_C_ExecuteUbergraph_BP_ItemPreview::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ExecuteUbergraph_BP_ItemPreview, CallFunc_GetAnimInstance_ReturnValue_1) == 0x000088, "Member 'BP_ItemPreview_C_ExecuteUbergraph_BP_ItemPreview::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ExecuteUbergraph_BP_ItemPreview, CallFunc_IsValid_ReturnValue_4) == 0x000090, "Member 'BP_ItemPreview_C_ExecuteUbergraph_BP_ItemPreview::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ExecuteUbergraph_BP_ItemPreview, K2Node_CustomEvent_MontageToPlay) == 0x000098, "Member 'BP_ItemPreview_C_ExecuteUbergraph_BP_ItemPreview::K2Node_CustomEvent_MontageToPlay' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ExecuteUbergraph_BP_ItemPreview, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x0000A0, "Member 'BP_ItemPreview_C_ExecuteUbergraph_BP_ItemPreview::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ExecuteUbergraph_BP_ItemPreview, CallFunc_IsValid_ReturnValue_5) == 0x0000A8, "Member 'BP_ItemPreview_C_ExecuteUbergraph_BP_ItemPreview::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ExecuteUbergraph_BP_ItemPreview, K2Node_CustomEvent_NotifyName_4) == 0x0000AC, "Member 'BP_ItemPreview_C_ExecuteUbergraph_BP_ItemPreview::K2Node_CustomEvent_NotifyName_4' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ExecuteUbergraph_BP_ItemPreview, K2Node_CustomEvent_NotifyName_3) == 0x0000B4, "Member 'BP_ItemPreview_C_ExecuteUbergraph_BP_ItemPreview::K2Node_CustomEvent_NotifyName_3' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ExecuteUbergraph_BP_ItemPreview, K2Node_CreateDelegate_OutputDelegate_4) == 0x0000BC, "Member 'BP_ItemPreview_C_ExecuteUbergraph_BP_ItemPreview::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ExecuteUbergraph_BP_ItemPreview, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000CC, "Member 'BP_ItemPreview_C_ExecuteUbergraph_BP_ItemPreview::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ExecuteUbergraph_BP_ItemPreview, K2Node_CreateDelegate_OutputDelegate_5) == 0x0000D0, "Member 'BP_ItemPreview_C_ExecuteUbergraph_BP_ItemPreview::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");

// Function BP_ItemPreview.BP_ItemPreview_C.PlayAnimation
// 0x0008 (0x0008 - 0x0000)
struct BP_ItemPreview_C_PlayAnimation final
{
public:
	class UAnimMontage*                           MontageToPlay;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemPreview_C_PlayAnimation) == 0x000008, "Wrong alignment on BP_ItemPreview_C_PlayAnimation");
static_assert(sizeof(BP_ItemPreview_C_PlayAnimation) == 0x000008, "Wrong size on BP_ItemPreview_C_PlayAnimation");
static_assert(offsetof(BP_ItemPreview_C_PlayAnimation, MontageToPlay) == 0x000000, "Member 'BP_ItemPreview_C_PlayAnimation::MontageToPlay' has a wrong offset!");

// Function BP_ItemPreview.BP_ItemPreview_C.OnCompleted_10C475484EB5079FAC83B189671E51CB
// 0x0008 (0x0008 - 0x0000)
struct BP_ItemPreview_C_OnCompleted_10C475484EB5079FAC83B189671E51CB final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemPreview_C_OnCompleted_10C475484EB5079FAC83B189671E51CB) == 0x000004, "Wrong alignment on BP_ItemPreview_C_OnCompleted_10C475484EB5079FAC83B189671E51CB");
static_assert(sizeof(BP_ItemPreview_C_OnCompleted_10C475484EB5079FAC83B189671E51CB) == 0x000008, "Wrong size on BP_ItemPreview_C_OnCompleted_10C475484EB5079FAC83B189671E51CB");
static_assert(offsetof(BP_ItemPreview_C_OnCompleted_10C475484EB5079FAC83B189671E51CB, NotifyName) == 0x000000, "Member 'BP_ItemPreview_C_OnCompleted_10C475484EB5079FAC83B189671E51CB::NotifyName' has a wrong offset!");

// Function BP_ItemPreview.BP_ItemPreview_C.OnBlendOut_10C475484EB5079FAC83B189671E51CB
// 0x0008 (0x0008 - 0x0000)
struct BP_ItemPreview_C_OnBlendOut_10C475484EB5079FAC83B189671E51CB final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemPreview_C_OnBlendOut_10C475484EB5079FAC83B189671E51CB) == 0x000004, "Wrong alignment on BP_ItemPreview_C_OnBlendOut_10C475484EB5079FAC83B189671E51CB");
static_assert(sizeof(BP_ItemPreview_C_OnBlendOut_10C475484EB5079FAC83B189671E51CB) == 0x000008, "Wrong size on BP_ItemPreview_C_OnBlendOut_10C475484EB5079FAC83B189671E51CB");
static_assert(offsetof(BP_ItemPreview_C_OnBlendOut_10C475484EB5079FAC83B189671E51CB, NotifyName) == 0x000000, "Member 'BP_ItemPreview_C_OnBlendOut_10C475484EB5079FAC83B189671E51CB::NotifyName' has a wrong offset!");

// Function BP_ItemPreview.BP_ItemPreview_C.OnInterrupted_10C475484EB5079FAC83B189671E51CB
// 0x0008 (0x0008 - 0x0000)
struct BP_ItemPreview_C_OnInterrupted_10C475484EB5079FAC83B189671E51CB final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemPreview_C_OnInterrupted_10C475484EB5079FAC83B189671E51CB) == 0x000004, "Wrong alignment on BP_ItemPreview_C_OnInterrupted_10C475484EB5079FAC83B189671E51CB");
static_assert(sizeof(BP_ItemPreview_C_OnInterrupted_10C475484EB5079FAC83B189671E51CB) == 0x000008, "Wrong size on BP_ItemPreview_C_OnInterrupted_10C475484EB5079FAC83B189671E51CB");
static_assert(offsetof(BP_ItemPreview_C_OnInterrupted_10C475484EB5079FAC83B189671E51CB, NotifyName) == 0x000000, "Member 'BP_ItemPreview_C_OnInterrupted_10C475484EB5079FAC83B189671E51CB::NotifyName' has a wrong offset!");

// Function BP_ItemPreview.BP_ItemPreview_C.OnNotifyBegin_10C475484EB5079FAC83B189671E51CB
// 0x0008 (0x0008 - 0x0000)
struct BP_ItemPreview_C_OnNotifyBegin_10C475484EB5079FAC83B189671E51CB final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemPreview_C_OnNotifyBegin_10C475484EB5079FAC83B189671E51CB) == 0x000004, "Wrong alignment on BP_ItemPreview_C_OnNotifyBegin_10C475484EB5079FAC83B189671E51CB");
static_assert(sizeof(BP_ItemPreview_C_OnNotifyBegin_10C475484EB5079FAC83B189671E51CB) == 0x000008, "Wrong size on BP_ItemPreview_C_OnNotifyBegin_10C475484EB5079FAC83B189671E51CB");
static_assert(offsetof(BP_ItemPreview_C_OnNotifyBegin_10C475484EB5079FAC83B189671E51CB, NotifyName) == 0x000000, "Member 'BP_ItemPreview_C_OnNotifyBegin_10C475484EB5079FAC83B189671E51CB::NotifyName' has a wrong offset!");

// Function BP_ItemPreview.BP_ItemPreview_C.OnNotifyEnd_10C475484EB5079FAC83B189671E51CB
// 0x0008 (0x0008 - 0x0000)
struct BP_ItemPreview_C_OnNotifyEnd_10C475484EB5079FAC83B189671E51CB final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemPreview_C_OnNotifyEnd_10C475484EB5079FAC83B189671E51CB) == 0x000004, "Wrong alignment on BP_ItemPreview_C_OnNotifyEnd_10C475484EB5079FAC83B189671E51CB");
static_assert(sizeof(BP_ItemPreview_C_OnNotifyEnd_10C475484EB5079FAC83B189671E51CB) == 0x000008, "Wrong size on BP_ItemPreview_C_OnNotifyEnd_10C475484EB5079FAC83B189671E51CB");
static_assert(offsetof(BP_ItemPreview_C_OnNotifyEnd_10C475484EB5079FAC83B189671E51CB, NotifyName) == 0x000000, "Member 'BP_ItemPreview_C_OnNotifyEnd_10C475484EB5079FAC83B189671E51CB::NotifyName' has a wrong offset!");

// Function BP_ItemPreview.BP_ItemPreview_C.UserConstructionScript
// 0x0001 (0x0001 - 0x0000)
struct BP_ItemPreview_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ItemPreview_C_UserConstructionScript) == 0x000001, "Wrong alignment on BP_ItemPreview_C_UserConstructionScript");
static_assert(sizeof(BP_ItemPreview_C_UserConstructionScript) == 0x000001, "Wrong size on BP_ItemPreview_C_UserConstructionScript");
static_assert(offsetof(BP_ItemPreview_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_ItemPreview_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_ItemPreview.BP_ItemPreview_C.ShowStaticMesh
// 0x0048 (0x0048 - 0x0000)
struct BP_ItemPreview_C_ShowStaticMesh final
{
public:
	class UStaticMesh*                            NewMesh;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             OverrideMaterials;                                 // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumMaterials_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemPreview_C_ShowStaticMesh) == 0x000008, "Wrong alignment on BP_ItemPreview_C_ShowStaticMesh");
static_assert(sizeof(BP_ItemPreview_C_ShowStaticMesh) == 0x000048, "Wrong size on BP_ItemPreview_C_ShowStaticMesh");
static_assert(offsetof(BP_ItemPreview_C_ShowStaticMesh, NewMesh) == 0x000000, "Member 'BP_ItemPreview_C_ShowStaticMesh::NewMesh' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowStaticMesh, OverrideMaterials) == 0x000008, "Member 'BP_ItemPreview_C_ShowStaticMesh::OverrideMaterials' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowStaticMesh, Temp_int_Variable) == 0x000018, "Member 'BP_ItemPreview_C_ShowStaticMesh::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowStaticMesh, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_ItemPreview_C_ShowStaticMesh::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowStaticMesh, CallFunc_GetNumMaterials_ReturnValue) == 0x000028, "Member 'BP_ItemPreview_C_ShowStaticMesh::CallFunc_GetNumMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowStaticMesh, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'BP_ItemPreview_C_ShowStaticMesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowStaticMesh, CallFunc_Subtract_IntInt_ReturnValue) == 0x000030, "Member 'BP_ItemPreview_C_ShowStaticMesh::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowStaticMesh, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000034, "Member 'BP_ItemPreview_C_ShowStaticMesh::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowStaticMesh, CallFunc_SetStaticMesh_ReturnValue) == 0x000035, "Member 'BP_ItemPreview_C_ShowStaticMesh::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowStaticMesh, CallFunc_GetMaterial_ReturnValue) == 0x000038, "Member 'BP_ItemPreview_C_ShowStaticMesh::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowStaticMesh, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000040, "Member 'BP_ItemPreview_C_ShowStaticMesh::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowStaticMesh, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'BP_ItemPreview_C_ShowStaticMesh::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_ItemPreview.BP_ItemPreview_C.ShowSkeletalMesh
// 0x0078 (0x0078 - 0x0000)
struct BP_ItemPreview_C_ShowSkeletalMesh final
{
public:
	class USkeletalMesh*                          NewMesh;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             OverrideMaterials;                                 // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSkeletalMaterial>              CallFunc_GetMaterials_ReturnValue;                 // 0x0020(0x0010)(ConstParm, ReferenceParm)
	class UMaterialInterface*                     CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSkeletalMaterial                      CallFunc_Array_Get_Item_1;                         // 0x0038(0x0028)(NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemPreview_C_ShowSkeletalMesh) == 0x000008, "Wrong alignment on BP_ItemPreview_C_ShowSkeletalMesh");
static_assert(sizeof(BP_ItemPreview_C_ShowSkeletalMesh) == 0x000078, "Wrong size on BP_ItemPreview_C_ShowSkeletalMesh");
static_assert(offsetof(BP_ItemPreview_C_ShowSkeletalMesh, NewMesh) == 0x000000, "Member 'BP_ItemPreview_C_ShowSkeletalMesh::NewMesh' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowSkeletalMesh, OverrideMaterials) == 0x000008, "Member 'BP_ItemPreview_C_ShowSkeletalMesh::OverrideMaterials' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowSkeletalMesh, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_ItemPreview_C_ShowSkeletalMesh::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowSkeletalMesh, CallFunc_GetMaterials_ReturnValue) == 0x000020, "Member 'BP_ItemPreview_C_ShowSkeletalMesh::CallFunc_GetMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowSkeletalMesh, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_ItemPreview_C_ShowSkeletalMesh::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowSkeletalMesh, CallFunc_Array_Get_Item_1) == 0x000038, "Member 'BP_ItemPreview_C_ShowSkeletalMesh::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowSkeletalMesh, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'BP_ItemPreview_C_ShowSkeletalMesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowSkeletalMesh, CallFunc_Array_Length_ReturnValue) == 0x000064, "Member 'BP_ItemPreview_C_ShowSkeletalMesh::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowSkeletalMesh, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000068, "Member 'BP_ItemPreview_C_ShowSkeletalMesh::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowSkeletalMesh, Temp_int_Loop_Counter_Variable) == 0x00006C, "Member 'BP_ItemPreview_C_ShowSkeletalMesh::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowSkeletalMesh, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'BP_ItemPreview_C_ShowSkeletalMesh::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowSkeletalMesh, CallFunc_Add_IntInt_ReturnValue) == 0x000074, "Member 'BP_ItemPreview_C_ShowSkeletalMesh::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_ItemPreview.BP_ItemPreview_C.ShowCustomizationClothes
// 0x0020 (0x0020 - 0x0000)
struct BP_ItemPreview_C_ShowCustomizationClothes final
{
public:
	class AHumanPlayerController*                 Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Customization_0;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Variant;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ItemPreview_C_ShowCustomizationClothes) == 0x000008, "Wrong alignment on BP_ItemPreview_C_ShowCustomizationClothes");
static_assert(sizeof(BP_ItemPreview_C_ShowCustomizationClothes) == 0x000020, "Wrong size on BP_ItemPreview_C_ShowCustomizationClothes");
static_assert(offsetof(BP_ItemPreview_C_ShowCustomizationClothes, Player) == 0x000000, "Member 'BP_ItemPreview_C_ShowCustomizationClothes::Player' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowCustomizationClothes, Customization_0) == 0x000008, "Member 'BP_ItemPreview_C_ShowCustomizationClothes::Customization_0' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowCustomizationClothes, Variant) == 0x000010, "Member 'BP_ItemPreview_C_ShowCustomizationClothes::Variant' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowCustomizationClothes, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_ItemPreview_C_ShowCustomizationClothes::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_ItemPreview.BP_ItemPreview_C.ShowItem
// 0x0520 (0x0520 - 0x0000)
struct BP_ItemPreview_C_ShowItem final
{
public:
	class UClass*                                 ItemClass;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemPreviewContext                           Context;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Optional_PreviewParameter;                         // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             AllCollectiblesDT_HardRef;                         // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UDataTable>              AllCollectiblesDT_SoftRef;                         // 0x0018(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class AHumanPlayerController*                 HumanPlayerController;                             // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<TSoftClassPtr<class UClass>>           DefaultArchetypeVariants;                          // 0x0048(0x0010)(Edit, BlueprintVisible)
	TArray<class UMaterialInterface*>             OverrideMaterials;                                 // 0x0058(0x0010)(Edit, BlueprintVisible)
	class UMaterialInterface*                     FantomasInvisible;                                 // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     FantomasGray;                                      // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsCollectible_Item;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetTableRowFromItemClass_Success;         // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    CallFunc_GetTableRowFromItemClass_TableHandle;     // 0x0090(0x0010)(NoDestructor)
	class AItem*                                  CallFunc_GetClassDefaultObject_ReturnValue;        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsCustomization_Variant_Bundle; // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_1;                // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B2[0x6];                                       // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            CallFunc_GetShelterPreviewStaticMesh_ReturnValue;  // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          CallFunc_GetShelterPreviewSkeletalMesh_ReturnValue; // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsBP_Lootbox_Base;         // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_2;                // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsCurrency_Hard;           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_3;                // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetObjectFromSoftObject_ReturnValue;      // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetObjectFromSoftObject_ReturnValue_1;    // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      K2Node_DynamicCast_AsMaterial_Instance;            // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          K2Node_DynamicCast_AsSkeletal_Mesh;                // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInterface*>             K2Node_MakeArray_Array;                            // 0x0128(0x0010)(ConstParm, ReferenceParm)
	class UClass*                                 K2Node_ClassDynamicCast_AsCustomization_Variant;   // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_4;                // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCustomizationSlotVariant              K2Node_MakeStruct_CustomizationSlotVariant;        // 0x0148(0x0010)(NoDestructor)
	TSoftClassPtr<class UClass>                   CallFunc_Conv_ClassToSoftClassReference_ReturnValue; // 0x0158(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	struct FCustomizationSlotVariant              K2Node_MakeStruct_CustomizationSlotVariant_1;      // 0x0180(0x0010)(NoDestructor)
	class ACustomizationVariant*                  CallFunc_GetClassDefaultObject_ReturnValue_1;      // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsCustomization_Gesture_Variant; // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_5;                // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class ACustomization>             CallFunc_GetCustomizationClass_ReturnValue;        // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class ACustomizationGestureVariant*           CallFunc_GetClassDefaultObject_ReturnValue_2;      // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsBP_Archetype;            // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_6;                // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          CallFunc_GetShelterPreviewStaticPose_ReturnValue;  // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetAnimationMontage_ReturnValue;          // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCollectiblesList                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x01E0(0x0150)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_331[0x3];                                      // 0x0331(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             CallFunc_DataProviderFindTableByAssetTable_ReturnValue; // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             K2Node_DynamicCast_AsData_Table;                   // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0351(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0352(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_353[0x5];                                      // 0x0353(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            CallFunc_GetHardCurrencyPreviewModel_Mesh;         // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             K2Node_MakeArray_Array_1;                          // 0x0360(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ApplySkinExtraGeometry_ReturnValue;       // 0x0371(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_372[0x6];                                      // 0x0372(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCustomizationPair                     CallFunc_GetCustomizationInSlot_ReturnValue;       // 0x0378(0x0010)(NoDestructor)
	struct FCustomizationPair                     CallFunc_GetCustomizationInSlot_ReturnValue_1;     // 0x0388(0x0010)(NoDestructor)
	struct FCustomizationPair                     CallFunc_GetCustomizationInSlot_ReturnValue_2;     // 0x0398(0x0010)(NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue_1;               // 0x03A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue_2;               // 0x03AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x03AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue_1;      // 0x03AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue_3;               // 0x03AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x03AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x03AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FCustomizationSlotVariant              K2Node_MakeStruct_CustomizationSlotVariant_2;      // 0x03B0(0x0010)(NoDestructor)
	struct FCustomizationSlotVariant              K2Node_MakeStruct_CustomizationSlotVariant_3;      // 0x03C0(0x0010)(NoDestructor)
	TArray<struct FCustomizationSlotVariant>      K2Node_MakeArray_Array_2;                          // 0x03D0(0x0010)(ReferenceParm)
	struct FCustomizationContainer                K2Node_MakeStruct_CustomizationContainer;          // 0x03E0(0x0010)()
	bool                                          CallFunc_ApplyCustomizationOnMannequin_ReturnValue; // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckForJiggleAnimBP_Success;             // 0x03F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F2[0x2];                                      // 0x03F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetUserControllerId_ReturnValue;          // 0x03F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue; // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_401[0x7];                                      // 0x0401(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetVariantFromBundle_VariantFromBundle;   // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCustomizationSlotVariant              K2Node_MakeStruct_CustomizationSlotVariant_4;      // 0x0410(0x0010)(NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_424[0x4];                                      // 0x0424(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCustomizationSlotVariant              K2Node_MakeStruct_CustomizationSlotVariant_5;      // 0x0428(0x0010)(NoDestructor)
	TSoftObjectPtr<class UMaterialInstance>       CallFunc_Array_Get_Item;                           // 0x0438(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_1;         // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_469[0x7];                                      // 0x0469(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface;           // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_479[0x3];                                      // 0x0479(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x047C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetUserControllerId_ReturnValue_1;        // 0x0480(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_484[0x4];                                      // 0x0484(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_1; // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          CallFunc_CheckForJiggleAnimSequence_AnimSequence;  // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0499(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49A[0x6];                                      // 0x049A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCustomizationSlotVariant              K2Node_MakeStruct_CustomizationSlotVariant_6;      // 0x04A0(0x0010)(NoDestructor)
	struct FCustomizationSlotVariant              K2Node_MakeStruct_CustomizationSlotVariant_7;      // 0x04B0(0x0010)(NoDestructor)
	TArray<TSoftClassPtr<class UClass>>           K2Node_MakeArray_Array_3;                          // 0x04C0(0x0010)(ReferenceParm)
	TArray<struct FCustomizationSlotVariant>      K2Node_MakeArray_Array_4;                          // 0x04D0(0x0010)(ReferenceParm)
	TArray<struct FCustomizationSlotVariant>      CallFunc_BPGet_Player_Current_Outfit_Variant_Slots_VariantSlotsPairs; // 0x04E0(0x0010)(ReferenceParm)
	bool                                          CallFunc_BPGet_Player_Current_Outfit_Variant_Slots_bSuccess; // 0x04F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F1[0x7];                                      // 0x04F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCustomizationContainer                K2Node_MakeStruct_CustomizationContainer_1;        // 0x04F8(0x0010)()
	bool                                          CallFunc_ApplyCustomizationOnMannequin_ReturnValue_1; // 0x0508(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0509(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue_4;               // 0x050A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50B[0x1];                                      // 0x050B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x050C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0510(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_511[0x3];                                      // 0x0511(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0514(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x0518(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ItemPreview_C_ShowItem) == 0x000008, "Wrong alignment on BP_ItemPreview_C_ShowItem");
static_assert(sizeof(BP_ItemPreview_C_ShowItem) == 0x000520, "Wrong size on BP_ItemPreview_C_ShowItem");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, ItemClass) == 0x000000, "Member 'BP_ItemPreview_C_ShowItem::ItemClass' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, Context) == 0x000008, "Member 'BP_ItemPreview_C_ShowItem::Context' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, Optional_PreviewParameter) == 0x00000C, "Member 'BP_ItemPreview_C_ShowItem::Optional_PreviewParameter' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, AllCollectiblesDT_HardRef) == 0x000010, "Member 'BP_ItemPreview_C_ShowItem::AllCollectiblesDT_HardRef' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, AllCollectiblesDT_SoftRef) == 0x000018, "Member 'BP_ItemPreview_C_ShowItem::AllCollectiblesDT_SoftRef' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, HumanPlayerController) == 0x000040, "Member 'BP_ItemPreview_C_ShowItem::HumanPlayerController' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, DefaultArchetypeVariants) == 0x000048, "Member 'BP_ItemPreview_C_ShowItem::DefaultArchetypeVariants' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, OverrideMaterials) == 0x000058, "Member 'BP_ItemPreview_C_ShowItem::OverrideMaterials' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, FantomasInvisible) == 0x000068, "Member 'BP_ItemPreview_C_ShowItem::FantomasInvisible' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, FantomasGray) == 0x000070, "Member 'BP_ItemPreview_C_ShowItem::FantomasGray' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000078, "Member 'BP_ItemPreview_C_ShowItem::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, K2Node_ClassDynamicCast_AsCollectible_Item) == 0x000080, "Member 'BP_ItemPreview_C_ShowItem::K2Node_ClassDynamicCast_AsCollectible_Item' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, K2Node_ClassDynamicCast_bSuccess) == 0x000088, "Member 'BP_ItemPreview_C_ShowItem::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, CallFunc_GetTableRowFromItemClass_Success) == 0x000089, "Member 'BP_ItemPreview_C_ShowItem::CallFunc_GetTableRowFromItemClass_Success' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, CallFunc_GetTableRowFromItemClass_TableHandle) == 0x000090, "Member 'BP_ItemPreview_C_ShowItem::CallFunc_GetTableRowFromItemClass_TableHandle' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, CallFunc_GetClassDefaultObject_ReturnValue) == 0x0000A0, "Member 'BP_ItemPreview_C_ShowItem::CallFunc_GetClassDefaultObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, K2Node_ClassDynamicCast_AsCustomization_Variant_Bundle) == 0x0000A8, "Member 'BP_ItemPreview_C_ShowItem::K2Node_ClassDynamicCast_AsCustomization_Variant_Bundle' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, K2Node_ClassDynamicCast_bSuccess_1) == 0x0000B0, "Member 'BP_ItemPreview_C_ShowItem::K2Node_ClassDynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, CallFunc_IsValid_ReturnValue) == 0x0000B1, "Member 'BP_ItemPreview_C_ShowItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, CallFunc_GetShelterPreviewStaticMesh_ReturnValue) == 0x0000B8, "Member 'BP_ItemPreview_C_ShowItem::CallFunc_GetShelterPreviewStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, CallFunc_IsValid_ReturnValue_1) == 0x0000C0, "Member 'BP_ItemPreview_C_ShowItem::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, CallFunc_GetShelterPreviewSkeletalMesh_ReturnValue) == 0x0000C8, "Member 'BP_ItemPreview_C_ShowItem::CallFunc_GetShelterPreviewSkeletalMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, CallFunc_IsValid_ReturnValue_2) == 0x0000D0, "Member 'BP_ItemPreview_C_ShowItem::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, K2Node_ClassDynamicCast_AsBP_Lootbox_Base) == 0x0000D8, "Member 'BP_ItemPreview_C_ShowItem::K2Node_ClassDynamicCast_AsBP_Lootbox_Base' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, K2Node_ClassDynamicCast_bSuccess_2) == 0x0000E0, "Member 'BP_ItemPreview_C_ShowItem::K2Node_ClassDynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, K2Node_ClassDynamicCast_AsCurrency_Hard) == 0x0000E8, "Member 'BP_ItemPreview_C_ShowItem::K2Node_ClassDynamicCast_AsCurrency_Hard' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, K2Node_ClassDynamicCast_bSuccess_3) == 0x0000F0, "Member 'BP_ItemPreview_C_ShowItem::K2Node_ClassDynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, CallFunc_GetObjectFromSoftObject_ReturnValue) == 0x0000F8, "Member 'BP_ItemPreview_C_ShowItem::CallFunc_GetObjectFromSoftObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, CallFunc_GetObjectFromSoftObject_ReturnValue_1) == 0x000100, "Member 'BP_ItemPreview_C_ShowItem::CallFunc_GetObjectFromSoftObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, K2Node_DynamicCast_AsMaterial_Instance) == 0x000108, "Member 'BP_ItemPreview_C_ShowItem::K2Node_DynamicCast_AsMaterial_Instance' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, K2Node_DynamicCast_bSuccess) == 0x000110, "Member 'BP_ItemPreview_C_ShowItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, K2Node_DynamicCast_AsSkeletal_Mesh) == 0x000118, "Member 'BP_ItemPreview_C_ShowItem::K2Node_DynamicCast_AsSkeletal_Mesh' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, K2Node_DynamicCast_bSuccess_1) == 0x000120, "Member 'BP_ItemPreview_C_ShowItem::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, K2Node_MakeArray_Array) == 0x000128, "Member 'BP_ItemPreview_C_ShowItem::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, K2Node_ClassDynamicCast_AsCustomization_Variant) == 0x000138, "Member 'BP_ItemPreview_C_ShowItem::K2Node_ClassDynamicCast_AsCustomization_Variant' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, K2Node_ClassDynamicCast_bSuccess_4) == 0x000140, "Member 'BP_ItemPreview_C_ShowItem::K2Node_ClassDynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, K2Node_MakeStruct_CustomizationSlotVariant) == 0x000148, "Member 'BP_ItemPreview_C_ShowItem::K2Node_MakeStruct_CustomizationSlotVariant' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, CallFunc_Conv_ClassToSoftClassReference_ReturnValue) == 0x000158, "Member 'BP_ItemPreview_C_ShowItem::CallFunc_Conv_ClassToSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, K2Node_MakeStruct_CustomizationSlotVariant_1) == 0x000180, "Member 'BP_ItemPreview_C_ShowItem::K2Node_MakeStruct_CustomizationSlotVariant_1' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, CallFunc_GetClassDefaultObject_ReturnValue_1) == 0x000190, "Member 'BP_ItemPreview_C_ShowItem::CallFunc_GetClassDefaultObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, K2Node_ClassDynamicCast_AsCustomization_Gesture_Variant) == 0x000198, "Member 'BP_ItemPreview_C_ShowItem::K2Node_ClassDynamicCast_AsCustomization_Gesture_Variant' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, K2Node_ClassDynamicCast_bSuccess_5) == 0x0001A0, "Member 'BP_ItemPreview_C_ShowItem::K2Node_ClassDynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, CallFunc_GetCustomizationClass_ReturnValue) == 0x0001A8, "Member 'BP_ItemPreview_C_ShowItem::CallFunc_GetCustomizationClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, CallFunc_GetClassDefaultObject_ReturnValue_2) == 0x0001B0, "Member 'BP_ItemPreview_C_ShowItem::CallFunc_GetClassDefaultObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, K2Node_ClassDynamicCast_AsBP_Archetype) == 0x0001B8, "Member 'BP_ItemPreview_C_ShowItem::K2Node_ClassDynamicCast_AsBP_Archetype' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, K2Node_ClassDynamicCast_bSuccess_6) == 0x0001C0, "Member 'BP_ItemPreview_C_ShowItem::K2Node_ClassDynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, CallFunc_GetShelterPreviewStaticPose_ReturnValue) == 0x0001C8, "Member 'BP_ItemPreview_C_ShowItem::CallFunc_GetShelterPreviewStaticPose_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, CallFunc_GetAnimationMontage_ReturnValue) == 0x0001D0, "Member 'BP_ItemPreview_C_ShowItem::CallFunc_GetAnimationMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, CallFunc_IsValid_ReturnValue_3) == 0x0001D8, "Member 'BP_ItemPreview_C_ShowItem::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, CallFunc_GetDataTableRowFromName_OutRow) == 0x0001E0, "Member 'BP_ItemPreview_C_ShowItem::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000330, "Member 'BP_ItemPreview_C_ShowItem::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, CallFunc_Array_Length_ReturnValue) == 0x000334, "Member 'BP_ItemPreview_C_ShowItem::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000338, "Member 'BP_ItemPreview_C_ShowItem::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, CallFunc_DataProviderFindTableByAssetTable_ReturnValue) == 0x000340, "Member 'BP_ItemPreview_C_ShowItem::CallFunc_DataProviderFindTableByAssetTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, K2Node_DynamicCast_AsData_Table) == 0x000348, "Member 'BP_ItemPreview_C_ShowItem::K2Node_DynamicCast_AsData_Table' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, K2Node_DynamicCast_bSuccess_2) == 0x000350, "Member 'BP_ItemPreview_C_ShowItem::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, CallFunc_IsValid_ReturnValue_4) == 0x000351, "Member 'BP_ItemPreview_C_ShowItem::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000352, "Member 'BP_ItemPreview_C_ShowItem::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, CallFunc_GetHardCurrencyPreviewModel_Mesh) == 0x000358, "Member 'BP_ItemPreview_C_ShowItem::CallFunc_GetHardCurrencyPreviewModel_Mesh' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, K2Node_MakeArray_Array_1) == 0x000360, "Member 'BP_ItemPreview_C_ShowItem::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, CallFunc_Array_Contains_ReturnValue) == 0x000370, "Member 'BP_ItemPreview_C_ShowItem::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, CallFunc_ApplySkinExtraGeometry_ReturnValue) == 0x000371, "Member 'BP_ItemPreview_C_ShowItem::CallFunc_ApplySkinExtraGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, CallFunc_GetCustomizationInSlot_ReturnValue) == 0x000378, "Member 'BP_ItemPreview_C_ShowItem::CallFunc_GetCustomizationInSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, CallFunc_GetCustomizationInSlot_ReturnValue_1) == 0x000388, "Member 'BP_ItemPreview_C_ShowItem::CallFunc_GetCustomizationInSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, CallFunc_GetCustomizationInSlot_ReturnValue_2) == 0x000398, "Member 'BP_ItemPreview_C_ShowItem::CallFunc_GetCustomizationInSlot_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, CallFunc_IsValidClass_ReturnValue) == 0x0003A8, "Member 'BP_ItemPreview_C_ShowItem::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, CallFunc_IsValidClass_ReturnValue_1) == 0x0003A9, "Member 'BP_ItemPreview_C_ShowItem::CallFunc_IsValidClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, CallFunc_IsValidClass_ReturnValue_2) == 0x0003AA, "Member 'BP_ItemPreview_C_ShowItem::CallFunc_IsValidClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x0003AB, "Member 'BP_ItemPreview_C_ShowItem::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, CallFunc_EqualEqual_ClassClass_ReturnValue_1) == 0x0003AC, "Member 'BP_ItemPreview_C_ShowItem::CallFunc_EqualEqual_ClassClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, CallFunc_IsValidClass_ReturnValue_3) == 0x0003AD, "Member 'BP_ItemPreview_C_ShowItem::CallFunc_IsValidClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, CallFunc_BooleanOR_ReturnValue) == 0x0003AE, "Member 'BP_ItemPreview_C_ShowItem::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, CallFunc_BooleanAND_ReturnValue) == 0x0003AF, "Member 'BP_ItemPreview_C_ShowItem::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, K2Node_MakeStruct_CustomizationSlotVariant_2) == 0x0003B0, "Member 'BP_ItemPreview_C_ShowItem::K2Node_MakeStruct_CustomizationSlotVariant_2' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, K2Node_MakeStruct_CustomizationSlotVariant_3) == 0x0003C0, "Member 'BP_ItemPreview_C_ShowItem::K2Node_MakeStruct_CustomizationSlotVariant_3' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, K2Node_MakeArray_Array_2) == 0x0003D0, "Member 'BP_ItemPreview_C_ShowItem::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, K2Node_MakeStruct_CustomizationContainer) == 0x0003E0, "Member 'BP_ItemPreview_C_ShowItem::K2Node_MakeStruct_CustomizationContainer' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, CallFunc_ApplyCustomizationOnMannequin_ReturnValue) == 0x0003F0, "Member 'BP_ItemPreview_C_ShowItem::CallFunc_ApplyCustomizationOnMannequin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, CallFunc_CheckForJiggleAnimBP_Success) == 0x0003F1, "Member 'BP_ItemPreview_C_ShowItem::CallFunc_CheckForJiggleAnimBP_Success' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, CallFunc_GetUserControllerId_ReturnValue) == 0x0003F4, "Member 'BP_ItemPreview_C_ShowItem::CallFunc_GetUserControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue) == 0x0003F8, "Member 'BP_ItemPreview_C_ShowItem::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, CallFunc_IsValid_ReturnValue_5) == 0x000400, "Member 'BP_ItemPreview_C_ShowItem::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, CallFunc_GetVariantFromBundle_VariantFromBundle) == 0x000408, "Member 'BP_ItemPreview_C_ShowItem::CallFunc_GetVariantFromBundle_VariantFromBundle' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, K2Node_MakeStruct_CustomizationSlotVariant_4) == 0x000410, "Member 'BP_ItemPreview_C_ShowItem::K2Node_MakeStruct_CustomizationSlotVariant_4' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, Temp_int_Array_Index_Variable) == 0x000420, "Member 'BP_ItemPreview_C_ShowItem::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, K2Node_MakeStruct_CustomizationSlotVariant_5) == 0x000428, "Member 'BP_ItemPreview_C_ShowItem::K2Node_MakeStruct_CustomizationSlotVariant_5' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, CallFunc_Array_Get_Item) == 0x000438, "Member 'BP_ItemPreview_C_ShowItem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, CallFunc_LoadAsset_Blocking_ReturnValue_1) == 0x000460, "Member 'BP_ItemPreview_C_ShowItem::CallFunc_LoadAsset_Blocking_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000468, "Member 'BP_ItemPreview_C_ShowItem::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, K2Node_DynamicCast_AsMaterial_Interface) == 0x000470, "Member 'BP_ItemPreview_C_ShowItem::K2Node_DynamicCast_AsMaterial_Interface' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, K2Node_DynamicCast_bSuccess_3) == 0x000478, "Member 'BP_ItemPreview_C_ShowItem::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, CallFunc_Array_Add_ReturnValue) == 0x00047C, "Member 'BP_ItemPreview_C_ShowItem::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, CallFunc_GetUserControllerId_ReturnValue_1) == 0x000480, "Member 'BP_ItemPreview_C_ShowItem::CallFunc_GetUserControllerId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_1) == 0x000488, "Member 'BP_ItemPreview_C_ShowItem::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, CallFunc_CheckForJiggleAnimSequence_AnimSequence) == 0x000490, "Member 'BP_ItemPreview_C_ShowItem::CallFunc_CheckForJiggleAnimSequence_AnimSequence' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, CallFunc_IsValid_ReturnValue_6) == 0x000498, "Member 'BP_ItemPreview_C_ShowItem::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, CallFunc_IsValid_ReturnValue_7) == 0x000499, "Member 'BP_ItemPreview_C_ShowItem::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, K2Node_MakeStruct_CustomizationSlotVariant_6) == 0x0004A0, "Member 'BP_ItemPreview_C_ShowItem::K2Node_MakeStruct_CustomizationSlotVariant_6' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, K2Node_MakeStruct_CustomizationSlotVariant_7) == 0x0004B0, "Member 'BP_ItemPreview_C_ShowItem::K2Node_MakeStruct_CustomizationSlotVariant_7' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, K2Node_MakeArray_Array_3) == 0x0004C0, "Member 'BP_ItemPreview_C_ShowItem::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, K2Node_MakeArray_Array_4) == 0x0004D0, "Member 'BP_ItemPreview_C_ShowItem::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, CallFunc_BPGet_Player_Current_Outfit_Variant_Slots_VariantSlotsPairs) == 0x0004E0, "Member 'BP_ItemPreview_C_ShowItem::CallFunc_BPGet_Player_Current_Outfit_Variant_Slots_VariantSlotsPairs' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, CallFunc_BPGet_Player_Current_Outfit_Variant_Slots_bSuccess) == 0x0004F0, "Member 'BP_ItemPreview_C_ShowItem::CallFunc_BPGet_Player_Current_Outfit_Variant_Slots_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, K2Node_MakeStruct_CustomizationContainer_1) == 0x0004F8, "Member 'BP_ItemPreview_C_ShowItem::K2Node_MakeStruct_CustomizationContainer_1' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, CallFunc_ApplyCustomizationOnMannequin_ReturnValue_1) == 0x000508, "Member 'BP_ItemPreview_C_ShowItem::CallFunc_ApplyCustomizationOnMannequin_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, CallFunc_IsValid_ReturnValue_8) == 0x000509, "Member 'BP_ItemPreview_C_ShowItem::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, CallFunc_IsValidClass_ReturnValue_4) == 0x00050A, "Member 'BP_ItemPreview_C_ShowItem::CallFunc_IsValidClass_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, Temp_int_Loop_Counter_Variable) == 0x00050C, "Member 'BP_ItemPreview_C_ShowItem::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, CallFunc_Less_IntInt_ReturnValue) == 0x000510, "Member 'BP_ItemPreview_C_ShowItem::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, CallFunc_Add_IntInt_ReturnValue) == 0x000514, "Member 'BP_ItemPreview_C_ShowItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowItem, CallFunc_IsValid_ReturnValue_9) == 0x000518, "Member 'BP_ItemPreview_C_ShowItem::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");

// Function BP_ItemPreview.BP_ItemPreview_C.ShowMe
// 0x0028 (0x0028 - 0x0000)
struct BP_ItemPreview_C_ShowMe final
{
public:
	bool                                          CallFunc_CheckForJiggleAnimBP_Success;             // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetUserControllerId_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerCharacter*                  CallFunc_GetHumanCharacter_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InitFromCharacterNative_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ItemPreview_C_ShowMe) == 0x000008, "Wrong alignment on BP_ItemPreview_C_ShowMe");
static_assert(sizeof(BP_ItemPreview_C_ShowMe) == 0x000028, "Wrong size on BP_ItemPreview_C_ShowMe");
static_assert(offsetof(BP_ItemPreview_C_ShowMe, CallFunc_CheckForJiggleAnimBP_Success) == 0x000000, "Member 'BP_ItemPreview_C_ShowMe::CallFunc_CheckForJiggleAnimBP_Success' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowMe, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_ItemPreview_C_ShowMe::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowMe, CallFunc_IsValidClass_ReturnValue) == 0x000002, "Member 'BP_ItemPreview_C_ShowMe::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowMe, CallFunc_GetUserControllerId_ReturnValue) == 0x000004, "Member 'BP_ItemPreview_C_ShowMe::CallFunc_GetUserControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowMe, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue) == 0x000008, "Member 'BP_ItemPreview_C_ShowMe::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowMe, CallFunc_IsValid_ReturnValue_1) == 0x000010, "Member 'BP_ItemPreview_C_ShowMe::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowMe, CallFunc_GetHumanCharacter_ReturnValue) == 0x000018, "Member 'BP_ItemPreview_C_ShowMe::CallFunc_GetHumanCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ShowMe, CallFunc_InitFromCharacterNative_ReturnValue) == 0x000020, "Member 'BP_ItemPreview_C_ShowMe::CallFunc_InitFromCharacterNative_ReturnValue' has a wrong offset!");

// Function BP_ItemPreview.BP_ItemPreview_C.ApplySkin
// 0x0050 (0x0050 - 0x0000)
struct BP_ItemPreview_C_ApplySkin final
{
public:
	class UClass*                                 ItemSkin;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 WeaponClass;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 WeaponClassRef;                                    // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerController*                 CallFunc_GetFlameController_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsWeapon_Skin;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class AWeapon>                    CallFunc_GetWeaponFromSkin_ReturnValue;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue_1;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AWeapon*                                CallFunc_GetClassDefaultObject_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ApplyWeaponSkinVisual_ReturnValue;        // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ApplyWeaponSkinVisual_ReturnValue_1;      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ItemPreview_C_ApplySkin) == 0x000008, "Wrong alignment on BP_ItemPreview_C_ApplySkin");
static_assert(sizeof(BP_ItemPreview_C_ApplySkin) == 0x000050, "Wrong size on BP_ItemPreview_C_ApplySkin");
static_assert(offsetof(BP_ItemPreview_C_ApplySkin, ItemSkin) == 0x000000, "Member 'BP_ItemPreview_C_ApplySkin::ItemSkin' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ApplySkin, WeaponClass) == 0x000008, "Member 'BP_ItemPreview_C_ApplySkin::WeaponClass' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ApplySkin, WeaponClassRef) == 0x000010, "Member 'BP_ItemPreview_C_ApplySkin::WeaponClassRef' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ApplySkin, CallFunc_GetFlameController_ReturnValue) == 0x000018, "Member 'BP_ItemPreview_C_ApplySkin::CallFunc_GetFlameController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ApplySkin, K2Node_ClassDynamicCast_AsWeapon_Skin) == 0x000020, "Member 'BP_ItemPreview_C_ApplySkin::K2Node_ClassDynamicCast_AsWeapon_Skin' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ApplySkin, K2Node_ClassDynamicCast_bSuccess) == 0x000028, "Member 'BP_ItemPreview_C_ApplySkin::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ApplySkin, CallFunc_IsValidClass_ReturnValue) == 0x000029, "Member 'BP_ItemPreview_C_ApplySkin::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ApplySkin, CallFunc_GetWeaponFromSkin_ReturnValue) == 0x000030, "Member 'BP_ItemPreview_C_ApplySkin::CallFunc_GetWeaponFromSkin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ApplySkin, CallFunc_IsValidClass_ReturnValue_1) == 0x000038, "Member 'BP_ItemPreview_C_ApplySkin::CallFunc_IsValidClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ApplySkin, CallFunc_GetClassDefaultObject_ReturnValue) == 0x000040, "Member 'BP_ItemPreview_C_ApplySkin::CallFunc_GetClassDefaultObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ApplySkin, CallFunc_ApplyWeaponSkinVisual_ReturnValue) == 0x000048, "Member 'BP_ItemPreview_C_ApplySkin::CallFunc_ApplyWeaponSkinVisual_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ApplySkin, CallFunc_ApplyWeaponSkinVisual_ReturnValue_1) == 0x000049, "Member 'BP_ItemPreview_C_ApplySkin::CallFunc_ApplyWeaponSkinVisual_ReturnValue_1' has a wrong offset!");

// Function BP_ItemPreview.BP_ItemPreview_C.GetVariantFromBundle
// 0x0070 (0x0070 - 0x0000)
struct BP_ItemPreview_C_GetVariantFromBundle final
{
public:
	class UClass*                                 Bundle;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerController*                 Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 VariantFromBundle;                                 // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerCharacter*                  CallFunc_GetHumanCharacter_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<TSubclassOf<class ACustomizationVariant>> CallFunc_GetCustomizationVariantsForBundle_ReturnValue; // 0x0020(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class ACustomizationArchetype>    CallFunc_GetArchetype_ReturnValue;                 // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACustomizationVariant*                  CallFunc_GetClassDefaultObject_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class ACustomization>             CallFunc_GetCustomizationClass_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemPreview_C_GetVariantFromBundle) == 0x000008, "Wrong alignment on BP_ItemPreview_C_GetVariantFromBundle");
static_assert(sizeof(BP_ItemPreview_C_GetVariantFromBundle) == 0x000070, "Wrong size on BP_ItemPreview_C_GetVariantFromBundle");
static_assert(offsetof(BP_ItemPreview_C_GetVariantFromBundle, Bundle) == 0x000000, "Member 'BP_ItemPreview_C_GetVariantFromBundle::Bundle' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetVariantFromBundle, Player) == 0x000008, "Member 'BP_ItemPreview_C_GetVariantFromBundle::Player' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetVariantFromBundle, VariantFromBundle) == 0x000010, "Member 'BP_ItemPreview_C_GetVariantFromBundle::VariantFromBundle' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetVariantFromBundle, CallFunc_GetHumanCharacter_ReturnValue) == 0x000018, "Member 'BP_ItemPreview_C_GetVariantFromBundle::CallFunc_GetHumanCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetVariantFromBundle, CallFunc_GetCustomizationVariantsForBundle_ReturnValue) == 0x000020, "Member 'BP_ItemPreview_C_GetVariantFromBundle::CallFunc_GetCustomizationVariantsForBundle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetVariantFromBundle, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_ItemPreview_C_GetVariantFromBundle::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetVariantFromBundle, CallFunc_GetArchetype_ReturnValue) == 0x000038, "Member 'BP_ItemPreview_C_GetVariantFromBundle::CallFunc_GetArchetype_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetVariantFromBundle, Temp_int_Array_Index_Variable) == 0x000040, "Member 'BP_ItemPreview_C_GetVariantFromBundle::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetVariantFromBundle, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'BP_ItemPreview_C_GetVariantFromBundle::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetVariantFromBundle, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_ItemPreview_C_GetVariantFromBundle::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetVariantFromBundle, CallFunc_GetClassDefaultObject_ReturnValue) == 0x000050, "Member 'BP_ItemPreview_C_GetVariantFromBundle::CallFunc_GetClassDefaultObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetVariantFromBundle, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'BP_ItemPreview_C_GetVariantFromBundle::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetVariantFromBundle, CallFunc_GetCustomizationClass_ReturnValue) == 0x000060, "Member 'BP_ItemPreview_C_GetVariantFromBundle::CallFunc_GetCustomizationClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetVariantFromBundle, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000068, "Member 'BP_ItemPreview_C_GetVariantFromBundle::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetVariantFromBundle, CallFunc_Add_IntInt_ReturnValue) == 0x00006C, "Member 'BP_ItemPreview_C_GetVariantFromBundle::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_ItemPreview.BP_ItemPreview_C.CheckForJiggleAnimBP
// 0x0138 (0x0138 - 0x0000)
struct BP_ItemPreview_C_CheckForJiggleAnimBP final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_JiggleSettings                      BackpackJiggleSettings;                            // 0x0008(0x0018)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FS_JiggleSettings                      UniformJiggleSettings;                             // 0x0020(0x0018)(Edit, BlueprintVisible, HasGetValueTypeHash)
	E_MeshSpecificJiggle                          BackpackType;                                      // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTransform>                     BackpackSocketTransforms;                          // 0x0040(0x0010)(Edit, BlueprintVisible)
	bool                                          BackpackSocketFound;                               // 0x0050(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_MeshSpecificJiggle                          UniformType;                                       // 0x0051(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTransform>                     UniformSocketTransforms;                           // 0x0058(0x0010)(Edit, BlueprintVisible)
	TMap<TSoftObjectPtr<class USkeletalMesh>, E_MeshSpecificJiggle> SkelMeshToJiggleTypes;                             // 0x0068(0x0050)(Edit, BlueprintVisible)
	bool                                          UniformSocketFound;                                // 0x00B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<TSoftObjectPtr<class USkeletalMesh>, E_MeshSpecificJiggle> K2Node_MakeVariable_MakeVariableOutput;            // 0x00C0(0x0050)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_HumanAnimInstance_C> K2Node_DynamicCast_AsBPI_Human_Anim_Instance;      // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckForJiggle_Processed;                 // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ItemPreview_C_CheckForJiggleAnimBP) == 0x000008, "Wrong alignment on BP_ItemPreview_C_CheckForJiggleAnimBP");
static_assert(sizeof(BP_ItemPreview_C_CheckForJiggleAnimBP) == 0x000138, "Wrong size on BP_ItemPreview_C_CheckForJiggleAnimBP");
static_assert(offsetof(BP_ItemPreview_C_CheckForJiggleAnimBP, Success) == 0x000000, "Member 'BP_ItemPreview_C_CheckForJiggleAnimBP::Success' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_CheckForJiggleAnimBP, BackpackJiggleSettings) == 0x000008, "Member 'BP_ItemPreview_C_CheckForJiggleAnimBP::BackpackJiggleSettings' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_CheckForJiggleAnimBP, UniformJiggleSettings) == 0x000020, "Member 'BP_ItemPreview_C_CheckForJiggleAnimBP::UniformJiggleSettings' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_CheckForJiggleAnimBP, BackpackType) == 0x000038, "Member 'BP_ItemPreview_C_CheckForJiggleAnimBP::BackpackType' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_CheckForJiggleAnimBP, BackpackSocketTransforms) == 0x000040, "Member 'BP_ItemPreview_C_CheckForJiggleAnimBP::BackpackSocketTransforms' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_CheckForJiggleAnimBP, BackpackSocketFound) == 0x000050, "Member 'BP_ItemPreview_C_CheckForJiggleAnimBP::BackpackSocketFound' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_CheckForJiggleAnimBP, UniformType) == 0x000051, "Member 'BP_ItemPreview_C_CheckForJiggleAnimBP::UniformType' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_CheckForJiggleAnimBP, UniformSocketTransforms) == 0x000058, "Member 'BP_ItemPreview_C_CheckForJiggleAnimBP::UniformSocketTransforms' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_CheckForJiggleAnimBP, SkelMeshToJiggleTypes) == 0x000068, "Member 'BP_ItemPreview_C_CheckForJiggleAnimBP::SkelMeshToJiggleTypes' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_CheckForJiggleAnimBP, UniformSocketFound) == 0x0000B8, "Member 'BP_ItemPreview_C_CheckForJiggleAnimBP::UniformSocketFound' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_CheckForJiggleAnimBP, K2Node_MakeVariable_MakeVariableOutput) == 0x0000C0, "Member 'BP_ItemPreview_C_CheckForJiggleAnimBP::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_CheckForJiggleAnimBP, CallFunc_IsValid_ReturnValue) == 0x000110, "Member 'BP_ItemPreview_C_CheckForJiggleAnimBP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_CheckForJiggleAnimBP, CallFunc_GetAnimInstance_ReturnValue) == 0x000118, "Member 'BP_ItemPreview_C_CheckForJiggleAnimBP::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_CheckForJiggleAnimBP, K2Node_DynamicCast_AsBPI_Human_Anim_Instance) == 0x000120, "Member 'BP_ItemPreview_C_CheckForJiggleAnimBP::K2Node_DynamicCast_AsBPI_Human_Anim_Instance' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_CheckForJiggleAnimBP, K2Node_DynamicCast_bSuccess) == 0x000130, "Member 'BP_ItemPreview_C_CheckForJiggleAnimBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_CheckForJiggleAnimBP, CallFunc_IsValid_ReturnValue_1) == 0x000131, "Member 'BP_ItemPreview_C_CheckForJiggleAnimBP::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_CheckForJiggleAnimBP, CallFunc_CheckForJiggle_Processed) == 0x000132, "Member 'BP_ItemPreview_C_CheckForJiggleAnimBP::CallFunc_CheckForJiggle_Processed' has a wrong offset!");

// Function BP_ItemPreview.BP_ItemPreview_C.CheckForJiggleAnimSequence
// 0x0278 (0x0278 - 0x0000)
struct BP_ItemPreview_C_CheckForJiggleAnimSequence final
{
public:
	class AHumanPlayerController*                 PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CustomizationClass;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          AnimSequence;                                      // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UAnimSequenceBase>       NotFocusedCustAnim;                                // 0x0018(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   BottomeHeadWearCustomization;                      // 0x0040(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          IsMale;                                            // 0x0068(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             JiggleDefinitions;                                 // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          JiggleAnim;                                        // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryCustomizationComponent*       CallFunc_GetClothesComponent_ReturnValue;          // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class AGender>                    CallFunc_GetGender_ReturnValue;                    // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          K2Node_DynamicCast_AsAnim_Sequence;                // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCustomizationPair                     CallFunc_GetCustomizationInSlot_ReturnValue;       // 0x00C0(0x0010)(NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   CallFunc_Conv_ClassToSoftClassReference_ReturnValue; // 0x00D8(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0108(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   CallFunc_Conv_ClassToSoftClassReference_ReturnValue_1; // 0x0120(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	struct FS_JiggleDefinition                    CallFunc_GetDataTableRowFromName_OutRow;           // 0x0148(0x00D0)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_219[0x3];                                      // 0x0219(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAnimSequenceBase>       K2Node_Select_Default;                             // 0x0228(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_SoftClassReference_ReturnValue; // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_251[0x7];                                      // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_1;         // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_SoftClassReference_ReturnValue_1; // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_261[0x7];                                      // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          K2Node_DynamicCast_AsAnim_Sequence_1;              // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ItemPreview_C_CheckForJiggleAnimSequence) == 0x000008, "Wrong alignment on BP_ItemPreview_C_CheckForJiggleAnimSequence");
static_assert(sizeof(BP_ItemPreview_C_CheckForJiggleAnimSequence) == 0x000278, "Wrong size on BP_ItemPreview_C_CheckForJiggleAnimSequence");
static_assert(offsetof(BP_ItemPreview_C_CheckForJiggleAnimSequence, PlayerController) == 0x000000, "Member 'BP_ItemPreview_C_CheckForJiggleAnimSequence::PlayerController' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_CheckForJiggleAnimSequence, CustomizationClass) == 0x000008, "Member 'BP_ItemPreview_C_CheckForJiggleAnimSequence::CustomizationClass' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_CheckForJiggleAnimSequence, AnimSequence) == 0x000010, "Member 'BP_ItemPreview_C_CheckForJiggleAnimSequence::AnimSequence' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_CheckForJiggleAnimSequence, NotFocusedCustAnim) == 0x000018, "Member 'BP_ItemPreview_C_CheckForJiggleAnimSequence::NotFocusedCustAnim' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_CheckForJiggleAnimSequence, BottomeHeadWearCustomization) == 0x000040, "Member 'BP_ItemPreview_C_CheckForJiggleAnimSequence::BottomeHeadWearCustomization' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_CheckForJiggleAnimSequence, IsMale) == 0x000068, "Member 'BP_ItemPreview_C_CheckForJiggleAnimSequence::IsMale' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_CheckForJiggleAnimSequence, JiggleDefinitions) == 0x000070, "Member 'BP_ItemPreview_C_CheckForJiggleAnimSequence::JiggleDefinitions' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_CheckForJiggleAnimSequence, JiggleAnim) == 0x000078, "Member 'BP_ItemPreview_C_CheckForJiggleAnimSequence::JiggleAnim' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_CheckForJiggleAnimSequence, CallFunc_IsValid_ReturnValue) == 0x000080, "Member 'BP_ItemPreview_C_CheckForJiggleAnimSequence::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_CheckForJiggleAnimSequence, CallFunc_GetClothesComponent_ReturnValue) == 0x000088, "Member 'BP_ItemPreview_C_CheckForJiggleAnimSequence::CallFunc_GetClothesComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_CheckForJiggleAnimSequence, CallFunc_GetGender_ReturnValue) == 0x000090, "Member 'BP_ItemPreview_C_CheckForJiggleAnimSequence::CallFunc_GetGender_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_CheckForJiggleAnimSequence, CallFunc_ClassIsChildOf_ReturnValue) == 0x000098, "Member 'BP_ItemPreview_C_CheckForJiggleAnimSequence::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_CheckForJiggleAnimSequence, Temp_int_Array_Index_Variable) == 0x00009C, "Member 'BP_ItemPreview_C_CheckForJiggleAnimSequence::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_CheckForJiggleAnimSequence, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x0000A0, "Member 'BP_ItemPreview_C_CheckForJiggleAnimSequence::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_CheckForJiggleAnimSequence, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x0000A8, "Member 'BP_ItemPreview_C_CheckForJiggleAnimSequence::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_CheckForJiggleAnimSequence, K2Node_DynamicCast_AsAnim_Sequence) == 0x0000B0, "Member 'BP_ItemPreview_C_CheckForJiggleAnimSequence::K2Node_DynamicCast_AsAnim_Sequence' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_CheckForJiggleAnimSequence, K2Node_DynamicCast_bSuccess) == 0x0000B8, "Member 'BP_ItemPreview_C_CheckForJiggleAnimSequence::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_CheckForJiggleAnimSequence, Temp_int_Loop_Counter_Variable) == 0x0000BC, "Member 'BP_ItemPreview_C_CheckForJiggleAnimSequence::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_CheckForJiggleAnimSequence, CallFunc_GetCustomizationInSlot_ReturnValue) == 0x0000C0, "Member 'BP_ItemPreview_C_CheckForJiggleAnimSequence::CallFunc_GetCustomizationInSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_CheckForJiggleAnimSequence, CallFunc_Add_IntInt_ReturnValue) == 0x0000D0, "Member 'BP_ItemPreview_C_CheckForJiggleAnimSequence::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_CheckForJiggleAnimSequence, CallFunc_Conv_ClassToSoftClassReference_ReturnValue) == 0x0000D8, "Member 'BP_ItemPreview_C_CheckForJiggleAnimSequence::CallFunc_Conv_ClassToSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_CheckForJiggleAnimSequence, Temp_bool_Variable) == 0x000100, "Member 'BP_ItemPreview_C_CheckForJiggleAnimSequence::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_CheckForJiggleAnimSequence, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000108, "Member 'BP_ItemPreview_C_CheckForJiggleAnimSequence::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_CheckForJiggleAnimSequence, CallFunc_Array_Get_Item) == 0x000118, "Member 'BP_ItemPreview_C_CheckForJiggleAnimSequence::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_CheckForJiggleAnimSequence, CallFunc_Conv_ClassToSoftClassReference_ReturnValue_1) == 0x000120, "Member 'BP_ItemPreview_C_CheckForJiggleAnimSequence::CallFunc_Conv_ClassToSoftClassReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_CheckForJiggleAnimSequence, CallFunc_GetDataTableRowFromName_OutRow) == 0x000148, "Member 'BP_ItemPreview_C_CheckForJiggleAnimSequence::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_CheckForJiggleAnimSequence, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000218, "Member 'BP_ItemPreview_C_CheckForJiggleAnimSequence::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_CheckForJiggleAnimSequence, CallFunc_Array_Length_ReturnValue) == 0x00021C, "Member 'BP_ItemPreview_C_CheckForJiggleAnimSequence::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_CheckForJiggleAnimSequence, CallFunc_Less_IntInt_ReturnValue) == 0x000220, "Member 'BP_ItemPreview_C_CheckForJiggleAnimSequence::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_CheckForJiggleAnimSequence, K2Node_Select_Default) == 0x000228, "Member 'BP_ItemPreview_C_CheckForJiggleAnimSequence::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_CheckForJiggleAnimSequence, CallFunc_EqualEqual_SoftClassReference_ReturnValue) == 0x000250, "Member 'BP_ItemPreview_C_CheckForJiggleAnimSequence::CallFunc_EqualEqual_SoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_CheckForJiggleAnimSequence, CallFunc_LoadAsset_Blocking_ReturnValue_1) == 0x000258, "Member 'BP_ItemPreview_C_CheckForJiggleAnimSequence::CallFunc_LoadAsset_Blocking_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_CheckForJiggleAnimSequence, CallFunc_EqualEqual_SoftClassReference_ReturnValue_1) == 0x000260, "Member 'BP_ItemPreview_C_CheckForJiggleAnimSequence::CallFunc_EqualEqual_SoftClassReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_CheckForJiggleAnimSequence, K2Node_DynamicCast_AsAnim_Sequence_1) == 0x000268, "Member 'BP_ItemPreview_C_CheckForJiggleAnimSequence::K2Node_DynamicCast_AsAnim_Sequence_1' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_CheckForJiggleAnimSequence, K2Node_DynamicCast_bSuccess_1) == 0x000270, "Member 'BP_ItemPreview_C_CheckForJiggleAnimSequence::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_ItemPreview.BP_ItemPreview_C.BPGet Player Current Outfit Variant Slots
// 0x0158 (0x0158 - 0x0000)
struct BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots final
{
public:
	TArray<struct FCustomizationSlotVariant>      PairsToOverride;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FCustomizationSlotVariant>      VariantSlotsPairs;                                 // 0x0010(0x0010)(Parm, OutParm)
	bool                                          bSuccess;                                          // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCustomizationSlotVariant>      Pairs;                                             // 0x0028(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCustomizationSlotVariant              CallFunc_Array_Get_Item;                           // 0x0058(0x0010)(NoDestructor)
	struct FCustomizationSlotVariant              CallFunc_Array_Get_Item_1;                         // 0x0068(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86[0x2];                                       // 0x0086(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCustomizationSlotVariant>      K2Node_MakeArray_Array;                            // 0x0098(0x0010)(ReferenceParm)
	int32                                         CallFunc_GetUserControllerId_ReturnValue;          // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue; // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_Shelter_C*                K2Node_DynamicCast_AsBP_Character_Shelter;         // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class ACustomizationVariant>      CallFunc_GetArchetypeVariant_ReturnValue;          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TArray<TSubclassOf<class ACustomizationSlot>> CallFunc_Map_Values_Values;                        // 0x00E0(0x0010)(ReferenceParm)
	struct FCustomizationSlotVariant              K2Node_MakeStruct_CustomizationSlotVariant;        // 0x00F0(0x0010)(NoDestructor)
	class UClass*                                 CallFunc_Array_Get_Item_2;                         // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCustomizationSlotVariant              K2Node_MakeStruct_CustomizationSlotVariant_1;      // 0x0110(0x0010)(NoDestructor)
	struct FCustomizationPair                     CallFunc_GetCustomizationInSlot_ReturnValue;       // 0x0120(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_2;            // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCustomizationSlotVariant              K2Node_MakeStruct_CustomizationSlotVariant_2;      // 0x0138(0x0010)(NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x3];                                      // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue_3;            // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots) == 0x000008, "Wrong alignment on BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots");
static_assert(sizeof(BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots) == 0x000158, "Wrong size on BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots");
static_assert(offsetof(BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots, PairsToOverride) == 0x000000, "Member 'BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots::PairsToOverride' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots, VariantSlotsPairs) == 0x000010, "Member 'BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots::VariantSlotsPairs' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots, bSuccess) == 0x000020, "Member 'BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots::bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots, Pairs) == 0x000028, "Member 'BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots::Pairs' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots, Temp_bool_True_if_break_was_hit_Variable) == 0x000044, "Member 'BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots, Temp_int_Loop_Counter_Variable_1) == 0x000048, "Member 'BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots, CallFunc_Add_IntInt_ReturnValue_1) == 0x00004C, "Member 'BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots, Temp_int_Array_Index_Variable_1) == 0x000050, "Member 'BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots, Temp_int_Array_Index_Variable_2) == 0x000054, "Member 'BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots, CallFunc_Array_Get_Item) == 0x000058, "Member 'BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots, CallFunc_Array_Get_Item_1) == 0x000068, "Member 'BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots, CallFunc_Array_AddUnique_ReturnValue) == 0x000078, "Member 'BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots, CallFunc_Array_RemoveItem_ReturnValue) == 0x00007C, "Member 'BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000084, "Member 'BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots, CallFunc_Less_IntInt_ReturnValue) == 0x000085, "Member 'BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots, CallFunc_Array_Length_ReturnValue_1) == 0x000088, "Member 'BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots, Temp_int_Loop_Counter_Variable_2) == 0x00008C, "Member 'BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots, CallFunc_Less_IntInt_ReturnValue_1) == 0x000090, "Member 'BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots, CallFunc_Add_IntInt_ReturnValue_2) == 0x000094, "Member 'BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots, K2Node_MakeArray_Array) == 0x000098, "Member 'BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots, CallFunc_GetUserControllerId_ReturnValue) == 0x0000A8, "Member 'BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots::CallFunc_GetUserControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue) == 0x0000B0, "Member 'BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots, CallFunc_K2_GetPawn_ReturnValue) == 0x0000B8, "Member 'BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots, CallFunc_IsValid_ReturnValue) == 0x0000C0, "Member 'BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots, K2Node_DynamicCast_AsBP_Character_Shelter) == 0x0000C8, "Member 'BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots::K2Node_DynamicCast_AsBP_Character_Shelter' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots, K2Node_DynamicCast_bSuccess) == 0x0000D0, "Member 'BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots, CallFunc_GetArchetypeVariant_ReturnValue) == 0x0000D8, "Member 'BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots::CallFunc_GetArchetypeVariant_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots, CallFunc_Map_Values_Values) == 0x0000E0, "Member 'BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots, K2Node_MakeStruct_CustomizationSlotVariant) == 0x0000F0, "Member 'BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots::K2Node_MakeStruct_CustomizationSlotVariant' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots, CallFunc_Array_Get_Item_2) == 0x000100, "Member 'BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots, CallFunc_Array_AddUnique_ReturnValue_1) == 0x000108, "Member 'BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots, K2Node_MakeStruct_CustomizationSlotVariant_1) == 0x000110, "Member 'BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots::K2Node_MakeStruct_CustomizationSlotVariant_1' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots, CallFunc_GetCustomizationInSlot_ReturnValue) == 0x000120, "Member 'BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots::CallFunc_GetCustomizationInSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots, CallFunc_Array_AddUnique_ReturnValue_2) == 0x000130, "Member 'BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots::CallFunc_Array_AddUnique_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots, CallFunc_Array_Length_ReturnValue_2) == 0x000134, "Member 'BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots, K2Node_MakeStruct_CustomizationSlotVariant_2) == 0x000138, "Member 'BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots::K2Node_MakeStruct_CustomizationSlotVariant_2' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots, CallFunc_Less_IntInt_ReturnValue_2) == 0x000148, "Member 'BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots, CallFunc_Array_AddUnique_ReturnValue_3) == 0x00014C, "Member 'BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots::CallFunc_Array_AddUnique_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots, CallFunc_IsValidClass_ReturnValue) == 0x000150, "Member 'BP_ItemPreview_C_BPGet_Player_Current_Outfit_Variant_Slots::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");

// Function BP_ItemPreview.BP_ItemPreview_C.ClearEverything
// 0x0048 (0x0048 - 0x0000)
struct BP_ItemPreview_C_ClearEverything final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children;           // 0x0008(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 K2Node_DynamicCast_AsSkeletal_Mesh_Component;      // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ItemPreview_C_ClearEverything) == 0x000008, "Wrong alignment on BP_ItemPreview_C_ClearEverything");
static_assert(sizeof(BP_ItemPreview_C_ClearEverything) == 0x000048, "Wrong size on BP_ItemPreview_C_ClearEverything");
static_assert(offsetof(BP_ItemPreview_C_ClearEverything, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_ItemPreview_C_ClearEverything::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ClearEverything, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'BP_ItemPreview_C_ClearEverything::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ClearEverything, CallFunc_SetStaticMesh_ReturnValue) == 0x000002, "Member 'BP_ItemPreview_C_ClearEverything::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ClearEverything, CallFunc_IsValid_ReturnValue_2) == 0x000003, "Member 'BP_ItemPreview_C_ClearEverything::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ClearEverything, CallFunc_GetChildrenComponents_Children) == 0x000008, "Member 'BP_ItemPreview_C_ClearEverything::CallFunc_GetChildrenComponents_Children' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ClearEverything, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_ItemPreview_C_ClearEverything::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ClearEverything, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_ItemPreview_C_ClearEverything::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ClearEverything, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_ItemPreview_C_ClearEverything::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ClearEverything, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_ItemPreview_C_ClearEverything::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ClearEverything, K2Node_DynamicCast_AsSkeletal_Mesh_Component) == 0x000030, "Member 'BP_ItemPreview_C_ClearEverything::K2Node_DynamicCast_AsSkeletal_Mesh_Component' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ClearEverything, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_ItemPreview_C_ClearEverything::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ClearEverything, CallFunc_Less_IntInt_ReturnValue) == 0x000039, "Member 'BP_ItemPreview_C_ClearEverything::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ClearEverything, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_ItemPreview_C_ClearEverything::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_ClearEverything, CallFunc_IsValid_ReturnValue_3) == 0x000040, "Member 'BP_ItemPreview_C_ClearEverything::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

// Function BP_ItemPreview.BP_ItemPreview_C.HideSnowMaterialEffects
// 0x0038 (0x0038 - 0x0000)
struct BP_ItemPreview_C_HideSnowMaterialEffects final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USkinnedMeshComponent*>          CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkinnedMeshComponent*                  CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ItemPreview_C_HideSnowMaterialEffects) == 0x000008, "Wrong alignment on BP_ItemPreview_C_HideSnowMaterialEffects");
static_assert(sizeof(BP_ItemPreview_C_HideSnowMaterialEffects) == 0x000038, "Wrong size on BP_ItemPreview_C_HideSnowMaterialEffects");
static_assert(offsetof(BP_ItemPreview_C_HideSnowMaterialEffects, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_ItemPreview_C_HideSnowMaterialEffects::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_HideSnowMaterialEffects, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_ItemPreview_C_HideSnowMaterialEffects::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_HideSnowMaterialEffects, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_ItemPreview_C_HideSnowMaterialEffects::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_HideSnowMaterialEffects, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000010, "Member 'BP_ItemPreview_C_HideSnowMaterialEffects::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_HideSnowMaterialEffects, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_ItemPreview_C_HideSnowMaterialEffects::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_HideSnowMaterialEffects, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_ItemPreview_C_HideSnowMaterialEffects::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_HideSnowMaterialEffects, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_ItemPreview_C_HideSnowMaterialEffects::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_ItemPreview.BP_ItemPreview_C.GetPlayerCurrentOutfitVariantSlots
// 0x0178 (0x0178 - 0x0000)
struct BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots final
{
public:
	TArray<struct FCustomizationSlotVariant>      PairsToOverride;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FCustomizationSlotVariant>      OutVariantSlotsPairs;                              // 0x0010(0x0010)(Parm, OutParm)
	bool                                          bOutSucess;                                        // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCustomizationSlotVariant>      Pairs;                                             // 0x0028(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCustomizationSlotVariant>      CallFunc_GetPlayerCurrentOutfitVariantSlots_OutVariantSlotsPairs; // 0x0040(0x0010)(ReferenceParm)
	bool                                          CallFunc_GetPlayerCurrentOutfitVariantSlots_bOutSucess; // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCustomizationSlotVariant              CallFunc_Array_Get_Item;                           // 0x0078(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCustomizationSlotVariant              CallFunc_Array_Get_Item_1;                         // 0x0090(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x00A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A7[0x1];                                       // 0x00A7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCustomizationSlotVariant>      K2Node_MakeArray_Array;                            // 0x00B8(0x0010)(ReferenceParm)
	int32                                         CallFunc_GetUserControllerId_ReturnValue;          // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue; // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_Shelter_C*                K2Node_DynamicCast_AsBP_Character_Shelter;         // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class ACustomizationVariant>      CallFunc_GetArchetypeVariant_ReturnValue;          // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TArray<TSubclassOf<class ACustomizationSlot>> CallFunc_Map_Values_Values;                        // 0x0100(0x0010)(ReferenceParm)
	struct FCustomizationSlotVariant              K2Node_MakeStruct_CustomizationSlotVariant;        // 0x0110(0x0010)(NoDestructor)
	class UClass*                                 CallFunc_Array_Get_Item_2;                         // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCustomizationSlotVariant              K2Node_MakeStruct_CustomizationSlotVariant_1;      // 0x0130(0x0010)(NoDestructor)
	struct FCustomizationPair                     CallFunc_GetCustomizationInSlot_ReturnValue;       // 0x0140(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_2;            // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCustomizationSlotVariant              K2Node_MakeStruct_CustomizationSlotVariant_2;      // 0x0158(0x0010)(NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x3];                                      // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue_3;            // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots) == 0x000008, "Wrong alignment on BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots");
static_assert(sizeof(BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots) == 0x000178, "Wrong size on BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots");
static_assert(offsetof(BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots, PairsToOverride) == 0x000000, "Member 'BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots::PairsToOverride' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots, OutVariantSlotsPairs) == 0x000010, "Member 'BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots::OutVariantSlotsPairs' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots, bOutSucess) == 0x000020, "Member 'BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots::bOutSucess' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots, Pairs) == 0x000028, "Member 'BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots::Pairs' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots, CallFunc_GetPlayerCurrentOutfitVariantSlots_OutVariantSlotsPairs) == 0x000040, "Member 'BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots::CallFunc_GetPlayerCurrentOutfitVariantSlots_OutVariantSlotsPairs' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots, CallFunc_GetPlayerCurrentOutfitVariantSlots_bOutSucess) == 0x000050, "Member 'BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots::CallFunc_GetPlayerCurrentOutfitVariantSlots_bOutSucess' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots, Temp_int_Array_Index_Variable) == 0x000058, "Member 'BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots, Temp_bool_True_if_break_was_hit_Variable) == 0x00005C, "Member 'BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots, Temp_int_Loop_Counter_Variable_1) == 0x000060, "Member 'BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots, CallFunc_Add_IntInt_ReturnValue_1) == 0x000064, "Member 'BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots, Temp_int_Array_Index_Variable_1) == 0x000068, "Member 'BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots, CallFunc_Array_Length_ReturnValue) == 0x00006C, "Member 'BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots, Temp_int_Array_Index_Variable_2) == 0x000070, "Member 'BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots, CallFunc_Array_Get_Item) == 0x000078, "Member 'BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots, CallFunc_Array_AddUnique_ReturnValue) == 0x000088, "Member 'BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots, CallFunc_Array_Get_Item_1) == 0x000090, "Member 'BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots, CallFunc_Array_Length_ReturnValue_1) == 0x0000A0, "Member 'BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots, CallFunc_Array_RemoveItem_ReturnValue) == 0x0000A4, "Member 'BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots, CallFunc_Less_IntInt_ReturnValue) == 0x0000A5, "Member 'BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x0000A6, "Member 'BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots, Temp_int_Loop_Counter_Variable_2) == 0x0000A8, "Member 'BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000AC, "Member 'BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000B0, "Member 'BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots, K2Node_MakeArray_Array) == 0x0000B8, "Member 'BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots, CallFunc_GetUserControllerId_ReturnValue) == 0x0000C8, "Member 'BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots::CallFunc_GetUserControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue) == 0x0000D0, "Member 'BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots, CallFunc_K2_GetPawn_ReturnValue) == 0x0000D8, "Member 'BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots, CallFunc_IsValid_ReturnValue) == 0x0000E0, "Member 'BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots, K2Node_DynamicCast_AsBP_Character_Shelter) == 0x0000E8, "Member 'BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots::K2Node_DynamicCast_AsBP_Character_Shelter' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots, K2Node_DynamicCast_bSuccess) == 0x0000F0, "Member 'BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots, CallFunc_GetArchetypeVariant_ReturnValue) == 0x0000F8, "Member 'BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots::CallFunc_GetArchetypeVariant_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots, CallFunc_Map_Values_Values) == 0x000100, "Member 'BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots, K2Node_MakeStruct_CustomizationSlotVariant) == 0x000110, "Member 'BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots::K2Node_MakeStruct_CustomizationSlotVariant' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots, CallFunc_Array_Get_Item_2) == 0x000120, "Member 'BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots, CallFunc_Array_AddUnique_ReturnValue_1) == 0x000128, "Member 'BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots, K2Node_MakeStruct_CustomizationSlotVariant_1) == 0x000130, "Member 'BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots::K2Node_MakeStruct_CustomizationSlotVariant_1' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots, CallFunc_GetCustomizationInSlot_ReturnValue) == 0x000140, "Member 'BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots::CallFunc_GetCustomizationInSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots, CallFunc_Array_AddUnique_ReturnValue_2) == 0x000150, "Member 'BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots::CallFunc_Array_AddUnique_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots, CallFunc_Array_Length_ReturnValue_2) == 0x000154, "Member 'BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots, K2Node_MakeStruct_CustomizationSlotVariant_2) == 0x000158, "Member 'BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots::K2Node_MakeStruct_CustomizationSlotVariant_2' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots, CallFunc_Less_IntInt_ReturnValue_2) == 0x000168, "Member 'BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots, CallFunc_Array_AddUnique_ReturnValue_3) == 0x00016C, "Member 'BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots::CallFunc_Array_AddUnique_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots, CallFunc_IsValidClass_ReturnValue) == 0x000170, "Member 'BP_ItemPreview_C_GetPlayerCurrentOutfitVariantSlots::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");

// Function BP_ItemPreview.BP_ItemPreview_C.GetHardCurrencyPreviewModel
// 0x00F8 (0x00F8 - 0x0000)
struct BP_ItemPreview_C_GetHardCurrencyPreviewModel final
{
public:
	int32                                         SizeIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            Mesh;                                              // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<int32, TSoftObjectPtr<class UStaticMesh>> SizeIndexToMesh;                                   // 0x0010(0x0050)(Edit, BlueprintVisible)
	TMap<int32, TSoftObjectPtr<class UStaticMesh>> K2Node_MakeVariable_MakeVariableOutput;            // 0x0060(0x0050)()
	TSoftObjectPtr<class UStaticMesh>             CallFunc_Map_Find_Value;                           // 0x00B0(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DA[0x6];                                       // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftReference_ReturnValue;            // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_DynamicCast_AsStatic_Mesh;                  // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ItemPreview_C_GetHardCurrencyPreviewModel) == 0x000008, "Wrong alignment on BP_ItemPreview_C_GetHardCurrencyPreviewModel");
static_assert(sizeof(BP_ItemPreview_C_GetHardCurrencyPreviewModel) == 0x0000F8, "Wrong size on BP_ItemPreview_C_GetHardCurrencyPreviewModel");
static_assert(offsetof(BP_ItemPreview_C_GetHardCurrencyPreviewModel, SizeIndex) == 0x000000, "Member 'BP_ItemPreview_C_GetHardCurrencyPreviewModel::SizeIndex' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetHardCurrencyPreviewModel, Mesh) == 0x000008, "Member 'BP_ItemPreview_C_GetHardCurrencyPreviewModel::Mesh' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetHardCurrencyPreviewModel, SizeIndexToMesh) == 0x000010, "Member 'BP_ItemPreview_C_GetHardCurrencyPreviewModel::SizeIndexToMesh' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetHardCurrencyPreviewModel, K2Node_MakeVariable_MakeVariableOutput) == 0x000060, "Member 'BP_ItemPreview_C_GetHardCurrencyPreviewModel::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetHardCurrencyPreviewModel, CallFunc_Map_Find_Value) == 0x0000B0, "Member 'BP_ItemPreview_C_GetHardCurrencyPreviewModel::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetHardCurrencyPreviewModel, CallFunc_Map_Find_ReturnValue) == 0x0000D8, "Member 'BP_ItemPreview_C_GetHardCurrencyPreviewModel::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetHardCurrencyPreviewModel, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x0000D9, "Member 'BP_ItemPreview_C_GetHardCurrencyPreviewModel::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetHardCurrencyPreviewModel, CallFunc_LoadSoftReference_ReturnValue) == 0x0000E0, "Member 'BP_ItemPreview_C_GetHardCurrencyPreviewModel::CallFunc_LoadSoftReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetHardCurrencyPreviewModel, K2Node_DynamicCast_AsStatic_Mesh) == 0x0000E8, "Member 'BP_ItemPreview_C_GetHardCurrencyPreviewModel::K2Node_DynamicCast_AsStatic_Mesh' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetHardCurrencyPreviewModel, K2Node_DynamicCast_bSuccess) == 0x0000F0, "Member 'BP_ItemPreview_C_GetHardCurrencyPreviewModel::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ItemPreview_C_GetHardCurrencyPreviewModel, CallFunc_IsValid_ReturnValue) == 0x0000F1, "Member 'BP_ItemPreview_C_GetHardCurrencyPreviewModel::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

