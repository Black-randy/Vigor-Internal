#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Cheat_CoreMenu

#include "Basic.hpp"

#include "UI_Cheat_CoreMenu_classes.hpp"
#include "UI_Cheat_CoreMenu_parameters.hpp"


namespace SDK
{

// Function UI_Cheat_CoreMenu.UI_Cheat_CoreMenu_C.ExecuteUbergraph_UI_Cheat_CoreMenu
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Cheat_CoreMenu_C::ExecuteUbergraph_UI_Cheat_CoreMenu(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Cheat_CoreMenu_C", "ExecuteUbergraph_UI_Cheat_CoreMenu");

	Params::UI_Cheat_CoreMenu_C_ExecuteUbergraph_UI_Cheat_CoreMenu Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Cheat_CoreMenu.UI_Cheat_CoreMenu_C.BndEvt__UI_GamepadActionWidget_K2Node_ComponentBoundEvent_0_OnActionPressedEvent__DelegateSignature
// (BlueprintEvent)

void UUI_Cheat_CoreMenu_C::BndEvt__UI_GamepadActionWidget_K2Node_ComponentBoundEvent_0_OnActionPressedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Cheat_CoreMenu_C", "BndEvt__UI_GamepadActionWidget_K2Node_ComponentBoundEvent_0_OnActionPressedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Cheat_CoreMenu.UI_Cheat_CoreMenu_C.Update UI Based on Whether I Can Cheat
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Can_Cheat                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_Cheat_CoreMenu_C::Update_UI_Based_on_Whether_I_Can_Cheat(bool Can_Cheat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Cheat_CoreMenu_C", "Update UI Based on Whether I Can Cheat");

	Params::UI_Cheat_CoreMenu_C_Update_UI_Based_on_Whether_I_Can_Cheat Parms{};

	Parms.Can_Cheat = Can_Cheat;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Cheat_CoreMenu.UI_Cheat_CoreMenu_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_Cheat_CoreMenu_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Cheat_CoreMenu_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Cheat_CoreMenu.UI_Cheat_CoreMenu_C.OnKeyDown
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FKeyEvent                        InKeyEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UUI_Cheat_CoreMenu_C::OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Cheat_CoreMenu_C", "OnKeyDown");

	Params::UI_Cheat_CoreMenu_C_OnKeyDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InKeyEvent = std::move(InKeyEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UI_Cheat_CoreMenu.UI_Cheat_CoreMenu_C.CloseCheatMenu
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_Cheat_CoreMenu_C::CloseCheatMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Cheat_CoreMenu_C", "CloseCheatMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Cheat_CoreMenu.UI_Cheat_CoreMenu_C.SetCheatMenuVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ESlateVisibility                        InVisibility                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Cheat_CoreMenu_C::SetCheatMenuVisibility(ESlateVisibility InVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Cheat_CoreMenu_C", "SetCheatMenuVisibility");

	Params::UI_Cheat_CoreMenu_C_SetCheatMenuVisibility Parms{};

	Parms.InVisibility = InVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Cheat_CoreMenu.UI_Cheat_CoreMenu_C.CreateTabs
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TArray<class UTabWidget*>               ReturnValue                                            (Parm, OutParm, ReturnParm, ContainsInstancedReference)

TArray<class UTabWidget*> UUI_Cheat_CoreMenu_C::CreateTabs() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Cheat_CoreMenu_C", "CreateTabs");

	Params::UI_Cheat_CoreMenu_C_CreateTabs Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

