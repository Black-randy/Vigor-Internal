#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ShelterOnboardingComponent

#include "Basic.hpp"

#include "Flame_structs.hpp"
#include "Engine_structs.hpp"
#include "BP_GameModeComponent_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ShelterOnboardingComponent.BP_ShelterOnboardingComponent_C
// 0x00E8 (0x01A0 - 0x00B8)
class UBP_ShelterOnboardingComponent_C final : public UBP_GameModeComponent_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_ShelterOnboardingComponent_C;    // 0x00B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TMap<EShelterMainTab, bool>                   ShelterTabLocks;                                   // 0x00C0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          IsMapLocked;                                       // 0x0110(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TotalMatchesPlayed;                                // 0x0114(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MapLockThreshold;                                  // 0x0118(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ShelterTabsLockThreshold;                          // 0x011C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OnboardingLocksMasterSwitch;                       // 0x0120(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsShelterTabLocked;                                // 0x0121(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_122[0x6];                                      // 0x0122(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameMode_Shelter_C*                 Shelter_Game_Mode;                                 // 0x0128(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<EShelterMainTab, TSoftClassPtr<class UClass>> ShelterInteractionPoints;                          // 0x0130(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	class UStashComponent*                        Stash_Storage;                                     // 0x0180(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             BasicOnboardingFinished;                           // 0x0188(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsShootingRangeLocked;                             // 0x0198(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void BasicOnboardingFinished__DelegateSignature();
	void ExecuteUbergraph_BP_ShelterOnboardingComponent(int32 EntryPoint);
	void OnBattlePassRewardsClaimed(TArray<struct FS_BattlePassLevelRewardFull>& Free, TArray<struct FS_BattlePassLevelRewardFull>& Premium, bool PremiumLocked);
	void OnItemBought(class UClass* Item);
	void ProcessOnboardingStage();
	void Refresh_UI_Locks();
	void SetShelterUILocks(bool LockUI);
	void OpenEquipTab();
	void UpdateOnboardingData(bool IsLeaderboardsDataLoaded, const struct FCloudUserProfileStatistics& LeaderboardsData);
	void ReceiveBeginPlay();
	void Toggle_Shelter_Lock(EShelterMainTab ShelterTab, bool Lock);
	void Toggle_Shelter_Improvements(bool Lock);
	void Toggle_Donation_Box(bool Lock);
	void Toggle_Interaction(bool Lock, class UInteractionItemComponent* InteractionComponent);
	void Toggle_Shooting_Range(bool Lock);
	void Toggle_Cassette_Player(bool Lock);
	void Get_Cosmetics_Count(int32* Cosmetics_Count);
	void Is_Tab_Locked(EShelterMainTab Shelter_Tab, bool* Locked);
	void Set_Onboarding_Active(bool Is_active);
	void Toggle_Onboarding_Master_Switch(bool* Current_state);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ShelterOnboardingComponent_C">();
	}
	static class UBP_ShelterOnboardingComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_ShelterOnboardingComponent_C>();
	}
};
static_assert(alignof(UBP_ShelterOnboardingComponent_C) == 0x000008, "Wrong alignment on UBP_ShelterOnboardingComponent_C");
static_assert(sizeof(UBP_ShelterOnboardingComponent_C) == 0x0001A0, "Wrong size on UBP_ShelterOnboardingComponent_C");
static_assert(offsetof(UBP_ShelterOnboardingComponent_C, UberGraphFrame_BP_ShelterOnboardingComponent_C) == 0x0000B8, "Member 'UBP_ShelterOnboardingComponent_C::UberGraphFrame_BP_ShelterOnboardingComponent_C' has a wrong offset!");
static_assert(offsetof(UBP_ShelterOnboardingComponent_C, ShelterTabLocks) == 0x0000C0, "Member 'UBP_ShelterOnboardingComponent_C::ShelterTabLocks' has a wrong offset!");
static_assert(offsetof(UBP_ShelterOnboardingComponent_C, IsMapLocked) == 0x000110, "Member 'UBP_ShelterOnboardingComponent_C::IsMapLocked' has a wrong offset!");
static_assert(offsetof(UBP_ShelterOnboardingComponent_C, TotalMatchesPlayed) == 0x000114, "Member 'UBP_ShelterOnboardingComponent_C::TotalMatchesPlayed' has a wrong offset!");
static_assert(offsetof(UBP_ShelterOnboardingComponent_C, MapLockThreshold) == 0x000118, "Member 'UBP_ShelterOnboardingComponent_C::MapLockThreshold' has a wrong offset!");
static_assert(offsetof(UBP_ShelterOnboardingComponent_C, ShelterTabsLockThreshold) == 0x00011C, "Member 'UBP_ShelterOnboardingComponent_C::ShelterTabsLockThreshold' has a wrong offset!");
static_assert(offsetof(UBP_ShelterOnboardingComponent_C, OnboardingLocksMasterSwitch) == 0x000120, "Member 'UBP_ShelterOnboardingComponent_C::OnboardingLocksMasterSwitch' has a wrong offset!");
static_assert(offsetof(UBP_ShelterOnboardingComponent_C, IsShelterTabLocked) == 0x000121, "Member 'UBP_ShelterOnboardingComponent_C::IsShelterTabLocked' has a wrong offset!");
static_assert(offsetof(UBP_ShelterOnboardingComponent_C, Shelter_Game_Mode) == 0x000128, "Member 'UBP_ShelterOnboardingComponent_C::Shelter_Game_Mode' has a wrong offset!");
static_assert(offsetof(UBP_ShelterOnboardingComponent_C, ShelterInteractionPoints) == 0x000130, "Member 'UBP_ShelterOnboardingComponent_C::ShelterInteractionPoints' has a wrong offset!");
static_assert(offsetof(UBP_ShelterOnboardingComponent_C, Stash_Storage) == 0x000180, "Member 'UBP_ShelterOnboardingComponent_C::Stash_Storage' has a wrong offset!");
static_assert(offsetof(UBP_ShelterOnboardingComponent_C, BasicOnboardingFinished) == 0x000188, "Member 'UBP_ShelterOnboardingComponent_C::BasicOnboardingFinished' has a wrong offset!");
static_assert(offsetof(UBP_ShelterOnboardingComponent_C, IsShootingRangeLocked) == 0x000198, "Member 'UBP_ShelterOnboardingComponent_C::IsShootingRangeLocked' has a wrong offset!");

}

