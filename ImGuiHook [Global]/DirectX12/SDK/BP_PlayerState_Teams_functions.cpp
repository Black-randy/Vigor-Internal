#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerState_Teams

#include "Basic.hpp"

#include "BP_PlayerState_Teams_classes.hpp"
#include "BP_PlayerState_Teams_parameters.hpp"


namespace SDK
{

// Function BP_PlayerState_Teams.BP_PlayerState_Teams_C.ExecuteUbergraph_BP_PlayerState_Teams
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerState_Teams_C::ExecuteUbergraph_BP_PlayerState_Teams(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_Teams_C", "ExecuteUbergraph_BP_PlayerState_Teams");

	Params::BP_PlayerState_Teams_C_ExecuteUbergraph_BP_PlayerState_Teams Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerState_Teams.BP_PlayerState_Teams_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_PlayerState_Teams_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_Teams_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerState_Teams.BP_PlayerState_Teams_C.Save Battle Pass Info on Server
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Level                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Premium                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PlayerState_Teams_C::Save_Battle_Pass_Info_on_Server(int32 Level, bool Premium)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_Teams_C", "Save Battle Pass Info on Server");

	Params::BP_PlayerState_Teams_C_Save_Battle_Pass_Info_on_Server Parms{};

	Parms.Level = Level;
	Parms.Premium = Premium;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerState_Teams.BP_PlayerState_Teams_C.Battle Pass System Ready
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerState_Teams_C::Battle_Pass_System_Ready()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_Teams_C", "Battle Pass System Ready");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerState_Teams.BP_PlayerState_Teams_C.GetCurrentLoadout
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FStruct_GunFightLoadout          Loadout                                                (Parm, OutParm, HasGetValueTypeHash)
// bool                                    FoundAny                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PlayerState_Teams_C::GetCurrentLoadout(struct FStruct_GunFightLoadout* Loadout, bool* FoundAny)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_Teams_C", "GetCurrentLoadout");

	Params::BP_PlayerState_Teams_C_GetCurrentLoadout Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Loadout != nullptr)
		*Loadout = std::move(Parms.Loadout);

	if (FoundAny != nullptr)
		*FoundAny = Parms.FoundAny;
}


// Function BP_PlayerState_Teams.BP_PlayerState_Teams_C.FindTeammates
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ABP_PlayerState_C*>        TeammatesPlayerStates                                  (Parm, OutParm)

void ABP_PlayerState_Teams_C::FindTeammates(TArray<class ABP_PlayerState_C*>* TeammatesPlayerStates)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_Teams_C", "FindTeammates");

	Params::BP_PlayerState_Teams_C_FindTeammates Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TeammatesPlayerStates != nullptr)
		*TeammatesPlayerStates = std::move(Parms.TeammatesPlayerStates);
}

}

