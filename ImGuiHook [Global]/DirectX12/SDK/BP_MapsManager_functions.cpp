#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MapsManager

#include "Basic.hpp"

#include "BP_MapsManager_classes.hpp"
#include "BP_MapsManager_parameters.hpp"


namespace SDK
{

// Function BP_MapsManager.BP_MapsManager_C.OnMapsRotationUpdated__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UBP_MapsManager_C::OnMapsRotationUpdated__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapsManager_C", "OnMapsRotationUpdated__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapsManager.BP_MapsManager_C.ExecuteUbergraph_BP_MapsManager
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MapsManager_C::ExecuteUbergraph_BP_MapsManager(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapsManager_C", "ExecuteUbergraph_BP_MapsManager");

	Params::BP_MapsManager_C_ExecuteUbergraph_BP_MapsManager Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapsManager.BP_MapsManager_C.OnRefreshScheduled
// (BlueprintCallable, BlueprintEvent)

void UBP_MapsManager_C::OnRefreshScheduled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapsManager_C", "OnRefreshScheduled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapsManager.BP_MapsManager_C.OnCloudResponseProcessed
// (BlueprintCallable, BlueprintEvent)

void UBP_MapsManager_C::OnCloudResponseProcessed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapsManager_C", "OnCloudResponseProcessed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapsManager.BP_MapsManager_C.OnLevelEntered
// (BlueprintCallable, BlueprintEvent)

void UBP_MapsManager_C::OnLevelEntered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapsManager_C", "OnLevelEntered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapsManager.BP_MapsManager_C.OnGetMapsRotationFinished
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FCloudRequestResult              RequestResult                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class FString                           Userid                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FCloudMapRotationsResponse       Data                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_MapsManager_C::OnGetMapsRotationFinished(const struct FCloudRequestResult& RequestResult, const class FString& Userid, const struct FCloudMapRotationsResponse& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapsManager_C", "OnGetMapsRotationFinished");

	Params::BP_MapsManager_C_OnGetMapsRotationFinished Parms{};

	Parms.RequestResult = std::move(RequestResult);
	Parms.Userid = std::move(Userid);
	Parms.Data = std::move(Data);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapsManager.BP_MapsManager_C.BlueprintDeInit
// (Event, Public, BlueprintEvent)

void UBP_MapsManager_C::BlueprintDeInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapsManager_C", "BlueprintDeInit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapsManager.BP_MapsManager_C.BlueprintInit
// (Event, Public, BlueprintEvent)

void UBP_MapsManager_C::BlueprintInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapsManager_C", "BlueprintInit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapsManager.BP_MapsManager_C.BindDelegates
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_MapsManager_C::BindDelegates()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapsManager_C", "BindDelegates");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapsManager.BP_MapsManager_C.UnbindDelegates
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_MapsManager_C::UnbindDelegates()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapsManager_C", "UnbindDelegates");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapsManager.BP_MapsManager_C.ProcessCloudResponse
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FCloudRequestResult              RequestResult                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FCloudMapRotationsResponse       MapRotationsResponse                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_MapsManager_C::ProcessCloudResponse(const struct FCloudRequestResult& RequestResult, const struct FCloudMapRotationsResponse& MapRotationsResponse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapsManager_C", "ProcessCloudResponse");

	Params::BP_MapsManager_C_ProcessCloudResponse Parms{};

	Parms.RequestResult = std::move(RequestResult);
	Parms.MapRotationsResponse = std::move(MapRotationsResponse);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapsManager.BP_MapsManager_C.UpdateMapsRotation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_MapsManager_C::UpdateMapsRotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapsManager_C", "UpdateMapsRotation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapsManager.BP_MapsManager_C.IsRequestInProgress
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_MapsManager_C::IsRequestInProgress(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapsManager_C", "IsRequestInProgress");

	Params::BP_MapsManager_C_IsRequestInProgress Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_MapsManager.BP_MapsManager_C.HasMapsRotationAvailable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_MapsManager_C::HasMapsRotationAvailable(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapsManager_C", "HasMapsRotationAvailable");

	Params::BP_MapsManager_C_HasMapsRotationAvailable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_MapsManager.BP_MapsManager_C.ScheduleNextRefresh
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_MapsManager_C::ScheduleNextRefresh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapsManager_C", "ScheduleNextRefresh");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapsManager.BP_MapsManager_C.GetMapRotationSlots
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TArray<struct FCloudMapRotationSlot>    Slots                                                  (Parm, OutParm)

void UBP_MapsManager_C::GetMapRotationSlots(TArray<struct FCloudMapRotationSlot>* Slots) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapsManager_C", "GetMapRotationSlots");

	Params::BP_MapsManager_C_GetMapRotationSlots Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Slots != nullptr)
		*Slots = std::move(Parms.Slots);
}

}

