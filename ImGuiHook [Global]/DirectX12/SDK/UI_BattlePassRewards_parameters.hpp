#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_BattlePassRewards

#include "Basic.hpp"

#include "S_BattlePassLevelRewardFull_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Flame_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function UI_BattlePassRewards.UI_BattlePassRewards_C.ExecuteUbergraph_UI_BattlePassRewards
// 0x02A8 (0x02A8 - 0x0000)
struct UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Event_InWidget;                             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetParentUserWidget_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetParentUserWidget_ReturnValue_1;        // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePassSystem*                      CallFunc_GetBattlePassSystem_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_BattlePassSystem_C*                 K2Node_DynamicCast_AsBP_Battle_Pass_System;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Success;                        // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePassSystem*                      CallFunc_GetBattlePassSystem_ReturnValue_1;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BattlePassSystem_C*                 K2Node_DynamicCast_AsBP_Battle_Pass_System_1;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Get_Season_Name_Active_Season_Name;       // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Season_Premium_Products_AreProductsValid; // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBattlePassSeasonProducts>      CallFunc_Get_Season_Premium_Products_PremiumBattlePassProducts; // 0x0078(0x0010)(ReferenceParm)
	EMessageBoxAction                             K2Node_CustomEvent_Result;                         // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePassSystem*                      CallFunc_GetBattlePassSystem_ReturnValue_2;        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BattlePassSystem_C*                 K2Node_DynamicCast_AsBP_Battle_Pass_System_2;      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_BattlePassBuyPremium_C*             CallFunc_Create_ReturnValue;                       // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool Success)>                 K2Node_CreateDelegate_OutputDelegate;              // 0x00C0(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_GetZOrder_ReturnValue;                    // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool WasPremiumPurchaseSuccesful)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x00D4(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_CustomEvent_WasPremiumPurchaseSuccesful;    // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x00E8(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool WasPremiumPurchaseSuccesful)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x00F8(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0108(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0128(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UBattlePassSystem*                      CallFunc_GetBattlePassSystem_ReturnValue_3;        // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEventSystem*                           CallFunc_GetEventSystem_ReturnValue;               // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_BattlePassSystem_C*                 K2Node_DynamicCast_AsBP_Battle_Pass_System_3;      // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_EventSystem_C*                      K2Node_DynamicCast_AsBP_Event_System;              // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_Get_Unclaimed_Rewards_Seasons;            // 0x0160(0x0010)(ReferenceParm)
	TArray<struct FS_BattlePassLevelRewardFull>   CallFunc_Get_Unclaimed_Rewards_Free_Rewards;       // 0x0170(0x0010)(ReferenceParm)
	TArray<struct FS_BattlePassLevelRewardFull>   CallFunc_Get_Unclaimed_Rewards_Premium_Rewards;    // 0x0180(0x0010)(ReferenceParm)
	class UBattlePassSystem*                      CallFunc_GetBattlePassSystem_ReturnValue_4;        // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_BattlePassSystem_C*                 K2Node_DynamicCast_AsBP_Battle_Pass_System_4;      // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x3];                                      // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Get_Season_Name_Active_Season_Name_1;     // 0x01A4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Send_Battle_Pass_Buy_Premium_Closed_Event_ReturnValue; // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AE[0x2];                                      // 0x01AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool WasPremiumPurchaseSuccesful)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x01B0(0x0010)(ZeroConstructor, NoDestructor)
	class UWidget*                                CallFunc_GetFirstChild_BattlePassItem;             // 0x01C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_ItemBattlePassRewardSlot_C*         K2Node_DynamicCast_AsUI_Item_Battle_Pass_Reward_Slot; // 0x01C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetRowFocus_FocusWasSet;                  // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D2[0x2];                                      // 0x01D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EMessageBoxAction Result)>     K2Node_CreateDelegate_OutputDelegate_6;            // 0x01D4(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_1E4[0x4];                                      // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMessageBoxWidget*                      CallFunc_ShowMessageBox_ReturnValue;               // 0x01E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UButton*                                K2Node_ComponentBoundEvent_Sender_2;               // 0x01F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UButton*                                K2Node_ComponentBoundEvent_Sender_1;               // 0x01F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UButton*                                K2Node_ComponentBoundEvent_Sender;                 // 0x0200(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlatformGroupDesktop_ReturnValue;       // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUI_CustomCursor_C*>             CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0210(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UUI_CustomCursor_C*                     CallFunc_Array_Get_Item;                           // 0x0220(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlatformGroupDesktop_ReturnValue_1;     // 0x022D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22E[0x2];                                      // 0x022E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUI_CustomCursor_C*>             CallFunc_GetAllWidgetsOfClass_FoundWidgets_1;      // 0x0230(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UUI_CustomCursor_C*                     CallFunc_Array_Get_Item_1;                         // 0x0240(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x024C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24D[0x3];                                      // 0x024D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0250(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0278(0x0028)()
	bool                                          CallFunc_SetRowFocus_FocusWasSet_1;                // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x02A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x02A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards) == 0x000008, "Wrong alignment on UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards");
static_assert(sizeof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards) == 0x0002A8, "Wrong size on UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, EntryPoint) == 0x000000, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, K2Node_Event_InWidget) == 0x000008, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::K2Node_Event_InWidget' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, CallFunc_GetParentUserWidget_ReturnValue) == 0x000018, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::CallFunc_GetParentUserWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, CallFunc_GetParentUserWidget_ReturnValue_1) == 0x000020, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::CallFunc_GetParentUserWidget_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000028, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, K2Node_Event_IsDesignTime) == 0x000029, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, CallFunc_GetBattlePassSystem_ReturnValue) == 0x000030, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::CallFunc_GetBattlePassSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, K2Node_DynamicCast_AsBP_Battle_Pass_System) == 0x000038, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::K2Node_DynamicCast_AsBP_Battle_Pass_System' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, K2Node_CustomEvent_Success) == 0x000041, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::K2Node_CustomEvent_Success' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, CallFunc_GetBattlePassSystem_ReturnValue_1) == 0x000048, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::CallFunc_GetBattlePassSystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, Temp_int_Variable) == 0x000050, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, K2Node_DynamicCast_AsBP_Battle_Pass_System_1) == 0x000058, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::K2Node_DynamicCast_AsBP_Battle_Pass_System_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, CallFunc_Add_IntInt_ReturnValue) == 0x000064, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, CallFunc_Get_Season_Name_Active_Season_Name) == 0x000068, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::CallFunc_Get_Season_Name_Active_Season_Name' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, CallFunc_Get_Season_Premium_Products_AreProductsValid) == 0x000070, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::CallFunc_Get_Season_Premium_Products_AreProductsValid' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, CallFunc_Get_Season_Premium_Products_PremiumBattlePassProducts) == 0x000078, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::CallFunc_Get_Season_Premium_Products_PremiumBattlePassProducts' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, K2Node_CustomEvent_Result) == 0x000088, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::K2Node_CustomEvent_Result' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, CallFunc_GetBattlePassSystem_ReturnValue_2) == 0x000090, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::CallFunc_GetBattlePassSystem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, Temp_int_Variable_1) == 0x000098, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, K2Node_DynamicCast_AsBP_Battle_Pass_System_2) == 0x0000A0, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::K2Node_DynamicCast_AsBP_Battle_Pass_System_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, K2Node_DynamicCast_bSuccess_2) == 0x0000A8, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000AC, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, CallFunc_GetOwningPlayer_ReturnValue) == 0x0000B0, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, CallFunc_Create_ReturnValue) == 0x0000B8, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, K2Node_CreateDelegate_OutputDelegate) == 0x0000C0, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, CallFunc_GetZOrder_ReturnValue) == 0x0000D0, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::CallFunc_GetZOrder_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000D4, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, K2Node_CustomEvent_WasPremiumPurchaseSuccesful) == 0x0000E4, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::K2Node_CustomEvent_WasPremiumPurchaseSuccesful' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000E8, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000F8, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, K2Node_CreateDelegate_OutputDelegate_4) == 0x000108, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, CallFunc_IsValid_ReturnValue_1) == 0x000118, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, CallFunc_GetEndTime_ReturnValue) == 0x00011C, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, CallFunc_PlayAnimation_ReturnValue) == 0x000120, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000128, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, CallFunc_GetBattlePassSystem_ReturnValue_3) == 0x000130, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::CallFunc_GetBattlePassSystem_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, CallFunc_GetEventSystem_ReturnValue) == 0x000138, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::CallFunc_GetEventSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, K2Node_DynamicCast_AsBP_Battle_Pass_System_3) == 0x000140, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::K2Node_DynamicCast_AsBP_Battle_Pass_System_3' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, K2Node_DynamicCast_bSuccess_3) == 0x000148, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, K2Node_DynamicCast_AsBP_Event_System) == 0x000150, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::K2Node_DynamicCast_AsBP_Event_System' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, K2Node_DynamicCast_bSuccess_4) == 0x000158, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, CallFunc_Get_Unclaimed_Rewards_Seasons) == 0x000160, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::CallFunc_Get_Unclaimed_Rewards_Seasons' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, CallFunc_Get_Unclaimed_Rewards_Free_Rewards) == 0x000170, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::CallFunc_Get_Unclaimed_Rewards_Free_Rewards' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, CallFunc_Get_Unclaimed_Rewards_Premium_Rewards) == 0x000180, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::CallFunc_Get_Unclaimed_Rewards_Premium_Rewards' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, CallFunc_GetBattlePassSystem_ReturnValue_4) == 0x000190, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::CallFunc_GetBattlePassSystem_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, K2Node_DynamicCast_AsBP_Battle_Pass_System_4) == 0x000198, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::K2Node_DynamicCast_AsBP_Battle_Pass_System_4' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, K2Node_DynamicCast_bSuccess_5) == 0x0001A0, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, CallFunc_Get_Season_Name_Active_Season_Name_1) == 0x0001A4, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::CallFunc_Get_Season_Name_Active_Season_Name_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, CallFunc_Send_Battle_Pass_Buy_Premium_Closed_Event_ReturnValue) == 0x0001AC, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::CallFunc_Send_Battle_Pass_Buy_Premium_Closed_Event_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, CallFunc_IsValid_ReturnValue_2) == 0x0001AD, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, K2Node_CreateDelegate_OutputDelegate_5) == 0x0001B0, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, CallFunc_GetFirstChild_BattlePassItem) == 0x0001C0, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::CallFunc_GetFirstChild_BattlePassItem' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, K2Node_DynamicCast_AsUI_Item_Battle_Pass_Reward_Slot) == 0x0001C8, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::K2Node_DynamicCast_AsUI_Item_Battle_Pass_Reward_Slot' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, K2Node_DynamicCast_bSuccess_6) == 0x0001D0, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, CallFunc_SetRowFocus_FocusWasSet) == 0x0001D1, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::CallFunc_SetRowFocus_FocusWasSet' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, K2Node_CreateDelegate_OutputDelegate_6) == 0x0001D4, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, CallFunc_ShowMessageBox_ReturnValue) == 0x0001E8, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::CallFunc_ShowMessageBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, K2Node_ComponentBoundEvent_Sender_2) == 0x0001F0, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::K2Node_ComponentBoundEvent_Sender_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, K2Node_ComponentBoundEvent_Sender_1) == 0x0001F8, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::K2Node_ComponentBoundEvent_Sender_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, K2Node_ComponentBoundEvent_Sender) == 0x000200, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::K2Node_ComponentBoundEvent_Sender' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, CallFunc_IsPlatformGroupDesktop_ReturnValue) == 0x000208, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::CallFunc_IsPlatformGroupDesktop_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000210, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, CallFunc_Array_Get_Item) == 0x000220, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, CallFunc_Array_Length_ReturnValue) == 0x000228, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, CallFunc_Less_IntInt_ReturnValue) == 0x00022C, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, CallFunc_IsPlatformGroupDesktop_ReturnValue_1) == 0x00022D, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::CallFunc_IsPlatformGroupDesktop_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, CallFunc_GetAllWidgetsOfClass_FoundWidgets_1) == 0x000230, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::CallFunc_GetAllWidgetsOfClass_FoundWidgets_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, CallFunc_Array_Get_Item_1) == 0x000240, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, CallFunc_Array_Length_ReturnValue_1) == 0x000248, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, CallFunc_Less_IntInt_ReturnValue_1) == 0x00024C, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, K2Node_MakeStruct_SlateColor) == 0x000250, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, K2Node_MakeStruct_SlateColor_1) == 0x000278, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, CallFunc_SetRowFocus_FocusWasSet_1) == 0x0002A0, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::CallFunc_SetRowFocus_FocusWasSet_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, CallFunc_IsValid_ReturnValue_3) == 0x0002A1, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards, CallFunc_IsValid_ReturnValue_4) == 0x0002A2, "Member 'UI_BattlePassRewards_C_ExecuteUbergraph_UI_BattlePassRewards::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");

// Function UI_BattlePassRewards.UI_BattlePassRewards_C.BndEvt__UI_BattlePassRewards_FlameButton_152_K2Node_ComponentBoundEvent_3_OnButtonHoverEvent__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct UI_BattlePassRewards_C_BndEvt__UI_BattlePassRewards_FlameButton_152_K2Node_ComponentBoundEvent_3_OnButtonHoverEvent__DelegateSignature final
{
public:
	class UButton*                                Sender;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattlePassRewards_C_BndEvt__UI_BattlePassRewards_FlameButton_152_K2Node_ComponentBoundEvent_3_OnButtonHoverEvent__DelegateSignature) == 0x000008, "Wrong alignment on UI_BattlePassRewards_C_BndEvt__UI_BattlePassRewards_FlameButton_152_K2Node_ComponentBoundEvent_3_OnButtonHoverEvent__DelegateSignature");
static_assert(sizeof(UI_BattlePassRewards_C_BndEvt__UI_BattlePassRewards_FlameButton_152_K2Node_ComponentBoundEvent_3_OnButtonHoverEvent__DelegateSignature) == 0x000008, "Wrong size on UI_BattlePassRewards_C_BndEvt__UI_BattlePassRewards_FlameButton_152_K2Node_ComponentBoundEvent_3_OnButtonHoverEvent__DelegateSignature");
static_assert(offsetof(UI_BattlePassRewards_C_BndEvt__UI_BattlePassRewards_FlameButton_152_K2Node_ComponentBoundEvent_3_OnButtonHoverEvent__DelegateSignature, Sender) == 0x000000, "Member 'UI_BattlePassRewards_C_BndEvt__UI_BattlePassRewards_FlameButton_152_K2Node_ComponentBoundEvent_3_OnButtonHoverEvent__DelegateSignature::Sender' has a wrong offset!");

// Function UI_BattlePassRewards.UI_BattlePassRewards_C.BndEvt__UI_BattlePassRewards_FlameButton_152_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct UI_BattlePassRewards_C_BndEvt__UI_BattlePassRewards_FlameButton_152_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature final
{
public:
	class UButton*                                Sender;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattlePassRewards_C_BndEvt__UI_BattlePassRewards_FlameButton_152_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature) == 0x000008, "Wrong alignment on UI_BattlePassRewards_C_BndEvt__UI_BattlePassRewards_FlameButton_152_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature");
static_assert(sizeof(UI_BattlePassRewards_C_BndEvt__UI_BattlePassRewards_FlameButton_152_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature) == 0x000008, "Wrong size on UI_BattlePassRewards_C_BndEvt__UI_BattlePassRewards_FlameButton_152_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature");
static_assert(offsetof(UI_BattlePassRewards_C_BndEvt__UI_BattlePassRewards_FlameButton_152_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature, Sender) == 0x000000, "Member 'UI_BattlePassRewards_C_BndEvt__UI_BattlePassRewards_FlameButton_152_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature::Sender' has a wrong offset!");

// Function UI_BattlePassRewards.UI_BattlePassRewards_C.BndEvt__UI_BattlePassRewards_FlameButton_152_K2Node_ComponentBoundEvent_1_OnButtonPressedEvent__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct UI_BattlePassRewards_C_BndEvt__UI_BattlePassRewards_FlameButton_152_K2Node_ComponentBoundEvent_1_OnButtonPressedEvent__DelegateSignature final
{
public:
	class UButton*                                Sender;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattlePassRewards_C_BndEvt__UI_BattlePassRewards_FlameButton_152_K2Node_ComponentBoundEvent_1_OnButtonPressedEvent__DelegateSignature) == 0x000008, "Wrong alignment on UI_BattlePassRewards_C_BndEvt__UI_BattlePassRewards_FlameButton_152_K2Node_ComponentBoundEvent_1_OnButtonPressedEvent__DelegateSignature");
static_assert(sizeof(UI_BattlePassRewards_C_BndEvt__UI_BattlePassRewards_FlameButton_152_K2Node_ComponentBoundEvent_1_OnButtonPressedEvent__DelegateSignature) == 0x000008, "Wrong size on UI_BattlePassRewards_C_BndEvt__UI_BattlePassRewards_FlameButton_152_K2Node_ComponentBoundEvent_1_OnButtonPressedEvent__DelegateSignature");
static_assert(offsetof(UI_BattlePassRewards_C_BndEvt__UI_BattlePassRewards_FlameButton_152_K2Node_ComponentBoundEvent_1_OnButtonPressedEvent__DelegateSignature, Sender) == 0x000000, "Member 'UI_BattlePassRewards_C_BndEvt__UI_BattlePassRewards_FlameButton_152_K2Node_ComponentBoundEvent_1_OnButtonPressedEvent__DelegateSignature::Sender' has a wrong offset!");

// Function UI_BattlePassRewards.UI_BattlePassRewards_C.Event_BattlePassBuyPremiumClosed
// 0x0001 (0x0001 - 0x0000)
struct UI_BattlePassRewards_C_Event_BattlePassBuyPremiumClosed final
{
public:
	bool                                          WasPremiumPurchaseSuccesful;                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_BattlePassRewards_C_Event_BattlePassBuyPremiumClosed) == 0x000001, "Wrong alignment on UI_BattlePassRewards_C_Event_BattlePassBuyPremiumClosed");
static_assert(sizeof(UI_BattlePassRewards_C_Event_BattlePassBuyPremiumClosed) == 0x000001, "Wrong size on UI_BattlePassRewards_C_Event_BattlePassBuyPremiumClosed");
static_assert(offsetof(UI_BattlePassRewards_C_Event_BattlePassBuyPremiumClosed, WasPremiumPurchaseSuccesful) == 0x000000, "Member 'UI_BattlePassRewards_C_Event_BattlePassBuyPremiumClosed::WasPremiumPurchaseSuccesful' has a wrong offset!");

// Function UI_BattlePassRewards.UI_BattlePassRewards_C.WarningMsgBoxClosed
// 0x0001 (0x0001 - 0x0000)
struct UI_BattlePassRewards_C_WarningMsgBoxClosed final
{
public:
	EMessageBoxAction                             Result;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattlePassRewards_C_WarningMsgBoxClosed) == 0x000001, "Wrong alignment on UI_BattlePassRewards_C_WarningMsgBoxClosed");
static_assert(sizeof(UI_BattlePassRewards_C_WarningMsgBoxClosed) == 0x000001, "Wrong size on UI_BattlePassRewards_C_WarningMsgBoxClosed");
static_assert(offsetof(UI_BattlePassRewards_C_WarningMsgBoxClosed, Result) == 0x000000, "Member 'UI_BattlePassRewards_C_WarningMsgBoxClosed::Result' has a wrong offset!");

// Function UI_BattlePassRewards.UI_BattlePassRewards_C.Event Rewards Claim Result
// 0x0001 (0x0001 - 0x0000)
struct UI_BattlePassRewards_C_Event_Rewards_Claim_Result final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_BattlePassRewards_C_Event_Rewards_Claim_Result) == 0x000001, "Wrong alignment on UI_BattlePassRewards_C_Event_Rewards_Claim_Result");
static_assert(sizeof(UI_BattlePassRewards_C_Event_Rewards_Claim_Result) == 0x000001, "Wrong size on UI_BattlePassRewards_C_Event_Rewards_Claim_Result");
static_assert(offsetof(UI_BattlePassRewards_C_Event_Rewards_Claim_Result, Success) == 0x000000, "Member 'UI_BattlePassRewards_C_Event_Rewards_Claim_Result::Success' has a wrong offset!");

// Function UI_BattlePassRewards.UI_BattlePassRewards_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_BattlePassRewards_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_BattlePassRewards_C_PreConstruct) == 0x000001, "Wrong alignment on UI_BattlePassRewards_C_PreConstruct");
static_assert(sizeof(UI_BattlePassRewards_C_PreConstruct) == 0x000001, "Wrong size on UI_BattlePassRewards_C_PreConstruct");
static_assert(offsetof(UI_BattlePassRewards_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_BattlePassRewards_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_BattlePassRewards.UI_BattlePassRewards_C.OnChildFocusReceived
// 0x0008 (0x0008 - 0x0000)
struct UI_BattlePassRewards_C_OnChildFocusReceived final
{
public:
	class UWidget*                                InWidget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattlePassRewards_C_OnChildFocusReceived) == 0x000008, "Wrong alignment on UI_BattlePassRewards_C_OnChildFocusReceived");
static_assert(sizeof(UI_BattlePassRewards_C_OnChildFocusReceived) == 0x000008, "Wrong size on UI_BattlePassRewards_C_OnChildFocusReceived");
static_assert(offsetof(UI_BattlePassRewards_C_OnChildFocusReceived, InWidget) == 0x000000, "Member 'UI_BattlePassRewards_C_OnChildFocusReceived::InWidget' has a wrong offset!");

// Function UI_BattlePassRewards.UI_BattlePassRewards_C.BindToSlotInRow
// 0x0020 (0x0020 - 0x0000)
struct UI_BattlePassRewards_C_BindToSlotInRow final
{
public:
	class UUI_BattlePassRewardsRow_C*             RewardsRow_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlatformGroupDesktop_ReturnValue;       // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_BattlePassRewards_C_BindToSlotInRow) == 0x000008, "Wrong alignment on UI_BattlePassRewards_C_BindToSlotInRow");
static_assert(sizeof(UI_BattlePassRewards_C_BindToSlotInRow) == 0x000020, "Wrong size on UI_BattlePassRewards_C_BindToSlotInRow");
static_assert(offsetof(UI_BattlePassRewards_C_BindToSlotInRow, RewardsRow_0) == 0x000000, "Member 'UI_BattlePassRewards_C_BindToSlotInRow::RewardsRow_0' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_BindToSlotInRow, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'UI_BattlePassRewards_C_BindToSlotInRow::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_BindToSlotInRow, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'UI_BattlePassRewards_C_BindToSlotInRow::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_BindToSlotInRow, CallFunc_IsPlatformGroupDesktop_ReturnValue) == 0x000019, "Member 'UI_BattlePassRewards_C_BindToSlotInRow::CallFunc_IsPlatformGroupDesktop_ReturnValue' has a wrong offset!");

// Function UI_BattlePassRewards.UI_BattlePassRewards_C.UnbindSlotInRow
// 0x0020 (0x0020 - 0x0000)
struct UI_BattlePassRewards_C_UnbindSlotInRow final
{
public:
	class UUI_BattlePassRewardsRow_C*             RewardsRow_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlatformGroupDesktop_ReturnValue;       // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_BattlePassRewards_C_UnbindSlotInRow) == 0x000008, "Wrong alignment on UI_BattlePassRewards_C_UnbindSlotInRow");
static_assert(sizeof(UI_BattlePassRewards_C_UnbindSlotInRow) == 0x000020, "Wrong size on UI_BattlePassRewards_C_UnbindSlotInRow");
static_assert(offsetof(UI_BattlePassRewards_C_UnbindSlotInRow, RewardsRow_0) == 0x000000, "Member 'UI_BattlePassRewards_C_UnbindSlotInRow::RewardsRow_0' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_UnbindSlotInRow, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'UI_BattlePassRewards_C_UnbindSlotInRow::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_UnbindSlotInRow, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'UI_BattlePassRewards_C_UnbindSlotInRow::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_UnbindSlotInRow, CallFunc_IsPlatformGroupDesktop_ReturnValue) == 0x000019, "Member 'UI_BattlePassRewards_C_UnbindSlotInRow::CallFunc_IsPlatformGroupDesktop_ReturnValue' has a wrong offset!");

// Function UI_BattlePassRewards.UI_BattlePassRewards_C.UpdateItemInfo
// 0x0220 (0x0220 - 0x0000)
struct UI_BattlePassRewards_C_UpdateItemInfo final
{
public:
	class UWidget*                                WidgetIn;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AItem*                                  ItemDefaultObject;                                 // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_ItemBattlePassRewardSlot_C*         K2Node_DynamicCast_AsUI_Item_Battle_Pass_Reward_Slot; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInvetoryItemDescriptor                CallFunc_GetItemDescriptor_ReturnValue;            // 0x0020(0x0030)(ConstParm, NoDestructor, ContainsInstancedReference)
	TSubclassOf<class AItem>                      CallFunc_GetItemType_ReturnValue;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0058(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0098(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AItem*                                  CallFunc_GetClassDefaultObject_ReturnValue;        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsCurrency_Battle_Pass_XPBooster; // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetCategoryName_ReturnValue;              // 0x00C8(0x0018)()
	struct FItemRarity                            CallFunc_GetItemRarity_ReturnValue;                // 0x00E0(0x0028)(ConstParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0108(0x0040)(HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0148(0x0028)()
	class FText                                   CallFunc_GetItemName_ReturnValue;                  // 0x0170(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0188(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01C8(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x01E0(0x0010)(ReferenceParm)
	class FText                                   K2Node_Select_Default;                             // 0x01F0(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0208(0x0018)()
};
static_assert(alignof(UI_BattlePassRewards_C_UpdateItemInfo) == 0x000008, "Wrong alignment on UI_BattlePassRewards_C_UpdateItemInfo");
static_assert(sizeof(UI_BattlePassRewards_C_UpdateItemInfo) == 0x000220, "Wrong size on UI_BattlePassRewards_C_UpdateItemInfo");
static_assert(offsetof(UI_BattlePassRewards_C_UpdateItemInfo, WidgetIn) == 0x000000, "Member 'UI_BattlePassRewards_C_UpdateItemInfo::WidgetIn' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_UpdateItemInfo, ItemDefaultObject) == 0x000008, "Member 'UI_BattlePassRewards_C_UpdateItemInfo::ItemDefaultObject' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_UpdateItemInfo, K2Node_DynamicCast_AsUI_Item_Battle_Pass_Reward_Slot) == 0x000010, "Member 'UI_BattlePassRewards_C_UpdateItemInfo::K2Node_DynamicCast_AsUI_Item_Battle_Pass_Reward_Slot' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_UpdateItemInfo, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'UI_BattlePassRewards_C_UpdateItemInfo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_UpdateItemInfo, Temp_bool_Variable) == 0x000019, "Member 'UI_BattlePassRewards_C_UpdateItemInfo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_UpdateItemInfo, CallFunc_GetItemDescriptor_ReturnValue) == 0x000020, "Member 'UI_BattlePassRewards_C_UpdateItemInfo::CallFunc_GetItemDescriptor_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_UpdateItemInfo, CallFunc_GetItemType_ReturnValue) == 0x000050, "Member 'UI_BattlePassRewards_C_UpdateItemInfo::CallFunc_GetItemType_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_UpdateItemInfo, K2Node_MakeStruct_FormatArgumentData) == 0x000058, "Member 'UI_BattlePassRewards_C_UpdateItemInfo::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_UpdateItemInfo, K2Node_MakeArray_Array) == 0x000098, "Member 'UI_BattlePassRewards_C_UpdateItemInfo::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_UpdateItemInfo, CallFunc_IsValidClass_ReturnValue) == 0x0000A8, "Member 'UI_BattlePassRewards_C_UpdateItemInfo::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_UpdateItemInfo, CallFunc_GetClassDefaultObject_ReturnValue) == 0x0000B0, "Member 'UI_BattlePassRewards_C_UpdateItemInfo::CallFunc_GetClassDefaultObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_UpdateItemInfo, K2Node_ClassDynamicCast_AsCurrency_Battle_Pass_XPBooster) == 0x0000B8, "Member 'UI_BattlePassRewards_C_UpdateItemInfo::K2Node_ClassDynamicCast_AsCurrency_Battle_Pass_XPBooster' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_UpdateItemInfo, K2Node_ClassDynamicCast_bSuccess) == 0x0000C0, "Member 'UI_BattlePassRewards_C_UpdateItemInfo::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_UpdateItemInfo, CallFunc_GetCategoryName_ReturnValue) == 0x0000C8, "Member 'UI_BattlePassRewards_C_UpdateItemInfo::CallFunc_GetCategoryName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_UpdateItemInfo, CallFunc_GetItemRarity_ReturnValue) == 0x0000E0, "Member 'UI_BattlePassRewards_C_UpdateItemInfo::CallFunc_GetItemRarity_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_UpdateItemInfo, K2Node_MakeStruct_FormatArgumentData_1) == 0x000108, "Member 'UI_BattlePassRewards_C_UpdateItemInfo::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_UpdateItemInfo, K2Node_MakeStruct_SlateColor) == 0x000148, "Member 'UI_BattlePassRewards_C_UpdateItemInfo::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_UpdateItemInfo, CallFunc_GetItemName_ReturnValue) == 0x000170, "Member 'UI_BattlePassRewards_C_UpdateItemInfo::CallFunc_GetItemName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_UpdateItemInfo, K2Node_MakeStruct_FormatArgumentData_2) == 0x000188, "Member 'UI_BattlePassRewards_C_UpdateItemInfo::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_UpdateItemInfo, CallFunc_Format_ReturnValue) == 0x0001C8, "Member 'UI_BattlePassRewards_C_UpdateItemInfo::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_UpdateItemInfo, K2Node_MakeArray_Array_1) == 0x0001E0, "Member 'UI_BattlePassRewards_C_UpdateItemInfo::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_UpdateItemInfo, K2Node_Select_Default) == 0x0001F0, "Member 'UI_BattlePassRewards_C_UpdateItemInfo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_UpdateItemInfo, CallFunc_Format_ReturnValue_1) == 0x000208, "Member 'UI_BattlePassRewards_C_UpdateItemInfo::CallFunc_Format_ReturnValue_1' has a wrong offset!");

// Function UI_BattlePassRewards.UI_BattlePassRewards_C.Create Idle Widget
// 0x0020 (0x0020 - 0x0000)
struct UI_BattlePassRewards_C_Create_Idle_Widget final
{
public:
	int32                                         CallFunc_GetZOrder_ReturnValue;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_IdleWidget_C*                       CallFunc_Create_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_BattlePassRewards_C_Create_Idle_Widget) == 0x000008, "Wrong alignment on UI_BattlePassRewards_C_Create_Idle_Widget");
static_assert(sizeof(UI_BattlePassRewards_C_Create_Idle_Widget) == 0x000020, "Wrong size on UI_BattlePassRewards_C_Create_Idle_Widget");
static_assert(offsetof(UI_BattlePassRewards_C_Create_Idle_Widget, CallFunc_GetZOrder_ReturnValue) == 0x000000, "Member 'UI_BattlePassRewards_C_Create_Idle_Widget::CallFunc_GetZOrder_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_Create_Idle_Widget, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'UI_BattlePassRewards_C_Create_Idle_Widget::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_Create_Idle_Widget, CallFunc_Create_ReturnValue) == 0x000010, "Member 'UI_BattlePassRewards_C_Create_Idle_Widget::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_Create_Idle_Widget, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'UI_BattlePassRewards_C_Create_Idle_Widget::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function UI_BattlePassRewards.UI_BattlePassRewards_C.Remove Idle Widget
// 0x0001 (0x0001 - 0x0000)
struct UI_BattlePassRewards_C_Remove_Idle_Widget final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_BattlePassRewards_C_Remove_Idle_Widget) == 0x000001, "Wrong alignment on UI_BattlePassRewards_C_Remove_Idle_Widget");
static_assert(sizeof(UI_BattlePassRewards_C_Remove_Idle_Widget) == 0x000001, "Wrong size on UI_BattlePassRewards_C_Remove_Idle_Widget");
static_assert(offsetof(UI_BattlePassRewards_C_Remove_Idle_Widget, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'UI_BattlePassRewards_C_Remove_Idle_Widget::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function UI_BattlePassRewards.UI_BattlePassRewards_C.RefreshRewards
// 0x02B0 (0x02B0 - 0x0000)
struct UI_BattlePassRewards_C_RefreshRewards final
{
public:
	TArray<class FName>                           SeasonsIn;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FS_BattlePassLevelRewardFull>   FreeRewardsIn;                                     // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FS_BattlePassLevelRewardFull>   PremiumRewardsIn;                                  // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          PremiumRowLockedIn;                                // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PriceAfterDiscount;                                // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FinalPrice;                                        // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DiscountPercent;                                   // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PriceWithoutDiscount;                              // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HardCurrencyAvailable;                             // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FText>                           SeasonsText;                                       // 0x0048(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0064(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0078(0x0028)()
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_1;                   // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x00B0(0x0028)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F3[0x1];                                       // 0x00F3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_4;             // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_5;             // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FB[0x5];                                       // 0x00FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0100(0x0018)()
	int32                                         CallFunc_GetFinalPremiumPrice_FinalPrice;          // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x011D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11E[0x2];                                      // 0x011E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Join_Text_Array_ReturnValue;              // 0x0138(0x0018)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBattlePassSystem*                      CallFunc_GetBattlePassSystem_ReturnValue;          // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_BattlePassSystem_C*                 K2Node_DynamicCast_AsBP_Battle_Pass_System;        // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Get_Season_Name_Active_Season_Name;       // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameStoreProductInfo                  CallFunc_Get_Season_Premium_Product_with_Lowest_Price_PremiumProduct; // 0x0188(0x0050)()
	class AHumanPlayerState*                      K2Node_DynamicCast_AsHuman_Player_State;           // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetRowFocus_FocusWasSet;                  // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E2[0x6];                                      // 0x01E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AStash*                                 CallFunc_GetStash_ReturnValue;                     // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBattlePassSystem*                      CallFunc_GetBattlePassSystem_ReturnValue_1;        // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetHardCurrency_ReturnValue;              // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FC[0x4];                                      // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BattlePassSystem_C*                 K2Node_DynamicCast_AsBP_Battle_Pass_System_1;      // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_209[0x3];                                      // 0x0209(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Get_Season_Number_Number;                 // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0218(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0258(0x0010)(ReferenceParm)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_269[0x7];                                      // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0270(0x0018)()
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x028C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x028D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x028E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_6;             // 0x028F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0290(0x0018)()
	bool                                          CallFunc_SetRowFocus_FocusWasSet_1;                // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_BattlePassRewards_C_RefreshRewards) == 0x000008, "Wrong alignment on UI_BattlePassRewards_C_RefreshRewards");
static_assert(sizeof(UI_BattlePassRewards_C_RefreshRewards) == 0x0002B0, "Wrong size on UI_BattlePassRewards_C_RefreshRewards");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, SeasonsIn) == 0x000000, "Member 'UI_BattlePassRewards_C_RefreshRewards::SeasonsIn' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, FreeRewardsIn) == 0x000010, "Member 'UI_BattlePassRewards_C_RefreshRewards::FreeRewardsIn' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, PremiumRewardsIn) == 0x000020, "Member 'UI_BattlePassRewards_C_RefreshRewards::PremiumRewardsIn' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, PremiumRowLockedIn) == 0x000030, "Member 'UI_BattlePassRewards_C_RefreshRewards::PremiumRowLockedIn' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, PriceAfterDiscount) == 0x000034, "Member 'UI_BattlePassRewards_C_RefreshRewards::PriceAfterDiscount' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, FinalPrice) == 0x000038, "Member 'UI_BattlePassRewards_C_RefreshRewards::FinalPrice' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, DiscountPercent) == 0x00003C, "Member 'UI_BattlePassRewards_C_RefreshRewards::DiscountPercent' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, PriceWithoutDiscount) == 0x000040, "Member 'UI_BattlePassRewards_C_RefreshRewards::PriceWithoutDiscount' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, HardCurrencyAvailable) == 0x000044, "Member 'UI_BattlePassRewards_C_RefreshRewards::HardCurrencyAvailable' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, SeasonsText) == 0x000048, "Member 'UI_BattlePassRewards_C_RefreshRewards::SeasonsText' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'UI_BattlePassRewards_C_RefreshRewards::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'UI_BattlePassRewards_C_RefreshRewards::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, Temp_int_Array_Index_Variable) == 0x000060, "Member 'UI_BattlePassRewards_C_RefreshRewards::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, K2Node_MakeStruct_LinearColor) == 0x000064, "Member 'UI_BattlePassRewards_C_RefreshRewards::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, K2Node_MakeStruct_SlateColor) == 0x000078, "Member 'UI_BattlePassRewards_C_RefreshRewards::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, K2Node_MakeStruct_LinearColor_1) == 0x0000A0, "Member 'UI_BattlePassRewards_C_RefreshRewards::K2Node_MakeStruct_LinearColor_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, K2Node_MakeStruct_SlateColor_1) == 0x0000B0, "Member 'UI_BattlePassRewards_C_RefreshRewards::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, CallFunc_Array_Length_ReturnValue) == 0x0000D8, "Member 'UI_BattlePassRewards_C_RefreshRewards::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, CallFunc_Array_Length_ReturnValue_1) == 0x0000DC, "Member 'UI_BattlePassRewards_C_RefreshRewards::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, CallFunc_Greater_IntInt_ReturnValue) == 0x0000E0, "Member 'UI_BattlePassRewards_C_RefreshRewards::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0000E1, "Member 'UI_BattlePassRewards_C_RefreshRewards::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, CallFunc_Not_PreBool_ReturnValue) == 0x0000E2, "Member 'UI_BattlePassRewards_C_RefreshRewards::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000E3, "Member 'UI_BattlePassRewards_C_RefreshRewards::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, CallFunc_Array_Length_ReturnValue_2) == 0x0000E4, "Member 'UI_BattlePassRewards_C_RefreshRewards::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, CallFunc_Greater_IntInt_ReturnValue_2) == 0x0000E8, "Member 'UI_BattlePassRewards_C_RefreshRewards::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, CallFunc_Array_Length_ReturnValue_3) == 0x0000EC, "Member 'UI_BattlePassRewards_C_RefreshRewards::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, CallFunc_Not_PreBool_ReturnValue_2) == 0x0000F0, "Member 'UI_BattlePassRewards_C_RefreshRewards::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, CallFunc_Greater_IntInt_ReturnValue_3) == 0x0000F1, "Member 'UI_BattlePassRewards_C_RefreshRewards::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, CallFunc_Not_PreBool_ReturnValue_3) == 0x0000F2, "Member 'UI_BattlePassRewards_C_RefreshRewards::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, CallFunc_Array_Length_ReturnValue_4) == 0x0000F4, "Member 'UI_BattlePassRewards_C_RefreshRewards::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, CallFunc_Greater_IntInt_ReturnValue_4) == 0x0000F8, "Member 'UI_BattlePassRewards_C_RefreshRewards::CallFunc_Greater_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, CallFunc_Not_PreBool_ReturnValue_4) == 0x0000F9, "Member 'UI_BattlePassRewards_C_RefreshRewards::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, CallFunc_Greater_IntInt_ReturnValue_5) == 0x0000FA, "Member 'UI_BattlePassRewards_C_RefreshRewards::CallFunc_Greater_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, CallFunc_Conv_IntToText_ReturnValue) == 0x000100, "Member 'UI_BattlePassRewards_C_RefreshRewards::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, CallFunc_GetFinalPremiumPrice_FinalPrice) == 0x000118, "Member 'UI_BattlePassRewards_C_RefreshRewards::CallFunc_GetFinalPremiumPrice_FinalPrice' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00011C, "Member 'UI_BattlePassRewards_C_RefreshRewards::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, CallFunc_BooleanOR_ReturnValue) == 0x00011D, "Member 'UI_BattlePassRewards_C_RefreshRewards::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, CallFunc_Array_Get_Item) == 0x000120, "Member 'UI_BattlePassRewards_C_RefreshRewards::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, CallFunc_BooleanAND_ReturnValue) == 0x000128, "Member 'UI_BattlePassRewards_C_RefreshRewards::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, CallFunc_Array_Length_ReturnValue_5) == 0x00012C, "Member 'UI_BattlePassRewards_C_RefreshRewards::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, CallFunc_Less_IntInt_ReturnValue) == 0x000130, "Member 'UI_BattlePassRewards_C_RefreshRewards::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, CallFunc_Join_Text_Array_ReturnValue) == 0x000138, "Member 'UI_BattlePassRewards_C_RefreshRewards::CallFunc_Join_Text_Array_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, CallFunc_PlayAnimation_ReturnValue) == 0x000150, "Member 'UI_BattlePassRewards_C_RefreshRewards::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, CallFunc_GetBattlePassSystem_ReturnValue) == 0x000158, "Member 'UI_BattlePassRewards_C_RefreshRewards::CallFunc_GetBattlePassSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, K2Node_DynamicCast_AsBP_Battle_Pass_System) == 0x000160, "Member 'UI_BattlePassRewards_C_RefreshRewards::K2Node_DynamicCast_AsBP_Battle_Pass_System' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, K2Node_DynamicCast_bSuccess) == 0x000168, "Member 'UI_BattlePassRewards_C_RefreshRewards::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, CallFunc_GetOwningPlayer_ReturnValue) == 0x000170, "Member 'UI_BattlePassRewards_C_RefreshRewards::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, CallFunc_Get_Season_Name_Active_Season_Name) == 0x000178, "Member 'UI_BattlePassRewards_C_RefreshRewards::CallFunc_Get_Season_Name_Active_Season_Name' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, CallFunc_IsValid_ReturnValue) == 0x000180, "Member 'UI_BattlePassRewards_C_RefreshRewards::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, CallFunc_Get_Season_Premium_Product_with_Lowest_Price_PremiumProduct) == 0x000188, "Member 'UI_BattlePassRewards_C_RefreshRewards::CallFunc_Get_Season_Premium_Product_with_Lowest_Price_PremiumProduct' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, K2Node_DynamicCast_AsHuman_Player_State) == 0x0001D8, "Member 'UI_BattlePassRewards_C_RefreshRewards::K2Node_DynamicCast_AsHuman_Player_State' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, K2Node_DynamicCast_bSuccess_1) == 0x0001E0, "Member 'UI_BattlePassRewards_C_RefreshRewards::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, CallFunc_SetRowFocus_FocusWasSet) == 0x0001E1, "Member 'UI_BattlePassRewards_C_RefreshRewards::CallFunc_SetRowFocus_FocusWasSet' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, CallFunc_GetStash_ReturnValue) == 0x0001E8, "Member 'UI_BattlePassRewards_C_RefreshRewards::CallFunc_GetStash_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, CallFunc_GetBattlePassSystem_ReturnValue_1) == 0x0001F0, "Member 'UI_BattlePassRewards_C_RefreshRewards::CallFunc_GetBattlePassSystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, CallFunc_GetHardCurrency_ReturnValue) == 0x0001F8, "Member 'UI_BattlePassRewards_C_RefreshRewards::CallFunc_GetHardCurrency_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, K2Node_DynamicCast_AsBP_Battle_Pass_System_1) == 0x000200, "Member 'UI_BattlePassRewards_C_RefreshRewards::K2Node_DynamicCast_AsBP_Battle_Pass_System_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, K2Node_DynamicCast_bSuccess_2) == 0x000208, "Member 'UI_BattlePassRewards_C_RefreshRewards::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, CallFunc_Get_Season_Number_Number) == 0x00020C, "Member 'UI_BattlePassRewards_C_RefreshRewards::CallFunc_Get_Season_Number_Number' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, CallFunc_IsValid_ReturnValue_1) == 0x000210, "Member 'UI_BattlePassRewards_C_RefreshRewards::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, K2Node_MakeStruct_FormatArgumentData) == 0x000218, "Member 'UI_BattlePassRewards_C_RefreshRewards::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, K2Node_MakeArray_Array) == 0x000258, "Member 'UI_BattlePassRewards_C_RefreshRewards::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, Temp_byte_Variable) == 0x000268, "Member 'UI_BattlePassRewards_C_RefreshRewards::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, CallFunc_Format_ReturnValue) == 0x000270, "Member 'UI_BattlePassRewards_C_RefreshRewards::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, CallFunc_Array_Add_ReturnValue) == 0x000288, "Member 'UI_BattlePassRewards_C_RefreshRewards::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, Temp_byte_Variable_1) == 0x00028C, "Member 'UI_BattlePassRewards_C_RefreshRewards::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, Temp_bool_Variable) == 0x00028D, "Member 'UI_BattlePassRewards_C_RefreshRewards::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, K2Node_Select_Default) == 0x00028E, "Member 'UI_BattlePassRewards_C_RefreshRewards::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, CallFunc_Greater_IntInt_ReturnValue_6) == 0x00028F, "Member 'UI_BattlePassRewards_C_RefreshRewards::CallFunc_Greater_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000290, "Member 'UI_BattlePassRewards_C_RefreshRewards::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_RefreshRewards, CallFunc_SetRowFocus_FocusWasSet_1) == 0x0002A8, "Member 'UI_BattlePassRewards_C_RefreshRewards::CallFunc_SetRowFocus_FocusWasSet_1' has a wrong offset!");

// Function UI_BattlePassRewards.UI_BattlePassRewards_C.GetFinalPremiumPrice
// 0x0014 (0x0014 - 0x0000)
struct UI_BattlePassRewards_C_GetFinalPremiumPrice final
{
public:
	int32                                         Price;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DiscountPercent;                                   // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PriceAfterDiscount;                                // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FinalPrice;                                        // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_BattlePassRewards_C_GetFinalPremiumPrice) == 0x000004, "Wrong alignment on UI_BattlePassRewards_C_GetFinalPremiumPrice");
static_assert(sizeof(UI_BattlePassRewards_C_GetFinalPremiumPrice) == 0x000014, "Wrong size on UI_BattlePassRewards_C_GetFinalPremiumPrice");
static_assert(offsetof(UI_BattlePassRewards_C_GetFinalPremiumPrice, Price) == 0x000000, "Member 'UI_BattlePassRewards_C_GetFinalPremiumPrice::Price' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_GetFinalPremiumPrice, DiscountPercent) == 0x000004, "Member 'UI_BattlePassRewards_C_GetFinalPremiumPrice::DiscountPercent' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_GetFinalPremiumPrice, PriceAfterDiscount) == 0x000008, "Member 'UI_BattlePassRewards_C_GetFinalPremiumPrice::PriceAfterDiscount' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_GetFinalPremiumPrice, FinalPrice) == 0x00000C, "Member 'UI_BattlePassRewards_C_GetFinalPremiumPrice::FinalPrice' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_GetFinalPremiumPrice, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000010, "Member 'UI_BattlePassRewards_C_GetFinalPremiumPrice::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassRewards_C_GetFinalPremiumPrice, CallFunc_Greater_IntInt_ReturnValue) == 0x000011, "Member 'UI_BattlePassRewards_C_GetFinalPremiumPrice::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

}

