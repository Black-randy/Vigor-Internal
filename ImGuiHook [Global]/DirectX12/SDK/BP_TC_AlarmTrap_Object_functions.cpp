#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TC_AlarmTrap_Object

#include "Basic.hpp"

#include "BP_TC_AlarmTrap_Object_classes.hpp"
#include "BP_TC_AlarmTrap_Object_parameters.hpp"


namespace SDK
{

// Function BP_TC_AlarmTrap_Object.BP_TC_AlarmTrap_Object_C.ExecuteUbergraph_BP_TC_AlarmTrap_Object
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TC_AlarmTrap_Object_C::ExecuteUbergraph_BP_TC_AlarmTrap_Object(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TC_AlarmTrap_Object_C", "ExecuteUbergraph_BP_TC_AlarmTrap_Object");

	Params::BP_TC_AlarmTrap_Object_C_ExecuteUbergraph_BP_TC_AlarmTrap_Object Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TC_AlarmTrap_Object.BP_TC_AlarmTrap_Object_C.Remove alarm trap map marker
// (BlueprintCallable, BlueprintEvent)

void ABP_TC_AlarmTrap_Object_C::Remove_alarm_trap_map_marker()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TC_AlarmTrap_Object_C", "Remove alarm trap map marker");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TC_AlarmTrap_Object.BP_TC_AlarmTrap_Object_C.Mark  alarm trap on the map
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_TC_AlarmTrap_Object_C::Mark__alarm_trap_on_the_map()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TC_AlarmTrap_Object_C", "Mark  alarm trap on the map");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TC_AlarmTrap_Object.BP_TC_AlarmTrap_Object_C.Send other player stepped into alarm trap
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Character_Script_C*           Character_that_stepped_into_alarm_trap                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TC_AlarmTrap_Object_C::Send_other_player_stepped_into_alarm_trap(class ABP_Character_Script_C* Character_that_stepped_into_alarm_trap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TC_AlarmTrap_Object_C", "Send other player stepped into alarm trap");

	Params::BP_TC_AlarmTrap_Object_C_Send_other_player_stepped_into_alarm_trap Parms{};

	Parms.Character_that_stepped_into_alarm_trap = Character_that_stepped_into_alarm_trap;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TC_AlarmTrap_Object.BP_TC_AlarmTrap_Object_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_TC_AlarmTrap_Object_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TC_AlarmTrap_Object_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TC_AlarmTrap_Object.BP_TC_AlarmTrap_Object_C.BndEvt__Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_TC_AlarmTrap_Object_C::BndEvt__Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TC_AlarmTrap_Object_C", "BndEvt__Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");

	Params::BP_TC_AlarmTrap_Object_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TC_AlarmTrap_Object.BP_TC_AlarmTrap_Object_C.Trap_AlarmDurationOver
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_TC_AlarmTrap_Object_C::Trap_AlarmDurationOver()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TC_AlarmTrap_Object_C", "Trap_AlarmDurationOver");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TC_AlarmTrap_Object.BP_TC_AlarmTrap_Object_C.Alarm trap auto break
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_TC_AlarmTrap_Object_C::Alarm_trap_auto_break()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TC_AlarmTrap_Object_C", "Alarm trap auto break");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TC_AlarmTrap_Object.BP_TC_AlarmTrap_Object_C.AlarmTrap_SetUpVariablesFromTool
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Trap_Alarm_Duration_0                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TC_AlarmTrap_Object_C::AlarmTrap_SetUpVariablesFromTool(float Trap_Alarm_Duration_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TC_AlarmTrap_Object_C", "AlarmTrap_SetUpVariablesFromTool");

	Params::BP_TC_AlarmTrap_Object_C_AlarmTrap_SetUpVariablesFromTool Parms{};

	Parms.Trap_Alarm_Duration_0 = Trap_Alarm_Duration_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TC_AlarmTrap_Object.BP_TC_AlarmTrap_Object_C.SetupAudioConcurrency
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_TC_AlarmTrap_Object_C::SetupAudioConcurrency()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TC_AlarmTrap_Object_C", "SetupAudioConcurrency");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TC_AlarmTrap_Object.BP_TC_AlarmTrap_Object_C.Trap_Break
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Player_that_destroyed_the_trap                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TC_AlarmTrap_Object_C::Trap_Break(class UObject* Player_that_destroyed_the_trap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TC_AlarmTrap_Object_C", "Trap_Break");

	Params::BP_TC_AlarmTrap_Object_C_Trap_Break Parms{};

	Parms.Player_that_destroyed_the_trap = Player_that_destroyed_the_trap;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TC_AlarmTrap_Object.BP_TC_AlarmTrap_Object_C.Trap_Activate
// (BlueprintCallable, BlueprintEvent)

void ABP_TC_AlarmTrap_Object_C::Trap_Activate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TC_AlarmTrap_Object_C", "Trap_Activate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TC_AlarmTrap_Object.BP_TC_AlarmTrap_Object_C.Trap_Triggered
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          ObjectThatTriggeredTrap                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TC_AlarmTrap_Object_C::Trap_Triggered(class UObject* ObjectThatTriggeredTrap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TC_AlarmTrap_Object_C", "Trap_Triggered");

	Params::BP_TC_AlarmTrap_Object_C_Trap_Triggered Parms{};

	Parms.ObjectThatTriggeredTrap = ObjectThatTriggeredTrap;

	UObject::ProcessEvent(Func, &Parms);
}

}

