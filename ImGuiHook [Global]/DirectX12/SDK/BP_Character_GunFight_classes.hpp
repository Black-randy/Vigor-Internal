#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Character_GunFight

#include "Basic.hpp"

#include "Flame_structs.hpp"
#include "Engine_structs.hpp"
#include "S_GunFightLoadouts_S12_structs.hpp"
#include "PhysicsCore_structs.hpp"
#include "BP_Character_Teams_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Character_GunFight.BP_Character_GunFight_C
// 0x0040 (0x1280 - 0x1240)
class ABP_Character_GunFight_C final : public ABP_Character_Teams_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Character_GunFight_C;            // 0x1240(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FTimerHandle                           EquipFirstWeaponDelegate;                          // 0x1248(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FS_GunFightLoadouts_S12                CurrentRoundLoadout;                               // 0x1250(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class AController*                            Last_Possessing_Controller;                        // 0x1278(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Character_GunFight(int32 EntryPoint);
	void ReceivePossessed(class AController* NewController);
	void ObjectiveCapturedEvent_Server();
	void Failsafe_RequestLoadoutAgain();
	void ResetPlayer();
	void OnOtherPlayerHit(float DamageAmount, EDamageType DamageType, class AHumanCharacter* Victim, TSubclassOf<class AItem> InstigatingItemClass, const struct FHitResult& HitResult, const TArray<TSubclassOf<class AItem>>& AffectedItems);
	void ObjectiveCapturedEvent();
	void SetPickedLoadout(const struct FS_GunFightLoadouts_S12& Loadout);
	void EquipWeapon();
	void ClientEquipFirstWeapon();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void OnTakeDamage(float DamageAmount, EDamageType DamageType, const class AHumanCharacter* InstigatingActor, TSubclassOf<class AItem> InstigatingItemClass, const struct FHitResultSimplified& HitOptimised, const TArray<TSubclassOf<class AItem>>& AffectedItems);
	void Remove_Marker();
	void Add_Item_To_Backpack(class UClass* Item_Type, int32 Amount);
	void Add_Weapon_To_Loadout(class UClass* Weapon_Type, int32 Ammo_in_Mag_Count, bool Chambered_Ammo);
	void Die(float DamageAmount, EDamageType DamageType, class AHumanCharacter* InstigatingCharacter, TSubclassOf<class AItem> InstigatingItem, const struct FHitResult& HitResult);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	bool ShouldTakeDamageBP(class AHumanCharacter* InstigatingCharacter, const class AActor* DamageCauser, TSubclassOf<class AItem> ItemClass, EDamageType DamageType);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Character_GunFight_C">();
	}
	static class ABP_Character_GunFight_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Character_GunFight_C>();
	}
};
static_assert(alignof(ABP_Character_GunFight_C) == 0x000010, "Wrong alignment on ABP_Character_GunFight_C");
static_assert(sizeof(ABP_Character_GunFight_C) == 0x001280, "Wrong size on ABP_Character_GunFight_C");
static_assert(offsetof(ABP_Character_GunFight_C, UberGraphFrame_BP_Character_GunFight_C) == 0x001240, "Member 'ABP_Character_GunFight_C::UberGraphFrame_BP_Character_GunFight_C' has a wrong offset!");
static_assert(offsetof(ABP_Character_GunFight_C, EquipFirstWeaponDelegate) == 0x001248, "Member 'ABP_Character_GunFight_C::EquipFirstWeaponDelegate' has a wrong offset!");
static_assert(offsetof(ABP_Character_GunFight_C, CurrentRoundLoadout) == 0x001250, "Member 'ABP_Character_GunFight_C::CurrentRoundLoadout' has a wrong offset!");
static_assert(offsetof(ABP_Character_GunFight_C, Last_Possessing_Controller) == 0x001278, "Member 'ABP_Character_GunFight_C::Last_Possessing_Controller' has a wrong offset!");

}

