#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TC_AlarmTrap_Object

#include "Basic.hpp"

#include "BP_PlacableTrap_Object_Base_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_TC_AlarmTrap_Object.BP_TC_AlarmTrap_Object_C
// 0x0068 (0x04D0 - 0x0468)
class ABP_TC_AlarmTrap_Object_C final : public ABP_PlacableTrap_Object_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_TC_AlarmTrap_Object_C;           // 0x0468(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        Audio_Tail;                                        // 0x0470(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       TriggerSphere;                                     // 0x0478(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Trap_Alarm_Duration;                               // 0x0480(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_484[0x4];                                      // 0x0484(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 Trap_Sound_EndDuration;                            // 0x0488(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FTimerHandle                           Alarm_trap_duration_timer;                         // 0x04B0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Triggering_actors;                                 // 0x04B8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class FName                                   MarkerName;                                        // 0x04C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_TC_AlarmTrap_Object(int32 EntryPoint);
	void Remove_alarm_trap_map_marker();
	void Mark__alarm_trap_on_the_map();
	void Send_other_player_stepped_into_alarm_trap(class ABP_Character_Script_C* Character_that_stepped_into_alarm_trap);
	void ReceiveBeginPlay();
	void BndEvt__Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void Trap_AlarmDurationOver();
	void Alarm_trap_auto_break();
	void AlarmTrap_SetUpVariablesFromTool(float Trap_Alarm_Duration_0);
	void SetupAudioConcurrency();
	void Trap_Break(class UObject* Player_that_destroyed_the_trap);
	void Trap_Activate();
	void Trap_Triggered(class UObject* ObjectThatTriggeredTrap);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_TC_AlarmTrap_Object_C">();
	}
	static class ABP_TC_AlarmTrap_Object_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_TC_AlarmTrap_Object_C>();
	}
};
static_assert(alignof(ABP_TC_AlarmTrap_Object_C) == 0x000008, "Wrong alignment on ABP_TC_AlarmTrap_Object_C");
static_assert(sizeof(ABP_TC_AlarmTrap_Object_C) == 0x0004D0, "Wrong size on ABP_TC_AlarmTrap_Object_C");
static_assert(offsetof(ABP_TC_AlarmTrap_Object_C, UberGraphFrame_BP_TC_AlarmTrap_Object_C) == 0x000468, "Member 'ABP_TC_AlarmTrap_Object_C::UberGraphFrame_BP_TC_AlarmTrap_Object_C' has a wrong offset!");
static_assert(offsetof(ABP_TC_AlarmTrap_Object_C, Audio_Tail) == 0x000470, "Member 'ABP_TC_AlarmTrap_Object_C::Audio_Tail' has a wrong offset!");
static_assert(offsetof(ABP_TC_AlarmTrap_Object_C, TriggerSphere) == 0x000478, "Member 'ABP_TC_AlarmTrap_Object_C::TriggerSphere' has a wrong offset!");
static_assert(offsetof(ABP_TC_AlarmTrap_Object_C, Trap_Alarm_Duration) == 0x000480, "Member 'ABP_TC_AlarmTrap_Object_C::Trap_Alarm_Duration' has a wrong offset!");
static_assert(offsetof(ABP_TC_AlarmTrap_Object_C, Trap_Sound_EndDuration) == 0x000488, "Member 'ABP_TC_AlarmTrap_Object_C::Trap_Sound_EndDuration' has a wrong offset!");
static_assert(offsetof(ABP_TC_AlarmTrap_Object_C, Alarm_trap_duration_timer) == 0x0004B0, "Member 'ABP_TC_AlarmTrap_Object_C::Alarm_trap_duration_timer' has a wrong offset!");
static_assert(offsetof(ABP_TC_AlarmTrap_Object_C, Triggering_actors) == 0x0004B8, "Member 'ABP_TC_AlarmTrap_Object_C::Triggering_actors' has a wrong offset!");
static_assert(offsetof(ABP_TC_AlarmTrap_Object_C, MarkerName) == 0x0004C8, "Member 'ABP_TC_AlarmTrap_Object_C::MarkerName' has a wrong offset!");

}

