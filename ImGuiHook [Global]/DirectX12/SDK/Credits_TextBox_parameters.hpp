#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Credits_TextBox

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function Credits_TextBox.Credits_TextBox_C.ExecuteUbergraph_Credits_TextBox
// 0x0008 (0x0008 - 0x0000)
struct Credits_TextBox_C_ExecuteUbergraph_Credits_TextBox final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Credits_TextBox_C_ExecuteUbergraph_Credits_TextBox) == 0x000004, "Wrong alignment on Credits_TextBox_C_ExecuteUbergraph_Credits_TextBox");
static_assert(sizeof(Credits_TextBox_C_ExecuteUbergraph_Credits_TextBox) == 0x000008, "Wrong size on Credits_TextBox_C_ExecuteUbergraph_Credits_TextBox");
static_assert(offsetof(Credits_TextBox_C_ExecuteUbergraph_Credits_TextBox, EntryPoint) == 0x000000, "Member 'Credits_TextBox_C_ExecuteUbergraph_Credits_TextBox::EntryPoint' has a wrong offset!");
static_assert(offsetof(Credits_TextBox_C_ExecuteUbergraph_Credits_TextBox, K2Node_Event_IsDesignTime) == 0x000004, "Member 'Credits_TextBox_C_ExecuteUbergraph_Credits_TextBox::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function Credits_TextBox.Credits_TextBox_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct Credits_TextBox_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Credits_TextBox_C_PreConstruct) == 0x000001, "Wrong alignment on Credits_TextBox_C_PreConstruct");
static_assert(sizeof(Credits_TextBox_C_PreConstruct) == 0x000001, "Wrong size on Credits_TextBox_C_PreConstruct");
static_assert(offsetof(Credits_TextBox_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'Credits_TextBox_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function Credits_TextBox.Credits_TextBox_C.SetIsCategoryName
// 0x0001 (0x0001 - 0x0000)
struct Credits_TextBox_C_SetIsCategoryName final
{
public:
	bool                                          IsCategoryName_0;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Credits_TextBox_C_SetIsCategoryName) == 0x000001, "Wrong alignment on Credits_TextBox_C_SetIsCategoryName");
static_assert(sizeof(Credits_TextBox_C_SetIsCategoryName) == 0x000001, "Wrong size on Credits_TextBox_C_SetIsCategoryName");
static_assert(offsetof(Credits_TextBox_C_SetIsCategoryName, IsCategoryName_0) == 0x000000, "Member 'Credits_TextBox_C_SetIsCategoryName::IsCategoryName_0' has a wrong offset!");

// Function Credits_TextBox.Credits_TextBox_C.UpdateVisual
// 0x0078 (0x0078 - 0x0000)
struct Credits_TextBox_C_UpdateVisual final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default;                             // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo;                   // 0x0020(0x0058)(HasGetValueTypeHash)
};
static_assert(alignof(Credits_TextBox_C_UpdateVisual) == 0x000008, "Wrong alignment on Credits_TextBox_C_UpdateVisual");
static_assert(sizeof(Credits_TextBox_C_UpdateVisual) == 0x000078, "Wrong size on Credits_TextBox_C_UpdateVisual");
static_assert(offsetof(Credits_TextBox_C_UpdateVisual, Temp_bool_Variable) == 0x000000, "Member 'Credits_TextBox_C_UpdateVisual::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Credits_TextBox_C_UpdateVisual, Temp_name_Variable) == 0x000004, "Member 'Credits_TextBox_C_UpdateVisual::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(Credits_TextBox_C_UpdateVisual, Temp_name_Variable_1) == 0x00000C, "Member 'Credits_TextBox_C_UpdateVisual::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(Credits_TextBox_C_UpdateVisual, K2Node_Select_Default) == 0x000014, "Member 'Credits_TextBox_C_UpdateVisual::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Credits_TextBox_C_UpdateVisual, K2Node_MakeStruct_SlateFontInfo) == 0x000020, "Member 'Credits_TextBox_C_UpdateVisual::K2Node_MakeStruct_SlateFontInfo' has a wrong offset!");

}

