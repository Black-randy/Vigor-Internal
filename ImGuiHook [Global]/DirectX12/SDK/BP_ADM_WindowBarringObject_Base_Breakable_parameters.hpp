#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ADM_WindowBarringObject_Base_Breakable

#include "Basic.hpp"

#include "S_NameArray_structs.hpp"


namespace SDK::Params
{

// Function BP_ADM_WindowBarringObject_Base_Breakable.BP_ADM_WindowBarringObject_Base_Breakable_C.Check For Connected Barricades
// 0x00C8 (0x00C8 - 0x0000)
struct BP_ADM_WindowBarringObject_Base_Breakable_C_Check_For_Connected_Barricades final
{
public:
	class FName                                   Item;                                              // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_ADM_DoorBarricade_Component_C*> Barricades;                                        // 0x0008(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<class FName>                           TempNames;                                         // 0x0018(0x0010)(Edit, BlueprintVisible)
	TArray<class UBP_ADM_DoorBarricade_Component_C*> TempBarricades;                                    // 0x0028(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	bool                                          TempShouldRemoveBarricade;                         // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0068(0x0010)(ReferenceParm)
	class UBP_ADM_DoorBarricade_Component_C*      CallFunc_Get_Barricade_By_TAG_Barricade;           // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ADM_DoorBarricade_Component_C*      CallFunc_Get_Barricade_By_TAG_Barricade_1;         // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_NameArray                           CallFunc_Map_Find_Value;                           // 0x00A0(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ADM_WindowBarringObject_Base_Breakable_C_Check_For_Connected_Barricades) == 0x000008, "Wrong alignment on BP_ADM_WindowBarringObject_Base_Breakable_C_Check_For_Connected_Barricades");
static_assert(sizeof(BP_ADM_WindowBarringObject_Base_Breakable_C_Check_For_Connected_Barricades) == 0x0000C8, "Wrong size on BP_ADM_WindowBarringObject_Base_Breakable_C_Check_For_Connected_Barricades");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Check_For_Connected_Barricades, Item) == 0x000000, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Check_For_Connected_Barricades::Item' has a wrong offset!");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Check_For_Connected_Barricades, Barricades) == 0x000008, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Check_For_Connected_Barricades::Barricades' has a wrong offset!");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Check_For_Connected_Barricades, TempNames) == 0x000018, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Check_For_Connected_Barricades::TempNames' has a wrong offset!");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Check_For_Connected_Barricades, TempBarricades) == 0x000028, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Check_For_Connected_Barricades::TempBarricades' has a wrong offset!");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Check_For_Connected_Barricades, TempShouldRemoveBarricade) == 0x000038, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Check_For_Connected_Barricades::TempShouldRemoveBarricade' has a wrong offset!");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Check_For_Connected_Barricades, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Check_For_Connected_Barricades::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Check_For_Connected_Barricades, Temp_int_Loop_Counter_Variable_1) == 0x000040, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Check_For_Connected_Barricades::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Check_For_Connected_Barricades, CallFunc_Subtract_IntInt_ReturnValue) == 0x000044, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Check_For_Connected_Barricades::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Check_For_Connected_Barricades, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Check_For_Connected_Barricades::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Check_For_Connected_Barricades, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00004C, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Check_For_Connected_Barricades::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Check_For_Connected_Barricades, Temp_int_Array_Index_Variable) == 0x000050, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Check_For_Connected_Barricades::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Check_For_Connected_Barricades, CallFunc_Array_RemoveItem_ReturnValue) == 0x000054, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Check_For_Connected_Barricades::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Check_For_Connected_Barricades, Temp_int_Array_Index_Variable_1) == 0x000058, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Check_For_Connected_Barricades::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Check_For_Connected_Barricades, CallFunc_Array_Get_Item) == 0x00005C, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Check_For_Connected_Barricades::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Check_For_Connected_Barricades, CallFunc_Map_Keys_Keys) == 0x000068, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Check_For_Connected_Barricades::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Check_For_Connected_Barricades, CallFunc_Get_Barricade_By_TAG_Barricade) == 0x000078, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Check_For_Connected_Barricades::CallFunc_Get_Barricade_By_TAG_Barricade' has a wrong offset!");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Check_For_Connected_Barricades, CallFunc_Array_Get_Item_1) == 0x000080, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Check_For_Connected_Barricades::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Check_For_Connected_Barricades, CallFunc_IsValid_ReturnValue) == 0x000088, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Check_For_Connected_Barricades::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Check_For_Connected_Barricades, CallFunc_Get_Barricade_By_TAG_Barricade_1) == 0x000090, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Check_For_Connected_Barricades::CallFunc_Get_Barricade_By_TAG_Barricade_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Check_For_Connected_Barricades, CallFunc_Array_Add_ReturnValue) == 0x000098, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Check_For_Connected_Barricades::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Check_For_Connected_Barricades, CallFunc_IsValid_ReturnValue_1) == 0x00009C, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Check_For_Connected_Barricades::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Check_For_Connected_Barricades, CallFunc_Map_Find_Value) == 0x0000A0, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Check_For_Connected_Barricades::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Check_For_Connected_Barricades, CallFunc_Map_Find_ReturnValue) == 0x0000B0, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Check_For_Connected_Barricades::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Check_For_Connected_Barricades, CallFunc_Array_Length_ReturnValue) == 0x0000B4, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Check_For_Connected_Barricades::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Check_For_Connected_Barricades, CallFunc_Less_IntInt_ReturnValue) == 0x0000B8, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Check_For_Connected_Barricades::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Check_For_Connected_Barricades, CallFunc_Array_Length_ReturnValue_1) == 0x0000BC, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Check_For_Connected_Barricades::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Check_For_Connected_Barricades, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000C0, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Check_For_Connected_Barricades::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Check_For_Connected_Barricades, CallFunc_Max_ReturnValue) == 0x0000C4, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Check_For_Connected_Barricades::CallFunc_Max_ReturnValue' has a wrong offset!");

// Function BP_ADM_WindowBarringObject_Base_Breakable.BP_ADM_WindowBarringObject_Base_Breakable_C.Get Barricade By TAG
// 0x0040 (0x0040 - 0x0000)
struct BP_ADM_WindowBarringObject_Base_Breakable_C_Get_Barricade_By_TAG final
{
public:
	class FName                                   Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_ADM_DoorBarricade_Component_C*      Barricade;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_ADM_DoorBarricade_Component_C*> CallFunc_GetComponentsByTag_ReturnValue;           // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_ADM_DoorBarricade_Component_C*      CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ADM_WindowBarringObject_Base_Breakable_C_Get_Barricade_By_TAG) == 0x000008, "Wrong alignment on BP_ADM_WindowBarringObject_Base_Breakable_C_Get_Barricade_By_TAG");
static_assert(sizeof(BP_ADM_WindowBarringObject_Base_Breakable_C_Get_Barricade_By_TAG) == 0x000040, "Wrong size on BP_ADM_WindowBarringObject_Base_Breakable_C_Get_Barricade_By_TAG");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Get_Barricade_By_TAG, Tag) == 0x000000, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Get_Barricade_By_TAG::Tag' has a wrong offset!");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Get_Barricade_By_TAG, Barricade) == 0x000008, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Get_Barricade_By_TAG::Barricade' has a wrong offset!");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Get_Barricade_By_TAG, CallFunc_GetComponentsByTag_ReturnValue) == 0x000010, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Get_Barricade_By_TAG::CallFunc_GetComponentsByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Get_Barricade_By_TAG, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Get_Barricade_By_TAG::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Get_Barricade_By_TAG, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Get_Barricade_By_TAG::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Get_Barricade_By_TAG, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Get_Barricade_By_TAG::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Get_Barricade_By_TAG, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Get_Barricade_By_TAG::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Get_Barricade_By_TAG, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Get_Barricade_By_TAG::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Get_Barricade_By_TAG, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Get_Barricade_By_TAG::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Get_Barricade_By_TAG, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Get_Barricade_By_TAG::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_ADM_WindowBarringObject_Base_Breakable.BP_ADM_WindowBarringObject_Base_Breakable_C.Get Next Active Barricade Component
// 0x0030 (0x0030 - 0x0000)
struct BP_ADM_WindowBarringObject_Base_Breakable_C_Get_Next_Active_Barricade_Component final
{
public:
	class UBP_ADM_DoorBarricade_Component_C*      Barricade_Components;                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ADM_DoorBarricade_Component_C*      CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ADM_WindowBarringObject_Base_Breakable_C_Get_Next_Active_Barricade_Component) == 0x000008, "Wrong alignment on BP_ADM_WindowBarringObject_Base_Breakable_C_Get_Next_Active_Barricade_Component");
static_assert(sizeof(BP_ADM_WindowBarringObject_Base_Breakable_C_Get_Next_Active_Barricade_Component) == 0x000030, "Wrong size on BP_ADM_WindowBarringObject_Base_Breakable_C_Get_Next_Active_Barricade_Component");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Get_Next_Active_Barricade_Component, Barricade_Components) == 0x000000, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Get_Next_Active_Barricade_Component::Barricade_Components' has a wrong offset!");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Get_Next_Active_Barricade_Component, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Get_Next_Active_Barricade_Component::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Get_Next_Active_Barricade_Component, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Get_Next_Active_Barricade_Component::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Get_Next_Active_Barricade_Component, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Get_Next_Active_Barricade_Component::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Get_Next_Active_Barricade_Component, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Get_Next_Active_Barricade_Component::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Get_Next_Active_Barricade_Component, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Get_Next_Active_Barricade_Component::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Get_Next_Active_Barricade_Component, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Get_Next_Active_Barricade_Component::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Get_Next_Active_Barricade_Component, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Get_Next_Active_Barricade_Component::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_ADM_WindowBarringObject_Base_Breakable.BP_ADM_WindowBarringObject_Base_Breakable_C.Get All Active Barricade Meshes
// 0x0078 (0x0078 - 0x0000)
struct BP_ADM_WindowBarringObject_Base_Breakable_C_Get_All_Active_Barricade_Meshes final
{
public:
	TArray<class UStaticMeshComponent*>           Meshes;                                            // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<class UStaticMeshComponent*>           TempActiveMeshes;                                  // 0x0010(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMeshComponent*>           CallFunc_Get_All_Barricade_Meshes_ReturnValue;     // 0x0040(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Map_Find_Value;                           // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ADM_WindowBarringObject_Base_Breakable_C_Get_All_Active_Barricade_Meshes) == 0x000008, "Wrong alignment on BP_ADM_WindowBarringObject_Base_Breakable_C_Get_All_Active_Barricade_Meshes");
static_assert(sizeof(BP_ADM_WindowBarringObject_Base_Breakable_C_Get_All_Active_Barricade_Meshes) == 0x000078, "Wrong size on BP_ADM_WindowBarringObject_Base_Breakable_C_Get_All_Active_Barricade_Meshes");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Get_All_Active_Barricade_Meshes, Meshes) == 0x000000, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Get_All_Active_Barricade_Meshes::Meshes' has a wrong offset!");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Get_All_Active_Barricade_Meshes, TempActiveMeshes) == 0x000010, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Get_All_Active_Barricade_Meshes::TempActiveMeshes' has a wrong offset!");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Get_All_Active_Barricade_Meshes, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Get_All_Active_Barricade_Meshes::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Get_All_Active_Barricade_Meshes, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Get_All_Active_Barricade_Meshes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Get_All_Active_Barricade_Meshes, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Get_All_Active_Barricade_Meshes::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Get_All_Active_Barricade_Meshes, Temp_bool_True_if_break_was_hit_Variable) == 0x00002C, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Get_All_Active_Barricade_Meshes::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Get_All_Active_Barricade_Meshes, Temp_int_Array_Index_Variable_1) == 0x000030, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Get_All_Active_Barricade_Meshes::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Get_All_Active_Barricade_Meshes, Temp_int_Loop_Counter_Variable_1) == 0x000034, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Get_All_Active_Barricade_Meshes::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Get_All_Active_Barricade_Meshes, CallFunc_Add_IntInt_ReturnValue_1) == 0x000038, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Get_All_Active_Barricade_Meshes::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Get_All_Active_Barricade_Meshes, CallFunc_Get_All_Barricade_Meshes_ReturnValue) == 0x000040, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Get_All_Active_Barricade_Meshes::CallFunc_Get_All_Barricade_Meshes_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Get_All_Active_Barricade_Meshes, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Get_All_Active_Barricade_Meshes::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Get_All_Active_Barricade_Meshes, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Get_All_Active_Barricade_Meshes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Get_All_Active_Barricade_Meshes, CallFunc_Array_Add_ReturnValue) == 0x00005C, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Get_All_Active_Barricade_Meshes::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Get_All_Active_Barricade_Meshes, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Get_All_Active_Barricade_Meshes::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Get_All_Active_Barricade_Meshes, CallFunc_Array_Get_Item_1) == 0x000064, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Get_All_Active_Barricade_Meshes::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Get_All_Active_Barricade_Meshes, CallFunc_Array_Length_ReturnValue_1) == 0x00006C, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Get_All_Active_Barricade_Meshes::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Get_All_Active_Barricade_Meshes, CallFunc_Map_Find_Value) == 0x000070, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Get_All_Active_Barricade_Meshes::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Get_All_Active_Barricade_Meshes, CallFunc_Map_Find_ReturnValue) == 0x000074, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Get_All_Active_Barricade_Meshes::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Get_All_Active_Barricade_Meshes, CallFunc_Less_IntInt_ReturnValue_1) == 0x000075, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Get_All_Active_Barricade_Meshes::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Get_All_Active_Barricade_Meshes, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000076, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Get_All_Active_Barricade_Meshes::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_ADM_WindowBarringObject_Base_Breakable.BP_ADM_WindowBarringObject_Base_Breakable_C.Get All Barricade Meshes
// 0x0020 (0x0020 - 0x0000)
struct BP_ADM_WindowBarringObject_Base_Breakable_C_Get_All_Barricade_Meshes final
{
public:
	TArray<class UStaticMeshComponent*>           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, ContainsInstancedReference)
	TArray<class UStaticMeshComponent*>           CallFunc_GetComponentsByTag_ReturnValue;           // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_ADM_WindowBarringObject_Base_Breakable_C_Get_All_Barricade_Meshes) == 0x000008, "Wrong alignment on BP_ADM_WindowBarringObject_Base_Breakable_C_Get_All_Barricade_Meshes");
static_assert(sizeof(BP_ADM_WindowBarringObject_Base_Breakable_C_Get_All_Barricade_Meshes) == 0x000020, "Wrong size on BP_ADM_WindowBarringObject_Base_Breakable_C_Get_All_Barricade_Meshes");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Get_All_Barricade_Meshes, ReturnValue) == 0x000000, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Get_All_Barricade_Meshes::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_WindowBarringObject_Base_Breakable_C_Get_All_Barricade_Meshes, CallFunc_GetComponentsByTag_ReturnValue) == 0x000010, "Member 'BP_ADM_WindowBarringObject_Base_Breakable_C_Get_All_Barricade_Meshes::CallFunc_GetComponentsByTag_ReturnValue' has a wrong offset!");

}

