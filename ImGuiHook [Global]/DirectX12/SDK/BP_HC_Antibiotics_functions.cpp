#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HC_Antibiotics

#include "Basic.hpp"

#include "BP_HC_Antibiotics_classes.hpp"
#include "BP_HC_Antibiotics_parameters.hpp"


namespace SDK
{

// Function BP_HC_Antibiotics.BP_HC_Antibiotics_C.ExpectedHealing
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   TimerDelay                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UHealthComponent*                 HealthComponent                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ExpHeal                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HC_Antibiotics_C::ExpectedHealing(float TimerDelay, class UHealthComponent* HealthComponent, float DeltaTime, float* ExpHeal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HC_Antibiotics_C", "ExpectedHealing");

	Params::BP_HC_Antibiotics_C_ExpectedHealing Parms{};

	Parms.TimerDelay = TimerDelay;
	Parms.HealthComponent = HealthComponent;
	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);

	if (ExpHeal != nullptr)
		*ExpHeal = Parms.ExpHeal;
}


// Function BP_HC_Antibiotics.BP_HC_Antibiotics_C.ApplyHealToComponent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_HealingComponent_C*           HealingComponent                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HC_Antibiotics_C::ApplyHealToComponent(class UBP_HealingComponent_C* HealingComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HC_Antibiotics_C", "ApplyHealToComponent");

	Params::BP_HC_Antibiotics_C_ApplyHealToComponent Parms{};

	Parms.HealingComponent = HealingComponent;

	UObject::ProcessEvent(Func, &Parms);
}

}

