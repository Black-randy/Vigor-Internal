#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: S_SocketNamedParameterArray

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// UserDefinedStruct S_SocketNamedParameterArray.S_SocketNamedParameterArray
// 0x0028 (0x0028 - 0x0000)
struct FS_SocketNamedParameterArray final
{
public:
	class FName                                   UsedSocketName_34_D216FAA84B18514B17AD58AA27756272; // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FParticleSysParam>              ParticleTriggerToParticleSystem_29_104D275548FE1B29A6A44696D1DC73B9; // 0x0008(0x0010)(Edit, BlueprintVisible)
	struct FVector                                BlendInTimeMinusMinusActiveTimeMinusMinusBlendOutTime_37_6817B6064FD5BF49FE1DBE9C2CE8C508; // 0x0018(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FS_SocketNamedParameterArray) == 0x000008, "Wrong alignment on FS_SocketNamedParameterArray");
static_assert(sizeof(FS_SocketNamedParameterArray) == 0x000028, "Wrong size on FS_SocketNamedParameterArray");
static_assert(offsetof(FS_SocketNamedParameterArray, UsedSocketName_34_D216FAA84B18514B17AD58AA27756272) == 0x000000, "Member 'FS_SocketNamedParameterArray::UsedSocketName_34_D216FAA84B18514B17AD58AA27756272' has a wrong offset!");
static_assert(offsetof(FS_SocketNamedParameterArray, ParticleTriggerToParticleSystem_29_104D275548FE1B29A6A44696D1DC73B9) == 0x000008, "Member 'FS_SocketNamedParameterArray::ParticleTriggerToParticleSystem_29_104D275548FE1B29A6A44696D1DC73B9' has a wrong offset!");
static_assert(offsetof(FS_SocketNamedParameterArray, BlendInTimeMinusMinusActiveTimeMinusMinusBlendOutTime_37_6817B6064FD5BF49FE1DBE9C2CE8C508) == 0x000018, "Member 'FS_SocketNamedParameterArray::BlendInTimeMinusMinusActiveTimeMinusMinusBlendOutTime_37_6817B6064FD5BF49FE1DBE9C2CE8C508' has a wrong offset!");

}

