#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MusicTrack

#include "Basic.hpp"

#include "Flame_structs.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_MusicTrack.BP_MusicTrack_C
// 0x00A8 (0x00D0 - 0x0028)
class UBP_MusicTrack_C final : public UObject
{
public:
	struct FMusicTrackRow                         TrackInfo;                                         // 0x0028(0x0088)(Edit, BlueprintVisible, ExposeOnSpawn)
	bool                                          Unlocked;                                          // 0x00B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	ESublevelTheme                                Holiday_theme_music;                               // 0x00B1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          IsDefaultTrack;                                    // 0x00B2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          VisibleWhenLocked;                                 // 0x00B3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	class FName                                   DT_Row_Name;                                       // 0x00B4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         StartTime;                                         // 0x00BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PauseTime;                                         // 0x00C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         UnPauseTime;                                       // 0x00C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bWasInterrupted;                                   // 0x00C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bIsBlacklisted;                                    // 0x00C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)

public:
	void ResetVariables();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MusicTrack_C">();
	}
	static class UBP_MusicTrack_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_MusicTrack_C>();
	}
};
static_assert(alignof(UBP_MusicTrack_C) == 0x000008, "Wrong alignment on UBP_MusicTrack_C");
static_assert(sizeof(UBP_MusicTrack_C) == 0x0000D0, "Wrong size on UBP_MusicTrack_C");
static_assert(offsetof(UBP_MusicTrack_C, TrackInfo) == 0x000028, "Member 'UBP_MusicTrack_C::TrackInfo' has a wrong offset!");
static_assert(offsetof(UBP_MusicTrack_C, Unlocked) == 0x0000B0, "Member 'UBP_MusicTrack_C::Unlocked' has a wrong offset!");
static_assert(offsetof(UBP_MusicTrack_C, Holiday_theme_music) == 0x0000B1, "Member 'UBP_MusicTrack_C::Holiday_theme_music' has a wrong offset!");
static_assert(offsetof(UBP_MusicTrack_C, IsDefaultTrack) == 0x0000B2, "Member 'UBP_MusicTrack_C::IsDefaultTrack' has a wrong offset!");
static_assert(offsetof(UBP_MusicTrack_C, VisibleWhenLocked) == 0x0000B3, "Member 'UBP_MusicTrack_C::VisibleWhenLocked' has a wrong offset!");
static_assert(offsetof(UBP_MusicTrack_C, DT_Row_Name) == 0x0000B4, "Member 'UBP_MusicTrack_C::DT_Row_Name' has a wrong offset!");
static_assert(offsetof(UBP_MusicTrack_C, StartTime) == 0x0000BC, "Member 'UBP_MusicTrack_C::StartTime' has a wrong offset!");
static_assert(offsetof(UBP_MusicTrack_C, PauseTime) == 0x0000C0, "Member 'UBP_MusicTrack_C::PauseTime' has a wrong offset!");
static_assert(offsetof(UBP_MusicTrack_C, UnPauseTime) == 0x0000C4, "Member 'UBP_MusicTrack_C::UnPauseTime' has a wrong offset!");
static_assert(offsetof(UBP_MusicTrack_C, bWasInterrupted) == 0x0000C8, "Member 'UBP_MusicTrack_C::bWasInterrupted' has a wrong offset!");
static_assert(offsetof(UBP_MusicTrack_C, bIsBlacklisted) == 0x0000C9, "Member 'UBP_MusicTrack_C::bIsBlacklisted' has a wrong offset!");

}

