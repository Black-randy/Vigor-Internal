#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_GunFight_KickTeamkiller

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function UI_GunFight_KickTeamkiller.UI_GunFight_KickTeamkiller_C.ExecuteUbergraph_UI_GunFight_KickTeamkiller
// 0x0038 (0x0038 - 0x0000)
struct UI_GunFight_KickTeamkiller_C_ExecuteUbergraph_UI_GunFight_KickTeamkiller final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_Script_C*          K2Node_DynamicCast_AsBP_Player_Controller_Script;  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x001C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GunFight_KickTeamkiller_C_ExecuteUbergraph_UI_GunFight_KickTeamkiller) == 0x000008, "Wrong alignment on UI_GunFight_KickTeamkiller_C_ExecuteUbergraph_UI_GunFight_KickTeamkiller");
static_assert(sizeof(UI_GunFight_KickTeamkiller_C_ExecuteUbergraph_UI_GunFight_KickTeamkiller) == 0x000038, "Wrong size on UI_GunFight_KickTeamkiller_C_ExecuteUbergraph_UI_GunFight_KickTeamkiller");
static_assert(offsetof(UI_GunFight_KickTeamkiller_C_ExecuteUbergraph_UI_GunFight_KickTeamkiller, EntryPoint) == 0x000000, "Member 'UI_GunFight_KickTeamkiller_C_ExecuteUbergraph_UI_GunFight_KickTeamkiller::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_GunFight_KickTeamkiller_C_ExecuteUbergraph_UI_GunFight_KickTeamkiller, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'UI_GunFight_KickTeamkiller_C_ExecuteUbergraph_UI_GunFight_KickTeamkiller::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GunFight_KickTeamkiller_C_ExecuteUbergraph_UI_GunFight_KickTeamkiller, K2Node_DynamicCast_AsBP_Player_Controller_Script) == 0x000010, "Member 'UI_GunFight_KickTeamkiller_C_ExecuteUbergraph_UI_GunFight_KickTeamkiller::K2Node_DynamicCast_AsBP_Player_Controller_Script' has a wrong offset!");
static_assert(offsetof(UI_GunFight_KickTeamkiller_C_ExecuteUbergraph_UI_GunFight_KickTeamkiller, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'UI_GunFight_KickTeamkiller_C_ExecuteUbergraph_UI_GunFight_KickTeamkiller::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_GunFight_KickTeamkiller_C_ExecuteUbergraph_UI_GunFight_KickTeamkiller, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'UI_GunFight_KickTeamkiller_C_ExecuteUbergraph_UI_GunFight_KickTeamkiller::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UI_GunFight_KickTeamkiller_C_ExecuteUbergraph_UI_GunFight_KickTeamkiller, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000030, "Member 'UI_GunFight_KickTeamkiller_C_ExecuteUbergraph_UI_GunFight_KickTeamkiller::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

}

