#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GMComponent_ADM_PlayerBounty

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_GMComponent_ADM_Event_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_GMComponent_ADM_PlayerBounty.BP_GMComponent_ADM_PlayerBounty_C
// 0x0018 (0x01F0 - 0x01D8)
class UBP_GMComponent_ADM_PlayerBounty_C final : public UBP_GMComponent_ADM_Event_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_GMComponent_ADM_PlayerBounty_C;  // 0x01D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	int32                                         Kill_Threshold_for_Bounty;                         // 0x01E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E4[0x4];                                      // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PCComponent_ADM_PlayerBounty_C*     Killer;                                            // 0x01E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_GMComponent_ADM_PlayerBounty(int32 EntryPoint);
	void Add_Threat_To_Every_Player();
	void PlayerExited();
	void Player_Died(class UBP_PCComponent_ADM_PlayerBounty_C* Victim, class ABP_PlayerController_Script_C* Killer_0);
	void BlinkImpulse_ForEachThreatController();
	void Player_Scored_a_Kill(class UBP_PCComponent_ADM_PlayerBounty_C* Killer_0, class ABP_PlayerController_Script_C* Victim);
	void Initialize_Component();
	bool IsInSameTeam(class APlayerState* State1, class APlayerState* State2);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_GMComponent_ADM_PlayerBounty_C">();
	}
	static class UBP_GMComponent_ADM_PlayerBounty_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_GMComponent_ADM_PlayerBounty_C>();
	}
};
static_assert(alignof(UBP_GMComponent_ADM_PlayerBounty_C) == 0x000008, "Wrong alignment on UBP_GMComponent_ADM_PlayerBounty_C");
static_assert(sizeof(UBP_GMComponent_ADM_PlayerBounty_C) == 0x0001F0, "Wrong size on UBP_GMComponent_ADM_PlayerBounty_C");
static_assert(offsetof(UBP_GMComponent_ADM_PlayerBounty_C, UberGraphFrame_BP_GMComponent_ADM_PlayerBounty_C) == 0x0001D8, "Member 'UBP_GMComponent_ADM_PlayerBounty_C::UberGraphFrame_BP_GMComponent_ADM_PlayerBounty_C' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_PlayerBounty_C, Kill_Threshold_for_Bounty) == 0x0001E0, "Member 'UBP_GMComponent_ADM_PlayerBounty_C::Kill_Threshold_for_Bounty' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_PlayerBounty_C, Killer) == 0x0001E8, "Member 'UBP_GMComponent_ADM_PlayerBounty_C::Killer' has a wrong offset!");

}

