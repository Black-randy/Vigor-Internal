#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TC_MortarStrike_Object

#include "Basic.hpp"

#include "BP_TC_MortarStrike_Object_classes.hpp"
#include "BP_TC_MortarStrike_Object_parameters.hpp"


namespace SDK
{

// Function BP_TC_MortarStrike_Object.BP_TC_MortarStrike_Object_C.ExecuteUbergraph_BP_TC_MortarStrike_Object
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TC_MortarStrike_Object_C::ExecuteUbergraph_BP_TC_MortarStrike_Object(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TC_MortarStrike_Object_C", "ExecuteUbergraph_BP_TC_MortarStrike_Object");

	Params::BP_TC_MortarStrike_Object_C_ExecuteUbergraph_BP_TC_MortarStrike_Object Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TC_MortarStrike_Object.BP_TC_MortarStrike_Object_C.Fire Mortar Shell
// (BlueprintCallable, BlueprintEvent)

void ABP_TC_MortarStrike_Object_C::Fire_Mortar_Shell()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TC_MortarStrike_Object_C", "Fire Mortar Shell");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TC_MortarStrike_Object.BP_TC_MortarStrike_Object_C.Set up variables from item
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Explosion_Damage_0                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Explosion_Radius_0                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        Mortar_Delay_Between_Explosions                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Mortar_Max_Range                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Mortar_Shells_Left                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TSoftObjectPtr<class USoundBase>        Explosion_Sound                                        (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_TC_MortarStrike_Object_C::Set_up_variables_from_item(float Explosion_Damage_0, float Explosion_Radius_0, const struct FVector2D& Mortar_Delay_Between_Explosions, float Mortar_Max_Range, int32 Mortar_Shells_Left, TSoftObjectPtr<class USoundBase> Explosion_Sound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TC_MortarStrike_Object_C", "Set up variables from item");

	Params::BP_TC_MortarStrike_Object_C_Set_up_variables_from_item Parms{};

	Parms.Explosion_Damage_0 = Explosion_Damage_0;
	Parms.Explosion_Radius_0 = Explosion_Radius_0;
	Parms.Mortar_Delay_Between_Explosions = std::move(Mortar_Delay_Between_Explosions);
	Parms.Mortar_Max_Range = Mortar_Max_Range;
	Parms.Mortar_Shells_Left = Mortar_Shells_Left;
	Parms.Explosion_Sound = Explosion_Sound;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TC_MortarStrike_Object.BP_TC_MortarStrike_Object_C.Get Explosion Location
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TC_MortarStrike_Object_C::Get_Explosion_Location(bool* Success, struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TC_MortarStrike_Object_C", "Get Explosion Location");

	Params::BP_TC_MortarStrike_Object_C_Get_Explosion_Location Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function BP_TC_MortarStrike_Object.BP_TC_MortarStrike_Object_C.Get Hit Actors
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TC_MortarStrike_Object_C::Get_Hit_Actors(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TC_MortarStrike_Object_C", "Get Hit Actors");

	Params::BP_TC_MortarStrike_Object_C_Get_Hit_Actors Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TC_MortarStrike_Object.BP_TC_MortarStrike_Object_C.Trap_Despawn
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_TC_MortarStrike_Object_C::Trap_Despawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TC_MortarStrike_Object_C", "Trap_Despawn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TC_MortarStrike_Object.BP_TC_MortarStrike_Object_C.Trap_GotHit
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AController*                      PlayerControllerThatHitTheTrap                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Delayed_Trigger                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_TC_MortarStrike_Object_C::Trap_GotHit(float Damage, class AController* PlayerControllerThatHitTheTrap, bool Delayed_Trigger)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TC_MortarStrike_Object_C", "Trap_GotHit");

	Params::BP_TC_MortarStrike_Object_C_Trap_GotHit Parms{};

	Parms.Damage = Damage;
	Parms.PlayerControllerThatHitTheTrap = PlayerControllerThatHitTheTrap;
	Parms.Delayed_Trigger = Delayed_Trigger;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TC_MortarStrike_Object.BP_TC_MortarStrike_Object_C.Trap_Phase_Activated
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TC_MortarStrike_Object_C::Trap_Phase_Activated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TC_MortarStrike_Object_C", "Trap_Phase_Activated");

	UObject::ProcessEvent(Func, nullptr);
}

}

