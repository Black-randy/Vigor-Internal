#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerState

#include "Basic.hpp"

#include "BP_PlayerState_classes.hpp"
#include "BP_PlayerState_parameters.hpp"


namespace SDK
{

// Function BP_PlayerState.BP_PlayerState_C.Title Slots Loaded__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_PlayerState_C::Title_Slots_Loaded__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "Title Slots Loaded__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerState.BP_PlayerState_C.Title Badges Loaded__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_PlayerState_C::Title_Badges_Loaded__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "Title Badges Loaded__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerState.BP_PlayerState_C.Titles Loaded__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_PlayerState_C::Titles_Loaded__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "Titles Loaded__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerState.BP_PlayerState_C.OwningCharacterReplicated__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PlayerState_C*                PlayerState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerState_C::OwningCharacterReplicated__DelegateSignature(class ABP_PlayerState_C* PlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "OwningCharacterReplicated__DelegateSignature");

	Params::BP_PlayerState_C_OwningCharacterReplicated__DelegateSignature Parms{};

	Parms.PlayerState = PlayerState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerState.BP_PlayerState_C.ExecuteUbergraph_BP_PlayerState
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerState_C::ExecuteUbergraph_BP_PlayerState(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "ExecuteUbergraph_BP_PlayerState");

	Params::BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerState.BP_PlayerState_C.LoadTrackedResources
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerState_C::LoadTrackedResources()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "LoadTrackedResources");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerState.BP_PlayerState_C.StartTrackedResources
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           ShelterSlot                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AHumanPlayerController*           HumanPlayerController                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerState_C::StartTrackedResources(class UClass* ShelterSlot, class AHumanPlayerController* HumanPlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "StartTrackedResources");

	Params::BP_PlayerState_C_StartTrackedResources Parms{};

	Parms.ShelterSlot = ShelterSlot;
	Parms.HumanPlayerController = HumanPlayerController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerState.BP_PlayerState_C.PRIVATE_RepNotifyOwnedBoosters
// (Net, NetReliable, NetMulticast, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<int32>                           OwnedBoosters_0                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_PlayerState_C::PRIVATE_RepNotifyOwnedBoosters(const TArray<int32>& OwnedBoosters_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "PRIVATE_RepNotifyOwnedBoosters");

	Params::BP_PlayerState_C_PRIVATE_RepNotifyOwnedBoosters Parms{};

	Parms.OwnedBoosters_0 = std::move(OwnedBoosters_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerState.BP_PlayerState_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerState_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "ReceiveTick");

	Params::BP_PlayerState_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerState.BP_PlayerState_C.Download Player Title Counters
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Userid                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_PlayerState_C::Download_Player_Title_Counters(const class FString& Userid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "Download Player Title Counters");

	Params::BP_PlayerState_C_Download_Player_Title_Counters Parms{};

	Parms.Userid = std::move(Userid);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerState.BP_PlayerState_C.Load Title Badges
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerState_C::Load_Title_Badges()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "Load Title Badges");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerState.BP_PlayerState_C.Player Title Received
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FCloudRequestResult              RequestResult                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class AHumanPlayerController*           Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FCloudUserCounterValue           CounterValue                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void ABP_PlayerState_C::Player_Title_Received(const struct FCloudRequestResult& RequestResult, class AHumanPlayerController* Player, const struct FCloudUserCounterValue& CounterValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "Player Title Received");

	Params::BP_PlayerState_C_Player_Title_Received Parms{};

	Parms.RequestResult = std::move(RequestResult);
	Parms.Player = Player;
	Parms.CounterValue = std::move(CounterValue);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerState.BP_PlayerState_C.On Cloud Stash Inventory Loaded
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AStash*                           Sender                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UStashComponent*                  Inventory                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerState_C::On_Cloud_Stash_Inventory_Loaded(class AStash* Sender, class UStashComponent* Inventory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "On Cloud Stash Inventory Loaded");

	Params::BP_PlayerState_C_On_Cloud_Stash_Inventory_Loaded Parms{};

	Parms.Sender = Sender;
	Parms.Inventory = Inventory;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerState.BP_PlayerState_C.On Cloud Wardrobe Loaded
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UShelterCustomizationComponent*   Wardrobe                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerState_C::On_Cloud_Wardrobe_Loaded(class UShelterCustomizationComponent* Wardrobe)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "On Cloud Wardrobe Loaded");

	Params::BP_PlayerState_C_On_Cloud_Wardrobe_Loaded Parms{};

	Parms.Wardrobe = Wardrobe;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerState.BP_PlayerState_C.On Cloud Shelter Improvements Loaded
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerState_C::On_Cloud_Shelter_Improvements_Loaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "On Cloud Shelter Improvements Loaded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerState.BP_PlayerState_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_PlayerState_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerState.BP_PlayerState_C.Player triggered multi hit grenade component
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Amount_of_nonMinusfriendly_hits                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           Grenade_class                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerState_C::Player_triggered_multi_hit_grenade_component(int32 Amount_of_nonMinusfriendly_hits, class UClass* Grenade_class)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "Player triggered multi hit grenade component");

	Params::BP_PlayerState_C_Player_triggered_multi_hit_grenade_component Parms{};

	Parms.Amount_of_nonMinusfriendly_hits = Amount_of_nonMinusfriendly_hits;
	Parms.Grenade_class = Grenade_class;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerState.BP_PlayerState_C.Player triggered grenade hit component
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Target_that_got_hit                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           Grenade_class                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerState_C::Player_triggered_grenade_hit_component(class AActor* Target_that_got_hit, class UClass* Grenade_class)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "Player triggered grenade hit component");

	Params::BP_PlayerState_C_Player_triggered_grenade_hit_component Parms{};

	Parms.Target_that_got_hit = Target_that_got_hit;
	Parms.Grenade_class = Grenade_class;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerState.BP_PlayerState_C.OnLoadSucceed_DC924D44428C3959F043209199139366
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class USaveGame*                        SaveGame                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerState_C::OnLoadSucceed_DC924D44428C3959F043209199139366(class USaveGame* SaveGame)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "OnLoadSucceed_DC924D44428C3959F043209199139366");

	Params::BP_PlayerState_C_OnLoadSucceed_DC924D44428C3959F043209199139366 Parms{};

	Parms.SaveGame = SaveGame;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerState.BP_PlayerState_C.OnLoadFailed_DC924D44428C3959F043209199139366
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class USaveGame*                        SaveGame                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerState_C::OnLoadFailed_DC924D44428C3959F043209199139366(class USaveGame* SaveGame)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "OnLoadFailed_DC924D44428C3959F043209199139366");

	Params::BP_PlayerState_C_OnLoadFailed_DC924D44428C3959F043209199139366 Parms{};

	Parms.SaveGame = SaveGame;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerState.BP_PlayerState_C.OnSaveSucceed_87E82E1947ED2FD3ABC463BB9DC8F1F5
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           SlotName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   UserIndex                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerState_C::OnSaveSucceed_87E82E1947ED2FD3ABC463BB9DC8F1F5(const class FString& SlotName, const int32 UserIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "OnSaveSucceed_87E82E1947ED2FD3ABC463BB9DC8F1F5");

	Params::BP_PlayerState_C_OnSaveSucceed_87E82E1947ED2FD3ABC463BB9DC8F1F5 Parms{};

	Parms.SlotName = std::move(SlotName);
	Parms.UserIndex = UserIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerState.BP_PlayerState_C.OnSaveFailed_87E82E1947ED2FD3ABC463BB9DC8F1F5
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           SlotName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   UserIndex                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerState_C::OnSaveFailed_87E82E1947ED2FD3ABC463BB9DC8F1F5(const class FString& SlotName, const int32 UserIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "OnSaveFailed_87E82E1947ED2FD3ABC463BB9DC8F1F5");

	Params::BP_PlayerState_C_OnSaveFailed_87E82E1947ED2FD3ABC463BB9DC8F1F5 Parms{};

	Parms.SlotName = std::move(SlotName);
	Parms.UserIndex = UserIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerState.BP_PlayerState_C.OnLoaded_303A9E7341428F48F05BE78A0F43A6DF
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerState_C::OnLoaded_303A9E7341428F48F05BE78A0F43A6DF(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "OnLoaded_303A9E7341428F48F05BE78A0F43A6DF");

	Params::BP_PlayerState_C_OnLoaded_303A9E7341428F48F05BE78A0F43A6DF Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerState.BP_PlayerState_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_PlayerState_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerState.BP_PlayerState_C.FindTeammates
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ABP_PlayerState_C*>        TeammatesPlayerStates                                  (Parm, OutParm)

void ABP_PlayerState_C::FindTeammates(TArray<class ABP_PlayerState_C*>* TeammatesPlayerStates)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "FindTeammates");

	Params::BP_PlayerState_C_FindTeammates Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TeammatesPlayerStates != nullptr)
		*TeammatesPlayerStates = std::move(Parms.TeammatesPlayerStates);
}


// Function BP_PlayerState.BP_PlayerState_C.IsInGroup
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_PlayerState_C::IsInGroup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "IsInGroup");

	Params::BP_PlayerState_C_IsInGroup Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PlayerState.BP_PlayerState_C.IsInTheSameGroup
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerState*                     PlayerState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_PlayerState_C::IsInTheSameGroup(class APlayerState* PlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "IsInTheSameGroup");

	Params::BP_PlayerState_C_IsInTheSameGroup Parms{};

	Parms.PlayerState = PlayerState;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PlayerState.BP_PlayerState_C.GetOrderInGroup
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerState_C::GetOrderInGroup(int32* Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "GetOrderInGroup");

	Params::BP_PlayerState_C_GetOrderInGroup Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Index_0 != nullptr)
		*Index_0 = Parms.Index_0;
}


// Function BP_PlayerState.BP_PlayerState_C.SortPlayerStates
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          ObjectA                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          ObjectB                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PlayerState_C::SortPlayerStates(class UObject* ObjectA, class UObject* ObjectB, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "SortPlayerStates");

	Params::BP_PlayerState_C_SortPlayerStates Parms{};

	Parms.ObjectA = ObjectA;
	Parms.ObjectB = ObjectB;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PlayerState.BP_PlayerState_C.UpdateTrackedResources
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHumanPlayerController*           Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerState_C::UpdateTrackedResources(class AHumanPlayerController* Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "UpdateTrackedResources");

	Params::BP_PlayerState_C_UpdateTrackedResources Parms{};

	Parms.Controller = Controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerState.BP_PlayerState_C.StopTrackedResources
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_PlayerState_C::StopTrackedResources()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "StopTrackedResources");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerState.BP_PlayerState_C.GetTrackedResourcesStatus
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UClass*                           ShelterSlot                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TMap<class UClass*, int32>              NeededResources                                        (Parm, OutParm)
// TMap<class UClass*, int32>              OwnedResources                                         (Parm, OutParm)

void ABP_PlayerState_C::GetTrackedResourcesStatus(bool* IsValid, class UClass** ShelterSlot, TMap<class UClass*, int32>* NeededResources, TMap<class UClass*, int32>* OwnedResources)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "GetTrackedResourcesStatus");

	Params::BP_PlayerState_C_GetTrackedResourcesStatus Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	if (ShelterSlot != nullptr)
		*ShelterSlot = Parms.ShelterSlot;

	if (NeededResources != nullptr)
		*NeededResources = std::move(Parms.NeededResources);

	if (OwnedResources != nullptr)
		*OwnedResources = std::move(Parms.OwnedResources);
}


// Function BP_PlayerState.BP_PlayerState_C.OnRep_Title Slot Content
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerState_C::OnRep_Title_Slot_Content()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "OnRep_Title Slot Content");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerState.BP_PlayerState_C.Are Titles Loaded
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Titles_Loaded_0                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PlayerState_C::Are_Titles_Loaded(bool* Titles_Loaded_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "Are Titles Loaded");

	Params::BP_PlayerState_C_Are_Titles_Loaded Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Titles_Loaded_0 != nullptr)
		*Titles_Loaded_0 = Parms.Titles_Loaded_0;
}


// Function BP_PlayerState.BP_PlayerState_C.Get Title Slots
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TMap<class FName, int32>                Title_Slots                                            (Parm, OutParm)

void ABP_PlayerState_C::Get_Title_Slots(TMap<class FName, int32>* Title_Slots)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "Get Title Slots");

	Params::BP_PlayerState_C_Get_Title_Slots Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Title_Slots != nullptr)
		*Title_Slots = std::move(Parms.Title_Slots);
}


// Function BP_PlayerState.BP_PlayerState_C.Set Title to Slot
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Slot_Name                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Title_ID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Rank_Index                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PlayerState_C::Set_Title_to_Slot(class FName Slot_Name, int32 Title_ID, int32 Rank_Index, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "Set Title to Slot");

	Params::BP_PlayerState_C_Set_Title_to_Slot Parms{};

	Parms.Slot_Name = Slot_Name;
	Parms.Title_ID = Title_ID;
	Parms.Rank_Index = Rank_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_PlayerState.BP_PlayerState_C.Break Cloud Title ID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Cloud_Title_ID                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Title_ID                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Rank_Index                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerState_C::Break_Cloud_Title_ID(int32 Cloud_Title_ID, int32* Title_ID, int32* Rank_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "Break Cloud Title ID");

	Params::BP_PlayerState_C_Break_Cloud_Title_ID Parms{};

	Parms.Cloud_Title_ID = Cloud_Title_ID;

	UObject::ProcessEvent(Func, &Parms);

	if (Title_ID != nullptr)
		*Title_ID = Parms.Title_ID;

	if (Rank_Index != nullptr)
		*Rank_Index = Parms.Rank_Index;
}


// Function BP_PlayerState.BP_PlayerState_C.Make Cloud Title ID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Title_ID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Rank_Index                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Cloud_Title_ID                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerState_C::Make_Cloud_Title_ID(int32 Title_ID, int32 Rank_Index, int32* Cloud_Title_ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "Make Cloud Title ID");

	Params::BP_PlayerState_C_Make_Cloud_Title_ID Parms{};

	Parms.Title_ID = Title_ID;
	Parms.Rank_Index = Rank_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (Cloud_Title_ID != nullptr)
		*Cloud_Title_ID = Parms.Cloud_Title_ID;
}


// Function BP_PlayerState.BP_PlayerState_C.Title Slots Loading Finished
// (Protected, BlueprintCallable, BlueprintEvent)

void ABP_PlayerState_C::Title_Slots_Loading_Finished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "Title Slots Loading Finished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerState.BP_PlayerState_C.Titles Loading Finished
// (Protected, BlueprintCallable, BlueprintEvent)

void ABP_PlayerState_C::Titles_Loading_Finished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "Titles Loading Finished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerState.BP_PlayerState_C.Get Table Row Name from Title ID
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Title_ID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Row_Name                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerState_C::Get_Table_Row_Name_from_Title_ID(int32 Title_ID, class FName* Row_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "Get Table Row Name from Title ID");

	Params::BP_PlayerState_C_Get_Table_Row_Name_from_Title_ID Parms{};

	Parms.Title_ID = Title_ID;

	UObject::ProcessEvent(Func, &Parms);

	if (Row_Name != nullptr)
		*Row_Name = Parms.Row_Name;
}


// Function BP_PlayerState.BP_PlayerState_C.Get Titles Status Log
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Log                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void ABP_PlayerState_C::Get_Titles_Status_Log(class FString* Log)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "Get Titles Status Log");

	Params::BP_PlayerState_C_Get_Titles_Status_Log Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Log != nullptr)
		*Log = std::move(Parms.Log);
}


// Function BP_PlayerState.BP_PlayerState_C.Get Rank Info of Titles in Slots
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FF_TitleRank>             Rank_Infos                                             (Parm, OutParm)

void ABP_PlayerState_C::Get_Rank_Info_of_Titles_in_Slots(TArray<struct FF_TitleRank>* Rank_Infos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "Get Rank Info of Titles in Slots");

	Params::BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Rank_Infos != nullptr)
		*Rank_Infos = std::move(Parms.Rank_Infos);
}


// Function BP_PlayerState.BP_PlayerState_C.Get Rank Info from Cloud Title ID
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Cloud_Title_ID                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Valid_Output                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FF_TitleRank                     Rank_Info                                              (Parm, OutParm, HasGetValueTypeHash)

void ABP_PlayerState_C::Get_Rank_Info_from_Cloud_Title_ID(int32 Cloud_Title_ID, bool* Valid_Output, struct FF_TitleRank* Rank_Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "Get Rank Info from Cloud Title ID");

	Params::BP_PlayerState_C_Get_Rank_Info_from_Cloud_Title_ID Parms{};

	Parms.Cloud_Title_ID = Cloud_Title_ID;

	UObject::ProcessEvent(Func, &Parms);

	if (Valid_Output != nullptr)
		*Valid_Output = Parms.Valid_Output;

	if (Rank_Info != nullptr)
		*Rank_Info = std::move(Parms.Rank_Info);
}


// Function BP_PlayerState.BP_PlayerState_C.Make Titles Debug Message
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString                           Custom_Message                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Message                                                (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void ABP_PlayerState_C::Make_Titles_Debug_Message(const class FString& Custom_Message, class FString* Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "Make Titles Debug Message");

	Params::BP_PlayerState_C_Make_Titles_Debug_Message Parms{};

	Parms.Custom_Message = std::move(Custom_Message);

	UObject::ProcessEvent(Func, &Parms);

	if (Message != nullptr)
		*Message = std::move(Parms.Message);
}


// Function BP_PlayerState.BP_PlayerState_C.Print Titles Debug Message
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Custom_Message                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_PlayerState_C::Print_Titles_Debug_Message(const class FString& Custom_Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "Print Titles Debug Message");

	Params::BP_PlayerState_C_Print_Titles_Debug_Message Parms{};

	Parms.Custom_Message = std::move(Custom_Message);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerState.BP_PlayerState_C.Check Badge Validity
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_PlayerState_C::Check_Badge_Validity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "Check Badge Validity");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerState.BP_PlayerState_C.OnRep_OwningCharacter
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerState_C::OnRep_OwningCharacter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "OnRep_OwningCharacter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerState.BP_PlayerState_C.LockBoosters
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TMap<EBooster, int32>                   Boosters                                               (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_PlayerState_C::LockBoosters(const TMap<EBooster, int32>& Boosters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "LockBoosters");

	Params::BP_PlayerState_C_LockBoosters Parms{};

	Parms.Boosters = std::move(Boosters);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerState.BP_PlayerState_C.SetHasBooster
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EBooster                                Booster                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Amount                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerState_C::SetHasBooster(EBooster Booster, int32 Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "SetHasBooster");

	Params::BP_PlayerState_C_SetHasBooster Parms{};

	Parms.Booster = Booster;
	Parms.Amount = Amount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerState.BP_PlayerState_C.Set Last Death Killer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHumanCharacter*                  Killer_Human_Character                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerState_C::Set_Last_Death_Killer(class AHumanCharacter* Killer_Human_Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "Set Last Death Killer");

	Params::BP_PlayerState_C_Set_Last_Death_Killer Parms{};

	Parms.Killer_Human_Character = Killer_Human_Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerState.BP_PlayerState_C.Get Killer Match Player Info
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FS_MatchPlayerInfo               Match_Player_Info                                      (Parm, OutParm, HasGetValueTypeHash)

void ABP_PlayerState_C::Get_Killer_Match_Player_Info(bool* Success, struct FS_MatchPlayerInfo* Match_Player_Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "Get Killer Match Player Info");

	Params::BP_PlayerState_C_Get_Killer_Match_Player_Info Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;

	if (Match_Player_Info != nullptr)
		*Match_Player_Info = std::move(Parms.Match_Player_Info);
}


// Function BP_PlayerState.BP_PlayerState_C.PlayerResult_Analytics_AttachRelevantData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      JsonObject                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      JsonObjectOut                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerState_C::PlayerResult_Analytics_AttachRelevantData(class UJsonObject* JsonObject, class UJsonObject** JsonObjectOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "PlayerResult_Analytics_AttachRelevantData");

	Params::BP_PlayerState_C_PlayerResult_Analytics_AttachRelevantData Parms{};

	Parms.JsonObject = JsonObject;

	UObject::ProcessEvent(Func, &Parms);

	if (JsonObjectOut != nullptr)
		*JsonObjectOut = Parms.JsonObjectOut;
}


// Function BP_PlayerState.BP_PlayerState_C.GetBoosterCount
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// EBooster                                Booster                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Count                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerState_C::GetBoosterCount(EBooster Booster, int32* Count) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "GetBoosterCount");

	Params::BP_PlayerState_C_GetBoosterCount Parms{};

	Parms.Booster = Booster;

	UObject::ProcessEvent(Func, &Parms);

	if (Count != nullptr)
		*Count = Parms.Count;
}


// Function BP_PlayerState.BP_PlayerState_C.HasBoosterInsurance
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_PlayerState_C::HasBoosterInsurance() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "HasBoosterInsurance");

	Params::BP_PlayerState_C_HasBoosterInsurance Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PlayerState.BP_PlayerState_C.HasBoosterCrate
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_PlayerState_C::HasBoosterCrate() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "HasBoosterCrate");

	Params::BP_PlayerState_C_HasBoosterCrate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PlayerState.BP_PlayerState_C.HasBoosterLoot
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_PlayerState_C::HasBoosterLoot() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "HasBoosterLoot");

	Params::BP_PlayerState_C_HasBoosterLoot Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PlayerState.BP_PlayerState_C.GetReadyInLobby
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    IsReadyInLobby_0                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PlayerState_C::GetReadyInLobby(bool* IsReadyInLobby_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "GetReadyInLobby");

	Params::BP_PlayerState_C_GetReadyInLobby Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsReadyInLobby_0 != nullptr)
		*IsReadyInLobby_0 = Parms.IsReadyInLobby_0;
}

}

