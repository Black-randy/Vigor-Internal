#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TC_MortarStrike

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_PlacableTrap_Base_classes.hpp"
#include "PhysicsCore_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_TC_MortarStrike.BP_TC_MortarStrike_C
// 0x0040 (0x0730 - 0x06F0)
class ABP_TC_MortarStrike_C final : public ABP_PlacableTrap_Base_C
{
public:
	uint8                                         Pad_6E1[0x7];                                      // 0x06E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_TC_MortarStrike_C;               // 0x06E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         Explosion_Radius;                                  // 0x06F0(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Explosion_Damage;                                  // 0x06F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Delay_Between_Explosions_MinMax;                   // 0x06F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Mortar_Area_Range;                                 // 0x0700(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Mortar_Shell_Count;                                // 0x0704(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class USoundBase>              Sound_Explosion;                                   // 0x0708(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_TC_MortarStrike(int32 EntryPoint);
	void ShowHologram();
	void Play_Activation_Sound();
	void Trap_Object_Spawn(class APlayerController* PlayerController);
	void Trap_Set_Variables(class ABP_PlacableTrap_Object_Base_C* PlacedTrap);
	void Trap_Placement_CanBePlaced(const struct FHitResult& Hit, float MaxZNormal, TArray<TSoftClassPtr<class UClass>>& ActorsThatBlocksThePlacement, TArray<EPhysicalSurface>& SurfacesThatBlocksThePlacement, bool Trap_CanBePlacedInWater, bool Trap_CanBePlacedVertically, bool* CanBePlaced);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_TC_MortarStrike_C">();
	}
	static class ABP_TC_MortarStrike_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_TC_MortarStrike_C>();
	}
};
static_assert(alignof(ABP_TC_MortarStrike_C) == 0x000010, "Wrong alignment on ABP_TC_MortarStrike_C");
static_assert(sizeof(ABP_TC_MortarStrike_C) == 0x000730, "Wrong size on ABP_TC_MortarStrike_C");
static_assert(offsetof(ABP_TC_MortarStrike_C, UberGraphFrame_BP_TC_MortarStrike_C) == 0x0006E8, "Member 'ABP_TC_MortarStrike_C::UberGraphFrame_BP_TC_MortarStrike_C' has a wrong offset!");
static_assert(offsetof(ABP_TC_MortarStrike_C, Explosion_Radius) == 0x0006F0, "Member 'ABP_TC_MortarStrike_C::Explosion_Radius' has a wrong offset!");
static_assert(offsetof(ABP_TC_MortarStrike_C, Explosion_Damage) == 0x0006F4, "Member 'ABP_TC_MortarStrike_C::Explosion_Damage' has a wrong offset!");
static_assert(offsetof(ABP_TC_MortarStrike_C, Delay_Between_Explosions_MinMax) == 0x0006F8, "Member 'ABP_TC_MortarStrike_C::Delay_Between_Explosions_MinMax' has a wrong offset!");
static_assert(offsetof(ABP_TC_MortarStrike_C, Mortar_Area_Range) == 0x000700, "Member 'ABP_TC_MortarStrike_C::Mortar_Area_Range' has a wrong offset!");
static_assert(offsetof(ABP_TC_MortarStrike_C, Mortar_Shell_Count) == 0x000704, "Member 'ABP_TC_MortarStrike_C::Mortar_Shell_Count' has a wrong offset!");
static_assert(offsetof(ABP_TC_MortarStrike_C, Sound_Explosion) == 0x000708, "Member 'ABP_TC_MortarStrike_C::Sound_Explosion' has a wrong offset!");

}

