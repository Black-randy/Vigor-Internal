#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerController_Raid

#include "Basic.hpp"

#include "BP_PlayerController_Raid_classes.hpp"
#include "BP_PlayerController_Raid_parameters.hpp"


namespace SDK
{

// Function BP_PlayerController_Raid.BP_PlayerController_Raid_C.ExecuteUbergraph_BP_PlayerController_Raid
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerController_Raid_C::ExecuteUbergraph_BP_PlayerController_Raid(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_Raid_C", "ExecuteUbergraph_BP_PlayerController_Raid");

	Params::BP_PlayerController_Raid_C_ExecuteUbergraph_BP_PlayerController_Raid Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerController_Raid.BP_PlayerController_Raid_C.Died
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_PlayerController_Raid_C::Died()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_Raid_C", "Died");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerController_Raid.BP_PlayerController_Raid_C.Stop Deserter Countdown
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerController_Raid_C::Stop_Deserter_Countdown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_Raid_C", "Stop Deserter Countdown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerController_Raid.BP_PlayerController_Raid_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_PlayerController_Raid_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_Raid_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerController_Raid.BP_PlayerController_Raid_C.Delete the Player widget
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Character_C*                  Marked_character                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerController_Raid_C::Delete_the_Player_widget(class ABP_Character_C* Marked_character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_Raid_C", "Delete the Player widget");

	Params::BP_PlayerController_Raid_C_Delete_the_Player_widget Parms{};

	Parms.Marked_character = Marked_character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerController_Raid.BP_PlayerController_Raid_C.Create the Player widget
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Character_C*                  Character_to_mark                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerController_Raid_C::Create_the_Player_widget(class ABP_Character_C* Character_to_mark)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_Raid_C", "Create the Player widget");

	Params::BP_PlayerController_Raid_C_Create_the_Player_widget Parms{};

	Parms.Character_to_mark = Character_to_mark;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerController_Raid.BP_PlayerController_Raid_C.Set Invincibility at Possesed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Character_C*                  Possessed_Character                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerController_Raid_C::Set_Invincibility_at_Possesed(class ABP_Character_C* Possessed_Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_Raid_C", "Set Invincibility at Possesed");

	Params::BP_PlayerController_Raid_C_Set_Invincibility_at_Possesed Parms{};

	Parms.Possessed_Character = Possessed_Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerController_Raid.BP_PlayerController_Raid_C.Set Invincibility
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    New_Invincibility                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PlayerController_Raid_C::Set_Invincibility(bool New_Invincibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_Raid_C", "Set Invincibility");

	Params::BP_PlayerController_Raid_C_Set_Invincibility Parms{};

	Parms.New_Invincibility = New_Invincibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerController_Raid.BP_PlayerController_Raid_C.Player Connected Server
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_PlayerController_Raid_C::Player_Connected_Server()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_Raid_C", "Player Connected Server");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerController_Raid.BP_PlayerController_Raid_C.Remove Raid Marker
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Located_Actor                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerController_Raid_C::Remove_Raid_Marker(class AActor* Located_Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_Raid_C", "Remove Raid Marker");

	Params::BP_PlayerController_Raid_C_Remove_Raid_Marker Parms{};

	Parms.Located_Actor = Located_Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerController_Raid.BP_PlayerController_Raid_C.Add Raid Marker
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Located_Actor                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ERaidMapMarker                          MarkerType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerController_Raid_C::Add_Raid_Marker(class AActor* Located_Actor, ERaidMapMarker MarkerType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_Raid_C", "Add Raid Marker");

	Params::BP_PlayerController_Raid_C_Add_Raid_Marker Parms{};

	Parms.Located_Actor = Located_Actor;
	Parms.MarkerType = MarkerType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerController_Raid.BP_PlayerController_Raid_C.Commit Sudoku
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerController_Raid_C::Commit_Sudoku()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_Raid_C", "Commit Sudoku");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerController_Raid.BP_PlayerController_Raid_C.Player Came Back Into Defender Area
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_PlayerController_Raid_C::Player_Came_Back_Into_Defender_Area()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_Raid_C", "Player Came Back Into Defender Area");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerController_Raid.BP_PlayerController_Raid_C.Start Deserter Countdown
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Countdown_Time                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerController_Raid_C::Start_Deserter_Countdown(int32 Countdown_Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_Raid_C", "Start Deserter Countdown");

	Params::BP_PlayerController_Raid_C_Start_Deserter_Countdown Parms{};

	Parms.Countdown_Time = Countdown_Time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerController_Raid.BP_PlayerController_Raid_C.Player Selected Spawn Position On Server
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PlayerStart_Raid_C*           Spawn_Position                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerController_Raid_C::Player_Selected_Spawn_Position_On_Server(class ABP_PlayerStart_Raid_C* Spawn_Position)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_Raid_C", "Player Selected Spawn Position On Server");

	Params::BP_PlayerController_Raid_C_Player_Selected_Spawn_Position_On_Server Parms{};

	Parms.Spawn_Position = Spawn_Position;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerController_Raid.BP_PlayerController_Raid_C.Player Selected Spawn Position
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PlayerStart_Raid_C*           Spawn_Position                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerController_Raid_C::Player_Selected_Spawn_Position(class ABP_PlayerStart_Raid_C* Spawn_Position)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_Raid_C", "Player Selected Spawn Position");

	Params::BP_PlayerController_Raid_C_Player_Selected_Spawn_Position Parms{};

	Parms.Spawn_Position = Spawn_Position;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerController_Raid.BP_PlayerController_Raid_C.Notify Player Statistics Changed
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerController_Raid_C::Notify_Player_Statistics_Changed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_Raid_C", "Notify Player Statistics Changed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerController_Raid.BP_PlayerController_Raid_C.Update Round Start Countdown UI
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Round_Starts_In                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerController_Raid_C::Update_Round_Start_Countdown_UI(int32 Round_Starts_In)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_Raid_C", "Update Round Start Countdown UI");

	Params::BP_PlayerController_Raid_C_Update_Round_Start_Countdown_UI Parms{};

	Parms.Round_Starts_In = Round_Starts_In;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerController_Raid.BP_PlayerController_Raid_C.Set Round Time
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Round_Time                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerController_Raid_C::Set_Round_Time(int32 Round_Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_Raid_C", "Set Round Time");

	Params::BP_PlayerController_Raid_C_Set_Round_Time Parms{};

	Parms.Round_Time = Round_Time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerController_Raid.BP_PlayerController_Raid_C.Start Countdown in Waiting for Match
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerController_Raid_C::Start_Countdown_in_Waiting_for_Match(int32 Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_Raid_C", "Start Countdown in Waiting for Match");

	Params::BP_PlayerController_Raid_C_Start_Countdown_in_Waiting_for_Match Parms{};

	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerController_Raid.BP_PlayerController_Raid_C.Hide Waiting For Match To Start
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerController_Raid_C::Hide_Waiting_For_Match_To_Start()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_Raid_C", "Hide Waiting For Match To Start");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerController_Raid.BP_PlayerController_Raid_C.Show Waiting For Match To Start
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerController_Raid_C::Show_Waiting_For_Match_To_Start()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_Raid_C", "Show Waiting For Match To Start");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerController_Raid.BP_PlayerController_Raid_C.Hide Round Start Countdown UI
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerController_Raid_C::Hide_Round_Start_Countdown_UI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_Raid_C", "Hide Round Start Countdown UI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerController_Raid.BP_PlayerController_Raid_C.Show Round Start Countdown UI
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Round_Starts_In                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerController_Raid_C::Show_Round_Start_Countdown_UI(int32 Round_Starts_In)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_Raid_C", "Show Round Start Countdown UI");

	Params::BP_PlayerController_Raid_C_Show_Round_Start_Countdown_UI Parms{};

	Parms.Round_Starts_In = Round_Starts_In;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerController_Raid.BP_PlayerController_Raid_C.Hide Spawn Position Selection UI
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerController_Raid_C::Hide_Spawn_Position_Selection_UI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_Raid_C", "Hide Spawn Position Selection UI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerController_Raid.BP_PlayerController_Raid_C.Show Spawn Position Selection UI
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerController_Raid_C::Show_Spawn_Position_Selection_UI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_Raid_C", "Show Spawn Position Selection UI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerController_Raid.BP_PlayerController_Raid_C.Update Match Progress
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Attackers_Won_Rounds                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Defenders_Won_Rounds                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerController_Raid_C::Update_Match_Progress(int32 Attackers_Won_Rounds, int32 Defenders_Won_Rounds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_Raid_C", "Update Match Progress");

	Params::BP_PlayerController_Raid_C_Update_Match_Progress Parms{};

	Parms.Attackers_Won_Rounds = Attackers_Won_Rounds;
	Parms.Defenders_Won_Rounds = Defenders_Won_Rounds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerController_Raid.BP_PlayerController_Raid_C.Hide Match Progress UI
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerController_Raid_C::Hide_Match_Progress_UI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_Raid_C", "Hide Match Progress UI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerController_Raid.BP_PlayerController_Raid_C.Show Match Progress UI
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Round_Time                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Attackers_Won_Rounds                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Defenders_Won_Rounds                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerController_Raid_C::Show_Match_Progress_UI(int32 Round_Time, int32 Attackers_Won_Rounds, int32 Defenders_Won_Rounds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_Raid_C", "Show Match Progress UI");

	Params::BP_PlayerController_Raid_C_Show_Match_Progress_UI Parms{};

	Parms.Round_Time = Round_Time;
	Parms.Attackers_Won_Rounds = Attackers_Won_Rounds;
	Parms.Defenders_Won_Rounds = Defenders_Won_Rounds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerController_Raid.BP_PlayerController_Raid_C.Show Match Result UI
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_GSC_Team_Raid_C*              Winner_Team                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBP_GSC_Team_Raid_C*              Loser_Team                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerController_Raid_C::Show_Match_Result_UI(class UBP_GSC_Team_Raid_C* Winner_Team, class UBP_GSC_Team_Raid_C* Loser_Team)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_Raid_C", "Show Match Result UI");

	Params::BP_PlayerController_Raid_C_Show_Match_Result_UI Parms{};

	Parms.Winner_Team = Winner_Team;
	Parms.Loser_Team = Loser_Team;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerController_Raid.BP_PlayerController_Raid_C.Show Player Notification
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Title                                                  (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             Reason                                                 (BlueprintVisible, BlueprintReadOnly, Parm)
// ERaidNotificationType                   Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerController_Raid_C::Show_Player_Notification(const class FText& Title, const class FText& Reason, ERaidNotificationType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_Raid_C", "Show Player Notification");

	Params::BP_PlayerController_Raid_C_Show_Player_Notification Parms{};

	Parms.Title = std::move(Title);
	Parms.Reason = std::move(Reason);
	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerController_Raid.BP_PlayerController_Raid_C.Hide Objective UI
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerController_Raid_C::Hide_Objective_UI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_Raid_C", "Hide Objective UI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerController_Raid.BP_PlayerController_Raid_C.Show Objective UI
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_RaidObjective_C*              Objective                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerController_Raid_C::Show_Objective_UI(class ABP_RaidObjective_C* Objective)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_Raid_C", "Show Objective UI");

	Params::BP_PlayerController_Raid_C_Show_Objective_UI Parms{};

	Parms.Objective = Objective;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerController_Raid.BP_PlayerController_Raid_C.Hide End Turn UI
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_PlayerController_Raid_C::Hide_End_Turn_UI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_Raid_C", "Hide End Turn UI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerController_Raid.BP_PlayerController_Raid_C.Add or Remove Raid Marker
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Located_Actor                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ERaidMapMarker                          Marker_Type                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Add                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PlayerController_Raid_C::Add_or_Remove_Raid_Marker(class AActor* Located_Actor, ERaidMapMarker Marker_Type, bool Add)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_Raid_C", "Add or Remove Raid Marker");

	Params::BP_PlayerController_Raid_C_Add_or_Remove_Raid_Marker Parms{};

	Parms.Located_Actor = Located_Actor;
	Parms.Marker_Type = Marker_Type;
	Parms.Add = Add;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerController_Raid.BP_PlayerController_Raid_C.Start Spectating
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_PlayerController_Raid_C::Start_Spectating()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_Raid_C", "Start Spectating");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerController_Raid.BP_PlayerController_Raid_C.Is Attacker
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Is_Attacker_0                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PlayerController_Raid_C::Is_Attacker(bool* Is_Attacker_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerController_Raid_C", "Is Attacker");

	Params::BP_PlayerController_Raid_C_Is_Attacker Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Is_Attacker_0 != nullptr)
		*Is_Attacker_0 = Parms.Is_Attacker_0;
}

}

