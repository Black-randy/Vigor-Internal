#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_AchievementsTile

#include "Basic.hpp"

#include "UI_AchievementsTile_classes.hpp"
#include "UI_AchievementsTile_parameters.hpp"


namespace SDK
{

// Function UI_AchievementsTile.UI_AchievementsTile_C.ExecuteUbergraph_UI_AchievementsTile
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_AchievementsTile_C::ExecuteUbergraph_UI_AchievementsTile(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_AchievementsTile_C", "ExecuteUbergraph_UI_AchievementsTile");

	Params::UI_AchievementsTile_C_ExecuteUbergraph_UI_AchievementsTile Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_AchievementsTile.UI_AchievementsTile_C.BndEvt__UI_AchievementsTile_Button_K2Node_ComponentBoundEvent_3_OnButtonPressedEvent__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UButton*                          Sender                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_AchievementsTile_C::BndEvt__UI_AchievementsTile_Button_K2Node_ComponentBoundEvent_3_OnButtonPressedEvent__DelegateSignature(class UButton* Sender)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_AchievementsTile_C", "BndEvt__UI_AchievementsTile_Button_K2Node_ComponentBoundEvent_3_OnButtonPressedEvent__DelegateSignature");

	Params::UI_AchievementsTile_C_BndEvt__UI_AchievementsTile_Button_K2Node_ComponentBoundEvent_3_OnButtonPressedEvent__DelegateSignature Parms{};

	Parms.Sender = Sender;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_AchievementsTile.UI_AchievementsTile_C.BndEvt__UI_AchievementsTile_Button_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UButton*                          Sender                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_AchievementsTile_C::BndEvt__UI_AchievementsTile_Button_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature(class UButton* Sender)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_AchievementsTile_C", "BndEvt__UI_AchievementsTile_Button_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature");

	Params::UI_AchievementsTile_C_BndEvt__UI_AchievementsTile_Button_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature Parms{};

	Parms.Sender = Sender;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_AchievementsTile.UI_AchievementsTile_C.BndEvt__UI_AchievementsTile_Button_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UButton*                          Sender                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_AchievementsTile_C::BndEvt__UI_AchievementsTile_Button_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature(class UButton* Sender)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_AchievementsTile_C", "BndEvt__UI_AchievementsTile_Button_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature");

	Params::UI_AchievementsTile_C_BndEvt__UI_AchievementsTile_Button_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature Parms{};

	Parms.Sender = Sender;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_AchievementsTile.UI_AchievementsTile_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_AchievementsTile_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_AchievementsTile_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_AchievementsTile.UI_AchievementsTile_C.OnFocusLost
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FFocusEvent                      InFocusEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UUI_AchievementsTile_C::OnFocusLost(const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_AchievementsTile_C", "OnFocusLost");

	Params::UI_AchievementsTile_C_OnFocusLost Parms{};

	Parms.InFocusEvent = std::move(InFocusEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_AchievementsTile.UI_AchievementsTile_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_AchievementsTile_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_AchievementsTile_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_AchievementsTile.UI_AchievementsTile_C.OnLoaded_303A9E7341428F48F05BE78A35FA7899
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_AchievementsTile_C::OnLoaded_303A9E7341428F48F05BE78A35FA7899(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_AchievementsTile_C", "OnLoaded_303A9E7341428F48F05BE78A35FA7899");

	Params::UI_AchievementsTile_C_OnLoaded_303A9E7341428F48F05BE78A35FA7899 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_AchievementsTile.UI_AchievementsTile_C.OnFocusReceived
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FFocusEvent                      InFocusEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UUI_AchievementsTile_C::OnFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_AchievementsTile_C", "OnFocusReceived");

	Params::UI_AchievementsTile_C_OnFocusReceived Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InFocusEvent = std::move(InFocusEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UI_AchievementsTile.UI_AchievementsTile_C.GetAchievementData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class FText                             Title                                                  (Parm, OutParm)
// class FText                             Description                                            (Parm, OutParm)
// float                                   Progress                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_AchievementsTile_C::GetAchievementData(class FText* Title, class FText* Description, float* Progress) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_AchievementsTile_C", "GetAchievementData");

	Params::UI_AchievementsTile_C_GetAchievementData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Title != nullptr)
		*Title = std::move(Parms.Title);

	if (Description != nullptr)
		*Description = std::move(Parms.Description);

	if (Progress != nullptr)
		*Progress = Parms.Progress;
}

}

