#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HealingComponent

#include "Basic.hpp"

#include "S_HC_Poison_structs.hpp"
#include "Flame_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_HealingComponent.BP_HealingComponent_C.ExecuteUbergraph_BP_HealingComponent
// 0x00F0 (0x00F0 - 0x0000)
struct BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHealthComponent*                       CallFunc_GetComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEventSystem*                           CallFunc_GetEventSystem_ReturnValue;               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_EventSystem_C*                      K2Node_DynamicCast_AsBP_Event_System;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Amount;                         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanCharacter*                        K2Node_DynamicCast_AsHuman_Character;              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUI_HealthBar_C*>                CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0078(0x0010)(ReferenceParm, ContainsInstancedReference)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_HealthBar_C*                        CallFunc_Array_Get_Item;                           // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_Script_C*          K2Node_DynamicCast_AsBP_Player_Controller_Script;  // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUI_HealthBar_C*>                CallFunc_Map_Keys_Keys;                            // 0x00B0(0x0010)(ReferenceParm, ContainsInstancedReference)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_HealthBar_C*                        CallFunc_Array_Get_Item_1;                         // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DB[0x1];                                       // 0x00DB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_Value;                           // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent) == 0x000008, "Wrong alignment on BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent");
static_assert(sizeof(BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent) == 0x0000F0, "Wrong size on BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent");
static_assert(offsetof(BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent, EntryPoint) == 0x000000, "Member 'BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent, Temp_int_Array_Index_Variable_1) == 0x000008, "Member 'BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent, CallFunc_GetComponentByClass_ReturnValue) == 0x000020, "Member 'BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent, CallFunc_IsValid_ReturnValue_1) == 0x000028, "Member 'BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent, CallFunc_IsValid_ReturnValue_2) == 0x000030, "Member 'BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent, CallFunc_GetEventSystem_ReturnValue) == 0x000038, "Member 'BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent::CallFunc_GetEventSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent, Temp_int_Loop_Counter_Variable_1) == 0x000040, "Member 'BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent, K2Node_DynamicCast_AsBP_Event_System) == 0x000048, "Member 'BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent::K2Node_DynamicCast_AsBP_Event_System' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent, CallFunc_Add_IntInt_ReturnValue_1) == 0x000054, "Member 'BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent, K2Node_CustomEvent_Amount) == 0x000058, "Member 'BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent::K2Node_CustomEvent_Amount' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent, CallFunc_GetOwner_ReturnValue_1) == 0x000060, "Member 'BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent, K2Node_DynamicCast_AsHuman_Character) == 0x000068, "Member 'BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent::K2Node_DynamicCast_AsHuman_Character' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000078, "Member 'BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent, CallFunc_GetController_ReturnValue) == 0x000088, "Member 'BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent, CallFunc_Array_Get_Item) == 0x000090, "Member 'BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent, K2Node_DynamicCast_AsBP_Player_Controller_Script) == 0x000098, "Member 'BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent::K2Node_DynamicCast_AsBP_Player_Controller_Script' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent, K2Node_DynamicCast_bSuccess_2) == 0x0000A0, "Member 'BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent, CallFunc_Array_Length_ReturnValue) == 0x0000A4, "Member 'BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent, CallFunc_Less_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent, CallFunc_Map_Keys_Keys) == 0x0000B0, "Member 'BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent, CallFunc_GetOwner_ReturnValue_2) == 0x0000C0, "Member 'BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent, CallFunc_Array_Get_Item_1) == 0x0000C8, "Member 'BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent, K2Node_DynamicCast_AsCharacter) == 0x0000D0, "Member 'BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent, K2Node_DynamicCast_bSuccess_3) == 0x0000D8, "Member 'BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent, CallFunc_IsLocallyControlled_ReturnValue) == 0x0000D9, "Member 'BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent, CallFunc_IsValid_ReturnValue_3) == 0x0000DA, "Member 'BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent, CallFunc_Array_Length_ReturnValue_1) == 0x0000DC, "Member 'BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000E0, "Member 'BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent, CallFunc_Array_Length_ReturnValue_2) == 0x0000E4, "Member 'BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent, CallFunc_Map_Find_Value) == 0x0000E8, "Member 'BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent, CallFunc_Map_Find_ReturnValue) == 0x0000E9, "Member 'BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent, CallFunc_Greater_IntInt_ReturnValue) == 0x0000EA, "Member 'BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent, CallFunc_Not_PreBool_ReturnValue) == 0x0000EB, "Member 'BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000EC, "Member 'BP_HealingComponent_C_ExecuteUbergraph_BP_HealingComponent::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");

// Function BP_HealingComponent.BP_HealingComponent_C.OwningClientCall HealedAmount
// 0x0004 (0x0004 - 0x0000)
struct BP_HealingComponent_C_OwningClientCall_HealedAmount final
{
public:
	float                                         Amount;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HealingComponent_C_OwningClientCall_HealedAmount) == 0x000004, "Wrong alignment on BP_HealingComponent_C_OwningClientCall_HealedAmount");
static_assert(sizeof(BP_HealingComponent_C_OwningClientCall_HealedAmount) == 0x000004, "Wrong size on BP_HealingComponent_C_OwningClientCall_HealedAmount");
static_assert(offsetof(BP_HealingComponent_C_OwningClientCall_HealedAmount, Amount) == 0x000000, "Member 'BP_HealingComponent_C_OwningClientCall_HealedAmount::Amount' has a wrong offset!");

// Function BP_HealingComponent.BP_HealingComponent_C.GetHealthStatus
// 0x0068 (0x0068 - 0x0000)
struct BP_HealingComponent_C_GetHealthStatus final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TrueHealthFractionInit;                            // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TempHealthFractionInit;                            // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ExpectedHealing;                                   // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SumOfExpected;                                     // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHealthComponent*                       CallFunc_GetComponentByClass_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTempHealthFractionInitial_ReturnValue; // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HealingConsumable_Base_C*           CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56[0x2];                                       // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTrueHealthFractionInitial_ReturnValue; // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ExpectedHealing_ExpHeal;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HealingComponent_C_GetHealthStatus) == 0x000008, "Wrong alignment on BP_HealingComponent_C_GetHealthStatus");
static_assert(sizeof(BP_HealingComponent_C_GetHealthStatus) == 0x000068, "Wrong size on BP_HealingComponent_C_GetHealthStatus");
static_assert(offsetof(BP_HealingComponent_C_GetHealthStatus, DeltaTime) == 0x000000, "Member 'BP_HealingComponent_C_GetHealthStatus::DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_GetHealthStatus, TrueHealthFractionInit) == 0x000004, "Member 'BP_HealingComponent_C_GetHealthStatus::TrueHealthFractionInit' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_GetHealthStatus, TempHealthFractionInit) == 0x000008, "Member 'BP_HealingComponent_C_GetHealthStatus::TempHealthFractionInit' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_GetHealthStatus, ExpectedHealing) == 0x00000C, "Member 'BP_HealingComponent_C_GetHealthStatus::ExpectedHealing' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_GetHealthStatus, SumOfExpected) == 0x000010, "Member 'BP_HealingComponent_C_GetHealthStatus::SumOfExpected' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_GetHealthStatus, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_HealingComponent_C_GetHealthStatus::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_GetHealthStatus, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'BP_HealingComponent_C_GetHealthStatus::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_GetHealthStatus, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_HealingComponent_C_GetHealthStatus::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_GetHealthStatus, CallFunc_GetComponentByClass_ReturnValue) == 0x000028, "Member 'BP_HealingComponent_C_GetHealthStatus::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_GetHealthStatus, CallFunc_IsValid_ReturnValue_1) == 0x000030, "Member 'BP_HealingComponent_C_GetHealthStatus::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_GetHealthStatus, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'BP_HealingComponent_C_GetHealthStatus::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_GetHealthStatus, CallFunc_IsValid_ReturnValue_2) == 0x000038, "Member 'BP_HealingComponent_C_GetHealthStatus::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_GetHealthStatus, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_HealingComponent_C_GetHealthStatus::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_GetHealthStatus, CallFunc_GetTempHealthFractionInitial_ReturnValue) == 0x000040, "Member 'BP_HealingComponent_C_GetHealthStatus::CallFunc_GetTempHealthFractionInitial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_GetHealthStatus, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_HealingComponent_C_GetHealthStatus::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_GetHealthStatus, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_HealingComponent_C_GetHealthStatus::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_GetHealthStatus, CallFunc_IsValid_ReturnValue_3) == 0x000054, "Member 'BP_HealingComponent_C_GetHealthStatus::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_GetHealthStatus, CallFunc_Less_IntInt_ReturnValue) == 0x000055, "Member 'BP_HealingComponent_C_GetHealthStatus::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_GetHealthStatus, CallFunc_GetTrueHealthFractionInitial_ReturnValue) == 0x000058, "Member 'BP_HealingComponent_C_GetHealthStatus::CallFunc_GetTrueHealthFractionInitial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_GetHealthStatus, CallFunc_ExpectedHealing_ExpHeal) == 0x00005C, "Member 'BP_HealingComponent_C_GetHealthStatus::CallFunc_ExpectedHealing_ExpHeal' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_GetHealthStatus, CallFunc_Add_FloatFloat_ReturnValue) == 0x000060, "Member 'BP_HealingComponent_C_GetHealthStatus::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_HealingComponent.BP_HealingComponent_C.GetHealthComponent
// 0x0028 (0x0028 - 0x0000)
struct BP_HealingComponent_C_GetHealthComponent final
{
public:
	class UHealthComponent*                       HealthComponent_0;                                 // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UHealthComponent*                       CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HealingComponent_C_GetHealthComponent) == 0x000008, "Wrong alignment on BP_HealingComponent_C_GetHealthComponent");
static_assert(sizeof(BP_HealingComponent_C_GetHealthComponent) == 0x000028, "Wrong size on BP_HealingComponent_C_GetHealthComponent");
static_assert(offsetof(BP_HealingComponent_C_GetHealthComponent, HealthComponent_0) == 0x000000, "Member 'BP_HealingComponent_C_GetHealthComponent::HealthComponent_0' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_GetHealthComponent, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_HealingComponent_C_GetHealthComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_GetHealthComponent, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_HealingComponent_C_GetHealthComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_GetHealthComponent, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'BP_HealingComponent_C_GetHealthComponent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_GetHealthComponent, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'BP_HealingComponent_C_GetHealthComponent::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_GetHealthComponent, CallFunc_IsValid_ReturnValue_2) == 0x000020, "Member 'BP_HealingComponent_C_GetHealthComponent::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_HealingComponent.BP_HealingComponent_C.AddHeal
// 0x0040 (0x0040 - 0x0000)
struct BP_HealingComponent_C_AddHeal final
{
public:
	float                                         Amount;                                            // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHealthType                                   HealthType;                                        // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         HealthBeforeAddingHeal;                            // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_ApplyHeal_ReturnValue;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetHealth_ReturnValue;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UHealthComponent*                       CallFunc_GetComponentByClass_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HealingComponent_C_AddHeal) == 0x000008, "Wrong alignment on BP_HealingComponent_C_AddHeal");
static_assert(sizeof(BP_HealingComponent_C_AddHeal) == 0x000040, "Wrong size on BP_HealingComponent_C_AddHeal");
static_assert(offsetof(BP_HealingComponent_C_AddHeal, Amount) == 0x000000, "Member 'BP_HealingComponent_C_AddHeal::Amount' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_AddHeal, HealthType) == 0x000004, "Member 'BP_HealingComponent_C_AddHeal::HealthType' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_AddHeal, HealthBeforeAddingHeal) == 0x000008, "Member 'BP_HealingComponent_C_AddHeal::HealthBeforeAddingHeal' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_AddHeal, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'BP_HealingComponent_C_AddHeal::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_AddHeal, CallFunc_ApplyHeal_ReturnValue) == 0x000010, "Member 'BP_HealingComponent_C_AddHeal::CallFunc_ApplyHeal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_AddHeal, CallFunc_GetHealth_ReturnValue) == 0x000014, "Member 'BP_HealingComponent_C_AddHeal::CallFunc_GetHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_AddHeal, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_HealingComponent_C_AddHeal::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_AddHeal, CallFunc_GetOwner_ReturnValue) == 0x000020, "Member 'BP_HealingComponent_C_AddHeal::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_AddHeal, CallFunc_IsValid_ReturnValue_1) == 0x000028, "Member 'BP_HealingComponent_C_AddHeal::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_AddHeal, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000029, "Member 'BP_HealingComponent_C_AddHeal::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_AddHeal, CallFunc_GetComponentByClass_ReturnValue) == 0x000030, "Member 'BP_HealingComponent_C_AddHeal::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_AddHeal, CallFunc_IsValid_ReturnValue_2) == 0x000038, "Member 'BP_HealingComponent_C_AddHeal::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_HealingComponent.BP_HealingComponent_C.ApplyPainkiller
// 0x0028 (0x0028 - 0x0000)
struct BP_HealingComponent_C_ApplyPainkiller final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HealingComponent_C_ApplyPainkiller) == 0x000008, "Wrong alignment on BP_HealingComponent_C_ApplyPainkiller");
static_assert(sizeof(BP_HealingComponent_C_ApplyPainkiller) == 0x000028, "Wrong size on BP_HealingComponent_C_ApplyPainkiller");
static_assert(offsetof(BP_HealingComponent_C_ApplyPainkiller, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'BP_HealingComponent_C_ApplyPainkiller::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_ApplyPainkiller, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_HealingComponent_C_ApplyPainkiller::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_ApplyPainkiller, CallFunc_HasAuthority_ReturnValue) == 0x000018, "Member 'BP_HealingComponent_C_ApplyPainkiller::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_ApplyPainkiller, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000020, "Member 'BP_HealingComponent_C_ApplyPainkiller::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function BP_HealingComponent.BP_HealingComponent_C.ApplyAntibiotic
// 0x0038 (0x0038 - 0x0000)
struct BP_HealingComponent_C_ApplyAntibiotic final
{
public:
	float                                         Duration;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HealingComponent_C_ApplyAntibiotic) == 0x000008, "Wrong alignment on BP_HealingComponent_C_ApplyAntibiotic");
static_assert(sizeof(BP_HealingComponent_C_ApplyAntibiotic) == 0x000038, "Wrong size on BP_HealingComponent_C_ApplyAntibiotic");
static_assert(offsetof(BP_HealingComponent_C_ApplyAntibiotic, Duration) == 0x000000, "Member 'BP_HealingComponent_C_ApplyAntibiotic::Duration' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_ApplyAntibiotic, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_HealingComponent_C_ApplyAntibiotic::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_ApplyAntibiotic, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'BP_HealingComponent_C_ApplyAntibiotic::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_ApplyAntibiotic, CallFunc_HasAuthority_ReturnValue) == 0x000020, "Member 'BP_HealingComponent_C_ApplyAntibiotic::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_ApplyAntibiotic, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000028, "Member 'BP_HealingComponent_C_ApplyAntibiotic::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_ApplyAntibiotic, CallFunc_FMax_ReturnValue) == 0x000030, "Member 'BP_HealingComponent_C_ApplyAntibiotic::CallFunc_FMax_ReturnValue' has a wrong offset!");

// Function BP_HealingComponent.BP_HealingComponent_C.RegisterConsumable
// 0x0010 (0x0010 - 0x0000)
struct BP_HealingComponent_C_RegisterConsumable final
{
public:
	class ABP_HealingConsumable_Base_C*           HealingConsumable;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HealingComponent_C_RegisterConsumable) == 0x000008, "Wrong alignment on BP_HealingComponent_C_RegisterConsumable");
static_assert(sizeof(BP_HealingComponent_C_RegisterConsumable) == 0x000010, "Wrong size on BP_HealingComponent_C_RegisterConsumable");
static_assert(offsetof(BP_HealingComponent_C_RegisterConsumable, HealingConsumable) == 0x000000, "Member 'BP_HealingComponent_C_RegisterConsumable::HealingConsumable' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_RegisterConsumable, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_HealingComponent_C_RegisterConsumable::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_RegisterConsumable, CallFunc_Array_AddUnique_ReturnValue) == 0x00000C, "Member 'BP_HealingComponent_C_RegisterConsumable::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function BP_HealingComponent.BP_HealingComponent_C.UnregisterConsumable
// 0x0010 (0x0010 - 0x0000)
struct BP_HealingComponent_C_UnregisterConsumable final
{
public:
	class ABP_HealingConsumable_Base_C*           HealingConsumable;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HealingComponent_C_UnregisterConsumable) == 0x000008, "Wrong alignment on BP_HealingComponent_C_UnregisterConsumable");
static_assert(sizeof(BP_HealingComponent_C_UnregisterConsumable) == 0x000010, "Wrong size on BP_HealingComponent_C_UnregisterConsumable");
static_assert(offsetof(BP_HealingComponent_C_UnregisterConsumable, HealingConsumable) == 0x000000, "Member 'BP_HealingComponent_C_UnregisterConsumable::HealingConsumable' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_UnregisterConsumable, CallFunc_Array_RemoveItem_ReturnValue) == 0x000008, "Member 'BP_HealingComponent_C_UnregisterConsumable::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function BP_HealingComponent.BP_HealingComponent_C.UpdateConsumableEffectsOnAuthority
// 0x0048 (0x0048 - 0x0000)
struct BP_HealingComponent_C_UpdateConsumableEffectsOnAuthority final
{
public:
	bool                                          PainkillersWorking;                                // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          AntibioticsWorking;                                // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UHealthComponent*                       CallFunc_GetHealthComponent_HealthComponent;       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTempHealth_ReturnValue;                // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23[0x1];                                       // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHealthComponent*                       CallFunc_GetHealthComponent_HealthComponent_1;     // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AddTempHealth_ReturnValue;                // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTempHealth_ReturnValue_1;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_2;       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HealingComponent_C_UpdateConsumableEffectsOnAuthority) == 0x000008, "Wrong alignment on BP_HealingComponent_C_UpdateConsumableEffectsOnAuthority");
static_assert(sizeof(BP_HealingComponent_C_UpdateConsumableEffectsOnAuthority) == 0x000048, "Wrong size on BP_HealingComponent_C_UpdateConsumableEffectsOnAuthority");
static_assert(offsetof(BP_HealingComponent_C_UpdateConsumableEffectsOnAuthority, PainkillersWorking) == 0x000000, "Member 'BP_HealingComponent_C_UpdateConsumableEffectsOnAuthority::PainkillersWorking' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_UpdateConsumableEffectsOnAuthority, AntibioticsWorking) == 0x000001, "Member 'BP_HealingComponent_C_UpdateConsumableEffectsOnAuthority::AntibioticsWorking' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_UpdateConsumableEffectsOnAuthority, CallFunc_GetHealthComponent_HealthComponent) == 0x000008, "Member 'BP_HealingComponent_C_UpdateConsumableEffectsOnAuthority::CallFunc_GetHealthComponent_HealthComponent' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_UpdateConsumableEffectsOnAuthority, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_HealingComponent_C_UpdateConsumableEffectsOnAuthority::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_UpdateConsumableEffectsOnAuthority, CallFunc_GetTempHealth_ReturnValue) == 0x000014, "Member 'BP_HealingComponent_C_UpdateConsumableEffectsOnAuthority::CallFunc_GetTempHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_UpdateConsumableEffectsOnAuthority, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'BP_HealingComponent_C_UpdateConsumableEffectsOnAuthority::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_UpdateConsumableEffectsOnAuthority, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000020, "Member 'BP_HealingComponent_C_UpdateConsumableEffectsOnAuthority::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_UpdateConsumableEffectsOnAuthority, CallFunc_HasAuthority_ReturnValue) == 0x000021, "Member 'BP_HealingComponent_C_UpdateConsumableEffectsOnAuthority::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_UpdateConsumableEffectsOnAuthority, CallFunc_BooleanAND_ReturnValue) == 0x000022, "Member 'BP_HealingComponent_C_UpdateConsumableEffectsOnAuthority::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_UpdateConsumableEffectsOnAuthority, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000024, "Member 'BP_HealingComponent_C_UpdateConsumableEffectsOnAuthority::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_UpdateConsumableEffectsOnAuthority, CallFunc_GetHealthComponent_HealthComponent_1) == 0x000028, "Member 'BP_HealingComponent_C_UpdateConsumableEffectsOnAuthority::CallFunc_GetHealthComponent_HealthComponent_1' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_UpdateConsumableEffectsOnAuthority, CallFunc_AddTempHealth_ReturnValue) == 0x000030, "Member 'BP_HealingComponent_C_UpdateConsumableEffectsOnAuthority::CallFunc_AddTempHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_UpdateConsumableEffectsOnAuthority, CallFunc_GetTempHealth_ReturnValue_1) == 0x000034, "Member 'BP_HealingComponent_C_UpdateConsumableEffectsOnAuthority::CallFunc_GetTempHealth_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_UpdateConsumableEffectsOnAuthority, CallFunc_LessEqual_FloatFloat_ReturnValue_2) == 0x000038, "Member 'BP_HealingComponent_C_UpdateConsumableEffectsOnAuthority::CallFunc_LessEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_UpdateConsumableEffectsOnAuthority, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000039, "Member 'BP_HealingComponent_C_UpdateConsumableEffectsOnAuthority::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_UpdateConsumableEffectsOnAuthority, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00003C, "Member 'BP_HealingComponent_C_UpdateConsumableEffectsOnAuthority::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_UpdateConsumableEffectsOnAuthority, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000040, "Member 'BP_HealingComponent_C_UpdateConsumableEffectsOnAuthority::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function BP_HealingComponent.BP_HealingComponent_C.ClearEffects
// 0x0010 (0x0010 - 0x0000)
struct BP_HealingComponent_C_ClearEffects final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HealingComponent_C_ClearEffects) == 0x000008, "Wrong alignment on BP_HealingComponent_C_ClearEffects");
static_assert(sizeof(BP_HealingComponent_C_ClearEffects) == 0x000010, "Wrong size on BP_HealingComponent_C_ClearEffects");
static_assert(offsetof(BP_HealingComponent_C_ClearEffects, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'BP_HealingComponent_C_ClearEffects::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_ClearEffects, CallFunc_HasAuthority_ReturnValue) == 0x000008, "Member 'BP_HealingComponent_C_ClearEffects::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

// Function BP_HealingComponent.BP_HealingComponent_C.ApplyPoison
// 0x0018 (0x0018 - 0x0000)
struct BP_HealingComponent_C_ApplyPoison final
{
public:
	struct FS_HC_Poison                           Poison;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HealingComponent_C_ApplyPoison) == 0x000008, "Wrong alignment on BP_HealingComponent_C_ApplyPoison");
static_assert(sizeof(BP_HealingComponent_C_ApplyPoison) == 0x000018, "Wrong size on BP_HealingComponent_C_ApplyPoison");
static_assert(offsetof(BP_HealingComponent_C_ApplyPoison, Poison) == 0x000000, "Member 'BP_HealingComponent_C_ApplyPoison::Poison' has a wrong offset!");

// Function BP_HealingComponent.BP_HealingComponent_C.UpdatePoisons
// 0x0020 (0x0020 - 0x0000)
struct BP_HealingComponent_C_UpdatePoisons final
{
public:
	float                                         TickDuration;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AmountToUnHeal;                                    // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_HC_Poison                           InstigatingPoison;                                 // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HealingComponent_C_UpdatePoisons) == 0x000008, "Wrong alignment on BP_HealingComponent_C_UpdatePoisons");
static_assert(sizeof(BP_HealingComponent_C_UpdatePoisons) == 0x000020, "Wrong size on BP_HealingComponent_C_UpdatePoisons");
static_assert(offsetof(BP_HealingComponent_C_UpdatePoisons, TickDuration) == 0x000000, "Member 'BP_HealingComponent_C_UpdatePoisons::TickDuration' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_UpdatePoisons, AmountToUnHeal) == 0x000004, "Member 'BP_HealingComponent_C_UpdatePoisons::AmountToUnHeal' has a wrong offset!");
static_assert(offsetof(BP_HealingComponent_C_UpdatePoisons, InstigatingPoison) == 0x000008, "Member 'BP_HealingComponent_C_UpdatePoisons::InstigatingPoison' has a wrong offset!");

}

