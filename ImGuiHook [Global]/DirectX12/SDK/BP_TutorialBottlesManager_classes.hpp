#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TutorialBottlesManager

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_TutorialBottlesManager.BP_TutorialBottlesManager_C
// 0x00B0 (0x02D0 - 0x0220)
class ABP_TutorialBottlesManager_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class ADestructibleActor*>             Bottles;                                           // 0x0230(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, ExposeOnSpawn)
	int32                                         NumberOfHits;                                      // 0x0240(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_244[0x4];                                      // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_Tutorial_3DHint_C*>          Hints;                                             // 0x0248(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, ExposeOnSpawn)
	TArray<class ABP_Tutorial_3DHint_C*>          FirstShootingRangeHints;                           // 0x0258(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class AActor*>                         ItemsToRespawn;                                    // 0x0268(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TMap<class FString, struct FTransform>        SavedTransform;                                    // 0x0278(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          Used;                                              // 0x02C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_TutorialBottlesManager(int32 EntryPoint);
	void OnHitTartget();
	void CustomEvent_0();
	void Reset_Hit();
	void Wait_For_Next_Hits();
	void ResetActorState();
	void OnTargetHIt(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& ShotFromDirection, const class UDamageType* DamageType, class AActor* DamageCauser);
	void Update(const struct FVector& HitPoint, const struct FVector& HitDirection);
	void ReceiveBeginPlay();
	void ShowHints(bool bNewVisibility);
	void RespawnItems();
	void ShowFirstShootingRangeHints(bool NewVisibility);
	void IsDirty(bool* IsDirty_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_TutorialBottlesManager_C">();
	}
	static class ABP_TutorialBottlesManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_TutorialBottlesManager_C>();
	}
};
static_assert(alignof(ABP_TutorialBottlesManager_C) == 0x000008, "Wrong alignment on ABP_TutorialBottlesManager_C");
static_assert(sizeof(ABP_TutorialBottlesManager_C) == 0x0002D0, "Wrong size on ABP_TutorialBottlesManager_C");
static_assert(offsetof(ABP_TutorialBottlesManager_C, UberGraphFrame) == 0x000220, "Member 'ABP_TutorialBottlesManager_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_TutorialBottlesManager_C, DefaultSceneRoot) == 0x000228, "Member 'ABP_TutorialBottlesManager_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_TutorialBottlesManager_C, Bottles) == 0x000230, "Member 'ABP_TutorialBottlesManager_C::Bottles' has a wrong offset!");
static_assert(offsetof(ABP_TutorialBottlesManager_C, NumberOfHits) == 0x000240, "Member 'ABP_TutorialBottlesManager_C::NumberOfHits' has a wrong offset!");
static_assert(offsetof(ABP_TutorialBottlesManager_C, Hints) == 0x000248, "Member 'ABP_TutorialBottlesManager_C::Hints' has a wrong offset!");
static_assert(offsetof(ABP_TutorialBottlesManager_C, FirstShootingRangeHints) == 0x000258, "Member 'ABP_TutorialBottlesManager_C::FirstShootingRangeHints' has a wrong offset!");
static_assert(offsetof(ABP_TutorialBottlesManager_C, ItemsToRespawn) == 0x000268, "Member 'ABP_TutorialBottlesManager_C::ItemsToRespawn' has a wrong offset!");
static_assert(offsetof(ABP_TutorialBottlesManager_C, SavedTransform) == 0x000278, "Member 'ABP_TutorialBottlesManager_C::SavedTransform' has a wrong offset!");
static_assert(offsetof(ABP_TutorialBottlesManager_C, Used) == 0x0002C8, "Member 'ABP_TutorialBottlesManager_C::Used' has a wrong offset!");

}

