#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MementoLootManager_Base

#include "Basic.hpp"

#include "BP_MementoLootManager_Base_classes.hpp"
#include "BP_MementoLootManager_Base_parameters.hpp"


namespace SDK
{

// Function BP_MementoLootManager_Base.BP_MementoLootManager_Base_C.Mementos Spawned__DelegateSignature
// (Public, Delegate, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UClass*>                   Items                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_MementoLootManager_Base_C::Mementos_Spawned__DelegateSignature(TArray<class UClass*>& Items)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MementoLootManager_Base_C", "Mementos Spawned__DelegateSignature");

	Params::BP_MementoLootManager_Base_C_Mementos_Spawned__DelegateSignature Parms{};

	Parms.Items = std::move(Items);

	UObject::ProcessEvent(Func, &Parms);

	Items = std::move(Parms.Items);
}


// Function BP_MementoLootManager_Base.BP_MementoLootManager_Base_C.Spawn Mementos
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Cheat_in_All                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TArray<class UClass*>                   Spawned_Mementos                                       (Parm, OutParm)

void ABP_MementoLootManager_Base_C::Spawn_Mementos(bool Cheat_in_All, TArray<class UClass*>* Spawned_Mementos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MementoLootManager_Base_C", "Spawn Mementos");

	Params::BP_MementoLootManager_Base_C_Spawn_Mementos Parms{};

	Parms.Cheat_in_All = Cheat_in_All;

	UObject::ProcessEvent(Func, &Parms);

	if (Spawned_Mementos != nullptr)
		*Spawned_Mementos = std::move(Parms.Spawned_Mementos);
}


// Function BP_MementoLootManager_Base.BP_MementoLootManager_Base_C.Is Cheating Allowed
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MementoLootManager_Base_C::Is_Cheating_Allowed(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MementoLootManager_Base_C", "Is Cheating Allowed");

	Params::BP_MementoLootManager_Base_C_Is_Cheating_Allowed Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_MementoLootManager_Base.BP_MementoLootManager_Base_C.Set Up Commodities to Spawn on All Locations
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UClass*>                   Memento_Pool                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class UClass*>                   Mementos_Set                                           (Parm, OutParm)

void ABP_MementoLootManager_Base_C::Set_Up_Commodities_to_Spawn_on_All_Locations(TArray<class UClass*>& Memento_Pool, TArray<class UClass*>* Mementos_Set)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MementoLootManager_Base_C", "Set Up Commodities to Spawn on All Locations");

	Params::BP_MementoLootManager_Base_C_Set_Up_Commodities_to_Spawn_on_All_Locations Parms{};

	Parms.Memento_Pool = std::move(Memento_Pool);

	UObject::ProcessEvent(Func, &Parms);

	Memento_Pool = std::move(Parms.Memento_Pool);

	if (Mementos_Set != nullptr)
		*Mementos_Set = std::move(Parms.Mementos_Set);
}

}

