#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_ConsumableIndicators

#include "Basic.hpp"

#include "Flame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_ConsumableIndicators.UI_ConsumableIndicators_C
// 0x0028 (0x02E0 - 0x02B8)
class UUI_ConsumableIndicators_C final : public UFlameWidget
{
public:
	class UUI_ConsumableIndicator_C*              AdrenalineShotIndicator;                           // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_ConsumableIndicator_C*              BearTrapIndicator;                                 // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_ConsumableIndicator_C*              CaffeineIndicator;                                 // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_ConsumableIndicator_C*              ConcussionTrapIndicator;                           // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_ConsumableIndicator_C*              IodineIndicator;                                   // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ShowConsumableIndicator(class UClass* ConsumableClass, float EffectTotalDuration, bool IsPersistentEffect);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_ConsumableIndicators_C">();
	}
	static class UUI_ConsumableIndicators_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_ConsumableIndicators_C>();
	}
};
static_assert(alignof(UUI_ConsumableIndicators_C) == 0x000008, "Wrong alignment on UUI_ConsumableIndicators_C");
static_assert(sizeof(UUI_ConsumableIndicators_C) == 0x0002E0, "Wrong size on UUI_ConsumableIndicators_C");
static_assert(offsetof(UUI_ConsumableIndicators_C, AdrenalineShotIndicator) == 0x0002B8, "Member 'UUI_ConsumableIndicators_C::AdrenalineShotIndicator' has a wrong offset!");
static_assert(offsetof(UUI_ConsumableIndicators_C, BearTrapIndicator) == 0x0002C0, "Member 'UUI_ConsumableIndicators_C::BearTrapIndicator' has a wrong offset!");
static_assert(offsetof(UUI_ConsumableIndicators_C, CaffeineIndicator) == 0x0002C8, "Member 'UUI_ConsumableIndicators_C::CaffeineIndicator' has a wrong offset!");
static_assert(offsetof(UUI_ConsumableIndicators_C, ConcussionTrapIndicator) == 0x0002D0, "Member 'UUI_ConsumableIndicators_C::ConcussionTrapIndicator' has a wrong offset!");
static_assert(offsetof(UUI_ConsumableIndicators_C, IodineIndicator) == 0x0002D8, "Member 'UUI_ConsumableIndicators_C::IodineIndicator' has a wrong offset!");

}

