#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PrimaryWeapon

#include "Basic.hpp"

#include "Flame_structs.hpp"
#include "Flame_classes.hpp"
#include "Engine_structs.hpp"
#include "S_WeaponSocketOffsetExceptions_structs.hpp"
#include "PhysicsCore_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PrimaryWeapon.BP_PrimaryWeapon_C
// 0x16B0 (0x23B0 - 0x0D00)
class ABP_PrimaryWeapon_C : public APrimaryWeapon
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0D00(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_MeshParticleTrigger_Component_C*    BP_MeshParticleTrigger_Component;                  // 0x0D08(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   MuzzleMaskMesh;                                    // 0x0D10(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   MaskMesh;                                          // 0x0D18(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAimPointComponent*                     AimPoint;                                          // 0x0D20(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D28[0x8];                                      // 0x0D28(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPostProcessSettings                   NoneBlur;                                          // 0x0D30(0x0590)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FPostProcessSettings                   IronsightBlur;                                     // 0x12C0(0x0590)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FPostProcessSettings                   ReflectorBlur;                                     // 0x1850(0x0590)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FPostProcessSettings                   OpticsBlur;                                        // 0x1DE0(0x0590)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          WeaponSkinDiagnostic;                              // 0x2370(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2371[0x7];                                     // 0x2371(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       SkinsInstances;                                    // 0x2378(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UClass*                                 LastSkin;                                          // 0x2388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_WeaponSocketOffsetExceptions> SocketOffsets_Exceptions;                          // 0x2390(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          DebugHolsterOffsetSystem;                          // 0x23A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsShooting;                                        // 0x23A1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23A2[0x6];                                     // 0x23A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFirearm_ABP_C*                         WPN_AnimInstance;                                  // 0x23A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_PrimaryWeapon(int32 EntryPoint);
	void ReceiveFireShot();
	void SetDefaultSocketsOffsetValues();
	void UpdateSocketOffsets();
	void InitCustomSocketLogic();
	void UpdateSocketsOverridesAfterOwnerChange();
	void CheckIfWeaponLoadedIn();
	void ReceiveTick(float DeltaSeconds);
	void PrintPosprocess();
	void CasingSpawn(class FName EventName, float EmitterTime, const struct FVector& Location, const struct FVector& Velocity);
	void CasingCollide(class FName EventName, float EmitterTime, int32 ParticleTime, const struct FVector& Location, const struct FVector& Velocity, const struct FVector& Direction, const struct FVector& Normal, class FName BoneName, class UPhysicalMaterial* PhysMat);
	void ReceiveBeginPlay();
	void ReceiveMeleeHit(const struct FHitResult& HitResult);
	void InpActEvt_Fire_K2Node_InputActionEvent_0(const struct FKey& Key);
	void UserConstructionScript();
	void PlayMeleeHitSound(const struct FHitResult& HitResult);
	void SaveSkinInstances(const class UMaterialInstanceDynamic*& Materials);
	void WeaponSkinDiagnostics();
	void FillSocketOffsetExceptions();

	struct FFlameSkinMaterialInfo GetMaterialInfoImplementation() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PrimaryWeapon_C">();
	}
	static class ABP_PrimaryWeapon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_PrimaryWeapon_C>();
	}
};
static_assert(alignof(ABP_PrimaryWeapon_C) == 0x000010, "Wrong alignment on ABP_PrimaryWeapon_C");
static_assert(sizeof(ABP_PrimaryWeapon_C) == 0x0023B0, "Wrong size on ABP_PrimaryWeapon_C");
static_assert(offsetof(ABP_PrimaryWeapon_C, UberGraphFrame) == 0x000D00, "Member 'ABP_PrimaryWeapon_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_PrimaryWeapon_C, BP_MeshParticleTrigger_Component) == 0x000D08, "Member 'ABP_PrimaryWeapon_C::BP_MeshParticleTrigger_Component' has a wrong offset!");
static_assert(offsetof(ABP_PrimaryWeapon_C, MuzzleMaskMesh) == 0x000D10, "Member 'ABP_PrimaryWeapon_C::MuzzleMaskMesh' has a wrong offset!");
static_assert(offsetof(ABP_PrimaryWeapon_C, MaskMesh) == 0x000D18, "Member 'ABP_PrimaryWeapon_C::MaskMesh' has a wrong offset!");
static_assert(offsetof(ABP_PrimaryWeapon_C, AimPoint) == 0x000D20, "Member 'ABP_PrimaryWeapon_C::AimPoint' has a wrong offset!");
static_assert(offsetof(ABP_PrimaryWeapon_C, NoneBlur) == 0x000D30, "Member 'ABP_PrimaryWeapon_C::NoneBlur' has a wrong offset!");
static_assert(offsetof(ABP_PrimaryWeapon_C, IronsightBlur) == 0x0012C0, "Member 'ABP_PrimaryWeapon_C::IronsightBlur' has a wrong offset!");
static_assert(offsetof(ABP_PrimaryWeapon_C, ReflectorBlur) == 0x001850, "Member 'ABP_PrimaryWeapon_C::ReflectorBlur' has a wrong offset!");
static_assert(offsetof(ABP_PrimaryWeapon_C, OpticsBlur) == 0x001DE0, "Member 'ABP_PrimaryWeapon_C::OpticsBlur' has a wrong offset!");
static_assert(offsetof(ABP_PrimaryWeapon_C, WeaponSkinDiagnostic) == 0x002370, "Member 'ABP_PrimaryWeapon_C::WeaponSkinDiagnostic' has a wrong offset!");
static_assert(offsetof(ABP_PrimaryWeapon_C, SkinsInstances) == 0x002378, "Member 'ABP_PrimaryWeapon_C::SkinsInstances' has a wrong offset!");
static_assert(offsetof(ABP_PrimaryWeapon_C, LastSkin) == 0x002388, "Member 'ABP_PrimaryWeapon_C::LastSkin' has a wrong offset!");
static_assert(offsetof(ABP_PrimaryWeapon_C, SocketOffsets_Exceptions) == 0x002390, "Member 'ABP_PrimaryWeapon_C::SocketOffsets_Exceptions' has a wrong offset!");
static_assert(offsetof(ABP_PrimaryWeapon_C, DebugHolsterOffsetSystem) == 0x0023A0, "Member 'ABP_PrimaryWeapon_C::DebugHolsterOffsetSystem' has a wrong offset!");
static_assert(offsetof(ABP_PrimaryWeapon_C, IsShooting) == 0x0023A1, "Member 'ABP_PrimaryWeapon_C::IsShooting' has a wrong offset!");
static_assert(offsetof(ABP_PrimaryWeapon_C, WPN_AnimInstance) == 0x0023A8, "Member 'ABP_PrimaryWeapon_C::WPN_AnimInstance' has a wrong offset!");

}

