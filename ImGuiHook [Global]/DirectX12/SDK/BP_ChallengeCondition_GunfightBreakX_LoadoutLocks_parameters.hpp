#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ChallengeCondition_GunfightBreakX_LoadoutLocks

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_ChallengeCondition_GunfightBreakX_LoadoutLocks.BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C.ExecuteUbergraph_BP_ChallengeCondition_GunfightBreakX_LoadoutLocks
// 0x00B0 (0x00B0 - 0x0000)
struct BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_ExecuteUbergraph_BP_ChallengeCondition_GunfightBreakX_LoadoutLocks final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Maximum_Progress_Maximum_Progress;    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool TicketUsed)>              K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Variable_1;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEventSystem*                           CallFunc_GetEventSystem_ReturnValue;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameState_GunFight_C*               K2Node_DynamicCast_AsBP_Game_State_Gun_Fight;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EventSystem_C>    K2Node_DynamicCast_AsBPI_Event_System;             // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Get_Maximum_Progress_Maximum_Progress_1;  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_EventSystem_C*                      CallFunc_Get_BP_event_system_Event_system;         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UEventSystem*                           CallFunc_GetEventSystem_ReturnValue_1;             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EventSystem_C>    K2Node_DynamicCast_AsBPI_Event_System_1;           // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_EventSystem_C*                      CallFunc_Get_BP_event_system_Event_system_1;       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_TicketUsed;                     // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A7[0x1];                                       // 0x00A7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Get_Maximum_Progress_Maximum_Progress_2;  // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_ExecuteUbergraph_BP_ChallengeCondition_GunfightBreakX_LoadoutLocks) == 0x000008, "Wrong alignment on BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_ExecuteUbergraph_BP_ChallengeCondition_GunfightBreakX_LoadoutLocks");
static_assert(sizeof(BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_ExecuteUbergraph_BP_ChallengeCondition_GunfightBreakX_LoadoutLocks) == 0x0000B0, "Wrong size on BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_ExecuteUbergraph_BP_ChallengeCondition_GunfightBreakX_LoadoutLocks");
static_assert(offsetof(BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_ExecuteUbergraph_BP_ChallengeCondition_GunfightBreakX_LoadoutLocks, EntryPoint) == 0x000000, "Member 'BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_ExecuteUbergraph_BP_ChallengeCondition_GunfightBreakX_LoadoutLocks::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_ExecuteUbergraph_BP_ChallengeCondition_GunfightBreakX_LoadoutLocks, CallFunc_Get_Maximum_Progress_Maximum_Progress) == 0x000004, "Member 'BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_ExecuteUbergraph_BP_ChallengeCondition_GunfightBreakX_LoadoutLocks::CallFunc_Get_Maximum_Progress_Maximum_Progress' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_ExecuteUbergraph_BP_ChallengeCondition_GunfightBreakX_LoadoutLocks, Temp_int_Variable) == 0x000008, "Member 'BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_ExecuteUbergraph_BP_ChallengeCondition_GunfightBreakX_LoadoutLocks::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_ExecuteUbergraph_BP_ChallengeCondition_GunfightBreakX_LoadoutLocks, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_ExecuteUbergraph_BP_ChallengeCondition_GunfightBreakX_LoadoutLocks::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_ExecuteUbergraph_BP_ChallengeCondition_GunfightBreakX_LoadoutLocks, Temp_int_Variable_1) == 0x00001C, "Member 'BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_ExecuteUbergraph_BP_ChallengeCondition_GunfightBreakX_LoadoutLocks::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_ExecuteUbergraph_BP_ChallengeCondition_GunfightBreakX_LoadoutLocks, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_ExecuteUbergraph_BP_ChallengeCondition_GunfightBreakX_LoadoutLocks::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_ExecuteUbergraph_BP_ChallengeCondition_GunfightBreakX_LoadoutLocks, CallFunc_Greater_IntInt_ReturnValue) == 0x000024, "Member 'BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_ExecuteUbergraph_BP_ChallengeCondition_GunfightBreakX_LoadoutLocks::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_ExecuteUbergraph_BP_ChallengeCondition_GunfightBreakX_LoadoutLocks, CallFunc_Not_PreBool_ReturnValue) == 0x000025, "Member 'BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_ExecuteUbergraph_BP_ChallengeCondition_GunfightBreakX_LoadoutLocks::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_ExecuteUbergraph_BP_ChallengeCondition_GunfightBreakX_LoadoutLocks, CallFunc_GetGameState_ReturnValue) == 0x000028, "Member 'BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_ExecuteUbergraph_BP_ChallengeCondition_GunfightBreakX_LoadoutLocks::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_ExecuteUbergraph_BP_ChallengeCondition_GunfightBreakX_LoadoutLocks, CallFunc_GetEventSystem_ReturnValue) == 0x000030, "Member 'BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_ExecuteUbergraph_BP_ChallengeCondition_GunfightBreakX_LoadoutLocks::CallFunc_GetEventSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_ExecuteUbergraph_BP_ChallengeCondition_GunfightBreakX_LoadoutLocks, K2Node_DynamicCast_AsBP_Game_State_Gun_Fight) == 0x000038, "Member 'BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_ExecuteUbergraph_BP_ChallengeCondition_GunfightBreakX_LoadoutLocks::K2Node_DynamicCast_AsBP_Game_State_Gun_Fight' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_ExecuteUbergraph_BP_ChallengeCondition_GunfightBreakX_LoadoutLocks, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_ExecuteUbergraph_BP_ChallengeCondition_GunfightBreakX_LoadoutLocks::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_ExecuteUbergraph_BP_ChallengeCondition_GunfightBreakX_LoadoutLocks, K2Node_DynamicCast_AsBPI_Event_System) == 0x000048, "Member 'BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_ExecuteUbergraph_BP_ChallengeCondition_GunfightBreakX_LoadoutLocks::K2Node_DynamicCast_AsBPI_Event_System' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_ExecuteUbergraph_BP_ChallengeCondition_GunfightBreakX_LoadoutLocks, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_ExecuteUbergraph_BP_ChallengeCondition_GunfightBreakX_LoadoutLocks::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_ExecuteUbergraph_BP_ChallengeCondition_GunfightBreakX_LoadoutLocks, CallFunc_Get_Maximum_Progress_Maximum_Progress_1) == 0x00005C, "Member 'BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_ExecuteUbergraph_BP_ChallengeCondition_GunfightBreakX_LoadoutLocks::CallFunc_Get_Maximum_Progress_Maximum_Progress_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_ExecuteUbergraph_BP_ChallengeCondition_GunfightBreakX_LoadoutLocks, CallFunc_Get_BP_event_system_Event_system) == 0x000060, "Member 'BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_ExecuteUbergraph_BP_ChallengeCondition_GunfightBreakX_LoadoutLocks::CallFunc_Get_BP_event_system_Event_system' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_ExecuteUbergraph_BP_ChallengeCondition_GunfightBreakX_LoadoutLocks, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_ExecuteUbergraph_BP_ChallengeCondition_GunfightBreakX_LoadoutLocks::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_ExecuteUbergraph_BP_ChallengeCondition_GunfightBreakX_LoadoutLocks, Temp_bool_Variable) == 0x000069, "Member 'BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_ExecuteUbergraph_BP_ChallengeCondition_GunfightBreakX_LoadoutLocks::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_ExecuteUbergraph_BP_ChallengeCondition_GunfightBreakX_LoadoutLocks, CallFunc_GetEventSystem_ReturnValue_1) == 0x000070, "Member 'BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_ExecuteUbergraph_BP_ChallengeCondition_GunfightBreakX_LoadoutLocks::CallFunc_GetEventSystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_ExecuteUbergraph_BP_ChallengeCondition_GunfightBreakX_LoadoutLocks, K2Node_Select_Default) == 0x000078, "Member 'BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_ExecuteUbergraph_BP_ChallengeCondition_GunfightBreakX_LoadoutLocks::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_ExecuteUbergraph_BP_ChallengeCondition_GunfightBreakX_LoadoutLocks, K2Node_DynamicCast_AsBPI_Event_System_1) == 0x000080, "Member 'BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_ExecuteUbergraph_BP_ChallengeCondition_GunfightBreakX_LoadoutLocks::K2Node_DynamicCast_AsBPI_Event_System_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_ExecuteUbergraph_BP_ChallengeCondition_GunfightBreakX_LoadoutLocks, K2Node_DynamicCast_bSuccess_2) == 0x000090, "Member 'BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_ExecuteUbergraph_BP_ChallengeCondition_GunfightBreakX_LoadoutLocks::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_ExecuteUbergraph_BP_ChallengeCondition_GunfightBreakX_LoadoutLocks, CallFunc_Get_BP_event_system_Event_system_1) == 0x000098, "Member 'BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_ExecuteUbergraph_BP_ChallengeCondition_GunfightBreakX_LoadoutLocks::CallFunc_Get_BP_event_system_Event_system_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_ExecuteUbergraph_BP_ChallengeCondition_GunfightBreakX_LoadoutLocks, CallFunc_Add_IntInt_ReturnValue) == 0x0000A0, "Member 'BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_ExecuteUbergraph_BP_ChallengeCondition_GunfightBreakX_LoadoutLocks::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_ExecuteUbergraph_BP_ChallengeCondition_GunfightBreakX_LoadoutLocks, CallFunc_IsValid_ReturnValue) == 0x0000A4, "Member 'BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_ExecuteUbergraph_BP_ChallengeCondition_GunfightBreakX_LoadoutLocks::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_ExecuteUbergraph_BP_ChallengeCondition_GunfightBreakX_LoadoutLocks, K2Node_CustomEvent_TicketUsed) == 0x0000A5, "Member 'BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_ExecuteUbergraph_BP_ChallengeCondition_GunfightBreakX_LoadoutLocks::K2Node_CustomEvent_TicketUsed' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_ExecuteUbergraph_BP_ChallengeCondition_GunfightBreakX_LoadoutLocks, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000A6, "Member 'BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_ExecuteUbergraph_BP_ChallengeCondition_GunfightBreakX_LoadoutLocks::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_ExecuteUbergraph_BP_ChallengeCondition_GunfightBreakX_LoadoutLocks, CallFunc_Get_Maximum_Progress_Maximum_Progress_2) == 0x0000A8, "Member 'BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_ExecuteUbergraph_BP_ChallengeCondition_GunfightBreakX_LoadoutLocks::CallFunc_Get_Maximum_Progress_Maximum_Progress_2' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_ExecuteUbergraph_BP_ChallengeCondition_GunfightBreakX_LoadoutLocks, CallFunc_Min_ReturnValue) == 0x0000AC, "Member 'BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_ExecuteUbergraph_BP_ChallengeCondition_GunfightBreakX_LoadoutLocks::CallFunc_Min_ReturnValue' has a wrong offset!");

// Function BP_ChallengeCondition_GunfightBreakX_LoadoutLocks.BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C.TicketUsedEvent
// 0x0001 (0x0001 - 0x0000)
struct BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_TicketUsedEvent final
{
public:
	bool                                          TicketUsed;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_TicketUsedEvent) == 0x000001, "Wrong alignment on BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_TicketUsedEvent");
static_assert(sizeof(BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_TicketUsedEvent) == 0x000001, "Wrong size on BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_TicketUsedEvent");
static_assert(offsetof(BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_TicketUsedEvent, TicketUsed) == 0x000000, "Member 'BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_TicketUsedEvent::TicketUsed' has a wrong offset!");

// Function BP_ChallengeCondition_GunfightBreakX_LoadoutLocks.BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C.Get Maximum Progress
// 0x0004 (0x0004 - 0x0000)
struct BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_Get_Maximum_Progress final
{
public:
	int32                                         Maximum_Progress;                                  // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_Get_Maximum_Progress) == 0x000004, "Wrong alignment on BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_Get_Maximum_Progress");
static_assert(sizeof(BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_Get_Maximum_Progress) == 0x000004, "Wrong size on BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_Get_Maximum_Progress");
static_assert(offsetof(BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_Get_Maximum_Progress, Maximum_Progress) == 0x000000, "Member 'BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_Get_Maximum_Progress::Maximum_Progress' has a wrong offset!");

// Function BP_ChallengeCondition_GunfightBreakX_LoadoutLocks.BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C.Get Condition Text
// 0x0098 (0x0098 - 0x0000)
struct BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_Get_Condition_Text final
{
public:
	class FText                                   Condition_Text;                                    // 0x0000(0x0018)(Parm, OutParm)
	class FText                                   CallFunc_Get_Condition_Text_Condition_Text;        // 0x0018(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0070(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0080(0x0018)()
};
static_assert(alignof(BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_Get_Condition_Text) == 0x000008, "Wrong alignment on BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_Get_Condition_Text");
static_assert(sizeof(BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_Get_Condition_Text) == 0x000098, "Wrong size on BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_Get_Condition_Text");
static_assert(offsetof(BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_Get_Condition_Text, Condition_Text) == 0x000000, "Member 'BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_Get_Condition_Text::Condition_Text' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_Get_Condition_Text, CallFunc_Get_Condition_Text_Condition_Text) == 0x000018, "Member 'BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_Get_Condition_Text::CallFunc_Get_Condition_Text_Condition_Text' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_Get_Condition_Text, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_Get_Condition_Text::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_Get_Condition_Text, K2Node_MakeArray_Array) == 0x000070, "Member 'BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_Get_Condition_Text::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_Get_Condition_Text, CallFunc_Format_ReturnValue) == 0x000080, "Member 'BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_Get_Condition_Text::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_ChallengeCondition_GunfightBreakX_LoadoutLocks.BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C.Get Title Text
// 0x0030 (0x0030 - 0x0000)
struct BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_Get_Title_Text final
{
public:
	class FText                                   Title_Text;                                        // 0x0000(0x0018)(Parm, OutParm)
	class FText                                   CallFunc_Get_Title_Text_Title_Text;                // 0x0018(0x0018)()
};
static_assert(alignof(BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_Get_Title_Text) == 0x000008, "Wrong alignment on BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_Get_Title_Text");
static_assert(sizeof(BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_Get_Title_Text) == 0x000030, "Wrong size on BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_Get_Title_Text");
static_assert(offsetof(BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_Get_Title_Text, Title_Text) == 0x000000, "Member 'BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_Get_Title_Text::Title_Text' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_Get_Title_Text, CallFunc_Get_Title_Text_Title_Text) == 0x000018, "Member 'BP_ChallengeCondition_GunfightBreakX_LoadoutLocks_C_Get_Title_Text::CallFunc_Get_Title_Text_Title_Text' has a wrong offset!");

}

