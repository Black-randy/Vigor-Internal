#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WinnerScreen_TomatoFight

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_WinnerScreen_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_WinnerScreen_TomatoFight.BP_WinnerScreen_TomatoFight_C
// 0x0028 (0x0348 - 0x0320)
class ABP_WinnerScreen_TomatoFight_C final : public ABP_WinnerScreen_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_WinnerScreen_TomatoFight_C;      // 0x0320(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USpotLightComponent*                    SpotLight3;                                        // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight2;                                        // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight1;                                        // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         Last_Mannequin_Index;                              // 0x0340(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_WinnerScreen_TomatoFight(int32 EntryPoint);
	void ReceiveBeginPlay();
	void WinnerScreenAdded();
	void Set_Highlighted_Player(class AHumanCharacter* HumanCharacter);
	void Cycle_Next_Hightlighted_Player();
	void HideScoreWidget();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_WinnerScreen_TomatoFight_C">();
	}
	static class ABP_WinnerScreen_TomatoFight_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_WinnerScreen_TomatoFight_C>();
	}
};
static_assert(alignof(ABP_WinnerScreen_TomatoFight_C) == 0x000008, "Wrong alignment on ABP_WinnerScreen_TomatoFight_C");
static_assert(sizeof(ABP_WinnerScreen_TomatoFight_C) == 0x000348, "Wrong size on ABP_WinnerScreen_TomatoFight_C");
static_assert(offsetof(ABP_WinnerScreen_TomatoFight_C, UberGraphFrame_BP_WinnerScreen_TomatoFight_C) == 0x000320, "Member 'ABP_WinnerScreen_TomatoFight_C::UberGraphFrame_BP_WinnerScreen_TomatoFight_C' has a wrong offset!");
static_assert(offsetof(ABP_WinnerScreen_TomatoFight_C, SpotLight3) == 0x000328, "Member 'ABP_WinnerScreen_TomatoFight_C::SpotLight3' has a wrong offset!");
static_assert(offsetof(ABP_WinnerScreen_TomatoFight_C, SpotLight2) == 0x000330, "Member 'ABP_WinnerScreen_TomatoFight_C::SpotLight2' has a wrong offset!");
static_assert(offsetof(ABP_WinnerScreen_TomatoFight_C, SpotLight1) == 0x000338, "Member 'ABP_WinnerScreen_TomatoFight_C::SpotLight1' has a wrong offset!");
static_assert(offsetof(ABP_WinnerScreen_TomatoFight_C, Last_Mannequin_Index) == 0x000340, "Member 'ABP_WinnerScreen_TomatoFight_C::Last_Mannequin_Index' has a wrong offset!");

}

