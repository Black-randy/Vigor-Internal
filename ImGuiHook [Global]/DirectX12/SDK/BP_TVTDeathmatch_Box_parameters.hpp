#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TVTDeathmatch_Box

#include "Basic.hpp"

#include "Flame_structs.hpp"


namespace SDK::Params
{

// Function BP_TVTDeathmatch_Box.BP_TVTDeathmatch_Box_C.ExecuteUbergraph_BP_TVTDeathmatch_Box
// 0x0270 (0x0270 - 0x0000)
struct BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameMode_TVTDeathmatch_C*           K2Node_DynamicCast_AsBP_Game_Mode_TVTDeathmatch;   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_UnlinkAndDestroyAllStoredItems_ReturnValue; // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCloudMatchLootbox                     K2Node_CustomEvent_LootboxDefinition;              // 0x0020(0x0030)()
	class UClass*                                 K2Node_CustomEvent_Loot;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsConsumable_Item;         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsWeapon;                  // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_1;                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class UClass*, int32>                    K2Node_MakeMap_Map;                                // 0x0078(0x0050)()
	ECloudMatchLootboxType                        K2Node_CustomEvent_Box_Type;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UClass*                           K2Node_CustomEvent_Weapon_To_Store;                // 0x00D0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Ammo_In_Magazine;               // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class UClass*, int32>                    K2Node_CustomEvent_Backpack_Items_To_Store;        // 0x00E0(0x0050)(ConstParm)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInteractionItemComponent*              K2Node_ComponentBoundEvent_Sender_1;               // 0x0138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_Interacting_Actor_1;    // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Character_C*                        K2Node_DynamicCast_AsBP_Character;                 // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_TVTDeathmatch_C*          K2Node_DynamicCast_AsBP_Character_TVTDeathmatch;   // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AWeapon*                                K2Node_CustomEvent_Swapped_Weapon;                 // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_TVTDeathmatch_C*   K2Node_CustomEvent_Player_Controller;              // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class AItemForBackpack>           K2Node_ComponentBoundEvent_BagItemClass;           // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_Count;                  // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AWeapon*                                K2Node_ComponentBoundEvent_Weapon;                 // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class ABP_TVTDeathmatch_Box_C*          Temp_object_Variable;                              // 0x0190(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_Get_Weapon_Ammo_and_Magazine_Size_Ammo_Item; // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Weapon_Ammo_and_Magazine_Size_Magazine_Size; // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A5[0x3];                                      // 0x01A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class UClass*, int32>                    K2Node_MakeMap_Map_1;                              // 0x01B0(0x0050)()
	TMap<class UClass*, int32>                    K2Node_MakeMap_Map_2;                              // 0x0200(0x0050)()
	TArray<class AWeapon*>                        K2Node_MakeArray_Array;                            // 0x0250(0x0010)(ConstParm, ReferenceParm)
	class UInteractionItemComponent*              K2Node_ComponentBoundEvent_Sender;                 // 0x0260(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_Interacting_Actor;      // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box) == 0x000008, "Wrong alignment on BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box");
static_assert(sizeof(BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box) == 0x000270, "Wrong size on BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box, EntryPoint) == 0x000000, "Member 'BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box, CallFunc_GetGameMode_ReturnValue) == 0x000008, "Member 'BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box, K2Node_DynamicCast_AsBP_Game_Mode_TVTDeathmatch) == 0x000010, "Member 'BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box::K2Node_DynamicCast_AsBP_Game_Mode_TVTDeathmatch' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box, CallFunc_UnlinkAndDestroyAllStoredItems_ReturnValue) == 0x00001C, "Member 'BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box::CallFunc_UnlinkAndDestroyAllStoredItems_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box, K2Node_CustomEvent_LootboxDefinition) == 0x000020, "Member 'BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box::K2Node_CustomEvent_LootboxDefinition' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box, K2Node_CustomEvent_Loot) == 0x000050, "Member 'BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box::K2Node_CustomEvent_Loot' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box, K2Node_ClassDynamicCast_AsConsumable_Item) == 0x000058, "Member 'BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box::K2Node_ClassDynamicCast_AsConsumable_Item' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box, K2Node_ClassDynamicCast_bSuccess) == 0x000060, "Member 'BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box, K2Node_ClassDynamicCast_AsWeapon) == 0x000068, "Member 'BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box::K2Node_ClassDynamicCast_AsWeapon' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box, K2Node_ClassDynamicCast_bSuccess_1) == 0x000070, "Member 'BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box::K2Node_ClassDynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box, K2Node_MakeMap_Map) == 0x000078, "Member 'BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box::K2Node_MakeMap_Map' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box, K2Node_CustomEvent_Box_Type) == 0x0000C8, "Member 'BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box::K2Node_CustomEvent_Box_Type' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box, K2Node_CustomEvent_Weapon_To_Store) == 0x0000D0, "Member 'BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box::K2Node_CustomEvent_Weapon_To_Store' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box, K2Node_CustomEvent_Ammo_In_Magazine) == 0x0000D8, "Member 'BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box::K2Node_CustomEvent_Ammo_In_Magazine' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box, K2Node_CustomEvent_Backpack_Items_To_Store) == 0x0000E0, "Member 'BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box::K2Node_CustomEvent_Backpack_Items_To_Store' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box, K2Node_SwitchEnum_CmpSuccess) == 0x000130, "Member 'BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box, K2Node_ComponentBoundEvent_Sender_1) == 0x000138, "Member 'BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box::K2Node_ComponentBoundEvent_Sender_1' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box, K2Node_ComponentBoundEvent_Interacting_Actor_1) == 0x000140, "Member 'BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box::K2Node_ComponentBoundEvent_Interacting_Actor_1' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box, K2Node_DynamicCast_AsBP_Character) == 0x000148, "Member 'BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box::K2Node_DynamicCast_AsBP_Character' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box, K2Node_DynamicCast_bSuccess_1) == 0x000150, "Member 'BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box, K2Node_DynamicCast_AsBP_Character_TVTDeathmatch) == 0x000158, "Member 'BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box::K2Node_DynamicCast_AsBP_Character_TVTDeathmatch' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box, K2Node_DynamicCast_bSuccess_2) == 0x000160, "Member 'BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box, K2Node_CustomEvent_Swapped_Weapon) == 0x000168, "Member 'BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box::K2Node_CustomEvent_Swapped_Weapon' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box, K2Node_CustomEvent_Player_Controller) == 0x000170, "Member 'BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box::K2Node_CustomEvent_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box, K2Node_ComponentBoundEvent_BagItemClass) == 0x000178, "Member 'BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box::K2Node_ComponentBoundEvent_BagItemClass' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box, K2Node_ComponentBoundEvent_Count) == 0x000180, "Member 'BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box::K2Node_ComponentBoundEvent_Count' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box, K2Node_ComponentBoundEvent_Weapon) == 0x000188, "Member 'BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box::K2Node_ComponentBoundEvent_Weapon' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box, Temp_object_Variable) == 0x000190, "Member 'BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box, CallFunc_Get_Weapon_Ammo_and_Magazine_Size_Ammo_Item) == 0x000198, "Member 'BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box::CallFunc_Get_Weapon_Ammo_and_Magazine_Size_Ammo_Item' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box, CallFunc_Get_Weapon_Ammo_and_Magazine_Size_Magazine_Size) == 0x0001A0, "Member 'BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box::CallFunc_Get_Weapon_Ammo_and_Magazine_Size_Magazine_Size' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0001A4, "Member 'BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box, CallFunc_Multiply_IntInt_ReturnValue) == 0x0001A8, "Member 'BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box, K2Node_MakeMap_Map_1) == 0x0001B0, "Member 'BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box::K2Node_MakeMap_Map_1' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box, K2Node_MakeMap_Map_2) == 0x000200, "Member 'BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box::K2Node_MakeMap_Map_2' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box, K2Node_MakeArray_Array) == 0x000250, "Member 'BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box, K2Node_ComponentBoundEvent_Sender) == 0x000260, "Member 'BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box::K2Node_ComponentBoundEvent_Sender' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box, K2Node_ComponentBoundEvent_Interacting_Actor) == 0x000268, "Member 'BP_TVTDeathmatch_Box_C_ExecuteUbergraph_BP_TVTDeathmatch_Box::K2Node_ComponentBoundEvent_Interacting_Actor' has a wrong offset!");

// Function BP_TVTDeathmatch_Box.BP_TVTDeathmatch_Box_C.BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_2_Interaction Start on Server__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_TVTDeathmatch_Box_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_2_Interaction_Start_on_Server__DelegateSignature final
{
public:
	class UInteractionItemComponent*              Sender;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Interacting_Actor;                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TVTDeathmatch_Box_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_2_Interaction_Start_on_Server__DelegateSignature) == 0x000008, "Wrong alignment on BP_TVTDeathmatch_Box_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_2_Interaction_Start_on_Server__DelegateSignature");
static_assert(sizeof(BP_TVTDeathmatch_Box_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_2_Interaction_Start_on_Server__DelegateSignature) == 0x000010, "Wrong size on BP_TVTDeathmatch_Box_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_2_Interaction_Start_on_Server__DelegateSignature");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_2_Interaction_Start_on_Server__DelegateSignature, Sender) == 0x000000, "Member 'BP_TVTDeathmatch_Box_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_2_Interaction_Start_on_Server__DelegateSignature::Sender' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_2_Interaction_Start_on_Server__DelegateSignature, Interacting_Actor) == 0x000008, "Member 'BP_TVTDeathmatch_Box_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_2_Interaction_Start_on_Server__DelegateSignature::Interacting_Actor' has a wrong offset!");

// Function BP_TVTDeathmatch_Box.BP_TVTDeathmatch_Box_C.Swap For Weapon
// 0x0010 (0x0010 - 0x0000)
struct BP_TVTDeathmatch_Box_C_Swap_For_Weapon final
{
public:
	class AWeapon*                                Swapped_Weapon;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_TVTDeathmatch_C*   Player_Controller;                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TVTDeathmatch_Box_C_Swap_For_Weapon) == 0x000008, "Wrong alignment on BP_TVTDeathmatch_Box_C_Swap_For_Weapon");
static_assert(sizeof(BP_TVTDeathmatch_Box_C_Swap_For_Weapon) == 0x000010, "Wrong size on BP_TVTDeathmatch_Box_C_Swap_For_Weapon");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Swap_For_Weapon, Swapped_Weapon) == 0x000000, "Member 'BP_TVTDeathmatch_Box_C_Swap_For_Weapon::Swapped_Weapon' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Swap_For_Weapon, Player_Controller) == 0x000008, "Member 'BP_TVTDeathmatch_Box_C_Swap_For_Weapon::Player_Controller' has a wrong offset!");

// Function BP_TVTDeathmatch_Box.BP_TVTDeathmatch_Box_C.Initialize Box from spawn point
// 0x0068 (0x0068 - 0x0000)
struct BP_TVTDeathmatch_Box_C_Initialize_Box_from_spawn_point final
{
public:
	ECloudMatchLootboxType                        Box_Type_0;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UClass*                           Weapon_To_Store_0;                                 // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Ammo_in_Magazine_0;                                // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class UClass*, int32>                    Backpack_Items_To_Store_0;                         // 0x0018(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_TVTDeathmatch_Box_C_Initialize_Box_from_spawn_point) == 0x000008, "Wrong alignment on BP_TVTDeathmatch_Box_C_Initialize_Box_from_spawn_point");
static_assert(sizeof(BP_TVTDeathmatch_Box_C_Initialize_Box_from_spawn_point) == 0x000068, "Wrong size on BP_TVTDeathmatch_Box_C_Initialize_Box_from_spawn_point");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Initialize_Box_from_spawn_point, Box_Type_0) == 0x000000, "Member 'BP_TVTDeathmatch_Box_C_Initialize_Box_from_spawn_point::Box_Type_0' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Initialize_Box_from_spawn_point, Weapon_To_Store_0) == 0x000008, "Member 'BP_TVTDeathmatch_Box_C_Initialize_Box_from_spawn_point::Weapon_To_Store_0' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Initialize_Box_from_spawn_point, Ammo_in_Magazine_0) == 0x000010, "Member 'BP_TVTDeathmatch_Box_C_Initialize_Box_from_spawn_point::Ammo_in_Magazine_0' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Initialize_Box_from_spawn_point, Backpack_Items_To_Store_0) == 0x000018, "Member 'BP_TVTDeathmatch_Box_C_Initialize_Box_from_spawn_point::Backpack_Items_To_Store_0' has a wrong offset!");

// Function BP_TVTDeathmatch_Box.BP_TVTDeathmatch_Box_C.Initialize loot
// 0x0008 (0x0008 - 0x0000)
struct BP_TVTDeathmatch_Box_C_Initialize_loot final
{
public:
	class UClass*                                 Loot_0;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TVTDeathmatch_Box_C_Initialize_loot) == 0x000008, "Wrong alignment on BP_TVTDeathmatch_Box_C_Initialize_loot");
static_assert(sizeof(BP_TVTDeathmatch_Box_C_Initialize_loot) == 0x000008, "Wrong size on BP_TVTDeathmatch_Box_C_Initialize_loot");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Initialize_loot, Loot_0) == 0x000000, "Member 'BP_TVTDeathmatch_Box_C_Initialize_loot::Loot_0' has a wrong offset!");

// Function BP_TVTDeathmatch_Box.BP_TVTDeathmatch_Box_C.Initialize lootbox from game mode
// 0x0030 (0x0030 - 0x0000)
struct BP_TVTDeathmatch_Box_C_Initialize_lootbox_from_game_mode final
{
public:
	struct FCloudMatchLootbox                     LootboxDefinition_0;                               // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_TVTDeathmatch_Box_C_Initialize_lootbox_from_game_mode) == 0x000008, "Wrong alignment on BP_TVTDeathmatch_Box_C_Initialize_lootbox_from_game_mode");
static_assert(sizeof(BP_TVTDeathmatch_Box_C_Initialize_lootbox_from_game_mode) == 0x000030, "Wrong size on BP_TVTDeathmatch_Box_C_Initialize_lootbox_from_game_mode");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Initialize_lootbox_from_game_mode, LootboxDefinition_0) == 0x000000, "Member 'BP_TVTDeathmatch_Box_C_Initialize_lootbox_from_game_mode::LootboxDefinition_0' has a wrong offset!");

// Function BP_TVTDeathmatch_Box.BP_TVTDeathmatch_Box_C.BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_3_Interaction End on Server__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_TVTDeathmatch_Box_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_3_Interaction_End_on_Server__DelegateSignature final
{
public:
	class UInteractionItemComponent*              Sender;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Interacting_Actor;                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TVTDeathmatch_Box_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_3_Interaction_End_on_Server__DelegateSignature) == 0x000008, "Wrong alignment on BP_TVTDeathmatch_Box_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_3_Interaction_End_on_Server__DelegateSignature");
static_assert(sizeof(BP_TVTDeathmatch_Box_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_3_Interaction_End_on_Server__DelegateSignature) == 0x000010, "Wrong size on BP_TVTDeathmatch_Box_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_3_Interaction_End_on_Server__DelegateSignature");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_3_Interaction_End_on_Server__DelegateSignature, Sender) == 0x000000, "Member 'BP_TVTDeathmatch_Box_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_3_Interaction_End_on_Server__DelegateSignature::Sender' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_3_Interaction_End_on_Server__DelegateSignature, Interacting_Actor) == 0x000008, "Member 'BP_TVTDeathmatch_Box_C_BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_3_Interaction_End_on_Server__DelegateSignature::Interacting_Actor' has a wrong offset!");

// Function BP_TVTDeathmatch_Box.BP_TVTDeathmatch_Box_C.BndEvt__LootStorage_K2Node_ComponentBoundEvent_1_OnRemovedBagItem__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_TVTDeathmatch_Box_C_BndEvt__LootStorage_K2Node_ComponentBoundEvent_1_OnRemovedBagItem__DelegateSignature final
{
public:
	TSubclassOf<class AItemForBackpack>           BagItemClass;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TVTDeathmatch_Box_C_BndEvt__LootStorage_K2Node_ComponentBoundEvent_1_OnRemovedBagItem__DelegateSignature) == 0x000008, "Wrong alignment on BP_TVTDeathmatch_Box_C_BndEvt__LootStorage_K2Node_ComponentBoundEvent_1_OnRemovedBagItem__DelegateSignature");
static_assert(sizeof(BP_TVTDeathmatch_Box_C_BndEvt__LootStorage_K2Node_ComponentBoundEvent_1_OnRemovedBagItem__DelegateSignature) == 0x000010, "Wrong size on BP_TVTDeathmatch_Box_C_BndEvt__LootStorage_K2Node_ComponentBoundEvent_1_OnRemovedBagItem__DelegateSignature");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_BndEvt__LootStorage_K2Node_ComponentBoundEvent_1_OnRemovedBagItem__DelegateSignature, BagItemClass) == 0x000000, "Member 'BP_TVTDeathmatch_Box_C_BndEvt__LootStorage_K2Node_ComponentBoundEvent_1_OnRemovedBagItem__DelegateSignature::BagItemClass' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_BndEvt__LootStorage_K2Node_ComponentBoundEvent_1_OnRemovedBagItem__DelegateSignature, Count) == 0x000008, "Member 'BP_TVTDeathmatch_Box_C_BndEvt__LootStorage_K2Node_ComponentBoundEvent_1_OnRemovedBagItem__DelegateSignature::Count' has a wrong offset!");

// Function BP_TVTDeathmatch_Box.BP_TVTDeathmatch_Box_C.BndEvt__LootStorage_K2Node_ComponentBoundEvent_0_OnRemovedWeapon__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_TVTDeathmatch_Box_C_BndEvt__LootStorage_K2Node_ComponentBoundEvent_0_OnRemovedWeapon__DelegateSignature final
{
public:
	class AWeapon*                                Weapon;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TVTDeathmatch_Box_C_BndEvt__LootStorage_K2Node_ComponentBoundEvent_0_OnRemovedWeapon__DelegateSignature) == 0x000008, "Wrong alignment on BP_TVTDeathmatch_Box_C_BndEvt__LootStorage_K2Node_ComponentBoundEvent_0_OnRemovedWeapon__DelegateSignature");
static_assert(sizeof(BP_TVTDeathmatch_Box_C_BndEvt__LootStorage_K2Node_ComponentBoundEvent_0_OnRemovedWeapon__DelegateSignature) == 0x000008, "Wrong size on BP_TVTDeathmatch_Box_C_BndEvt__LootStorage_K2Node_ComponentBoundEvent_0_OnRemovedWeapon__DelegateSignature");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_BndEvt__LootStorage_K2Node_ComponentBoundEvent_0_OnRemovedWeapon__DelegateSignature, Weapon) == 0x000000, "Member 'BP_TVTDeathmatch_Box_C_BndEvt__LootStorage_K2Node_ComponentBoundEvent_0_OnRemovedWeapon__DelegateSignature::Weapon' has a wrong offset!");

// Function BP_TVTDeathmatch_Box.BP_TVTDeathmatch_Box_C.Set Box Type
// 0x01A0 (0x01A0 - 0x0000)
struct BP_TVTDeathmatch_Box_C_Set_Box_Type final
{
public:
	ECloudMatchLootboxType                        New_Box_Type;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 Temp_softobject_Variable;                          // 0x0008(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 Temp_softobject_Variable_1;                        // 0x0030(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 Temp_softobject_Variable_2;                        // 0x0058(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 Temp_softobject_Variable_3;                        // 0x0080(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 Temp_softobject_Variable_4;                        // 0x00A8(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 Temp_softobject_Variable_5;                        // 0x00D0(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 Temp_softobject_Variable_6;                        // 0x00F8(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 Temp_softobject_Variable_7;                        // 0x0120(0x0028)(HasGetValueTypeHash)
	ECloudMatchLootboxType                        Temp_byte_Variable;                                // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_State_State_Changed;                  // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14A[0x6];                                      // 0x014A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 K2Node_Select_Default;                             // 0x0150(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftReference_ReturnValue;            // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            K2Node_DynamicCast_AsStatic_Mesh;                  // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TVTDeathmatch_Box_C_Set_Box_Type) == 0x000008, "Wrong alignment on BP_TVTDeathmatch_Box_C_Set_Box_Type");
static_assert(sizeof(BP_TVTDeathmatch_Box_C_Set_Box_Type) == 0x0001A0, "Wrong size on BP_TVTDeathmatch_Box_C_Set_Box_Type");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Set_Box_Type, New_Box_Type) == 0x000000, "Member 'BP_TVTDeathmatch_Box_C_Set_Box_Type::New_Box_Type' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Set_Box_Type, Temp_softobject_Variable) == 0x000008, "Member 'BP_TVTDeathmatch_Box_C_Set_Box_Type::Temp_softobject_Variable' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Set_Box_Type, Temp_softobject_Variable_1) == 0x000030, "Member 'BP_TVTDeathmatch_Box_C_Set_Box_Type::Temp_softobject_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Set_Box_Type, Temp_softobject_Variable_2) == 0x000058, "Member 'BP_TVTDeathmatch_Box_C_Set_Box_Type::Temp_softobject_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Set_Box_Type, Temp_softobject_Variable_3) == 0x000080, "Member 'BP_TVTDeathmatch_Box_C_Set_Box_Type::Temp_softobject_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Set_Box_Type, Temp_softobject_Variable_4) == 0x0000A8, "Member 'BP_TVTDeathmatch_Box_C_Set_Box_Type::Temp_softobject_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Set_Box_Type, Temp_softobject_Variable_5) == 0x0000D0, "Member 'BP_TVTDeathmatch_Box_C_Set_Box_Type::Temp_softobject_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Set_Box_Type, Temp_softobject_Variable_6) == 0x0000F8, "Member 'BP_TVTDeathmatch_Box_C_Set_Box_Type::Temp_softobject_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Set_Box_Type, Temp_softobject_Variable_7) == 0x000120, "Member 'BP_TVTDeathmatch_Box_C_Set_Box_Type::Temp_softobject_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Set_Box_Type, Temp_byte_Variable) == 0x000148, "Member 'BP_TVTDeathmatch_Box_C_Set_Box_Type::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Set_Box_Type, CallFunc_Set_State_State_Changed) == 0x000149, "Member 'BP_TVTDeathmatch_Box_C_Set_Box_Type::CallFunc_Set_State_State_Changed' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Set_Box_Type, K2Node_Select_Default) == 0x000150, "Member 'BP_TVTDeathmatch_Box_C_Set_Box_Type::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Set_Box_Type, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000178, "Member 'BP_TVTDeathmatch_Box_C_Set_Box_Type::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Set_Box_Type, CallFunc_LoadSoftReference_ReturnValue) == 0x000180, "Member 'BP_TVTDeathmatch_Box_C_Set_Box_Type::CallFunc_LoadSoftReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Set_Box_Type, CallFunc_IsValid_ReturnValue) == 0x000188, "Member 'BP_TVTDeathmatch_Box_C_Set_Box_Type::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Set_Box_Type, K2Node_DynamicCast_AsStatic_Mesh) == 0x000190, "Member 'BP_TVTDeathmatch_Box_C_Set_Box_Type::K2Node_DynamicCast_AsStatic_Mesh' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Set_Box_Type, K2Node_DynamicCast_bSuccess) == 0x000198, "Member 'BP_TVTDeathmatch_Box_C_Set_Box_Type::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Set_Box_Type, CallFunc_SetStaticMesh_ReturnValue) == 0x000199, "Member 'BP_TVTDeathmatch_Box_C_Set_Box_Type::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");

// Function BP_TVTDeathmatch_Box.BP_TVTDeathmatch_Box_C.Interaction Ammo
// 0x00A0 (0x00A0 - 0x0000)
struct BP_TVTDeathmatch_Box_C_Interaction_Ammo final
{
public:
	class ABP_Character_TVTDeathmatch_C*          Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_TVTDeathmatch_C*   K2Node_DynamicCast_AsBP_Player_Controller_TVTDeathmatch; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLoadoutInfo                           CallFunc_GetCurrentLoadout_OutLoadout;             // 0x0030(0x0028)()
	bool                                          CallFunc_GetCurrentLoadout_ReturnValue;            // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeaponDescriptor                      CallFunc_Array_Get_Item;                           // 0x0060(0x0020)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86[0x2];                                       // 0x0086(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Get_Weapon_Ammo_and_Magazine_Size_Ammo_Item; // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Weapon_Ammo_and_Magazine_Size_Magazine_Size; // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TVTDeathmatch_Box_C_Interaction_Ammo) == 0x000008, "Wrong alignment on BP_TVTDeathmatch_Box_C_Interaction_Ammo");
static_assert(sizeof(BP_TVTDeathmatch_Box_C_Interaction_Ammo) == 0x0000A0, "Wrong size on BP_TVTDeathmatch_Box_C_Interaction_Ammo");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Interaction_Ammo, Character) == 0x000000, "Member 'BP_TVTDeathmatch_Box_C_Interaction_Ammo::Character' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Interaction_Ammo, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_TVTDeathmatch_Box_C_Interaction_Ammo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Interaction_Ammo, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'BP_TVTDeathmatch_Box_C_Interaction_Ammo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Interaction_Ammo, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_TVTDeathmatch_Box_C_Interaction_Ammo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Interaction_Ammo, CallFunc_GetController_ReturnValue) == 0x000018, "Member 'BP_TVTDeathmatch_Box_C_Interaction_Ammo::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Interaction_Ammo, K2Node_DynamicCast_AsBP_Player_Controller_TVTDeathmatch) == 0x000020, "Member 'BP_TVTDeathmatch_Box_C_Interaction_Ammo::K2Node_DynamicCast_AsBP_Player_Controller_TVTDeathmatch' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Interaction_Ammo, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_TVTDeathmatch_Box_C_Interaction_Ammo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Interaction_Ammo, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'BP_TVTDeathmatch_Box_C_Interaction_Ammo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Interaction_Ammo, CallFunc_GetCurrentLoadout_OutLoadout) == 0x000030, "Member 'BP_TVTDeathmatch_Box_C_Interaction_Ammo::CallFunc_GetCurrentLoadout_OutLoadout' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Interaction_Ammo, CallFunc_GetCurrentLoadout_ReturnValue) == 0x000058, "Member 'BP_TVTDeathmatch_Box_C_Interaction_Ammo::CallFunc_GetCurrentLoadout_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Interaction_Ammo, CallFunc_Array_Get_Item) == 0x000060, "Member 'BP_TVTDeathmatch_Box_C_Interaction_Ammo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Interaction_Ammo, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'BP_TVTDeathmatch_Box_C_Interaction_Ammo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Interaction_Ammo, CallFunc_Less_IntInt_ReturnValue) == 0x000084, "Member 'BP_TVTDeathmatch_Box_C_Interaction_Ammo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Interaction_Ammo, CallFunc_IsValidClass_ReturnValue) == 0x000085, "Member 'BP_TVTDeathmatch_Box_C_Interaction_Ammo::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Interaction_Ammo, CallFunc_Get_Weapon_Ammo_and_Magazine_Size_Ammo_Item) == 0x000088, "Member 'BP_TVTDeathmatch_Box_C_Interaction_Ammo::CallFunc_Get_Weapon_Ammo_and_Magazine_Size_Ammo_Item' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Interaction_Ammo, CallFunc_Get_Weapon_Ammo_and_Magazine_Size_Magazine_Size) == 0x000090, "Member 'BP_TVTDeathmatch_Box_C_Interaction_Ammo::CallFunc_Get_Weapon_Ammo_and_Magazine_Size_Magazine_Size' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Interaction_Ammo, CallFunc_Multiply_IntInt_ReturnValue) == 0x000094, "Member 'BP_TVTDeathmatch_Box_C_Interaction_Ammo::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Interaction_Ammo, CallFunc_Greater_IntInt_ReturnValue) == 0x000098, "Member 'BP_TVTDeathmatch_Box_C_Interaction_Ammo::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_TVTDeathmatch_Box.BP_TVTDeathmatch_Box_C.Interaction Others
// 0x0048 (0x0048 - 0x0000)
struct BP_TVTDeathmatch_Box_C_Interaction_Others final
{
public:
	class ABP_Character_TVTDeathmatch_C*          Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UClass*>                         CallFunc_Map_Keys_Keys;                            // 0x0018(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value;                           // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TVTDeathmatch_Box_C_Interaction_Others) == 0x000008, "Wrong alignment on BP_TVTDeathmatch_Box_C_Interaction_Others");
static_assert(sizeof(BP_TVTDeathmatch_Box_C_Interaction_Others) == 0x000048, "Wrong size on BP_TVTDeathmatch_Box_C_Interaction_Others");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Interaction_Others, Character) == 0x000000, "Member 'BP_TVTDeathmatch_Box_C_Interaction_Others::Character' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Interaction_Others, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_TVTDeathmatch_Box_C_Interaction_Others::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Interaction_Others, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'BP_TVTDeathmatch_Box_C_Interaction_Others::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Interaction_Others, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_TVTDeathmatch_Box_C_Interaction_Others::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Interaction_Others, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_TVTDeathmatch_Box_C_Interaction_Others::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Interaction_Others, CallFunc_Map_Keys_Keys) == 0x000018, "Member 'BP_TVTDeathmatch_Box_C_Interaction_Others::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Interaction_Others, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_TVTDeathmatch_Box_C_Interaction_Others::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Interaction_Others, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_TVTDeathmatch_Box_C_Interaction_Others::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Interaction_Others, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_TVTDeathmatch_Box_C_Interaction_Others::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Interaction_Others, CallFunc_Map_Find_Value) == 0x00003C, "Member 'BP_TVTDeathmatch_Box_C_Interaction_Others::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Interaction_Others, CallFunc_Map_Find_ReturnValue) == 0x000040, "Member 'BP_TVTDeathmatch_Box_C_Interaction_Others::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_TVTDeathmatch_Box.BP_TVTDeathmatch_Box_C.Interaction Weapon
// 0x0058 (0x0058 - 0x0000)
struct BP_TVTDeathmatch_Box_C_Interaction_Weapon final
{
public:
	class ABP_Character_TVTDeathmatch_C*          Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AWeapon*                                CallFunc_Get_Weapons_For_Swap_Weapon_A;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWeapon*                                CallFunc_Get_Weapons_For_Swap_Weapon_X;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanNAND_ReturnValue;                  // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class UClass*>                         CallFunc_Map_Keys_Keys;                            // 0x0028(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value;                           // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TVTDeathmatch_Box_C_Interaction_Weapon) == 0x000008, "Wrong alignment on BP_TVTDeathmatch_Box_C_Interaction_Weapon");
static_assert(sizeof(BP_TVTDeathmatch_Box_C_Interaction_Weapon) == 0x000058, "Wrong size on BP_TVTDeathmatch_Box_C_Interaction_Weapon");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Interaction_Weapon, Character) == 0x000000, "Member 'BP_TVTDeathmatch_Box_C_Interaction_Weapon::Character' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Interaction_Weapon, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_TVTDeathmatch_Box_C_Interaction_Weapon::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Interaction_Weapon, CallFunc_Get_Weapons_For_Swap_Weapon_A) == 0x000010, "Member 'BP_TVTDeathmatch_Box_C_Interaction_Weapon::CallFunc_Get_Weapons_For_Swap_Weapon_A' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Interaction_Weapon, CallFunc_Get_Weapons_For_Swap_Weapon_X) == 0x000018, "Member 'BP_TVTDeathmatch_Box_C_Interaction_Weapon::CallFunc_Get_Weapons_For_Swap_Weapon_X' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Interaction_Weapon, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_TVTDeathmatch_Box_C_Interaction_Weapon::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Interaction_Weapon, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'BP_TVTDeathmatch_Box_C_Interaction_Weapon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Interaction_Weapon, CallFunc_IsValid_ReturnValue_1) == 0x000025, "Member 'BP_TVTDeathmatch_Box_C_Interaction_Weapon::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Interaction_Weapon, CallFunc_BooleanNAND_ReturnValue) == 0x000026, "Member 'BP_TVTDeathmatch_Box_C_Interaction_Weapon::CallFunc_BooleanNAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Interaction_Weapon, CallFunc_IsValid_ReturnValue_2) == 0x000027, "Member 'BP_TVTDeathmatch_Box_C_Interaction_Weapon::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Interaction_Weapon, CallFunc_Map_Keys_Keys) == 0x000028, "Member 'BP_TVTDeathmatch_Box_C_Interaction_Weapon::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Interaction_Weapon, Temp_int_Array_Index_Variable) == 0x000038, "Member 'BP_TVTDeathmatch_Box_C_Interaction_Weapon::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Interaction_Weapon, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'BP_TVTDeathmatch_Box_C_Interaction_Weapon::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Interaction_Weapon, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_TVTDeathmatch_Box_C_Interaction_Weapon::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Interaction_Weapon, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'BP_TVTDeathmatch_Box_C_Interaction_Weapon::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Interaction_Weapon, CallFunc_Map_Find_Value) == 0x00004C, "Member 'BP_TVTDeathmatch_Box_C_Interaction_Weapon::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Interaction_Weapon, CallFunc_Map_Find_ReturnValue) == 0x000050, "Member 'BP_TVTDeathmatch_Box_C_Interaction_Weapon::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Interaction_Weapon, CallFunc_IsValidClass_ReturnValue) == 0x000051, "Member 'BP_TVTDeathmatch_Box_C_Interaction_Weapon::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");

// Function BP_TVTDeathmatch_Box.BP_TVTDeathmatch_Box_C.Get Stored Weapon Slot Type
// 0x0458 (0x0458 - 0x0000)
struct BP_TVTDeathmatch_Box_C_Get_Stored_Weapon_Slot_Type final
{
public:
	EWeaponInventoryType                          Slot_Type;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             CallFunc_DataProviderFindTableByAssetTable_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0018(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFirearmWeaponConfiguration            CallFunc_GetDataTableRowFromName_OutRow;           // 0x0038(0x0418)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0451(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TVTDeathmatch_Box_C_Get_Stored_Weapon_Slot_Type) == 0x000008, "Wrong alignment on BP_TVTDeathmatch_Box_C_Get_Stored_Weapon_Slot_Type");
static_assert(sizeof(BP_TVTDeathmatch_Box_C_Get_Stored_Weapon_Slot_Type) == 0x000458, "Wrong size on BP_TVTDeathmatch_Box_C_Get_Stored_Weapon_Slot_Type");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Get_Stored_Weapon_Slot_Type, Slot_Type) == 0x000000, "Member 'BP_TVTDeathmatch_Box_C_Get_Stored_Weapon_Slot_Type::Slot_Type' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Get_Stored_Weapon_Slot_Type, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_TVTDeathmatch_Box_C_Get_Stored_Weapon_Slot_Type::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Get_Stored_Weapon_Slot_Type, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_TVTDeathmatch_Box_C_Get_Stored_Weapon_Slot_Type::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Get_Stored_Weapon_Slot_Type, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_TVTDeathmatch_Box_C_Get_Stored_Weapon_Slot_Type::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Get_Stored_Weapon_Slot_Type, CallFunc_DataProviderFindTableByAssetTable_ReturnValue) == 0x000010, "Member 'BP_TVTDeathmatch_Box_C_Get_Stored_Weapon_Slot_Type::CallFunc_DataProviderFindTableByAssetTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Get_Stored_Weapon_Slot_Type, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000018, "Member 'BP_TVTDeathmatch_Box_C_Get_Stored_Weapon_Slot_Type::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Get_Stored_Weapon_Slot_Type, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_TVTDeathmatch_Box_C_Get_Stored_Weapon_Slot_Type::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Get_Stored_Weapon_Slot_Type, CallFunc_Array_Get_Item) == 0x00002C, "Member 'BP_TVTDeathmatch_Box_C_Get_Stored_Weapon_Slot_Type::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Get_Stored_Weapon_Slot_Type, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'BP_TVTDeathmatch_Box_C_Get_Stored_Weapon_Slot_Type::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Get_Stored_Weapon_Slot_Type, CallFunc_GetDataTableRowFromName_OutRow) == 0x000038, "Member 'BP_TVTDeathmatch_Box_C_Get_Stored_Weapon_Slot_Type::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Get_Stored_Weapon_Slot_Type, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000450, "Member 'BP_TVTDeathmatch_Box_C_Get_Stored_Weapon_Slot_Type::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Get_Stored_Weapon_Slot_Type, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000451, "Member 'BP_TVTDeathmatch_Box_C_Get_Stored_Weapon_Slot_Type::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");

// Function BP_TVTDeathmatch_Box.BP_TVTDeathmatch_Box_C.Get Weapons For Swap
// 0x0070 (0x0070 - 0x0000)
struct BP_TVTDeathmatch_Box_C_Get_Weapons_For_Swap final
{
public:
	class ABP_Character_TVTDeathmatch_C*          Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWeapon*                                Weapon_A;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWeapon*                                Weapon_X;                                          // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 WeaponX;                                           // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 WeaponA;                                           // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ULinkedWeapons*                         CallFunc_GetWeapons_ReturnValue;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWeapon*                                CallFunc_GetWeapon_ReturnValue;                    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWeapon*                                CallFunc_GetWeapon_ReturnValue_1;                  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AWeapon*                                CallFunc_GetWeapon_ReturnValue_2;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanNAND_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AWeapon*                                CallFunc_GetWeapon_ReturnValue_3;                  // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeaponInventoryType                          CallFunc_Get_Stored_Weapon_Slot_Type_Slot_Type;    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanNAND_ReturnValue_1;                // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TVTDeathmatch_Box_C_Get_Weapons_For_Swap) == 0x000008, "Wrong alignment on BP_TVTDeathmatch_Box_C_Get_Weapons_For_Swap");
static_assert(sizeof(BP_TVTDeathmatch_Box_C_Get_Weapons_For_Swap) == 0x000070, "Wrong size on BP_TVTDeathmatch_Box_C_Get_Weapons_For_Swap");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Get_Weapons_For_Swap, Character) == 0x000000, "Member 'BP_TVTDeathmatch_Box_C_Get_Weapons_For_Swap::Character' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Get_Weapons_For_Swap, Weapon_A) == 0x000008, "Member 'BP_TVTDeathmatch_Box_C_Get_Weapons_For_Swap::Weapon_A' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Get_Weapons_For_Swap, Weapon_X) == 0x000010, "Member 'BP_TVTDeathmatch_Box_C_Get_Weapons_For_Swap::Weapon_X' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Get_Weapons_For_Swap, WeaponX) == 0x000018, "Member 'BP_TVTDeathmatch_Box_C_Get_Weapons_For_Swap::WeaponX' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Get_Weapons_For_Swap, WeaponA) == 0x000020, "Member 'BP_TVTDeathmatch_Box_C_Get_Weapons_For_Swap::WeaponA' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Get_Weapons_For_Swap, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_TVTDeathmatch_Box_C_Get_Weapons_For_Swap::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Get_Weapons_For_Swap, CallFunc_IsValid_ReturnValue_1) == 0x000029, "Member 'BP_TVTDeathmatch_Box_C_Get_Weapons_For_Swap::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Get_Weapons_For_Swap, CallFunc_GetWeapons_ReturnValue) == 0x000030, "Member 'BP_TVTDeathmatch_Box_C_Get_Weapons_For_Swap::CallFunc_GetWeapons_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Get_Weapons_For_Swap, CallFunc_GetWeapon_ReturnValue) == 0x000038, "Member 'BP_TVTDeathmatch_Box_C_Get_Weapons_For_Swap::CallFunc_GetWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Get_Weapons_For_Swap, CallFunc_GetWeapon_ReturnValue_1) == 0x000040, "Member 'BP_TVTDeathmatch_Box_C_Get_Weapons_For_Swap::CallFunc_GetWeapon_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Get_Weapons_For_Swap, CallFunc_IsValid_ReturnValue_2) == 0x000048, "Member 'BP_TVTDeathmatch_Box_C_Get_Weapons_For_Swap::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Get_Weapons_For_Swap, CallFunc_IsValid_ReturnValue_3) == 0x000049, "Member 'BP_TVTDeathmatch_Box_C_Get_Weapons_For_Swap::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Get_Weapons_For_Swap, CallFunc_GetWeapon_ReturnValue_2) == 0x000050, "Member 'BP_TVTDeathmatch_Box_C_Get_Weapons_For_Swap::CallFunc_GetWeapon_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Get_Weapons_For_Swap, CallFunc_BooleanNAND_ReturnValue) == 0x000058, "Member 'BP_TVTDeathmatch_Box_C_Get_Weapons_For_Swap::CallFunc_BooleanNAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Get_Weapons_For_Swap, CallFunc_IsValid_ReturnValue_4) == 0x000059, "Member 'BP_TVTDeathmatch_Box_C_Get_Weapons_For_Swap::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Get_Weapons_For_Swap, CallFunc_GetWeapon_ReturnValue_3) == 0x000060, "Member 'BP_TVTDeathmatch_Box_C_Get_Weapons_For_Swap::CallFunc_GetWeapon_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Get_Weapons_For_Swap, CallFunc_Get_Stored_Weapon_Slot_Type_Slot_Type) == 0x000068, "Member 'BP_TVTDeathmatch_Box_C_Get_Weapons_For_Swap::CallFunc_Get_Stored_Weapon_Slot_Type_Slot_Type' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Get_Weapons_For_Swap, K2Node_SwitchEnum_CmpSuccess) == 0x000069, "Member 'BP_TVTDeathmatch_Box_C_Get_Weapons_For_Swap::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Get_Weapons_For_Swap, CallFunc_IsValid_ReturnValue_5) == 0x00006A, "Member 'BP_TVTDeathmatch_Box_C_Get_Weapons_For_Swap::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Get_Weapons_For_Swap, CallFunc_BooleanNAND_ReturnValue_1) == 0x00006B, "Member 'BP_TVTDeathmatch_Box_C_Get_Weapons_For_Swap::CallFunc_BooleanNAND_ReturnValue_1' has a wrong offset!");

// Function BP_TVTDeathmatch_Box.BP_TVTDeathmatch_Box_C.Swap Weapons
// 0x0650 (0x0650 - 0x0000)
struct BP_TVTDeathmatch_Box_C_Swap_Weapons final
{
public:
	class AWeapon*                                New_Swapped_Weapon;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_TVTDeathmatch_C*   Player_Controller;                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Ammo_In_Swapped_Weapon_Magazine;                   // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FItemSlot>                      Backpack_Items;                                    // 0x0018(0x0010)(Edit, BlueprintVisible)
	TArray<struct FWeaponDescriptor>              Weapon_Descriptors;                                // 0x0028(0x0010)(Edit, BlueprintVisible)
	bool                                          Weapon_Already_Removed;                            // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 New_Weapon_Class;                                  // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLoadoutInfo                           CallFunc_GetCurrentLoadout_OutLoadout;             // 0x0050(0x0028)()
	bool                                          CallFunc_GetCurrentLoadout_ReturnValue;            // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerCharacter*                  CallFunc_GetHumanCharacter_ReturnValue;            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFirearmWeaponConfiguration            CallFunc_GetWeaponData_ReturnValue;                // 0x0090(0x0418)(ConstParm)
	class ABP_Character_TVTDeathmatch_C*          K2Node_DynamicCast_AsBP_Character_TVTDeathmatch;   // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B1[0x7];                                      // 0x04B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UClass*>                         CallFunc_Map_Keys_Keys;                            // 0x04B8(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x04C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x04CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x04D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x04D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D5[0x3];                                      // 0x04D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x04D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x04DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x04E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value;                           // 0x04E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x04EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4ED[0x3];                                      // 0x04ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x04F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x04F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F5[0x3];                                      // 0x04F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x04F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x04FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWeaponDescriptor                      CallFunc_Array_Get_Item_1;                         // 0x0500(0x0020)(NoDestructor)
	struct FWeaponDescriptor                      K2Node_MakeStruct_WeaponDescriptor;                // 0x0520(0x0020)(NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0540(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0544(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0548(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x054C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_54D[0x3];                                      // 0x054D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FItemSlot                              CallFunc_Array_Get_Item_2;                         // 0x0550(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0560(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_564[0x4];                                      // 0x0564(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsItem_for_Backpack;       // 0x0568(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0570(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0571(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_572[0x6];                                      // 0x0572(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FItemSlot>                      K2Node_MakeArray_Array;                            // 0x0578(0x0010)(ReferenceParm)
	TArray<struct FWeaponDescriptor>              K2Node_MakeArray_Array_1;                          // 0x0588(0x0010)(ReferenceParm)
	struct FLoadoutInfo                           K2Node_MakeStruct_LoadoutInfo;                     // 0x0598(0x0028)()
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x05C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ApplyLoadoutInfo_ReturnValue;             // 0x05C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ClassClass_ReturnValue;          // 0x05C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C6[0x2];                                      // 0x05C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Get_Weapon_Ammo_and_Magazine_Size_Ammo_Item; // 0x05C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Weapon_Ammo_and_Magazine_Size_Magazine_Size; // 0x05D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x05D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D5[0x3];                                      // 0x05D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class UClass*, int32>                    K2Node_MakeMap_Map;                                // 0x05D8(0x0050)(ConstParm)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0628(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62C[0x4];                                      // 0x062C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeaponDescriptor                      CallFunc_Array_Get_Item_3;                         // 0x0630(0x0020)(NoDestructor)
};
static_assert(alignof(BP_TVTDeathmatch_Box_C_Swap_Weapons) == 0x000008, "Wrong alignment on BP_TVTDeathmatch_Box_C_Swap_Weapons");
static_assert(sizeof(BP_TVTDeathmatch_Box_C_Swap_Weapons) == 0x000650, "Wrong size on BP_TVTDeathmatch_Box_C_Swap_Weapons");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Swap_Weapons, New_Swapped_Weapon) == 0x000000, "Member 'BP_TVTDeathmatch_Box_C_Swap_Weapons::New_Swapped_Weapon' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Swap_Weapons, Player_Controller) == 0x000008, "Member 'BP_TVTDeathmatch_Box_C_Swap_Weapons::Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Swap_Weapons, Ammo_In_Swapped_Weapon_Magazine) == 0x000010, "Member 'BP_TVTDeathmatch_Box_C_Swap_Weapons::Ammo_In_Swapped_Weapon_Magazine' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Swap_Weapons, Backpack_Items) == 0x000018, "Member 'BP_TVTDeathmatch_Box_C_Swap_Weapons::Backpack_Items' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Swap_Weapons, Weapon_Descriptors) == 0x000028, "Member 'BP_TVTDeathmatch_Box_C_Swap_Weapons::Weapon_Descriptors' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Swap_Weapons, Weapon_Already_Removed) == 0x000038, "Member 'BP_TVTDeathmatch_Box_C_Swap_Weapons::Weapon_Already_Removed' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Swap_Weapons, New_Weapon_Class) == 0x000040, "Member 'BP_TVTDeathmatch_Box_C_Swap_Weapons::New_Weapon_Class' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Swap_Weapons, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'BP_TVTDeathmatch_Box_C_Swap_Weapons::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Swap_Weapons, CallFunc_GetCurrentLoadout_OutLoadout) == 0x000050, "Member 'BP_TVTDeathmatch_Box_C_Swap_Weapons::CallFunc_GetCurrentLoadout_OutLoadout' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Swap_Weapons, CallFunc_GetCurrentLoadout_ReturnValue) == 0x000078, "Member 'BP_TVTDeathmatch_Box_C_Swap_Weapons::CallFunc_GetCurrentLoadout_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Swap_Weapons, CallFunc_Add_IntInt_ReturnValue) == 0x00007C, "Member 'BP_TVTDeathmatch_Box_C_Swap_Weapons::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Swap_Weapons, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'BP_TVTDeathmatch_Box_C_Swap_Weapons::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Swap_Weapons, CallFunc_GetHumanCharacter_ReturnValue) == 0x000088, "Member 'BP_TVTDeathmatch_Box_C_Swap_Weapons::CallFunc_GetHumanCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Swap_Weapons, CallFunc_GetWeaponData_ReturnValue) == 0x000090, "Member 'BP_TVTDeathmatch_Box_C_Swap_Weapons::CallFunc_GetWeaponData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Swap_Weapons, K2Node_DynamicCast_AsBP_Character_TVTDeathmatch) == 0x0004A8, "Member 'BP_TVTDeathmatch_Box_C_Swap_Weapons::K2Node_DynamicCast_AsBP_Character_TVTDeathmatch' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Swap_Weapons, K2Node_DynamicCast_bSuccess) == 0x0004B0, "Member 'BP_TVTDeathmatch_Box_C_Swap_Weapons::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Swap_Weapons, CallFunc_Map_Keys_Keys) == 0x0004B8, "Member 'BP_TVTDeathmatch_Box_C_Swap_Weapons::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Swap_Weapons, Temp_int_Loop_Counter_Variable_1) == 0x0004C8, "Member 'BP_TVTDeathmatch_Box_C_Swap_Weapons::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Swap_Weapons, CallFunc_Array_Length_ReturnValue_1) == 0x0004CC, "Member 'BP_TVTDeathmatch_Box_C_Swap_Weapons::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Swap_Weapons, CallFunc_Add_IntInt_ReturnValue_1) == 0x0004D0, "Member 'BP_TVTDeathmatch_Box_C_Swap_Weapons::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Swap_Weapons, CallFunc_Less_IntInt_ReturnValue) == 0x0004D4, "Member 'BP_TVTDeathmatch_Box_C_Swap_Weapons::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Swap_Weapons, Temp_int_Array_Index_Variable) == 0x0004D8, "Member 'BP_TVTDeathmatch_Box_C_Swap_Weapons::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Swap_Weapons, Temp_int_Array_Index_Variable_1) == 0x0004DC, "Member 'BP_TVTDeathmatch_Box_C_Swap_Weapons::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Swap_Weapons, CallFunc_Array_Get_Item) == 0x0004E0, "Member 'BP_TVTDeathmatch_Box_C_Swap_Weapons::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Swap_Weapons, CallFunc_Map_Find_Value) == 0x0004E8, "Member 'BP_TVTDeathmatch_Box_C_Swap_Weapons::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Swap_Weapons, CallFunc_Map_Find_ReturnValue) == 0x0004EC, "Member 'BP_TVTDeathmatch_Box_C_Swap_Weapons::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Swap_Weapons, Temp_int_Loop_Counter_Variable_2) == 0x0004F0, "Member 'BP_TVTDeathmatch_Box_C_Swap_Weapons::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Swap_Weapons, CallFunc_Less_IntInt_ReturnValue_1) == 0x0004F4, "Member 'BP_TVTDeathmatch_Box_C_Swap_Weapons::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Swap_Weapons, CallFunc_Add_IntInt_ReturnValue_2) == 0x0004F8, "Member 'BP_TVTDeathmatch_Box_C_Swap_Weapons::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Swap_Weapons, Temp_int_Array_Index_Variable_2) == 0x0004FC, "Member 'BP_TVTDeathmatch_Box_C_Swap_Weapons::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Swap_Weapons, CallFunc_Array_Get_Item_1) == 0x000500, "Member 'BP_TVTDeathmatch_Box_C_Swap_Weapons::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Swap_Weapons, K2Node_MakeStruct_WeaponDescriptor) == 0x000520, "Member 'BP_TVTDeathmatch_Box_C_Swap_Weapons::K2Node_MakeStruct_WeaponDescriptor' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Swap_Weapons, Temp_int_Loop_Counter_Variable_3) == 0x000540, "Member 'BP_TVTDeathmatch_Box_C_Swap_Weapons::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Swap_Weapons, CallFunc_Add_IntInt_ReturnValue_3) == 0x000544, "Member 'BP_TVTDeathmatch_Box_C_Swap_Weapons::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Swap_Weapons, CallFunc_Array_Length_ReturnValue_2) == 0x000548, "Member 'BP_TVTDeathmatch_Box_C_Swap_Weapons::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Swap_Weapons, CallFunc_Less_IntInt_ReturnValue_2) == 0x00054C, "Member 'BP_TVTDeathmatch_Box_C_Swap_Weapons::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Swap_Weapons, CallFunc_Array_Get_Item_2) == 0x000550, "Member 'BP_TVTDeathmatch_Box_C_Swap_Weapons::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Swap_Weapons, CallFunc_Array_Length_ReturnValue_3) == 0x000560, "Member 'BP_TVTDeathmatch_Box_C_Swap_Weapons::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Swap_Weapons, K2Node_ClassDynamicCast_AsItem_for_Backpack) == 0x000568, "Member 'BP_TVTDeathmatch_Box_C_Swap_Weapons::K2Node_ClassDynamicCast_AsItem_for_Backpack' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Swap_Weapons, K2Node_ClassDynamicCast_bSuccess) == 0x000570, "Member 'BP_TVTDeathmatch_Box_C_Swap_Weapons::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Swap_Weapons, CallFunc_Less_IntInt_ReturnValue_3) == 0x000571, "Member 'BP_TVTDeathmatch_Box_C_Swap_Weapons::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Swap_Weapons, K2Node_MakeArray_Array) == 0x000578, "Member 'BP_TVTDeathmatch_Box_C_Swap_Weapons::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Swap_Weapons, K2Node_MakeArray_Array_1) == 0x000588, "Member 'BP_TVTDeathmatch_Box_C_Swap_Weapons::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Swap_Weapons, K2Node_MakeStruct_LoadoutInfo) == 0x000598, "Member 'BP_TVTDeathmatch_Box_C_Swap_Weapons::K2Node_MakeStruct_LoadoutInfo' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Swap_Weapons, CallFunc_Array_Add_ReturnValue) == 0x0005C0, "Member 'BP_TVTDeathmatch_Box_C_Swap_Weapons::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Swap_Weapons, CallFunc_ApplyLoadoutInfo_ReturnValue) == 0x0005C4, "Member 'BP_TVTDeathmatch_Box_C_Swap_Weapons::CallFunc_ApplyLoadoutInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Swap_Weapons, CallFunc_NotEqual_ClassClass_ReturnValue) == 0x0005C5, "Member 'BP_TVTDeathmatch_Box_C_Swap_Weapons::CallFunc_NotEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Swap_Weapons, CallFunc_Get_Weapon_Ammo_and_Magazine_Size_Ammo_Item) == 0x0005C8, "Member 'BP_TVTDeathmatch_Box_C_Swap_Weapons::CallFunc_Get_Weapon_Ammo_and_Magazine_Size_Ammo_Item' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Swap_Weapons, CallFunc_Get_Weapon_Ammo_and_Magazine_Size_Magazine_Size) == 0x0005D0, "Member 'BP_TVTDeathmatch_Box_C_Swap_Weapons::CallFunc_Get_Weapon_Ammo_and_Magazine_Size_Magazine_Size' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Swap_Weapons, CallFunc_BooleanOR_ReturnValue) == 0x0005D4, "Member 'BP_TVTDeathmatch_Box_C_Swap_Weapons::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Swap_Weapons, K2Node_MakeMap_Map) == 0x0005D8, "Member 'BP_TVTDeathmatch_Box_C_Swap_Weapons::K2Node_MakeMap_Map' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Swap_Weapons, Temp_int_Array_Index_Variable_3) == 0x000628, "Member 'BP_TVTDeathmatch_Box_C_Swap_Weapons::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Swap_Weapons, CallFunc_Array_Get_Item_3) == 0x000630, "Member 'BP_TVTDeathmatch_Box_C_Swap_Weapons::CallFunc_Array_Get_Item_3' has a wrong offset!");

// Function BP_TVTDeathmatch_Box.BP_TVTDeathmatch_Box_C.Insert Weapon to Invetory
// 0x0038 (0x0038 - 0x0000)
struct BP_TVTDeathmatch_Box_C_Insert_Weapon_to_Invetory final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeaponDescriptor                      K2Node_MakeStruct_WeaponDescriptor;                // 0x0008(0x0020)(NoDestructor)
	class AWeapon*                                CallFunc_CreateWeaponFromDescriptor_ReturnValue;   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BlueprintStoreObject_ReturnValue;         // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TVTDeathmatch_Box_C_Insert_Weapon_to_Invetory) == 0x000008, "Wrong alignment on BP_TVTDeathmatch_Box_C_Insert_Weapon_to_Invetory");
static_assert(sizeof(BP_TVTDeathmatch_Box_C_Insert_Weapon_to_Invetory) == 0x000038, "Wrong size on BP_TVTDeathmatch_Box_C_Insert_Weapon_to_Invetory");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Insert_Weapon_to_Invetory, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_TVTDeathmatch_Box_C_Insert_Weapon_to_Invetory::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Insert_Weapon_to_Invetory, CallFunc_IsValidClass_ReturnValue) == 0x000001, "Member 'BP_TVTDeathmatch_Box_C_Insert_Weapon_to_Invetory::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Insert_Weapon_to_Invetory, K2Node_MakeStruct_WeaponDescriptor) == 0x000008, "Member 'BP_TVTDeathmatch_Box_C_Insert_Weapon_to_Invetory::K2Node_MakeStruct_WeaponDescriptor' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Insert_Weapon_to_Invetory, CallFunc_CreateWeaponFromDescriptor_ReturnValue) == 0x000028, "Member 'BP_TVTDeathmatch_Box_C_Insert_Weapon_to_Invetory::CallFunc_CreateWeaponFromDescriptor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Insert_Weapon_to_Invetory, CallFunc_IsValid_ReturnValue_1) == 0x000030, "Member 'BP_TVTDeathmatch_Box_C_Insert_Weapon_to_Invetory::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Insert_Weapon_to_Invetory, CallFunc_BlueprintStoreObject_ReturnValue) == 0x000031, "Member 'BP_TVTDeathmatch_Box_C_Insert_Weapon_to_Invetory::CallFunc_BlueprintStoreObject_ReturnValue' has a wrong offset!");

// Function BP_TVTDeathmatch_Box.BP_TVTDeathmatch_Box_C.Insert Resources to Invetory
// 0x0040 (0x0040 - 0x0000)
struct BP_TVTDeathmatch_Box_C_Insert_Resources_to_Invetory final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UClass*>                         CallFunc_Map_Keys_Keys;                            // 0x0008(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value;                           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_StoreResource_ReturnValue;                // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TVTDeathmatch_Box_C_Insert_Resources_to_Invetory) == 0x000008, "Wrong alignment on BP_TVTDeathmatch_Box_C_Insert_Resources_to_Invetory");
static_assert(sizeof(BP_TVTDeathmatch_Box_C_Insert_Resources_to_Invetory) == 0x000040, "Wrong size on BP_TVTDeathmatch_Box_C_Insert_Resources_to_Invetory");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Insert_Resources_to_Invetory, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_TVTDeathmatch_Box_C_Insert_Resources_to_Invetory::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Insert_Resources_to_Invetory, CallFunc_Map_Keys_Keys) == 0x000008, "Member 'BP_TVTDeathmatch_Box_C_Insert_Resources_to_Invetory::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Insert_Resources_to_Invetory, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_TVTDeathmatch_Box_C_Insert_Resources_to_Invetory::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Insert_Resources_to_Invetory, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_TVTDeathmatch_Box_C_Insert_Resources_to_Invetory::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Insert_Resources_to_Invetory, CallFunc_Map_Find_Value) == 0x000028, "Member 'BP_TVTDeathmatch_Box_C_Insert_Resources_to_Invetory::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Insert_Resources_to_Invetory, CallFunc_Map_Find_ReturnValue) == 0x00002C, "Member 'BP_TVTDeathmatch_Box_C_Insert_Resources_to_Invetory::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Insert_Resources_to_Invetory, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_TVTDeathmatch_Box_C_Insert_Resources_to_Invetory::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Insert_Resources_to_Invetory, CallFunc_StoreResource_ReturnValue) == 0x000034, "Member 'BP_TVTDeathmatch_Box_C_Insert_Resources_to_Invetory::CallFunc_StoreResource_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Insert_Resources_to_Invetory, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_TVTDeathmatch_Box_C_Insert_Resources_to_Invetory::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Insert_Resources_to_Invetory, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'BP_TVTDeathmatch_Box_C_Insert_Resources_to_Invetory::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Insert_Resources_to_Invetory, CallFunc_IsValid_ReturnValue) == 0x00003D, "Member 'BP_TVTDeathmatch_Box_C_Insert_Resources_to_Invetory::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Insert_Resources_to_Invetory, CallFunc_IsValid_ReturnValue_1) == 0x00003E, "Member 'BP_TVTDeathmatch_Box_C_Insert_Resources_to_Invetory::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_TVTDeathmatch_Box.BP_TVTDeathmatch_Box_C.Insert Weapon To Storage
// 0x0050 (0x0050 - 0x0000)
struct BP_TVTDeathmatch_Box_C_Insert_Weapon_To_Storage final
{
public:
	class UClass*                                 Weapon_Type;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeaponDescriptor                      K2Node_MakeStruct_WeaponDescriptor;                // 0x0010(0x0020)(NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AWeapon*                                CallFunc_CreateWeaponFromDescriptor_ReturnValue;   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BlueprintStoreObject_ReturnValue;         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B[0x1];                                       // 0x004B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TVTDeathmatch_Box_C_Insert_Weapon_To_Storage) == 0x000008, "Wrong alignment on BP_TVTDeathmatch_Box_C_Insert_Weapon_To_Storage");
static_assert(sizeof(BP_TVTDeathmatch_Box_C_Insert_Weapon_To_Storage) == 0x000050, "Wrong size on BP_TVTDeathmatch_Box_C_Insert_Weapon_To_Storage");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Insert_Weapon_To_Storage, Weapon_Type) == 0x000000, "Member 'BP_TVTDeathmatch_Box_C_Insert_Weapon_To_Storage::Weapon_Type' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Insert_Weapon_To_Storage, Count) == 0x000008, "Member 'BP_TVTDeathmatch_Box_C_Insert_Weapon_To_Storage::Count' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Insert_Weapon_To_Storage, K2Node_MakeStruct_WeaponDescriptor) == 0x000010, "Member 'BP_TVTDeathmatch_Box_C_Insert_Weapon_To_Storage::K2Node_MakeStruct_WeaponDescriptor' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Insert_Weapon_To_Storage, CallFunc_IsValidClass_ReturnValue) == 0x000030, "Member 'BP_TVTDeathmatch_Box_C_Insert_Weapon_To_Storage::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Insert_Weapon_To_Storage, CallFunc_CreateWeaponFromDescriptor_ReturnValue) == 0x000038, "Member 'BP_TVTDeathmatch_Box_C_Insert_Weapon_To_Storage::CallFunc_CreateWeaponFromDescriptor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Insert_Weapon_To_Storage, CallFunc_BlueprintStoreObject_ReturnValue) == 0x000040, "Member 'BP_TVTDeathmatch_Box_C_Insert_Weapon_To_Storage::CallFunc_BlueprintStoreObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Insert_Weapon_To_Storage, Temp_int_Variable) == 0x000044, "Member 'BP_TVTDeathmatch_Box_C_Insert_Weapon_To_Storage::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Insert_Weapon_To_Storage, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BP_TVTDeathmatch_Box_C_Insert_Weapon_To_Storage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Insert_Weapon_To_Storage, CallFunc_IsValid_ReturnValue_1) == 0x000049, "Member 'BP_TVTDeathmatch_Box_C_Insert_Weapon_To_Storage::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Insert_Weapon_To_Storage, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00004A, "Member 'BP_TVTDeathmatch_Box_C_Insert_Weapon_To_Storage::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_Insert_Weapon_To_Storage, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'BP_TVTDeathmatch_Box_C_Insert_Weapon_To_Storage::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_TVTDeathmatch_Box.BP_TVTDeathmatch_Box_C.InitializeLootFromCloud
// 0x0160 (0x0160 - 0x0000)
struct BP_TVTDeathmatch_Box_C_InitializeLootFromCloud final
{
public:
	struct FCloudMatchLootbox                     LootboxDefinition_0;                               // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm)
	TArray<struct FCloudMatchWeapon>              TempWeapons;                                       // 0x0030(0x0010)(Edit, BlueprintVisible)
	TArray<struct FCloudItemInfo>                 TempItems;                                         // 0x0040(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0067(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCloudMatchWeapon                      CallFunc_Array_Get_Item;                           // 0x0070(0x0020)()
	struct FCloudItemInfo                         CallFunc_Array_Get_Item_1;                         // 0x0090(0x0018)()
	class UClass*                                 K2Node_ClassDynamicCast_AsItem_for_Backpack;       // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsWeapon;                  // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_1;                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value;                           // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_Get_Weapon_Ammo_and_Magazine_Size_Ammo_Item; // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Weapon_Ammo_and_Magazine_Size_Magazine_Size; // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x00DC(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_1;                           // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_105[0x3];                                      // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCloudMatchWeaponGroup                 CallFunc_Array_Get_Item_2;                         // 0x0108(0x0010)()
	int32                                         CallFunc_Map_Find_Value_1;                         // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11D[0x3];                                      // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_2;                           // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12D[0x3];                                      // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_135[0x3];                                      // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameState_TVTDeathmatch_C*          K2Node_DynamicCast_AsBP_Game_State_TVTDeathmatch;  // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCloudItemInfo>                 CallFunc_Get_Weight_Based_Random_Items_PickedItems; // 0x0150(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_TVTDeathmatch_Box_C_InitializeLootFromCloud) == 0x000008, "Wrong alignment on BP_TVTDeathmatch_Box_C_InitializeLootFromCloud");
static_assert(sizeof(BP_TVTDeathmatch_Box_C_InitializeLootFromCloud) == 0x000160, "Wrong size on BP_TVTDeathmatch_Box_C_InitializeLootFromCloud");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_InitializeLootFromCloud, LootboxDefinition_0) == 0x000000, "Member 'BP_TVTDeathmatch_Box_C_InitializeLootFromCloud::LootboxDefinition_0' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_InitializeLootFromCloud, TempWeapons) == 0x000030, "Member 'BP_TVTDeathmatch_Box_C_InitializeLootFromCloud::TempWeapons' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_InitializeLootFromCloud, TempItems) == 0x000040, "Member 'BP_TVTDeathmatch_Box_C_InitializeLootFromCloud::TempItems' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_InitializeLootFromCloud, Temp_int_Array_Index_Variable) == 0x000050, "Member 'BP_TVTDeathmatch_Box_C_InitializeLootFromCloud::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_InitializeLootFromCloud, Temp_int_Loop_Counter_Variable) == 0x000054, "Member 'BP_TVTDeathmatch_Box_C_InitializeLootFromCloud::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_InitializeLootFromCloud, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'BP_TVTDeathmatch_Box_C_InitializeLootFromCloud::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_InitializeLootFromCloud, Temp_bool_True_if_break_was_hit_Variable) == 0x00005C, "Member 'BP_TVTDeathmatch_Box_C_InitializeLootFromCloud::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_InitializeLootFromCloud, Temp_int_Array_Index_Variable_1) == 0x000060, "Member 'BP_TVTDeathmatch_Box_C_InitializeLootFromCloud::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_InitializeLootFromCloud, CallFunc_Not_PreBool_ReturnValue) == 0x000064, "Member 'BP_TVTDeathmatch_Box_C_InitializeLootFromCloud::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_InitializeLootFromCloud, Temp_bool_True_if_break_was_hit_Variable_1) == 0x000065, "Member 'BP_TVTDeathmatch_Box_C_InitializeLootFromCloud::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_InitializeLootFromCloud, Temp_bool_Variable) == 0x000066, "Member 'BP_TVTDeathmatch_Box_C_InitializeLootFromCloud::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_InitializeLootFromCloud, CallFunc_Not_PreBool_ReturnValue_1) == 0x000067, "Member 'BP_TVTDeathmatch_Box_C_InitializeLootFromCloud::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_InitializeLootFromCloud, Temp_int_Variable) == 0x000068, "Member 'BP_TVTDeathmatch_Box_C_InitializeLootFromCloud::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_InitializeLootFromCloud, Temp_bool_Variable_1) == 0x00006C, "Member 'BP_TVTDeathmatch_Box_C_InitializeLootFromCloud::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_InitializeLootFromCloud, CallFunc_Array_Get_Item) == 0x000070, "Member 'BP_TVTDeathmatch_Box_C_InitializeLootFromCloud::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_InitializeLootFromCloud, CallFunc_Array_Get_Item_1) == 0x000090, "Member 'BP_TVTDeathmatch_Box_C_InitializeLootFromCloud::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_InitializeLootFromCloud, K2Node_ClassDynamicCast_AsItem_for_Backpack) == 0x0000A8, "Member 'BP_TVTDeathmatch_Box_C_InitializeLootFromCloud::K2Node_ClassDynamicCast_AsItem_for_Backpack' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_InitializeLootFromCloud, K2Node_ClassDynamicCast_bSuccess) == 0x0000B0, "Member 'BP_TVTDeathmatch_Box_C_InitializeLootFromCloud::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_InitializeLootFromCloud, K2Node_ClassDynamicCast_AsWeapon) == 0x0000B8, "Member 'BP_TVTDeathmatch_Box_C_InitializeLootFromCloud::K2Node_ClassDynamicCast_AsWeapon' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_InitializeLootFromCloud, K2Node_ClassDynamicCast_bSuccess_1) == 0x0000C0, "Member 'BP_TVTDeathmatch_Box_C_InitializeLootFromCloud::K2Node_ClassDynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_InitializeLootFromCloud, CallFunc_Map_Find_Value) == 0x0000C4, "Member 'BP_TVTDeathmatch_Box_C_InitializeLootFromCloud::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_InitializeLootFromCloud, CallFunc_Map_Find_ReturnValue) == 0x0000C8, "Member 'BP_TVTDeathmatch_Box_C_InitializeLootFromCloud::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_InitializeLootFromCloud, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000CC, "Member 'BP_TVTDeathmatch_Box_C_InitializeLootFromCloud::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_InitializeLootFromCloud, CallFunc_Get_Weapon_Ammo_and_Magazine_Size_Ammo_Item) == 0x0000D0, "Member 'BP_TVTDeathmatch_Box_C_InitializeLootFromCloud::CallFunc_Get_Weapon_Ammo_and_Magazine_Size_Ammo_Item' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_InitializeLootFromCloud, CallFunc_Get_Weapon_Ammo_and_Magazine_Size_Magazine_Size) == 0x0000D8, "Member 'BP_TVTDeathmatch_Box_C_InitializeLootFromCloud::CallFunc_Get_Weapon_Ammo_and_Magazine_Size_Magazine_Size' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_InitializeLootFromCloud, K2Node_Select_Default) == 0x0000DC, "Member 'BP_TVTDeathmatch_Box_C_InitializeLootFromCloud::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_InitializeLootFromCloud, CallFunc_Multiply_IntInt_ReturnValue) == 0x0000E0, "Member 'BP_TVTDeathmatch_Box_C_InitializeLootFromCloud::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_InitializeLootFromCloud, CallFunc_Array_Length_ReturnValue) == 0x0000E4, "Member 'BP_TVTDeathmatch_Box_C_InitializeLootFromCloud::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_InitializeLootFromCloud, CallFunc_Greater_IntInt_ReturnValue) == 0x0000E8, "Member 'BP_TVTDeathmatch_Box_C_InitializeLootFromCloud::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_InitializeLootFromCloud, CallFunc_Array_Length_ReturnValue_1) == 0x0000EC, "Member 'BP_TVTDeathmatch_Box_C_InitializeLootFromCloud::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_InitializeLootFromCloud, CallFunc_Less_IntInt_ReturnValue) == 0x0000F0, "Member 'BP_TVTDeathmatch_Box_C_InitializeLootFromCloud::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_InitializeLootFromCloud, K2Node_Select_Default_1) == 0x0000F4, "Member 'BP_TVTDeathmatch_Box_C_InitializeLootFromCloud::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_InitializeLootFromCloud, CallFunc_BooleanAND_ReturnValue) == 0x0000F8, "Member 'BP_TVTDeathmatch_Box_C_InitializeLootFromCloud::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_InitializeLootFromCloud, CallFunc_Array_Length_ReturnValue_2) == 0x0000FC, "Member 'BP_TVTDeathmatch_Box_C_InitializeLootFromCloud::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_InitializeLootFromCloud, CallFunc_RandomInteger_ReturnValue) == 0x000100, "Member 'BP_TVTDeathmatch_Box_C_InitializeLootFromCloud::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_InitializeLootFromCloud, Temp_bool_Variable_2) == 0x000104, "Member 'BP_TVTDeathmatch_Box_C_InitializeLootFromCloud::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_InitializeLootFromCloud, CallFunc_Array_Get_Item_2) == 0x000108, "Member 'BP_TVTDeathmatch_Box_C_InitializeLootFromCloud::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_InitializeLootFromCloud, CallFunc_Map_Find_Value_1) == 0x000118, "Member 'BP_TVTDeathmatch_Box_C_InitializeLootFromCloud::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_InitializeLootFromCloud, CallFunc_Map_Find_ReturnValue_1) == 0x00011C, "Member 'BP_TVTDeathmatch_Box_C_InitializeLootFromCloud::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_InitializeLootFromCloud, CallFunc_Add_IntInt_ReturnValue_2) == 0x000120, "Member 'BP_TVTDeathmatch_Box_C_InitializeLootFromCloud::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_InitializeLootFromCloud, Temp_int_Loop_Counter_Variable_1) == 0x000124, "Member 'BP_TVTDeathmatch_Box_C_InitializeLootFromCloud::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_InitializeLootFromCloud, K2Node_Select_Default_2) == 0x000128, "Member 'BP_TVTDeathmatch_Box_C_InitializeLootFromCloud::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_InitializeLootFromCloud, CallFunc_Less_IntInt_ReturnValue_1) == 0x00012C, "Member 'BP_TVTDeathmatch_Box_C_InitializeLootFromCloud::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_InitializeLootFromCloud, CallFunc_Add_IntInt_ReturnValue_3) == 0x000130, "Member 'BP_TVTDeathmatch_Box_C_InitializeLootFromCloud::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_InitializeLootFromCloud, CallFunc_BooleanAND_ReturnValue_1) == 0x000134, "Member 'BP_TVTDeathmatch_Box_C_InitializeLootFromCloud::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_InitializeLootFromCloud, CallFunc_GetGameState_ReturnValue) == 0x000138, "Member 'BP_TVTDeathmatch_Box_C_InitializeLootFromCloud::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_InitializeLootFromCloud, K2Node_DynamicCast_AsBP_Game_State_TVTDeathmatch) == 0x000140, "Member 'BP_TVTDeathmatch_Box_C_InitializeLootFromCloud::K2Node_DynamicCast_AsBP_Game_State_TVTDeathmatch' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_InitializeLootFromCloud, K2Node_DynamicCast_bSuccess) == 0x000148, "Member 'BP_TVTDeathmatch_Box_C_InitializeLootFromCloud::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_TVTDeathmatch_Box_C_InitializeLootFromCloud, CallFunc_Get_Weight_Based_Random_Items_PickedItems) == 0x000150, "Member 'BP_TVTDeathmatch_Box_C_InitializeLootFromCloud::CallFunc_Get_Weight_Based_Random_Items_PickedItems' has a wrong offset!");

}

