#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_QR

#include "Basic.hpp"

#include "Flame_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_QR.UI_QR_C
// 0x0048 (0x0300 - 0x02B8)
class UUI_QR_C final : public UQRDisplayer
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class URetainerBox*                           Mask;                                              // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 QRImage;                                           // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FString                                 QR;                                                // 0x02D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Material;                                          // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           TintColor;                                         // 0x02E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          UseShadow;                                         // 0x02F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)

public:
	void ExecuteUbergraph_UI_QR(int32 EntryPoint);
	void Event_SetQR(const class FString& Link);
	void PreConstruct(bool IsDesignTime);
	void Construct();
	void InitQR(class UTexture2D* InputPin);
	void StartQR(const class FString& String);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_QR_C">();
	}
	static class UUI_QR_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_QR_C>();
	}
};
static_assert(alignof(UUI_QR_C) == 0x000008, "Wrong alignment on UUI_QR_C");
static_assert(sizeof(UUI_QR_C) == 0x000300, "Wrong size on UUI_QR_C");
static_assert(offsetof(UUI_QR_C, UberGraphFrame) == 0x0002B8, "Member 'UUI_QR_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_QR_C, Mask) == 0x0002C0, "Member 'UUI_QR_C::Mask' has a wrong offset!");
static_assert(offsetof(UUI_QR_C, QRImage) == 0x0002C8, "Member 'UUI_QR_C::QRImage' has a wrong offset!");
static_assert(offsetof(UUI_QR_C, QR) == 0x0002D0, "Member 'UUI_QR_C::QR' has a wrong offset!");
static_assert(offsetof(UUI_QR_C, Material) == 0x0002E0, "Member 'UUI_QR_C::Material' has a wrong offset!");
static_assert(offsetof(UUI_QR_C, TintColor) == 0x0002E8, "Member 'UUI_QR_C::TintColor' has a wrong offset!");
static_assert(offsetof(UUI_QR_C, UseShadow) == 0x0002F8, "Member 'UUI_QR_C::UseShadow' has a wrong offset!");

}

