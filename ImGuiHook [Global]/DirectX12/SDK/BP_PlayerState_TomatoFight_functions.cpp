#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerState_TomatoFight

#include "Basic.hpp"

#include "BP_PlayerState_TomatoFight_classes.hpp"
#include "BP_PlayerState_TomatoFight_parameters.hpp"


namespace SDK
{

// Function BP_PlayerState_TomatoFight.BP_PlayerState_TomatoFight_C.ExecuteUbergraph_BP_PlayerState_TomatoFight
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerState_TomatoFight_C::ExecuteUbergraph_BP_PlayerState_TomatoFight(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_TomatoFight_C", "ExecuteUbergraph_BP_PlayerState_TomatoFight");

	Params::BP_PlayerState_TomatoFight_C_ExecuteUbergraph_BP_PlayerState_TomatoFight Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerState_TomatoFight.BP_PlayerState_TomatoFight_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_PlayerState_TomatoFight_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_TomatoFight_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerState_TomatoFight.BP_PlayerState_TomatoFight_C.SetCharacterRoleInGunFight
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// EGunFightRole                           Role_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerState_TomatoFight_C::SetCharacterRoleInGunFight(EGunFightRole Role_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_TomatoFight_C", "SetCharacterRoleInGunFight");

	Params::BP_PlayerState_TomatoFight_C_SetCharacterRoleInGunFight Parms{};

	Parms.Role_0 = Role_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerState_TomatoFight.BP_PlayerState_TomatoFight_C.Set StatisticGunFight
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FStruct_GunFightStatistics       Statistic                                              (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_PlayerState_TomatoFight_C::Set_StatisticGunFight(const struct FStruct_GunFightStatistics& Statistic)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_TomatoFight_C", "Set StatisticGunFight");

	Params::BP_PlayerState_TomatoFight_C_Set_StatisticGunFight Parms{};

	Parms.Statistic = std::move(Statistic);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerState_TomatoFight.BP_PlayerState_TomatoFight_C.GetStatisticGunFight
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FStruct_GunFightStatistics       Statistic                                              (Parm, OutParm, HasGetValueTypeHash)

void ABP_PlayerState_TomatoFight_C::GetStatisticGunFight(struct FStruct_GunFightStatistics* Statistic)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_TomatoFight_C", "GetStatisticGunFight");

	Params::BP_PlayerState_TomatoFight_C_GetStatisticGunFight Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Statistic != nullptr)
		*Statistic = std::move(Parms.Statistic);
}


// Function BP_PlayerState_TomatoFight.BP_PlayerState_TomatoFight_C.OnRep_StatisticGunFight
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerState_TomatoFight_C::OnRep_StatisticGunFight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_TomatoFight_C", "OnRep_StatisticGunFight");

	UObject::ProcessEvent(Func, nullptr);
}

}

