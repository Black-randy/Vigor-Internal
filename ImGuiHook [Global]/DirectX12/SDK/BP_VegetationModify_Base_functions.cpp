#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VegetationModify_Base

#include "Basic.hpp"

#include "BP_VegetationModify_Base_classes.hpp"
#include "BP_VegetationModify_Base_parameters.hpp"


namespace SDK
{

// Function BP_VegetationModify_Base.BP_VegetationModify_Base_C.ExecuteUbergraph_BP_VegetationModify_Base
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VegetationModify_Base_C::ExecuteUbergraph_BP_VegetationModify_Base(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VegetationModify_Base_C", "ExecuteUbergraph_BP_VegetationModify_Base");

	Params::BP_VegetationModify_Base_C_ExecuteUbergraph_BP_VegetationModify_Base Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VegetationModify_Base.BP_VegetationModify_Base_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VegetationModify_Base_C::ReceiveTick(float DeltaSeconds_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VegetationModify_Base_C", "ReceiveTick");

	Params::BP_VegetationModify_Base_C_ReceiveTick Parms{};

	Parms.DeltaSeconds_0 = DeltaSeconds_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VegetationModify_Base.BP_VegetationModify_Base_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_VegetationModify_Base_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VegetationModify_Base_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VegetationModify_Base.BP_VegetationModify_Base_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_VegetationModify_Base_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VegetationModify_Base_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VegetationModify_Base.BP_VegetationModify_Base_C.DrawVegetationModifiers
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_VegetationModify_Base_C::DrawVegetationModifiers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VegetationModify_Base_C", "DrawVegetationModifiers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VegetationModify_Base.BP_VegetationModify_Base_C.InitRenderTargets
// (Protected, BlueprintCallable, BlueprintEvent)

void ABP_VegetationModify_Base_C::InitRenderTargets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VegetationModify_Base_C", "InitRenderTargets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VegetationModify_Base.BP_VegetationModify_Base_C.UpdatePosition
// (Protected, BlueprintCallable, BlueprintEvent)

void ABP_VegetationModify_Base_C::UpdatePosition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VegetationModify_Base_C", "UpdatePosition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VegetationModify_Base.BP_VegetationModify_Base_C.InitAll
// (Protected, BlueprintCallable, BlueprintEvent)

void ABP_VegetationModify_Base_C::InitAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VegetationModify_Base_C", "InitAll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VegetationModify_Base.BP_VegetationModify_Base_C.ConvertWorldToTexture
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        WorldPosXY                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        OutPixelCoords                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    OutResultIsInsideTexture                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_VegetationModify_Base_C::ConvertWorldToTexture(const struct FVector2D& WorldPosXY, struct FVector2D* OutPixelCoords, bool* OutResultIsInsideTexture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VegetationModify_Base_C", "ConvertWorldToTexture");

	Params::BP_VegetationModify_Base_C_ConvertWorldToTexture Parms{};

	Parms.WorldPosXY = std::move(WorldPosXY);

	UObject::ProcessEvent(Func, &Parms);

	if (OutPixelCoords != nullptr)
		*OutPixelCoords = std::move(Parms.OutPixelCoords);

	if (OutResultIsInsideTexture != nullptr)
		*OutResultIsInsideTexture = Parms.OutResultIsInsideTexture;
}


// Function BP_VegetationModify_Base.BP_VegetationModify_Base_C.Simulate
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VegetationModify_Base_C::Simulate(float DeltaSeconds_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VegetationModify_Base_C", "Simulate");

	Params::BP_VegetationModify_Base_C_Simulate Parms{};

	Parms.DeltaSeconds_0 = DeltaSeconds_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VegetationModify_Base.BP_VegetationModify_Base_C.FlipRenderTargets
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_VegetationModify_Base_C::FlipRenderTargets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VegetationModify_Base_C", "FlipRenderTargets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VegetationModify_Base.BP_VegetationModify_Base_C.InitMaterials
// (Protected, BlueprintCallable, BlueprintEvent)

void ABP_VegetationModify_Base_C::InitMaterials()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VegetationModify_Base_C", "InitMaterials");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VegetationModify_Base.BP_VegetationModify_Base_C.InitRenderTargetsMatParams
// (Protected, BlueprintCallable, BlueprintEvent)

void ABP_VegetationModify_Base_C::InitRenderTargetsMatParams()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VegetationModify_Base_C", "InitRenderTargetsMatParams");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VegetationModify_Base.BP_VegetationModify_Base_C.InitMaterialDerivedValues
// (Protected, BlueprintCallable, BlueprintEvent)

void ABP_VegetationModify_Base_C::InitMaterialDerivedValues()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VegetationModify_Base_C", "InitMaterialDerivedValues");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VegetationModify_Base.BP_VegetationModify_Base_C.SetupMaterialParamsForSwap
// (Protected, BlueprintCallable, BlueprintEvent)

void ABP_VegetationModify_Base_C::SetupMaterialParamsForSwap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VegetationModify_Base_C", "SetupMaterialParamsForSwap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VegetationModify_Base.BP_VegetationModify_Base_C.SetupMaterialParamsForRead
// (Protected, BlueprintCallable, BlueprintEvent)

void ABP_VegetationModify_Base_C::SetupMaterialParamsForRead()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VegetationModify_Base_C", "SetupMaterialParamsForRead");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VegetationModify_Base.BP_VegetationModify_Base_C.SetupMaterialParamsForWrite
// (Protected, BlueprintCallable, BlueprintEvent)

void ABP_VegetationModify_Base_C::SetupMaterialParamsForWrite()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VegetationModify_Base_C", "SetupMaterialParamsForWrite");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VegetationModify_Base.BP_VegetationModify_Base_C.AddVegetationModifier
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          WorldPos                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Radius                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VegetationModify_Base_C::AddVegetationModifier(const struct FVector& WorldPos, float Radius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VegetationModify_Base_C", "AddVegetationModifier");

	Params::BP_VegetationModify_Base_C_AddVegetationModifier Parms{};

	Parms.WorldPos = std::move(WorldPos);
	Parms.Radius = Radius;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VegetationModify_Base.BP_VegetationModify_Base_C.IsInside
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          WorldPos                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Radius                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsInside_0                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_VegetationModify_Base_C::IsInside(const struct FVector& WorldPos, float Radius, bool* IsInside_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VegetationModify_Base_C", "IsInside");

	Params::BP_VegetationModify_Base_C_IsInside Parms{};

	Parms.WorldPos = std::move(WorldPos);
	Parms.Radius = Radius;

	UObject::ProcessEvent(Func, &Parms);

	if (IsInside_0 != nullptr)
		*IsInside_0 = Parms.IsInside_0;
}


// Function BP_VegetationModify_Base.BP_VegetationModify_Base_C.DrawQuads
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCanvas*                          Canvas                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FCanvasUVQuad>            Quads                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_VegetationModify_Base_C::DrawQuads(class UCanvas* Canvas, TArray<struct FCanvasUVQuad>& Quads)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VegetationModify_Base_C", "DrawQuads");

	Params::BP_VegetationModify_Base_C_DrawQuads Parms{};

	Parms.Canvas = Canvas;
	Parms.Quads = std::move(Quads);

	UObject::ProcessEvent(Func, &Parms);

	Quads = std::move(Parms.Quads);
}

}

