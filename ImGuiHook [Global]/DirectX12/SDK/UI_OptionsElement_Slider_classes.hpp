#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_OptionsElement_Slider

#include "Basic.hpp"

#include "EElementSliderType_structs.hpp"
#include "Flame_classes.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "FlameUI_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_OptionsElement_Slider.UI_OptionsElement_Slider_C
// 0x06D8 (0x0A88 - 0x03B0)
class UUI_OptionsElement_Slider_C final : public UOptionsElementSlider
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextBlock*                             DisplayValueText;                                  // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameButton*                           FlameButton_137;                                   // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_0;                                         // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         Min;                                               // 0x03D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Max;                                               // 0x03D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Increment;                                         // 0x03D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DC[0x4];                                      // 0x03DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnValueChanged_0;                                  // 0x03E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	float                                         InternalMin;                                       // 0x03F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InternalMax;                                       // 0x03F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EElementSliderType                            Type;                                              // 0x03F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ScaleUISoundByValue;                               // 0x03F9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3FA[0x2];                                      // 0x03FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         OldValue;                                          // 0x03FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsHovering;                                        // 0x0400(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_401[0x7];                                      // 0x0401(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSliderStyle                           NormalStyle;                                       // 0x0408(0x0340)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSliderStyle                           HoverStyle;                                        // 0x0748(0x0340)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void OnValueChanged_0__DelegateSignature(float Value, float NormalizedValue, float InternalValue);
	void ExecuteUbergraph_UI_OptionsElement_Slider(int32 EntryPoint);
	void BndEvt__UI_OptionsElement_Slider_FlameButton_137_K2Node_ComponentBoundEvent_0_OnButtonPressedEvent__DelegateSignature(class UButton* Sender);
	void OnMouseLeave(const struct FPointerEvent& MouseEvent);
	void OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void ToggleHoveringSlider(bool IsHovering_0);
	void SliderOnValueChanged(float Value);
	void SetValue(const struct FOptionsElementValue& InValues);
	void OnUpdateWidget();
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void BndEvt__Slider_K2Node_ComponentBoundEvent_6_OnFloatValueChangedEvent__DelegateSignature(float Value);
	class FText GetDisplayValue();
	void SetNormalizedValue(float Value);
	void UpdateStepSize();
	void SetInternalValue(float Value);

	void GetNormalizedValue(float* Value) const;
	void GetValue(float* Value) const;
	void ValueToInternal(float In, float* Out) const;
	void InternalToValue(float In, float* Out) const;
	void RemapFloat(float In, float OldMin, float OldMax, float NewMin, float NewMax, float* Out) const;
	void GetInternalValue(float* Value) const;
	struct FOptionsElementValue PopulateValues() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_OptionsElement_Slider_C">();
	}
	static class UUI_OptionsElement_Slider_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_OptionsElement_Slider_C>();
	}
};
static_assert(alignof(UUI_OptionsElement_Slider_C) == 0x000008, "Wrong alignment on UUI_OptionsElement_Slider_C");
static_assert(sizeof(UUI_OptionsElement_Slider_C) == 0x000A88, "Wrong size on UUI_OptionsElement_Slider_C");
static_assert(offsetof(UUI_OptionsElement_Slider_C, UberGraphFrame) == 0x0003B0, "Member 'UUI_OptionsElement_Slider_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_OptionsElement_Slider_C, DisplayValueText) == 0x0003B8, "Member 'UUI_OptionsElement_Slider_C::DisplayValueText' has a wrong offset!");
static_assert(offsetof(UUI_OptionsElement_Slider_C, FlameButton_137) == 0x0003C0, "Member 'UUI_OptionsElement_Slider_C::FlameButton_137' has a wrong offset!");
static_assert(offsetof(UUI_OptionsElement_Slider_C, SizeBox_0) == 0x0003C8, "Member 'UUI_OptionsElement_Slider_C::SizeBox_0' has a wrong offset!");
static_assert(offsetof(UUI_OptionsElement_Slider_C, Min) == 0x0003D0, "Member 'UUI_OptionsElement_Slider_C::Min' has a wrong offset!");
static_assert(offsetof(UUI_OptionsElement_Slider_C, Max) == 0x0003D4, "Member 'UUI_OptionsElement_Slider_C::Max' has a wrong offset!");
static_assert(offsetof(UUI_OptionsElement_Slider_C, Increment) == 0x0003D8, "Member 'UUI_OptionsElement_Slider_C::Increment' has a wrong offset!");
static_assert(offsetof(UUI_OptionsElement_Slider_C, OnValueChanged_0) == 0x0003E0, "Member 'UUI_OptionsElement_Slider_C::OnValueChanged_0' has a wrong offset!");
static_assert(offsetof(UUI_OptionsElement_Slider_C, InternalMin) == 0x0003F0, "Member 'UUI_OptionsElement_Slider_C::InternalMin' has a wrong offset!");
static_assert(offsetof(UUI_OptionsElement_Slider_C, InternalMax) == 0x0003F4, "Member 'UUI_OptionsElement_Slider_C::InternalMax' has a wrong offset!");
static_assert(offsetof(UUI_OptionsElement_Slider_C, Type) == 0x0003F8, "Member 'UUI_OptionsElement_Slider_C::Type' has a wrong offset!");
static_assert(offsetof(UUI_OptionsElement_Slider_C, ScaleUISoundByValue) == 0x0003F9, "Member 'UUI_OptionsElement_Slider_C::ScaleUISoundByValue' has a wrong offset!");
static_assert(offsetof(UUI_OptionsElement_Slider_C, OldValue) == 0x0003FC, "Member 'UUI_OptionsElement_Slider_C::OldValue' has a wrong offset!");
static_assert(offsetof(UUI_OptionsElement_Slider_C, IsHovering) == 0x000400, "Member 'UUI_OptionsElement_Slider_C::IsHovering' has a wrong offset!");
static_assert(offsetof(UUI_OptionsElement_Slider_C, NormalStyle) == 0x000408, "Member 'UUI_OptionsElement_Slider_C::NormalStyle' has a wrong offset!");
static_assert(offsetof(UUI_OptionsElement_Slider_C, HoverStyle) == 0x000748, "Member 'UUI_OptionsElement_Slider_C::HoverStyle' has a wrong offset!");

}

