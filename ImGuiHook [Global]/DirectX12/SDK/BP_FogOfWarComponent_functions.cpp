#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FogOfWarComponent

#include "Basic.hpp"

#include "BP_FogOfWarComponent_classes.hpp"
#include "BP_FogOfWarComponent_parameters.hpp"


namespace SDK
{

// Function BP_FogOfWarComponent.BP_FogOfWarComponent_C.ExecuteUbergraph_BP_FogOfWarComponent
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FogOfWarComponent_C::ExecuteUbergraph_BP_FogOfWarComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FogOfWarComponent_C", "ExecuteUbergraph_BP_FogOfWarComponent");

	Params::BP_FogOfWarComponent_C_ExecuteUbergraph_BP_FogOfWarComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FogOfWarComponent.BP_FogOfWarComponent_C.Try Start Tracking
// (BlueprintCallable, BlueprintEvent)

void UBP_FogOfWarComponent_C::Try_Start_Tracking()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FogOfWarComponent_C", "Try Start Tracking");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FogOfWarComponent.BP_FogOfWarComponent_C.Track Player
// (BlueprintCallable, BlueprintEvent)

void UBP_FogOfWarComponent_C::Track_Player()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FogOfWarComponent_C", "Track Player");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FogOfWarComponent.BP_FogOfWarComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_FogOfWarComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FogOfWarComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FogOfWarComponent.BP_FogOfWarComponent_C.Draw To Render Target
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Size                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FogOfWarComponent_C::Draw_To_Render_Target(const struct FVector& Location, float Size)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FogOfWarComponent_C", "Draw To Render Target");

	Params::BP_FogOfWarComponent_C_Draw_To_Render_Target Parms{};

	Parms.Location = std::move(Location);
	Parms.Size = Size;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FogOfWarComponent.BP_FogOfWarComponent_C.Replicate Discover Point
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FStruct_DiscoverPoint            Discover_Point                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FogOfWarComponent_C::Replicate_Discover_Point(const struct FStruct_DiscoverPoint& Discover_Point)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FogOfWarComponent_C", "Replicate Discover Point");

	Params::BP_FogOfWarComponent_C_Replicate_Discover_Point Parms{};

	Parms.Discover_Point = std::move(Discover_Point);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FogOfWarComponent.BP_FogOfWarComponent_C.Replicate Discover Point To Teammates
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FStruct_DiscoverPoint            Discover_Point                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FogOfWarComponent_C::Replicate_Discover_Point_To_Teammates(const struct FStruct_DiscoverPoint& Discover_Point)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FogOfWarComponent_C", "Replicate Discover Point To Teammates");

	Params::BP_FogOfWarComponent_C_Replicate_Discover_Point_To_Teammates Parms{};

	Parms.Discover_Point = std::move(Discover_Point);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FogOfWarComponent.BP_FogOfWarComponent_C.Is Point Already Present
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FStruct_DiscoverPoint            Discover_Point                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Already_Present                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_FogOfWarComponent_C::Is_Point_Already_Present(const struct FStruct_DiscoverPoint& Discover_Point, bool* Already_Present)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FogOfWarComponent_C", "Is Point Already Present");

	Params::BP_FogOfWarComponent_C_Is_Point_Already_Present Parms{};

	Parms.Discover_Point = std::move(Discover_Point);

	UObject::ProcessEvent(Func, &Parms);

	if (Already_Present != nullptr)
		*Already_Present = Parms.Already_Present;
}


// Function BP_FogOfWarComponent.BP_FogOfWarComponent_C.Add Discover Point
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FStruct_DiscoverPoint            Discover_Point                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Replicate                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_FogOfWarComponent_C::Add_Discover_Point(const struct FStruct_DiscoverPoint& Discover_Point, bool Replicate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FogOfWarComponent_C", "Add Discover Point");

	Params::BP_FogOfWarComponent_C_Add_Discover_Point Parms{};

	Parms.Discover_Point = std::move(Discover_Point);
	Parms.Replicate = Replicate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FogOfWarComponent.BP_FogOfWarComponent_C.Is Location Discovered
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Discovered                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_FogOfWarComponent_C::Is_Location_Discovered(const struct FVector& Location, bool* Discovered)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FogOfWarComponent_C", "Is Location Discovered");

	Params::BP_FogOfWarComponent_C_Is_Location_Discovered Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);

	if (Discovered != nullptr)
		*Discovered = Parms.Discovered;
}


// Function BP_FogOfWarComponent.BP_FogOfWarComponent_C.Get World Size
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_FogOfWarComponent_C::Get_World_Size()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FogOfWarComponent_C", "Get World Size");

	UObject::ProcessEvent(Func, nullptr);
}

}

