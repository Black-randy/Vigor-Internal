#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_AvailableWeapons_4

#include "Basic.hpp"

#include "Flame_classes.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_AvailableWeapons_4.UI_AvailableWeapons_4_C
// 0x0048 (0x0300 - 0x02B8)
class UUI_AvailableWeapons_4_C final : public UFlameWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 CompletedTick;                                     // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameTextBlock*                        FlameTextBlock_Level;                              // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUniformGridPanel*                      UniformGridPanel_0;                                // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCustomizableItemProvider*              ItemProvider;                                      // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Level;                                             // 0x02E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         Scale;                                             // 0x02E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         ColCount;                                          // 0x02E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          AlreadyOwnedLevel;                                 // 0x02EC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          CanBeBuiltLevel;                                   // 0x02ED(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_2EE[0x2];                                      // 0x02EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftClassPtr<class UClass>>           Consumables_to_filter_out;                         // 0x02F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_UI_AvailableWeapons_4(int32 EntryPoint);
	void UpdateUI(int32 Level_0);
	void PreConstruct(bool IsDesignTime);
	void Construct();
	class AStash* GetStash();
	void AddSlot(class UClass* Item, bool ForcePlanIcon);
	void Filter_out_hidden_items(TArray<class UClass*>& Consumables, TArray<class UClass*>* Filtered_array);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_AvailableWeapons_4_C">();
	}
	static class UUI_AvailableWeapons_4_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_AvailableWeapons_4_C>();
	}
};
static_assert(alignof(UUI_AvailableWeapons_4_C) == 0x000008, "Wrong alignment on UUI_AvailableWeapons_4_C");
static_assert(sizeof(UUI_AvailableWeapons_4_C) == 0x000300, "Wrong size on UUI_AvailableWeapons_4_C");
static_assert(offsetof(UUI_AvailableWeapons_4_C, UberGraphFrame) == 0x0002B8, "Member 'UUI_AvailableWeapons_4_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_AvailableWeapons_4_C, CompletedTick) == 0x0002C0, "Member 'UUI_AvailableWeapons_4_C::CompletedTick' has a wrong offset!");
static_assert(offsetof(UUI_AvailableWeapons_4_C, FlameTextBlock_Level) == 0x0002C8, "Member 'UUI_AvailableWeapons_4_C::FlameTextBlock_Level' has a wrong offset!");
static_assert(offsetof(UUI_AvailableWeapons_4_C, UniformGridPanel_0) == 0x0002D0, "Member 'UUI_AvailableWeapons_4_C::UniformGridPanel_0' has a wrong offset!");
static_assert(offsetof(UUI_AvailableWeapons_4_C, ItemProvider) == 0x0002D8, "Member 'UUI_AvailableWeapons_4_C::ItemProvider' has a wrong offset!");
static_assert(offsetof(UUI_AvailableWeapons_4_C, Level) == 0x0002E0, "Member 'UUI_AvailableWeapons_4_C::Level' has a wrong offset!");
static_assert(offsetof(UUI_AvailableWeapons_4_C, Scale) == 0x0002E4, "Member 'UUI_AvailableWeapons_4_C::Scale' has a wrong offset!");
static_assert(offsetof(UUI_AvailableWeapons_4_C, ColCount) == 0x0002E8, "Member 'UUI_AvailableWeapons_4_C::ColCount' has a wrong offset!");
static_assert(offsetof(UUI_AvailableWeapons_4_C, AlreadyOwnedLevel) == 0x0002EC, "Member 'UUI_AvailableWeapons_4_C::AlreadyOwnedLevel' has a wrong offset!");
static_assert(offsetof(UUI_AvailableWeapons_4_C, CanBeBuiltLevel) == 0x0002ED, "Member 'UUI_AvailableWeapons_4_C::CanBeBuiltLevel' has a wrong offset!");
static_assert(offsetof(UUI_AvailableWeapons_4_C, Consumables_to_filter_out) == 0x0002F0, "Member 'UUI_AvailableWeapons_4_C::Consumables_to_filter_out' has a wrong offset!");

}

