#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Crosshair

#include "Basic.hpp"

#include "UI_Crosshair_classes.hpp"
#include "UI_Crosshair_parameters.hpp"


namespace SDK
{

// Function UI_Crosshair.UI_Crosshair_C.ExecuteUbergraph_UI_Crosshair
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Crosshair_C::ExecuteUbergraph_UI_Crosshair(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Crosshair_C", "ExecuteUbergraph_UI_Crosshair");

	Params::UI_Crosshair_C_ExecuteUbergraph_UI_Crosshair Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Crosshair.UI_Crosshair_C.HideHitIndication
// (BlueprintCallable, BlueprintEvent)

void UUI_Crosshair_C::HideHitIndication()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Crosshair_C", "HideHitIndication");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Crosshair.UI_Crosshair_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_Crosshair_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Crosshair_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Crosshair.UI_Crosshair_C.OnReloadtimerElapsed
// (BlueprintCallable, BlueprintEvent)

void UUI_Crosshair_C::OnReloadtimerElapsed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Crosshair_C", "OnReloadtimerElapsed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Crosshair.UI_Crosshair_C.ResetReloadTimer
// (BlueprintCallable, BlueprintEvent)

void UUI_Crosshair_C::ResetReloadTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Crosshair_C", "ResetReloadTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Crosshair.UI_Crosshair_C.StartReloadTimer
// (BlueprintCallable, BlueprintEvent)

void UUI_Crosshair_C::StartReloadTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Crosshair_C", "StartReloadTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Crosshair.UI_Crosshair_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_Crosshair_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Crosshair_C", "PreConstruct");

	Params::UI_Crosshair_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Crosshair.UI_Crosshair_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_Crosshair_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Crosshair_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Crosshair.UI_Crosshair_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Crosshair_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Crosshair_C", "Tick");

	Params::UI_Crosshair_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Crosshair.UI_Crosshair_C.GetCurrentDispersion
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UUI_Crosshair_C::GetCurrentDispersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Crosshair_C", "GetCurrentDispersion");

	Params::UI_Crosshair_C_GetCurrentDispersion Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UI_Crosshair.UI_Crosshair_C.SetDispersionRenderTransform
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Dispersion                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWidget*                          Widget                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        Mask                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Crosshair_C::SetDispersionRenderTransform(float Dispersion, class UWidget* Widget, const struct FVector2D& Mask)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Crosshair_C", "SetDispersionRenderTransform");

	Params::UI_Crosshair_C_SetDispersionRenderTransform Parms{};

	Parms.Dispersion = Dispersion;
	Parms.Widget = Widget;
	Parms.Mask = std::move(Mask);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Crosshair.UI_Crosshair_C.GetOwningCharacter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ABP_Character_C*                  BP_Character                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Crosshair_C::GetOwningCharacter(class ABP_Character_C** BP_Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Crosshair_C", "GetOwningCharacter");

	Params::UI_Crosshair_C_GetOwningCharacter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (BP_Character != nullptr)
		*BP_Character = Parms.BP_Character;
}


// Function UI_Crosshair.UI_Crosshair_C.ComputeCrosshairTargetDispersion
// (Protected, BlueprintCallable, BlueprintEvent)

void UUI_Crosshair_C::ComputeCrosshairTargetDispersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Crosshair_C", "ComputeCrosshairTargetDispersion");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Crosshair.UI_Crosshair_C.InterpolateCrosshairDispersion
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UUI_Crosshair_C::InterpolateCrosshairDispersion(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Crosshair_C", "InterpolateCrosshairDispersion");

	Params::UI_Crosshair_C_InterpolateCrosshairDispersion Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UI_Crosshair.UI_Crosshair_C.UpdateCrosshairRenderTransform
// (Protected, BlueprintCallable, BlueprintEvent)

void UUI_Crosshair_C::UpdateCrosshairRenderTransform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Crosshair_C", "UpdateCrosshairRenderTransform");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Crosshair.UI_Crosshair_C.SetCrosshairColor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FLinearColor                     Color                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Crosshair_C::SetCrosshairColor(const struct FLinearColor& Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Crosshair_C", "SetCrosshairColor");

	Params::UI_Crosshair_C_SetCrosshairColor Parms{};

	Parms.Color = std::move(Color);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Crosshair.UI_Crosshair_C.UpdateCrosshair
// (Protected, BlueprintCallable, BlueprintEvent)

void UUI_Crosshair_C::UpdateCrosshair()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Crosshair_C", "UpdateCrosshair");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Crosshair.UI_Crosshair_C.SetDefaultCrosshairSettings
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUI_Crosshair_C::SetDefaultCrosshairSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Crosshair_C", "SetDefaultCrosshairSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Crosshair.UI_Crosshair_C.ComputeCrosshairVisibility
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

ESlateVisibility UUI_Crosshair_C::ComputeCrosshairVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Crosshair_C", "ComputeCrosshairVisibility");

	Params::UI_Crosshair_C_ComputeCrosshairVisibility Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UI_Crosshair.UI_Crosshair_C.UpdateCrosshairVisibility
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUI_Crosshair_C::UpdateCrosshairVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Crosshair_C", "UpdateCrosshairVisibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Crosshair.UI_Crosshair_C.UpdateBlockedCrosshairLocation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUI_Crosshair_C::UpdateBlockedCrosshairLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Crosshair_C", "UpdateBlockedCrosshairLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Crosshair.UI_Crosshair_C.SetHitIndicationVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ESlateVisibility                        InVisibility                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Crosshair_C::SetHitIndicationVisibility(ESlateVisibility InVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Crosshair_C", "SetHitIndicationVisibility");

	Params::UI_Crosshair_C_SetHitIndicationVisibility Parms{};

	Parms.InVisibility = InVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Crosshair.UI_Crosshair_C.SetHitIndicationColor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FLinearColor                     InColorAndOpacity                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Crosshair_C::SetHitIndicationColor(const struct FLinearColor& InColorAndOpacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Crosshair_C", "SetHitIndicationColor");

	Params::UI_Crosshair_C_SetHitIndicationColor Parms{};

	Parms.InColorAndOpacity = std::move(InColorAndOpacity);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Crosshair.UI_Crosshair_C.OnGameSettingsChanged
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameSaveSettings                InGameSettings                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UUI_Crosshair_C::OnGameSettingsChanged(struct FGameSaveSettings& InGameSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Crosshair_C", "OnGameSettingsChanged");

	Params::UI_Crosshair_C_OnGameSettingsChanged Parms{};

	Parms.InGameSettings = std::move(InGameSettings);

	UObject::ProcessEvent(Func, &Parms);

	InGameSettings = std::move(Parms.InGameSettings);
}


// Function UI_Crosshair.UI_Crosshair_C.SetHitIndicatorScale
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Damage_Dealt                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Crosshair_C::SetHitIndicatorScale(float Damage_Dealt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Crosshair_C", "SetHitIndicatorScale");

	Params::UI_Crosshair_C_SetHitIndicatorScale Parms{};

	Parms.Damage_Dealt = Damage_Dealt;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Crosshair.UI_Crosshair_C.ClearAggregated Damage
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_Crosshair_C::ClearAggregated_Damage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Crosshair_C", "ClearAggregated Damage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Crosshair.UI_Crosshair_C.SetCrosshairLength
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Length                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Crosshair_C::SetCrosshairLength(int32 Length)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Crosshair_C", "SetCrosshairLength");

	Params::UI_Crosshair_C_SetCrosshairLength Parms{};

	Parms.Length = Length;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Crosshair.UI_Crosshair_C.SetCrosshairOpacity
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Opacity                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Crosshair_C::SetCrosshairOpacity(float Opacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Crosshair_C", "SetCrosshairOpacity");

	Params::UI_Crosshair_C_SetCrosshairOpacity Parms{};

	Parms.Opacity = Opacity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Crosshair.UI_Crosshair_C.SetCrosshairThickness
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Thickness                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Crosshair_C::SetCrosshairThickness(int32 Thickness)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Crosshair_C", "SetCrosshairThickness");

	Params::UI_Crosshair_C_SetCrosshairThickness Parms{};

	Parms.Thickness = Thickness;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Crosshair.UI_Crosshair_C.ShowHitIndicationForTime
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Crosshair_C::ShowHitIndicationForTime(float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Crosshair_C", "ShowHitIndicationForTime");

	Params::UI_Crosshair_C_ShowHitIndicationForTime Parms{};

	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Crosshair.UI_Crosshair_C.UpdateCrosshairOpacity
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_Crosshair_C::UpdateCrosshairOpacity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Crosshair_C", "UpdateCrosshairOpacity");

	UObject::ProcessEvent(Func, nullptr);
}

}

