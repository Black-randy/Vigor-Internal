#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_CombinationLock

#include "Basic.hpp"

#include "Flame_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_CombinationLock.UI_CombinationLock_C
// 0x0098 (0x0370 - 0x02D8)
class UUI_CombinationLock_C final : public UMenuWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UHorizontalBox*                         HorizontalBox_Buttons;                             // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_FlameSafezone_C*                    UI_FlameSafezone;                                  // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_InputActionWidget_C*                UI_GamepadActionWidget;                            // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<int32>                                 Current_code;                                      // 0x02F8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         Input_Cooldown;                                    // 0x0308(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30C[0x4];                                      // 0x030C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Correct_Number_Sound;                              // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Wrong_Number_Sound;                                // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CombinationLock_PCComponent_C*      Owning_PC_Component;                               // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FTimerHandle                           Server_Check_Timer;                                // 0x0328(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          Input_on_Cooldown;                                 // 0x0330(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_331[0x7];                                      // 0x0331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           Input_Cooldown_Timer;                              // 0x0338(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          Closing_When_Solved;                               // 0x0340(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_341[0x7];                                      // 0x0341(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CombinationLock_Component_C*        Combination_lock_component;                        // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	TArray<class UUI_CombinationLock_DigitSegment_C*> DigitSegment_list;                                 // 0x0350(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UUI_Combination_Lock_Digit_v2_C*> DigitSegment_list_v2;                              // 0x0360(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)

public:
	void ExecuteUbergraph_UI_CombinationLock(int32 EntryPoint);
	void Start_generating_combination_lock_puzzle();
	void Close_Solved_UI();
	void Check_Code_Match();
	void Clear_Input_Cooldown();
	void Destruct();
	void BndEvt__UI_GamepadActionWidget_K2Node_ComponentBoundEvent_324_OnActionPressedEvent__DelegateSignature();
	void Construct();
	struct FEventReply OnFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent);
	void Create_digit_segment(class UUI_CombinationLock_DigitSegment_C** New_digit_segment);
	void Digit_changed(class UUI_CombinationLock_DigitSegment_C* Digit_segment_that_changed);
	void Play_effects(bool Is_number_correct);
	void Create_digit_segment_v2(class UUI_Combination_Lock_Digit_v2_C** New_digit_segment);
	void Digit_changed_v2(class UUI_Combination_Lock_Digit_v2_C* Digit_segment_that_changed);

	class UWidget* GetWidgetToFocus() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_CombinationLock_C">();
	}
	static class UUI_CombinationLock_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_CombinationLock_C>();
	}
};
static_assert(alignof(UUI_CombinationLock_C) == 0x000008, "Wrong alignment on UUI_CombinationLock_C");
static_assert(sizeof(UUI_CombinationLock_C) == 0x000370, "Wrong size on UUI_CombinationLock_C");
static_assert(offsetof(UUI_CombinationLock_C, UberGraphFrame) == 0x0002D8, "Member 'UUI_CombinationLock_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_CombinationLock_C, HorizontalBox_Buttons) == 0x0002E0, "Member 'UUI_CombinationLock_C::HorizontalBox_Buttons' has a wrong offset!");
static_assert(offsetof(UUI_CombinationLock_C, UI_FlameSafezone) == 0x0002E8, "Member 'UUI_CombinationLock_C::UI_FlameSafezone' has a wrong offset!");
static_assert(offsetof(UUI_CombinationLock_C, UI_GamepadActionWidget) == 0x0002F0, "Member 'UUI_CombinationLock_C::UI_GamepadActionWidget' has a wrong offset!");
static_assert(offsetof(UUI_CombinationLock_C, Current_code) == 0x0002F8, "Member 'UUI_CombinationLock_C::Current_code' has a wrong offset!");
static_assert(offsetof(UUI_CombinationLock_C, Input_Cooldown) == 0x000308, "Member 'UUI_CombinationLock_C::Input_Cooldown' has a wrong offset!");
static_assert(offsetof(UUI_CombinationLock_C, Correct_Number_Sound) == 0x000310, "Member 'UUI_CombinationLock_C::Correct_Number_Sound' has a wrong offset!");
static_assert(offsetof(UUI_CombinationLock_C, Wrong_Number_Sound) == 0x000318, "Member 'UUI_CombinationLock_C::Wrong_Number_Sound' has a wrong offset!");
static_assert(offsetof(UUI_CombinationLock_C, Owning_PC_Component) == 0x000320, "Member 'UUI_CombinationLock_C::Owning_PC_Component' has a wrong offset!");
static_assert(offsetof(UUI_CombinationLock_C, Server_Check_Timer) == 0x000328, "Member 'UUI_CombinationLock_C::Server_Check_Timer' has a wrong offset!");
static_assert(offsetof(UUI_CombinationLock_C, Input_on_Cooldown) == 0x000330, "Member 'UUI_CombinationLock_C::Input_on_Cooldown' has a wrong offset!");
static_assert(offsetof(UUI_CombinationLock_C, Input_Cooldown_Timer) == 0x000338, "Member 'UUI_CombinationLock_C::Input_Cooldown_Timer' has a wrong offset!");
static_assert(offsetof(UUI_CombinationLock_C, Closing_When_Solved) == 0x000340, "Member 'UUI_CombinationLock_C::Closing_When_Solved' has a wrong offset!");
static_assert(offsetof(UUI_CombinationLock_C, Combination_lock_component) == 0x000348, "Member 'UUI_CombinationLock_C::Combination_lock_component' has a wrong offset!");
static_assert(offsetof(UUI_CombinationLock_C, DigitSegment_list) == 0x000350, "Member 'UUI_CombinationLock_C::DigitSegment_list' has a wrong offset!");
static_assert(offsetof(UUI_CombinationLock_C, DigitSegment_list_v2) == 0x000360, "Member 'UUI_CombinationLock_C::DigitSegment_list_v2' has a wrong offset!");

}

