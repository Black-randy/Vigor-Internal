#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_CombinationLock

#include "Basic.hpp"

#include "UI_CombinationLock_classes.hpp"
#include "UI_CombinationLock_parameters.hpp"


namespace SDK
{

// Function UI_CombinationLock.UI_CombinationLock_C.ExecuteUbergraph_UI_CombinationLock
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_CombinationLock_C::ExecuteUbergraph_UI_CombinationLock(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CombinationLock_C", "ExecuteUbergraph_UI_CombinationLock");

	Params::UI_CombinationLock_C_ExecuteUbergraph_UI_CombinationLock Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_CombinationLock.UI_CombinationLock_C.Start generating combination lock puzzle
// (BlueprintCallable, BlueprintEvent)

void UUI_CombinationLock_C::Start_generating_combination_lock_puzzle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CombinationLock_C", "Start generating combination lock puzzle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_CombinationLock.UI_CombinationLock_C.Close Solved UI
// (BlueprintCallable, BlueprintEvent)

void UUI_CombinationLock_C::Close_Solved_UI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CombinationLock_C", "Close Solved UI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_CombinationLock.UI_CombinationLock_C.Check Code Match
// (BlueprintCallable, BlueprintEvent)

void UUI_CombinationLock_C::Check_Code_Match()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CombinationLock_C", "Check Code Match");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_CombinationLock.UI_CombinationLock_C.Clear Input Cooldown
// (BlueprintCallable, BlueprintEvent)

void UUI_CombinationLock_C::Clear_Input_Cooldown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CombinationLock_C", "Clear Input Cooldown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_CombinationLock.UI_CombinationLock_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_CombinationLock_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CombinationLock_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_CombinationLock.UI_CombinationLock_C.BndEvt__UI_GamepadActionWidget_K2Node_ComponentBoundEvent_324_OnActionPressedEvent__DelegateSignature
// (BlueprintEvent)

void UUI_CombinationLock_C::BndEvt__UI_GamepadActionWidget_K2Node_ComponentBoundEvent_324_OnActionPressedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CombinationLock_C", "BndEvt__UI_GamepadActionWidget_K2Node_ComponentBoundEvent_324_OnActionPressedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_CombinationLock.UI_CombinationLock_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_CombinationLock_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CombinationLock_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_CombinationLock.UI_CombinationLock_C.OnFocusReceived
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FFocusEvent                      InFocusEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UUI_CombinationLock_C::OnFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CombinationLock_C", "OnFocusReceived");

	Params::UI_CombinationLock_C_OnFocusReceived Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InFocusEvent = std::move(InFocusEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UI_CombinationLock.UI_CombinationLock_C.Create digit segment
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUI_CombinationLock_DigitSegment_C*New_digit_segment                                      (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_CombinationLock_C::Create_digit_segment(class UUI_CombinationLock_DigitSegment_C** New_digit_segment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CombinationLock_C", "Create digit segment");

	Params::UI_CombinationLock_C_Create_digit_segment Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (New_digit_segment != nullptr)
		*New_digit_segment = Parms.New_digit_segment;
}


// Function UI_CombinationLock.UI_CombinationLock_C.Digit changed
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUI_CombinationLock_DigitSegment_C*Digit_segment_that_changed                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_CombinationLock_C::Digit_changed(class UUI_CombinationLock_DigitSegment_C* Digit_segment_that_changed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CombinationLock_C", "Digit changed");

	Params::UI_CombinationLock_C_Digit_changed Parms{};

	Parms.Digit_segment_that_changed = Digit_segment_that_changed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_CombinationLock.UI_CombinationLock_C.Play effects
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Is_number_correct                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_CombinationLock_C::Play_effects(bool Is_number_correct)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CombinationLock_C", "Play effects");

	Params::UI_CombinationLock_C_Play_effects Parms{};

	Parms.Is_number_correct = Is_number_correct;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_CombinationLock.UI_CombinationLock_C.Create digit segment v2
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUI_Combination_Lock_Digit_v2_C*  New_digit_segment                                      (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_CombinationLock_C::Create_digit_segment_v2(class UUI_Combination_Lock_Digit_v2_C** New_digit_segment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CombinationLock_C", "Create digit segment v2");

	Params::UI_CombinationLock_C_Create_digit_segment_v2 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (New_digit_segment != nullptr)
		*New_digit_segment = Parms.New_digit_segment;
}


// Function UI_CombinationLock.UI_CombinationLock_C.Digit changed v2
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUI_Combination_Lock_Digit_v2_C*  Digit_segment_that_changed                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_CombinationLock_C::Digit_changed_v2(class UUI_Combination_Lock_Digit_v2_C* Digit_segment_that_changed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CombinationLock_C", "Digit changed v2");

	Params::UI_CombinationLock_C_Digit_changed_v2 Parms{};

	Parms.Digit_segment_that_changed = Digit_segment_that_changed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_CombinationLock.UI_CombinationLock_C.GetWidgetToFocus
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UWidget*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UWidget* UUI_CombinationLock_C::GetWidgetToFocus() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CombinationLock_C", "GetWidgetToFocus");

	Params::UI_CombinationLock_C_GetWidgetToFocus Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

