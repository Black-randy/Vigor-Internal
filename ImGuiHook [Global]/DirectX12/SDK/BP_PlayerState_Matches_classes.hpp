#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerState_Matches

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_PlayerState_classes.hpp"
#include "E_BattlePassSystem_State_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PlayerState_Matches.BP_PlayerState_Matches_C
// 0x0070 (0x0708 - 0x0698)
class ABP_PlayerState_Matches_C final : public ABP_PlayerState_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_PlayerState_Matches_C;           // 0x0698(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TMap<class FName, int32>                      Logged_Gameplay_Events;                            // 0x06A0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FUniqueNetIdRepl>               KillersOfTeammates;                                // 0x06F0(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnInstance)
	bool                                          Teammate_Safely_Left_Game;                         // 0x0700(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Is_Threat;                                         // 0x0701(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Is_Team_Killer;                                    // 0x0702(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          LobbyPhaseFinished;                                // 0x0703(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Is_Lonewolf;                                       // 0x0704(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_PlayerState_Matches(int32 EntryPoint);
	void Set_Threat_and_Teamkiller_Status(bool Is_Threat_0, bool Is_Teamkiller);
	void OnLobbyFinished(bool Delayed_Match_Start_Was_Used);
	void Player_Protected_Teammate();
	void Save_Battle_Pass_Info_on_Server(int32 Level, bool Premium);
	void Battle_Pass_System_Ready();
	void ReceiveBeginPlay();
	void Player_Left_by_Countdown();
	void Teammate_was_killed(class AHumanCharacter* Killer);
	void OnRep_UserCloudInfo();
	void Log_Gameplay_Event(class FName Gameplay_Event_Name, int32 Amount, bool* Success);
	void Get_Logged_Gameplay_Events(TMap<class FName, int32>* Logged_Gameplay_Events_0);
	void Is_Kill_Revenge(class APlayerState* Killed_Player_State, bool* Is_Revenge);
	void Did_Player_Protect_Teammate_on_Leave_Match(bool* Did_Protect);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PlayerState_Matches_C">();
	}
	static class ABP_PlayerState_Matches_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_PlayerState_Matches_C>();
	}
};
static_assert(alignof(ABP_PlayerState_Matches_C) == 0x000008, "Wrong alignment on ABP_PlayerState_Matches_C");
static_assert(sizeof(ABP_PlayerState_Matches_C) == 0x000708, "Wrong size on ABP_PlayerState_Matches_C");
static_assert(offsetof(ABP_PlayerState_Matches_C, UberGraphFrame_BP_PlayerState_Matches_C) == 0x000698, "Member 'ABP_PlayerState_Matches_C::UberGraphFrame_BP_PlayerState_Matches_C' has a wrong offset!");
static_assert(offsetof(ABP_PlayerState_Matches_C, Logged_Gameplay_Events) == 0x0006A0, "Member 'ABP_PlayerState_Matches_C::Logged_Gameplay_Events' has a wrong offset!");
static_assert(offsetof(ABP_PlayerState_Matches_C, KillersOfTeammates) == 0x0006F0, "Member 'ABP_PlayerState_Matches_C::KillersOfTeammates' has a wrong offset!");
static_assert(offsetof(ABP_PlayerState_Matches_C, Teammate_Safely_Left_Game) == 0x000700, "Member 'ABP_PlayerState_Matches_C::Teammate_Safely_Left_Game' has a wrong offset!");
static_assert(offsetof(ABP_PlayerState_Matches_C, Is_Threat) == 0x000701, "Member 'ABP_PlayerState_Matches_C::Is_Threat' has a wrong offset!");
static_assert(offsetof(ABP_PlayerState_Matches_C, Is_Team_Killer) == 0x000702, "Member 'ABP_PlayerState_Matches_C::Is_Team_Killer' has a wrong offset!");
static_assert(offsetof(ABP_PlayerState_Matches_C, LobbyPhaseFinished) == 0x000703, "Member 'ABP_PlayerState_Matches_C::LobbyPhaseFinished' has a wrong offset!");
static_assert(offsetof(ABP_PlayerState_Matches_C, Is_Lonewolf) == 0x000704, "Member 'ABP_PlayerState_Matches_C::Is_Lonewolf' has a wrong offset!");

}

