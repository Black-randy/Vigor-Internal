#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_LoadoutManager

#include "Basic.hpp"

#include "Flame_structs.hpp"
#include "Flame_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_LoadoutManager.UI_LoadoutManager_C
// 0x01B8 (0x0470 - 0x02B8)
class UUI_LoadoutManager_C final : public UFlameWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UFlameTextBlock*                        ActionDescription;                                 // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_0;                                     // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image;                                             // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_48;                                          // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Loadout_Button_C*                   LoadPreset;                                        // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Loadout_Button_C*                   MoveToStash;                                       // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_0;                                         // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Loadout_Button_C*                   SavePreset;                                        // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_InputActionWidget_C*                UI_GamepadAction_Close;                            // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_InputActionWidget_C*                UI_GamepadAction_Open;                             // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Loadouts_SaveGame_C*                SaveGameObject;                                    // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UShelterStash*                          ShelterStash;                                      // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AWeapon*>                        PlayerStash_Weapons;                               // 0x0320(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class UClass*>                         PlayerStash_Consumables;                           // 0x0330(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UWeaponsStorage*                        PlayerWeapons;                                     // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItemsList*                             PlayerConsumables;                                 // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                InstigatingWidget;                                 // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FString                                 SaveGameSlotName;                                  // 0x0358(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class USoundBase*                             OnSaveSFX;                                         // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LoadFailed;                                        // 0x0370(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_371[0x7];                                      // 0x0371(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             LoadCompleteSFX;                                   // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             FailedToLoadBackpackSound;                         // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             FailedToLoadWeaponSFX;                             // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             MoveExcessToStashCompleteSFX;                      // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            CachedSlateColor;                                  // 0x0398(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FLoadoutInfo                           PreviousLoadout;                                   // 0x03C0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FLinearColor                           DeactivatedButtonColor;                            // 0x03E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UTexture2D*>                     MissingInventoryIcons;                             // 0x03F8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UUI_Loadout_MissingRow_C*               MissingInventory_DisplayGrid;                      // 0x0408(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FInvetoryItemDescriptor>        MissingInventory_Descriptors;                      // 0x0410(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UUI_ShelterStash_C*                     SelfStash;                                         // 0x0420(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnCloseLoadoutManager;                             // 0x0428(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FTimerHandle                           IdleWidgetTimeoutTimer;                            // 0x0438(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           IdleWidgetMinTimeTimer;                            // 0x0440(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UUI_IdleWidget_C*                       IdleWidget;                                        // 0x0448(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             IdleWidgetClosed;                                  // 0x0450(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UUI_Loadout_Button_C*                   FocusedButton;                                     // 0x0460(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                LastFocusedWidget;                                 // 0x0468(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void OnCloseLoadoutManager__DelegateSignature();
	void IdleWidgetClosed__DelegateSignature();
	void ExecuteUbergraph_UI_LoadoutManager(int32 EntryPoint);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void BndEvt__UI_GamepadAction_Open_K2Node_ComponentBoundEvent_0_OnClickedEvent__DelegateSignature();
	void BndEvt__UI_GamepadAction_Close_K2Node_ComponentBoundEvent_1_OnClickedEvent__DelegateSignature();
	void ExitAfterMinIdleTime();
	void StorePurchaseIdleWidgetMinTime();
	void StorePurchaseIdleWidgetTimeout();
	void AddIdleWidget(float Timeout, float MinTime);
	void Remove_Idle_Widget(bool ForceRemove);
	void MessageBoxClosed(EMessageBoxAction Result);
	void Destruct();
	void Cloud_Loadded_Authority(class AHumanCharacter* Sender, class UInventoryComponent* Inventory, const struct FLoadoutInfo& ItemsWhichCantBePlaced);
	void MessageBox_Closed(EMessageBoxAction Result);
	void SaveLoadout(int32 Index_0);
	void LoadLoadout(int32 Index_0);
	void Exit_Loadout_Manager();
	void Client_Save_Preset(class UButton* Sender);
	void Client_Load_Preset(class UButton* Sender);
	void Client_Move_To_Stash(class UButton* Sender);
	void Construct();
	void OnSaveSucceed_A3993B704E2C6C669202E4B19B6824A8(const class FString& SlotName, const int32 UserIndex);
	void OnSaveFailed_A3993B704E2C6C669202E4B19B6824A8(const class FString& SlotName, const int32 UserIndex);
	void OnLoadSucceed_1D4D6827417DBC3B1AA8078F6BCE2470(class USaveGame* SaveGame);
	void OnLoadFailed_1D4D6827417DBC3B1AA8078F6BCE2470(class USaveGame* SaveGame);
	void GetStashContents();
	void GetBackPackContents(TMap<class UClass*, int32>* BackpackInventory);
	void OnFocused(class UButton* Sender);
	void HasNonUseableInBackpack(bool* HasNonusable);
	void FormatMissingInventoryItems(bool HasMissingWeapons, bool HasMissingItems, TArray<struct FWeaponDescriptor>& MissingWeapons, TArray<struct FItemSlot>& MissingInventory);
	bool ApplyPreviousLoadout();
	void CheckLoadoutForStackSize(TArray<struct FItemSlot>& Backpack, bool* WereStacksCorrect);
	void CheckLoadoutForCorrectPrimarySecondaryWeapons(TArray<struct FWeaponDescriptor>& Weapons, bool* WereWeaponsCorrect);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_LoadoutManager_C">();
	}
	static class UUI_LoadoutManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_LoadoutManager_C>();
	}
};
static_assert(alignof(UUI_LoadoutManager_C) == 0x000008, "Wrong alignment on UUI_LoadoutManager_C");
static_assert(sizeof(UUI_LoadoutManager_C) == 0x000470, "Wrong size on UUI_LoadoutManager_C");
static_assert(offsetof(UUI_LoadoutManager_C, UberGraphFrame) == 0x0002B8, "Member 'UUI_LoadoutManager_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_LoadoutManager_C, ActionDescription) == 0x0002C0, "Member 'UUI_LoadoutManager_C::ActionDescription' has a wrong offset!");
static_assert(offsetof(UUI_LoadoutManager_C, CanvasPanel_0) == 0x0002C8, "Member 'UUI_LoadoutManager_C::CanvasPanel_0' has a wrong offset!");
static_assert(offsetof(UUI_LoadoutManager_C, Image) == 0x0002D0, "Member 'UUI_LoadoutManager_C::Image' has a wrong offset!");
static_assert(offsetof(UUI_LoadoutManager_C, Image_48) == 0x0002D8, "Member 'UUI_LoadoutManager_C::Image_48' has a wrong offset!");
static_assert(offsetof(UUI_LoadoutManager_C, LoadPreset) == 0x0002E0, "Member 'UUI_LoadoutManager_C::LoadPreset' has a wrong offset!");
static_assert(offsetof(UUI_LoadoutManager_C, MoveToStash) == 0x0002E8, "Member 'UUI_LoadoutManager_C::MoveToStash' has a wrong offset!");
static_assert(offsetof(UUI_LoadoutManager_C, Overlay_0) == 0x0002F0, "Member 'UUI_LoadoutManager_C::Overlay_0' has a wrong offset!");
static_assert(offsetof(UUI_LoadoutManager_C, SavePreset) == 0x0002F8, "Member 'UUI_LoadoutManager_C::SavePreset' has a wrong offset!");
static_assert(offsetof(UUI_LoadoutManager_C, UI_GamepadAction_Close) == 0x000300, "Member 'UUI_LoadoutManager_C::UI_GamepadAction_Close' has a wrong offset!");
static_assert(offsetof(UUI_LoadoutManager_C, UI_GamepadAction_Open) == 0x000308, "Member 'UUI_LoadoutManager_C::UI_GamepadAction_Open' has a wrong offset!");
static_assert(offsetof(UUI_LoadoutManager_C, SaveGameObject) == 0x000310, "Member 'UUI_LoadoutManager_C::SaveGameObject' has a wrong offset!");
static_assert(offsetof(UUI_LoadoutManager_C, ShelterStash) == 0x000318, "Member 'UUI_LoadoutManager_C::ShelterStash' has a wrong offset!");
static_assert(offsetof(UUI_LoadoutManager_C, PlayerStash_Weapons) == 0x000320, "Member 'UUI_LoadoutManager_C::PlayerStash_Weapons' has a wrong offset!");
static_assert(offsetof(UUI_LoadoutManager_C, PlayerStash_Consumables) == 0x000330, "Member 'UUI_LoadoutManager_C::PlayerStash_Consumables' has a wrong offset!");
static_assert(offsetof(UUI_LoadoutManager_C, PlayerWeapons) == 0x000340, "Member 'UUI_LoadoutManager_C::PlayerWeapons' has a wrong offset!");
static_assert(offsetof(UUI_LoadoutManager_C, PlayerConsumables) == 0x000348, "Member 'UUI_LoadoutManager_C::PlayerConsumables' has a wrong offset!");
static_assert(offsetof(UUI_LoadoutManager_C, InstigatingWidget) == 0x000350, "Member 'UUI_LoadoutManager_C::InstigatingWidget' has a wrong offset!");
static_assert(offsetof(UUI_LoadoutManager_C, SaveGameSlotName) == 0x000358, "Member 'UUI_LoadoutManager_C::SaveGameSlotName' has a wrong offset!");
static_assert(offsetof(UUI_LoadoutManager_C, OnSaveSFX) == 0x000368, "Member 'UUI_LoadoutManager_C::OnSaveSFX' has a wrong offset!");
static_assert(offsetof(UUI_LoadoutManager_C, LoadFailed) == 0x000370, "Member 'UUI_LoadoutManager_C::LoadFailed' has a wrong offset!");
static_assert(offsetof(UUI_LoadoutManager_C, LoadCompleteSFX) == 0x000378, "Member 'UUI_LoadoutManager_C::LoadCompleteSFX' has a wrong offset!");
static_assert(offsetof(UUI_LoadoutManager_C, FailedToLoadBackpackSound) == 0x000380, "Member 'UUI_LoadoutManager_C::FailedToLoadBackpackSound' has a wrong offset!");
static_assert(offsetof(UUI_LoadoutManager_C, FailedToLoadWeaponSFX) == 0x000388, "Member 'UUI_LoadoutManager_C::FailedToLoadWeaponSFX' has a wrong offset!");
static_assert(offsetof(UUI_LoadoutManager_C, MoveExcessToStashCompleteSFX) == 0x000390, "Member 'UUI_LoadoutManager_C::MoveExcessToStashCompleteSFX' has a wrong offset!");
static_assert(offsetof(UUI_LoadoutManager_C, CachedSlateColor) == 0x000398, "Member 'UUI_LoadoutManager_C::CachedSlateColor' has a wrong offset!");
static_assert(offsetof(UUI_LoadoutManager_C, PreviousLoadout) == 0x0003C0, "Member 'UUI_LoadoutManager_C::PreviousLoadout' has a wrong offset!");
static_assert(offsetof(UUI_LoadoutManager_C, DeactivatedButtonColor) == 0x0003E8, "Member 'UUI_LoadoutManager_C::DeactivatedButtonColor' has a wrong offset!");
static_assert(offsetof(UUI_LoadoutManager_C, MissingInventoryIcons) == 0x0003F8, "Member 'UUI_LoadoutManager_C::MissingInventoryIcons' has a wrong offset!");
static_assert(offsetof(UUI_LoadoutManager_C, MissingInventory_DisplayGrid) == 0x000408, "Member 'UUI_LoadoutManager_C::MissingInventory_DisplayGrid' has a wrong offset!");
static_assert(offsetof(UUI_LoadoutManager_C, MissingInventory_Descriptors) == 0x000410, "Member 'UUI_LoadoutManager_C::MissingInventory_Descriptors' has a wrong offset!");
static_assert(offsetof(UUI_LoadoutManager_C, SelfStash) == 0x000420, "Member 'UUI_LoadoutManager_C::SelfStash' has a wrong offset!");
static_assert(offsetof(UUI_LoadoutManager_C, OnCloseLoadoutManager) == 0x000428, "Member 'UUI_LoadoutManager_C::OnCloseLoadoutManager' has a wrong offset!");
static_assert(offsetof(UUI_LoadoutManager_C, IdleWidgetTimeoutTimer) == 0x000438, "Member 'UUI_LoadoutManager_C::IdleWidgetTimeoutTimer' has a wrong offset!");
static_assert(offsetof(UUI_LoadoutManager_C, IdleWidgetMinTimeTimer) == 0x000440, "Member 'UUI_LoadoutManager_C::IdleWidgetMinTimeTimer' has a wrong offset!");
static_assert(offsetof(UUI_LoadoutManager_C, IdleWidget) == 0x000448, "Member 'UUI_LoadoutManager_C::IdleWidget' has a wrong offset!");
static_assert(offsetof(UUI_LoadoutManager_C, IdleWidgetClosed) == 0x000450, "Member 'UUI_LoadoutManager_C::IdleWidgetClosed' has a wrong offset!");
static_assert(offsetof(UUI_LoadoutManager_C, FocusedButton) == 0x000460, "Member 'UUI_LoadoutManager_C::FocusedButton' has a wrong offset!");
static_assert(offsetof(UUI_LoadoutManager_C, LastFocusedWidget) == 0x000468, "Member 'UUI_LoadoutManager_C::LastFocusedWidget' has a wrong offset!");

}

