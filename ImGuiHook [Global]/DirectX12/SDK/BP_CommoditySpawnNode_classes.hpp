#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CommoditySpawnNode

#include "Basic.hpp"

#include "Flame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CommoditySpawnNode.BP_CommoditySpawnNode_C
// 0x0010 (0x0260 - 0x0250)
class UBP_CommoditySpawnNode_C final : public UCommoditySpawnNode
{
public:
	bool                                          ScaleWithBoosters;                                 // 0x0250(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          BoosterTest;                                       // 0x0251(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_252[0x2];                                      // 0x0252(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         BoosterCounteTest;                                 // 0x0254(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BoosterScaling;                                    // 0x0258(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void OnCommodityParamsModify(TSubclassOf<class AActor> CommodityType, int32 CapacityMinIn, int32 CapacityMaxIn, int32 SubObjectsLimitMinIn, int32 SubObjectsLimitMaxIn, int32* CapacityMinOut, int32* CapacityMaxOut, int32* SubObjectsLimitMinOut, int32* SubObjectsLimitMaxOut) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CommoditySpawnNode_C">();
	}
	static class UBP_CommoditySpawnNode_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_CommoditySpawnNode_C>();
	}
};
static_assert(alignof(UBP_CommoditySpawnNode_C) == 0x000010, "Wrong alignment on UBP_CommoditySpawnNode_C");
static_assert(sizeof(UBP_CommoditySpawnNode_C) == 0x000260, "Wrong size on UBP_CommoditySpawnNode_C");
static_assert(offsetof(UBP_CommoditySpawnNode_C, ScaleWithBoosters) == 0x000250, "Member 'UBP_CommoditySpawnNode_C::ScaleWithBoosters' has a wrong offset!");
static_assert(offsetof(UBP_CommoditySpawnNode_C, BoosterTest) == 0x000251, "Member 'UBP_CommoditySpawnNode_C::BoosterTest' has a wrong offset!");
static_assert(offsetof(UBP_CommoditySpawnNode_C, BoosterCounteTest) == 0x000254, "Member 'UBP_CommoditySpawnNode_C::BoosterCounteTest' has a wrong offset!");
static_assert(offsetof(UBP_CommoditySpawnNode_C, BoosterScaling) == 0x000258, "Member 'UBP_CommoditySpawnNode_C::BoosterScaling' has a wrong offset!");

}

