#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_PlayerListHorizontal

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function UI_PlayerListHorizontal.UI_PlayerListHorizontal_C.ExecuteUbergraph_UI_PlayerListHorizontal
// 0x0030 (0x0030 - 0x0000)
struct UI_PlayerListHorizontal_C_ExecuteUbergraph_UI_PlayerListHorizontal final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerInfoWidget*                      K2Node_Event_AddedWidget;                          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_SlotAsHorizontalBoxSlot_ReturnValue;      // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_PlayerListHorizontal_C_ExecuteUbergraph_UI_PlayerListHorizontal) == 0x000008, "Wrong alignment on UI_PlayerListHorizontal_C_ExecuteUbergraph_UI_PlayerListHorizontal");
static_assert(sizeof(UI_PlayerListHorizontal_C_ExecuteUbergraph_UI_PlayerListHorizontal) == 0x000030, "Wrong size on UI_PlayerListHorizontal_C_ExecuteUbergraph_UI_PlayerListHorizontal");
static_assert(offsetof(UI_PlayerListHorizontal_C_ExecuteUbergraph_UI_PlayerListHorizontal, EntryPoint) == 0x000000, "Member 'UI_PlayerListHorizontal_C_ExecuteUbergraph_UI_PlayerListHorizontal::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_PlayerListHorizontal_C_ExecuteUbergraph_UI_PlayerListHorizontal, K2Node_MakeStruct_Margin) == 0x000004, "Member 'UI_PlayerListHorizontal_C_ExecuteUbergraph_UI_PlayerListHorizontal::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(UI_PlayerListHorizontal_C_ExecuteUbergraph_UI_PlayerListHorizontal, K2Node_Event_AddedWidget) == 0x000018, "Member 'UI_PlayerListHorizontal_C_ExecuteUbergraph_UI_PlayerListHorizontal::K2Node_Event_AddedWidget' has a wrong offset!");
static_assert(offsetof(UI_PlayerListHorizontal_C_ExecuteUbergraph_UI_PlayerListHorizontal, CallFunc_SlotAsHorizontalBoxSlot_ReturnValue) == 0x000020, "Member 'UI_PlayerListHorizontal_C_ExecuteUbergraph_UI_PlayerListHorizontal::CallFunc_SlotAsHorizontalBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_PlayerListHorizontal_C_ExecuteUbergraph_UI_PlayerListHorizontal, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'UI_PlayerListHorizontal_C_ExecuteUbergraph_UI_PlayerListHorizontal::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function UI_PlayerListHorizontal.UI_PlayerListHorizontal_C.OnPlayerAdded
// 0x0008 (0x0008 - 0x0000)
struct UI_PlayerListHorizontal_C_OnPlayerAdded final
{
public:
	class UPlayerInfoWidget*                      AddedWidget;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_PlayerListHorizontal_C_OnPlayerAdded) == 0x000008, "Wrong alignment on UI_PlayerListHorizontal_C_OnPlayerAdded");
static_assert(sizeof(UI_PlayerListHorizontal_C_OnPlayerAdded) == 0x000008, "Wrong size on UI_PlayerListHorizontal_C_OnPlayerAdded");
static_assert(offsetof(UI_PlayerListHorizontal_C_OnPlayerAdded, AddedWidget) == 0x000000, "Member 'UI_PlayerListHorizontal_C_OnPlayerAdded::AddedWidget' has a wrong offset!");

}

