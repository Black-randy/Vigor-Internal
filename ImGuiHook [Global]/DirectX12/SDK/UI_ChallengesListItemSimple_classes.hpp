#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_ChallengesListItemSimple

#include "Basic.hpp"

#include "Flame_structs.hpp"
#include "Flame_classes.hpp"
#include "Engine_structs.hpp"
#include "E_ChallengeManagerState_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "E_ChallengeSlotState_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_ChallengesListItemSimple.UI_ChallengesListItemSimple_C
// 0x0190 (0x0448 - 0x02B8)
class UUI_ChallengesListItemSimple_C final : public UFlameWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 BackgroundImage;                                   // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BackgroundImage_Story;                             // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameTextBlock*                        ChallengeCategoryLabel;                            // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ChallengeIcon;                                     // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameTextBlock*                        ChallengeMaxValue;                                 // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           ChallengeProgressBar;                              // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameTextBlock*                        ChallengeProgressValue;                            // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameTextBlock*                        ChallengeTitle;                                    // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_0;                                           // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_FlameMarqueeBlockText_C*            MarqueeChallengeCondition;                         // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FChallengeList                         ChallengeSettings;                                 // 0x0310(0x0100)(Edit, BlueprintVisible, DisableEditOnInstance)
	class ABP_ChallengeSlot_C*                    BP_ChallengeSlot;                                  // 0x0410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class ABP_ChallengeManager_C*                 BP_ChallengeManager;                               // 0x0418(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              NextResetTimestamp;                                // 0x0420(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Completed_Challenge_Background;                    // 0x0428(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Completed_Challenge_Foreground;                    // 0x0438(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_UI_ChallengesListItemSimple(int32 EntryPoint);
	void EventChallengeManagerReady();
	void Construct();
	void GetRemainingTime(const struct FDateTime& Time, class FText* RemainingTime);
	void UpdateChallengeState(class ABP_ChallengeSlot_C* ChallengeSlotIn);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_ChallengesListItemSimple_C">();
	}
	static class UUI_ChallengesListItemSimple_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_ChallengesListItemSimple_C>();
	}
};
static_assert(alignof(UUI_ChallengesListItemSimple_C) == 0x000008, "Wrong alignment on UUI_ChallengesListItemSimple_C");
static_assert(sizeof(UUI_ChallengesListItemSimple_C) == 0x000448, "Wrong size on UUI_ChallengesListItemSimple_C");
static_assert(offsetof(UUI_ChallengesListItemSimple_C, UberGraphFrame) == 0x0002B8, "Member 'UUI_ChallengesListItemSimple_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_ChallengesListItemSimple_C, BackgroundImage) == 0x0002C0, "Member 'UUI_ChallengesListItemSimple_C::BackgroundImage' has a wrong offset!");
static_assert(offsetof(UUI_ChallengesListItemSimple_C, BackgroundImage_Story) == 0x0002C8, "Member 'UUI_ChallengesListItemSimple_C::BackgroundImage_Story' has a wrong offset!");
static_assert(offsetof(UUI_ChallengesListItemSimple_C, ChallengeCategoryLabel) == 0x0002D0, "Member 'UUI_ChallengesListItemSimple_C::ChallengeCategoryLabel' has a wrong offset!");
static_assert(offsetof(UUI_ChallengesListItemSimple_C, ChallengeIcon) == 0x0002D8, "Member 'UUI_ChallengesListItemSimple_C::ChallengeIcon' has a wrong offset!");
static_assert(offsetof(UUI_ChallengesListItemSimple_C, ChallengeMaxValue) == 0x0002E0, "Member 'UUI_ChallengesListItemSimple_C::ChallengeMaxValue' has a wrong offset!");
static_assert(offsetof(UUI_ChallengesListItemSimple_C, ChallengeProgressBar) == 0x0002E8, "Member 'UUI_ChallengesListItemSimple_C::ChallengeProgressBar' has a wrong offset!");
static_assert(offsetof(UUI_ChallengesListItemSimple_C, ChallengeProgressValue) == 0x0002F0, "Member 'UUI_ChallengesListItemSimple_C::ChallengeProgressValue' has a wrong offset!");
static_assert(offsetof(UUI_ChallengesListItemSimple_C, ChallengeTitle) == 0x0002F8, "Member 'UUI_ChallengesListItemSimple_C::ChallengeTitle' has a wrong offset!");
static_assert(offsetof(UUI_ChallengesListItemSimple_C, Image_0) == 0x000300, "Member 'UUI_ChallengesListItemSimple_C::Image_0' has a wrong offset!");
static_assert(offsetof(UUI_ChallengesListItemSimple_C, MarqueeChallengeCondition) == 0x000308, "Member 'UUI_ChallengesListItemSimple_C::MarqueeChallengeCondition' has a wrong offset!");
static_assert(offsetof(UUI_ChallengesListItemSimple_C, ChallengeSettings) == 0x000310, "Member 'UUI_ChallengesListItemSimple_C::ChallengeSettings' has a wrong offset!");
static_assert(offsetof(UUI_ChallengesListItemSimple_C, BP_ChallengeSlot) == 0x000410, "Member 'UUI_ChallengesListItemSimple_C::BP_ChallengeSlot' has a wrong offset!");
static_assert(offsetof(UUI_ChallengesListItemSimple_C, BP_ChallengeManager) == 0x000418, "Member 'UUI_ChallengesListItemSimple_C::BP_ChallengeManager' has a wrong offset!");
static_assert(offsetof(UUI_ChallengesListItemSimple_C, NextResetTimestamp) == 0x000420, "Member 'UUI_ChallengesListItemSimple_C::NextResetTimestamp' has a wrong offset!");
static_assert(offsetof(UUI_ChallengesListItemSimple_C, Completed_Challenge_Background) == 0x000428, "Member 'UUI_ChallengesListItemSimple_C::Completed_Challenge_Background' has a wrong offset!");
static_assert(offsetof(UUI_ChallengesListItemSimple_C, Completed_Challenge_Foreground) == 0x000438, "Member 'UUI_ChallengesListItemSimple_C::Completed_Challenge_Foreground' has a wrong offset!");

}

