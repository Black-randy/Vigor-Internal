#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_SpectatorFrame

#include "Basic.hpp"

#include "UI_SpectatorFrame_classes.hpp"
#include "UI_SpectatorFrame_parameters.hpp"


namespace SDK
{

// Function UI_SpectatorFrame.UI_SpectatorFrame_C.ExecuteUbergraph_UI_SpectatorFrame
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_SpectatorFrame_C::ExecuteUbergraph_UI_SpectatorFrame(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SpectatorFrame_C", "ExecuteUbergraph_UI_SpectatorFrame");

	Params::UI_SpectatorFrame_C_ExecuteUbergraph_UI_SpectatorFrame Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_SpectatorFrame.UI_SpectatorFrame_C.ClearOtherWidgets
// (BlueprintCallable, BlueprintEvent)

void UUI_SpectatorFrame_C::ClearOtherWidgets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SpectatorFrame_C", "ClearOtherWidgets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_SpectatorFrame.UI_SpectatorFrame_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_SpectatorFrame_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SpectatorFrame_C", "Tick");

	Params::UI_SpectatorFrame_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_SpectatorFrame.UI_SpectatorFrame_C.On game menu closed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFlameWidget*                     FlameWidget                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_SpectatorFrame_C::On_game_menu_closed(class UFlameWidget* FlameWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SpectatorFrame_C", "On game menu closed");

	Params::UI_SpectatorFrame_C_On_game_menu_closed Parms{};

	Parms.FlameWidget = FlameWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_SpectatorFrame.UI_SpectatorFrame_C.OnGameMenu
// (BlueprintCallable, BlueprintEvent)

void UUI_SpectatorFrame_C::OnGameMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SpectatorFrame_C", "OnGameMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_SpectatorFrame.UI_SpectatorFrame_C.BndEvt__CycleRight_Button_K2Node_ComponentBoundEvent_3_OnActionPressedEvent__DelegateSignature
// (BlueprintEvent)

void UUI_SpectatorFrame_C::BndEvt__CycleRight_Button_K2Node_ComponentBoundEvent_3_OnActionPressedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SpectatorFrame_C", "BndEvt__CycleRight_Button_K2Node_ComponentBoundEvent_3_OnActionPressedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_SpectatorFrame.UI_SpectatorFrame_C.BndEvt__CycleLeft_Button_K2Node_ComponentBoundEvent_1_OnActionPressedEvent__DelegateSignature
// (BlueprintEvent)

void UUI_SpectatorFrame_C::BndEvt__CycleLeft_Button_K2Node_ComponentBoundEvent_1_OnActionPressedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SpectatorFrame_C", "BndEvt__CycleLeft_Button_K2Node_ComponentBoundEvent_1_OnActionPressedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_SpectatorFrame.UI_SpectatorFrame_C.OnCloseMapPressed
// (BlueprintCallable, BlueprintEvent)

void UUI_SpectatorFrame_C::OnCloseMapPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SpectatorFrame_C", "OnCloseMapPressed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_SpectatorFrame.UI_SpectatorFrame_C.Refresh Spectator UI
// (BlueprintCallable, BlueprintEvent)

void UUI_SpectatorFrame_C::Refresh_Spectator_UI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SpectatorFrame_C", "Refresh Spectator UI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_SpectatorFrame.UI_SpectatorFrame_C.Widget Initialized
// (BlueprintCallable, BlueprintEvent)

void UUI_SpectatorFrame_C::Widget_Initialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SpectatorFrame_C", "Widget Initialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_SpectatorFrame.UI_SpectatorFrame_C.UpdateSpectatorMessage
// (BlueprintCallable, BlueprintEvent)

void UUI_SpectatorFrame_C::UpdateSpectatorMessage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SpectatorFrame_C", "UpdateSpectatorMessage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_SpectatorFrame.UI_SpectatorFrame_C.OnCancelPressed
// (BlueprintCallable, BlueprintEvent)

void UUI_SpectatorFrame_C::OnCancelPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SpectatorFrame_C", "OnCancelPressed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_SpectatorFrame.UI_SpectatorFrame_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_SpectatorFrame_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SpectatorFrame_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_SpectatorFrame.UI_SpectatorFrame_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_SpectatorFrame_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SpectatorFrame_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_SpectatorFrame.UI_SpectatorFrame_C.OverrideMaxChallengeListCount
// (BlueprintCallable, BlueprintEvent)

void UUI_SpectatorFrame_C::OverrideMaxChallengeListCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SpectatorFrame_C", "OverrideMaxChallengeListCount");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_SpectatorFrame.UI_SpectatorFrame_C.BndEvt__CycleRight_Button_1_K2Node_ComponentBoundEvent_0_OnActionPressedEvent__DelegateSignature
// (BlueprintEvent)

void UUI_SpectatorFrame_C::BndEvt__CycleRight_Button_1_K2Node_ComponentBoundEvent_0_OnActionPressedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SpectatorFrame_C", "BndEvt__CycleRight_Button_1_K2Node_ComponentBoundEvent_0_OnActionPressedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_SpectatorFrame.UI_SpectatorFrame_C.Check If Teams GameMode
// (BlueprintCallable, BlueprintEvent)

void UUI_SpectatorFrame_C::Check_If_Teams_GameMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SpectatorFrame_C", "Check If Teams GameMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_SpectatorFrame.UI_SpectatorFrame_C.Close Scoreboard
// (BlueprintCallable, BlueprintEvent)

void UUI_SpectatorFrame_C::Close_Scoreboard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SpectatorFrame_C", "Close Scoreboard");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_SpectatorFrame.UI_SpectatorFrame_C.Open Scoreboard
// (BlueprintCallable, BlueprintEvent)

void UUI_SpectatorFrame_C::Open_Scoreboard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SpectatorFrame_C", "Open Scoreboard");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_SpectatorFrame.UI_SpectatorFrame_C.Update Scoreboard
// (BlueprintCallable, BlueprintEvent)

void UUI_SpectatorFrame_C::Update_Scoreboard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SpectatorFrame_C", "Update Scoreboard");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_SpectatorFrame.UI_SpectatorFrame_C.BndEvt__Scoreboard_Button_K2Node_ComponentBoundEvent_2_OnActionPressedEvent__DelegateSignature
// (BlueprintEvent)

void UUI_SpectatorFrame_C::BndEvt__Scoreboard_Button_K2Node_ComponentBoundEvent_2_OnActionPressedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SpectatorFrame_C", "BndEvt__Scoreboard_Button_K2Node_ComponentBoundEvent_2_OnActionPressedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_SpectatorFrame.UI_SpectatorFrame_C.Check If Spectator Is Your Teamkiller
// (BlueprintCallable, BlueprintEvent)

void UUI_SpectatorFrame_C::Check_If_Spectator_Is_Your_Teamkiller()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SpectatorFrame_C", "Check If Spectator Is Your Teamkiller");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_SpectatorFrame.UI_SpectatorFrame_C.Close Teamkiller Toggle Widget
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void UUI_SpectatorFrame_C::Close_Teamkiller_Toggle_Widget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SpectatorFrame_C", "Close Teamkiller Toggle Widget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_SpectatorFrame.UI_SpectatorFrame_C.BndEvt__UI_GamepadActionWidget_DisableTeamkiller_K2Node_ComponentBoundEvent_0_OnActionHoldEvent__DelegateSignature
// (BlueprintEvent)

void UUI_SpectatorFrame_C::BndEvt__UI_GamepadActionWidget_DisableTeamkiller_K2Node_ComponentBoundEvent_0_OnActionHoldEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SpectatorFrame_C", "BndEvt__UI_GamepadActionWidget_DisableTeamkiller_K2Node_ComponentBoundEvent_0_OnActionHoldEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_SpectatorFrame.UI_SpectatorFrame_C.ShowInteracting
// (BlueprintCallable, BlueprintEvent)

void UUI_SpectatorFrame_C::ShowInteracting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SpectatorFrame_C", "ShowInteracting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_SpectatorFrame.UI_SpectatorFrame_C.IsWorldSpectatorYourTeamkiller
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_WorldSpectator_C*             WorldSpectator                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Output                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_SpectatorFrame_C::IsWorldSpectatorYourTeamkiller(class ABP_WorldSpectator_C* WorldSpectator, bool* Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SpectatorFrame_C", "IsWorldSpectatorYourTeamkiller");

	Params::UI_SpectatorFrame_C_IsWorldSpectatorYourTeamkiller Parms{};

	Parms.WorldSpectator = WorldSpectator;

	UObject::ProcessEvent(Func, &Parms);

	if (Output != nullptr)
		*Output = Parms.Output;
}


// Function UI_SpectatorFrame.UI_SpectatorFrame_C.DisableTeamkillerStatusFromMyTeamkiller
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_SpectatorFrame_C::DisableTeamkillerStatusFromMyTeamkiller()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SpectatorFrame_C", "DisableTeamkillerStatusFromMyTeamkiller");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_SpectatorFrame.UI_SpectatorFrame_C.ToggleLevelMap
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUI_SpectatorFrame_C::ToggleLevelMap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SpectatorFrame_C", "ToggleLevelMap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_SpectatorFrame.UI_SpectatorFrame_C.Check Player Cycle Posibility
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_SpectatorFrame_C::Check_Player_Cycle_Posibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SpectatorFrame_C", "Check Player Cycle Posibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_SpectatorFrame.UI_SpectatorFrame_C.Check Player Has Map Tool
// (Private, BlueprintCallable, BlueprintEvent)

void UUI_SpectatorFrame_C::Check_Player_Has_Map_Tool()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SpectatorFrame_C", "Check Player Has Map Tool");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_SpectatorFrame.UI_SpectatorFrame_C.Check Controlls Visible
// (Protected, BlueprintCallable, BlueprintEvent)

void UUI_SpectatorFrame_C::Check_Controlls_Visible()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SpectatorFrame_C", "Check Controlls Visible");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_SpectatorFrame.UI_SpectatorFrame_C.Toggle visibility of cycle buttons
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Should_be_visible                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_SpectatorFrame_C::Toggle_visibility_of_cycle_buttons(bool Should_be_visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SpectatorFrame_C", "Toggle visibility of cycle buttons");

	Params::UI_SpectatorFrame_C_Toggle_visibility_of_cycle_buttons Parms{};

	Parms.Should_be_visible = Should_be_visible;

	UObject::ProcessEvent(Func, &Parms);
}

}

