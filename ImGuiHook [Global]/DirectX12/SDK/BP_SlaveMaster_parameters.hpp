#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SlaveMaster

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_SlaveMaster.BP_SlaveMaster_C.ExecuteUbergraph_BP_SlaveMaster
// 0x0014 (0x0014 - 0x0000)
struct BP_SlaveMaster_C_ExecuteUbergraph_BP_SlaveMaster final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Position;                       // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SlaveMaster_C_ExecuteUbergraph_BP_SlaveMaster) == 0x000004, "Wrong alignment on BP_SlaveMaster_C_ExecuteUbergraph_BP_SlaveMaster");
static_assert(sizeof(BP_SlaveMaster_C_ExecuteUbergraph_BP_SlaveMaster) == 0x000014, "Wrong size on BP_SlaveMaster_C_ExecuteUbergraph_BP_SlaveMaster");
static_assert(offsetof(BP_SlaveMaster_C_ExecuteUbergraph_BP_SlaveMaster, EntryPoint) == 0x000000, "Member 'BP_SlaveMaster_C_ExecuteUbergraph_BP_SlaveMaster::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_SlaveMaster_C_ExecuteUbergraph_BP_SlaveMaster, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_SlaveMaster_C_ExecuteUbergraph_BP_SlaveMaster::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_SlaveMaster_C_ExecuteUbergraph_BP_SlaveMaster, K2Node_CustomEvent_Position) == 0x000008, "Member 'BP_SlaveMaster_C_ExecuteUbergraph_BP_SlaveMaster::K2Node_CustomEvent_Position' has a wrong offset!");

// Function BP_SlaveMaster.BP_SlaveMaster_C.MakeSlave
// 0x000C (0x000C - 0x0000)
struct BP_SlaveMaster_C_MakeSlave final
{
public:
	struct FVector                                Position;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SlaveMaster_C_MakeSlave) == 0x000004, "Wrong alignment on BP_SlaveMaster_C_MakeSlave");
static_assert(sizeof(BP_SlaveMaster_C_MakeSlave) == 0x00000C, "Wrong size on BP_SlaveMaster_C_MakeSlave");
static_assert(offsetof(BP_SlaveMaster_C_MakeSlave, Position) == 0x000000, "Member 'BP_SlaveMaster_C_MakeSlave::Position' has a wrong offset!");

// Function BP_SlaveMaster.BP_SlaveMaster_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_SlaveMaster_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SlaveMaster_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_SlaveMaster_C_ReceiveTick");
static_assert(sizeof(BP_SlaveMaster_C_ReceiveTick) == 0x000004, "Wrong size on BP_SlaveMaster_C_ReceiveTick");
static_assert(offsetof(BP_SlaveMaster_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_SlaveMaster_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

