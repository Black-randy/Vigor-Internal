#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GMComponent_ADM_Container_Simple

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_GMComponent_ADM_Container_Simple.BP_GMComponent_ADM_Container_Simple_C.ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple
// 0x0118 (0x0118 - 0x0000)
struct BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetAirplaneClass_Class;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	class ABP_GameMode_AirDropModular_C*          K2Node_DynamicCast_AsBP_Game_Mode_Air_Drop_Modular; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_1;                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameMode_AirDropModular_C*          K2Node_DynamicCast_AsBP_Game_Mode_Air_Drop_Modular_1; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PCComponent_ADM_C*                  CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_PCComponent_ADM_Container_Simple_C* K2Node_DynamicCast_AsBP_PCComponent_ADM_Container_Simple; // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_Game_Mode_Is_Running;                 // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Handle_Valid_and_Timer_Exists_Return_Value; // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7B[0x1];                                       // 0x007B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AirDropContainer_Base_C*            K2Node_CustomEvent_Container;                      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_PCComponent_ADM_C*                  CallFunc_Array_Get_Item_1;                         // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_PCComponent_ADM_Container_Simple_C* K2Node_DynamicCast_AsBP_PCComponent_ADM_Container_Simple_1; // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ABP_AirDropContainer_Base_C* Container)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x00AC(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x00C0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTwoVectors                            CallFunc_RandomAircraftFlightPlan_Ingress_and_Egress_Vectors; // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ABP_AirDropLocation_C*                  K2Node_CustomEvent_Drop_Zone_Actor;                // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue; // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetContainerClass_Class;                  // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AirDropContainer_Base_C*            CallFunc_Drop_a_Container_New_Container;           // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple) == 0x000008, "Wrong alignment on BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple");
static_assert(sizeof(BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple) == 0x000118, "Wrong size on BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple, EntryPoint) == 0x000000, "Member 'BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple, CallFunc_GetAirplaneClass_Class) == 0x000008, "Member 'BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple::CallFunc_GetAirplaneClass_Class' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple, CallFunc_GetGameMode_ReturnValue) == 0x000010, "Member 'BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple, K2Node_DynamicCast_AsBP_Game_Mode_Air_Drop_Modular) == 0x000028, "Member 'BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple::K2Node_DynamicCast_AsBP_Game_Mode_Air_Drop_Modular' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple, CallFunc_GetGameMode_ReturnValue_1) == 0x000048, "Member 'BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple::CallFunc_GetGameMode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple, K2Node_DynamicCast_AsBP_Game_Mode_Air_Drop_Modular_1) == 0x000050, "Member 'BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple::K2Node_DynamicCast_AsBP_Game_Mode_Air_Drop_Modular_1' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple, CallFunc_Array_Length_ReturnValue_1) == 0x00005C, "Member 'BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple, Temp_int_Array_Index_Variable) == 0x000060, "Member 'BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple, CallFunc_Array_Get_Item) == 0x000068, "Member 'BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple, K2Node_DynamicCast_AsBP_PCComponent_ADM_Container_Simple) == 0x000070, "Member 'BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple::K2Node_DynamicCast_AsBP_PCComponent_ADM_Container_Simple' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple, K2Node_DynamicCast_bSuccess_2) == 0x000078, "Member 'BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple, K2Node_Event_Game_Mode_Is_Running) == 0x000079, "Member 'BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple::K2Node_Event_Game_Mode_Is_Running' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple, CallFunc_Handle_Valid_and_Timer_Exists_Return_Value) == 0x00007A, "Member 'BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple::CallFunc_Handle_Valid_and_Timer_Exists_Return_Value' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple, Temp_int_Array_Index_Variable_1) == 0x00007C, "Member 'BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple, K2Node_CustomEvent_Container) == 0x000080, "Member 'BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple::K2Node_CustomEvent_Container' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple, CallFunc_Array_Get_Item_1) == 0x000088, "Member 'BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple, K2Node_DynamicCast_AsBP_PCComponent_ADM_Container_Simple_1) == 0x000090, "Member 'BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple::K2Node_DynamicCast_AsBP_PCComponent_ADM_Container_Simple_1' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple, K2Node_DynamicCast_bSuccess_3) == 0x000098, "Member 'BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple, Temp_int_Loop_Counter_Variable_1) == 0x00009C, "Member 'BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0000A0, "Member 'BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000A4, "Member 'BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000A8, "Member 'BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000AC, "Member 'BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0000C0, "Member 'BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple, CallFunc_RandomAircraftFlightPlan_Ingress_and_Egress_Vectors) == 0x0000C8, "Member 'BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple::CallFunc_RandomAircraftFlightPlan_Ingress_and_Egress_Vectors' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple, K2Node_CustomEvent_Drop_Zone_Actor) == 0x0000E0, "Member 'BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple::K2Node_CustomEvent_Drop_Zone_Actor' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0000E8, "Member 'BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple, CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue) == 0x0000F4, "Member 'BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple::CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000F8, "Member 'BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000FC, "Member 'BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple, CallFunc_GetContainerClass_Class) == 0x000108, "Member 'BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple::CallFunc_GetContainerClass_Class' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple, CallFunc_Drop_a_Container_New_Container) == 0x000110, "Member 'BP_GMComponent_ADM_Container_Simple_C_ExecuteUbergraph_BP_GMComponent_ADM_Container_Simple::CallFunc_Drop_a_Container_New_Container' has a wrong offset!");

// Function BP_GMComponent_ADM_Container_Simple.BP_GMComponent_ADM_Container_Simple_C.Spawn Air Drop Aircraft
// 0x0008 (0x0008 - 0x0000)
struct BP_GMComponent_ADM_Container_Simple_C_Spawn_Air_Drop_Aircraft final
{
public:
	class ABP_AirDropLocation_C*                  Drop_Zone_Actor;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GMComponent_ADM_Container_Simple_C_Spawn_Air_Drop_Aircraft) == 0x000008, "Wrong alignment on BP_GMComponent_ADM_Container_Simple_C_Spawn_Air_Drop_Aircraft");
static_assert(sizeof(BP_GMComponent_ADM_Container_Simple_C_Spawn_Air_Drop_Aircraft) == 0x000008, "Wrong size on BP_GMComponent_ADM_Container_Simple_C_Spawn_Air_Drop_Aircraft");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_Spawn_Air_Drop_Aircraft, Drop_Zone_Actor) == 0x000000, "Member 'BP_GMComponent_ADM_Container_Simple_C_Spawn_Air_Drop_Aircraft::Drop_Zone_Actor' has a wrong offset!");

// Function BP_GMComponent_ADM_Container_Simple.BP_GMComponent_ADM_Container_Simple_C.Container Touched Down
// 0x0008 (0x0008 - 0x0000)
struct BP_GMComponent_ADM_Container_Simple_C_Container_Touched_Down final
{
public:
	class ABP_AirDropContainer_Base_C*            Container;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GMComponent_ADM_Container_Simple_C_Container_Touched_Down) == 0x000008, "Wrong alignment on BP_GMComponent_ADM_Container_Simple_C_Container_Touched_Down");
static_assert(sizeof(BP_GMComponent_ADM_Container_Simple_C_Container_Touched_Down) == 0x000008, "Wrong size on BP_GMComponent_ADM_Container_Simple_C_Container_Touched_Down");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_Container_Touched_Down, Container) == 0x000000, "Member 'BP_GMComponent_ADM_Container_Simple_C_Container_Touched_Down::Container' has a wrong offset!");

// Function BP_GMComponent_ADM_Container_Simple.BP_GMComponent_ADM_Container_Simple_C.Game Mode Toggled
// 0x0001 (0x0001 - 0x0000)
struct BP_GMComponent_ADM_Container_Simple_C_Game_Mode_Toggled final
{
public:
	bool                                          Game_Mode_Is_Running;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GMComponent_ADM_Container_Simple_C_Game_Mode_Toggled) == 0x000001, "Wrong alignment on BP_GMComponent_ADM_Container_Simple_C_Game_Mode_Toggled");
static_assert(sizeof(BP_GMComponent_ADM_Container_Simple_C_Game_Mode_Toggled) == 0x000001, "Wrong size on BP_GMComponent_ADM_Container_Simple_C_Game_Mode_Toggled");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_Game_Mode_Toggled, Game_Mode_Is_Running) == 0x000000, "Member 'BP_GMComponent_ADM_Container_Simple_C_Game_Mode_Toggled::Game_Mode_Is_Running' has a wrong offset!");

// Function BP_GMComponent_ADM_Container_Simple.BP_GMComponent_ADM_Container_Simple_C.Initialize Bindings
// 0x0038 (0x0038 - 0x0000)
struct BP_GMComponent_ADM_Container_Simple_C_Initialize_Bindings final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class ABP_AirDropLocation_C* Drop_Zone_Actor)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Initialize_Bindings_Success;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameMode_AirDropModular_C*          K2Node_DynamicCast_AsBP_Game_Mode_Air_Drop_Modular; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GMComponent_ADM_Container_Simple_C_Initialize_Bindings) == 0x000008, "Wrong alignment on BP_GMComponent_ADM_Container_Simple_C_Initialize_Bindings");
static_assert(sizeof(BP_GMComponent_ADM_Container_Simple_C_Initialize_Bindings) == 0x000038, "Wrong size on BP_GMComponent_ADM_Container_Simple_C_Initialize_Bindings");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_Initialize_Bindings, Success) == 0x000000, "Member 'BP_GMComponent_ADM_Container_Simple_C_Initialize_Bindings::Success' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_Initialize_Bindings, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_GMComponent_ADM_Container_Simple_C_Initialize_Bindings::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_Initialize_Bindings, CallFunc_GetGameMode_ReturnValue) == 0x000018, "Member 'BP_GMComponent_ADM_Container_Simple_C_Initialize_Bindings::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_Initialize_Bindings, CallFunc_Initialize_Bindings_Success) == 0x000020, "Member 'BP_GMComponent_ADM_Container_Simple_C_Initialize_Bindings::CallFunc_Initialize_Bindings_Success' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_Initialize_Bindings, K2Node_DynamicCast_AsBP_Game_Mode_Air_Drop_Modular) == 0x000028, "Member 'BP_GMComponent_ADM_Container_Simple_C_Initialize_Bindings::K2Node_DynamicCast_AsBP_Game_Mode_Air_Drop_Modular' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_Initialize_Bindings, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_GMComponent_ADM_Container_Simple_C_Initialize_Bindings::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_GMComponent_ADM_Container_Simple.BP_GMComponent_ADM_Container_Simple_C.RandomAircraftFlightPlan
// 0x00D8 (0x00D8 - 0x0000)
struct BP_GMComponent_ADM_Container_Simple_C_RandomAircraftFlightPlan final
{
public:
	struct FTwoVectors                            Ingress_and_Egress_Vectors;                        // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomUnitVector_ReturnValue;             // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTwoVectors                            K2Node_MakeStruct_TwoVectors;                      // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GMComponent_ADM_Container_Simple_C_RandomAircraftFlightPlan) == 0x000004, "Wrong alignment on BP_GMComponent_ADM_Container_Simple_C_RandomAircraftFlightPlan");
static_assert(sizeof(BP_GMComponent_ADM_Container_Simple_C_RandomAircraftFlightPlan) == 0x0000D8, "Wrong size on BP_GMComponent_ADM_Container_Simple_C_RandomAircraftFlightPlan");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_RandomAircraftFlightPlan, Ingress_and_Egress_Vectors) == 0x000000, "Member 'BP_GMComponent_ADM_Container_Simple_C_RandomAircraftFlightPlan::Ingress_and_Egress_Vectors' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_RandomAircraftFlightPlan, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_GMComponent_ADM_Container_Simple_C_RandomAircraftFlightPlan::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_RandomAircraftFlightPlan, CallFunc_RandomUnitVector_ReturnValue) == 0x00001C, "Member 'BP_GMComponent_ADM_Container_Simple_C_RandomAircraftFlightPlan::CallFunc_RandomUnitVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_RandomAircraftFlightPlan, CallFunc_BreakVector_X) == 0x000028, "Member 'BP_GMComponent_ADM_Container_Simple_C_RandomAircraftFlightPlan::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_RandomAircraftFlightPlan, CallFunc_BreakVector_Y) == 0x00002C, "Member 'BP_GMComponent_ADM_Container_Simple_C_RandomAircraftFlightPlan::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_RandomAircraftFlightPlan, CallFunc_BreakVector_Z) == 0x000030, "Member 'BP_GMComponent_ADM_Container_Simple_C_RandomAircraftFlightPlan::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_RandomAircraftFlightPlan, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000034, "Member 'BP_GMComponent_ADM_Container_Simple_C_RandomAircraftFlightPlan::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_RandomAircraftFlightPlan, CallFunc_MakeVector_ReturnValue) == 0x000038, "Member 'BP_GMComponent_ADM_Container_Simple_C_RandomAircraftFlightPlan::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_RandomAircraftFlightPlan, CallFunc_Normal_ReturnValue) == 0x000044, "Member 'BP_GMComponent_ADM_Container_Simple_C_RandomAircraftFlightPlan::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_RandomAircraftFlightPlan, CallFunc_BreakVector_X_1) == 0x000050, "Member 'BP_GMComponent_ADM_Container_Simple_C_RandomAircraftFlightPlan::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_RandomAircraftFlightPlan, CallFunc_BreakVector_Y_1) == 0x000054, "Member 'BP_GMComponent_ADM_Container_Simple_C_RandomAircraftFlightPlan::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_RandomAircraftFlightPlan, CallFunc_BreakVector_Z_1) == 0x000058, "Member 'BP_GMComponent_ADM_Container_Simple_C_RandomAircraftFlightPlan::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_RandomAircraftFlightPlan, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00005C, "Member 'BP_GMComponent_ADM_Container_Simple_C_RandomAircraftFlightPlan::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_RandomAircraftFlightPlan, CallFunc_Add_FloatFloat_ReturnValue) == 0x000068, "Member 'BP_GMComponent_ADM_Container_Simple_C_RandomAircraftFlightPlan::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_RandomAircraftFlightPlan, CallFunc_Add_VectorVector_ReturnValue) == 0x00006C, "Member 'BP_GMComponent_ADM_Container_Simple_C_RandomAircraftFlightPlan::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_RandomAircraftFlightPlan, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000078, "Member 'BP_GMComponent_ADM_Container_Simple_C_RandomAircraftFlightPlan::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_RandomAircraftFlightPlan, CallFunc_BreakVector_X_2) == 0x000084, "Member 'BP_GMComponent_ADM_Container_Simple_C_RandomAircraftFlightPlan::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_RandomAircraftFlightPlan, CallFunc_BreakVector_Y_2) == 0x000088, "Member 'BP_GMComponent_ADM_Container_Simple_C_RandomAircraftFlightPlan::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_RandomAircraftFlightPlan, CallFunc_BreakVector_Z_2) == 0x00008C, "Member 'BP_GMComponent_ADM_Container_Simple_C_RandomAircraftFlightPlan::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_RandomAircraftFlightPlan, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000090, "Member 'BP_GMComponent_ADM_Container_Simple_C_RandomAircraftFlightPlan::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_RandomAircraftFlightPlan, CallFunc_MakeVector_ReturnValue_1) == 0x00009C, "Member 'BP_GMComponent_ADM_Container_Simple_C_RandomAircraftFlightPlan::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_RandomAircraftFlightPlan, CallFunc_BreakVector_X_3) == 0x0000A8, "Member 'BP_GMComponent_ADM_Container_Simple_C_RandomAircraftFlightPlan::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_RandomAircraftFlightPlan, CallFunc_BreakVector_Y_3) == 0x0000AC, "Member 'BP_GMComponent_ADM_Container_Simple_C_RandomAircraftFlightPlan::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_RandomAircraftFlightPlan, CallFunc_BreakVector_Z_3) == 0x0000B0, "Member 'BP_GMComponent_ADM_Container_Simple_C_RandomAircraftFlightPlan::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_RandomAircraftFlightPlan, CallFunc_MakeVector_ReturnValue_2) == 0x0000B4, "Member 'BP_GMComponent_ADM_Container_Simple_C_RandomAircraftFlightPlan::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_RandomAircraftFlightPlan, K2Node_MakeStruct_TwoVectors) == 0x0000C0, "Member 'BP_GMComponent_ADM_Container_Simple_C_RandomAircraftFlightPlan::K2Node_MakeStruct_TwoVectors' has a wrong offset!");

// Function BP_GMComponent_ADM_Container_Simple.BP_GMComponent_ADM_Container_Simple_C.GetContainerClass
// 0x0030 (0x0030 - 0x0000)
struct BP_GMComponent_ADM_Container_Simple_C_GetContainerClass final
{
public:
	class UClass*                                 Class_0;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameState_Script_C*                 K2Node_DynamicCast_AsBP_Game_State_Script;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Map_Find_Value;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GMComponent_ADM_Container_Simple_C_GetContainerClass) == 0x000008, "Wrong alignment on BP_GMComponent_ADM_Container_Simple_C_GetContainerClass");
static_assert(sizeof(BP_GMComponent_ADM_Container_Simple_C_GetContainerClass) == 0x000030, "Wrong size on BP_GMComponent_ADM_Container_Simple_C_GetContainerClass");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_GetContainerClass, Class_0) == 0x000000, "Member 'BP_GMComponent_ADM_Container_Simple_C_GetContainerClass::Class_0' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_GetContainerClass, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'BP_GMComponent_ADM_Container_Simple_C_GetContainerClass::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_GetContainerClass, K2Node_DynamicCast_AsBP_Game_State_Script) == 0x000010, "Member 'BP_GMComponent_ADM_Container_Simple_C_GetContainerClass::K2Node_DynamicCast_AsBP_Game_State_Script' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_GetContainerClass, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_GMComponent_ADM_Container_Simple_C_GetContainerClass::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_GetContainerClass, CallFunc_Map_Find_Value) == 0x000020, "Member 'BP_GMComponent_ADM_Container_Simple_C_GetContainerClass::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_GetContainerClass, CallFunc_Map_Find_ReturnValue) == 0x000028, "Member 'BP_GMComponent_ADM_Container_Simple_C_GetContainerClass::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_GetContainerClass, CallFunc_IsValidClass_ReturnValue) == 0x000029, "Member 'BP_GMComponent_ADM_Container_Simple_C_GetContainerClass::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");

// Function BP_GMComponent_ADM_Container_Simple.BP_GMComponent_ADM_Container_Simple_C.GetAirplaneClass
// 0x0030 (0x0030 - 0x0000)
struct BP_GMComponent_ADM_Container_Simple_C_GetAirplaneClass final
{
public:
	class UClass*                                 Class_0;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameState_Script_C*                 K2Node_DynamicCast_AsBP_Game_State_Script;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Map_Find_Value;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GMComponent_ADM_Container_Simple_C_GetAirplaneClass) == 0x000008, "Wrong alignment on BP_GMComponent_ADM_Container_Simple_C_GetAirplaneClass");
static_assert(sizeof(BP_GMComponent_ADM_Container_Simple_C_GetAirplaneClass) == 0x000030, "Wrong size on BP_GMComponent_ADM_Container_Simple_C_GetAirplaneClass");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_GetAirplaneClass, Class_0) == 0x000000, "Member 'BP_GMComponent_ADM_Container_Simple_C_GetAirplaneClass::Class_0' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_GetAirplaneClass, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'BP_GMComponent_ADM_Container_Simple_C_GetAirplaneClass::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_GetAirplaneClass, K2Node_DynamicCast_AsBP_Game_State_Script) == 0x000010, "Member 'BP_GMComponent_ADM_Container_Simple_C_GetAirplaneClass::K2Node_DynamicCast_AsBP_Game_State_Script' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_GetAirplaneClass, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_GMComponent_ADM_Container_Simple_C_GetAirplaneClass::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_GetAirplaneClass, CallFunc_Map_Find_Value) == 0x000020, "Member 'BP_GMComponent_ADM_Container_Simple_C_GetAirplaneClass::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_GetAirplaneClass, CallFunc_Map_Find_ReturnValue) == 0x000028, "Member 'BP_GMComponent_ADM_Container_Simple_C_GetAirplaneClass::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Container_Simple_C_GetAirplaneClass, CallFunc_IsValidClass_ReturnValue) == 0x000029, "Member 'BP_GMComponent_ADM_Container_Simple_C_GetAirplaneClass::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");

}

