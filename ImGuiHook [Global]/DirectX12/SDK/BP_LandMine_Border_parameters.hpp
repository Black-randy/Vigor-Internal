#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LandMine_Border

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Flame_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_LandMine_Border.BP_LandMine_Border_C.ExecuteUbergraph_BP_LandMine_Border
// 0x0088 (0x0088 - 0x0000)
struct BP_LandMine_Border_C_ExecuteUbergraph_BP_LandMine_Border final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FExplosionEffect>               K2Node_Event_ExplosionEffects;                     // 0x0020(0x0010)(ConstParm, ReferenceParm)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Location;                             // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_ExplosionRadius;                      // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_Event_InstigatorController;                 // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_DamagingExplosion;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_EnviromentDamageMultiplier;           // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E[0x2];                                       // 0x007E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LandMine_Border_C_ExecuteUbergraph_BP_LandMine_Border) == 0x000008, "Wrong alignment on BP_LandMine_Border_C_ExecuteUbergraph_BP_LandMine_Border");
static_assert(sizeof(BP_LandMine_Border_C_ExecuteUbergraph_BP_LandMine_Border) == 0x000088, "Wrong size on BP_LandMine_Border_C_ExecuteUbergraph_BP_LandMine_Border");
static_assert(offsetof(BP_LandMine_Border_C_ExecuteUbergraph_BP_LandMine_Border, EntryPoint) == 0x000000, "Member 'BP_LandMine_Border_C_ExecuteUbergraph_BP_LandMine_Border::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_LandMine_Border_C_ExecuteUbergraph_BP_LandMine_Border, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000004, "Member 'BP_LandMine_Border_C_ExecuteUbergraph_BP_LandMine_Border::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LandMine_Border_C_ExecuteUbergraph_BP_LandMine_Border, Temp_bool_Variable) == 0x000010, "Member 'BP_LandMine_Border_C_ExecuteUbergraph_BP_LandMine_Border::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_LandMine_Border_C_ExecuteUbergraph_BP_LandMine_Border, Temp_float_Variable) == 0x000014, "Member 'BP_LandMine_Border_C_ExecuteUbergraph_BP_LandMine_Border::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_LandMine_Border_C_ExecuteUbergraph_BP_LandMine_Border, Temp_float_Variable_1) == 0x000018, "Member 'BP_LandMine_Border_C_ExecuteUbergraph_BP_LandMine_Border::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LandMine_Border_C_ExecuteUbergraph_BP_LandMine_Border, K2Node_Event_ExplosionEffects) == 0x000020, "Member 'BP_LandMine_Border_C_ExecuteUbergraph_BP_LandMine_Border::K2Node_Event_ExplosionEffects' has a wrong offset!");
static_assert(offsetof(BP_LandMine_Border_C_ExecuteUbergraph_BP_LandMine_Border, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000030, "Member 'BP_LandMine_Border_C_ExecuteUbergraph_BP_LandMine_Border::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_LandMine_Border_C_ExecuteUbergraph_BP_LandMine_Border, K2Node_ComponentBoundEvent_OtherActor) == 0x000038, "Member 'BP_LandMine_Border_C_ExecuteUbergraph_BP_LandMine_Border::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_LandMine_Border_C_ExecuteUbergraph_BP_LandMine_Border, K2Node_ComponentBoundEvent_OtherComp) == 0x000040, "Member 'BP_LandMine_Border_C_ExecuteUbergraph_BP_LandMine_Border::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_LandMine_Border_C_ExecuteUbergraph_BP_LandMine_Border, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000048, "Member 'BP_LandMine_Border_C_ExecuteUbergraph_BP_LandMine_Border::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_LandMine_Border_C_ExecuteUbergraph_BP_LandMine_Border, K2Node_Event_Location) == 0x00004C, "Member 'BP_LandMine_Border_C_ExecuteUbergraph_BP_LandMine_Border::K2Node_Event_Location' has a wrong offset!");
static_assert(offsetof(BP_LandMine_Border_C_ExecuteUbergraph_BP_LandMine_Border, K2Node_Event_ExplosionRadius) == 0x000058, "Member 'BP_LandMine_Border_C_ExecuteUbergraph_BP_LandMine_Border::K2Node_Event_ExplosionRadius' has a wrong offset!");
static_assert(offsetof(BP_LandMine_Border_C_ExecuteUbergraph_BP_LandMine_Border, K2Node_Event_InstigatorController) == 0x000060, "Member 'BP_LandMine_Border_C_ExecuteUbergraph_BP_LandMine_Border::K2Node_Event_InstigatorController' has a wrong offset!");
static_assert(offsetof(BP_LandMine_Border_C_ExecuteUbergraph_BP_LandMine_Border, K2Node_Event_DamageCauser) == 0x000068, "Member 'BP_LandMine_Border_C_ExecuteUbergraph_BP_LandMine_Border::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_LandMine_Border_C_ExecuteUbergraph_BP_LandMine_Border, K2Node_Event_DamagingExplosion) == 0x000070, "Member 'BP_LandMine_Border_C_ExecuteUbergraph_BP_LandMine_Border::K2Node_Event_DamagingExplosion' has a wrong offset!");
static_assert(offsetof(BP_LandMine_Border_C_ExecuteUbergraph_BP_LandMine_Border, K2Node_Event_EnviromentDamageMultiplier) == 0x000074, "Member 'BP_LandMine_Border_C_ExecuteUbergraph_BP_LandMine_Border::K2Node_Event_EnviromentDamageMultiplier' has a wrong offset!");
static_assert(offsetof(BP_LandMine_Border_C_ExecuteUbergraph_BP_LandMine_Border, CallFunc_Vector_Distance_ReturnValue) == 0x000078, "Member 'BP_LandMine_Border_C_ExecuteUbergraph_BP_LandMine_Border::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LandMine_Border_C_ExecuteUbergraph_BP_LandMine_Border, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00007C, "Member 'BP_LandMine_Border_C_ExecuteUbergraph_BP_LandMine_Border::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LandMine_Border_C_ExecuteUbergraph_BP_LandMine_Border, CallFunc_BooleanAND_ReturnValue) == 0x00007D, "Member 'BP_LandMine_Border_C_ExecuteUbergraph_BP_LandMine_Border::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LandMine_Border_C_ExecuteUbergraph_BP_LandMine_Border, K2Node_Select_Default) == 0x000080, "Member 'BP_LandMine_Border_C_ExecuteUbergraph_BP_LandMine_Border::K2Node_Select_Default' has a wrong offset!");

// Function BP_LandMine_Border.BP_LandMine_Border_C.ProccessExplosion
// 0x0028 (0x0028 - 0x0000)
struct BP_LandMine_Border_C_ProccessExplosion final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ExplosionRadius;                                   // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            InstigatorController;                              // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DamagingExplosion;                                 // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         EnviromentDamageMultiplier;                        // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LandMine_Border_C_ProccessExplosion) == 0x000008, "Wrong alignment on BP_LandMine_Border_C_ProccessExplosion");
static_assert(sizeof(BP_LandMine_Border_C_ProccessExplosion) == 0x000028, "Wrong size on BP_LandMine_Border_C_ProccessExplosion");
static_assert(offsetof(BP_LandMine_Border_C_ProccessExplosion, Location) == 0x000000, "Member 'BP_LandMine_Border_C_ProccessExplosion::Location' has a wrong offset!");
static_assert(offsetof(BP_LandMine_Border_C_ProccessExplosion, ExplosionRadius) == 0x00000C, "Member 'BP_LandMine_Border_C_ProccessExplosion::ExplosionRadius' has a wrong offset!");
static_assert(offsetof(BP_LandMine_Border_C_ProccessExplosion, InstigatorController) == 0x000010, "Member 'BP_LandMine_Border_C_ProccessExplosion::InstigatorController' has a wrong offset!");
static_assert(offsetof(BP_LandMine_Border_C_ProccessExplosion, DamageCauser) == 0x000018, "Member 'BP_LandMine_Border_C_ProccessExplosion::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_LandMine_Border_C_ProccessExplosion, DamagingExplosion) == 0x000020, "Member 'BP_LandMine_Border_C_ProccessExplosion::DamagingExplosion' has a wrong offset!");
static_assert(offsetof(BP_LandMine_Border_C_ProccessExplosion, EnviromentDamageMultiplier) == 0x000024, "Member 'BP_LandMine_Border_C_ProccessExplosion::EnviromentDamageMultiplier' has a wrong offset!");

// Function BP_LandMine_Border.BP_LandMine_Border_C.BndEvt__TriggerRadius_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_LandMine_Border_C_BndEvt__TriggerRadius_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LandMine_Border_C_BndEvt__TriggerRadius_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_LandMine_Border_C_BndEvt__TriggerRadius_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_LandMine_Border_C_BndEvt__TriggerRadius_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_LandMine_Border_C_BndEvt__TriggerRadius_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_LandMine_Border_C_BndEvt__TriggerRadius_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_LandMine_Border_C_BndEvt__TriggerRadius_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_LandMine_Border_C_BndEvt__TriggerRadius_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_LandMine_Border_C_BndEvt__TriggerRadius_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_LandMine_Border_C_BndEvt__TriggerRadius_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_LandMine_Border_C_BndEvt__TriggerRadius_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_LandMine_Border_C_BndEvt__TriggerRadius_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_LandMine_Border_C_BndEvt__TriggerRadius_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_LandMine_Border.BP_LandMine_Border_C.OnExplosionCompleted
// 0x0010 (0x0010 - 0x0000)
struct BP_LandMine_Border_C_OnExplosionCompleted final
{
public:
	TArray<struct FExplosionEffect>               ExplosionEffects;                                  // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_LandMine_Border_C_OnExplosionCompleted) == 0x000008, "Wrong alignment on BP_LandMine_Border_C_OnExplosionCompleted");
static_assert(sizeof(BP_LandMine_Border_C_OnExplosionCompleted) == 0x000010, "Wrong size on BP_LandMine_Border_C_OnExplosionCompleted");
static_assert(offsetof(BP_LandMine_Border_C_OnExplosionCompleted, ExplosionEffects) == 0x000000, "Member 'BP_LandMine_Border_C_OnExplosionCompleted::ExplosionEffects' has a wrong offset!");

// Function BP_LandMine_Border.BP_LandMine_Border_C.UserConstructionScript
// 0x0110 (0x0110 - 0x0000)
struct BP_LandMine_Border_C_UserConstructionScript final
{
public:
	TSoftObjectPtr<class UObject>                 CallFunc_GetSoftReference_ReturnValue;             // 0x0000(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftReference_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            K2Node_DynamicCast_AsStatic_Mesh;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLocalBounds_Min;                       // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocalBounds_Max;                       // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0084(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_LandMine_Border_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_LandMine_Border_C_UserConstructionScript");
static_assert(sizeof(BP_LandMine_Border_C_UserConstructionScript) == 0x000110, "Wrong size on BP_LandMine_Border_C_UserConstructionScript");
static_assert(offsetof(BP_LandMine_Border_C_UserConstructionScript, CallFunc_GetSoftReference_ReturnValue) == 0x000000, "Member 'BP_LandMine_Border_C_UserConstructionScript::CallFunc_GetSoftReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LandMine_Border_C_UserConstructionScript, CallFunc_LoadSoftReference_ReturnValue) == 0x000028, "Member 'BP_LandMine_Border_C_UserConstructionScript::CallFunc_LoadSoftReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LandMine_Border_C_UserConstructionScript, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000030, "Member 'BP_LandMine_Border_C_UserConstructionScript::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LandMine_Border_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'BP_LandMine_Border_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LandMine_Border_C_UserConstructionScript, K2Node_DynamicCast_AsStatic_Mesh) == 0x000038, "Member 'BP_LandMine_Border_C_UserConstructionScript::K2Node_DynamicCast_AsStatic_Mesh' has a wrong offset!");
static_assert(offsetof(BP_LandMine_Border_C_UserConstructionScript, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_LandMine_Border_C_UserConstructionScript::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_LandMine_Border_C_UserConstructionScript, CallFunc_SetStaticMesh_ReturnValue) == 0x000041, "Member 'BP_LandMine_Border_C_UserConstructionScript::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LandMine_Border_C_UserConstructionScript, CallFunc_GetLocalBounds_Min) == 0x000044, "Member 'BP_LandMine_Border_C_UserConstructionScript::CallFunc_GetLocalBounds_Min' has a wrong offset!");
static_assert(offsetof(BP_LandMine_Border_C_UserConstructionScript, CallFunc_GetLocalBounds_Max) == 0x000050, "Member 'BP_LandMine_Border_C_UserConstructionScript::CallFunc_GetLocalBounds_Max' has a wrong offset!");
static_assert(offsetof(BP_LandMine_Border_C_UserConstructionScript, CallFunc_BreakVector_X) == 0x00005C, "Member 'BP_LandMine_Border_C_UserConstructionScript::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_LandMine_Border_C_UserConstructionScript, CallFunc_BreakVector_Y) == 0x000060, "Member 'BP_LandMine_Border_C_UserConstructionScript::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_LandMine_Border_C_UserConstructionScript, CallFunc_BreakVector_Z) == 0x000064, "Member 'BP_LandMine_Border_C_UserConstructionScript::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_LandMine_Border_C_UserConstructionScript, CallFunc_BreakVector_X_1) == 0x000068, "Member 'BP_LandMine_Border_C_UserConstructionScript::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_LandMine_Border_C_UserConstructionScript, CallFunc_BreakVector_Y_1) == 0x00006C, "Member 'BP_LandMine_Border_C_UserConstructionScript::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_LandMine_Border_C_UserConstructionScript, CallFunc_BreakVector_Z_1) == 0x000070, "Member 'BP_LandMine_Border_C_UserConstructionScript::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_LandMine_Border_C_UserConstructionScript, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000074, "Member 'BP_LandMine_Border_C_UserConstructionScript::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LandMine_Border_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue) == 0x000078, "Member 'BP_LandMine_Border_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LandMine_Border_C_UserConstructionScript, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000084, "Member 'BP_LandMine_Border_C_UserConstructionScript::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");

}

