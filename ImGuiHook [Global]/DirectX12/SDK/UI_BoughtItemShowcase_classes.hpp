#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_BoughtItemShowcase

#include "Basic.hpp"

#include "Flame_classes.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_BoughtItemShowcase.UI_BoughtItemShowcase_C
// 0x0128 (0x0418 - 0x02F0)
class UUI_BoughtItemShowcase_C final : public UModalWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       FadeInContent;                                     // 0x02F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       MoveOut;                                           // 0x0300(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       MoveIn;                                            // 0x0308(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       BlurIn;                                            // 0x0310(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Iris;                                              // 0x0318(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBox*                         ColorsHorizontalBox;                               // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             ColorsScrollBox;                                   // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URetainerBox*                           FadeBox;                                           // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameTextBlock*                        ItemName;                                          // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 NameBackground;                                    // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpacer*                                Spacer_80;                                         // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_FlameSafezone_C*                    UI_FlameSafezone;                                  // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_InputActionWidget_C*                UI_GamepadActionWidget_Continue;                   // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_InputActionWidget_C*                UI_GamepadActionWidget_Equip;                      // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_InputActionWidget_C*                UI_GamepadActionWidget_Select;                     // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMap<class UClass*, int32>                    BoughtItems;                                       // 0x0370(0x0050)(Edit, BlueprintVisible, Interp, ExposeOnSpawn)
	class AActor*                                 PrevViewTarget;                                    // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BoughtItemScene_C*                  SceneBP;                                           // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SingleItemBought;                                  // 0x03D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D1[0x3];                                      // 0x03D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CurrentlyFocusedID;                                // 0x03D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CurrentlySelectBaseItem;                           // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           ModalFocusTimer;                                   // 0x03E0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          MoveInAnimPlayedAlready;                           // 0x03E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E9[0x3];                                      // 0x03E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Optional_HardCurrencySizeIndex;                    // 0x03EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          OnlyCrownPack;                                     // 0x03F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          DelayedManualStartUsed;                            // 0x03F1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_3F2[0x2];                                      // 0x03F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DirectionHeldCooldown;                             // 0x03F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DirectionHeldLastTime;                             // 0x03F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FC[0x4];                                      // 0x03FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnBoughtSceneClosed;                               // 0x0400(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          PlayMoveOutAnimationOnExit;                        // 0x0410(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void OnBoughtSceneClosed__DelegateSignature(class UFlameWidget* Widget);
	void ExecuteUbergraph_UI_BoughtItemShowcase(int32 EntryPoint);
	void OnItemClicked(class UButton* Sender);
	void ResetCosmeticAutoRotation();
	void Remove();
	void BndEvt__UI_GamepadActionWidget_Continue_K2Node_ComponentBoundEvent_2_OnActionPressedEvent__DelegateSignature();
	void CustomEvent_1();
	void RightHeld();
	void EventDelayedConstruct();
	void DisableInput();
	void EnableInputAfterFadeInAnim();
	void PlayContentFadeInAnimation();
	void BndEvt__UI_GamepadActionWidget_Continue_K2Node_ComponentBoundEvent_1_OnActionHoldEvent__DelegateSignature();
	void UpdateName(class UClass* ItemClass);
	void ExitWithAnim();
	void Destruct();
	void LeftPressed();
	void RightPressed();
	void UnbindSelectButtons();
	void BindSelectButtons();
	void UpdatePreview(bool PlayMoveInAnimation);
	void InitBP_Scene();
	void UpdateEquipVisibility(bool OverrideVisibility, bool NewOverrideVisibility);
	void ReInit();
	void InitUI();
	void BndEvt__UI_GamepadActionWidget_Equip_K2Node_ComponentBoundEvent_0_OnActionPressedEvent__DelegateSignature();
	void CloseUI();
	void Construct();
	void SetShelterUIsVisibility(ESlateVisibility InputPin);
	void FillContents(TArray<class UClass*>* VisibleVariants);
	void SetFocusByIndex(class UClass** OutFocusedVariant, class UClass** OutFocusedBaseItem, int32* OutSelectedIndex);
	void FindCorrectEquipSound(class UClass* ItemClass, class USoundBase** OutputPin);
	void Update_Item_Ticks_On_Entry();
	void Update_Item_Ticks_On_Equip(class UClass* EquipedClass);
	void GetBaseItemClass(class UClass* Class_0, class UClass** BaseClass);
	void UpdateEquipButtonVisibility(class UClass* InputPin, bool OverrideVisibility, bool NewVisibility);

	class UWidget* GetWidgetToFocus() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_BoughtItemShowcase_C">();
	}
	static class UUI_BoughtItemShowcase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_BoughtItemShowcase_C>();
	}
};
static_assert(alignof(UUI_BoughtItemShowcase_C) == 0x000008, "Wrong alignment on UUI_BoughtItemShowcase_C");
static_assert(sizeof(UUI_BoughtItemShowcase_C) == 0x000418, "Wrong size on UUI_BoughtItemShowcase_C");
static_assert(offsetof(UUI_BoughtItemShowcase_C, UberGraphFrame) == 0x0002F0, "Member 'UUI_BoughtItemShowcase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_BoughtItemShowcase_C, FadeInContent) == 0x0002F8, "Member 'UUI_BoughtItemShowcase_C::FadeInContent' has a wrong offset!");
static_assert(offsetof(UUI_BoughtItemShowcase_C, MoveOut) == 0x000300, "Member 'UUI_BoughtItemShowcase_C::MoveOut' has a wrong offset!");
static_assert(offsetof(UUI_BoughtItemShowcase_C, MoveIn) == 0x000308, "Member 'UUI_BoughtItemShowcase_C::MoveIn' has a wrong offset!");
static_assert(offsetof(UUI_BoughtItemShowcase_C, BlurIn) == 0x000310, "Member 'UUI_BoughtItemShowcase_C::BlurIn' has a wrong offset!");
static_assert(offsetof(UUI_BoughtItemShowcase_C, Iris) == 0x000318, "Member 'UUI_BoughtItemShowcase_C::Iris' has a wrong offset!");
static_assert(offsetof(UUI_BoughtItemShowcase_C, ColorsHorizontalBox) == 0x000320, "Member 'UUI_BoughtItemShowcase_C::ColorsHorizontalBox' has a wrong offset!");
static_assert(offsetof(UUI_BoughtItemShowcase_C, ColorsScrollBox) == 0x000328, "Member 'UUI_BoughtItemShowcase_C::ColorsScrollBox' has a wrong offset!");
static_assert(offsetof(UUI_BoughtItemShowcase_C, FadeBox) == 0x000330, "Member 'UUI_BoughtItemShowcase_C::FadeBox' has a wrong offset!");
static_assert(offsetof(UUI_BoughtItemShowcase_C, ItemName) == 0x000338, "Member 'UUI_BoughtItemShowcase_C::ItemName' has a wrong offset!");
static_assert(offsetof(UUI_BoughtItemShowcase_C, NameBackground) == 0x000340, "Member 'UUI_BoughtItemShowcase_C::NameBackground' has a wrong offset!");
static_assert(offsetof(UUI_BoughtItemShowcase_C, Spacer_80) == 0x000348, "Member 'UUI_BoughtItemShowcase_C::Spacer_80' has a wrong offset!");
static_assert(offsetof(UUI_BoughtItemShowcase_C, UI_FlameSafezone) == 0x000350, "Member 'UUI_BoughtItemShowcase_C::UI_FlameSafezone' has a wrong offset!");
static_assert(offsetof(UUI_BoughtItemShowcase_C, UI_GamepadActionWidget_Continue) == 0x000358, "Member 'UUI_BoughtItemShowcase_C::UI_GamepadActionWidget_Continue' has a wrong offset!");
static_assert(offsetof(UUI_BoughtItemShowcase_C, UI_GamepadActionWidget_Equip) == 0x000360, "Member 'UUI_BoughtItemShowcase_C::UI_GamepadActionWidget_Equip' has a wrong offset!");
static_assert(offsetof(UUI_BoughtItemShowcase_C, UI_GamepadActionWidget_Select) == 0x000368, "Member 'UUI_BoughtItemShowcase_C::UI_GamepadActionWidget_Select' has a wrong offset!");
static_assert(offsetof(UUI_BoughtItemShowcase_C, BoughtItems) == 0x000370, "Member 'UUI_BoughtItemShowcase_C::BoughtItems' has a wrong offset!");
static_assert(offsetof(UUI_BoughtItemShowcase_C, PrevViewTarget) == 0x0003C0, "Member 'UUI_BoughtItemShowcase_C::PrevViewTarget' has a wrong offset!");
static_assert(offsetof(UUI_BoughtItemShowcase_C, SceneBP) == 0x0003C8, "Member 'UUI_BoughtItemShowcase_C::SceneBP' has a wrong offset!");
static_assert(offsetof(UUI_BoughtItemShowcase_C, SingleItemBought) == 0x0003D0, "Member 'UUI_BoughtItemShowcase_C::SingleItemBought' has a wrong offset!");
static_assert(offsetof(UUI_BoughtItemShowcase_C, CurrentlyFocusedID) == 0x0003D4, "Member 'UUI_BoughtItemShowcase_C::CurrentlyFocusedID' has a wrong offset!");
static_assert(offsetof(UUI_BoughtItemShowcase_C, CurrentlySelectBaseItem) == 0x0003D8, "Member 'UUI_BoughtItemShowcase_C::CurrentlySelectBaseItem' has a wrong offset!");
static_assert(offsetof(UUI_BoughtItemShowcase_C, ModalFocusTimer) == 0x0003E0, "Member 'UUI_BoughtItemShowcase_C::ModalFocusTimer' has a wrong offset!");
static_assert(offsetof(UUI_BoughtItemShowcase_C, MoveInAnimPlayedAlready) == 0x0003E8, "Member 'UUI_BoughtItemShowcase_C::MoveInAnimPlayedAlready' has a wrong offset!");
static_assert(offsetof(UUI_BoughtItemShowcase_C, Optional_HardCurrencySizeIndex) == 0x0003EC, "Member 'UUI_BoughtItemShowcase_C::Optional_HardCurrencySizeIndex' has a wrong offset!");
static_assert(offsetof(UUI_BoughtItemShowcase_C, OnlyCrownPack) == 0x0003F0, "Member 'UUI_BoughtItemShowcase_C::OnlyCrownPack' has a wrong offset!");
static_assert(offsetof(UUI_BoughtItemShowcase_C, DelayedManualStartUsed) == 0x0003F1, "Member 'UUI_BoughtItemShowcase_C::DelayedManualStartUsed' has a wrong offset!");
static_assert(offsetof(UUI_BoughtItemShowcase_C, DirectionHeldCooldown) == 0x0003F4, "Member 'UUI_BoughtItemShowcase_C::DirectionHeldCooldown' has a wrong offset!");
static_assert(offsetof(UUI_BoughtItemShowcase_C, DirectionHeldLastTime) == 0x0003F8, "Member 'UUI_BoughtItemShowcase_C::DirectionHeldLastTime' has a wrong offset!");
static_assert(offsetof(UUI_BoughtItemShowcase_C, OnBoughtSceneClosed) == 0x000400, "Member 'UUI_BoughtItemShowcase_C::OnBoughtSceneClosed' has a wrong offset!");
static_assert(offsetof(UUI_BoughtItemShowcase_C, PlayMoveOutAnimationOnExit) == 0x000410, "Member 'UUI_BoughtItemShowcase_C::PlayMoveOutAnimationOnExit' has a wrong offset!");

}

