#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Mannequin_WinnerScreen_Base

#include "Basic.hpp"

#include "Struct_WinnerScreenMontagePreset_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_Mannequin_WinnerScreen_Base.BP_Mannequin_WinnerScreen_Base_C.ExecuteUbergraph_BP_Mannequin_WinnerScreen_Base
// 0x00F0 (0x00F0 - 0x0000)
struct BP_Mannequin_WinnerScreen_Base_C_ExecuteUbergraph_BP_Mannequin_WinnerScreen_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_2;                   // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_1;                   // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_1;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_2;            // 0x003C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable;                                // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_3;                   // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_3;            // 0x0064(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_4;            // 0x0074(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_Array_Get_Item;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_4;                   // 0x00A4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x00B0(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimMontage*>                   CallFunc_Get_Random_Preset_Montages_Montages;      // 0x00C8(0x0010)(ReferenceParm)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x00D8(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AHumanCharacter*                        K2Node_Event_Character;                            // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckForCurrentJiggle_Success;            // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Mannequin_WinnerScreen_Base_C_ExecuteUbergraph_BP_Mannequin_WinnerScreen_Base) == 0x000008, "Wrong alignment on BP_Mannequin_WinnerScreen_Base_C_ExecuteUbergraph_BP_Mannequin_WinnerScreen_Base");
static_assert(sizeof(BP_Mannequin_WinnerScreen_Base_C_ExecuteUbergraph_BP_Mannequin_WinnerScreen_Base) == 0x0000F0, "Wrong size on BP_Mannequin_WinnerScreen_Base_C_ExecuteUbergraph_BP_Mannequin_WinnerScreen_Base");
static_assert(offsetof(BP_Mannequin_WinnerScreen_Base_C_ExecuteUbergraph_BP_Mannequin_WinnerScreen_Base, EntryPoint) == 0x000000, "Member 'BP_Mannequin_WinnerScreen_Base_C_ExecuteUbergraph_BP_Mannequin_WinnerScreen_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_WinnerScreen_Base_C_ExecuteUbergraph_BP_Mannequin_WinnerScreen_Base, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_Mannequin_WinnerScreen_Base_C_ExecuteUbergraph_BP_Mannequin_WinnerScreen_Base::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_WinnerScreen_Base_C_ExecuteUbergraph_BP_Mannequin_WinnerScreen_Base, K2Node_CustomEvent_NotifyName_2) == 0x000014, "Member 'BP_Mannequin_WinnerScreen_Base_C_ExecuteUbergraph_BP_Mannequin_WinnerScreen_Base::K2Node_CustomEvent_NotifyName_2' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_WinnerScreen_Base_C_ExecuteUbergraph_BP_Mannequin_WinnerScreen_Base, K2Node_CustomEvent_NotifyName_1) == 0x00001C, "Member 'BP_Mannequin_WinnerScreen_Base_C_ExecuteUbergraph_BP_Mannequin_WinnerScreen_Base::K2Node_CustomEvent_NotifyName_1' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_WinnerScreen_Base_C_ExecuteUbergraph_BP_Mannequin_WinnerScreen_Base, K2Node_CreateDelegate_OutputDelegate_1) == 0x000024, "Member 'BP_Mannequin_WinnerScreen_Base_C_ExecuteUbergraph_BP_Mannequin_WinnerScreen_Base::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_WinnerScreen_Base_C_ExecuteUbergraph_BP_Mannequin_WinnerScreen_Base, K2Node_CustomEvent_NotifyName) == 0x000034, "Member 'BP_Mannequin_WinnerScreen_Base_C_ExecuteUbergraph_BP_Mannequin_WinnerScreen_Base::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_WinnerScreen_Base_C_ExecuteUbergraph_BP_Mannequin_WinnerScreen_Base, K2Node_CreateDelegate_OutputDelegate_2) == 0x00003C, "Member 'BP_Mannequin_WinnerScreen_Base_C_ExecuteUbergraph_BP_Mannequin_WinnerScreen_Base::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_WinnerScreen_Base_C_ExecuteUbergraph_BP_Mannequin_WinnerScreen_Base, Temp_name_Variable) == 0x00004C, "Member 'BP_Mannequin_WinnerScreen_Base_C_ExecuteUbergraph_BP_Mannequin_WinnerScreen_Base::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_WinnerScreen_Base_C_ExecuteUbergraph_BP_Mannequin_WinnerScreen_Base, CallFunc_IsValid_ReturnValue) == 0x000054, "Member 'BP_Mannequin_WinnerScreen_Base_C_ExecuteUbergraph_BP_Mannequin_WinnerScreen_Base::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_WinnerScreen_Base_C_ExecuteUbergraph_BP_Mannequin_WinnerScreen_Base, K2Node_CustomEvent_NotifyName_3) == 0x000058, "Member 'BP_Mannequin_WinnerScreen_Base_C_ExecuteUbergraph_BP_Mannequin_WinnerScreen_Base::K2Node_CustomEvent_NotifyName_3' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_WinnerScreen_Base_C_ExecuteUbergraph_BP_Mannequin_WinnerScreen_Base, Temp_int_Variable) == 0x000060, "Member 'BP_Mannequin_WinnerScreen_Base_C_ExecuteUbergraph_BP_Mannequin_WinnerScreen_Base::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_WinnerScreen_Base_C_ExecuteUbergraph_BP_Mannequin_WinnerScreen_Base, K2Node_CreateDelegate_OutputDelegate_3) == 0x000064, "Member 'BP_Mannequin_WinnerScreen_Base_C_ExecuteUbergraph_BP_Mannequin_WinnerScreen_Base::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_WinnerScreen_Base_C_ExecuteUbergraph_BP_Mannequin_WinnerScreen_Base, K2Node_CreateDelegate_OutputDelegate_4) == 0x000074, "Member 'BP_Mannequin_WinnerScreen_Base_C_ExecuteUbergraph_BP_Mannequin_WinnerScreen_Base::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_WinnerScreen_Base_C_ExecuteUbergraph_BP_Mannequin_WinnerScreen_Base, CallFunc_Array_Get_Item) == 0x000088, "Member 'BP_Mannequin_WinnerScreen_Base_C_ExecuteUbergraph_BP_Mannequin_WinnerScreen_Base::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_WinnerScreen_Base_C_ExecuteUbergraph_BP_Mannequin_WinnerScreen_Base, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000090, "Member 'BP_Mannequin_WinnerScreen_Base_C_ExecuteUbergraph_BP_Mannequin_WinnerScreen_Base::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_WinnerScreen_Base_C_ExecuteUbergraph_BP_Mannequin_WinnerScreen_Base, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x000098, "Member 'BP_Mannequin_WinnerScreen_Base_C_ExecuteUbergraph_BP_Mannequin_WinnerScreen_Base::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_WinnerScreen_Base_C_ExecuteUbergraph_BP_Mannequin_WinnerScreen_Base, CallFunc_IsValid_ReturnValue_1) == 0x0000A0, "Member 'BP_Mannequin_WinnerScreen_Base_C_ExecuteUbergraph_BP_Mannequin_WinnerScreen_Base::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_WinnerScreen_Base_C_ExecuteUbergraph_BP_Mannequin_WinnerScreen_Base, K2Node_CustomEvent_NotifyName_4) == 0x0000A4, "Member 'BP_Mannequin_WinnerScreen_Base_C_ExecuteUbergraph_BP_Mannequin_WinnerScreen_Base::K2Node_CustomEvent_NotifyName_4' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_WinnerScreen_Base_C_ExecuteUbergraph_BP_Mannequin_WinnerScreen_Base, CallFunc_Add_IntInt_ReturnValue) == 0x0000AC, "Member 'BP_Mannequin_WinnerScreen_Base_C_ExecuteUbergraph_BP_Mannequin_WinnerScreen_Base::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_WinnerScreen_Base_C_ExecuteUbergraph_BP_Mannequin_WinnerScreen_Base, K2Node_CreateDelegate_OutputDelegate_5) == 0x0000B0, "Member 'BP_Mannequin_WinnerScreen_Base_C_ExecuteUbergraph_BP_Mannequin_WinnerScreen_Base::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_WinnerScreen_Base_C_ExecuteUbergraph_BP_Mannequin_WinnerScreen_Base, CallFunc_RandomFloatInRange_ReturnValue) == 0x0000C0, "Member 'BP_Mannequin_WinnerScreen_Base_C_ExecuteUbergraph_BP_Mannequin_WinnerScreen_Base::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_WinnerScreen_Base_C_ExecuteUbergraph_BP_Mannequin_WinnerScreen_Base, CallFunc_Get_Random_Preset_Montages_Montages) == 0x0000C8, "Member 'BP_Mannequin_WinnerScreen_Base_C_ExecuteUbergraph_BP_Mannequin_WinnerScreen_Base::CallFunc_Get_Random_Preset_Montages_Montages' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_WinnerScreen_Base_C_ExecuteUbergraph_BP_Mannequin_WinnerScreen_Base, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0000D8, "Member 'BP_Mannequin_WinnerScreen_Base_C_ExecuteUbergraph_BP_Mannequin_WinnerScreen_Base::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_WinnerScreen_Base_C_ExecuteUbergraph_BP_Mannequin_WinnerScreen_Base, K2Node_Event_Character) == 0x0000E0, "Member 'BP_Mannequin_WinnerScreen_Base_C_ExecuteUbergraph_BP_Mannequin_WinnerScreen_Base::K2Node_Event_Character' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_WinnerScreen_Base_C_ExecuteUbergraph_BP_Mannequin_WinnerScreen_Base, CallFunc_IsValid_ReturnValue_2) == 0x0000E8, "Member 'BP_Mannequin_WinnerScreen_Base_C_ExecuteUbergraph_BP_Mannequin_WinnerScreen_Base::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_WinnerScreen_Base_C_ExecuteUbergraph_BP_Mannequin_WinnerScreen_Base, CallFunc_CheckForCurrentJiggle_Success) == 0x0000E9, "Member 'BP_Mannequin_WinnerScreen_Base_C_ExecuteUbergraph_BP_Mannequin_WinnerScreen_Base::CallFunc_CheckForCurrentJiggle_Success' has a wrong offset!");

// Function BP_Mannequin_WinnerScreen_Base.BP_Mannequin_WinnerScreen_Base_C.InitFromCharacter
// 0x0008 (0x0008 - 0x0000)
struct BP_Mannequin_WinnerScreen_Base_C_InitFromCharacter final
{
public:
	class AHumanCharacter*                        Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Mannequin_WinnerScreen_Base_C_InitFromCharacter) == 0x000008, "Wrong alignment on BP_Mannequin_WinnerScreen_Base_C_InitFromCharacter");
static_assert(sizeof(BP_Mannequin_WinnerScreen_Base_C_InitFromCharacter) == 0x000008, "Wrong size on BP_Mannequin_WinnerScreen_Base_C_InitFromCharacter");
static_assert(offsetof(BP_Mannequin_WinnerScreen_Base_C_InitFromCharacter, Character) == 0x000000, "Member 'BP_Mannequin_WinnerScreen_Base_C_InitFromCharacter::Character' has a wrong offset!");

// Function BP_Mannequin_WinnerScreen_Base.BP_Mannequin_WinnerScreen_Base_C.OnCompleted_C6EA69A24A831945EF50F8B72E641ECA
// 0x0008 (0x0008 - 0x0000)
struct BP_Mannequin_WinnerScreen_Base_C_OnCompleted_C6EA69A24A831945EF50F8B72E641ECA final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Mannequin_WinnerScreen_Base_C_OnCompleted_C6EA69A24A831945EF50F8B72E641ECA) == 0x000004, "Wrong alignment on BP_Mannequin_WinnerScreen_Base_C_OnCompleted_C6EA69A24A831945EF50F8B72E641ECA");
static_assert(sizeof(BP_Mannequin_WinnerScreen_Base_C_OnCompleted_C6EA69A24A831945EF50F8B72E641ECA) == 0x000008, "Wrong size on BP_Mannequin_WinnerScreen_Base_C_OnCompleted_C6EA69A24A831945EF50F8B72E641ECA");
static_assert(offsetof(BP_Mannequin_WinnerScreen_Base_C_OnCompleted_C6EA69A24A831945EF50F8B72E641ECA, NotifyName) == 0x000000, "Member 'BP_Mannequin_WinnerScreen_Base_C_OnCompleted_C6EA69A24A831945EF50F8B72E641ECA::NotifyName' has a wrong offset!");

// Function BP_Mannequin_WinnerScreen_Base.BP_Mannequin_WinnerScreen_Base_C.OnBlendOut_C6EA69A24A831945EF50F8B72E641ECA
// 0x0008 (0x0008 - 0x0000)
struct BP_Mannequin_WinnerScreen_Base_C_OnBlendOut_C6EA69A24A831945EF50F8B72E641ECA final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Mannequin_WinnerScreen_Base_C_OnBlendOut_C6EA69A24A831945EF50F8B72E641ECA) == 0x000004, "Wrong alignment on BP_Mannequin_WinnerScreen_Base_C_OnBlendOut_C6EA69A24A831945EF50F8B72E641ECA");
static_assert(sizeof(BP_Mannequin_WinnerScreen_Base_C_OnBlendOut_C6EA69A24A831945EF50F8B72E641ECA) == 0x000008, "Wrong size on BP_Mannequin_WinnerScreen_Base_C_OnBlendOut_C6EA69A24A831945EF50F8B72E641ECA");
static_assert(offsetof(BP_Mannequin_WinnerScreen_Base_C_OnBlendOut_C6EA69A24A831945EF50F8B72E641ECA, NotifyName) == 0x000000, "Member 'BP_Mannequin_WinnerScreen_Base_C_OnBlendOut_C6EA69A24A831945EF50F8B72E641ECA::NotifyName' has a wrong offset!");

// Function BP_Mannequin_WinnerScreen_Base.BP_Mannequin_WinnerScreen_Base_C.OnInterrupted_C6EA69A24A831945EF50F8B72E641ECA
// 0x0008 (0x0008 - 0x0000)
struct BP_Mannequin_WinnerScreen_Base_C_OnInterrupted_C6EA69A24A831945EF50F8B72E641ECA final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Mannequin_WinnerScreen_Base_C_OnInterrupted_C6EA69A24A831945EF50F8B72E641ECA) == 0x000004, "Wrong alignment on BP_Mannequin_WinnerScreen_Base_C_OnInterrupted_C6EA69A24A831945EF50F8B72E641ECA");
static_assert(sizeof(BP_Mannequin_WinnerScreen_Base_C_OnInterrupted_C6EA69A24A831945EF50F8B72E641ECA) == 0x000008, "Wrong size on BP_Mannequin_WinnerScreen_Base_C_OnInterrupted_C6EA69A24A831945EF50F8B72E641ECA");
static_assert(offsetof(BP_Mannequin_WinnerScreen_Base_C_OnInterrupted_C6EA69A24A831945EF50F8B72E641ECA, NotifyName) == 0x000000, "Member 'BP_Mannequin_WinnerScreen_Base_C_OnInterrupted_C6EA69A24A831945EF50F8B72E641ECA::NotifyName' has a wrong offset!");

// Function BP_Mannequin_WinnerScreen_Base.BP_Mannequin_WinnerScreen_Base_C.OnNotifyBegin_C6EA69A24A831945EF50F8B72E641ECA
// 0x0008 (0x0008 - 0x0000)
struct BP_Mannequin_WinnerScreen_Base_C_OnNotifyBegin_C6EA69A24A831945EF50F8B72E641ECA final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Mannequin_WinnerScreen_Base_C_OnNotifyBegin_C6EA69A24A831945EF50F8B72E641ECA) == 0x000004, "Wrong alignment on BP_Mannequin_WinnerScreen_Base_C_OnNotifyBegin_C6EA69A24A831945EF50F8B72E641ECA");
static_assert(sizeof(BP_Mannequin_WinnerScreen_Base_C_OnNotifyBegin_C6EA69A24A831945EF50F8B72E641ECA) == 0x000008, "Wrong size on BP_Mannequin_WinnerScreen_Base_C_OnNotifyBegin_C6EA69A24A831945EF50F8B72E641ECA");
static_assert(offsetof(BP_Mannequin_WinnerScreen_Base_C_OnNotifyBegin_C6EA69A24A831945EF50F8B72E641ECA, NotifyName) == 0x000000, "Member 'BP_Mannequin_WinnerScreen_Base_C_OnNotifyBegin_C6EA69A24A831945EF50F8B72E641ECA::NotifyName' has a wrong offset!");

// Function BP_Mannequin_WinnerScreen_Base.BP_Mannequin_WinnerScreen_Base_C.OnNotifyEnd_C6EA69A24A831945EF50F8B72E641ECA
// 0x0008 (0x0008 - 0x0000)
struct BP_Mannequin_WinnerScreen_Base_C_OnNotifyEnd_C6EA69A24A831945EF50F8B72E641ECA final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Mannequin_WinnerScreen_Base_C_OnNotifyEnd_C6EA69A24A831945EF50F8B72E641ECA) == 0x000004, "Wrong alignment on BP_Mannequin_WinnerScreen_Base_C_OnNotifyEnd_C6EA69A24A831945EF50F8B72E641ECA");
static_assert(sizeof(BP_Mannequin_WinnerScreen_Base_C_OnNotifyEnd_C6EA69A24A831945EF50F8B72E641ECA) == 0x000008, "Wrong size on BP_Mannequin_WinnerScreen_Base_C_OnNotifyEnd_C6EA69A24A831945EF50F8B72E641ECA");
static_assert(offsetof(BP_Mannequin_WinnerScreen_Base_C_OnNotifyEnd_C6EA69A24A831945EF50F8B72E641ECA, NotifyName) == 0x000000, "Member 'BP_Mannequin_WinnerScreen_Base_C_OnNotifyEnd_C6EA69A24A831945EF50F8B72E641ECA::NotifyName' has a wrong offset!");

// Function BP_Mannequin_WinnerScreen_Base.BP_Mannequin_WinnerScreen_Base_C.Get Random Preset Montages
// 0x0088 (0x0088 - 0x0000)
struct BP_Mannequin_WinnerScreen_Base_C_Get_Random_Preset_Montages final
{
public:
	TArray<class UAnimMontage*>                   Montages;                                          // 0x0000(0x0010)(Parm, OutParm)
	TSoftObjectPtr<class UObject>                 CallFunc_GetSoftReference_ReturnValue;             // 0x0010(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftReference_ReturnValue;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             K2Node_DynamicCast_AsData_Table;                   // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0050(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStruct_WinnerScreenMontagePreset      CallFunc_GetDataTableRowFromName_OutRow;           // 0x0070(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Mannequin_WinnerScreen_Base_C_Get_Random_Preset_Montages) == 0x000008, "Wrong alignment on BP_Mannequin_WinnerScreen_Base_C_Get_Random_Preset_Montages");
static_assert(sizeof(BP_Mannequin_WinnerScreen_Base_C_Get_Random_Preset_Montages) == 0x000088, "Wrong size on BP_Mannequin_WinnerScreen_Base_C_Get_Random_Preset_Montages");
static_assert(offsetof(BP_Mannequin_WinnerScreen_Base_C_Get_Random_Preset_Montages, Montages) == 0x000000, "Member 'BP_Mannequin_WinnerScreen_Base_C_Get_Random_Preset_Montages::Montages' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_WinnerScreen_Base_C_Get_Random_Preset_Montages, CallFunc_GetSoftReference_ReturnValue) == 0x000010, "Member 'BP_Mannequin_WinnerScreen_Base_C_Get_Random_Preset_Montages::CallFunc_GetSoftReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_WinnerScreen_Base_C_Get_Random_Preset_Montages, CallFunc_LoadSoftReference_ReturnValue) == 0x000038, "Member 'BP_Mannequin_WinnerScreen_Base_C_Get_Random_Preset_Montages::CallFunc_LoadSoftReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_WinnerScreen_Base_C_Get_Random_Preset_Montages, K2Node_DynamicCast_AsData_Table) == 0x000040, "Member 'BP_Mannequin_WinnerScreen_Base_C_Get_Random_Preset_Montages::K2Node_DynamicCast_AsData_Table' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_WinnerScreen_Base_C_Get_Random_Preset_Montages, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_Mannequin_WinnerScreen_Base_C_Get_Random_Preset_Montages::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_WinnerScreen_Base_C_Get_Random_Preset_Montages, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000050, "Member 'BP_Mannequin_WinnerScreen_Base_C_Get_Random_Preset_Montages::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_WinnerScreen_Base_C_Get_Random_Preset_Montages, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'BP_Mannequin_WinnerScreen_Base_C_Get_Random_Preset_Montages::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_WinnerScreen_Base_C_Get_Random_Preset_Montages, CallFunc_RandomInteger_ReturnValue) == 0x000064, "Member 'BP_Mannequin_WinnerScreen_Base_C_Get_Random_Preset_Montages::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_WinnerScreen_Base_C_Get_Random_Preset_Montages, CallFunc_Array_Get_Item) == 0x000068, "Member 'BP_Mannequin_WinnerScreen_Base_C_Get_Random_Preset_Montages::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_WinnerScreen_Base_C_Get_Random_Preset_Montages, CallFunc_GetDataTableRowFromName_OutRow) == 0x000070, "Member 'BP_Mannequin_WinnerScreen_Base_C_Get_Random_Preset_Montages::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_WinnerScreen_Base_C_Get_Random_Preset_Montages, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000080, "Member 'BP_Mannequin_WinnerScreen_Base_C_Get_Random_Preset_Montages::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_Mannequin_WinnerScreen_Base.BP_Mannequin_WinnerScreen_Base_C.CheckForCurrentJiggle
// 0x0028 (0x0028 - 0x0000)
struct BP_Mannequin_WinnerScreen_Base_C_CheckForCurrentJiggle final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_HumanAnimInstance_C> K2Node_DynamicCast_AsBPI_Human_Anim_Instance;      // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckForJiggle_Processed;                 // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Mannequin_WinnerScreen_Base_C_CheckForCurrentJiggle) == 0x000008, "Wrong alignment on BP_Mannequin_WinnerScreen_Base_C_CheckForCurrentJiggle");
static_assert(sizeof(BP_Mannequin_WinnerScreen_Base_C_CheckForCurrentJiggle) == 0x000028, "Wrong size on BP_Mannequin_WinnerScreen_Base_C_CheckForCurrentJiggle");
static_assert(offsetof(BP_Mannequin_WinnerScreen_Base_C_CheckForCurrentJiggle, Success) == 0x000000, "Member 'BP_Mannequin_WinnerScreen_Base_C_CheckForCurrentJiggle::Success' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_WinnerScreen_Base_C_CheckForCurrentJiggle, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_Mannequin_WinnerScreen_Base_C_CheckForCurrentJiggle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_WinnerScreen_Base_C_CheckForCurrentJiggle, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'BP_Mannequin_WinnerScreen_Base_C_CheckForCurrentJiggle::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_WinnerScreen_Base_C_CheckForCurrentJiggle, K2Node_DynamicCast_AsBPI_Human_Anim_Instance) == 0x000010, "Member 'BP_Mannequin_WinnerScreen_Base_C_CheckForCurrentJiggle::K2Node_DynamicCast_AsBPI_Human_Anim_Instance' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_WinnerScreen_Base_C_CheckForCurrentJiggle, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_Mannequin_WinnerScreen_Base_C_CheckForCurrentJiggle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_WinnerScreen_Base_C_CheckForCurrentJiggle, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'BP_Mannequin_WinnerScreen_Base_C_CheckForCurrentJiggle::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_WinnerScreen_Base_C_CheckForCurrentJiggle, CallFunc_CheckForJiggle_Processed) == 0x000022, "Member 'BP_Mannequin_WinnerScreen_Base_C_CheckForCurrentJiggle::CallFunc_CheckForJiggle_Processed' has a wrong offset!");

// Function BP_Mannequin_WinnerScreen_Base.BP_Mannequin_WinnerScreen_Base_C.SetSkeletonUpdate
// 0x0038 (0x0038 - 0x0000)
struct BP_Mannequin_WinnerScreen_Base_C_SetSkeletonUpdate final
{
public:
	bool                                          ShouldUpdate;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Mannequin_WinnerScreen_Base_C_SetSkeletonUpdate) == 0x000008, "Wrong alignment on BP_Mannequin_WinnerScreen_Base_C_SetSkeletonUpdate");
static_assert(sizeof(BP_Mannequin_WinnerScreen_Base_C_SetSkeletonUpdate) == 0x000038, "Wrong size on BP_Mannequin_WinnerScreen_Base_C_SetSkeletonUpdate");
static_assert(offsetof(BP_Mannequin_WinnerScreen_Base_C_SetSkeletonUpdate, ShouldUpdate) == 0x000000, "Member 'BP_Mannequin_WinnerScreen_Base_C_SetSkeletonUpdate::ShouldUpdate' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_WinnerScreen_Base_C_SetSkeletonUpdate, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_Mannequin_WinnerScreen_Base_C_SetSkeletonUpdate::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_WinnerScreen_Base_C_SetSkeletonUpdate, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_Mannequin_WinnerScreen_Base_C_SetSkeletonUpdate::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_WinnerScreen_Base_C_SetSkeletonUpdate, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_Mannequin_WinnerScreen_Base_C_SetSkeletonUpdate::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_WinnerScreen_Base_C_SetSkeletonUpdate, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_Mannequin_WinnerScreen_Base_C_SetSkeletonUpdate::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_WinnerScreen_Base_C_SetSkeletonUpdate, K2Node_MakeArray_Array) == 0x000010, "Member 'BP_Mannequin_WinnerScreen_Base_C_SetSkeletonUpdate::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_WinnerScreen_Base_C_SetSkeletonUpdate, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_Mannequin_WinnerScreen_Base_C_SetSkeletonUpdate::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_WinnerScreen_Base_C_SetSkeletonUpdate, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_Mannequin_WinnerScreen_Base_C_SetSkeletonUpdate::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Mannequin_WinnerScreen_Base_C_SetSkeletonUpdate, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_Mannequin_WinnerScreen_Base_C_SetSkeletonUpdate::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

}

