#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GMComponent_ADM_EventManager

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "F_ADM_EventManager_setup_structs.hpp"
#include "BP_GMComponent_ADM_Base_classes.hpp"
#include "E_ADM_EventTypes_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_GMComponent_ADM_EventManager.BP_GMComponent_ADM_EventManager_C
// 0x0078 (0x01B0 - 0x0138)
class UBP_GMComponent_ADM_EventManager_C final : public UBP_GMComponent_ADM_Base_C
{
public:
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_GMComponent_ADM_EventManager_C;  // 0x0138(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TArray<class UBP_GMComponent_ADM_Event_Base_C*> Active_Events;                                     // 0x0140(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FF_ADM_EventManager_setup              Event_type_limits;                                 // 0x0150(0x0060)(Edit, BlueprintVisible, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_GMComponent_ADM_EventManager(int32 EntryPoint);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void Initialize_Component();
	void Ready_To_Start_Match(bool* Return_Value);
	void Check_Prerequisites(class UClass* Module_Type, bool* Prerequisites_Met);
	void Create_Event_Modules();
	void Spawn_event(class UClass* Event_class, class ABP_GameMode_AirDropModular_C* Game_Mode, class UBP_GMComponent_ADM_Event_Base_C** Spawned_event);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_GMComponent_ADM_EventManager_C">();
	}
	static class UBP_GMComponent_ADM_EventManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_GMComponent_ADM_EventManager_C>();
	}
};
static_assert(alignof(UBP_GMComponent_ADM_EventManager_C) == 0x000008, "Wrong alignment on UBP_GMComponent_ADM_EventManager_C");
static_assert(sizeof(UBP_GMComponent_ADM_EventManager_C) == 0x0001B0, "Wrong size on UBP_GMComponent_ADM_EventManager_C");
static_assert(offsetof(UBP_GMComponent_ADM_EventManager_C, UberGraphFrame_BP_GMComponent_ADM_EventManager_C) == 0x000138, "Member 'UBP_GMComponent_ADM_EventManager_C::UberGraphFrame_BP_GMComponent_ADM_EventManager_C' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_EventManager_C, Active_Events) == 0x000140, "Member 'UBP_GMComponent_ADM_EventManager_C::Active_Events' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_EventManager_C, Event_type_limits) == 0x000150, "Member 'UBP_GMComponent_ADM_EventManager_C::Event_type_limits' has a wrong offset!");

}

