#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerState_Matches

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "E_BattlePassSystem_State_structs.hpp"


namespace SDK::Params
{

// Function BP_PlayerState_Matches.BP_PlayerState_Matches_C.ExecuteUbergraph_BP_PlayerState_Matches
// 0x0128 (0x0128 - 0x0000)
struct BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Is_Threat;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Is_Teamkiller;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanCharacter*                        K2Node_CustomEvent_Killer;                         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_Matches_C*              K2Node_DynamicCast_AsBP_Player_State_Matches;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUniqueNetIdRepl                       CallFunc_GetPlayerUniqueId_ReturnValue;            // 0x0038(0x0028)(HasGetValueTypeHash)
	TArray<class ABP_PlayerState_C*>              CallFunc_FindTeammates_TeammatesPlayerStates;      // 0x0060(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_C*                      CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_Matches_C*              K2Node_DynamicCast_AsBP_Player_State_Matches_1;    // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePassSystem*                      CallFunc_GetBattlePassSystem_ReturnValue;          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_BattlePassSystem_C*                 K2Node_DynamicCast_AsBP_Battle_Pass_System;        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Level;                          // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Premium;                        // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BattlePassSystem_State                      CallFunc_Get_State_State;                          // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B3[0x5];                                       // 0x00B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePassSystem*                      CallFunc_GetBattlePassSystem_ReturnValue_1;        // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENetRole                                      CallFunc_GetLocalRole_ReturnValue;                 // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BattlePassSystem_C*                 K2Node_DynamicCast_AsBP_Battle_Pass_System_1;      // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D2[0x2];                                       // 0x00D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Get_Season_Name_Active_Season_Name;       // 0x00D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Premium_Status_Premium_Active;        // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Get_Level_Level;                          // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool Delayed_Match_Start_Was_Used)> K2Node_CreateDelegate_OutputDelegate;              // 0x00E4(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x00F4(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Log_Gameplay_Event_Success;               // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_105[0x3];                                      // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Delayed_Match_Start_Was_Used;   // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameMode_Matches_C*                 K2Node_DynamicCast_AsBP_Game_Mode_Matches;         // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches) == 0x000008, "Wrong alignment on BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches");
static_assert(sizeof(BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches) == 0x000128, "Wrong size on BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches");
static_assert(offsetof(BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches, EntryPoint) == 0x000000, "Member 'BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches, K2Node_CustomEvent_Is_Threat) == 0x000004, "Member 'BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches::K2Node_CustomEvent_Is_Threat' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches, K2Node_CustomEvent_Is_Teamkiller) == 0x000005, "Member 'BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches::K2Node_CustomEvent_Is_Teamkiller' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches, CallFunc_IsDedicatedServer_ReturnValue) == 0x000014, "Member 'BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches, K2Node_CustomEvent_Killer) == 0x000018, "Member 'BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches::K2Node_CustomEvent_Killer' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches, K2Node_DynamicCast_AsBP_Player_State_Matches) == 0x000028, "Member 'BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches::K2Node_DynamicCast_AsBP_Player_State_Matches' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches, CallFunc_GetPlayerUniqueId_ReturnValue) == 0x000038, "Member 'BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches::CallFunc_GetPlayerUniqueId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches, CallFunc_FindTeammates_TeammatesPlayerStates) == 0x000060, "Member 'BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches::CallFunc_FindTeammates_TeammatesPlayerStates' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches, CallFunc_Array_Add_ReturnValue) == 0x000070, "Member 'BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches, CallFunc_Array_Get_Item) == 0x000078, "Member 'BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches, K2Node_DynamicCast_AsBP_Player_State_Matches_1) == 0x000088, "Member 'BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches::K2Node_DynamicCast_AsBP_Player_State_Matches_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches, K2Node_DynamicCast_bSuccess_1) == 0x000090, "Member 'BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches, CallFunc_Less_IntInt_ReturnValue) == 0x000091, "Member 'BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches, CallFunc_GetBattlePassSystem_ReturnValue) == 0x000098, "Member 'BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches::CallFunc_GetBattlePassSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches, K2Node_DynamicCast_AsBP_Battle_Pass_System) == 0x0000A0, "Member 'BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches::K2Node_DynamicCast_AsBP_Battle_Pass_System' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches, K2Node_DynamicCast_bSuccess_2) == 0x0000A8, "Member 'BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches, K2Node_CustomEvent_Level) == 0x0000AC, "Member 'BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches::K2Node_CustomEvent_Level' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches, K2Node_CustomEvent_Premium) == 0x0000B0, "Member 'BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches::K2Node_CustomEvent_Premium' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches, CallFunc_Get_State_State) == 0x0000B1, "Member 'BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches::CallFunc_Get_State_State' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000B2, "Member 'BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches, CallFunc_GetBattlePassSystem_ReturnValue_1) == 0x0000B8, "Member 'BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches::CallFunc_GetBattlePassSystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches, CallFunc_GetLocalRole_ReturnValue) == 0x0000C0, "Member 'BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches::CallFunc_GetLocalRole_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches, K2Node_DynamicCast_AsBP_Battle_Pass_System_1) == 0x0000C8, "Member 'BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches::K2Node_DynamicCast_AsBP_Battle_Pass_System_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches, K2Node_DynamicCast_bSuccess_3) == 0x0000D0, "Member 'BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000D1, "Member 'BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches, CallFunc_Get_Season_Name_Active_Season_Name) == 0x0000D4, "Member 'BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches::CallFunc_Get_Season_Name_Active_Season_Name' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches, CallFunc_Get_Premium_Status_Premium_Active) == 0x0000DC, "Member 'BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches::CallFunc_Get_Premium_Status_Premium_Active' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches, CallFunc_Get_Level_Level) == 0x0000E0, "Member 'BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches::CallFunc_Get_Level_Level' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches, K2Node_CreateDelegate_OutputDelegate) == 0x0000E4, "Member 'BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000F4, "Member 'BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches, CallFunc_Log_Gameplay_Event_Success) == 0x000104, "Member 'BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches::CallFunc_Log_Gameplay_Event_Success' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches, CallFunc_GetGameMode_ReturnValue) == 0x000108, "Member 'BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches, K2Node_CustomEvent_Delayed_Match_Start_Was_Used) == 0x000110, "Member 'BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches::K2Node_CustomEvent_Delayed_Match_Start_Was_Used' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches, K2Node_DynamicCast_AsBP_Game_Mode_Matches) == 0x000118, "Member 'BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches::K2Node_DynamicCast_AsBP_Game_Mode_Matches' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches, K2Node_DynamicCast_bSuccess_4) == 0x000120, "Member 'BP_PlayerState_Matches_C_ExecuteUbergraph_BP_PlayerState_Matches::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");

// Function BP_PlayerState_Matches.BP_PlayerState_Matches_C.Set Threat and Teamkiller Status
// 0x0002 (0x0002 - 0x0000)
struct BP_PlayerState_Matches_C_Set_Threat_and_Teamkiller_Status final
{
public:
	bool                                          Is_Threat_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Is_Teamkiller;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerState_Matches_C_Set_Threat_and_Teamkiller_Status) == 0x000001, "Wrong alignment on BP_PlayerState_Matches_C_Set_Threat_and_Teamkiller_Status");
static_assert(sizeof(BP_PlayerState_Matches_C_Set_Threat_and_Teamkiller_Status) == 0x000002, "Wrong size on BP_PlayerState_Matches_C_Set_Threat_and_Teamkiller_Status");
static_assert(offsetof(BP_PlayerState_Matches_C_Set_Threat_and_Teamkiller_Status, Is_Threat_0) == 0x000000, "Member 'BP_PlayerState_Matches_C_Set_Threat_and_Teamkiller_Status::Is_Threat_0' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Set_Threat_and_Teamkiller_Status, Is_Teamkiller) == 0x000001, "Member 'BP_PlayerState_Matches_C_Set_Threat_and_Teamkiller_Status::Is_Teamkiller' has a wrong offset!");

// Function BP_PlayerState_Matches.BP_PlayerState_Matches_C.OnLobbyFinished
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerState_Matches_C_OnLobbyFinished final
{
public:
	bool                                          Delayed_Match_Start_Was_Used;                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerState_Matches_C_OnLobbyFinished) == 0x000001, "Wrong alignment on BP_PlayerState_Matches_C_OnLobbyFinished");
static_assert(sizeof(BP_PlayerState_Matches_C_OnLobbyFinished) == 0x000001, "Wrong size on BP_PlayerState_Matches_C_OnLobbyFinished");
static_assert(offsetof(BP_PlayerState_Matches_C_OnLobbyFinished, Delayed_Match_Start_Was_Used) == 0x000000, "Member 'BP_PlayerState_Matches_C_OnLobbyFinished::Delayed_Match_Start_Was_Used' has a wrong offset!");

// Function BP_PlayerState_Matches.BP_PlayerState_Matches_C.Save Battle Pass Info on Server
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerState_Matches_C_Save_Battle_Pass_Info_on_Server final
{
public:
	int32                                         Level;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Premium;                                           // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerState_Matches_C_Save_Battle_Pass_Info_on_Server) == 0x000004, "Wrong alignment on BP_PlayerState_Matches_C_Save_Battle_Pass_Info_on_Server");
static_assert(sizeof(BP_PlayerState_Matches_C_Save_Battle_Pass_Info_on_Server) == 0x000008, "Wrong size on BP_PlayerState_Matches_C_Save_Battle_Pass_Info_on_Server");
static_assert(offsetof(BP_PlayerState_Matches_C_Save_Battle_Pass_Info_on_Server, Level) == 0x000000, "Member 'BP_PlayerState_Matches_C_Save_Battle_Pass_Info_on_Server::Level' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Save_Battle_Pass_Info_on_Server, Premium) == 0x000004, "Member 'BP_PlayerState_Matches_C_Save_Battle_Pass_Info_on_Server::Premium' has a wrong offset!");

// Function BP_PlayerState_Matches.BP_PlayerState_Matches_C.Teammate was killed
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerState_Matches_C_Teammate_was_killed final
{
public:
	class AHumanCharacter*                        Killer;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_Matches_C_Teammate_was_killed) == 0x000008, "Wrong alignment on BP_PlayerState_Matches_C_Teammate_was_killed");
static_assert(sizeof(BP_PlayerState_Matches_C_Teammate_was_killed) == 0x000008, "Wrong size on BP_PlayerState_Matches_C_Teammate_was_killed");
static_assert(offsetof(BP_PlayerState_Matches_C_Teammate_was_killed, Killer) == 0x000000, "Member 'BP_PlayerState_Matches_C_Teammate_was_killed::Killer' has a wrong offset!");

// Function BP_PlayerState_Matches.BP_PlayerState_Matches_C.Log Gameplay Event
// 0x0268 (0x0268 - 0x0000)
struct BP_PlayerState_Matches_C_Log_Gameplay_Event final
{
public:
	class FName                                   Gameplay_Event_Name;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Amount;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F[0x1];                                        // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value;                           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_10;             // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_11;             // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_12;             // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_13;             // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_14;             // 0x0168(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_15;             // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue_1;              // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_16;             // 0x01A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_17;             // 0x01B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_18;             // 0x01C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_19;             // 0x01D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_20;             // 0x01E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_21;             // 0x01F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_22;             // 0x0200(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_23;             // 0x0210(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_221[0x3];                                      // 0x0221(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x0228(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UDataTable*                             CallFunc_DataProviderFindTableByAssetTable_ReturnValue; // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_24;             // 0x0240(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesDataTableRowExist_ReturnValue;        // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_251[0x3];                                      // 0x0251(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value_1;                         // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_259[0x3];                                      // 0x0259(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_1;                           // 0x0260(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_Matches_C_Log_Gameplay_Event) == 0x000008, "Wrong alignment on BP_PlayerState_Matches_C_Log_Gameplay_Event");
static_assert(sizeof(BP_PlayerState_Matches_C_Log_Gameplay_Event) == 0x000268, "Wrong size on BP_PlayerState_Matches_C_Log_Gameplay_Event");
static_assert(offsetof(BP_PlayerState_Matches_C_Log_Gameplay_Event, Gameplay_Event_Name) == 0x000000, "Member 'BP_PlayerState_Matches_C_Log_Gameplay_Event::Gameplay_Event_Name' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Log_Gameplay_Event, Amount) == 0x000008, "Member 'BP_PlayerState_Matches_C_Log_Gameplay_Event::Amount' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Log_Gameplay_Event, Success) == 0x00000C, "Member 'BP_PlayerState_Matches_C_Log_Gameplay_Event::Success' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Log_Gameplay_Event, Temp_bool_Variable) == 0x00000D, "Member 'BP_PlayerState_Matches_C_Log_Gameplay_Event::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Log_Gameplay_Event, CallFunc_Greater_IntInt_ReturnValue) == 0x00000E, "Member 'BP_PlayerState_Matches_C_Log_Gameplay_Event::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Log_Gameplay_Event, CallFunc_Map_Find_Value) == 0x000010, "Member 'BP_PlayerState_Matches_C_Log_Gameplay_Event::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Log_Gameplay_Event, CallFunc_Map_Find_ReturnValue) == 0x000014, "Member 'BP_PlayerState_Matches_C_Log_Gameplay_Event::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Log_Gameplay_Event, CallFunc_GetDisplayName_ReturnValue) == 0x000018, "Member 'BP_PlayerState_Matches_C_Log_Gameplay_Event::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Log_Gameplay_Event, CallFunc_Conv_IntToString_ReturnValue) == 0x000028, "Member 'BP_PlayerState_Matches_C_Log_Gameplay_Event::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Log_Gameplay_Event, CallFunc_Conv_NameToString_ReturnValue) == 0x000038, "Member 'BP_PlayerState_Matches_C_Log_Gameplay_Event::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Log_Gameplay_Event, CallFunc_Concat_StrStr_ReturnValue) == 0x000048, "Member 'BP_PlayerState_Matches_C_Log_Gameplay_Event::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Log_Gameplay_Event, CallFunc_GetPlayerName_ReturnValue) == 0x000058, "Member 'BP_PlayerState_Matches_C_Log_Gameplay_Event::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Log_Gameplay_Event, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000068, "Member 'BP_PlayerState_Matches_C_Log_Gameplay_Event::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Log_Gameplay_Event, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000078, "Member 'BP_PlayerState_Matches_C_Log_Gameplay_Event::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Log_Gameplay_Event, CallFunc_GetDisplayName_ReturnValue_1) == 0x000088, "Member 'BP_PlayerState_Matches_C_Log_Gameplay_Event::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Log_Gameplay_Event, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000098, "Member 'BP_PlayerState_Matches_C_Log_Gameplay_Event::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Log_Gameplay_Event, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0000A8, "Member 'BP_PlayerState_Matches_C_Log_Gameplay_Event::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Log_Gameplay_Event, CallFunc_Conv_IntToString_ReturnValue_1) == 0x0000B8, "Member 'BP_PlayerState_Matches_C_Log_Gameplay_Event::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Log_Gameplay_Event, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0000C8, "Member 'BP_PlayerState_Matches_C_Log_Gameplay_Event::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Log_Gameplay_Event, CallFunc_Concat_StrStr_ReturnValue_6) == 0x0000D8, "Member 'BP_PlayerState_Matches_C_Log_Gameplay_Event::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Log_Gameplay_Event, CallFunc_Conv_NameToString_ReturnValue_1) == 0x0000E8, "Member 'BP_PlayerState_Matches_C_Log_Gameplay_Event::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Log_Gameplay_Event, CallFunc_Concat_StrStr_ReturnValue_7) == 0x0000F8, "Member 'BP_PlayerState_Matches_C_Log_Gameplay_Event::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Log_Gameplay_Event, CallFunc_Concat_StrStr_ReturnValue_8) == 0x000108, "Member 'BP_PlayerState_Matches_C_Log_Gameplay_Event::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Log_Gameplay_Event, CallFunc_Concat_StrStr_ReturnValue_9) == 0x000118, "Member 'BP_PlayerState_Matches_C_Log_Gameplay_Event::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Log_Gameplay_Event, CallFunc_Concat_StrStr_ReturnValue_10) == 0x000128, "Member 'BP_PlayerState_Matches_C_Log_Gameplay_Event::CallFunc_Concat_StrStr_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Log_Gameplay_Event, CallFunc_Concat_StrStr_ReturnValue_11) == 0x000138, "Member 'BP_PlayerState_Matches_C_Log_Gameplay_Event::CallFunc_Concat_StrStr_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Log_Gameplay_Event, CallFunc_Concat_StrStr_ReturnValue_12) == 0x000148, "Member 'BP_PlayerState_Matches_C_Log_Gameplay_Event::CallFunc_Concat_StrStr_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Log_Gameplay_Event, CallFunc_Concat_StrStr_ReturnValue_13) == 0x000158, "Member 'BP_PlayerState_Matches_C_Log_Gameplay_Event::CallFunc_Concat_StrStr_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Log_Gameplay_Event, CallFunc_Concat_StrStr_ReturnValue_14) == 0x000168, "Member 'BP_PlayerState_Matches_C_Log_Gameplay_Event::CallFunc_Concat_StrStr_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Log_Gameplay_Event, CallFunc_Concat_StrStr_ReturnValue_15) == 0x000178, "Member 'BP_PlayerState_Matches_C_Log_Gameplay_Event::CallFunc_Concat_StrStr_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Log_Gameplay_Event, Temp_int_Variable) == 0x000188, "Member 'BP_PlayerState_Matches_C_Log_Gameplay_Event::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Log_Gameplay_Event, CallFunc_GetPlayerName_ReturnValue_1) == 0x000190, "Member 'BP_PlayerState_Matches_C_Log_Gameplay_Event::CallFunc_GetPlayerName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Log_Gameplay_Event, CallFunc_Concat_StrStr_ReturnValue_16) == 0x0001A0, "Member 'BP_PlayerState_Matches_C_Log_Gameplay_Event::CallFunc_Concat_StrStr_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Log_Gameplay_Event, CallFunc_Concat_StrStr_ReturnValue_17) == 0x0001B0, "Member 'BP_PlayerState_Matches_C_Log_Gameplay_Event::CallFunc_Concat_StrStr_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Log_Gameplay_Event, CallFunc_Concat_StrStr_ReturnValue_18) == 0x0001C0, "Member 'BP_PlayerState_Matches_C_Log_Gameplay_Event::CallFunc_Concat_StrStr_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Log_Gameplay_Event, CallFunc_Concat_StrStr_ReturnValue_19) == 0x0001D0, "Member 'BP_PlayerState_Matches_C_Log_Gameplay_Event::CallFunc_Concat_StrStr_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Log_Gameplay_Event, CallFunc_Concat_StrStr_ReturnValue_20) == 0x0001E0, "Member 'BP_PlayerState_Matches_C_Log_Gameplay_Event::CallFunc_Concat_StrStr_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Log_Gameplay_Event, CallFunc_Concat_StrStr_ReturnValue_21) == 0x0001F0, "Member 'BP_PlayerState_Matches_C_Log_Gameplay_Event::CallFunc_Concat_StrStr_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Log_Gameplay_Event, CallFunc_Concat_StrStr_ReturnValue_22) == 0x000200, "Member 'BP_PlayerState_Matches_C_Log_Gameplay_Event::CallFunc_Concat_StrStr_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Log_Gameplay_Event, CallFunc_Concat_StrStr_ReturnValue_23) == 0x000210, "Member 'BP_PlayerState_Matches_C_Log_Gameplay_Event::CallFunc_Concat_StrStr_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Log_Gameplay_Event, Temp_bool_Variable_1) == 0x000220, "Member 'BP_PlayerState_Matches_C_Log_Gameplay_Event::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Log_Gameplay_Event, K2Node_Select_Default) == 0x000224, "Member 'BP_PlayerState_Matches_C_Log_Gameplay_Event::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Log_Gameplay_Event, CallFunc_Conv_IntToString_ReturnValue_2) == 0x000228, "Member 'BP_PlayerState_Matches_C_Log_Gameplay_Event::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Log_Gameplay_Event, CallFunc_DataProviderFindTableByAssetTable_ReturnValue) == 0x000238, "Member 'BP_PlayerState_Matches_C_Log_Gameplay_Event::CallFunc_DataProviderFindTableByAssetTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Log_Gameplay_Event, CallFunc_Concat_StrStr_ReturnValue_24) == 0x000240, "Member 'BP_PlayerState_Matches_C_Log_Gameplay_Event::CallFunc_Concat_StrStr_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Log_Gameplay_Event, CallFunc_DoesDataTableRowExist_ReturnValue) == 0x000250, "Member 'BP_PlayerState_Matches_C_Log_Gameplay_Event::CallFunc_DoesDataTableRowExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Log_Gameplay_Event, CallFunc_Map_Find_Value_1) == 0x000254, "Member 'BP_PlayerState_Matches_C_Log_Gameplay_Event::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Log_Gameplay_Event, CallFunc_Map_Find_ReturnValue_1) == 0x000258, "Member 'BP_PlayerState_Matches_C_Log_Gameplay_Event::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Log_Gameplay_Event, CallFunc_Add_IntInt_ReturnValue) == 0x00025C, "Member 'BP_PlayerState_Matches_C_Log_Gameplay_Event::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Log_Gameplay_Event, K2Node_Select_Default_1) == 0x000260, "Member 'BP_PlayerState_Matches_C_Log_Gameplay_Event::K2Node_Select_Default_1' has a wrong offset!");

// Function BP_PlayerState_Matches.BP_PlayerState_Matches_C.Get Logged Gameplay Events
// 0x0050 (0x0050 - 0x0000)
struct BP_PlayerState_Matches_C_Get_Logged_Gameplay_Events final
{
public:
	TMap<class FName, int32>                      Logged_Gameplay_Events_0;                          // 0x0000(0x0050)(Parm, OutParm)
};
static_assert(alignof(BP_PlayerState_Matches_C_Get_Logged_Gameplay_Events) == 0x000008, "Wrong alignment on BP_PlayerState_Matches_C_Get_Logged_Gameplay_Events");
static_assert(sizeof(BP_PlayerState_Matches_C_Get_Logged_Gameplay_Events) == 0x000050, "Wrong size on BP_PlayerState_Matches_C_Get_Logged_Gameplay_Events");
static_assert(offsetof(BP_PlayerState_Matches_C_Get_Logged_Gameplay_Events, Logged_Gameplay_Events_0) == 0x000000, "Member 'BP_PlayerState_Matches_C_Get_Logged_Gameplay_Events::Logged_Gameplay_Events_0' has a wrong offset!");

// Function BP_PlayerState_Matches.BP_PlayerState_Matches_C.Is Kill Revenge
// 0x0050 (0x0050 - 0x0000)
struct BP_PlayerState_Matches_C_Is_Kill_Revenge final
{
public:
	class APlayerState*                           Killed_Player_State;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Revenge;                                        // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_Matches_C*              K2Node_DynamicCast_AsBP_Player_State_Matches;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUniqueNetIdRepl                       CallFunc_GetPlayerUniqueId_ReturnValue;            // 0x0020(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerState_Matches_C_Is_Kill_Revenge) == 0x000008, "Wrong alignment on BP_PlayerState_Matches_C_Is_Kill_Revenge");
static_assert(sizeof(BP_PlayerState_Matches_C_Is_Kill_Revenge) == 0x000050, "Wrong size on BP_PlayerState_Matches_C_Is_Kill_Revenge");
static_assert(offsetof(BP_PlayerState_Matches_C_Is_Kill_Revenge, Killed_Player_State) == 0x000000, "Member 'BP_PlayerState_Matches_C_Is_Kill_Revenge::Killed_Player_State' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Is_Kill_Revenge, Is_Revenge) == 0x000008, "Member 'BP_PlayerState_Matches_C_Is_Kill_Revenge::Is_Revenge' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Is_Kill_Revenge, K2Node_DynamicCast_AsBP_Player_State_Matches) == 0x000010, "Member 'BP_PlayerState_Matches_C_Is_Kill_Revenge::K2Node_DynamicCast_AsBP_Player_State_Matches' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Is_Kill_Revenge, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_PlayerState_Matches_C_Is_Kill_Revenge::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Is_Kill_Revenge, CallFunc_GetPlayerUniqueId_ReturnValue) == 0x000020, "Member 'BP_PlayerState_Matches_C_Is_Kill_Revenge::CallFunc_GetPlayerUniqueId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Is_Kill_Revenge, CallFunc_Array_Contains_ReturnValue) == 0x000048, "Member 'BP_PlayerState_Matches_C_Is_Kill_Revenge::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function BP_PlayerState_Matches.BP_PlayerState_Matches_C.Did Player Protect Teammate on Leave Match
// 0x0030 (0x0030 - 0x0000)
struct BP_PlayerState_Matches_C_Did_Player_Protect_Teammate_on_Leave_Match final
{
public:
	bool                                          Did_Protect;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_PlayerState_C*>              CallFunc_FindTeammates_TeammatesPlayerStates;      // 0x0010(0x0010)(ReferenceParm)
	class ABP_PlayerState_C*                      CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsDead_ReturnValue;                    // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerState_Matches_C_Did_Player_Protect_Teammate_on_Leave_Match) == 0x000008, "Wrong alignment on BP_PlayerState_Matches_C_Did_Player_Protect_Teammate_on_Leave_Match");
static_assert(sizeof(BP_PlayerState_Matches_C_Did_Player_Protect_Teammate_on_Leave_Match) == 0x000030, "Wrong size on BP_PlayerState_Matches_C_Did_Player_Protect_Teammate_on_Leave_Match");
static_assert(offsetof(BP_PlayerState_Matches_C_Did_Player_Protect_Teammate_on_Leave_Match, Did_Protect) == 0x000000, "Member 'BP_PlayerState_Matches_C_Did_Player_Protect_Teammate_on_Leave_Match::Did_Protect' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Did_Player_Protect_Teammate_on_Leave_Match, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_PlayerState_Matches_C_Did_Player_Protect_Teammate_on_Leave_Match::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Did_Player_Protect_Teammate_on_Leave_Match, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_PlayerState_Matches_C_Did_Player_Protect_Teammate_on_Leave_Match::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Did_Player_Protect_Teammate_on_Leave_Match, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_PlayerState_Matches_C_Did_Player_Protect_Teammate_on_Leave_Match::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Did_Player_Protect_Teammate_on_Leave_Match, CallFunc_FindTeammates_TeammatesPlayerStates) == 0x000010, "Member 'BP_PlayerState_Matches_C_Did_Player_Protect_Teammate_on_Leave_Match::CallFunc_FindTeammates_TeammatesPlayerStates' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Did_Player_Protect_Teammate_on_Leave_Match, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_PlayerState_Matches_C_Did_Player_Protect_Teammate_on_Leave_Match::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Did_Player_Protect_Teammate_on_Leave_Match, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_PlayerState_Matches_C_Did_Player_Protect_Teammate_on_Leave_Match::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Did_Player_Protect_Teammate_on_Leave_Match, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BP_PlayerState_Matches_C_Did_Player_Protect_Teammate_on_Leave_Match::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Did_Player_Protect_Teammate_on_Leave_Match, CallFunc_IsValid_ReturnValue) == 0x00002D, "Member 'BP_PlayerState_Matches_C_Did_Player_Protect_Teammate_on_Leave_Match::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Did_Player_Protect_Teammate_on_Leave_Match, CallFunc_IsValid_ReturnValue_1) == 0x00002E, "Member 'BP_PlayerState_Matches_C_Did_Player_Protect_Teammate_on_Leave_Match::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_Matches_C_Did_Player_Protect_Teammate_on_Leave_Match, CallFunc_GetIsDead_ReturnValue) == 0x00002F, "Member 'BP_PlayerState_Matches_C_Did_Player_Protect_Teammate_on_Leave_Match::CallFunc_GetIsDead_ReturnValue' has a wrong offset!");

}

