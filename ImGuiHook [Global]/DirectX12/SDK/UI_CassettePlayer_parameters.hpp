#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_CassettePlayer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function UI_CassettePlayer.UI_CassettePlayer_C.ExecuteUbergraph_UI_CassettePlayer
// 0x0218 (0x0218 - 0x0000)
struct UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlaySelectedButton_Success;               // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CassetteTrack_C*                    K2Node_CustomEvent_Previous;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CassetteTrack_C*                    K2Node_CustomEvent_Current;                        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_CassettePlayer_TrackButton_C*       CallFunc_GetTrackButton_Button;                    // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_CassettePlayer_TrackButton_C*       CallFunc_GetTrackButton_Button_1;                  // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_CassettePlayer_TrackButton_C*       CallFunc_GetPlayedTrackButton_SelectedTrackButton; // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43[0x1];                                       // 0x0043(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_AxisValue_1;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(float AxisValue)>              K2Node_CreateDelegate_OutputDelegate;              // 0x004C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x005C(0x0010)(ZeroConstructor, NoDestructor)
	float                                         Temp_float_Variable;                               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0070(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0088(0x0010)(ZeroConstructor, NoDestructor)
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue;                // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x00A0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Character_C*                        K2Node_DynamicCast_AsBP_Character;                 // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue_1;        // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_C*                        K2Node_DynamicCast_AsBP_Character_1;               // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E2[0x2];                                       // 0x00E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x00E4(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_122[0x6];                                      // 0x0122(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_CassettePlayer_TrackButton_C*       CallFunc_GetSelectedTrackButton_SelectedTrackButton; // 0x0128(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSelectedTrackButton_Index;             // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSelectedTrackButton_IsFound;           // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x0135(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_136[0x2];                                      // 0x0136(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x013D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13E[0x2];                                      // 0x013E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0145(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0146(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x0147(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FText                                   CallFunc_Map_Find_Value;                           // 0x0148(0x0018)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_Map_Keys_Keys;                            // 0x0168(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x3];                                      // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Map_Find_Value_1;                         // 0x0190(0x0018)()
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ChangeFilter_bSuccess;                    // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AA[0x6];                                      // 0x01AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_Map_Keys_Keys_1;                          // 0x01B0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue_1;                 // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_2;                         // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x01D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D6[0x2];                                      // 0x01D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_1;                           // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ChangeFilter_bSuccess_1;                  // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x01DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DE[0x2];                                      // 0x01DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(float AxisValue)>              K2Node_CreateDelegate_OutputDelegate_3;            // 0x01E0(0x0010)(ZeroConstructor, NoDestructor)
	float                                         K2Node_CustomEvent_AxisValue;                      // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_DeltaTime;                      // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_X_Input;                        // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x020A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20B[0x1];                                      // 0x020B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_2;                           // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_3;                           // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer) == 0x000008, "Wrong alignment on UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer");
static_assert(sizeof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer) == 0x000218, "Wrong size on UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, EntryPoint) == 0x000000, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, Temp_int_Variable) == 0x000004, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, Temp_bool_Variable) == 0x000008, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, CallFunc_PlaySelectedButton_Success) == 0x000009, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::CallFunc_PlaySelectedButton_Success' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, CallFunc_IsValid_ReturnValue) == 0x00000A, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, K2Node_CustomEvent_Previous) == 0x000010, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::K2Node_CustomEvent_Previous' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, K2Node_CustomEvent_Current) == 0x000018, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::K2Node_CustomEvent_Current' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, CallFunc_GetTrackButton_Button) == 0x000020, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::CallFunc_GetTrackButton_Button' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, CallFunc_GetTrackButton_Button_1) == 0x000028, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::CallFunc_GetTrackButton_Button_1' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, CallFunc_IsValid_ReturnValue_1) == 0x000030, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, CallFunc_IsValid_ReturnValue_2) == 0x000031, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, Temp_bool_Variable_1) == 0x000032, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, CallFunc_IsValid_ReturnValue_3) == 0x000033, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, CallFunc_GetPlayedTrackButton_SelectedTrackButton) == 0x000038, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::CallFunc_GetPlayedTrackButton_SelectedTrackButton' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, CallFunc_IsValid_ReturnValue_4) == 0x000040, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, CallFunc_IsValid_ReturnValue_5) == 0x000041, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, CallFunc_IsValid_ReturnValue_6) == 0x000042, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, K2Node_CustomEvent_AxisValue_1) == 0x000044, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::K2Node_CustomEvent_AxisValue_1' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, CallFunc_Less_FloatFloat_ReturnValue) == 0x000048, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000049, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, K2Node_CreateDelegate_OutputDelegate) == 0x00004C, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, K2Node_CreateDelegate_OutputDelegate_1) == 0x00005C, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, Temp_float_Variable) == 0x00006C, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000070, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, Temp_float_Variable_1) == 0x000078, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, CallFunc_GetOwningPlayer_ReturnValue) == 0x000080, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, K2Node_CreateDelegate_OutputDelegate_2) == 0x000088, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, CallFunc_GetViewTarget_ReturnValue) == 0x000098, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x0000A0, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, CallFunc_Not_PreBool_ReturnValue) == 0x0000A8, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x0000B0, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, K2Node_DynamicCast_AsBP_Character) == 0x0000B8, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::K2Node_DynamicCast_AsBP_Character' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, K2Node_DynamicCast_bSuccess) == 0x0000C0, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, CallFunc_GetOwningPlayerPawn_ReturnValue_1) == 0x0000C8, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::CallFunc_GetOwningPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, Temp_bool_Variable_2) == 0x0000D0, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, K2Node_DynamicCast_AsBP_Character_1) == 0x0000D8, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::K2Node_DynamicCast_AsBP_Character_1' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, K2Node_DynamicCast_bSuccess_1) == 0x0000E0, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, Temp_bool_Variable_3) == 0x0000E1, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, K2Node_Event_MyGeometry) == 0x0000E4, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, K2Node_Event_InDeltaTime) == 0x00011C, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, CallFunc_IsValid_ReturnValue_7) == 0x000120, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, CallFunc_IsValid_ReturnValue_8) == 0x000121, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, CallFunc_GetSelectedTrackButton_SelectedTrackButton) == 0x000128, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::CallFunc_GetSelectedTrackButton_SelectedTrackButton' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, CallFunc_GetSelectedTrackButton_Index) == 0x000130, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::CallFunc_GetSelectedTrackButton_Index' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, CallFunc_GetSelectedTrackButton_IsFound) == 0x000134, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::CallFunc_GetSelectedTrackButton_IsFound' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, CallFunc_IsValid_ReturnValue_9) == 0x000135, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, CallFunc_Array_Length_ReturnValue) == 0x000138, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, CallFunc_Greater_IntInt_ReturnValue) == 0x00013C, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, CallFunc_Not_PreBool_ReturnValue_1) == 0x00013D, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, CallFunc_Array_Length_ReturnValue_1) == 0x000140, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000144, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, CallFunc_Not_PreBool_ReturnValue_2) == 0x000145, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, K2Node_Event_IsDesignTime) == 0x000146, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, CallFunc_IsValid_ReturnValue_10) == 0x000147, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, CallFunc_Map_Find_Value) == 0x000148, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, CallFunc_Map_Find_ReturnValue) == 0x000160, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, CallFunc_Map_Keys_Keys) == 0x000168, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, CallFunc_Array_LastIndex_ReturnValue) == 0x000178, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, CallFunc_Array_Find_ReturnValue) == 0x00017C, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, CallFunc_Add_IntInt_ReturnValue) == 0x000180, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, CallFunc_Array_Get_Item) == 0x000184, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000188, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, K2Node_Select_Default) == 0x00018C, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, CallFunc_Map_Find_Value_1) == 0x000190, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, CallFunc_Map_Find_ReturnValue_1) == 0x0001A8, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, CallFunc_ChangeFilter_bSuccess) == 0x0001A9, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::CallFunc_ChangeFilter_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, CallFunc_Map_Keys_Keys_1) == 0x0001B0, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::CallFunc_Map_Keys_Keys_1' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, CallFunc_Array_LastIndex_ReturnValue_1) == 0x0001C0, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, CallFunc_Array_Find_ReturnValue_1) == 0x0001C4, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::CallFunc_Array_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, CallFunc_Array_Get_Item_1) == 0x0001C8, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001CC, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, CallFunc_Array_Get_Item_2) == 0x0001D0, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, CallFunc_Less_IntInt_ReturnValue) == 0x0001D4, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, CallFunc_IsValid_ReturnValue_11) == 0x0001D5, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, K2Node_Select_Default_1) == 0x0001D8, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, CallFunc_ChangeFilter_bSuccess_1) == 0x0001DC, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::CallFunc_ChangeFilter_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, CallFunc_IsValid_ReturnValue_12) == 0x0001DD, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, K2Node_CreateDelegate_OutputDelegate_3) == 0x0001E0, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, K2Node_CustomEvent_AxisValue) == 0x0001F0, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::K2Node_CustomEvent_AxisValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, K2Node_CustomEvent_DeltaTime) == 0x0001F4, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::K2Node_CustomEvent_DeltaTime' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, K2Node_CustomEvent_X_Input) == 0x0001F8, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::K2Node_CustomEvent_X_Input' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x0001FC, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, CallFunc_Abs_ReturnValue) == 0x000200, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000204, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000208, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000209, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, CallFunc_BooleanOR_ReturnValue) == 0x00020A, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, K2Node_Select_Default_2) == 0x00020C, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, K2Node_Select_Default_3) == 0x000210, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer, CallFunc_FInterpTo_ReturnValue) == 0x000214, "Member 'UI_CassettePlayer_C_ExecuteUbergraph_UI_CassettePlayer::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");

// Function UI_CassettePlayer.UI_CassettePlayer_C.HandleInput
// 0x0008 (0x0008 - 0x0000)
struct UI_CassettePlayer_C_HandleInput final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         X_Input;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_CassettePlayer_C_HandleInput) == 0x000004, "Wrong alignment on UI_CassettePlayer_C_HandleInput");
static_assert(sizeof(UI_CassettePlayer_C_HandleInput) == 0x000008, "Wrong size on UI_CassettePlayer_C_HandleInput");
static_assert(offsetof(UI_CassettePlayer_C_HandleInput, DeltaTime) == 0x000000, "Member 'UI_CassettePlayer_C_HandleInput::DeltaTime' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_HandleInput, X_Input) == 0x000004, "Member 'UI_CassettePlayer_C_HandleInput::X_Input' has a wrong offset!");

// Function UI_CassettePlayer.UI_CassettePlayer_C.OneMoveRight
// 0x0004 (0x0004 - 0x0000)
struct UI_CassettePlayer_C_OneMoveRight final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_CassettePlayer_C_OneMoveRight) == 0x000004, "Wrong alignment on UI_CassettePlayer_C_OneMoveRight");
static_assert(sizeof(UI_CassettePlayer_C_OneMoveRight) == 0x000004, "Wrong size on UI_CassettePlayer_C_OneMoveRight");
static_assert(offsetof(UI_CassettePlayer_C_OneMoveRight, AxisValue) == 0x000000, "Member 'UI_CassettePlayer_C_OneMoveRight::AxisValue' has a wrong offset!");

// Function UI_CassettePlayer.UI_CassettePlayer_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_CassettePlayer_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_CassettePlayer_C_PreConstruct) == 0x000001, "Wrong alignment on UI_CassettePlayer_C_PreConstruct");
static_assert(sizeof(UI_CassettePlayer_C_PreConstruct) == 0x000001, "Wrong size on UI_CassettePlayer_C_PreConstruct");
static_assert(offsetof(UI_CassettePlayer_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_CassettePlayer_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_CassettePlayer.UI_CassettePlayer_C.Tick
// 0x003C (0x003C - 0x0000)
struct UI_CassettePlayer_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_CassettePlayer_C_Tick) == 0x000004, "Wrong alignment on UI_CassettePlayer_C_Tick");
static_assert(sizeof(UI_CassettePlayer_C_Tick) == 0x00003C, "Wrong size on UI_CassettePlayer_C_Tick");
static_assert(offsetof(UI_CassettePlayer_C_Tick, MyGeometry) == 0x000000, "Member 'UI_CassettePlayer_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_Tick, InDeltaTime) == 0x000038, "Member 'UI_CassettePlayer_C_Tick::InDeltaTime' has a wrong offset!");

// Function UI_CassettePlayer.UI_CassettePlayer_C.LookUpDown
// 0x0004 (0x0004 - 0x0000)
struct UI_CassettePlayer_C_LookUpDown final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_CassettePlayer_C_LookUpDown) == 0x000004, "Wrong alignment on UI_CassettePlayer_C_LookUpDown");
static_assert(sizeof(UI_CassettePlayer_C_LookUpDown) == 0x000004, "Wrong size on UI_CassettePlayer_C_LookUpDown");
static_assert(offsetof(UI_CassettePlayer_C_LookUpDown, AxisValue) == 0x000000, "Member 'UI_CassettePlayer_C_LookUpDown::AxisValue' has a wrong offset!");

// Function UI_CassettePlayer.UI_CassettePlayer_C.Started New Song
// 0x0010 (0x0010 - 0x0000)
struct UI_CassettePlayer_C_Started_New_Song final
{
public:
	class UBP_CassetteTrack_C*                    Previous;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CassetteTrack_C*                    Current;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_CassettePlayer_C_Started_New_Song) == 0x000008, "Wrong alignment on UI_CassettePlayer_C_Started_New_Song");
static_assert(sizeof(UI_CassettePlayer_C_Started_New_Song) == 0x000010, "Wrong size on UI_CassettePlayer_C_Started_New_Song");
static_assert(offsetof(UI_CassettePlayer_C_Started_New_Song, Previous) == 0x000000, "Member 'UI_CassettePlayer_C_Started_New_Song::Previous' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_Started_New_Song, Current) == 0x000008, "Member 'UI_CassettePlayer_C_Started_New_Song::Current' has a wrong offset!");

// Function UI_CassettePlayer.UI_CassettePlayer_C.PopulateTrackList
// 0x00A8 (0x00A8 - 0x0000)
struct UI_CassettePlayer_C_PopulateTrackList final
{
public:
	TArray<class UBP_CassetteTrack_C*>            Tracks;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UBP_CassetteTrack_C*                    PlayedTrack;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Filter;                                            // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAtLeastOneCassetteUnlocked;                       // 0x001C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsPlayingTrack;                                    // 0x001D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SelectedIndex;                                     // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CassetteTrack_C*                    CurrentTrack;                                      // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_CassettePlayer_TrackButton_C*       CurrentButton;                                     // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CassetteTrack_C*                    CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_66[0x2];                                       // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_CassettePlayer_TrackButton_C*       CallFunc_Array_Get_Item_1;                         // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0086(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0087(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_CassettePlayer_TrackButton_C*       CallFunc_Create_ReturnValue;                       // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_CassettePlayer_C_PopulateTrackList) == 0x000008, "Wrong alignment on UI_CassettePlayer_C_PopulateTrackList");
static_assert(sizeof(UI_CassettePlayer_C_PopulateTrackList) == 0x0000A8, "Wrong size on UI_CassettePlayer_C_PopulateTrackList");
static_assert(offsetof(UI_CassettePlayer_C_PopulateTrackList, Tracks) == 0x000000, "Member 'UI_CassettePlayer_C_PopulateTrackList::Tracks' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_PopulateTrackList, PlayedTrack) == 0x000010, "Member 'UI_CassettePlayer_C_PopulateTrackList::PlayedTrack' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_PopulateTrackList, Filter) == 0x000018, "Member 'UI_CassettePlayer_C_PopulateTrackList::Filter' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_PopulateTrackList, bAtLeastOneCassetteUnlocked) == 0x00001C, "Member 'UI_CassettePlayer_C_PopulateTrackList::bAtLeastOneCassetteUnlocked' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_PopulateTrackList, IsPlayingTrack) == 0x00001D, "Member 'UI_CassettePlayer_C_PopulateTrackList::IsPlayingTrack' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_PopulateTrackList, SelectedIndex) == 0x000020, "Member 'UI_CassettePlayer_C_PopulateTrackList::SelectedIndex' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_PopulateTrackList, CurrentTrack) == 0x000028, "Member 'UI_CassettePlayer_C_PopulateTrackList::CurrentTrack' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_PopulateTrackList, CurrentButton) == 0x000030, "Member 'UI_CassettePlayer_C_PopulateTrackList::CurrentButton' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_PopulateTrackList, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'UI_CassettePlayer_C_PopulateTrackList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_PopulateTrackList, CallFunc_IsValid_ReturnValue) == 0x00003C, "Member 'UI_CassettePlayer_C_PopulateTrackList::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_PopulateTrackList, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'UI_CassettePlayer_C_PopulateTrackList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_PopulateTrackList, Temp_int_Array_Index_Variable) == 0x000044, "Member 'UI_CassettePlayer_C_PopulateTrackList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_PopulateTrackList, Temp_int_Array_Index_Variable_1) == 0x000048, "Member 'UI_CassettePlayer_C_PopulateTrackList::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_PopulateTrackList, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00004C, "Member 'UI_CassettePlayer_C_PopulateTrackList::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_PopulateTrackList, CallFunc_Add_IntInt_ReturnValue_1) == 0x000050, "Member 'UI_CassettePlayer_C_PopulateTrackList::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_PopulateTrackList, CallFunc_Array_Get_Item) == 0x000058, "Member 'UI_CassettePlayer_C_PopulateTrackList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_PopulateTrackList, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'UI_CassettePlayer_C_PopulateTrackList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_PopulateTrackList, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'UI_CassettePlayer_C_PopulateTrackList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_PopulateTrackList, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000065, "Member 'UI_CassettePlayer_C_PopulateTrackList::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_PopulateTrackList, CallFunc_Array_Get_Item_1) == 0x000068, "Member 'UI_CassettePlayer_C_PopulateTrackList::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_PopulateTrackList, CallFunc_Array_Length_ReturnValue_1) == 0x000070, "Member 'UI_CassettePlayer_C_PopulateTrackList::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_PopulateTrackList, CallFunc_Subtract_IntInt_ReturnValue) == 0x000074, "Member 'UI_CassettePlayer_C_PopulateTrackList::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_PopulateTrackList, CallFunc_Max_ReturnValue) == 0x000078, "Member 'UI_CassettePlayer_C_PopulateTrackList::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_PopulateTrackList, Temp_int_Loop_Counter_Variable_1) == 0x00007C, "Member 'UI_CassettePlayer_C_PopulateTrackList::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_PopulateTrackList, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000080, "Member 'UI_CassettePlayer_C_PopulateTrackList::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_PopulateTrackList, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000084, "Member 'UI_CassettePlayer_C_PopulateTrackList::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_PopulateTrackList, CallFunc_IsValid_ReturnValue_1) == 0x000085, "Member 'UI_CassettePlayer_C_PopulateTrackList::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_PopulateTrackList, CallFunc_IsValid_ReturnValue_2) == 0x000086, "Member 'UI_CassettePlayer_C_PopulateTrackList::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_PopulateTrackList, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000087, "Member 'UI_CassettePlayer_C_PopulateTrackList::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_PopulateTrackList, CallFunc_Array_Add_ReturnValue) == 0x000088, "Member 'UI_CassettePlayer_C_PopulateTrackList::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_PopulateTrackList, CallFunc_AddChild_ReturnValue) == 0x000090, "Member 'UI_CassettePlayer_C_PopulateTrackList::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_PopulateTrackList, CallFunc_GetOwningPlayer_ReturnValue) == 0x000098, "Member 'UI_CassettePlayer_C_PopulateTrackList::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_PopulateTrackList, CallFunc_Create_ReturnValue) == 0x0000A0, "Member 'UI_CassettePlayer_C_PopulateTrackList::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function UI_CassettePlayer.UI_CassettePlayer_C.SelectTrackButton
// 0x0030 (0x0030 - 0x0000)
struct UI_CassettePlayer_C_SelectTrackButton final
{
public:
	int32                                         TrackIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSelectedCurrentlyPlayedButton;                    // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_CassettePlayer_TrackButton_C*       CallFunc_GetPlayedTrackButton_SelectedTrackButton; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_CassettePlayer_TrackButton_C*       CallFunc_GetSelectedTrackButton_SelectedTrackButton; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSelectedTrackButton_Index;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSelectedTrackButton_IsFound;           // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_CassettePlayer_TrackButton_C*       CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_CassettePlayer_C_SelectTrackButton) == 0x000008, "Wrong alignment on UI_CassettePlayer_C_SelectTrackButton");
static_assert(sizeof(UI_CassettePlayer_C_SelectTrackButton) == 0x000030, "Wrong size on UI_CassettePlayer_C_SelectTrackButton");
static_assert(offsetof(UI_CassettePlayer_C_SelectTrackButton, TrackIndex) == 0x000000, "Member 'UI_CassettePlayer_C_SelectTrackButton::TrackIndex' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_SelectTrackButton, bSelectedCurrentlyPlayedButton) == 0x000004, "Member 'UI_CassettePlayer_C_SelectTrackButton::bSelectedCurrentlyPlayedButton' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_SelectTrackButton, CallFunc_GetPlayedTrackButton_SelectedTrackButton) == 0x000008, "Member 'UI_CassettePlayer_C_SelectTrackButton::CallFunc_GetPlayedTrackButton_SelectedTrackButton' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_SelectTrackButton, CallFunc_GetSelectedTrackButton_SelectedTrackButton) == 0x000010, "Member 'UI_CassettePlayer_C_SelectTrackButton::CallFunc_GetSelectedTrackButton_SelectedTrackButton' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_SelectTrackButton, CallFunc_GetSelectedTrackButton_Index) == 0x000018, "Member 'UI_CassettePlayer_C_SelectTrackButton::CallFunc_GetSelectedTrackButton_Index' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_SelectTrackButton, CallFunc_GetSelectedTrackButton_IsFound) == 0x00001C, "Member 'UI_CassettePlayer_C_SelectTrackButton::CallFunc_GetSelectedTrackButton_IsFound' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_SelectTrackButton, CallFunc_Array_Get_Item) == 0x000020, "Member 'UI_CassettePlayer_C_SelectTrackButton::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_SelectTrackButton, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'UI_CassettePlayer_C_SelectTrackButton::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_SelectTrackButton, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'UI_CassettePlayer_C_SelectTrackButton::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_SelectTrackButton, CallFunc_IsValid_ReturnValue) == 0x00002D, "Member 'UI_CassettePlayer_C_SelectTrackButton::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_SelectTrackButton, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00002E, "Member 'UI_CassettePlayer_C_SelectTrackButton::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function UI_CassettePlayer.UI_CassettePlayer_C.SelectNextTrack
// 0x0028 (0x0028 - 0x0000)
struct UI_CassettePlayer_C_SelectNextTrack final
{
public:
	int32                                         NextTrackIndex;                                    // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_CassettePlayer_TrackButton_C*       CallFunc_GetSelectedTrackButton_SelectedTrackButton; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSelectedTrackButton_Index;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSelectedTrackButton_IsFound;           // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_CassettePlayer_C_SelectNextTrack) == 0x000008, "Wrong alignment on UI_CassettePlayer_C_SelectNextTrack");
static_assert(sizeof(UI_CassettePlayer_C_SelectNextTrack) == 0x000028, "Wrong size on UI_CassettePlayer_C_SelectNextTrack");
static_assert(offsetof(UI_CassettePlayer_C_SelectNextTrack, NextTrackIndex) == 0x000000, "Member 'UI_CassettePlayer_C_SelectNextTrack::NextTrackIndex' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_SelectNextTrack, CallFunc_GetSelectedTrackButton_SelectedTrackButton) == 0x000008, "Member 'UI_CassettePlayer_C_SelectNextTrack::CallFunc_GetSelectedTrackButton_SelectedTrackButton' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_SelectNextTrack, CallFunc_GetSelectedTrackButton_Index) == 0x000010, "Member 'UI_CassettePlayer_C_SelectNextTrack::CallFunc_GetSelectedTrackButton_Index' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_SelectNextTrack, CallFunc_GetSelectedTrackButton_IsFound) == 0x000014, "Member 'UI_CassettePlayer_C_SelectNextTrack::CallFunc_GetSelectedTrackButton_IsFound' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_SelectNextTrack, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'UI_CassettePlayer_C_SelectNextTrack::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_SelectNextTrack, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'UI_CassettePlayer_C_SelectNextTrack::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_SelectNextTrack, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'UI_CassettePlayer_C_SelectNextTrack::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_SelectNextTrack, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000024, "Member 'UI_CassettePlayer_C_SelectNextTrack::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_SelectNextTrack, CallFunc_Greater_IntInt_ReturnValue) == 0x000025, "Member 'UI_CassettePlayer_C_SelectNextTrack::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function UI_CassettePlayer.UI_CassettePlayer_C.SelectPreviousTrack
// 0x0028 (0x0028 - 0x0000)
struct UI_CassettePlayer_C_SelectPreviousTrack final
{
public:
	int32                                         NextTrackIndex;                                    // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_CassettePlayer_TrackButton_C*       CallFunc_GetSelectedTrackButton_SelectedTrackButton; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSelectedTrackButton_Index;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSelectedTrackButton_IsFound;           // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_CassettePlayer_C_SelectPreviousTrack) == 0x000008, "Wrong alignment on UI_CassettePlayer_C_SelectPreviousTrack");
static_assert(sizeof(UI_CassettePlayer_C_SelectPreviousTrack) == 0x000028, "Wrong size on UI_CassettePlayer_C_SelectPreviousTrack");
static_assert(offsetof(UI_CassettePlayer_C_SelectPreviousTrack, NextTrackIndex) == 0x000000, "Member 'UI_CassettePlayer_C_SelectPreviousTrack::NextTrackIndex' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_SelectPreviousTrack, CallFunc_GetSelectedTrackButton_SelectedTrackButton) == 0x000008, "Member 'UI_CassettePlayer_C_SelectPreviousTrack::CallFunc_GetSelectedTrackButton_SelectedTrackButton' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_SelectPreviousTrack, CallFunc_GetSelectedTrackButton_Index) == 0x000010, "Member 'UI_CassettePlayer_C_SelectPreviousTrack::CallFunc_GetSelectedTrackButton_Index' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_SelectPreviousTrack, CallFunc_GetSelectedTrackButton_IsFound) == 0x000014, "Member 'UI_CassettePlayer_C_SelectPreviousTrack::CallFunc_GetSelectedTrackButton_IsFound' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_SelectPreviousTrack, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'UI_CassettePlayer_C_SelectPreviousTrack::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_SelectPreviousTrack, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'UI_CassettePlayer_C_SelectPreviousTrack::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_SelectPreviousTrack, CallFunc_IsValid_ReturnValue) == 0x00001D, "Member 'UI_CassettePlayer_C_SelectPreviousTrack::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_SelectPreviousTrack, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'UI_CassettePlayer_C_SelectPreviousTrack::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_SelectPreviousTrack, CallFunc_Greater_IntInt_ReturnValue) == 0x000024, "Member 'UI_CassettePlayer_C_SelectPreviousTrack::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function UI_CassettePlayer.UI_CassettePlayer_C.PlaySelectedButton
// 0x0058 (0x0058 - 0x0000)
struct UI_CassettePlayer_C_PlaySelectedButton final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_CassettePlayer_TrackButton_C*       NewSelectedButton;                                 // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_CassettePlayer_TrackButton_C*       CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_CassettePlayer_TrackButton_C*       CallFunc_GetSelectedTrackButton_SelectedTrackButton; // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSelectedTrackButton_Index;             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSelectedTrackButton_IsFound;           // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_CassettePlayer_TrackButton_C*       CallFunc_GetPlayedTrackButton_SelectedTrackButton; // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_CassettePlayer_C_PlaySelectedButton) == 0x000008, "Wrong alignment on UI_CassettePlayer_C_PlaySelectedButton");
static_assert(sizeof(UI_CassettePlayer_C_PlaySelectedButton) == 0x000058, "Wrong size on UI_CassettePlayer_C_PlaySelectedButton");
static_assert(offsetof(UI_CassettePlayer_C_PlaySelectedButton, Success) == 0x000000, "Member 'UI_CassettePlayer_C_PlaySelectedButton::Success' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_PlaySelectedButton, NewSelectedButton) == 0x000008, "Member 'UI_CassettePlayer_C_PlaySelectedButton::NewSelectedButton' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_PlaySelectedButton, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'UI_CassettePlayer_C_PlaySelectedButton::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_PlaySelectedButton, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'UI_CassettePlayer_C_PlaySelectedButton::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_PlaySelectedButton, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'UI_CassettePlayer_C_PlaySelectedButton::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_PlaySelectedButton, CallFunc_Array_Get_Item) == 0x000020, "Member 'UI_CassettePlayer_C_PlaySelectedButton::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_PlaySelectedButton, CallFunc_GetSelectedTrackButton_SelectedTrackButton) == 0x000028, "Member 'UI_CassettePlayer_C_PlaySelectedButton::CallFunc_GetSelectedTrackButton_SelectedTrackButton' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_PlaySelectedButton, CallFunc_GetSelectedTrackButton_Index) == 0x000030, "Member 'UI_CassettePlayer_C_PlaySelectedButton::CallFunc_GetSelectedTrackButton_Index' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_PlaySelectedButton, CallFunc_GetSelectedTrackButton_IsFound) == 0x000034, "Member 'UI_CassettePlayer_C_PlaySelectedButton::CallFunc_GetSelectedTrackButton_IsFound' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_PlaySelectedButton, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'UI_CassettePlayer_C_PlaySelectedButton::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_PlaySelectedButton, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'UI_CassettePlayer_C_PlaySelectedButton::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_PlaySelectedButton, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'UI_CassettePlayer_C_PlaySelectedButton::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_PlaySelectedButton, CallFunc_GetPlayedTrackButton_SelectedTrackButton) == 0x000048, "Member 'UI_CassettePlayer_C_PlaySelectedButton::CallFunc_GetPlayedTrackButton_SelectedTrackButton' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_PlaySelectedButton, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'UI_CassettePlayer_C_PlaySelectedButton::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_PlaySelectedButton, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000051, "Member 'UI_CassettePlayer_C_PlaySelectedButton::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_PlaySelectedButton, CallFunc_IsValid_ReturnValue_1) == 0x000052, "Member 'UI_CassettePlayer_C_PlaySelectedButton::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_PlaySelectedButton, CallFunc_IsValid_ReturnValue_2) == 0x000053, "Member 'UI_CassettePlayer_C_PlaySelectedButton::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function UI_CassettePlayer.UI_CassettePlayer_C.GetSelectedTrackButton
// 0x0030 (0x0030 - 0x0000)
struct UI_CassettePlayer_C_GetSelectedTrackButton final
{
public:
	class UUI_CassettePlayer_TrackButton_C*       SelectedTrackButton;                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFound;                                           // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_CassettePlayer_TrackButton_C*       CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_CassettePlayer_C_GetSelectedTrackButton) == 0x000008, "Wrong alignment on UI_CassettePlayer_C_GetSelectedTrackButton");
static_assert(sizeof(UI_CassettePlayer_C_GetSelectedTrackButton) == 0x000030, "Wrong size on UI_CassettePlayer_C_GetSelectedTrackButton");
static_assert(offsetof(UI_CassettePlayer_C_GetSelectedTrackButton, SelectedTrackButton) == 0x000000, "Member 'UI_CassettePlayer_C_GetSelectedTrackButton::SelectedTrackButton' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_GetSelectedTrackButton, Index_0) == 0x000008, "Member 'UI_CassettePlayer_C_GetSelectedTrackButton::Index_0' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_GetSelectedTrackButton, IsFound) == 0x00000C, "Member 'UI_CassettePlayer_C_GetSelectedTrackButton::IsFound' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_GetSelectedTrackButton, Temp_int_Array_Index_Variable) == 0x000010, "Member 'UI_CassettePlayer_C_GetSelectedTrackButton::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_GetSelectedTrackButton, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'UI_CassettePlayer_C_GetSelectedTrackButton::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_GetSelectedTrackButton, CallFunc_Array_Get_Item) == 0x000018, "Member 'UI_CassettePlayer_C_GetSelectedTrackButton::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_GetSelectedTrackButton, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'UI_CassettePlayer_C_GetSelectedTrackButton::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_GetSelectedTrackButton, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'UI_CassettePlayer_C_GetSelectedTrackButton::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_GetSelectedTrackButton, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'UI_CassettePlayer_C_GetSelectedTrackButton::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_GetSelectedTrackButton, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'UI_CassettePlayer_C_GetSelectedTrackButton::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_GetSelectedTrackButton, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00002D, "Member 'UI_CassettePlayer_C_GetSelectedTrackButton::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function UI_CassettePlayer.UI_CassettePlayer_C.GetPlayedTrackButton
// 0x0058 (0x0058 - 0x0000)
struct UI_CassettePlayer_C_GetPlayedTrackButton final
{
public:
	class UUI_CassettePlayer_TrackButton_C*       SelectedTrackButton;                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USoundBase>              CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x0010(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_CassettePlayer_TrackButton_C*       CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_SoftObjectReference_ReturnValue; // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_CassettePlayer_C_GetPlayedTrackButton) == 0x000008, "Wrong alignment on UI_CassettePlayer_C_GetPlayedTrackButton");
static_assert(sizeof(UI_CassettePlayer_C_GetPlayedTrackButton) == 0x000058, "Wrong size on UI_CassettePlayer_C_GetPlayedTrackButton");
static_assert(offsetof(UI_CassettePlayer_C_GetPlayedTrackButton, SelectedTrackButton) == 0x000000, "Member 'UI_CassettePlayer_C_GetPlayedTrackButton::SelectedTrackButton' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_GetPlayedTrackButton, Temp_int_Array_Index_Variable) == 0x000008, "Member 'UI_CassettePlayer_C_GetPlayedTrackButton::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_GetPlayedTrackButton, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x000010, "Member 'UI_CassettePlayer_C_GetPlayedTrackButton::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_GetPlayedTrackButton, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'UI_CassettePlayer_C_GetPlayedTrackButton::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_GetPlayedTrackButton, CallFunc_Array_Get_Item) == 0x000040, "Member 'UI_CassettePlayer_C_GetPlayedTrackButton::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_GetPlayedTrackButton, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'UI_CassettePlayer_C_GetPlayedTrackButton::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_GetPlayedTrackButton, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'UI_CassettePlayer_C_GetPlayedTrackButton::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_GetPlayedTrackButton, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'UI_CassettePlayer_C_GetPlayedTrackButton::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_GetPlayedTrackButton, CallFunc_EqualEqual_SoftObjectReference_ReturnValue) == 0x000054, "Member 'UI_CassettePlayer_C_GetPlayedTrackButton::CallFunc_EqualEqual_SoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_GetPlayedTrackButton, CallFunc_IsValid_ReturnValue) == 0x000055, "Member 'UI_CassettePlayer_C_GetPlayedTrackButton::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function UI_CassettePlayer.UI_CassettePlayer_C.GetTrackButton
// 0x0038 (0x0038 - 0x0000)
struct UI_CassettePlayer_C_GetTrackButton final
{
public:
	class UBP_CassetteTrack_C*                    CassetteTrack;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_CassettePlayer_TrackButton_C*       Button;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_CassettePlayer_TrackButton_C*       CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_CassettePlayer_C_GetTrackButton) == 0x000008, "Wrong alignment on UI_CassettePlayer_C_GetTrackButton");
static_assert(sizeof(UI_CassettePlayer_C_GetTrackButton) == 0x000038, "Wrong size on UI_CassettePlayer_C_GetTrackButton");
static_assert(offsetof(UI_CassettePlayer_C_GetTrackButton, CassetteTrack) == 0x000000, "Member 'UI_CassettePlayer_C_GetTrackButton::CassetteTrack' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_GetTrackButton, Button) == 0x000008, "Member 'UI_CassettePlayer_C_GetTrackButton::Button' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_GetTrackButton, Temp_int_Array_Index_Variable) == 0x000010, "Member 'UI_CassettePlayer_C_GetTrackButton::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_GetTrackButton, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'UI_CassettePlayer_C_GetTrackButton::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_GetTrackButton, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'UI_CassettePlayer_C_GetTrackButton::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_GetTrackButton, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'UI_CassettePlayer_C_GetTrackButton::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_GetTrackButton, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'UI_CassettePlayer_C_GetTrackButton::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_GetTrackButton, CallFunc_Array_Get_Item) == 0x000028, "Member 'UI_CassettePlayer_C_GetTrackButton::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_GetTrackButton, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'UI_CassettePlayer_C_GetTrackButton::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_GetTrackButton, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000031, "Member 'UI_CassettePlayer_C_GetTrackButton::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function UI_CassettePlayer.UI_CassettePlayer_C.SetCurrentTrackInfo
// 0x0230 (0x0230 - 0x0000)
struct UI_CassettePlayer_C_SetCurrentTrackInfo final
{
public:
	class UBP_CassetteTrack_C*                    Track;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0010(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0050(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0060(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00A0(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x00B8(0x0010)(ReferenceParm)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x00D0(0x0018)()
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Get_Time_Text_From_Float_Text;            // 0x0108(0x0018)()
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0130(0x0040)(HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_172[0x6];                                      // 0x0172(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePassSystem*                      CallFunc_GetBattlePassSystem_ReturnValue;          // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_BattlePassSystem_C*                 K2Node_DynamicCast_AsBP_Battle_Pass_System;        // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18A[0x6];                                      // 0x018A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Get_Season_Title_Title;                   // 0x0190(0x0018)()
	bool                                          CallFunc_TextIsEmpty_ReturnValue_1;                // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AA[0x6];                                      // 0x01AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_1;                           // 0x01B0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x01C8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0208(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0218(0x0018)()
};
static_assert(alignof(UI_CassettePlayer_C_SetCurrentTrackInfo) == 0x000008, "Wrong alignment on UI_CassettePlayer_C_SetCurrentTrackInfo");
static_assert(sizeof(UI_CassettePlayer_C_SetCurrentTrackInfo) == 0x000230, "Wrong size on UI_CassettePlayer_C_SetCurrentTrackInfo");
static_assert(offsetof(UI_CassettePlayer_C_SetCurrentTrackInfo, Track) == 0x000000, "Member 'UI_CassettePlayer_C_SetCurrentTrackInfo::Track' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_SetCurrentTrackInfo, Temp_byte_Variable) == 0x000008, "Member 'UI_CassettePlayer_C_SetCurrentTrackInfo::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_SetCurrentTrackInfo, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'UI_CassettePlayer_C_SetCurrentTrackInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_SetCurrentTrackInfo, K2Node_MakeStruct_FormatArgumentData) == 0x000010, "Member 'UI_CassettePlayer_C_SetCurrentTrackInfo::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_SetCurrentTrackInfo, K2Node_MakeArray_Array) == 0x000050, "Member 'UI_CassettePlayer_C_SetCurrentTrackInfo::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_SetCurrentTrackInfo, K2Node_MakeStruct_FormatArgumentData_1) == 0x000060, "Member 'UI_CassettePlayer_C_SetCurrentTrackInfo::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_SetCurrentTrackInfo, CallFunc_Format_ReturnValue) == 0x0000A0, "Member 'UI_CassettePlayer_C_SetCurrentTrackInfo::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_SetCurrentTrackInfo, K2Node_MakeArray_Array_1) == 0x0000B8, "Member 'UI_CassettePlayer_C_SetCurrentTrackInfo::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_SetCurrentTrackInfo, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x0000C8, "Member 'UI_CassettePlayer_C_SetCurrentTrackInfo::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_SetCurrentTrackInfo, CallFunc_Format_ReturnValue_1) == 0x0000D0, "Member 'UI_CassettePlayer_C_SetCurrentTrackInfo::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_SetCurrentTrackInfo, K2Node_DynamicCast_AsTexture_2D) == 0x0000E8, "Member 'UI_CassettePlayer_C_SetCurrentTrackInfo::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_SetCurrentTrackInfo, K2Node_DynamicCast_bSuccess) == 0x0000F0, "Member 'UI_CassettePlayer_C_SetCurrentTrackInfo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_SetCurrentTrackInfo, CallFunc_Conv_TextToString_ReturnValue) == 0x0000F8, "Member 'UI_CassettePlayer_C_SetCurrentTrackInfo::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_SetCurrentTrackInfo, CallFunc_Get_Time_Text_From_Float_Text) == 0x000108, "Member 'UI_CassettePlayer_C_SetCurrentTrackInfo::CallFunc_Get_Time_Text_From_Float_Text' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_SetCurrentTrackInfo, CallFunc_Conv_StringToName_ReturnValue) == 0x000120, "Member 'UI_CassettePlayer_C_SetCurrentTrackInfo::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_SetCurrentTrackInfo, CallFunc_TextIsEmpty_ReturnValue) == 0x000128, "Member 'UI_CassettePlayer_C_SetCurrentTrackInfo::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_SetCurrentTrackInfo, K2Node_MakeStruct_FormatArgumentData_2) == 0x000130, "Member 'UI_CassettePlayer_C_SetCurrentTrackInfo::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_SetCurrentTrackInfo, Temp_byte_Variable_1) == 0x000170, "Member 'UI_CassettePlayer_C_SetCurrentTrackInfo::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_SetCurrentTrackInfo, Temp_bool_Variable) == 0x000171, "Member 'UI_CassettePlayer_C_SetCurrentTrackInfo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_SetCurrentTrackInfo, CallFunc_GetBattlePassSystem_ReturnValue) == 0x000178, "Member 'UI_CassettePlayer_C_SetCurrentTrackInfo::CallFunc_GetBattlePassSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_SetCurrentTrackInfo, K2Node_DynamicCast_AsBP_Battle_Pass_System) == 0x000180, "Member 'UI_CassettePlayer_C_SetCurrentTrackInfo::K2Node_DynamicCast_AsBP_Battle_Pass_System' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_SetCurrentTrackInfo, K2Node_DynamicCast_bSuccess_1) == 0x000188, "Member 'UI_CassettePlayer_C_SetCurrentTrackInfo::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_SetCurrentTrackInfo, K2Node_Select_Default) == 0x000189, "Member 'UI_CassettePlayer_C_SetCurrentTrackInfo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_SetCurrentTrackInfo, CallFunc_Get_Season_Title_Title) == 0x000190, "Member 'UI_CassettePlayer_C_SetCurrentTrackInfo::CallFunc_Get_Season_Title_Title' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_SetCurrentTrackInfo, CallFunc_TextIsEmpty_ReturnValue_1) == 0x0001A8, "Member 'UI_CassettePlayer_C_SetCurrentTrackInfo::CallFunc_TextIsEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_SetCurrentTrackInfo, Temp_bool_Variable_1) == 0x0001A9, "Member 'UI_CassettePlayer_C_SetCurrentTrackInfo::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_SetCurrentTrackInfo, K2Node_Select_Default_1) == 0x0001B0, "Member 'UI_CassettePlayer_C_SetCurrentTrackInfo::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_SetCurrentTrackInfo, K2Node_MakeStruct_FormatArgumentData_3) == 0x0001C8, "Member 'UI_CassettePlayer_C_SetCurrentTrackInfo::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_SetCurrentTrackInfo, K2Node_MakeArray_Array_2) == 0x000208, "Member 'UI_CassettePlayer_C_SetCurrentTrackInfo::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_SetCurrentTrackInfo, CallFunc_Format_ReturnValue_2) == 0x000218, "Member 'UI_CassettePlayer_C_SetCurrentTrackInfo::CallFunc_Format_ReturnValue_2' has a wrong offset!");

// Function UI_CassettePlayer.UI_CassettePlayer_C.UpdateTrackTime
// 0x0058 (0x0058 - 0x0000)
struct UI_CassettePlayer_C_UpdateTrackTime final
{
public:
	float                                         TotalTime;                                         // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentTime;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Get_Time_Text_From_Float_Text;            // 0x0010(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x1];                                       // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue; // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FMin_ReturnValue_1;                       // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_1;                       // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_CassettePlayer_C_UpdateTrackTime) == 0x000008, "Wrong alignment on UI_CassettePlayer_C_UpdateTrackTime");
static_assert(sizeof(UI_CassettePlayer_C_UpdateTrackTime) == 0x000058, "Wrong size on UI_CassettePlayer_C_UpdateTrackTime");
static_assert(offsetof(UI_CassettePlayer_C_UpdateTrackTime, TotalTime) == 0x000000, "Member 'UI_CassettePlayer_C_UpdateTrackTime::TotalTime' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_UpdateTrackTime, CurrentTime) == 0x000004, "Member 'UI_CassettePlayer_C_UpdateTrackTime::CurrentTime' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_UpdateTrackTime, Temp_float_Variable) == 0x000008, "Member 'UI_CassettePlayer_C_UpdateTrackTime::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_UpdateTrackTime, Temp_bool_Variable) == 0x00000C, "Member 'UI_CassettePlayer_C_UpdateTrackTime::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_UpdateTrackTime, CallFunc_Get_Time_Text_From_Float_Text) == 0x000010, "Member 'UI_CassettePlayer_C_UpdateTrackTime::CallFunc_Get_Time_Text_From_Float_Text' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_UpdateTrackTime, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'UI_CassettePlayer_C_UpdateTrackTime::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_UpdateTrackTime, CallFunc_IsValid_ReturnValue_1) == 0x000029, "Member 'UI_CassettePlayer_C_UpdateTrackTime::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_UpdateTrackTime, Temp_bool_Variable_1) == 0x00002A, "Member 'UI_CassettePlayer_C_UpdateTrackTime::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_UpdateTrackTime, CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue) == 0x00002C, "Member 'UI_CassettePlayer_C_UpdateTrackTime::CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_UpdateTrackTime, CallFunc_FMax_ReturnValue) == 0x000030, "Member 'UI_CassettePlayer_C_UpdateTrackTime::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_UpdateTrackTime, CallFunc_Less_FloatFloat_ReturnValue) == 0x000034, "Member 'UI_CassettePlayer_C_UpdateTrackTime::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_UpdateTrackTime, CallFunc_FMin_ReturnValue) == 0x000038, "Member 'UI_CassettePlayer_C_UpdateTrackTime::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_UpdateTrackTime, K2Node_Select_Default) == 0x00003C, "Member 'UI_CassettePlayer_C_UpdateTrackTime::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_UpdateTrackTime, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000040, "Member 'UI_CassettePlayer_C_UpdateTrackTime::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_UpdateTrackTime, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000044, "Member 'UI_CassettePlayer_C_UpdateTrackTime::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_UpdateTrackTime, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000048, "Member 'UI_CassettePlayer_C_UpdateTrackTime::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_UpdateTrackTime, CallFunc_FMin_ReturnValue_1) == 0x00004C, "Member 'UI_CassettePlayer_C_UpdateTrackTime::CallFunc_FMin_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_UpdateTrackTime, CallFunc_FMax_ReturnValue_1) == 0x000050, "Member 'UI_CassettePlayer_C_UpdateTrackTime::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_UpdateTrackTime, K2Node_Select_Default_1) == 0x000054, "Member 'UI_CassettePlayer_C_UpdateTrackTime::K2Node_Select_Default_1' has a wrong offset!");

// Function UI_CassettePlayer.UI_CassettePlayer_C.Get Time Text From Float
// 0x0150 (0x0150 - 0x0000)
struct UI_CassettePlayer_C_Get_Time_Text_From_Float final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Text;                                              // 0x0008(0x0018)(Parm, OutParm)
	int32                                         Minutes;                                           // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Seconds;                                           // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00B8(0x0018)()
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00D8(0x0040)(HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0120(0x0010)(ReferenceParm)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0138(0x0018)()
};
static_assert(alignof(UI_CassettePlayer_C_Get_Time_Text_From_Float) == 0x000008, "Wrong alignment on UI_CassettePlayer_C_Get_Time_Text_From_Float");
static_assert(sizeof(UI_CassettePlayer_C_Get_Time_Text_From_Float) == 0x000150, "Wrong size on UI_CassettePlayer_C_Get_Time_Text_From_Float");
static_assert(offsetof(UI_CassettePlayer_C_Get_Time_Text_From_Float, Value) == 0x000000, "Member 'UI_CassettePlayer_C_Get_Time_Text_From_Float::Value' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_Get_Time_Text_From_Float, Text) == 0x000008, "Member 'UI_CassettePlayer_C_Get_Time_Text_From_Float::Text' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_Get_Time_Text_From_Float, Minutes) == 0x000020, "Member 'UI_CassettePlayer_C_Get_Time_Text_From_Float::Minutes' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_Get_Time_Text_From_Float, Seconds) == 0x000024, "Member 'UI_CassettePlayer_C_Get_Time_Text_From_Float::Seconds' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_Get_Time_Text_From_Float, Temp_bool_Variable) == 0x000028, "Member 'UI_CassettePlayer_C_Get_Time_Text_From_Float::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_Get_Time_Text_From_Float, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00002C, "Member 'UI_CassettePlayer_C_Get_Time_Text_From_Float::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_Get_Time_Text_From_Float, CallFunc_FTrunc_ReturnValue) == 0x000030, "Member 'UI_CassettePlayer_C_Get_Time_Text_From_Float::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_Get_Time_Text_From_Float, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'UI_CassettePlayer_C_Get_Time_Text_From_Float::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_Get_Time_Text_From_Float, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'UI_CassettePlayer_C_Get_Time_Text_From_Float::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_Get_Time_Text_From_Float, CallFunc_Conv_IntToString_ReturnValue) == 0x000080, "Member 'UI_CassettePlayer_C_Get_Time_Text_From_Float::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_Get_Time_Text_From_Float, CallFunc_Concat_StrStr_ReturnValue) == 0x000090, "Member 'UI_CassettePlayer_C_Get_Time_Text_From_Float::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_Get_Time_Text_From_Float, K2Node_Select_Default) == 0x0000A0, "Member 'UI_CassettePlayer_C_Get_Time_Text_From_Float::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_Get_Time_Text_From_Float, CallFunc_Multiply_IntInt_ReturnValue) == 0x0000B0, "Member 'UI_CassettePlayer_C_Get_Time_Text_From_Float::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_Get_Time_Text_From_Float, CallFunc_Conv_StringToText_ReturnValue) == 0x0000B8, "Member 'UI_CassettePlayer_C_Get_Time_Text_From_Float::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_Get_Time_Text_From_Float, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0000D0, "Member 'UI_CassettePlayer_C_Get_Time_Text_From_Float::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_Get_Time_Text_From_Float, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000D8, "Member 'UI_CassettePlayer_C_Get_Time_Text_From_Float::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_Get_Time_Text_From_Float, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000118, "Member 'UI_CassettePlayer_C_Get_Time_Text_From_Float::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_Get_Time_Text_From_Float, K2Node_MakeArray_Array) == 0x000120, "Member 'UI_CassettePlayer_C_Get_Time_Text_From_Float::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_Get_Time_Text_From_Float, CallFunc_Round_ReturnValue) == 0x000130, "Member 'UI_CassettePlayer_C_Get_Time_Text_From_Float::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_Get_Time_Text_From_Float, CallFunc_Format_ReturnValue) == 0x000138, "Member 'UI_CassettePlayer_C_Get_Time_Text_From_Float::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function UI_CassettePlayer.UI_CassettePlayer_C.UpdateRotateVisibility
// 0x0014 (0x0014 - 0x0000)
struct UI_CassettePlayer_C_UpdateRotateVisibility final
{
public:
	bool                                          bCanRotate;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_CassettePlayer_C_UpdateRotateVisibility) == 0x000004, "Wrong alignment on UI_CassettePlayer_C_UpdateRotateVisibility");
static_assert(sizeof(UI_CassettePlayer_C_UpdateRotateVisibility) == 0x000014, "Wrong size on UI_CassettePlayer_C_UpdateRotateVisibility");
static_assert(offsetof(UI_CassettePlayer_C_UpdateRotateVisibility, bCanRotate) == 0x000000, "Member 'UI_CassettePlayer_C_UpdateRotateVisibility::bCanRotate' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_UpdateRotateVisibility, Temp_bool_Variable) == 0x000001, "Member 'UI_CassettePlayer_C_UpdateRotateVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_UpdateRotateVisibility, Temp_bool_Variable_1) == 0x000002, "Member 'UI_CassettePlayer_C_UpdateRotateVisibility::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_UpdateRotateVisibility, Temp_bool_Variable_2) == 0x000003, "Member 'UI_CassettePlayer_C_UpdateRotateVisibility::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_UpdateRotateVisibility, Temp_bool_Variable_3) == 0x000004, "Member 'UI_CassettePlayer_C_UpdateRotateVisibility::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_UpdateRotateVisibility, K2Node_Select_Default) == 0x000005, "Member 'UI_CassettePlayer_C_UpdateRotateVisibility::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_UpdateRotateVisibility, Temp_float_Variable) == 0x000008, "Member 'UI_CassettePlayer_C_UpdateRotateVisibility::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_UpdateRotateVisibility, Temp_float_Variable_1) == 0x00000C, "Member 'UI_CassettePlayer_C_UpdateRotateVisibility::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_UpdateRotateVisibility, K2Node_Select_Default_1) == 0x000010, "Member 'UI_CassettePlayer_C_UpdateRotateVisibility::K2Node_Select_Default_1' has a wrong offset!");

// Function UI_CassettePlayer.UI_CassettePlayer_C.UpdateButtonsVisibility
// 0x003C (0x003C - 0x0000)
struct UI_CassettePlayer_C_UpdateButtonsVisibility final
{
public:
	bool                                          bPreviewButtonVisibility;                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bSelectedCurrentlyPlayedButton;                    // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bHideAll;                                          // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_5;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_6;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_7;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_8;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Temp_float_Variable;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_9;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_2;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_10;                             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_4;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_5;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_11;                             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default_1;                           // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default_2;                           // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default_3;                           // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Select_Default_4;                           // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_5;                           // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_CassettePlayer_C_UpdateButtonsVisibility) == 0x000004, "Wrong alignment on UI_CassettePlayer_C_UpdateButtonsVisibility");
static_assert(sizeof(UI_CassettePlayer_C_UpdateButtonsVisibility) == 0x00003C, "Wrong size on UI_CassettePlayer_C_UpdateButtonsVisibility");
static_assert(offsetof(UI_CassettePlayer_C_UpdateButtonsVisibility, bPreviewButtonVisibility) == 0x000000, "Member 'UI_CassettePlayer_C_UpdateButtonsVisibility::bPreviewButtonVisibility' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_UpdateButtonsVisibility, bSelectedCurrentlyPlayedButton) == 0x000001, "Member 'UI_CassettePlayer_C_UpdateButtonsVisibility::bSelectedCurrentlyPlayedButton' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_UpdateButtonsVisibility, bHideAll) == 0x000002, "Member 'UI_CassettePlayer_C_UpdateButtonsVisibility::bHideAll' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_UpdateButtonsVisibility, Temp_bool_Variable) == 0x000003, "Member 'UI_CassettePlayer_C_UpdateButtonsVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_UpdateButtonsVisibility, Temp_bool_Variable_1) == 0x000004, "Member 'UI_CassettePlayer_C_UpdateButtonsVisibility::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_UpdateButtonsVisibility, Temp_bool_Variable_2) == 0x000005, "Member 'UI_CassettePlayer_C_UpdateButtonsVisibility::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_UpdateButtonsVisibility, Temp_bool_Variable_3) == 0x000006, "Member 'UI_CassettePlayer_C_UpdateButtonsVisibility::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_UpdateButtonsVisibility, Temp_bool_Variable_4) == 0x000007, "Member 'UI_CassettePlayer_C_UpdateButtonsVisibility::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_UpdateButtonsVisibility, Temp_bool_Variable_5) == 0x000008, "Member 'UI_CassettePlayer_C_UpdateButtonsVisibility::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_UpdateButtonsVisibility, Temp_bool_Variable_6) == 0x000009, "Member 'UI_CassettePlayer_C_UpdateButtonsVisibility::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_UpdateButtonsVisibility, Temp_bool_Variable_7) == 0x00000A, "Member 'UI_CassettePlayer_C_UpdateButtonsVisibility::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_UpdateButtonsVisibility, Temp_bool_Variable_8) == 0x00000B, "Member 'UI_CassettePlayer_C_UpdateButtonsVisibility::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_UpdateButtonsVisibility, Temp_float_Variable) == 0x00000C, "Member 'UI_CassettePlayer_C_UpdateButtonsVisibility::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_UpdateButtonsVisibility, Temp_float_Variable_1) == 0x000010, "Member 'UI_CassettePlayer_C_UpdateButtonsVisibility::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_UpdateButtonsVisibility, Temp_bool_Variable_9) == 0x000014, "Member 'UI_CassettePlayer_C_UpdateButtonsVisibility::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_UpdateButtonsVisibility, Temp_float_Variable_2) == 0x000018, "Member 'UI_CassettePlayer_C_UpdateButtonsVisibility::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_UpdateButtonsVisibility, Temp_float_Variable_3) == 0x00001C, "Member 'UI_CassettePlayer_C_UpdateButtonsVisibility::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_UpdateButtonsVisibility, Temp_bool_Variable_10) == 0x000020, "Member 'UI_CassettePlayer_C_UpdateButtonsVisibility::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_UpdateButtonsVisibility, Temp_float_Variable_4) == 0x000024, "Member 'UI_CassettePlayer_C_UpdateButtonsVisibility::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_UpdateButtonsVisibility, Temp_float_Variable_5) == 0x000028, "Member 'UI_CassettePlayer_C_UpdateButtonsVisibility::Temp_float_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_UpdateButtonsVisibility, K2Node_Select_Default) == 0x00002C, "Member 'UI_CassettePlayer_C_UpdateButtonsVisibility::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_UpdateButtonsVisibility, Temp_bool_Variable_11) == 0x000030, "Member 'UI_CassettePlayer_C_UpdateButtonsVisibility::Temp_bool_Variable_11' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_UpdateButtonsVisibility, K2Node_Select_Default_1) == 0x000031, "Member 'UI_CassettePlayer_C_UpdateButtonsVisibility::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_UpdateButtonsVisibility, K2Node_Select_Default_2) == 0x000032, "Member 'UI_CassettePlayer_C_UpdateButtonsVisibility::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_UpdateButtonsVisibility, K2Node_Select_Default_3) == 0x000033, "Member 'UI_CassettePlayer_C_UpdateButtonsVisibility::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_UpdateButtonsVisibility, K2Node_Select_Default_4) == 0x000034, "Member 'UI_CassettePlayer_C_UpdateButtonsVisibility::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_UpdateButtonsVisibility, K2Node_Select_Default_5) == 0x000038, "Member 'UI_CassettePlayer_C_UpdateButtonsVisibility::K2Node_Select_Default_5' has a wrong offset!");

// Function UI_CassettePlayer.UI_CassettePlayer_C.UpdateCassetteFilter
// 0x0008 (0x0008 - 0x0000)
struct UI_CassettePlayer_C_UpdateCassetteFilter final
{
public:
	int32                                         Filter;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_CassettePlayer_C_UpdateCassetteFilter) == 0x000004, "Wrong alignment on UI_CassettePlayer_C_UpdateCassetteFilter");
static_assert(sizeof(UI_CassettePlayer_C_UpdateCassetteFilter) == 0x000008, "Wrong size on UI_CassettePlayer_C_UpdateCassetteFilter");
static_assert(offsetof(UI_CassettePlayer_C_UpdateCassetteFilter, Filter) == 0x000000, "Member 'UI_CassettePlayer_C_UpdateCassetteFilter::Filter' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_UpdateCassetteFilter, K2Node_SwitchInteger_CmpSuccess) == 0x000004, "Member 'UI_CassettePlayer_C_UpdateCassetteFilter::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function UI_CassettePlayer.UI_CassettePlayer_C.ChangeFilter
// 0x0020 (0x0020 - 0x0000)
struct UI_CassettePlayer_C_ChangeFilter final
{
public:
	int32                                         FilterIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSuccess;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_CassetteTrack_C*>            CallFunc_GetCassetteTracksFromDataTable_MusicTrackList; // 0x0008(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_CassettePlayer_C_ChangeFilter) == 0x000008, "Wrong alignment on UI_CassettePlayer_C_ChangeFilter");
static_assert(sizeof(UI_CassettePlayer_C_ChangeFilter) == 0x000020, "Wrong size on UI_CassettePlayer_C_ChangeFilter");
static_assert(offsetof(UI_CassettePlayer_C_ChangeFilter, FilterIndex) == 0x000000, "Member 'UI_CassettePlayer_C_ChangeFilter::FilterIndex' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ChangeFilter, bSuccess) == 0x000004, "Member 'UI_CassettePlayer_C_ChangeFilter::bSuccess' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ChangeFilter, CallFunc_IsValid_ReturnValue) == 0x000005, "Member 'UI_CassettePlayer_C_ChangeFilter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ChangeFilter, CallFunc_GetCassetteTracksFromDataTable_MusicTrackList) == 0x000008, "Member 'UI_CassettePlayer_C_ChangeFilter::CallFunc_GetCassetteTracksFromDataTable_MusicTrackList' has a wrong offset!");
static_assert(offsetof(UI_CassettePlayer_C_ChangeFilter, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000018, "Member 'UI_CassettePlayer_C_ChangeFilter::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

}

