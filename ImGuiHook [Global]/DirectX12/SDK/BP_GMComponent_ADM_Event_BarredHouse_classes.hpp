#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GMComponent_ADM_Event_BarredHouse

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_GMComponent_ADM_Event_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_GMComponent_ADM_Event_BarredHouse.BP_GMComponent_ADM_Event_BarredHouse_C
// 0x0050 (0x0228 - 0x01D8)
class UBP_GMComponent_ADM_Event_BarredHouse_C final : public UBP_GMComponent_ADM_Event_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_GMComponent_ADM_Event_BarredHouse_C; // 0x01D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ABP_ADM_BarredVaultLocation_C*          Vault_Location;                                    // 0x01E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ADM_BarredVault_C*                  Vault;                                             // 0x01E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Unlock_Duration;                                   // 0x01F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F4[0x4];                                      // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           Unlock_Timer;                                      // 0x01F8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_ADM_BarredVaultLocation_C*>  Debug_Vault_Locations;                             // 0x0200(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class ABP_ADM_BarredVault_C*>          Debug_Vaults;                                      // 0x0210(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class ABP_ADM_BarredVault_LootManager_C*      Vault_Loot_Manager;                                // 0x0220(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_GMComponent_ADM_Event_BarredHouse(int32 EntryPoint);
	void Match_Has_Started();
	void Barricade_Interaction(class AActor* Interacting_Actor, class UBP_ADM_DoorBarricade_Component_C* Barricade);
	void Vault_Loot_Initialized(bool Result);
	void Vault_Looted();
	void Unlock_Vault();
	void Vault_Unlock_Interaction(class AHumanCharacter* Interacting_Character);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void Player_Logged_In(class ABP_PlayerController_AirDropModular_C* New_Controller);
	void Initialize_Component();
	void Spawn_All_Vaults();
	void Game_Mode_Toggled(bool Game_Mode_Is_Running);
	void Spawn_Assets(bool* Success);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_GMComponent_ADM_Event_BarredHouse_C">();
	}
	static class UBP_GMComponent_ADM_Event_BarredHouse_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_GMComponent_ADM_Event_BarredHouse_C>();
	}
};
static_assert(alignof(UBP_GMComponent_ADM_Event_BarredHouse_C) == 0x000008, "Wrong alignment on UBP_GMComponent_ADM_Event_BarredHouse_C");
static_assert(sizeof(UBP_GMComponent_ADM_Event_BarredHouse_C) == 0x000228, "Wrong size on UBP_GMComponent_ADM_Event_BarredHouse_C");
static_assert(offsetof(UBP_GMComponent_ADM_Event_BarredHouse_C, UberGraphFrame_BP_GMComponent_ADM_Event_BarredHouse_C) == 0x0001D8, "Member 'UBP_GMComponent_ADM_Event_BarredHouse_C::UberGraphFrame_BP_GMComponent_ADM_Event_BarredHouse_C' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_Event_BarredHouse_C, Vault_Location) == 0x0001E0, "Member 'UBP_GMComponent_ADM_Event_BarredHouse_C::Vault_Location' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_Event_BarredHouse_C, Vault) == 0x0001E8, "Member 'UBP_GMComponent_ADM_Event_BarredHouse_C::Vault' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_Event_BarredHouse_C, Unlock_Duration) == 0x0001F0, "Member 'UBP_GMComponent_ADM_Event_BarredHouse_C::Unlock_Duration' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_Event_BarredHouse_C, Unlock_Timer) == 0x0001F8, "Member 'UBP_GMComponent_ADM_Event_BarredHouse_C::Unlock_Timer' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_Event_BarredHouse_C, Debug_Vault_Locations) == 0x000200, "Member 'UBP_GMComponent_ADM_Event_BarredHouse_C::Debug_Vault_Locations' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_Event_BarredHouse_C, Debug_Vaults) == 0x000210, "Member 'UBP_GMComponent_ADM_Event_BarredHouse_C::Debug_Vaults' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_Event_BarredHouse_C, Vault_Loot_Manager) == 0x000220, "Member 'UBP_GMComponent_ADM_Event_BarredHouse_C::Vault_Loot_Manager' has a wrong offset!");

}

