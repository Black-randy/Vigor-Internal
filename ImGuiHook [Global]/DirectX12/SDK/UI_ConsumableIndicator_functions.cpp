#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_ConsumableIndicator

#include "Basic.hpp"

#include "UI_ConsumableIndicator_classes.hpp"
#include "UI_ConsumableIndicator_parameters.hpp"


namespace SDK
{

// Function UI_ConsumableIndicator.UI_ConsumableIndicator_C.ExecuteUbergraph_UI_ConsumableIndicator
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ConsumableIndicator_C::ExecuteUbergraph_UI_ConsumableIndicator(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ConsumableIndicator_C", "ExecuteUbergraph_UI_ConsumableIndicator");

	Params::UI_ConsumableIndicator_C_ExecuteUbergraph_UI_ConsumableIndicator Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ConsumableIndicator.UI_ConsumableIndicator_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_ConsumableIndicator_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ConsumableIndicator_C", "PreConstruct");

	Params::UI_ConsumableIndicator_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ConsumableIndicator.UI_ConsumableIndicator_C.ToggleIndicator
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Toggle                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UClass*                           ConsumableClass                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsPersistentEffect                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   EffectTotalDuration_0                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ConsumableIndicator_C::ToggleIndicator(bool Toggle, class UClass* ConsumableClass, bool IsPersistentEffect, float EffectTotalDuration_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ConsumableIndicator_C", "ToggleIndicator");

	Params::UI_ConsumableIndicator_C_ToggleIndicator Parms{};

	Parms.Toggle = Toggle;
	Parms.ConsumableClass = ConsumableClass;
	Parms.IsPersistentEffect = IsPersistentEffect;
	Parms.EffectTotalDuration_0 = EffectTotalDuration_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ConsumableIndicator.UI_ConsumableIndicator_C.SetIndicatorProgress
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Progress_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ConsumableIndicator_C::SetIndicatorProgress(float Progress_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ConsumableIndicator_C", "SetIndicatorProgress");

	Params::UI_ConsumableIndicator_C_SetIndicatorProgress Parms{};

	Parms.Progress_0 = Progress_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ConsumableIndicator.UI_ConsumableIndicator_C.HideIndicator
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_ConsumableIndicator_C::HideIndicator()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ConsumableIndicator_C", "HideIndicator");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ConsumableIndicator.UI_ConsumableIndicator_C.UpdateIndicator
// (Private, BlueprintCallable, BlueprintEvent)

void UUI_ConsumableIndicator_C::UpdateIndicator()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ConsumableIndicator_C", "UpdateIndicator");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ConsumableIndicator.UI_ConsumableIndicator_C.SetIndicatorIcon
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           ConsumableClass                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ConsumableIndicator_C::SetIndicatorIcon(class UClass* ConsumableClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ConsumableIndicator_C", "SetIndicatorIcon");

	Params::UI_ConsumableIndicator_C_SetIndicatorIcon Parms{};

	Parms.ConsumableClass = ConsumableClass;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ConsumableIndicator.UI_ConsumableIndicator_C.SetBrush
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           ConsumableClass                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ConsumableIndicator_C::SetBrush(class UClass* ConsumableClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ConsumableIndicator_C", "SetBrush");

	Params::UI_ConsumableIndicator_C_SetBrush Parms{};

	Parms.ConsumableClass = ConsumableClass;

	UObject::ProcessEvent(Func, &Parms);
}

}

