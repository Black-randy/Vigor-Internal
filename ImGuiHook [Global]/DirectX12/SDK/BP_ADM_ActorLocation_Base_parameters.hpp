#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ADM_ActorLocation_Base

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_ADM_ActorLocation_Base.BP_ADM_ActorLocation_Base_C.Is in Use
// 0x0001 (0x0001 - 0x0000)
struct BP_ADM_ActorLocation_Base_C_Is_in_Use final
{
public:
	bool                                          Is_in_Use_0;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ADM_ActorLocation_Base_C_Is_in_Use) == 0x000001, "Wrong alignment on BP_ADM_ActorLocation_Base_C_Is_in_Use");
static_assert(sizeof(BP_ADM_ActorLocation_Base_C_Is_in_Use) == 0x000001, "Wrong size on BP_ADM_ActorLocation_Base_C_Is_in_Use");
static_assert(offsetof(BP_ADM_ActorLocation_Base_C_Is_in_Use, Is_in_Use_0) == 0x000000, "Member 'BP_ADM_ActorLocation_Base_C_Is_in_Use::Is_in_Use_0' has a wrong offset!");

// Function BP_ADM_ActorLocation_Base.BP_ADM_ActorLocation_Base_C.Reserve Location for Use
// 0x0010 (0x0010 - 0x0000)
struct BP_ADM_ActorLocation_Base_C_Reserve_Location_for_Use final
{
public:
	class UBP_GMComponent_ADM_Base_C*             Using_Module_0;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_in_Use_Is_in_Use;                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ADM_ActorLocation_Base_C_Reserve_Location_for_Use) == 0x000008, "Wrong alignment on BP_ADM_ActorLocation_Base_C_Reserve_Location_for_Use");
static_assert(sizeof(BP_ADM_ActorLocation_Base_C_Reserve_Location_for_Use) == 0x000010, "Wrong size on BP_ADM_ActorLocation_Base_C_Reserve_Location_for_Use");
static_assert(offsetof(BP_ADM_ActorLocation_Base_C_Reserve_Location_for_Use, Using_Module_0) == 0x000000, "Member 'BP_ADM_ActorLocation_Base_C_Reserve_Location_for_Use::Using_Module_0' has a wrong offset!");
static_assert(offsetof(BP_ADM_ActorLocation_Base_C_Reserve_Location_for_Use, Success) == 0x000008, "Member 'BP_ADM_ActorLocation_Base_C_Reserve_Location_for_Use::Success' has a wrong offset!");
static_assert(offsetof(BP_ADM_ActorLocation_Base_C_Reserve_Location_for_Use, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_ADM_ActorLocation_Base_C_Reserve_Location_for_Use::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_ActorLocation_Base_C_Reserve_Location_for_Use, CallFunc_Is_in_Use_Is_in_Use) == 0x00000A, "Member 'BP_ADM_ActorLocation_Base_C_Reserve_Location_for_Use::CallFunc_Is_in_Use_Is_in_Use' has a wrong offset!");
static_assert(offsetof(BP_ADM_ActorLocation_Base_C_Reserve_Location_for_Use, CallFunc_IsValid_ReturnValue_1) == 0x00000B, "Member 'BP_ADM_ActorLocation_Base_C_Reserve_Location_for_Use::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ADM_ActorLocation_Base_C_Reserve_Location_for_Use, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00000C, "Member 'BP_ADM_ActorLocation_Base_C_Reserve_Location_for_Use::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_ADM_ActorLocation_Base.BP_ADM_ActorLocation_Base_C.Release Location
// 0x0010 (0x0010 - 0x0000)
struct BP_ADM_ActorLocation_Base_C_Release_Location final
{
public:
	class UBP_GMComponent_ADM_Base_C*             Releasing_Module;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_in_Use_Is_in_Use;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ADM_ActorLocation_Base_C_Release_Location) == 0x000008, "Wrong alignment on BP_ADM_ActorLocation_Base_C_Release_Location");
static_assert(sizeof(BP_ADM_ActorLocation_Base_C_Release_Location) == 0x000010, "Wrong size on BP_ADM_ActorLocation_Base_C_Release_Location");
static_assert(offsetof(BP_ADM_ActorLocation_Base_C_Release_Location, Releasing_Module) == 0x000000, "Member 'BP_ADM_ActorLocation_Base_C_Release_Location::Releasing_Module' has a wrong offset!");
static_assert(offsetof(BP_ADM_ActorLocation_Base_C_Release_Location, Success) == 0x000008, "Member 'BP_ADM_ActorLocation_Base_C_Release_Location::Success' has a wrong offset!");
static_assert(offsetof(BP_ADM_ActorLocation_Base_C_Release_Location, CallFunc_Is_in_Use_Is_in_Use) == 0x000009, "Member 'BP_ADM_ActorLocation_Base_C_Release_Location::CallFunc_Is_in_Use_Is_in_Use' has a wrong offset!");
static_assert(offsetof(BP_ADM_ActorLocation_Base_C_Release_Location, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00000A, "Member 'BP_ADM_ActorLocation_Base_C_Release_Location::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ADM_ActorLocation_Base_C_Release_Location, CallFunc_BooleanAND_ReturnValue) == 0x00000B, "Member 'BP_ADM_ActorLocation_Base_C_Release_Location::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_ADM_ActorLocation_Base.BP_ADM_ActorLocation_Base_C.Get Using Module
// 0x0008 (0x0008 - 0x0000)
struct BP_ADM_ActorLocation_Base_C_Get_Using_Module final
{
public:
	class UBP_GMComponent_ADM_Base_C*             Using_Module_0;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ADM_ActorLocation_Base_C_Get_Using_Module) == 0x000008, "Wrong alignment on BP_ADM_ActorLocation_Base_C_Get_Using_Module");
static_assert(sizeof(BP_ADM_ActorLocation_Base_C_Get_Using_Module) == 0x000008, "Wrong size on BP_ADM_ActorLocation_Base_C_Get_Using_Module");
static_assert(offsetof(BP_ADM_ActorLocation_Base_C_Get_Using_Module, Using_Module_0) == 0x000000, "Member 'BP_ADM_ActorLocation_Base_C_Get_Using_Module::Using_Module_0' has a wrong offset!");

}

