#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_CosmeticsVariantsBox

#include "Basic.hpp"

#include "S_TemporarySellingPointTimeInfo_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "Flame_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function UI_CosmeticsVariantsBox.UI_CosmeticsVariantsBox_C.ExecuteUbergraph_UI_CosmeticsVariantsBox
// 0x0040 (0x0040 - 0x0000)
struct UI_CosmeticsVariantsBox_C_ExecuteUbergraph_UI_CosmeticsVariantsBox final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_NewVisibility;                  // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBoxSlot*                       CallFunc_SlotAsVerticalBoxSlot_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_CosmeticsVariantsBox_C_ExecuteUbergraph_UI_CosmeticsVariantsBox) == 0x000008, "Wrong alignment on UI_CosmeticsVariantsBox_C_ExecuteUbergraph_UI_CosmeticsVariantsBox");
static_assert(sizeof(UI_CosmeticsVariantsBox_C_ExecuteUbergraph_UI_CosmeticsVariantsBox) == 0x000040, "Wrong size on UI_CosmeticsVariantsBox_C_ExecuteUbergraph_UI_CosmeticsVariantsBox");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_ExecuteUbergraph_UI_CosmeticsVariantsBox, EntryPoint) == 0x000000, "Member 'UI_CosmeticsVariantsBox_C_ExecuteUbergraph_UI_CosmeticsVariantsBox::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_ExecuteUbergraph_UI_CosmeticsVariantsBox, Temp_bool_Variable) == 0x000004, "Member 'UI_CosmeticsVariantsBox_C_ExecuteUbergraph_UI_CosmeticsVariantsBox::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_ExecuteUbergraph_UI_CosmeticsVariantsBox, Temp_float_Variable) == 0x000008, "Member 'UI_CosmeticsVariantsBox_C_ExecuteUbergraph_UI_CosmeticsVariantsBox::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_ExecuteUbergraph_UI_CosmeticsVariantsBox, Temp_float_Variable_1) == 0x00000C, "Member 'UI_CosmeticsVariantsBox_C_ExecuteUbergraph_UI_CosmeticsVariantsBox::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_ExecuteUbergraph_UI_CosmeticsVariantsBox, Temp_bool_Variable_1) == 0x000010, "Member 'UI_CosmeticsVariantsBox_C_ExecuteUbergraph_UI_CosmeticsVariantsBox::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_ExecuteUbergraph_UI_CosmeticsVariantsBox, Temp_byte_Variable) == 0x000011, "Member 'UI_CosmeticsVariantsBox_C_ExecuteUbergraph_UI_CosmeticsVariantsBox::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_ExecuteUbergraph_UI_CosmeticsVariantsBox, Temp_byte_Variable_1) == 0x000012, "Member 'UI_CosmeticsVariantsBox_C_ExecuteUbergraph_UI_CosmeticsVariantsBox::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_ExecuteUbergraph_UI_CosmeticsVariantsBox, K2Node_CustomEvent_NewVisibility) == 0x000013, "Member 'UI_CosmeticsVariantsBox_C_ExecuteUbergraph_UI_CosmeticsVariantsBox::K2Node_CustomEvent_NewVisibility' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_ExecuteUbergraph_UI_CosmeticsVariantsBox, CallFunc_SlotAsVerticalBoxSlot_ReturnValue) == 0x000018, "Member 'UI_CosmeticsVariantsBox_C_ExecuteUbergraph_UI_CosmeticsVariantsBox::CallFunc_SlotAsVerticalBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_ExecuteUbergraph_UI_CosmeticsVariantsBox, K2Node_Select_Default) == 0x000020, "Member 'UI_CosmeticsVariantsBox_C_ExecuteUbergraph_UI_CosmeticsVariantsBox::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_ExecuteUbergraph_UI_CosmeticsVariantsBox, K2Node_Select_Default_1) == 0x000024, "Member 'UI_CosmeticsVariantsBox_C_ExecuteUbergraph_UI_CosmeticsVariantsBox::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_ExecuteUbergraph_UI_CosmeticsVariantsBox, K2Node_MakeStruct_Margin) == 0x000028, "Member 'UI_CosmeticsVariantsBox_C_ExecuteUbergraph_UI_CosmeticsVariantsBox::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_ExecuteUbergraph_UI_CosmeticsVariantsBox, CallFunc_PlayAnimation_ReturnValue) == 0x000038, "Member 'UI_CosmeticsVariantsBox_C_ExecuteUbergraph_UI_CosmeticsVariantsBox::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function UI_CosmeticsVariantsBox.UI_CosmeticsVariantsBox_C.SetVariantsBoxVisibility
// 0x0001 (0x0001 - 0x0000)
struct UI_CosmeticsVariantsBox_C_SetVariantsBoxVisibility final
{
public:
	bool                                          NewVisibility;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_CosmeticsVariantsBox_C_SetVariantsBoxVisibility) == 0x000001, "Wrong alignment on UI_CosmeticsVariantsBox_C_SetVariantsBoxVisibility");
static_assert(sizeof(UI_CosmeticsVariantsBox_C_SetVariantsBoxVisibility) == 0x000001, "Wrong size on UI_CosmeticsVariantsBox_C_SetVariantsBoxVisibility");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetVariantsBoxVisibility, NewVisibility) == 0x000000, "Member 'UI_CosmeticsVariantsBox_C_SetVariantsBoxVisibility::NewVisibility' has a wrong offset!");

// Function UI_CosmeticsVariantsBox.UI_CosmeticsVariantsBox_C.Fill Content
// 0x01A8 (0x01A8 - 0x0000)
struct UI_CosmeticsVariantsBox_C_Fill_Content final
{
public:
	class UClass*                                 BaseItem_0;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 OrangeDotPrefix;                                   // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TMap<class UClass*, struct FGameStoreSellingPointDetail> VariantItemsSellingPointInfo;                      // 0x0018(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UUI_CosmeticsShop_C*                    CosmeticsShop;                                     // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UClass*>                         VisibleVariants;                                   // 0x0070(0x0010)(Parm, OutParm)
	bool                                          TempProductAlreadySeen;                            // 0x0080(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Show_Invisible;                                    // 0x0081(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UClass*>                         Visibles;                                          // 0x0088(0x0010)(Edit, BlueprintVisible)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UClass*>                         CallFunc_Map_Keys_Keys;                            // 0x00A0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C2[0x6];                                       // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameStoreSellingPoints*                CallFunc_GetGameStoreSellingPointsManager_ReturnValue; // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SellingPointsSystem_C*              K2Node_DynamicCast_AsBP_Selling_Points_System;     // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameStoreSellingPointsData            CallFunc_GetSellingPointsData_ReturnValue;         // 0x00E8(0x0050)(ConstParm)
	struct FGameStoreSellingPointDetail           CallFunc_Map_Find_Value;                           // 0x0138(0x0020)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_TemporarySellingPointTimeInfo       K2Node_MakeStruct_S_TemporarySellingPointTimeInfo; // 0x0168(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTemporarySellingPointActive_bIsActive;  // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTemporarySellingPointActive_bIsTemporary; // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x017A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x017B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17D[0x3];                                      // 0x017D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_Shop_VariantSlot_C*                 CallFunc_Create_ReturnValue;                       // 0x0190(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_CosmeticsVariantsBox_C_Fill_Content) == 0x000008, "Wrong alignment on UI_CosmeticsVariantsBox_C_Fill_Content");
static_assert(sizeof(UI_CosmeticsVariantsBox_C_Fill_Content) == 0x0001A8, "Wrong size on UI_CosmeticsVariantsBox_C_Fill_Content");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_Fill_Content, BaseItem_0) == 0x000000, "Member 'UI_CosmeticsVariantsBox_C_Fill_Content::BaseItem_0' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_Fill_Content, OrangeDotPrefix) == 0x000008, "Member 'UI_CosmeticsVariantsBox_C_Fill_Content::OrangeDotPrefix' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_Fill_Content, VariantItemsSellingPointInfo) == 0x000018, "Member 'UI_CosmeticsVariantsBox_C_Fill_Content::VariantItemsSellingPointInfo' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_Fill_Content, CosmeticsShop) == 0x000068, "Member 'UI_CosmeticsVariantsBox_C_Fill_Content::CosmeticsShop' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_Fill_Content, VisibleVariants) == 0x000070, "Member 'UI_CosmeticsVariantsBox_C_Fill_Content::VisibleVariants' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_Fill_Content, TempProductAlreadySeen) == 0x000080, "Member 'UI_CosmeticsVariantsBox_C_Fill_Content::TempProductAlreadySeen' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_Fill_Content, Show_Invisible) == 0x000081, "Member 'UI_CosmeticsVariantsBox_C_Fill_Content::Show_Invisible' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_Fill_Content, Visibles) == 0x000088, "Member 'UI_CosmeticsVariantsBox_C_Fill_Content::Visibles' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_Fill_Content, CallFunc_IsValid_ReturnValue) == 0x000098, "Member 'UI_CosmeticsVariantsBox_C_Fill_Content::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_Fill_Content, CallFunc_Map_Keys_Keys) == 0x0000A0, "Member 'UI_CosmeticsVariantsBox_C_Fill_Content::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_Fill_Content, CallFunc_Array_Length_ReturnValue) == 0x0000B0, "Member 'UI_CosmeticsVariantsBox_C_Fill_Content::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_Fill_Content, Temp_int_Array_Index_Variable) == 0x0000B4, "Member 'UI_CosmeticsVariantsBox_C_Fill_Content::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_Fill_Content, CallFunc_Array_Get_Item) == 0x0000B8, "Member 'UI_CosmeticsVariantsBox_C_Fill_Content::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_Fill_Content, CallFunc_Not_PreBool_ReturnValue) == 0x0000C0, "Member 'UI_CosmeticsVariantsBox_C_Fill_Content::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_Fill_Content, CallFunc_IsValidClass_ReturnValue) == 0x0000C1, "Member 'UI_CosmeticsVariantsBox_C_Fill_Content::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_Fill_Content, CallFunc_GetGameStoreSellingPointsManager_ReturnValue) == 0x0000C8, "Member 'UI_CosmeticsVariantsBox_C_Fill_Content::CallFunc_GetGameStoreSellingPointsManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_Fill_Content, CallFunc_Array_Add_ReturnValue) == 0x0000D0, "Member 'UI_CosmeticsVariantsBox_C_Fill_Content::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_Fill_Content, K2Node_DynamicCast_AsBP_Selling_Points_System) == 0x0000D8, "Member 'UI_CosmeticsVariantsBox_C_Fill_Content::K2Node_DynamicCast_AsBP_Selling_Points_System' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_Fill_Content, K2Node_DynamicCast_bSuccess) == 0x0000E0, "Member 'UI_CosmeticsVariantsBox_C_Fill_Content::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_Fill_Content, CallFunc_GetSellingPointsData_ReturnValue) == 0x0000E8, "Member 'UI_CosmeticsVariantsBox_C_Fill_Content::CallFunc_GetSellingPointsData_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_Fill_Content, CallFunc_Map_Find_Value) == 0x000138, "Member 'UI_CosmeticsVariantsBox_C_Fill_Content::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_Fill_Content, CallFunc_Map_Find_ReturnValue) == 0x000158, "Member 'UI_CosmeticsVariantsBox_C_Fill_Content::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_Fill_Content, CallFunc_Array_Add_ReturnValue_1) == 0x00015C, "Member 'UI_CosmeticsVariantsBox_C_Fill_Content::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_Fill_Content, Temp_int_Loop_Counter_Variable) == 0x000160, "Member 'UI_CosmeticsVariantsBox_C_Fill_Content::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_Fill_Content, K2Node_MakeStruct_S_TemporarySellingPointTimeInfo) == 0x000168, "Member 'UI_CosmeticsVariantsBox_C_Fill_Content::K2Node_MakeStruct_S_TemporarySellingPointTimeInfo' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_Fill_Content, CallFunc_IsTemporarySellingPointActive_bIsActive) == 0x000178, "Member 'UI_CosmeticsVariantsBox_C_Fill_Content::CallFunc_IsTemporarySellingPointActive_bIsActive' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_Fill_Content, CallFunc_IsTemporarySellingPointActive_bIsTemporary) == 0x000179, "Member 'UI_CosmeticsVariantsBox_C_Fill_Content::CallFunc_IsTemporarySellingPointActive_bIsTemporary' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_Fill_Content, CallFunc_Less_IntInt_ReturnValue) == 0x00017A, "Member 'UI_CosmeticsVariantsBox_C_Fill_Content::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_Fill_Content, CallFunc_BooleanAND_ReturnValue) == 0x00017B, "Member 'UI_CosmeticsVariantsBox_C_Fill_Content::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_Fill_Content, CallFunc_BooleanAND_ReturnValue_1) == 0x00017C, "Member 'UI_CosmeticsVariantsBox_C_Fill_Content::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_Fill_Content, CallFunc_Add_IntInt_ReturnValue) == 0x000180, "Member 'UI_CosmeticsVariantsBox_C_Fill_Content::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_Fill_Content, CallFunc_GetOwningPlayer_ReturnValue) == 0x000188, "Member 'UI_CosmeticsVariantsBox_C_Fill_Content::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_Fill_Content, CallFunc_Create_ReturnValue) == 0x000190, "Member 'UI_CosmeticsVariantsBox_C_Fill_Content::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_Fill_Content, CallFunc_BooleanOR_ReturnValue) == 0x000198, "Member 'UI_CosmeticsVariantsBox_C_Fill_Content::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_Fill_Content, CallFunc_AddChild_ReturnValue) == 0x0001A0, "Member 'UI_CosmeticsVariantsBox_C_Fill_Content::CallFunc_AddChild_ReturnValue' has a wrong offset!");

// Function UI_CosmeticsVariantsBox.UI_CosmeticsVariantsBox_C.SetFocusByIndex
// 0x0520 (0x0520 - 0x0000)
struct UI_CosmeticsVariantsBox_C_SetFocusByIndex final
{
public:
	int32                                         SlotIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCraftingPlan;                                    // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ESellingPointType                             SellingPointType;                                  // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UpdateFocus;                                       // 0x0006(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 OutFocusedVariant;                                 // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 OutFocusedBaseItem;                                // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OutSelectedIndex;                                  // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlanRequiredLevel;                                 // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ClampedSlotIndex;                                  // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 FocusedBaseItem;                                   // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 FocusedVariant;                                    // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESellingPointType                             Temp_byte_Variable;                                // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_66[0x2];                                       // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, class UClass*>            CallFunc_Get_Booster_Sku_Class_Info_SKU_To_Currency; // 0x0078(0x0050)()
	TMap<class UClass*, class FString>            CallFunc_Get_Booster_Sku_Class_Info_Currency_To_SKU; // 0x00C8(0x0050)()
	TMap<class UClass*, class FString>            CallFunc_Get_Booster_Sku_Class_Info_Currency_To_Gamemode; // 0x0118(0x0050)()
	class UClass*                                 K2Node_ClassDynamicCast_AsCurrency;                // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 CallFunc_GetFlameController_ReturnValue;           // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Map_Find_Value;                           // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AStash*                                 CallFunc_GetStash_ReturnValue;                     // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBoosterTicketDetails_Index;            // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A4[0x4];                                      // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBoosterDetails                        CallFunc_GetBoosterTicketDetails_BoosterDetails;   // 0x01A8(0x0020)()
	bool                                          CallFunc_GetBoosterTicketDetails_ReturnValue;      // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1CA[0x2];                                      // 0x01CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x01D0(0x0018)()
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESellingPointType                             Temp_byte_Variable_1;                              // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F5[0x3];                                      // 0x01F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FC[0x4];                                      // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Map_Find_Value_1;                         // 0x0200(0x0018)()
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21A[0x6];                                      // 0x021A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0220(0x0040)(HasGetValueTypeHash)
	ESellingPointType                             Temp_byte_Variable_2;                              // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0261(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_262[0x6];                                      // 0x0262(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 CallFunc_GetFlameController_ReturnValue_1;         // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AStash*                                 CallFunc_GetStash_ReturnValue_1;                   // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCraftingTableLevel_ReturnValue;        // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27C[0x4];                                      // 0x027C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsConsumable_Plan;         // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_1;                // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_289[0x7];                                      // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0290(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_GetNeededLevelForConsumableFromPlan_ReturnValue; // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D4[0x4];                                      // 0x02D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x02D8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x02E8(0x0018)()
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_301[0x7];                                      // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0308(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0348(0x0010)(ReferenceParm)
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x0358(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0368(0x0018)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0380(0x0028)()
	class UClass*                                 K2Node_ClassDynamicCast_AsWeapon_Plan;             // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_2;                // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B1[0x3];                                      // 0x03B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNeededLevelForWeaponFromPlan_ReturnValue; // 0x03B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_Select_Default_2;                           // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C1[0x7];                                      // 0x03C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AItem*                                  CallFunc_GetClassDefaultObject_ReturnValue;        // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetItemName_ReturnValue;                  // 0x03D0(0x0018)()
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x03E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x03EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3EB[0x5];                                      // 0x03EB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetClassDisplayName_ReturnValue;          // 0x03F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0400(0x0018)()
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESellingPointType                             Temp_byte_Variable_8;                              // 0x0419(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41A[0x6];                                      // 0x041A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable;                               // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x0428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0429(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x042A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42B[0x1];                                      // 0x042B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Max_ReturnValue;                          // 0x042C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_1;                             // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_2;                             // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_Select_Default_4;                           // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AItem*                                  CallFunc_GetClassDefaultObject_ReturnValue_1;      // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_451[0x7];                                      // 0x0451(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetCategoryName_ReturnValue;              // 0x0458(0x0018)()
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_471[0x7];                                      // 0x0471(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AItem*                                  CallFunc_GetClassDefaultObject_ReturnValue_2;      // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FItemRarity                            CallFunc_GetItemRarity_ReturnValue;                // 0x0480(0x0028)(ConstParm)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x04A8(0x0028)()
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x04D0(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x04E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E4[0x4];                                      // 0x04E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x04E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x04F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F1[0x7];                                      // 0x04F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_Shop_VariantSlot_C*                 K2Node_DynamicCast_AsUI_Shop_Variant_Slot;         // 0x04F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0500(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0501(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_502[0x2];                                      // 0x0502(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0504(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0508(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_509[0x3];                                      // 0x0509(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x050C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0510(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_511[0x3];                                      // 0x0511(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_5;                           // 0x0514(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_6;                           // 0x0518(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_CosmeticsVariantsBox_C_SetFocusByIndex) == 0x000008, "Wrong alignment on UI_CosmeticsVariantsBox_C_SetFocusByIndex");
static_assert(sizeof(UI_CosmeticsVariantsBox_C_SetFocusByIndex) == 0x000520, "Wrong size on UI_CosmeticsVariantsBox_C_SetFocusByIndex");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, SlotIndex) == 0x000000, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::SlotIndex' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, IsCraftingPlan) == 0x000004, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::IsCraftingPlan' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, SellingPointType) == 0x000005, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::SellingPointType' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, UpdateFocus) == 0x000006, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::UpdateFocus' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, OutFocusedVariant) == 0x000008, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::OutFocusedVariant' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, OutFocusedBaseItem) == 0x000010, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::OutFocusedBaseItem' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, OutSelectedIndex) == 0x000018, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::OutSelectedIndex' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, PlanRequiredLevel) == 0x00001C, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::PlanRequiredLevel' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, ClampedSlotIndex) == 0x000020, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::ClampedSlotIndex' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, FocusedBaseItem) == 0x000028, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::FocusedBaseItem' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, FocusedVariant) == 0x000030, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::FocusedVariant' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, Temp_struct_Variable) == 0x000038, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, Temp_struct_Variable_1) == 0x000048, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, Temp_bool_Variable) == 0x000058, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, Temp_bool_Variable_1) == 0x000059, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, Temp_int_Variable) == 0x00005C, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, Temp_int_Array_Index_Variable) == 0x000060, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, Temp_byte_Variable) == 0x000064, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, Temp_bool_Variable_2) == 0x000065, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, Temp_int_Variable_1) == 0x000068, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, Temp_int_Variable_2) == 0x00006C, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, Temp_int_Variable_3) == 0x000070, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, CallFunc_Get_Booster_Sku_Class_Info_SKU_To_Currency) == 0x000078, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::CallFunc_Get_Booster_Sku_Class_Info_SKU_To_Currency' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, CallFunc_Get_Booster_Sku_Class_Info_Currency_To_SKU) == 0x0000C8, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::CallFunc_Get_Booster_Sku_Class_Info_Currency_To_SKU' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, CallFunc_Get_Booster_Sku_Class_Info_Currency_To_Gamemode) == 0x000118, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::CallFunc_Get_Booster_Sku_Class_Info_Currency_To_Gamemode' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, K2Node_ClassDynamicCast_AsCurrency) == 0x000168, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::K2Node_ClassDynamicCast_AsCurrency' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, K2Node_ClassDynamicCast_bSuccess) == 0x000170, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, CallFunc_GetFlameController_ReturnValue) == 0x000178, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::CallFunc_GetFlameController_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, CallFunc_Map_Find_Value) == 0x000180, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, CallFunc_Map_Find_ReturnValue) == 0x000190, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, CallFunc_GetStash_ReturnValue) == 0x000198, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::CallFunc_GetStash_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, CallFunc_GetBoosterTicketDetails_Index) == 0x0001A0, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::CallFunc_GetBoosterTicketDetails_Index' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, CallFunc_GetBoosterTicketDetails_BoosterDetails) == 0x0001A8, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::CallFunc_GetBoosterTicketDetails_BoosterDetails' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, CallFunc_GetBoosterTicketDetails_ReturnValue) == 0x0001C8, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::CallFunc_GetBoosterTicketDetails_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, CallFunc_IsValid_ReturnValue) == 0x0001C9, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, Temp_int_Loop_Counter_Variable) == 0x0001CC, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, CallFunc_Conv_IntToText_ReturnValue) == 0x0001D0, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, CallFunc_Add_IntInt_ReturnValue) == 0x0001E8, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, Temp_int_Variable_4) == 0x0001EC, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, Temp_int_Variable_5) == 0x0001F0, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, Temp_byte_Variable_1) == 0x0001F4, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, K2Node_Select_Default) == 0x0001F8, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, CallFunc_Map_Find_Value_1) == 0x000200, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, CallFunc_Map_Find_ReturnValue_1) == 0x000218, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, K2Node_SwitchEnum_CmpSuccess) == 0x000219, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, K2Node_MakeStruct_FormatArgumentData) == 0x000220, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, Temp_byte_Variable_2) == 0x000260, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, Temp_byte_Variable_3) == 0x000261, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, CallFunc_GetFlameController_ReturnValue_1) == 0x000268, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::CallFunc_GetFlameController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, CallFunc_GetStash_ReturnValue_1) == 0x000270, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::CallFunc_GetStash_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, CallFunc_GetCraftingTableLevel_ReturnValue) == 0x000278, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::CallFunc_GetCraftingTableLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, K2Node_ClassDynamicCast_AsConsumable_Plan) == 0x000280, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::K2Node_ClassDynamicCast_AsConsumable_Plan' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, K2Node_ClassDynamicCast_bSuccess_1) == 0x000288, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::K2Node_ClassDynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, K2Node_MakeStruct_FormatArgumentData_1) == 0x000290, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, CallFunc_GetNeededLevelForConsumableFromPlan_ReturnValue) == 0x0002D0, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::CallFunc_GetNeededLevelForConsumableFromPlan_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, K2Node_MakeArray_Array) == 0x0002D8, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, CallFunc_Format_ReturnValue) == 0x0002E8, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000300, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, K2Node_MakeStruct_FormatArgumentData_2) == 0x000308, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, K2Node_MakeArray_Array_1) == 0x000348, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, K2Node_Select_Default_1) == 0x000358, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, CallFunc_Format_ReturnValue_1) == 0x000368, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, K2Node_MakeStruct_SlateColor) == 0x000380, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, K2Node_ClassDynamicCast_AsWeapon_Plan) == 0x0003A8, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::K2Node_ClassDynamicCast_AsWeapon_Plan' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, K2Node_ClassDynamicCast_bSuccess_2) == 0x0003B0, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::K2Node_ClassDynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, CallFunc_GetNeededLevelForWeaponFromPlan_ReturnValue) == 0x0003B4, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::CallFunc_GetNeededLevelForWeaponFromPlan_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, K2Node_Select_Default_2) == 0x0003B8, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, Temp_byte_Variable_4) == 0x0003C0, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, CallFunc_GetClassDefaultObject_ReturnValue) == 0x0003C8, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::CallFunc_GetClassDefaultObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, CallFunc_GetItemName_ReturnValue) == 0x0003D0, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::CallFunc_GetItemName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, Temp_byte_Variable_5) == 0x0003E8, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, Temp_byte_Variable_6) == 0x0003E9, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x0003EA, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, CallFunc_GetClassDisplayName_ReturnValue) == 0x0003F0, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::CallFunc_GetClassDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, CallFunc_Conv_StringToText_ReturnValue) == 0x000400, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, Temp_byte_Variable_7) == 0x000418, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, Temp_byte_Variable_8) == 0x000419, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, Temp_class_Variable) == 0x000420, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, K2Node_Select_Default_3) == 0x000428, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000429, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, CallFunc_Less_IntInt_ReturnValue) == 0x00042A, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, CallFunc_Max_ReturnValue) == 0x00042C, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, Temp_class_Variable_1) == 0x000430, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::Temp_class_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, Temp_class_Variable_2) == 0x000438, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::Temp_class_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, K2Node_Select_Default_4) == 0x000440, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, CallFunc_GetClassDefaultObject_ReturnValue_1) == 0x000448, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::CallFunc_GetClassDefaultObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000450, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, CallFunc_GetCategoryName_ReturnValue) == 0x000458, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::CallFunc_GetCategoryName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, CallFunc_IsValidClass_ReturnValue) == 0x000470, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, CallFunc_GetClassDefaultObject_ReturnValue_2) == 0x000478, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::CallFunc_GetClassDefaultObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, CallFunc_GetItemRarity_ReturnValue) == 0x000480, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::CallFunc_GetItemRarity_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, K2Node_MakeStruct_SlateColor_1) == 0x0004A8, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, CallFunc_GetAllChildren_ReturnValue) == 0x0004D0, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, CallFunc_Array_Length_ReturnValue) == 0x0004E0, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, CallFunc_Array_Get_Item) == 0x0004E8, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, CallFunc_Greater_IntInt_ReturnValue) == 0x0004F0, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, K2Node_DynamicCast_AsUI_Shop_Variant_Slot) == 0x0004F8, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::K2Node_DynamicCast_AsUI_Shop_Variant_Slot' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, K2Node_DynamicCast_bSuccess) == 0x000500, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, CallFunc_Not_PreBool_ReturnValue) == 0x000501, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, CallFunc_Array_Length_ReturnValue_1) == 0x000504, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, CallFunc_Less_IntInt_ReturnValue_1) == 0x000508, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, CallFunc_Array_LastIndex_ReturnValue) == 0x00050C, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000510, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, K2Node_Select_Default_5) == 0x000514, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetFocusByIndex, K2Node_Select_Default_6) == 0x000518, "Member 'UI_CosmeticsVariantsBox_C_SetFocusByIndex::K2Node_Select_Default_6' has a wrong offset!");

// Function UI_CosmeticsVariantsBox.UI_CosmeticsVariantsBox_C.UpdateTics
// 0x0068 (0x0068 - 0x0000)
struct UI_CosmeticsVariantsBox_C_UpdateTics final
{
public:
	int32                                         TickedIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_Shop_VariantSlot_C*                 K2Node_DynamicCast_AsUI_Shop_Variant_Slot;         // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_VariantSlotVisual_C*                K2Node_DynamicCast_AsUI_Variant_Slot_Visual;       // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_CosmeticsVariantsBox_C_UpdateTics) == 0x000008, "Wrong alignment on UI_CosmeticsVariantsBox_C_UpdateTics");
static_assert(sizeof(UI_CosmeticsVariantsBox_C_UpdateTics) == 0x000068, "Wrong size on UI_CosmeticsVariantsBox_C_UpdateTics");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_UpdateTics, TickedIndex) == 0x000000, "Member 'UI_CosmeticsVariantsBox_C_UpdateTics::TickedIndex' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_UpdateTics, Temp_byte_Variable) == 0x000004, "Member 'UI_CosmeticsVariantsBox_C_UpdateTics::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_UpdateTics, Temp_byte_Variable_1) == 0x000005, "Member 'UI_CosmeticsVariantsBox_C_UpdateTics::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_UpdateTics, Temp_int_Array_Index_Variable) == 0x000008, "Member 'UI_CosmeticsVariantsBox_C_UpdateTics::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_UpdateTics, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'UI_CosmeticsVariantsBox_C_UpdateTics::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_UpdateTics, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000010, "Member 'UI_CosmeticsVariantsBox_C_UpdateTics::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_UpdateTics, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'UI_CosmeticsVariantsBox_C_UpdateTics::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_UpdateTics, Temp_bool_Variable) == 0x000018, "Member 'UI_CosmeticsVariantsBox_C_UpdateTics::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_UpdateTics, CallFunc_GetAllChildren_ReturnValue) == 0x000020, "Member 'UI_CosmeticsVariantsBox_C_UpdateTics::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_UpdateTics, K2Node_Select_Default) == 0x000030, "Member 'UI_CosmeticsVariantsBox_C_UpdateTics::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_UpdateTics, CallFunc_Array_Get_Item) == 0x000038, "Member 'UI_CosmeticsVariantsBox_C_UpdateTics::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_UpdateTics, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'UI_CosmeticsVariantsBox_C_UpdateTics::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_UpdateTics, K2Node_DynamicCast_AsUI_Shop_Variant_Slot) == 0x000048, "Member 'UI_CosmeticsVariantsBox_C_UpdateTics::K2Node_DynamicCast_AsUI_Shop_Variant_Slot' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_UpdateTics, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'UI_CosmeticsVariantsBox_C_UpdateTics::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_UpdateTics, CallFunc_Less_IntInt_ReturnValue) == 0x000051, "Member 'UI_CosmeticsVariantsBox_C_UpdateTics::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_UpdateTics, K2Node_DynamicCast_AsUI_Variant_Slot_Visual) == 0x000058, "Member 'UI_CosmeticsVariantsBox_C_UpdateTics::K2Node_DynamicCast_AsUI_Variant_Slot_Visual' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_UpdateTics, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'UI_CosmeticsVariantsBox_C_UpdateTics::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function UI_CosmeticsVariantsBox.UI_CosmeticsVariantsBox_C.GetIndexOfVariant
// 0x0058 (0x0058 - 0x0000)
struct UI_CosmeticsVariantsBox_C_GetIndexOfVariant final
{
public:
	class UClass*                                 Variant;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFound;                                            // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TempIndex;                                         // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0028(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_Shop_VariantSlot_C*                 K2Node_DynamicCast_AsUI_Shop_Variant_Slot;         // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_CosmeticsVariantsBox_C_GetIndexOfVariant) == 0x000008, "Wrong alignment on UI_CosmeticsVariantsBox_C_GetIndexOfVariant");
static_assert(sizeof(UI_CosmeticsVariantsBox_C_GetIndexOfVariant) == 0x000058, "Wrong size on UI_CosmeticsVariantsBox_C_GetIndexOfVariant");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_GetIndexOfVariant, Variant) == 0x000000, "Member 'UI_CosmeticsVariantsBox_C_GetIndexOfVariant::Variant' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_GetIndexOfVariant, Index_0) == 0x000008, "Member 'UI_CosmeticsVariantsBox_C_GetIndexOfVariant::Index_0' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_GetIndexOfVariant, bFound) == 0x00000C, "Member 'UI_CosmeticsVariantsBox_C_GetIndexOfVariant::bFound' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_GetIndexOfVariant, TempIndex) == 0x000010, "Member 'UI_CosmeticsVariantsBox_C_GetIndexOfVariant::TempIndex' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_GetIndexOfVariant, Temp_bool_True_if_break_was_hit_Variable) == 0x000014, "Member 'UI_CosmeticsVariantsBox_C_GetIndexOfVariant::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_GetIndexOfVariant, Temp_int_Array_Index_Variable) == 0x000018, "Member 'UI_CosmeticsVariantsBox_C_GetIndexOfVariant::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_GetIndexOfVariant, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'UI_CosmeticsVariantsBox_C_GetIndexOfVariant::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_GetIndexOfVariant, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'UI_CosmeticsVariantsBox_C_GetIndexOfVariant::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_GetIndexOfVariant, CallFunc_GetAllChildren_ReturnValue) == 0x000028, "Member 'UI_CosmeticsVariantsBox_C_GetIndexOfVariant::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_GetIndexOfVariant, CallFunc_Array_Get_Item) == 0x000038, "Member 'UI_CosmeticsVariantsBox_C_GetIndexOfVariant::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_GetIndexOfVariant, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'UI_CosmeticsVariantsBox_C_GetIndexOfVariant::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_GetIndexOfVariant, K2Node_DynamicCast_AsUI_Shop_Variant_Slot) == 0x000048, "Member 'UI_CosmeticsVariantsBox_C_GetIndexOfVariant::K2Node_DynamicCast_AsUI_Shop_Variant_Slot' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_GetIndexOfVariant, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'UI_CosmeticsVariantsBox_C_GetIndexOfVariant::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_GetIndexOfVariant, CallFunc_Less_IntInt_ReturnValue) == 0x000051, "Member 'UI_CosmeticsVariantsBox_C_GetIndexOfVariant::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_GetIndexOfVariant, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000052, "Member 'UI_CosmeticsVariantsBox_C_GetIndexOfVariant::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");

// Function UI_CosmeticsVariantsBox.UI_CosmeticsVariantsBox_C.SetCosmeticsRoot
// 0x0008 (0x0008 - 0x0000)
struct UI_CosmeticsVariantsBox_C_SetCosmeticsRoot final
{
public:
	class UUI_CosmeticsShop_C*                    CosmeticsRoot;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_CosmeticsVariantsBox_C_SetCosmeticsRoot) == 0x000008, "Wrong alignment on UI_CosmeticsVariantsBox_C_SetCosmeticsRoot");
static_assert(sizeof(UI_CosmeticsVariantsBox_C_SetCosmeticsRoot) == 0x000008, "Wrong size on UI_CosmeticsVariantsBox_C_SetCosmeticsRoot");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetCosmeticsRoot, CosmeticsRoot) == 0x000000, "Member 'UI_CosmeticsVariantsBox_C_SetCosmeticsRoot::CosmeticsRoot' has a wrong offset!");

// Function UI_CosmeticsVariantsBox.UI_CosmeticsVariantsBox_C.SetCurrentSkinVariant
// 0x0010 (0x0010 - 0x0000)
struct UI_CosmeticsVariantsBox_C_SetCurrentSkinVariant final
{
public:
	class UUI_Shop_VariantSlot_C*                 TargetVariant;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlatformGroupDesktop_ReturnValue;       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_CosmeticsVariantsBox_C_SetCurrentSkinVariant) == 0x000008, "Wrong alignment on UI_CosmeticsVariantsBox_C_SetCurrentSkinVariant");
static_assert(sizeof(UI_CosmeticsVariantsBox_C_SetCurrentSkinVariant) == 0x000010, "Wrong size on UI_CosmeticsVariantsBox_C_SetCurrentSkinVariant");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetCurrentSkinVariant, TargetVariant) == 0x000000, "Member 'UI_CosmeticsVariantsBox_C_SetCurrentSkinVariant::TargetVariant' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetCurrentSkinVariant, CallFunc_IsPlatformGroupDesktop_ReturnValue) == 0x000008, "Member 'UI_CosmeticsVariantsBox_C_SetCurrentSkinVariant::CallFunc_IsPlatformGroupDesktop_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetCurrentSkinVariant, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000009, "Member 'UI_CosmeticsVariantsBox_C_SetCurrentSkinVariant::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CosmeticsVariantsBox_C_SetCurrentSkinVariant, CallFunc_IsValid_ReturnValue) == 0x00000A, "Member 'UI_CosmeticsVariantsBox_C_SetCurrentSkinVariant::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

