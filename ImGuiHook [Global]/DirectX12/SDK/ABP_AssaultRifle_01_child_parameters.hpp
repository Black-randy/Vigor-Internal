#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_AssaultRifle_01_child

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function ABP_AssaultRifle_01_child.ABP_AssaultRifle_01_child_C.ExecuteUbergraph_ABP_AssaultRifle_01_child
// 0x0070 (0x0070 - 0x0000)
struct ABP_AssaultRifle_01_child_C_ExecuteUbergraph_ABP_AssaultRifle_01_child final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckSkin_IsTheSame;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x002C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0040(0x0008)(NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponent_ReturnValue;           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AssaultRifle_01_C*                  K2Node_DynamicCast_AsBP_Assault_Rifle_01;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ABP_AssaultRifle_01_child_C_ExecuteUbergraph_ABP_AssaultRifle_01_child) == 0x000008, "Wrong alignment on ABP_AssaultRifle_01_child_C_ExecuteUbergraph_ABP_AssaultRifle_01_child");
static_assert(sizeof(ABP_AssaultRifle_01_child_C_ExecuteUbergraph_ABP_AssaultRifle_01_child) == 0x000070, "Wrong size on ABP_AssaultRifle_01_child_C_ExecuteUbergraph_ABP_AssaultRifle_01_child");
static_assert(offsetof(ABP_AssaultRifle_01_child_C_ExecuteUbergraph_ABP_AssaultRifle_01_child, EntryPoint) == 0x000000, "Member 'ABP_AssaultRifle_01_child_C_ExecuteUbergraph_ABP_AssaultRifle_01_child::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_AssaultRifle_01_child_C_ExecuteUbergraph_ABP_AssaultRifle_01_child, K2Node_Event_DeltaTimeX) == 0x000004, "Member 'ABP_AssaultRifle_01_child_C_ExecuteUbergraph_ABP_AssaultRifle_01_child::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(ABP_AssaultRifle_01_child_C_ExecuteUbergraph_ABP_AssaultRifle_01_child, CallFunc_CheckSkin_IsTheSame) == 0x000008, "Member 'ABP_AssaultRifle_01_child_C_ExecuteUbergraph_ABP_AssaultRifle_01_child::CallFunc_CheckSkin_IsTheSame' has a wrong offset!");
static_assert(offsetof(ABP_AssaultRifle_01_child_C_ExecuteUbergraph_ABP_AssaultRifle_01_child, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'ABP_AssaultRifle_01_child_C_ExecuteUbergraph_ABP_AssaultRifle_01_child::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_AssaultRifle_01_child_C_ExecuteUbergraph_ABP_AssaultRifle_01_child, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'ABP_AssaultRifle_01_child_C_ExecuteUbergraph_ABP_AssaultRifle_01_child::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ABP_AssaultRifle_01_child_C_ExecuteUbergraph_ABP_AssaultRifle_01_child, CallFunc_IsValid_ReturnValue_1) == 0x00001C, "Member 'ABP_AssaultRifle_01_child_C_ExecuteUbergraph_ABP_AssaultRifle_01_child::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_AssaultRifle_01_child_C_ExecuteUbergraph_ABP_AssaultRifle_01_child, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000020, "Member 'ABP_AssaultRifle_01_child_C_ExecuteUbergraph_ABP_AssaultRifle_01_child::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_AssaultRifle_01_child_C_ExecuteUbergraph_ABP_AssaultRifle_01_child, Temp_bool_IsClosed_Variable) == 0x000028, "Member 'ABP_AssaultRifle_01_child_C_ExecuteUbergraph_ABP_AssaultRifle_01_child::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(ABP_AssaultRifle_01_child_C_ExecuteUbergraph_ABP_AssaultRifle_01_child, K2Node_CreateDelegate_OutputDelegate_1) == 0x00002C, "Member 'ABP_AssaultRifle_01_child_C_ExecuteUbergraph_ABP_AssaultRifle_01_child::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(ABP_AssaultRifle_01_child_C_ExecuteUbergraph_ABP_AssaultRifle_01_child, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000040, "Member 'ABP_AssaultRifle_01_child_C_ExecuteUbergraph_ABP_AssaultRifle_01_child::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_AssaultRifle_01_child_C_ExecuteUbergraph_ABP_AssaultRifle_01_child, CallFunc_GetOwningComponent_ReturnValue) == 0x000048, "Member 'ABP_AssaultRifle_01_child_C_ExecuteUbergraph_ABP_AssaultRifle_01_child::CallFunc_GetOwningComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_AssaultRifle_01_child_C_ExecuteUbergraph_ABP_AssaultRifle_01_child, CallFunc_GetOwner_ReturnValue) == 0x000050, "Member 'ABP_AssaultRifle_01_child_C_ExecuteUbergraph_ABP_AssaultRifle_01_child::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_AssaultRifle_01_child_C_ExecuteUbergraph_ABP_AssaultRifle_01_child, Temp_bool_Has_Been_Initd_Variable) == 0x000058, "Member 'ABP_AssaultRifle_01_child_C_ExecuteUbergraph_ABP_AssaultRifle_01_child::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(ABP_AssaultRifle_01_child_C_ExecuteUbergraph_ABP_AssaultRifle_01_child, K2Node_DynamicCast_AsBP_Assault_Rifle_01) == 0x000060, "Member 'ABP_AssaultRifle_01_child_C_ExecuteUbergraph_ABP_AssaultRifle_01_child::K2Node_DynamicCast_AsBP_Assault_Rifle_01' has a wrong offset!");
static_assert(offsetof(ABP_AssaultRifle_01_child_C_ExecuteUbergraph_ABP_AssaultRifle_01_child, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'ABP_AssaultRifle_01_child_C_ExecuteUbergraph_ABP_AssaultRifle_01_child::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function ABP_AssaultRifle_01_child.ABP_AssaultRifle_01_child_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct ABP_AssaultRifle_01_child_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_AssaultRifle_01_child_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on ABP_AssaultRifle_01_child_C_BlueprintUpdateAnimation");
static_assert(sizeof(ABP_AssaultRifle_01_child_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on ABP_AssaultRifle_01_child_C_BlueprintUpdateAnimation");
static_assert(offsetof(ABP_AssaultRifle_01_child_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'ABP_AssaultRifle_01_child_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

}

