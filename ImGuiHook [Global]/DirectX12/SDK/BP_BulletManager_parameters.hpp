#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BulletManager

#include "Basic.hpp"

#include "PhysicsCore_structs.hpp"
#include "FlameUI_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Flame_structs.hpp"


namespace SDK::Params
{

// Function BP_BulletManager.BP_BulletManager_C.ExecuteUbergraph_BP_BulletManager
// 0x0588 (0x0588 - 0x0000)
struct BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResultSimplified                   K2Node_CustomEvent_HitResultOptimised_2;           // 0x0004(0x003C)(ConstParm, NoDestructor, ContainsInstancedReference)
	struct FAmmoTypeConfiguration                 K2Node_CustomEvent_BulletTypeConfig_2;             // 0x0040(0x0148)(ConstParm)
	const class AHumanCharacter*                  K2Node_CustomEvent_OwnerCharacter_2;               // 0x0188(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsPenetrating_2;               // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bIsDeformed_2;                  // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_192[0x2];                                      // 0x0192(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_RelativeHitPosition;            // 0x0194(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        K2Node_Event_WhizzSound;                           // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Player_Has_Armor_Equiped_Has_Armor_Equiped; // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AA[0x2];                                      // 0x01AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResultSimplified                   K2Node_CustomEvent_HitResultOptimised_1;           // 0x01AC(0x003C)(ConstParm, NoDestructor, ContainsInstancedReference)
	struct FAmmoTypeConfiguration                 K2Node_CustomEvent_BulletTypeConfig_1;             // 0x01E8(0x0148)(ConstParm)
	const class AHumanCharacter*                  K2Node_CustomEvent_OwnerCharacter_1;               // 0x0330(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsPenetrating_1;               // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bIsDeformed_1;                  // 0x0339(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33A[0x6];                                      // 0x033A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Player_Has_Armor_Equiped_Has_Armor_Equiped_1; // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0349(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x034A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x034B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void(struct FHitResultSimplified& HitResultOptimised, struct FAmmoTypeConfiguration& BulletTypeConfig, class AHumanCharacter* OwnerCharacter, bool bIsPenetrating, bool bIsDeformed)> K2Node_CreateDelegate_OutputDelegate;              // 0x034C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(struct FHitResultSimplified& HitResultOptimised, struct FAmmoTypeConfiguration& BulletTypeConfig, class AHumanCharacter* OwnerCharacter, bool bIsPenetrating, bool bIsDeformed)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x035C(0x0010)(ZeroConstructor, NoDestructor)
	struct FHitResultSimplified                   K2Node_CustomEvent_HitResultOptimised;             // 0x036C(0x003C)(ConstParm, NoDestructor, ContainsInstancedReference)
	struct FAmmoTypeConfiguration                 K2Node_CustomEvent_BulletTypeConfig;               // 0x03A8(0x0148)(ConstParm)
	const class AHumanCharacter*                  K2Node_CustomEvent_OwnerCharacter;                 // 0x04F0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsPenetrating;                 // 0x04F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bIsDeformed;                    // 0x04F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4FA[0x2];                                      // 0x04FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FHitResultSimplified& HitResultOptimised, struct FAmmoTypeConfiguration& BulletTypeConfig, class AHumanCharacter* OwnerCharacter, bool bIsPenetrating, bool bIsDeformed, const struct FVector& RelativeHitPosition)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x04FC(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Player_Has_Armor_Equiped_Has_Armor_Equiped_2; // 0x050C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x050D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50E[0x2];                                      // 0x050E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Vector_Zero_ReturnValue;                  // 0x0510(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_Zero_ReturnValue_1;                // 0x051C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EProjectileType                               K2Node_Event_ProjectileType;                       // 0x0528(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_529[0x3];                                      // 0x0529(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_ProjectileOriginLocation;             // 0x052C(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class AHumanCharacter*                  K2Node_Event_PlayerVictim;                         // 0x0538(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class AHumanCharacter*                  K2Node_Event_PlayerInstigator;                     // 0x0540(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bPlayerIsBeingHit;                    // 0x0548(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_549[0x3];                                      // 0x0549(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResultSimplified                   K2Node_Event_HitOptimised;                         // 0x054C(0x003C)(NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager) == 0x000008, "Wrong alignment on BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager");
static_assert(sizeof(BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager) == 0x000588, "Wrong size on BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager");
static_assert(offsetof(BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager, EntryPoint) == 0x000000, "Member 'BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager, K2Node_CustomEvent_HitResultOptimised_2) == 0x000004, "Member 'BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager::K2Node_CustomEvent_HitResultOptimised_2' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager, K2Node_CustomEvent_BulletTypeConfig_2) == 0x000040, "Member 'BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager::K2Node_CustomEvent_BulletTypeConfig_2' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager, K2Node_CustomEvent_OwnerCharacter_2) == 0x000188, "Member 'BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager::K2Node_CustomEvent_OwnerCharacter_2' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager, K2Node_CustomEvent_bIsPenetrating_2) == 0x000190, "Member 'BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager::K2Node_CustomEvent_bIsPenetrating_2' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager, K2Node_CustomEvent_bIsDeformed_2) == 0x000191, "Member 'BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager::K2Node_CustomEvent_bIsDeformed_2' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager, K2Node_CustomEvent_RelativeHitPosition) == 0x000194, "Member 'BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager::K2Node_CustomEvent_RelativeHitPosition' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager, K2Node_Event_WhizzSound) == 0x0001A0, "Member 'BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager::K2Node_Event_WhizzSound' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager, CallFunc_Player_Has_Armor_Equiped_Has_Armor_Equiped) == 0x0001A8, "Member 'BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager::CallFunc_Player_Has_Armor_Equiped_Has_Armor_Equiped' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager, CallFunc_Not_PreBool_ReturnValue) == 0x0001A9, "Member 'BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager, K2Node_CustomEvent_HitResultOptimised_1) == 0x0001AC, "Member 'BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager::K2Node_CustomEvent_HitResultOptimised_1' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager, K2Node_CustomEvent_BulletTypeConfig_1) == 0x0001E8, "Member 'BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager::K2Node_CustomEvent_BulletTypeConfig_1' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager, K2Node_CustomEvent_OwnerCharacter_1) == 0x000330, "Member 'BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager::K2Node_CustomEvent_OwnerCharacter_1' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager, K2Node_CustomEvent_bIsPenetrating_1) == 0x000338, "Member 'BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager::K2Node_CustomEvent_bIsPenetrating_1' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager, K2Node_CustomEvent_bIsDeformed_1) == 0x000339, "Member 'BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager::K2Node_CustomEvent_bIsDeformed_1' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000340, "Member 'BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager, CallFunc_Player_Has_Armor_Equiped_Has_Armor_Equiped_1) == 0x000348, "Member 'BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager::CallFunc_Player_Has_Armor_Equiped_Has_Armor_Equiped_1' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000349, "Member 'BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager, CallFunc_Not_PreBool_ReturnValue_1) == 0x00034A, "Member 'BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager, CallFunc_BooleanAND_ReturnValue) == 0x00034B, "Member 'BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager, K2Node_CreateDelegate_OutputDelegate) == 0x00034C, "Member 'BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager, K2Node_CreateDelegate_OutputDelegate_1) == 0x00035C, "Member 'BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager, K2Node_CustomEvent_HitResultOptimised) == 0x00036C, "Member 'BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager::K2Node_CustomEvent_HitResultOptimised' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager, K2Node_CustomEvent_BulletTypeConfig) == 0x0003A8, "Member 'BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager::K2Node_CustomEvent_BulletTypeConfig' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager, K2Node_CustomEvent_OwnerCharacter) == 0x0004F0, "Member 'BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager::K2Node_CustomEvent_OwnerCharacter' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager, K2Node_CustomEvent_bIsPenetrating) == 0x0004F8, "Member 'BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager::K2Node_CustomEvent_bIsPenetrating' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager, K2Node_CustomEvent_bIsDeformed) == 0x0004F9, "Member 'BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager::K2Node_CustomEvent_bIsDeformed' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager, K2Node_CreateDelegate_OutputDelegate_2) == 0x0004FC, "Member 'BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager, CallFunc_Player_Has_Armor_Equiped_Has_Armor_Equiped_2) == 0x00050C, "Member 'BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager::CallFunc_Player_Has_Armor_Equiped_Has_Armor_Equiped_2' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager, CallFunc_Not_PreBool_ReturnValue_2) == 0x00050D, "Member 'BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager, CallFunc_Vector_Zero_ReturnValue) == 0x000510, "Member 'BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager::CallFunc_Vector_Zero_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager, CallFunc_Vector_Zero_ReturnValue_1) == 0x00051C, "Member 'BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager::CallFunc_Vector_Zero_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager, K2Node_Event_ProjectileType) == 0x000528, "Member 'BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager::K2Node_Event_ProjectileType' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager, K2Node_Event_ProjectileOriginLocation) == 0x00052C, "Member 'BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager::K2Node_Event_ProjectileOriginLocation' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager, K2Node_Event_PlayerVictim) == 0x000538, "Member 'BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager::K2Node_Event_PlayerVictim' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager, K2Node_Event_PlayerInstigator) == 0x000540, "Member 'BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager::K2Node_Event_PlayerInstigator' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager, K2Node_Event_bPlayerIsBeingHit) == 0x000548, "Member 'BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager::K2Node_Event_bPlayerIsBeingHit' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager, K2Node_Event_HitOptimised) == 0x00054C, "Member 'BP_BulletManager_C_ExecuteUbergraph_BP_BulletManager::K2Node_Event_HitOptimised' has a wrong offset!");

// Function BP_BulletManager.BP_BulletManager_C.OnProjectileFlybyGeneric
// 0x0060 (0x0060 - 0x0000)
struct BP_BulletManager_C_OnProjectileFlybyGeneric final
{
public:
	EProjectileType                               ProjectileType;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ProjectileOriginLocation;                          // 0x0004(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class AHumanCharacter*                  PlayerVictim;                                      // 0x0010(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class AHumanCharacter*                  PlayerInstigator;                                  // 0x0018(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPlayerIsBeingHit;                                 // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResultSimplified                   HitOptimised;                                      // 0x0024(0x003C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_BulletManager_C_OnProjectileFlybyGeneric) == 0x000008, "Wrong alignment on BP_BulletManager_C_OnProjectileFlybyGeneric");
static_assert(sizeof(BP_BulletManager_C_OnProjectileFlybyGeneric) == 0x000060, "Wrong size on BP_BulletManager_C_OnProjectileFlybyGeneric");
static_assert(offsetof(BP_BulletManager_C_OnProjectileFlybyGeneric, ProjectileType) == 0x000000, "Member 'BP_BulletManager_C_OnProjectileFlybyGeneric::ProjectileType' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnProjectileFlybyGeneric, ProjectileOriginLocation) == 0x000004, "Member 'BP_BulletManager_C_OnProjectileFlybyGeneric::ProjectileOriginLocation' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnProjectileFlybyGeneric, PlayerVictim) == 0x000010, "Member 'BP_BulletManager_C_OnProjectileFlybyGeneric::PlayerVictim' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnProjectileFlybyGeneric, PlayerInstigator) == 0x000018, "Member 'BP_BulletManager_C_OnProjectileFlybyGeneric::PlayerInstigator' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnProjectileFlybyGeneric, bPlayerIsBeingHit) == 0x000020, "Member 'BP_BulletManager_C_OnProjectileFlybyGeneric::bPlayerIsBeingHit' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnProjectileFlybyGeneric, HitOptimised) == 0x000024, "Member 'BP_BulletManager_C_OnProjectileFlybyGeneric::HitOptimised' has a wrong offset!");

// Function BP_BulletManager.BP_BulletManager_C.CustomEvent_0
// 0x0198 (0x0198 - 0x0000)
struct BP_BulletManager_C_CustomEvent_0 final
{
public:
	struct FHitResultSimplified                   HitResultOptimised;                                // 0x0000(0x003C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAmmoTypeConfiguration                 BulletTypeConfig;                                  // 0x0040(0x0148)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	const class AHumanCharacter*                  OwnerCharacter;                                    // 0x0188(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsPenetrating;                                    // 0x0190(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsDeformed;                                       // 0x0191(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BulletManager_C_CustomEvent_0) == 0x000008, "Wrong alignment on BP_BulletManager_C_CustomEvent_0");
static_assert(sizeof(BP_BulletManager_C_CustomEvent_0) == 0x000198, "Wrong size on BP_BulletManager_C_CustomEvent_0");
static_assert(offsetof(BP_BulletManager_C_CustomEvent_0, HitResultOptimised) == 0x000000, "Member 'BP_BulletManager_C_CustomEvent_0::HitResultOptimised' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_CustomEvent_0, BulletTypeConfig) == 0x000040, "Member 'BP_BulletManager_C_CustomEvent_0::BulletTypeConfig' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_CustomEvent_0, OwnerCharacter) == 0x000188, "Member 'BP_BulletManager_C_CustomEvent_0::OwnerCharacter' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_CustomEvent_0, bIsPenetrating) == 0x000190, "Member 'BP_BulletManager_C_CustomEvent_0::bIsPenetrating' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_CustomEvent_0, bIsDeformed) == 0x000191, "Member 'BP_BulletManager_C_CustomEvent_0::bIsDeformed' has a wrong offset!");

// Function BP_BulletManager.BP_BulletManager_C.OnBulletHitOwningClientEvent
// 0x0198 (0x0198 - 0x0000)
struct BP_BulletManager_C_OnBulletHitOwningClientEvent final
{
public:
	struct FHitResultSimplified                   HitResultOptimised;                                // 0x0000(0x003C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAmmoTypeConfiguration                 BulletTypeConfig;                                  // 0x0040(0x0148)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	const class AHumanCharacter*                  OwnerCharacter;                                    // 0x0188(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsPenetrating;                                    // 0x0190(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsDeformed;                                       // 0x0191(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BulletManager_C_OnBulletHitOwningClientEvent) == 0x000008, "Wrong alignment on BP_BulletManager_C_OnBulletHitOwningClientEvent");
static_assert(sizeof(BP_BulletManager_C_OnBulletHitOwningClientEvent) == 0x000198, "Wrong size on BP_BulletManager_C_OnBulletHitOwningClientEvent");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitOwningClientEvent, HitResultOptimised) == 0x000000, "Member 'BP_BulletManager_C_OnBulletHitOwningClientEvent::HitResultOptimised' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitOwningClientEvent, BulletTypeConfig) == 0x000040, "Member 'BP_BulletManager_C_OnBulletHitOwningClientEvent::BulletTypeConfig' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitOwningClientEvent, OwnerCharacter) == 0x000188, "Member 'BP_BulletManager_C_OnBulletHitOwningClientEvent::OwnerCharacter' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitOwningClientEvent, bIsPenetrating) == 0x000190, "Member 'BP_BulletManager_C_OnBulletHitOwningClientEvent::bIsPenetrating' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitOwningClientEvent, bIsDeformed) == 0x000191, "Member 'BP_BulletManager_C_OnBulletHitOwningClientEvent::bIsDeformed' has a wrong offset!");

// Function BP_BulletManager.BP_BulletManager_C.HitEvent
// 0x01A0 (0x01A0 - 0x0000)
struct BP_BulletManager_C_HitEvent final
{
public:
	struct FHitResultSimplified                   HitResultOptimised;                                // 0x0000(0x003C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAmmoTypeConfiguration                 BulletTypeConfig;                                  // 0x0040(0x0148)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	const class AHumanCharacter*                  OwnerCharacter;                                    // 0x0188(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsPenetrating;                                    // 0x0190(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsDeformed;                                       // 0x0191(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_192[0x2];                                      // 0x0192(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RelativeHitPosition;                               // 0x0194(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BulletManager_C_HitEvent) == 0x000008, "Wrong alignment on BP_BulletManager_C_HitEvent");
static_assert(sizeof(BP_BulletManager_C_HitEvent) == 0x0001A0, "Wrong size on BP_BulletManager_C_HitEvent");
static_assert(offsetof(BP_BulletManager_C_HitEvent, HitResultOptimised) == 0x000000, "Member 'BP_BulletManager_C_HitEvent::HitResultOptimised' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_HitEvent, BulletTypeConfig) == 0x000040, "Member 'BP_BulletManager_C_HitEvent::BulletTypeConfig' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_HitEvent, OwnerCharacter) == 0x000188, "Member 'BP_BulletManager_C_HitEvent::OwnerCharacter' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_HitEvent, bIsPenetrating) == 0x000190, "Member 'BP_BulletManager_C_HitEvent::bIsPenetrating' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_HitEvent, bIsDeformed) == 0x000191, "Member 'BP_BulletManager_C_HitEvent::bIsDeformed' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_HitEvent, RelativeHitPosition) == 0x000194, "Member 'BP_BulletManager_C_HitEvent::RelativeHitPosition' has a wrong offset!");

// Function BP_BulletManager.BP_BulletManager_C.StopArrowWhizz
// 0x0008 (0x0008 - 0x0000)
struct BP_BulletManager_C_StopArrowWhizz final
{
public:
	class UAudioComponent*                        WhizzSound;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BulletManager_C_StopArrowWhizz) == 0x000008, "Wrong alignment on BP_BulletManager_C_StopArrowWhizz");
static_assert(sizeof(BP_BulletManager_C_StopArrowWhizz) == 0x000008, "Wrong size on BP_BulletManager_C_StopArrowWhizz");
static_assert(offsetof(BP_BulletManager_C_StopArrowWhizz, WhizzSound) == 0x000000, "Member 'BP_BulletManager_C_StopArrowWhizz::WhizzSound' has a wrong offset!");

// Function BP_BulletManager.BP_BulletManager_C.CalcDecalScale
// 0x0014 (0x0014 - 0x0000)
struct BP_BulletManager_C_CalcDecalScale final
{
public:
	float                                         DecalScale;                                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BulletManager_C_CalcDecalScale) == 0x000004, "Wrong alignment on BP_BulletManager_C_CalcDecalScale");
static_assert(sizeof(BP_BulletManager_C_CalcDecalScale) == 0x000014, "Wrong size on BP_BulletManager_C_CalcDecalScale");
static_assert(offsetof(BP_BulletManager_C_CalcDecalScale, DecalScale) == 0x000000, "Member 'BP_BulletManager_C_CalcDecalScale::DecalScale' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_CalcDecalScale, CallFunc_BreakVector2D_X) == 0x000004, "Member 'BP_BulletManager_C_CalcDecalScale::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_CalcDecalScale, CallFunc_BreakVector2D_Y) == 0x000008, "Member 'BP_BulletManager_C_CalcDecalScale::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_CalcDecalScale, CallFunc_RandomFloatInRange_ReturnValue) == 0x00000C, "Member 'BP_BulletManager_C_CalcDecalScale::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_CalcDecalScale, CallFunc_Add_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_BulletManager_C_CalcDecalScale::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_BulletManager.BP_BulletManager_C.CalcDecalRotation
// 0x0054 (0x0054 - 0x0000)
struct BP_BulletManager_C_CalcDecalRotation final
{
public:
	struct FVector                                InVec;                                             // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Axis;                                              // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               ReturnValue;                                       // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RotatorFromAxisAndAngle_ReturnValue;      // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BulletManager_C_CalcDecalRotation) == 0x000004, "Wrong alignment on BP_BulletManager_C_CalcDecalRotation");
static_assert(sizeof(BP_BulletManager_C_CalcDecalRotation) == 0x000054, "Wrong size on BP_BulletManager_C_CalcDecalRotation");
static_assert(offsetof(BP_BulletManager_C_CalcDecalRotation, InVec) == 0x000000, "Member 'BP_BulletManager_C_CalcDecalRotation::InVec' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_CalcDecalRotation, Axis) == 0x00000C, "Member 'BP_BulletManager_C_CalcDecalRotation::Axis' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_CalcDecalRotation, ReturnValue) == 0x000018, "Member 'BP_BulletManager_C_CalcDecalRotation::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_CalcDecalRotation, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000024, "Member 'BP_BulletManager_C_CalcDecalRotation::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_CalcDecalRotation, CallFunc_BreakVector2D_X) == 0x000030, "Member 'BP_BulletManager_C_CalcDecalRotation::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_CalcDecalRotation, CallFunc_BreakVector2D_Y) == 0x000034, "Member 'BP_BulletManager_C_CalcDecalRotation::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_CalcDecalRotation, CallFunc_RandomFloatInRange_ReturnValue) == 0x000038, "Member 'BP_BulletManager_C_CalcDecalRotation::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_CalcDecalRotation, CallFunc_RotatorFromAxisAndAngle_ReturnValue) == 0x00003C, "Member 'BP_BulletManager_C_CalcDecalRotation::CallFunc_RotatorFromAxisAndAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_CalcDecalRotation, CallFunc_ComposeRotators_ReturnValue) == 0x000048, "Member 'BP_BulletManager_C_CalcDecalRotation::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");

// Function BP_BulletManager.BP_BulletManager_C.OnBulletHitEventBP
// 0x0400 (0x0400 - 0x0000)
struct BP_BulletManager_C_OnBulletHitEventBP final
{
public:
	struct FVector                                ImpactPoint_0;                                     // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ImpactNormal;                                      // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              SurfaceType;                                       // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanCharacter*                        Owner_0;                                           // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAmmoTypeConfiguration                 BulletTypeConfig;                                  // 0x0028(0x0148)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          IsPenetrated;                                      // 0x0170(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable;                              // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue;           // 0x0180(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZ_ReturnValue;                 // 0x018C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UMaterialInterface*                     Temp_object_Variable_1;                            // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_2;                            // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_3;                            // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_4;                            // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_5;                            // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_6;                            // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_7;                            // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_8;                            // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_9;                            // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_10;                           // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_11;                           // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_12;                           // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_13;                           // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_14;                           // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_15;                           // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_16;                           // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_17;                           // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_18;                           // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_19;                           // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_20;                           // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_21;                           // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_22;                           // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_23;                           // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              Temp_byte_Variable;                                // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_251[0x3];                                      // 0x0251(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_4;                             // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_5;                             // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_6;                             // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_7;                             // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_8;                             // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_9;                             // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_10;                            // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_11;                            // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_12;                            // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_13;                            // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_14;                            // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_15;                            // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_16;                            // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_17;                            // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_18;                            // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_19;                            // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_20;                            // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_21;                            // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_22;                            // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_23;                            // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_24;                            // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_25;                            // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_26;                            // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_27;                            // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_28;                            // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_29;                            // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_30;                            // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_31;                            // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_32;                            // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_24;                           // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorInt_ReturnValue;           // 0x02E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZ_ReturnValue_1;               // 0x02EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F9[0x7];                                      // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable_25;                           // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_26;                           // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_27;                           // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_28;                           // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_29;                           // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_Script_C*          K2Node_DynamicCast_AsBP_Player_Controller_Script;  // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_339[0x7];                                      // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0340(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_354[0x4];                                      // 0x0354(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable_30;                           // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0364(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_31;                           // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              Temp_byte_Variable_1;                              // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_371[0x7];                                      // 0x0371(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable_32;                           // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerState*                      K2Node_DynamicCast_AsHuman_Player_State;           // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_389[0x3];                                      // 0x0389(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_CalcDecalScale_DecalScale;                // 0x038C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0390(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_NegateVector_ReturnValue;                 // 0x039C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_CalcDecalRotation_ReturnValue;            // 0x03A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B4[0x4];                                      // 0x03B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_Select_Default_1;                           // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x03C0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x03F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F2[0x6];                                      // 0x03F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BulletManager_C_OnBulletHitEventBP) == 0x000010, "Wrong alignment on BP_BulletManager_C_OnBulletHitEventBP");
static_assert(sizeof(BP_BulletManager_C_OnBulletHitEventBP) == 0x000400, "Wrong size on BP_BulletManager_C_OnBulletHitEventBP");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, ImpactPoint_0) == 0x000000, "Member 'BP_BulletManager_C_OnBulletHitEventBP::ImpactPoint_0' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, ImpactNormal) == 0x00000C, "Member 'BP_BulletManager_C_OnBulletHitEventBP::ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, SurfaceType) == 0x000018, "Member 'BP_BulletManager_C_OnBulletHitEventBP::SurfaceType' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Owner_0) == 0x000020, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Owner_0' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, BulletTypeConfig) == 0x000028, "Member 'BP_BulletManager_C_OnBulletHitEventBP::BulletTypeConfig' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, IsPenetrated) == 0x000170, "Member 'BP_BulletManager_C_OnBulletHitEventBP::IsPenetrated' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_object_Variable) == 0x000178, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, CallFunc_Conv_FloatToVector_ReturnValue) == 0x000180, "Member 'BP_BulletManager_C_OnBulletHitEventBP::CallFunc_Conv_FloatToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, CallFunc_MakeRotFromZ_ReturnValue) == 0x00018C, "Member 'BP_BulletManager_C_OnBulletHitEventBP::CallFunc_MakeRotFromZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_object_Variable_1) == 0x000198, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_object_Variable_2) == 0x0001A0, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_object_Variable_3) == 0x0001A8, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_object_Variable_4) == 0x0001B0, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_object_Variable_5) == 0x0001B8, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_object_Variable_6) == 0x0001C0, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_object_Variable_7) == 0x0001C8, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_object_Variable_8) == 0x0001D0, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_object_Variable_9) == 0x0001D8, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_object_Variable_10) == 0x0001E0, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_object_Variable_11) == 0x0001E8, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_object_Variable_12) == 0x0001F0, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_object_Variable_13) == 0x0001F8, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_object_Variable_14) == 0x000200, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_object_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_object_Variable_15) == 0x000208, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_object_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_object_Variable_16) == 0x000210, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_object_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_object_Variable_17) == 0x000218, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_object_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_object_Variable_18) == 0x000220, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_object_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_object_Variable_19) == 0x000228, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_object_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_object_Variable_20) == 0x000230, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_object_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_object_Variable_21) == 0x000238, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_object_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_object_Variable_22) == 0x000240, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_object_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_object_Variable_23) == 0x000248, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_object_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_byte_Variable) == 0x000250, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_float_Variable) == 0x000254, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_float_Variable_1) == 0x000258, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_float_Variable_2) == 0x00025C, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_float_Variable_3) == 0x000260, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_float_Variable_4) == 0x000264, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_float_Variable_5) == 0x000268, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_float_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_float_Variable_6) == 0x00026C, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_float_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_float_Variable_7) == 0x000270, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_float_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_float_Variable_8) == 0x000274, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_float_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_float_Variable_9) == 0x000278, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_float_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_float_Variable_10) == 0x00027C, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_float_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_float_Variable_11) == 0x000280, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_float_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_float_Variable_12) == 0x000284, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_float_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_float_Variable_13) == 0x000288, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_float_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_float_Variable_14) == 0x00028C, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_float_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_float_Variable_15) == 0x000290, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_float_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_float_Variable_16) == 0x000294, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_float_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_float_Variable_17) == 0x000298, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_float_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_float_Variable_18) == 0x00029C, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_float_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_float_Variable_19) == 0x0002A0, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_float_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_float_Variable_20) == 0x0002A4, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_float_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_float_Variable_21) == 0x0002A8, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_float_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_float_Variable_22) == 0x0002AC, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_float_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_float_Variable_23) == 0x0002B0, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_float_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_float_Variable_24) == 0x0002B4, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_float_Variable_24' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_float_Variable_25) == 0x0002B8, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_float_Variable_25' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_float_Variable_26) == 0x0002BC, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_float_Variable_26' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_float_Variable_27) == 0x0002C0, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_float_Variable_27' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_float_Variable_28) == 0x0002C4, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_float_Variable_28' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_float_Variable_29) == 0x0002C8, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_float_Variable_29' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_float_Variable_30) == 0x0002CC, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_float_Variable_30' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_float_Variable_31) == 0x0002D0, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_float_Variable_31' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_float_Variable_32) == 0x0002D4, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_float_Variable_32' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_object_Variable_24) == 0x0002D8, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_object_Variable_24' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, CallFunc_Multiply_VectorInt_ReturnValue) == 0x0002E0, "Member 'BP_BulletManager_C_OnBulletHitEventBP::CallFunc_Multiply_VectorInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, CallFunc_MakeRotFromZ_ReturnValue_1) == 0x0002EC, "Member 'BP_BulletManager_C_OnBulletHitEventBP::CallFunc_MakeRotFromZ_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, CallFunc_IsValid_ReturnValue) == 0x0002F8, "Member 'BP_BulletManager_C_OnBulletHitEventBP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_object_Variable_25) == 0x000300, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_object_Variable_25' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_object_Variable_26) == 0x000308, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_object_Variable_26' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_object_Variable_27) == 0x000310, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_object_Variable_27' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_object_Variable_28) == 0x000318, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_object_Variable_28' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, CallFunc_GetController_ReturnValue) == 0x000320, "Member 'BP_BulletManager_C_OnBulletHitEventBP::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_object_Variable_29) == 0x000328, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_object_Variable_29' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, K2Node_DynamicCast_AsBP_Player_Controller_Script) == 0x000330, "Member 'BP_BulletManager_C_OnBulletHitEventBP::K2Node_DynamicCast_AsBP_Player_Controller_Script' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, K2Node_DynamicCast_bSuccess) == 0x000338, "Member 'BP_BulletManager_C_OnBulletHitEventBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000340, "Member 'BP_BulletManager_C_OnBulletHitEventBP::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, CallFunc_RandomFloatInRange_ReturnValue) == 0x000350, "Member 'BP_BulletManager_C_OnBulletHitEventBP::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_object_Variable_30) == 0x000358, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_object_Variable_30' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, K2Node_Select_Default) == 0x000360, "Member 'BP_BulletManager_C_OnBulletHitEventBP::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000364, "Member 'BP_BulletManager_C_OnBulletHitEventBP::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_object_Variable_31) == 0x000368, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_object_Variable_31' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_byte_Variable_1) == 0x000370, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, Temp_object_Variable_32) == 0x000378, "Member 'BP_BulletManager_C_OnBulletHitEventBP::Temp_object_Variable_32' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, K2Node_DynamicCast_AsHuman_Player_State) == 0x000380, "Member 'BP_BulletManager_C_OnBulletHitEventBP::K2Node_DynamicCast_AsHuman_Player_State' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, K2Node_DynamicCast_bSuccess_1) == 0x000388, "Member 'BP_BulletManager_C_OnBulletHitEventBP::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, CallFunc_CalcDecalScale_DecalScale) == 0x00038C, "Member 'BP_BulletManager_C_OnBulletHitEventBP::CallFunc_CalcDecalScale_DecalScale' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, CallFunc_MakeVector_ReturnValue) == 0x000390, "Member 'BP_BulletManager_C_OnBulletHitEventBP::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, CallFunc_NegateVector_ReturnValue) == 0x00039C, "Member 'BP_BulletManager_C_OnBulletHitEventBP::CallFunc_NegateVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, CallFunc_CalcDecalRotation_ReturnValue) == 0x0003A8, "Member 'BP_BulletManager_C_OnBulletHitEventBP::CallFunc_CalcDecalRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, K2Node_Select_Default_1) == 0x0003B8, "Member 'BP_BulletManager_C_OnBulletHitEventBP::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, CallFunc_MakeTransform_ReturnValue) == 0x0003C0, "Member 'BP_BulletManager_C_OnBulletHitEventBP::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, CallFunc_IsValid_ReturnValue_1) == 0x0003F0, "Member 'BP_BulletManager_C_OnBulletHitEventBP::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, CallFunc_IsValid_ReturnValue_2) == 0x0003F1, "Member 'BP_BulletManager_C_OnBulletHitEventBP::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_OnBulletHitEventBP, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x0003F8, "Member 'BP_BulletManager_C_OnBulletHitEventBP::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function BP_BulletManager.BP_BulletManager_C.SetHitSurfaceType
// 0x0028 (0x0028 - 0x0000)
struct BP_BulletManager_C_SetHitSurfaceType final
{
public:
	class AActor*                                 HitActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      PhysicalMaterial;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              HitSurfaceType_0;                                  // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ALandscape*                             K2Node_DynamicCast_AsLandscape;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BulletManager_C_SetHitSurfaceType) == 0x000008, "Wrong alignment on BP_BulletManager_C_SetHitSurfaceType");
static_assert(sizeof(BP_BulletManager_C_SetHitSurfaceType) == 0x000028, "Wrong size on BP_BulletManager_C_SetHitSurfaceType");
static_assert(offsetof(BP_BulletManager_C_SetHitSurfaceType, HitActor) == 0x000000, "Member 'BP_BulletManager_C_SetHitSurfaceType::HitActor' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_SetHitSurfaceType, PhysicalMaterial) == 0x000008, "Member 'BP_BulletManager_C_SetHitSurfaceType::PhysicalMaterial' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_SetHitSurfaceType, HitSurfaceType_0) == 0x000010, "Member 'BP_BulletManager_C_SetHitSurfaceType::HitSurfaceType_0' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_SetHitSurfaceType, K2Node_DynamicCast_AsLandscape) == 0x000018, "Member 'BP_BulletManager_C_SetHitSurfaceType::K2Node_DynamicCast_AsLandscape' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_SetHitSurfaceType, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_BulletManager_C_SetHitSurfaceType::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_SetHitSurfaceType, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_BulletManager_C_SetHitSurfaceType::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_BulletManager.BP_BulletManager_C.GetHitSound
// 0x03C0 (0x03C0 - 0x0000)
struct BP_BulletManager_C_GetHitSound final
{
public:
	EPhysicalSurface                              SurfaceType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAmmoTypeConfiguration                 AmmoType;                                          // 0x0008(0x0148)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FName                                   BoneName;                                          // 0x0150(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Sound;                                             // 0x0158(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundConcurrency*                      Concurrency;                                       // 0x0160(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              Temp_byte_Variable;                                // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16A[0x6];                                      // 0x016A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable;                              // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17A[0x6];                                      // 0x017A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable_1;                            // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_2;                            // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_3;                            // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_4;                            // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_5;                            // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_6;                            // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_7;                            // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_8;                            // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_9;                            // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_10;                           // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_11;                           // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_12;                           // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_13;                           // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_14;                           // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_15;                           // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_16;                           // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_17;                           // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_18;                           // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_19;                           // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_20;                           // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_21;                           // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_22;                           // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_23;                           // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_24;                           // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_25;                           // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_26;                           // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_27;                           // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_28;                           // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_29;                           // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_30;                           // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_31;                           // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_32;                           // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              Temp_byte_Variable_1;                              // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_Select_Default;                             // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_33;                           // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_34;                           // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_35;                           // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_36;                           // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_37;                           // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_38;                           // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_39;                           // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_40;                           // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_41;                           // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_42;                           // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_43;                           // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_44;                           // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_45;                           // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_46;                           // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_47;                           // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_48;                           // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_49;                           // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_50;                           // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_51;                           // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_52;                           // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_53;                           // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_54;                           // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_55;                           // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_56;                           // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_57;                           // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_58;                           // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_59;                           // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_60;                           // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_61;                           // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_62;                           // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_63;                           // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_64;                           // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_65;                           // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundConcurrency*                      Temp_object_Variable_66;                           // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_Select_Default_1;                           // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundConcurrency*                      Temp_object_Variable_67;                           // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B1[0x7];                                      // 0x03B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundConcurrency*                      K2Node_Select_Default_2;                           // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BulletManager_C_GetHitSound) == 0x000008, "Wrong alignment on BP_BulletManager_C_GetHitSound");
static_assert(sizeof(BP_BulletManager_C_GetHitSound) == 0x0003C0, "Wrong size on BP_BulletManager_C_GetHitSound");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, SurfaceType) == 0x000000, "Member 'BP_BulletManager_C_GetHitSound::SurfaceType' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, AmmoType) == 0x000008, "Member 'BP_BulletManager_C_GetHitSound::AmmoType' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, BoneName) == 0x000150, "Member 'BP_BulletManager_C_GetHitSound::BoneName' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Sound) == 0x000158, "Member 'BP_BulletManager_C_GetHitSound::Sound' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Concurrency) == 0x000160, "Member 'BP_BulletManager_C_GetHitSound::Concurrency' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_byte_Variable) == 0x000168, "Member 'BP_BulletManager_C_GetHitSound::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, CallFunc_NotEqual_NameName_ReturnValue) == 0x000169, "Member 'BP_BulletManager_C_GetHitSound::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable) == 0x000170, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, K2Node_SwitchEnum_CmpSuccess) == 0x000178, "Member 'BP_BulletManager_C_GetHitSound::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000179, "Member 'BP_BulletManager_C_GetHitSound::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_1) == 0x000180, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_2) == 0x000188, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_3) == 0x000190, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_4) == 0x000198, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_5) == 0x0001A0, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_6) == 0x0001A8, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_7) == 0x0001B0, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_8) == 0x0001B8, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_9) == 0x0001C0, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_10) == 0x0001C8, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_11) == 0x0001D0, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_12) == 0x0001D8, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_13) == 0x0001E0, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_14) == 0x0001E8, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_15) == 0x0001F0, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_16) == 0x0001F8, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_17) == 0x000200, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_18) == 0x000208, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_19) == 0x000210, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_20) == 0x000218, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_21) == 0x000220, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_22) == 0x000228, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_23) == 0x000230, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_24) == 0x000238, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_24' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_25) == 0x000240, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_25' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_26) == 0x000248, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_26' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_27) == 0x000250, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_27' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_28) == 0x000258, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_28' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_29) == 0x000260, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_29' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_30) == 0x000268, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_30' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_31) == 0x000270, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_31' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_32) == 0x000278, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_32' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_byte_Variable_1) == 0x000280, "Member 'BP_BulletManager_C_GetHitSound::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, K2Node_Select_Default) == 0x000288, "Member 'BP_BulletManager_C_GetHitSound::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_33) == 0x000290, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_33' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_34) == 0x000298, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_34' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_35) == 0x0002A0, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_35' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_36) == 0x0002A8, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_36' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_37) == 0x0002B0, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_37' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_38) == 0x0002B8, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_38' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_39) == 0x0002C0, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_39' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_40) == 0x0002C8, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_40' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_41) == 0x0002D0, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_41' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_42) == 0x0002D8, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_42' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_43) == 0x0002E0, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_43' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_44) == 0x0002E8, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_44' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_45) == 0x0002F0, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_45' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_46) == 0x0002F8, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_46' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_47) == 0x000300, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_47' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_48) == 0x000308, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_48' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_49) == 0x000310, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_49' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_50) == 0x000318, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_50' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_51) == 0x000320, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_51' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_52) == 0x000328, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_52' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_53) == 0x000330, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_53' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_54) == 0x000338, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_54' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_55) == 0x000340, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_55' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_56) == 0x000348, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_56' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_57) == 0x000350, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_57' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_58) == 0x000358, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_58' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_59) == 0x000360, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_59' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_60) == 0x000368, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_60' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_61) == 0x000370, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_61' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_62) == 0x000378, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_62' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_63) == 0x000380, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_63' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_64) == 0x000388, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_64' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_65) == 0x000390, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_65' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_66) == 0x000398, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_66' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, K2Node_Select_Default_1) == 0x0003A0, "Member 'BP_BulletManager_C_GetHitSound::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_object_Variable_67) == 0x0003A8, "Member 'BP_BulletManager_C_GetHitSound::Temp_object_Variable_67' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, Temp_bool_Variable) == 0x0003B0, "Member 'BP_BulletManager_C_GetHitSound::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_GetHitSound, K2Node_Select_Default_2) == 0x0003B8, "Member 'BP_BulletManager_C_GetHitSound::K2Node_Select_Default_2' has a wrong offset!");

// Function BP_BulletManager.BP_BulletManager_C.PlayArrowWhizz
// 0x0020 (0x0020 - 0x0000)
struct BP_BulletManager_C_PlayArrowWhizz final
{
public:
	struct FVector                                WhizzLocation;                                     // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ArrowSpeed;                                        // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BulletManager_C_PlayArrowWhizz) == 0x000008, "Wrong alignment on BP_BulletManager_C_PlayArrowWhizz");
static_assert(sizeof(BP_BulletManager_C_PlayArrowWhizz) == 0x000020, "Wrong size on BP_BulletManager_C_PlayArrowWhizz");
static_assert(offsetof(BP_BulletManager_C_PlayArrowWhizz, WhizzLocation) == 0x000000, "Member 'BP_BulletManager_C_PlayArrowWhizz::WhizzLocation' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_PlayArrowWhizz, ArrowSpeed) == 0x00000C, "Member 'BP_BulletManager_C_PlayArrowWhizz::ArrowSpeed' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_PlayArrowWhizz, ReturnValue) == 0x000010, "Member 'BP_BulletManager_C_PlayArrowWhizz::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_PlayArrowWhizz, CallFunc_SpawnSoundAtLocation_ReturnValue) == 0x000018, "Member 'BP_BulletManager_C_PlayArrowWhizz::CallFunc_SpawnSoundAtLocation_ReturnValue' has a wrong offset!");

// Function BP_BulletManager.BP_BulletManager_C.PlayHitSound
// 0x0188 (0x0188 - 0x0000)
struct BP_BulletManager_C_PlayHitSound final
{
public:
	struct FVector                                InputPin;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              SurfaceType;                                       // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAmmoTypeConfiguration                 AmmoType;                                          // 0x0010(0x0148)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FName                                   BoneName;                                          // 0x0158(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPenetrating;                                     // 0x0160(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsDeformed;                                        // 0x0161(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsLocallyControlled;                               // 0x0162(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_163[0x5];                                      // 0x0163(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             CallFunc_GetHitSound_Sound;                        // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundConcurrency*                      CallFunc_GetHitSound_Concurrency;                  // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponentExtended*                CallFunc_SpawnSoundAtLocationExtended_ReturnValue; // 0x0178(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BulletManager_C_PlayHitSound) == 0x000008, "Wrong alignment on BP_BulletManager_C_PlayHitSound");
static_assert(sizeof(BP_BulletManager_C_PlayHitSound) == 0x000188, "Wrong size on BP_BulletManager_C_PlayHitSound");
static_assert(offsetof(BP_BulletManager_C_PlayHitSound, InputPin) == 0x000000, "Member 'BP_BulletManager_C_PlayHitSound::InputPin' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_PlayHitSound, SurfaceType) == 0x00000C, "Member 'BP_BulletManager_C_PlayHitSound::SurfaceType' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_PlayHitSound, AmmoType) == 0x000010, "Member 'BP_BulletManager_C_PlayHitSound::AmmoType' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_PlayHitSound, BoneName) == 0x000158, "Member 'BP_BulletManager_C_PlayHitSound::BoneName' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_PlayHitSound, IsPenetrating) == 0x000160, "Member 'BP_BulletManager_C_PlayHitSound::IsPenetrating' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_PlayHitSound, IsDeformed) == 0x000161, "Member 'BP_BulletManager_C_PlayHitSound::IsDeformed' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_PlayHitSound, IsLocallyControlled) == 0x000162, "Member 'BP_BulletManager_C_PlayHitSound::IsLocallyControlled' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_PlayHitSound, CallFunc_GetHitSound_Sound) == 0x000168, "Member 'BP_BulletManager_C_PlayHitSound::CallFunc_GetHitSound_Sound' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_PlayHitSound, CallFunc_GetHitSound_Concurrency) == 0x000170, "Member 'BP_BulletManager_C_PlayHitSound::CallFunc_GetHitSound_Concurrency' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_PlayHitSound, CallFunc_SpawnSoundAtLocationExtended_ReturnValue) == 0x000178, "Member 'BP_BulletManager_C_PlayHitSound::CallFunc_SpawnSoundAtLocationExtended_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_PlayHitSound, CallFunc_IsValid_ReturnValue) == 0x000180, "Member 'BP_BulletManager_C_PlayHitSound::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_BulletManager.BP_BulletManager_C.PlayBulletSonicCrack
// 0x0048 (0x0048 - 0x0000)
struct BP_BulletManager_C_PlayBulletSonicCrack final
{
public:
	struct FVector                                SonicCrackLocation;                                // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BulletOrigin;                                      // 0x000C(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BulletSpeed;                                       // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class AHumanCharacter*                  PlayerVictim;                                      // 0x0020(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPlayerIsBeingHit;                                 // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsProjectileDeformed;                             // 0x0029(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BulletManager_C_PlayBulletSonicCrack) == 0x000008, "Wrong alignment on BP_BulletManager_C_PlayBulletSonicCrack");
static_assert(sizeof(BP_BulletManager_C_PlayBulletSonicCrack) == 0x000048, "Wrong size on BP_BulletManager_C_PlayBulletSonicCrack");
static_assert(offsetof(BP_BulletManager_C_PlayBulletSonicCrack, SonicCrackLocation) == 0x000000, "Member 'BP_BulletManager_C_PlayBulletSonicCrack::SonicCrackLocation' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_PlayBulletSonicCrack, BulletOrigin) == 0x00000C, "Member 'BP_BulletManager_C_PlayBulletSonicCrack::BulletOrigin' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_PlayBulletSonicCrack, BulletSpeed) == 0x000018, "Member 'BP_BulletManager_C_PlayBulletSonicCrack::BulletSpeed' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_PlayBulletSonicCrack, PlayerVictim) == 0x000020, "Member 'BP_BulletManager_C_PlayBulletSonicCrack::PlayerVictim' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_PlayBulletSonicCrack, bPlayerIsBeingHit) == 0x000028, "Member 'BP_BulletManager_C_PlayBulletSonicCrack::bPlayerIsBeingHit' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_PlayBulletSonicCrack, bIsProjectileDeformed) == 0x000029, "Member 'BP_BulletManager_C_PlayBulletSonicCrack::bIsProjectileDeformed' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_PlayBulletSonicCrack, ReturnValue) == 0x000030, "Member 'BP_BulletManager_C_PlayBulletSonicCrack::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_PlayBulletSonicCrack, CallFunc_SpawnSoundAtLocation_ReturnValue) == 0x000038, "Member 'BP_BulletManager_C_PlayBulletSonicCrack::CallFunc_SpawnSoundAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_PlayBulletSonicCrack, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BP_BulletManager_C_PlayBulletSonicCrack::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_BulletManager.BP_BulletManager_C.PlayBulletWhizz
// 0x0048 (0x0048 - 0x0000)
struct BP_BulletManager_C_PlayBulletWhizz final
{
public:
	struct FVector                                WhizzLocation;                                     // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BulletOrigin;                                      // 0x000C(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BulletSpeed;                                       // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class AHumanCharacter*                  PlayerVictim;                                      // 0x0020(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPlayerIsBeingHit;                                 // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsProjectileDeformed;                             // 0x0029(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BulletManager_C_PlayBulletWhizz) == 0x000008, "Wrong alignment on BP_BulletManager_C_PlayBulletWhizz");
static_assert(sizeof(BP_BulletManager_C_PlayBulletWhizz) == 0x000048, "Wrong size on BP_BulletManager_C_PlayBulletWhizz");
static_assert(offsetof(BP_BulletManager_C_PlayBulletWhizz, WhizzLocation) == 0x000000, "Member 'BP_BulletManager_C_PlayBulletWhizz::WhizzLocation' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_PlayBulletWhizz, BulletOrigin) == 0x00000C, "Member 'BP_BulletManager_C_PlayBulletWhizz::BulletOrigin' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_PlayBulletWhizz, BulletSpeed) == 0x000018, "Member 'BP_BulletManager_C_PlayBulletWhizz::BulletSpeed' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_PlayBulletWhizz, PlayerVictim) == 0x000020, "Member 'BP_BulletManager_C_PlayBulletWhizz::PlayerVictim' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_PlayBulletWhizz, bPlayerIsBeingHit) == 0x000028, "Member 'BP_BulletManager_C_PlayBulletWhizz::bPlayerIsBeingHit' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_PlayBulletWhizz, bIsProjectileDeformed) == 0x000029, "Member 'BP_BulletManager_C_PlayBulletWhizz::bIsProjectileDeformed' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_PlayBulletWhizz, ReturnValue) == 0x000030, "Member 'BP_BulletManager_C_PlayBulletWhizz::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_PlayBulletWhizz, CallFunc_SpawnSoundAtLocation_ReturnValue) == 0x000038, "Member 'BP_BulletManager_C_PlayBulletWhizz::CallFunc_SpawnSoundAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_PlayBulletWhizz, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BP_BulletManager_C_PlayBulletWhizz::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_BulletManager.BP_BulletManager_C.ShowHitDecals
// 0x0670 (0x0670 - 0x0000)
struct BP_BulletManager_C_ShowHitDecals final
{
public:
	struct FAmmoTypeConfiguration                 BulletTypeConfig;                                  // 0x0000(0x0148)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class AHumanCharacter*                        OwnerCharacter;                                    // 0x0148(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPenetrating;                                     // 0x0150(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsDeformed;                                        // 0x0151(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsRelative;                                        // 0x0152(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_153[0x1];                                      // 0x0153(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RelativeHitPosition;                               // 0x0154(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResultSimplified                   HitResultOptimised;                                // 0x0160(0x003C)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SurfaceEmitterName;                                // 0x01A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable;                              // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              CallFunc_GetHitOptimisedSurfaceType_ReturnValue;   // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x01C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class USoundBase*                             CallFunc_GetHitSound_Sound;                        // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundConcurrency*                      CallFunc_GetHitSound_Concurrency;                  // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x01E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x01F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AHumanCharacter*                        K2Node_DynamicCast_AsHuman_Character;              // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue_2;             // 0x0210(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0220(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0230(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23C[0x4];                                      // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0240(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0250(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25C[0x4];                                      // 0x025C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0260(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0270(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0280(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_1;                            // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_2;                            // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_3;                            // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_4;                            // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_5;                            // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_6;                            // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_7;                            // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_8;                            // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_9;                            // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_10;                           // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_11;                           // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_12;                           // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_13;                           // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_14;                           // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_15;                           // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              Temp_byte_Variable;                                // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_309[0x7];                                      // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Temp_object_Variable_16;                           // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_17;                           // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_18;                           // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_19;                           // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_20;                           // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_21;                           // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_22;                           // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_23;                           // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_24;                           // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_25;                           // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_26;                           // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_27;                           // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_28;                           // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_29;                           // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_30;                           // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_31;                           // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_32;                           // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_33;                           // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_34;                           // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_35;                           // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_36;                           // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_37;                           // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_38;                           // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_39;                           // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_40;                           // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_41;                           // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_42;                           // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_43;                           // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_44;                           // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_45;                           // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_46;                           // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_47;                           // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_48;                           // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              Temp_byte_Variable_1;                              // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_419[0x7];                                      // 0x0419(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        K2Node_Select_Default;                             // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_49;                           // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_3;             // 0x0430(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_50;                           // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_51;                           // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_52;                           // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_53;                           // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_54;                           // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_55;                           // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_56;                           // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_57;                           // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_58;                           // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_59;                           // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_60;                           // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_61;                           // 0x0498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_62;                           // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_63;                           // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_64;                           // 0x04B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_65;                           // 0x04B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_66;                           // 0x04C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_67;                           // 0x04C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_68;                           // 0x04D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_69;                           // 0x04D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_70;                           // 0x04E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_71;                           // 0x04E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_72;                           // 0x04F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_73;                           // 0x04F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_74;                           // 0x0500(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_75;                           // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_76;                           // 0x0510(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_77;                           // 0x0518(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_78;                           // 0x0520(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_79;                           // 0x0528(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_80;                           // 0x0530(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_81;                           // 0x0538(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_82;                           // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        K2Node_Select_Default_1;                           // 0x0548(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_4;             // 0x0550(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0560(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_561[0x7];                                      // 0x0561(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable_83;                           // 0x0568(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0570(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_84;                           // 0x0580(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0588(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_85;                           // 0x0598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_86;                           // 0x05A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_87;                           // 0x05A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x05B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_88;                           // 0x05B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x05C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C1[0x7];                                      // 0x05C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable_89;                           // 0x05C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_90;                           // 0x05D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_91;                           // 0x05D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_92;                           // 0x05E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_93;                           // 0x05E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_94;                           // 0x05F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_95;                           // 0x05F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFlamePlatform                                CallFunc_GetCurrentPlatform_ReturnValue;           // 0x0600(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0601(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0602(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0603(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_604[0x4];                                      // 0x0604(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable_96;                           // 0x0608(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              Temp_byte_Variable_2;                              // 0x0610(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_611[0x7];                                      // 0x0611(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable_97;                           // 0x0618(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_98;                           // 0x0620(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default_2;                           // 0x0628(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_5;             // 0x0630(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x0640(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x0650(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x0660(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BulletManager_C_ShowHitDecals) == 0x000008, "Wrong alignment on BP_BulletManager_C_ShowHitDecals");
static_assert(sizeof(BP_BulletManager_C_ShowHitDecals) == 0x000670, "Wrong size on BP_BulletManager_C_ShowHitDecals");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, BulletTypeConfig) == 0x000000, "Member 'BP_BulletManager_C_ShowHitDecals::BulletTypeConfig' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, OwnerCharacter) == 0x000148, "Member 'BP_BulletManager_C_ShowHitDecals::OwnerCharacter' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, IsPenetrating) == 0x000150, "Member 'BP_BulletManager_C_ShowHitDecals::IsPenetrating' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, IsDeformed) == 0x000151, "Member 'BP_BulletManager_C_ShowHitDecals::IsDeformed' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, IsRelative) == 0x000152, "Member 'BP_BulletManager_C_ShowHitDecals::IsRelative' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, RelativeHitPosition) == 0x000154, "Member 'BP_BulletManager_C_ShowHitDecals::RelativeHitPosition' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, HitResultOptimised) == 0x000160, "Member 'BP_BulletManager_C_ShowHitDecals::HitResultOptimised' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, SurfaceEmitterName) == 0x0001A0, "Member 'BP_BulletManager_C_ShowHitDecals::SurfaceEmitterName' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable) == 0x0001B0, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, CallFunc_GetHitOptimisedSurfaceType_ReturnValue) == 0x0001B8, "Member 'BP_BulletManager_C_ShowHitDecals::CallFunc_GetHitOptimisedSurfaceType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x0001C0, "Member 'BP_BulletManager_C_ShowHitDecals::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, CallFunc_GetHitSound_Sound) == 0x0001D0, "Member 'BP_BulletManager_C_ShowHitDecals::CallFunc_GetHitSound_Sound' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, CallFunc_GetHitSound_Concurrency) == 0x0001D8, "Member 'BP_BulletManager_C_ShowHitDecals::CallFunc_GetHitSound_Concurrency' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, CallFunc_GetDisplayName_ReturnValue) == 0x0001E0, "Member 'BP_BulletManager_C_ShowHitDecals::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, CallFunc_GetDisplayName_ReturnValue_1) == 0x0001F0, "Member 'BP_BulletManager_C_ShowHitDecals::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, K2Node_DynamicCast_AsHuman_Character) == 0x000200, "Member 'BP_BulletManager_C_ShowHitDecals::K2Node_DynamicCast_AsHuman_Character' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, K2Node_DynamicCast_bSuccess) == 0x000208, "Member 'BP_BulletManager_C_ShowHitDecals::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, CallFunc_GetDisplayName_ReturnValue_2) == 0x000210, "Member 'BP_BulletManager_C_ShowHitDecals::CallFunc_GetDisplayName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, CallFunc_Concat_StrStr_ReturnValue) == 0x000220, "Member 'BP_BulletManager_C_ShowHitDecals::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000230, "Member 'BP_BulletManager_C_ShowHitDecals::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000240, "Member 'BP_BulletManager_C_ShowHitDecals::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, CallFunc_Add_VectorVector_ReturnValue) == 0x000250, "Member 'BP_BulletManager_C_ShowHitDecals::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000260, "Member 'BP_BulletManager_C_ShowHitDecals::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000270, "Member 'BP_BulletManager_C_ShowHitDecals::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000280, "Member 'BP_BulletManager_C_ShowHitDecals::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_1) == 0x000290, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_2) == 0x000298, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_3) == 0x0002A0, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_4) == 0x0002A8, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_5) == 0x0002B0, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_6) == 0x0002B8, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_7) == 0x0002C0, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_8) == 0x0002C8, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_9) == 0x0002D0, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_10) == 0x0002D8, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_11) == 0x0002E0, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_12) == 0x0002E8, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_13) == 0x0002F0, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_14) == 0x0002F8, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_15) == 0x000300, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_byte_Variable) == 0x000308, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_16) == 0x000310, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_17) == 0x000318, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_18) == 0x000320, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_19) == 0x000328, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_20) == 0x000330, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_21) == 0x000338, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_22) == 0x000340, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_23) == 0x000348, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_24) == 0x000350, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_24' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_25) == 0x000358, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_25' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_26) == 0x000360, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_26' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_27) == 0x000368, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_27' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_28) == 0x000370, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_28' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_29) == 0x000378, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_29' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_30) == 0x000380, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_30' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_31) == 0x000388, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_31' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_32) == 0x000390, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_32' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_33) == 0x000398, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_33' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_34) == 0x0003A0, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_34' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_35) == 0x0003A8, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_35' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_36) == 0x0003B0, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_36' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_37) == 0x0003B8, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_37' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_38) == 0x0003C0, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_38' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_39) == 0x0003C8, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_39' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_40) == 0x0003D0, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_40' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_41) == 0x0003D8, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_41' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_42) == 0x0003E0, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_42' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_43) == 0x0003E8, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_43' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_44) == 0x0003F0, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_44' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_45) == 0x0003F8, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_45' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_46) == 0x000400, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_46' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_47) == 0x000408, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_47' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_48) == 0x000410, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_48' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_byte_Variable_1) == 0x000418, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, K2Node_Select_Default) == 0x000420, "Member 'BP_BulletManager_C_ShowHitDecals::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_49) == 0x000428, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_49' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, CallFunc_GetDisplayName_ReturnValue_3) == 0x000430, "Member 'BP_BulletManager_C_ShowHitDecals::CallFunc_GetDisplayName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_50) == 0x000440, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_50' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_51) == 0x000448, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_51' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_52) == 0x000450, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_52' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_53) == 0x000458, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_53' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_54) == 0x000460, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_54' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_55) == 0x000468, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_55' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_56) == 0x000470, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_56' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_57) == 0x000478, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_57' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_58) == 0x000480, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_58' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_59) == 0x000488, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_59' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_60) == 0x000490, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_60' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_61) == 0x000498, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_61' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_62) == 0x0004A0, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_62' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_63) == 0x0004A8, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_63' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_64) == 0x0004B0, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_64' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_65) == 0x0004B8, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_65' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_66) == 0x0004C0, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_66' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_67) == 0x0004C8, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_67' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_68) == 0x0004D0, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_68' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_69) == 0x0004D8, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_69' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_70) == 0x0004E0, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_70' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_71) == 0x0004E8, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_71' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_72) == 0x0004F0, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_72' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_73) == 0x0004F8, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_73' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_74) == 0x000500, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_74' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_75) == 0x000508, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_75' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_76) == 0x000510, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_76' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_77) == 0x000518, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_77' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_78) == 0x000520, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_78' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_79) == 0x000528, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_79' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_80) == 0x000530, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_80' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_81) == 0x000538, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_81' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_82) == 0x000540, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_82' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, K2Node_Select_Default_1) == 0x000548, "Member 'BP_BulletManager_C_ShowHitDecals::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, CallFunc_GetDisplayName_ReturnValue_4) == 0x000550, "Member 'BP_BulletManager_C_ShowHitDecals::CallFunc_GetDisplayName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, CallFunc_HasAuthority_ReturnValue) == 0x000560, "Member 'BP_BulletManager_C_ShowHitDecals::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_83) == 0x000568, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_83' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000570, "Member 'BP_BulletManager_C_ShowHitDecals::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_84) == 0x000580, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_84' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000588, "Member 'BP_BulletManager_C_ShowHitDecals::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_85) == 0x000598, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_85' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_86) == 0x0005A0, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_86' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_87) == 0x0005A8, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_87' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, CallFunc_GetPlayerCharacter_ReturnValue) == 0x0005B0, "Member 'BP_BulletManager_C_ShowHitDecals::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_88) == 0x0005B8, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_88' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0005C0, "Member 'BP_BulletManager_C_ShowHitDecals::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_89) == 0x0005C8, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_89' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_90) == 0x0005D0, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_90' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_91) == 0x0005D8, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_91' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_92) == 0x0005E0, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_92' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_93) == 0x0005E8, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_93' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_94) == 0x0005F0, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_94' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_95) == 0x0005F8, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_95' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, CallFunc_GetCurrentPlatform_ReturnValue) == 0x000600, "Member 'BP_BulletManager_C_ShowHitDecals::CallFunc_GetCurrentPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000601, "Member 'BP_BulletManager_C_ShowHitDecals::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000602, "Member 'BP_BulletManager_C_ShowHitDecals::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, CallFunc_BooleanOR_ReturnValue) == 0x000603, "Member 'BP_BulletManager_C_ShowHitDecals::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_96) == 0x000608, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_96' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_byte_Variable_2) == 0x000610, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_97) == 0x000618, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_97' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, Temp_object_Variable_98) == 0x000620, "Member 'BP_BulletManager_C_ShowHitDecals::Temp_object_Variable_98' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, K2Node_Select_Default_2) == 0x000628, "Member 'BP_BulletManager_C_ShowHitDecals::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, CallFunc_GetDisplayName_ReturnValue_5) == 0x000630, "Member 'BP_BulletManager_C_ShowHitDecals::CallFunc_GetDisplayName_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, CallFunc_Concat_StrStr_ReturnValue_7) == 0x000640, "Member 'BP_BulletManager_C_ShowHitDecals::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, CallFunc_Concat_StrStr_ReturnValue_8) == 0x000650, "Member 'BP_BulletManager_C_ShowHitDecals::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_ShowHitDecals, CallFunc_Concat_StrStr_ReturnValue_9) == 0x000660, "Member 'BP_BulletManager_C_ShowHitDecals::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");

// Function BP_BulletManager.BP_BulletManager_C.Player Has Armor Equiped
// 0x0068 (0x0068 - 0x0000)
struct BP_BulletManager_C_Player_Has_Armor_Equiped final
{
public:
	struct FHitResultSimplified                   HitOptimised;                                      // 0x0000(0x003C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference)
	bool                                          Has_Armor_Equiped;                                 // 0x003C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanCharacter*                        K2Node_DynamicCast_AsHuman_Character;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSubclassOf<class AItem>>              CallFunc_DoesSomethingModifyDamage_ItemsWhichAffectedDamage; // 0x0050(0x0010)(ReferenceParm)
	bool                                          CallFunc_DoesSomethingModifyDamage_ReturnValue;    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BulletManager_C_Player_Has_Armor_Equiped) == 0x000008, "Wrong alignment on BP_BulletManager_C_Player_Has_Armor_Equiped");
static_assert(sizeof(BP_BulletManager_C_Player_Has_Armor_Equiped) == 0x000068, "Wrong size on BP_BulletManager_C_Player_Has_Armor_Equiped");
static_assert(offsetof(BP_BulletManager_C_Player_Has_Armor_Equiped, HitOptimised) == 0x000000, "Member 'BP_BulletManager_C_Player_Has_Armor_Equiped::HitOptimised' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_Player_Has_Armor_Equiped, Has_Armor_Equiped) == 0x00003C, "Member 'BP_BulletManager_C_Player_Has_Armor_Equiped::Has_Armor_Equiped' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_Player_Has_Armor_Equiped, CallFunc_IsValid_ReturnValue) == 0x00003D, "Member 'BP_BulletManager_C_Player_Has_Armor_Equiped::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_Player_Has_Armor_Equiped, K2Node_DynamicCast_AsHuman_Character) == 0x000040, "Member 'BP_BulletManager_C_Player_Has_Armor_Equiped::K2Node_DynamicCast_AsHuman_Character' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_Player_Has_Armor_Equiped, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_BulletManager_C_Player_Has_Armor_Equiped::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_Player_Has_Armor_Equiped, CallFunc_DoesSomethingModifyDamage_ItemsWhichAffectedDamage) == 0x000050, "Member 'BP_BulletManager_C_Player_Has_Armor_Equiped::CallFunc_DoesSomethingModifyDamage_ItemsWhichAffectedDamage' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_Player_Has_Armor_Equiped, CallFunc_DoesSomethingModifyDamage_ReturnValue) == 0x000060, "Member 'BP_BulletManager_C_Player_Has_Armor_Equiped::CallFunc_DoesSomethingModifyDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_Player_Has_Armor_Equiped, CallFunc_IsValid_ReturnValue_1) == 0x000061, "Member 'BP_BulletManager_C_Player_Has_Armor_Equiped::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_BulletManager.BP_BulletManager_C.UpdateImpactEmitters
// 0x0290 (0x0290 - 0x0000)
struct BP_BulletManager_C_UpdateImpactEmitters final
{
public:
	class AHumanCharacter*                        HumanOwner;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              Surface;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x000C(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotator;                                           // 0x0018(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                Scale;                                             // 0x0024(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        ParticleToSpawn;                                   // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable;                              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryMovingBulletImpactEmitter_ReturnValue; // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Temp_object_Variable_1;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_2;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_3;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_4;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_5;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_6;                            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_7;                            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_8;                            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_9;                            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_10;                           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_11;                           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_12;                           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_13;                           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_14;                           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_15;                           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_16;                           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_17;                           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_18;                           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_19;                           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_20;                           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_21;                           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_22;                           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_23;                           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_24;                           // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_25;                           // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_26;                           // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_27;                           // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_28;                           // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_29;                           // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_30;                           // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              Temp_byte_Variable;                                // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Temp_object_Variable_31;                           // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_32;                           // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_33;                           // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_34;                           // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_35;                           // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_36;                           // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_37;                           // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_38;                           // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_39;                           // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_40;                           // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_41;                           // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_42;                           // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_43;                           // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_44;                           // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_45;                           // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_46;                           // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_47;                           // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_48;                           // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_49;                           // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_50;                           // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_51;                           // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_52;                           // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_53;                           // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_54;                           // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_55;                           // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_56;                           // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_57;                           // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_58;                           // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_59;                           // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_60;                           // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_61;                           // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_62;                           // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_63;                           // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              Temp_byte_Variable_1;                              // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Temp_object_Variable_64;                           // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFlamePlatform                                CallFunc_GetCurrentPlatform_ReturnValue;           // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Temp_object_Variable_65;                           // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0269(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26A[0x6];                                      // 0x026A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        K2Node_Select_Default;                             // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_279[0x7];                                      // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0280(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        K2Node_Select_Default_1;                           // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BulletManager_C_UpdateImpactEmitters) == 0x000008, "Wrong alignment on BP_BulletManager_C_UpdateImpactEmitters");
static_assert(sizeof(BP_BulletManager_C_UpdateImpactEmitters) == 0x000290, "Wrong size on BP_BulletManager_C_UpdateImpactEmitters");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, HumanOwner) == 0x000000, "Member 'BP_BulletManager_C_UpdateImpactEmitters::HumanOwner' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Surface) == 0x000008, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Surface' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Location) == 0x00000C, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Location' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Rotator) == 0x000018, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Rotator' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Scale) == 0x000024, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Scale' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, ParticleToSpawn) == 0x000030, "Member 'BP_BulletManager_C_UpdateImpactEmitters::ParticleToSpawn' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable) == 0x000038, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, CallFunc_TryMovingBulletImpactEmitter_ReturnValue) == 0x000040, "Member 'BP_BulletManager_C_UpdateImpactEmitters::CallFunc_TryMovingBulletImpactEmitter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_1) == 0x000048, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_2) == 0x000050, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_3) == 0x000058, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_4) == 0x000060, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_5) == 0x000068, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_6) == 0x000070, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_7) == 0x000078, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_8) == 0x000080, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_9) == 0x000088, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_10) == 0x000090, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_11) == 0x000098, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_12) == 0x0000A0, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_13) == 0x0000A8, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_14) == 0x0000B0, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_15) == 0x0000B8, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_16) == 0x0000C0, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_17) == 0x0000C8, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_18) == 0x0000D0, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_19) == 0x0000D8, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_20) == 0x0000E0, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_21) == 0x0000E8, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_22) == 0x0000F0, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_23) == 0x0000F8, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_24) == 0x000100, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_24' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_25) == 0x000108, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_25' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_26) == 0x000110, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_26' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_27) == 0x000118, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_27' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_28) == 0x000120, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_28' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_29) == 0x000128, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_29' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_30) == 0x000130, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_30' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_byte_Variable) == 0x000138, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_31) == 0x000140, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_31' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_32) == 0x000148, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_32' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_33) == 0x000150, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_33' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_34) == 0x000158, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_34' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_35) == 0x000160, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_35' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_36) == 0x000168, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_36' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_37) == 0x000170, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_37' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_38) == 0x000178, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_38' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_39) == 0x000180, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_39' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_40) == 0x000188, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_40' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_41) == 0x000190, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_41' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_42) == 0x000198, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_42' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_43) == 0x0001A0, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_43' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_44) == 0x0001A8, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_44' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_45) == 0x0001B0, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_45' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_46) == 0x0001B8, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_46' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_47) == 0x0001C0, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_47' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_48) == 0x0001C8, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_48' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_49) == 0x0001D0, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_49' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_50) == 0x0001D8, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_50' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_51) == 0x0001E0, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_51' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_52) == 0x0001E8, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_52' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_53) == 0x0001F0, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_53' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_54) == 0x0001F8, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_54' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_55) == 0x000200, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_55' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_56) == 0x000208, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_56' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_57) == 0x000210, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_57' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_58) == 0x000218, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_58' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_59) == 0x000220, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_59' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_60) == 0x000228, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_60' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_61) == 0x000230, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_61' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_62) == 0x000238, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_62' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_63) == 0x000240, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_63' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_byte_Variable_1) == 0x000248, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_64) == 0x000250, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_64' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, CallFunc_GetCurrentPlatform_ReturnValue) == 0x000258, "Member 'BP_BulletManager_C_UpdateImpactEmitters::CallFunc_GetCurrentPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, Temp_object_Variable_65) == 0x000260, "Member 'BP_BulletManager_C_UpdateImpactEmitters::Temp_object_Variable_65' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000268, "Member 'BP_BulletManager_C_UpdateImpactEmitters::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000269, "Member 'BP_BulletManager_C_UpdateImpactEmitters::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, K2Node_Select_Default) == 0x000270, "Member 'BP_BulletManager_C_UpdateImpactEmitters::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, CallFunc_BooleanOR_ReturnValue) == 0x000278, "Member 'BP_BulletManager_C_UpdateImpactEmitters::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000280, "Member 'BP_BulletManager_C_UpdateImpactEmitters::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BulletManager_C_UpdateImpactEmitters, K2Node_Select_Default_1) == 0x000288, "Member 'BP_BulletManager_C_UpdateImpactEmitters::K2Node_Select_Default_1' has a wrong offset!");

}

