#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_GunFight_WinPoint

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function UI_GunFight_WinPoint.UI_GunFight_WinPoint_C.ExecuteUbergraph_UI_GunFight_WinPoint
// 0x0004 (0x0004 - 0x0000)
struct UI_GunFight_WinPoint_C_ExecuteUbergraph_UI_GunFight_WinPoint final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GunFight_WinPoint_C_ExecuteUbergraph_UI_GunFight_WinPoint) == 0x000004, "Wrong alignment on UI_GunFight_WinPoint_C_ExecuteUbergraph_UI_GunFight_WinPoint");
static_assert(sizeof(UI_GunFight_WinPoint_C_ExecuteUbergraph_UI_GunFight_WinPoint) == 0x000004, "Wrong size on UI_GunFight_WinPoint_C_ExecuteUbergraph_UI_GunFight_WinPoint");
static_assert(offsetof(UI_GunFight_WinPoint_C_ExecuteUbergraph_UI_GunFight_WinPoint, EntryPoint) == 0x000000, "Member 'UI_GunFight_WinPoint_C_ExecuteUbergraph_UI_GunFight_WinPoint::EntryPoint' has a wrong offset!");

// Function UI_GunFight_WinPoint.UI_GunFight_WinPoint_C.Set Point Owner
// 0x0020 (0x0020 - 0x0000)
struct UI_GunFight_WinPoint_C_Set_Point_Owner final
{
public:
	int32                                         Owner;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GunFight_WinPoint_C_Set_Point_Owner) == 0x000008, "Wrong alignment on UI_GunFight_WinPoint_C_Set_Point_Owner");
static_assert(sizeof(UI_GunFight_WinPoint_C_Set_Point_Owner) == 0x000020, "Wrong size on UI_GunFight_WinPoint_C_Set_Point_Owner");
static_assert(offsetof(UI_GunFight_WinPoint_C_Set_Point_Owner, Owner) == 0x000000, "Member 'UI_GunFight_WinPoint_C_Set_Point_Owner::Owner' has a wrong offset!");
static_assert(offsetof(UI_GunFight_WinPoint_C_Set_Point_Owner, Temp_bool_Variable) == 0x000004, "Member 'UI_GunFight_WinPoint_C_Set_Point_Owner::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_GunFight_WinPoint_C_Set_Point_Owner, Temp_byte_Variable) == 0x000005, "Member 'UI_GunFight_WinPoint_C_Set_Point_Owner::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_GunFight_WinPoint_C_Set_Point_Owner, Temp_byte_Variable_1) == 0x000006, "Member 'UI_GunFight_WinPoint_C_Set_Point_Owner::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_GunFight_WinPoint_C_Set_Point_Owner, Temp_bool_Variable_1) == 0x000007, "Member 'UI_GunFight_WinPoint_C_Set_Point_Owner::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_GunFight_WinPoint_C_Set_Point_Owner, Temp_byte_Variable_2) == 0x000008, "Member 'UI_GunFight_WinPoint_C_Set_Point_Owner::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_GunFight_WinPoint_C_Set_Point_Owner, Temp_byte_Variable_3) == 0x000009, "Member 'UI_GunFight_WinPoint_C_Set_Point_Owner::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_GunFight_WinPoint_C_Set_Point_Owner, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'UI_GunFight_WinPoint_C_Set_Point_Owner::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GunFight_WinPoint_C_Set_Point_Owner, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000018, "Member 'UI_GunFight_WinPoint_C_Set_Point_Owner::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GunFight_WinPoint_C_Set_Point_Owner, CallFunc_Less_IntInt_ReturnValue) == 0x000019, "Member 'UI_GunFight_WinPoint_C_Set_Point_Owner::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GunFight_WinPoint_C_Set_Point_Owner, CallFunc_Greater_IntInt_ReturnValue) == 0x00001A, "Member 'UI_GunFight_WinPoint_C_Set_Point_Owner::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GunFight_WinPoint_C_Set_Point_Owner, K2Node_Select_Default) == 0x00001B, "Member 'UI_GunFight_WinPoint_C_Set_Point_Owner::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_GunFight_WinPoint_C_Set_Point_Owner, K2Node_Select_Default_1) == 0x00001C, "Member 'UI_GunFight_WinPoint_C_Set_Point_Owner::K2Node_Select_Default_1' has a wrong offset!");

}

