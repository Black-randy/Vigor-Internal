#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_ZoomableLevelMap

#include "Basic.hpp"

#include "UI_ZoomableLevelMap_classes.hpp"
#include "UI_ZoomableLevelMap_parameters.hpp"


namespace SDK
{

// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.ExecuteUbergraph_UI_ZoomableLevelMap
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ZoomableLevelMap_C::ExecuteUbergraph_UI_ZoomableLevelMap(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "ExecuteUbergraph_UI_ZoomableLevelMap");

	Params::UI_ZoomableLevelMap_C_ExecuteUbergraph_UI_ZoomableLevelMap Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.BndEvt__UI_ZoomableLevelMap_UI_PlaceMarkerAction2_K2Node_ComponentBoundEvent_4_OnActionPressedEvent__DelegateSignature
// (BlueprintEvent)

void UUI_ZoomableLevelMap_C::BndEvt__UI_ZoomableLevelMap_UI_PlaceMarkerAction2_K2Node_ComponentBoundEvent_4_OnActionPressedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "BndEvt__UI_ZoomableLevelMap_UI_PlaceMarkerAction2_K2Node_ComponentBoundEvent_4_OnActionPressedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.InputModeChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EInputMode                              InputMode                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ZoomableLevelMap_C::InputModeChanged(int32 PlayerIndex, EInputMode InputMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "InputModeChanged");

	Params::UI_ZoomableLevelMap_C_InputModeChanged Parms{};

	Parms.PlayerIndex = PlayerIndex;
	Parms.InputMode = InputMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.CheckClick
// (BlueprintCallable, BlueprintEvent)

void UUI_ZoomableLevelMap_C::CheckClick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "CheckClick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.TriggerClick
// (BlueprintCallable, BlueprintEvent)

void UUI_ZoomableLevelMap_C::TriggerClick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "TriggerClick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.BndEvt__UI_GamepadActionWidget_1_K2Node_ComponentBoundEvent_1_OnActionPressedEvent__DelegateSignature
// (BlueprintEvent)

void UUI_ZoomableLevelMap_C::BndEvt__UI_GamepadActionWidget_1_K2Node_ComponentBoundEvent_1_OnActionPressedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "BndEvt__UI_GamepadActionWidget_1_K2Node_ComponentBoundEvent_1_OnActionPressedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.BndEvt__UI_GamepadActionWidget_C_0_K2Node_ComponentBoundEvent_0_OnActionPressedEvent__DelegateSignature
// (BlueprintEvent)

void UUI_ZoomableLevelMap_C::BndEvt__UI_GamepadActionWidget_C_0_K2Node_ComponentBoundEvent_0_OnActionPressedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "BndEvt__UI_GamepadActionWidget_C_0_K2Node_ComponentBoundEvent_0_OnActionPressedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.BndEvt__Close_Button_K2Node_ComponentBoundEvent_2_OnActionPressedEvent__DelegateSignature
// (BlueprintEvent)

void UUI_ZoomableLevelMap_C::BndEvt__Close_Button_K2Node_ComponentBoundEvent_2_OnActionPressedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "BndEvt__Close_Button_K2Node_ComponentBoundEvent_2_OnActionPressedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.BndEvt__ActionButton_Boosters_1_K2Node_ComponentBoundEvent_1_OnActionPressedEvent__DelegateSignature
// (BlueprintEvent)

void UUI_ZoomableLevelMap_C::BndEvt__ActionButton_Boosters_1_K2Node_ComponentBoundEvent_1_OnActionPressedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "BndEvt__ActionButton_Boosters_1_K2Node_ComponentBoundEvent_1_OnActionPressedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.SetBoosterDetailWidgetVIsibility
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewVisibility                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_ZoomableLevelMap_C::SetBoosterDetailWidgetVIsibility(bool NewVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "SetBoosterDetailWidgetVIsibility");

	Params::UI_ZoomableLevelMap_C_SetBoosterDetailWidgetVIsibility Parms{};

	Parms.NewVisibility = NewVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.RemoveWidgetAfterAnimation
// (BlueprintCallable, BlueprintEvent)

void UUI_ZoomableLevelMap_C::RemoveWidgetAfterAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "RemoveWidgetAfterAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.CheckZoomButton
// (BlueprintCallable, BlueprintEvent)

void UUI_ZoomableLevelMap_C::CheckZoomButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "CheckZoomButton");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.SetSpecificZoomLimits
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FLinearColor                     LowerMapZoomLimit_0                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     UpperMapZoomLimit_0                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ZoomableLevelMap_C::SetSpecificZoomLimits(const struct FLinearColor& LowerMapZoomLimit_0, const struct FLinearColor& UpperMapZoomLimit_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "SetSpecificZoomLimits");

	Params::UI_ZoomableLevelMap_C_SetSpecificZoomLimits Parms{};

	Parms.LowerMapZoomLimit_0 = std::move(LowerMapZoomLimit_0);
	Parms.UpperMapZoomLimit_0 = std::move(UpperMapZoomLimit_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.Check FoW Prototype Active
// (BlueprintCallable, BlueprintEvent)

void UUI_ZoomableLevelMap_C::Check_FoW_Prototype_Active()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "Check FoW Prototype Active");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.ZoomDelay
// (BlueprintCallable, BlueprintEvent)

void UUI_ZoomableLevelMap_C::ZoomDelay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "ZoomDelay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_ZoomableLevelMap_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "PreConstruct");

	Params::UI_ZoomableLevelMap_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.AddFadedMarker
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             MarkerTag                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FS_CustomMapMarker_Fade          MarkerInfo                                             (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UUI_ZoomableLevelMap_C::AddFadedMarker(const class FName MarkerTag, const struct FS_CustomMapMarker_Fade& MarkerInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "AddFadedMarker");

	Params::UI_ZoomableLevelMap_C_AddFadedMarker Parms{};

	Parms.MarkerTag = MarkerTag;
	Parms.MarkerInfo = std::move(MarkerInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.MouseWheelZoom
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ZoomableLevelMap_C::MouseWheelZoom(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "MouseWheelZoom");

	Params::UI_ZoomableLevelMap_C_MouseWheelZoom Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.ToggleAutoZoom
// (BlueprintCallable, BlueprintEvent)

void UUI_ZoomableLevelMap_C::ToggleAutoZoom()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "ToggleAutoZoom");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.PinchZoom
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ZoomableLevelMap_C::PinchZoom(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "PinchZoom");

	Params::UI_ZoomableLevelMap_C_PinchZoom Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.StopPanning
// (BlueprintCallable, BlueprintEvent)

void UUI_ZoomableLevelMap_C::StopPanning()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "StopPanning");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.StartPanning
// (BlueprintCallable, BlueprintEvent)

void UUI_ZoomableLevelMap_C::StartPanning()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "StartPanning");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.OnGameMenu
// (BlueprintCallable, BlueprintEvent)

void UUI_ZoomableLevelMap_C::OnGameMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "OnGameMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.CenterActual
// (BlueprintCallable, BlueprintEvent)

void UUI_ZoomableLevelMap_C::CenterActual()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "CenterActual");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.NewMarker
// (BlueprintCallable, BlueprintEvent)

void UUI_ZoomableLevelMap_C::NewMarker()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "NewMarker");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.OnCloseMap
// (BlueprintCallable, BlueprintEvent)

void UUI_ZoomableLevelMap_C::OnCloseMap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "OnCloseMap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.RemoveMapMarkerByTag
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ZoomableLevelMap_C::RemoveMapMarkerByTag(class FName Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "RemoveMapMarkerByTag");

	Params::UI_ZoomableLevelMap_C_RemoveMapMarkerByTag Parms{};

	Parms.Tag = Tag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.AddMapMarker
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FS_CustomMapMarker               Marker                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UUI_ZoomableLevelMap_C::AddMapMarker(class FName Tag, const struct FS_CustomMapMarker& Marker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "AddMapMarker");

	Params::UI_ZoomableLevelMap_C_AddMapMarker Parms{};

	Parms.Tag = Tag;
	Parms.Marker = std::move(Marker);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.RemoveMapMarkers
// (BlueprintCallable, BlueprintEvent)

void UUI_ZoomableLevelMap_C::RemoveMapMarkers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "RemoveMapMarkers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.Zoom
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ZoomableLevelMap_C::Zoom(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "Zoom");

	Params::UI_ZoomableLevelMap_C_Zoom Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.LeftStickLeftRight
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ZoomableLevelMap_C::LeftStickLeftRight(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "LeftStickLeftRight");

	Params::UI_ZoomableLevelMap_C_LeftStickLeftRight Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.LeftStickUpDown
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ZoomableLevelMap_C::LeftStickUpDown(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "LeftStickUpDown");

	Params::UI_ZoomableLevelMap_C_LeftStickUpDown Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ZoomableLevelMap_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "Tick");

	Params::UI_ZoomableLevelMap_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_ZoomableLevelMap_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.Finished_A4ADECF543029FC0F96A46BB7836D444
// (BlueprintCallable, BlueprintEvent)

void UUI_ZoomableLevelMap_C::Finished_A4ADECF543029FC0F96A46BB7836D444()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "Finished_A4ADECF543029FC0F96A46BB7836D444");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.Finished_579A59464C8DF0B03CBB718D9C39DB83
// (BlueprintCallable, BlueprintEvent)

void UUI_ZoomableLevelMap_C::Finished_579A59464C8DF0B03CBB718D9C39DB83()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "Finished_579A59464C8DF0B03CBB718D9C39DB83");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.Finished_02BC51964E99BA91E549E19C633BA452
// (BlueprintCallable, BlueprintEvent)

void UUI_ZoomableLevelMap_C::Finished_02BC51964E99BA91E549E19C633BA452()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "Finished_02BC51964E99BA91E549E19C633BA452");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.OnLoaded_303A9E7341428F48F05BE78A3AFDD8BC
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ZoomableLevelMap_C::OnLoaded_303A9E7341428F48F05BE78A3AFDD8BC(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "OnLoaded_303A9E7341428F48F05BE78A3AFDD8BC");

	Params::UI_ZoomableLevelMap_C_OnLoaded_303A9E7341428F48F05BE78A3AFDD8BC Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.GetPlayerPos
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FS_CustomMapMarker_ContextUI>ActivePlayersMarkers                                   (Parm, OutParm, ContainsInstancedReference)

void UUI_ZoomableLevelMap_C::GetPlayerPos(TArray<struct FS_CustomMapMarker_ContextUI>* ActivePlayersMarkers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "GetPlayerPos");

	Params::UI_ZoomableLevelMap_C_GetPlayerPos Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ActivePlayersMarkers != nullptr)
		*ActivePlayersMarkers = std::move(Parms.ActivePlayersMarkers);
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.AddMarkerToMap
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_CustomMapMarker               CustomMapMarkerIcon                                    (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// class UImage*                           Image                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ZoomableLevelMap_C::AddMarkerToMap(struct FS_CustomMapMarker& CustomMapMarkerIcon, class UImage* Image)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "AddMarkerToMap");

	Params::UI_ZoomableLevelMap_C_AddMarkerToMap Parms{};

	Parms.CustomMapMarkerIcon = std::move(CustomMapMarkerIcon);
	Parms.Image = Image;

	UObject::ProcessEvent(Func, &Parms);

	CustomMapMarkerIcon = std::move(Parms.CustomMapMarkerIcon);
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.InitMap
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUI_ZoomableLevelMap_C::InitMap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "InitMap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.ResolveCustomMarkerButton
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_ZoomableLevelMap_C::ResolveCustomMarkerButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "ResolveCustomMarkerButton");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.LoadMarkers
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUI_ZoomableLevelMap_C::LoadMarkers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "LoadMarkers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.StartStopDeletingOneUserMarker
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUI_ZoomableLevelMap_C::StartStopDeletingOneUserMarker()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "StartStopDeletingOneUserMarker");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.CreateOneUserMarker
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUI_ZoomableLevelMap_C::CreateOneUserMarker()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "CreateOneUserMarker");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.MoveCursor
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_ZoomableLevelMap_C::MoveCursor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "MoveCursor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.SmoothCenterToPlayersposition
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_ZoomableLevelMap_C::SmoothCenterToPlayersposition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "SmoothCenterToPlayersposition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.StartSmoothCentering
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_ZoomableLevelMap_C::StartSmoothCentering()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "StartSmoothCentering");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.Refresh Weather Icons
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_ZoomableLevelMap_C::Refresh_Weather_Icons()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "Refresh Weather Icons");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.SetMarkerPosition
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCanvasPanelSlot*                 Slot_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          MarkerLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        MarkerSize                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ZoomableLevelMap_C::SetMarkerPosition(class UCanvasPanelSlot* Slot_0, const struct FVector& MarkerLocation, const struct FVector2D& MarkerSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "SetMarkerPosition");

	Params::UI_ZoomableLevelMap_C_SetMarkerPosition Parms{};

	Parms.Slot_0 = Slot_0;
	Parms.MarkerLocation = std::move(MarkerLocation);
	Parms.MarkerSize = std::move(MarkerSize);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.IsLocationFocused
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   X                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Y                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ErrorTolerance                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
// float                                   Distance                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UUI_ZoomableLevelMap_C::IsLocationFocused(float X, float Y, float ErrorTolerance, float* Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "IsLocationFocused");

	Params::UI_ZoomableLevelMap_C_IsLocationFocused Parms{};

	Parms.X = X;
	Parms.Y = Y;
	Parms.ErrorTolerance = ErrorTolerance;

	UObject::ProcessEvent(Func, &Parms);

	if (Distance != nullptr)
		*Distance = Parms.Distance;

	return Parms.ReturnValue;
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.Pixel2Meter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Pixel                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Meter                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ZoomableLevelMap_C::Pixel2Meter(float Pixel, float* Meter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "Pixel2Meter");

	Params::UI_ZoomableLevelMap_C_Pixel2Meter Parms{};

	Parms.Pixel = Pixel;

	UObject::ProcessEvent(Func, &Parms);

	if (Meter != nullptr)
		*Meter = Parms.Meter;
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.Meter2Pixel
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Meter                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Pixel                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ZoomableLevelMap_C::Meter2Pixel(float Meter, float* Pixel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "Meter2Pixel");

	Params::UI_ZoomableLevelMap_C_Meter2Pixel Parms{};

	Parms.Meter = Meter;

	UObject::ProcessEvent(Func, &Parms);

	if (Pixel != nullptr)
		*Pixel = Parms.Pixel;
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.IconSize2Tolerance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector2D                        InVec                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsRealWorldSize                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UUI_ZoomableLevelMap_C::IconSize2Tolerance(const struct FVector2D& InVec, bool IsRealWorldSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "IconSize2Tolerance");

	Params::UI_ZoomableLevelMap_C_IconSize2Tolerance Parms{};

	Parms.InVec = std::move(InVec);
	Parms.IsRealWorldSize = IsRealWorldSize;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.GetScaleForMarkers
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Scale                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ZoomableLevelMap_C::GetScaleForMarkers(float* Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "GetScaleForMarkers");

	Params::UI_ZoomableLevelMap_C_GetScaleForMarkers Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Scale != nullptr)
		*Scale = Parms.Scale;
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.Radiation
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_ZoomableLevelMap_C::Radiation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "Radiation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.CreatePlayersMarkers
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUI_ZoomableLevelMap_C::CreatePlayersMarkers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "CreatePlayersMarkers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.CloseMap
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_ZoomableLevelMap_C::CloseMap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "CloseMap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.UpdatePositionsOfMarkersAndVisibilityOfLabel
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUI_ZoomableLevelMap_C::UpdatePositionsOfMarkersAndVisibilityOfLabel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "UpdatePositionsOfMarkersAndVisibilityOfLabel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.SelectCustomMarkerForTeams
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_ZoomableLevelMap_C::SelectCustomMarkerForTeams()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "SelectCustomMarkerForTeams");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.AutoZoom
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_ZoomableLevelMap_C::AutoZoom()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "AutoZoom");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.StopAutoZoom
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_ZoomableLevelMap_C::StopAutoZoom()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "StopAutoZoom");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.Pan
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_ZoomableLevelMap_C::Pan()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "Pan");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.GetCurrentPointerInfo
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   X                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Y                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsHoveringMap                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsTouch                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsTwoFingerTouch                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_ZoomableLevelMap_C::GetCurrentPointerInfo(float* X, float* Y, bool* IsHoveringMap, bool* IsTouch, bool* IsTwoFingerTouch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "GetCurrentPointerInfo");

	Params::UI_ZoomableLevelMap_C_GetCurrentPointerInfo Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (X != nullptr)
		*X = Parms.X;

	if (Y != nullptr)
		*Y = Parms.Y;

	if (IsHoveringMap != nullptr)
		*IsHoveringMap = Parms.IsHoveringMap;

	if (IsTouch != nullptr)
		*IsTouch = Parms.IsTouch;

	if (IsTwoFingerTouch != nullptr)
		*IsTwoFingerTouch = Parms.IsTwoFingerTouch;
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.UpdateMarker
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UImage*                           ImageWidget                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Tint                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTexture*                         Image                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        ImageSize                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Tilt                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RealWorldSize                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_ZoomableLevelMap_C::UpdateMarker(class UImage* ImageWidget, const struct FVector& Location, const struct FLinearColor& Tint, class UTexture* Image, const struct FVector2D& ImageSize, float Tilt, bool RealWorldSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "UpdateMarker");

	Params::UI_ZoomableLevelMap_C_UpdateMarker Parms{};

	Parms.ImageWidget = ImageWidget;
	Parms.Location = std::move(Location);
	Parms.Tint = std::move(Tint);
	Parms.Image = Image;
	Parms.ImageSize = std::move(ImageSize);
	Parms.Tilt = Tilt;
	Parms.RealWorldSize = RealWorldSize;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.FadeMarkers
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCurveFloat*                      Curve                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FS_CustomMapMarker_ContextUI     Marker                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ZoomableLevelMap_C::FadeMarkers(class UCurveFloat* Curve, const struct FS_CustomMapMarker_ContextUI& Marker, float DeltaTime, class FName Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "FadeMarkers");

	Params::UI_ZoomableLevelMap_C_FadeMarkers Parms{};

	Parms.Curve = Curve;
	Parms.Marker = std::move(Marker);
	Parms.DeltaTime = DeltaTime;
	Parms.Tag = Tag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.UpdatePOI
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUI_ZoomableLevelMap_C::UpdatePOI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "UpdatePOI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.SetOnScreenPosition
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ZoomableLevelMap_C::SetOnScreenPosition(class APlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "SetOnScreenPosition");

	Params::UI_ZoomableLevelMap_C_SetOnScreenPosition Parms{};

	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.Is Marker Visible
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_CustomMapMarker               Marker_Settings                                        (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool                                    Visible                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_ZoomableLevelMap_C::Is_Marker_Visible(const struct FS_CustomMapMarker& Marker_Settings, bool* Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "Is Marker Visible");

	Params::UI_ZoomableLevelMap_C_Is_Marker_Visible Parms{};

	Parms.Marker_Settings = std::move(Marker_Settings);

	UObject::ProcessEvent(Func, &Parms);

	if (Visible != nullptr)
		*Visible = Parms.Visible;
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.Is Marker Jammed
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_CustomMapMarker               Marker                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool                                    Is_Jammed                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_ZoomableLevelMap_C::Is_Marker_Jammed(const struct FS_CustomMapMarker& Marker, bool* Is_Jammed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "Is Marker Jammed");

	Params::UI_ZoomableLevelMap_C_Is_Marker_Jammed Parms{};

	Parms.Marker = std::move(Marker);

	UObject::ProcessEvent(Func, &Parms);

	if (Is_Jammed != nullptr)
		*Is_Jammed = Parms.Is_Jammed;
}


// Function UI_ZoomableLevelMap.UI_ZoomableLevelMap_C.UpdateCrosshair
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECursorMode                             TargetCrosshair                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ZoomableLevelMap_C::UpdateCrosshair(ECursorMode TargetCrosshair)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ZoomableLevelMap_C", "UpdateCrosshair");

	Params::UI_ZoomableLevelMap_C_UpdateCrosshair Parms{};

	Parms.TargetCrosshair = TargetCrosshair;

	UObject::ProcessEvent(Func, &Parms);
}

}

