#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EncounterHints_Manager

#include "Basic.hpp"

#include "Flame_structs.hpp"
#include "Engine_structs.hpp"
#include "E_HintExperienceLevel_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_EncounterHints_Manager.BP_EncounterHints_Manager_C
// 0x0098 (0x00C0 - 0x0028)
class UBP_EncounterHints_Manager_C final : public UObject
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0028(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class FName                                   TotalMatchesPlayed_CounterName;                    // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MatchesPlayedThisInstance;                         // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   TotalMatchesWon_CounterName;                       // 0x003C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MatchesWonThisInstance;                            // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalMatchesPlayed_Cloud;                          // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalMatchesWon_Cloud;                             // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_HintExperienceLevel                         PlayerExperienceLevel;                             // 0x0050(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Novice_EcountersPlayed;                            // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Novice_EcountersWon;                               // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Intermediate_EncountersPlayed;                     // 0x005C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Intermediate_EncountersWon;                        // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GameInstance_C*                     GameInstance;                                      // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              DateTime_Const;                                    // 0x0070(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FName                                   TodaysMatchesPlayed_CounterName;                   // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TodaysMatchesPlayed_Cloud;                         // 0x0080(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             DT_EncounterHints;                                 // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 EncounterHints_SaveGameSlot;                       // 0x0090(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          Intro_Played;                                      // 0x00A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Exit_Played;                                       // 0x00A1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          AirdropIncoming_Played;                            // 0x00A2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          AirDropPickedUp_Played;                            // 0x00A3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          AirDrop_PickedUpByOther_Played;                    // 0x00A4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          NearAirdrop_Played;                                // 0x00A5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          NearBarredHouse_Played;                            // 0x00A6(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          NearSignalDetector_Played;                         // 0x00A7(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          NearCommStation_Played;                            // 0x00A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          PlayerThreat_Played;                               // 0x00A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          OtherPlayerThreat_Played;                          // 0x00AA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Radiation_Played;                                  // 0x00AB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Debug_CounterUpdate;                               // 0x00AC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Debug_DailyReset;                                  // 0x00AD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Debug_CounterRecieved;                             // 0x00AE(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Debug_ExperienceLevel;                             // 0x00AF(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Debug_Chance_To_Play;                              // 0x00B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TodaysMatchesWon_Cloud;                            // 0x00B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_EncounterHints_SaveGame_C*          EH_GameSave;                                       // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_EncounterHints_Manager(int32 EntryPoint);
	void GetUserMatchesStatisticFinished(const struct FCloudRequestResult& RequestResult, ECloudUserMatchStatisticsPeriod TimePeriod, const struct FCloudUserMatchesStatistic& Data);
	void Init_DailyResetTimer();
	void DailyReset();
	void UserCounterUpdated(const struct FCloudRequestResult& RequestResult, class AHumanPlayerController* Player, ECloudUserCounterOperation Operation, const struct FCloudUserCounterValue& CounterValue);
	void UserCounterRecieved(const struct FCloudRequestResult& RequestResult, class AHumanPlayerController* Player, const struct FCloudUserCounterValue& CounterValue);
	void UpdatePlayerLevel(class ABP_PlayerController_C* PlayerController);
	void InterpretMatchEnd(class ABP_PlayerController_C* Player_Controller, const struct FUserMatchResult& MatchResults);
	void Init_EcounterHintsManager(class ABP_PlayerController_C* PlayerController, class UBP_GameInstance_C* GameInstance_0);
	void Increment_MatchesPlayed(class ABP_PlayerController_C* PlayerController);
	void EncounterHint_NearCommStation();
	void EncounterHint_NearBarredHouse();
	void EncounterHint_CookieTimerRing();
	void EncounterHint_OtherPlayerBecomesThreat(class AHumanCharacter* Killer);
	void EncounterHint_PlayerBecameThreat();
	void EncounterHint_AirdropCarriedByOther();
	void EncounterHint_PriorToAirdrop();
	void EncounterHint_NearSignalDetector();
	void EncounterHint_NearAirdrop();
	void EncounterHint_NearExitArea();
	void EncounterHint_AirdropLooted();
	void EncounterHint_MatchStart();
	void OnSaveSucceed_50C8C50448B6B802A787A1B0FE674C37(const class FString& SlotName, const int32 UserIndex);
	void OnSaveFailed_50C8C50448B6B802A787A1B0FE674C37(const class FString& SlotName, const int32 UserIndex);
	void OnLoadSucceed_9162495749B5A79B830461B5A10ECD19(class USaveGame* SaveGame);
	void OnLoadFailed_9162495749B5A79B830461B5A10ECD19(class USaveGame* SaveGame);
	void GetMatchesPlayedThisInstance(int32* MatchesPlayedThisInstance_0);
	void InterpretPlayerLevel();
	void GetNextResetTimestamp(const struct FDateTime& Cloud_Time, struct FDateTime* TimeOfNextReset);
	void GetHintsFromTableByKey(const class FString& Substring, TArray<class FName>* RowNamesWithKey);
	void GetHintWithCorrespondingLevel(TArray<class FName>& Array, class FName* HintCorrespondingToLevel);
	void SetDefaultValuesToSaveGame(bool* WasGameSaved);
	void PlayVoiceLine(TArray<TSoftObjectPtr<class USoundWave>>& Array, bool* WasPlayed);
	void ResetMatchSpecificBools();
	void GetLastHypotheticalResetTimestamp(const struct FDateTime& Cloud_Time, struct FDateTime* TimeOfLastReset);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_EncounterHints_Manager_C">();
	}
	static class UBP_EncounterHints_Manager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_EncounterHints_Manager_C>();
	}
};
static_assert(alignof(UBP_EncounterHints_Manager_C) == 0x000008, "Wrong alignment on UBP_EncounterHints_Manager_C");
static_assert(sizeof(UBP_EncounterHints_Manager_C) == 0x0000C0, "Wrong size on UBP_EncounterHints_Manager_C");
static_assert(offsetof(UBP_EncounterHints_Manager_C, UberGraphFrame) == 0x000028, "Member 'UBP_EncounterHints_Manager_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_EncounterHints_Manager_C, TotalMatchesPlayed_CounterName) == 0x000030, "Member 'UBP_EncounterHints_Manager_C::TotalMatchesPlayed_CounterName' has a wrong offset!");
static_assert(offsetof(UBP_EncounterHints_Manager_C, MatchesPlayedThisInstance) == 0x000038, "Member 'UBP_EncounterHints_Manager_C::MatchesPlayedThisInstance' has a wrong offset!");
static_assert(offsetof(UBP_EncounterHints_Manager_C, TotalMatchesWon_CounterName) == 0x00003C, "Member 'UBP_EncounterHints_Manager_C::TotalMatchesWon_CounterName' has a wrong offset!");
static_assert(offsetof(UBP_EncounterHints_Manager_C, MatchesWonThisInstance) == 0x000044, "Member 'UBP_EncounterHints_Manager_C::MatchesWonThisInstance' has a wrong offset!");
static_assert(offsetof(UBP_EncounterHints_Manager_C, TotalMatchesPlayed_Cloud) == 0x000048, "Member 'UBP_EncounterHints_Manager_C::TotalMatchesPlayed_Cloud' has a wrong offset!");
static_assert(offsetof(UBP_EncounterHints_Manager_C, TotalMatchesWon_Cloud) == 0x00004C, "Member 'UBP_EncounterHints_Manager_C::TotalMatchesWon_Cloud' has a wrong offset!");
static_assert(offsetof(UBP_EncounterHints_Manager_C, PlayerExperienceLevel) == 0x000050, "Member 'UBP_EncounterHints_Manager_C::PlayerExperienceLevel' has a wrong offset!");
static_assert(offsetof(UBP_EncounterHints_Manager_C, Novice_EcountersPlayed) == 0x000054, "Member 'UBP_EncounterHints_Manager_C::Novice_EcountersPlayed' has a wrong offset!");
static_assert(offsetof(UBP_EncounterHints_Manager_C, Novice_EcountersWon) == 0x000058, "Member 'UBP_EncounterHints_Manager_C::Novice_EcountersWon' has a wrong offset!");
static_assert(offsetof(UBP_EncounterHints_Manager_C, Intermediate_EncountersPlayed) == 0x00005C, "Member 'UBP_EncounterHints_Manager_C::Intermediate_EncountersPlayed' has a wrong offset!");
static_assert(offsetof(UBP_EncounterHints_Manager_C, Intermediate_EncountersWon) == 0x000060, "Member 'UBP_EncounterHints_Manager_C::Intermediate_EncountersWon' has a wrong offset!");
static_assert(offsetof(UBP_EncounterHints_Manager_C, GameInstance) == 0x000068, "Member 'UBP_EncounterHints_Manager_C::GameInstance' has a wrong offset!");
static_assert(offsetof(UBP_EncounterHints_Manager_C, DateTime_Const) == 0x000070, "Member 'UBP_EncounterHints_Manager_C::DateTime_Const' has a wrong offset!");
static_assert(offsetof(UBP_EncounterHints_Manager_C, TodaysMatchesPlayed_CounterName) == 0x000078, "Member 'UBP_EncounterHints_Manager_C::TodaysMatchesPlayed_CounterName' has a wrong offset!");
static_assert(offsetof(UBP_EncounterHints_Manager_C, TodaysMatchesPlayed_Cloud) == 0x000080, "Member 'UBP_EncounterHints_Manager_C::TodaysMatchesPlayed_Cloud' has a wrong offset!");
static_assert(offsetof(UBP_EncounterHints_Manager_C, DT_EncounterHints) == 0x000088, "Member 'UBP_EncounterHints_Manager_C::DT_EncounterHints' has a wrong offset!");
static_assert(offsetof(UBP_EncounterHints_Manager_C, EncounterHints_SaveGameSlot) == 0x000090, "Member 'UBP_EncounterHints_Manager_C::EncounterHints_SaveGameSlot' has a wrong offset!");
static_assert(offsetof(UBP_EncounterHints_Manager_C, Intro_Played) == 0x0000A0, "Member 'UBP_EncounterHints_Manager_C::Intro_Played' has a wrong offset!");
static_assert(offsetof(UBP_EncounterHints_Manager_C, Exit_Played) == 0x0000A1, "Member 'UBP_EncounterHints_Manager_C::Exit_Played' has a wrong offset!");
static_assert(offsetof(UBP_EncounterHints_Manager_C, AirdropIncoming_Played) == 0x0000A2, "Member 'UBP_EncounterHints_Manager_C::AirdropIncoming_Played' has a wrong offset!");
static_assert(offsetof(UBP_EncounterHints_Manager_C, AirDropPickedUp_Played) == 0x0000A3, "Member 'UBP_EncounterHints_Manager_C::AirDropPickedUp_Played' has a wrong offset!");
static_assert(offsetof(UBP_EncounterHints_Manager_C, AirDrop_PickedUpByOther_Played) == 0x0000A4, "Member 'UBP_EncounterHints_Manager_C::AirDrop_PickedUpByOther_Played' has a wrong offset!");
static_assert(offsetof(UBP_EncounterHints_Manager_C, NearAirdrop_Played) == 0x0000A5, "Member 'UBP_EncounterHints_Manager_C::NearAirdrop_Played' has a wrong offset!");
static_assert(offsetof(UBP_EncounterHints_Manager_C, NearBarredHouse_Played) == 0x0000A6, "Member 'UBP_EncounterHints_Manager_C::NearBarredHouse_Played' has a wrong offset!");
static_assert(offsetof(UBP_EncounterHints_Manager_C, NearSignalDetector_Played) == 0x0000A7, "Member 'UBP_EncounterHints_Manager_C::NearSignalDetector_Played' has a wrong offset!");
static_assert(offsetof(UBP_EncounterHints_Manager_C, NearCommStation_Played) == 0x0000A8, "Member 'UBP_EncounterHints_Manager_C::NearCommStation_Played' has a wrong offset!");
static_assert(offsetof(UBP_EncounterHints_Manager_C, PlayerThreat_Played) == 0x0000A9, "Member 'UBP_EncounterHints_Manager_C::PlayerThreat_Played' has a wrong offset!");
static_assert(offsetof(UBP_EncounterHints_Manager_C, OtherPlayerThreat_Played) == 0x0000AA, "Member 'UBP_EncounterHints_Manager_C::OtherPlayerThreat_Played' has a wrong offset!");
static_assert(offsetof(UBP_EncounterHints_Manager_C, Radiation_Played) == 0x0000AB, "Member 'UBP_EncounterHints_Manager_C::Radiation_Played' has a wrong offset!");
static_assert(offsetof(UBP_EncounterHints_Manager_C, Debug_CounterUpdate) == 0x0000AC, "Member 'UBP_EncounterHints_Manager_C::Debug_CounterUpdate' has a wrong offset!");
static_assert(offsetof(UBP_EncounterHints_Manager_C, Debug_DailyReset) == 0x0000AD, "Member 'UBP_EncounterHints_Manager_C::Debug_DailyReset' has a wrong offset!");
static_assert(offsetof(UBP_EncounterHints_Manager_C, Debug_CounterRecieved) == 0x0000AE, "Member 'UBP_EncounterHints_Manager_C::Debug_CounterRecieved' has a wrong offset!");
static_assert(offsetof(UBP_EncounterHints_Manager_C, Debug_ExperienceLevel) == 0x0000AF, "Member 'UBP_EncounterHints_Manager_C::Debug_ExperienceLevel' has a wrong offset!");
static_assert(offsetof(UBP_EncounterHints_Manager_C, Debug_Chance_To_Play) == 0x0000B0, "Member 'UBP_EncounterHints_Manager_C::Debug_Chance_To_Play' has a wrong offset!");
static_assert(offsetof(UBP_EncounterHints_Manager_C, TodaysMatchesWon_Cloud) == 0x0000B4, "Member 'UBP_EncounterHints_Manager_C::TodaysMatchesWon_Cloud' has a wrong offset!");
static_assert(offsetof(UBP_EncounterHints_Manager_C, EH_GameSave) == 0x0000B8, "Member 'UBP_EncounterHints_Manager_C::EH_GameSave' has a wrong offset!");

}

