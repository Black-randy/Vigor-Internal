#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PCComponent_ADM_BuriedCache

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_PCComponent_ADM_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PCComponent_ADM_BuriedCache.BP_PCComponent_ADM_BuriedCache_C
// 0x0050 (0x0138 - 0x00E8)
class UBP_PCComponent_ADM_BuriedCache_C final : public UBP_PCComponent_ADM_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_PCComponent_ADM_BuriedCache_C;   // 0x00E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UUI_ADM_BuriedCache_Polaroid_C*         Polaroid_UI;                                       // 0x00F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Delayed_Polaroid_UI_Closure_Timer;                 // 0x00F8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UUI_ItemGridSlot_C*                     Last_Requesting_Slot;                              // 0x0100(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Ignoring_Closure_by_Others_than_Last_Slot;         // 0x0108(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UClass*>                         Observed_Polaroids;                                // 0x0110(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class ABP_ADM_BuriedCache_C*>          Accessed_Caches;                                   // 0x0120(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	bool                                          Challenge_for_looting_triggered;                   // 0x0130(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_PCComponent_ADM_BuriedCache(int32 EntryPoint);
	void Add_buried_cache_map_marker(const struct FVector& Location);
	void Polaroid_Observed_for_Relevant_Time(class UClass* Polaroid);
	void Cache_Accessed(class ABP_ADM_BuriedCache_C* Cache, bool Already_Excavated, class UClass* Associated_Polaroid, bool Locked);
	void Bag_Item_Stored(TSubclassOf<class AItemForBackpack> BagItemClass, int32 Count);
	void Character_Possessed_on_Server(class ABP_Character_C* Possessed_Character);
	void Item_Destroyed(class UClass* Item_Type, class UClass* Widget_Type);
	void ReceiveBeginPlay();
	void Clear_Ignoring_Flag();
	void Delayed_Polaroid_UI_Closure();
	void Close_Polaroid_UI(class UUI_ItemGridSlot_C* Requesting_Slot);
	void Open_Polariod_UI(const class UClass*& Polaroid_Item, class UUI_ItemGridSlot_C* Requesting_Slot);
	void Mark_Buried_Cache_Key_Locations();
	void Mark_Dummy_Cache_Locations();
	void Mark_Chosen_Cache_Locations();
	void Get_Buried_Cache_Key();
	void Spawn_All_Caches();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PCComponent_ADM_BuriedCache_C">();
	}
	static class UBP_PCComponent_ADM_BuriedCache_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_PCComponent_ADM_BuriedCache_C>();
	}
};
static_assert(alignof(UBP_PCComponent_ADM_BuriedCache_C) == 0x000008, "Wrong alignment on UBP_PCComponent_ADM_BuriedCache_C");
static_assert(sizeof(UBP_PCComponent_ADM_BuriedCache_C) == 0x000138, "Wrong size on UBP_PCComponent_ADM_BuriedCache_C");
static_assert(offsetof(UBP_PCComponent_ADM_BuriedCache_C, UberGraphFrame_BP_PCComponent_ADM_BuriedCache_C) == 0x0000E8, "Member 'UBP_PCComponent_ADM_BuriedCache_C::UberGraphFrame_BP_PCComponent_ADM_BuriedCache_C' has a wrong offset!");
static_assert(offsetof(UBP_PCComponent_ADM_BuriedCache_C, Polaroid_UI) == 0x0000F0, "Member 'UBP_PCComponent_ADM_BuriedCache_C::Polaroid_UI' has a wrong offset!");
static_assert(offsetof(UBP_PCComponent_ADM_BuriedCache_C, Delayed_Polaroid_UI_Closure_Timer) == 0x0000F8, "Member 'UBP_PCComponent_ADM_BuriedCache_C::Delayed_Polaroid_UI_Closure_Timer' has a wrong offset!");
static_assert(offsetof(UBP_PCComponent_ADM_BuriedCache_C, Last_Requesting_Slot) == 0x000100, "Member 'UBP_PCComponent_ADM_BuriedCache_C::Last_Requesting_Slot' has a wrong offset!");
static_assert(offsetof(UBP_PCComponent_ADM_BuriedCache_C, Ignoring_Closure_by_Others_than_Last_Slot) == 0x000108, "Member 'UBP_PCComponent_ADM_BuriedCache_C::Ignoring_Closure_by_Others_than_Last_Slot' has a wrong offset!");
static_assert(offsetof(UBP_PCComponent_ADM_BuriedCache_C, Observed_Polaroids) == 0x000110, "Member 'UBP_PCComponent_ADM_BuriedCache_C::Observed_Polaroids' has a wrong offset!");
static_assert(offsetof(UBP_PCComponent_ADM_BuriedCache_C, Accessed_Caches) == 0x000120, "Member 'UBP_PCComponent_ADM_BuriedCache_C::Accessed_Caches' has a wrong offset!");
static_assert(offsetof(UBP_PCComponent_ADM_BuriedCache_C, Challenge_for_looting_triggered) == 0x000130, "Member 'UBP_PCComponent_ADM_BuriedCache_C::Challenge_for_looting_triggered' has a wrong offset!");

}

