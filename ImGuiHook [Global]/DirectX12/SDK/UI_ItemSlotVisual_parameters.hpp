#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_ItemSlotVisual

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function UI_ItemSlotVisual.UI_ItemSlotVisual_C.ExecuteUbergraph_UI_ItemSlotVisual
// 0x0038 (0x0038 - 0x0000)
struct UI_ItemSlotVisual_C_ExecuteUbergraph_UI_ItemSlotVisual final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         K2Node_Event_InCount;                              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Decimal_to_Short_Format_FormattedValue;   // 0x0018(0x0018)()
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ItemSlotVisual_C_ExecuteUbergraph_UI_ItemSlotVisual) == 0x000008, "Wrong alignment on UI_ItemSlotVisual_C_ExecuteUbergraph_UI_ItemSlotVisual");
static_assert(sizeof(UI_ItemSlotVisual_C_ExecuteUbergraph_UI_ItemSlotVisual) == 0x000038, "Wrong size on UI_ItemSlotVisual_C_ExecuteUbergraph_UI_ItemSlotVisual");
static_assert(offsetof(UI_ItemSlotVisual_C_ExecuteUbergraph_UI_ItemSlotVisual, EntryPoint) == 0x000000, "Member 'UI_ItemSlotVisual_C_ExecuteUbergraph_UI_ItemSlotVisual::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_ItemSlotVisual_C_ExecuteUbergraph_UI_ItemSlotVisual, Temp_bool_Variable) == 0x000004, "Member 'UI_ItemSlotVisual_C_ExecuteUbergraph_UI_ItemSlotVisual::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_ItemSlotVisual_C_ExecuteUbergraph_UI_ItemSlotVisual, Temp_byte_Variable) == 0x000005, "Member 'UI_ItemSlotVisual_C_ExecuteUbergraph_UI_ItemSlotVisual::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_ItemSlotVisual_C_ExecuteUbergraph_UI_ItemSlotVisual, Temp_byte_Variable_1) == 0x000006, "Member 'UI_ItemSlotVisual_C_ExecuteUbergraph_UI_ItemSlotVisual::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_ItemSlotVisual_C_ExecuteUbergraph_UI_ItemSlotVisual, K2Node_Event_IsDesignTime) == 0x000007, "Member 'UI_ItemSlotVisual_C_ExecuteUbergraph_UI_ItemSlotVisual::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_ItemSlotVisual_C_ExecuteUbergraph_UI_ItemSlotVisual, K2Node_Event_InCount) == 0x000008, "Member 'UI_ItemSlotVisual_C_ExecuteUbergraph_UI_ItemSlotVisual::K2Node_Event_InCount' has a wrong offset!");
static_assert(offsetof(UI_ItemSlotVisual_C_ExecuteUbergraph_UI_ItemSlotVisual, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00000C, "Member 'UI_ItemSlotVisual_C_ExecuteUbergraph_UI_ItemSlotVisual::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ItemSlotVisual_C_ExecuteUbergraph_UI_ItemSlotVisual, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000010, "Member 'UI_ItemSlotVisual_C_ExecuteUbergraph_UI_ItemSlotVisual::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ItemSlotVisual_C_ExecuteUbergraph_UI_ItemSlotVisual, CallFunc_Decimal_to_Short_Format_FormattedValue) == 0x000018, "Member 'UI_ItemSlotVisual_C_ExecuteUbergraph_UI_ItemSlotVisual::CallFunc_Decimal_to_Short_Format_FormattedValue' has a wrong offset!");
static_assert(offsetof(UI_ItemSlotVisual_C_ExecuteUbergraph_UI_ItemSlotVisual, K2Node_Select_Default) == 0x000030, "Member 'UI_ItemSlotVisual_C_ExecuteUbergraph_UI_ItemSlotVisual::K2Node_Select_Default' has a wrong offset!");

// Function UI_ItemSlotVisual.UI_ItemSlotVisual_C.SetCount
// 0x0004 (0x0004 - 0x0000)
struct UI_ItemSlotVisual_C_SetCount final
{
public:
	int32                                         InCount;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ItemSlotVisual_C_SetCount) == 0x000004, "Wrong alignment on UI_ItemSlotVisual_C_SetCount");
static_assert(sizeof(UI_ItemSlotVisual_C_SetCount) == 0x000004, "Wrong size on UI_ItemSlotVisual_C_SetCount");
static_assert(offsetof(UI_ItemSlotVisual_C_SetCount, InCount) == 0x000000, "Member 'UI_ItemSlotVisual_C_SetCount::InCount' has a wrong offset!");

// Function UI_ItemSlotVisual.UI_ItemSlotVisual_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_ItemSlotVisual_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_ItemSlotVisual_C_PreConstruct) == 0x000001, "Wrong alignment on UI_ItemSlotVisual_C_PreConstruct");
static_assert(sizeof(UI_ItemSlotVisual_C_PreConstruct) == 0x000001, "Wrong size on UI_ItemSlotVisual_C_PreConstruct");
static_assert(offsetof(UI_ItemSlotVisual_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_ItemSlotVisual_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_ItemSlotVisual.UI_ItemSlotVisual_C.SetSlotQuantityText
// 0x0018 (0x0018 - 0x0000)
struct UI_ItemSlotVisual_C_SetSlotQuantityText final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(UI_ItemSlotVisual_C_SetSlotQuantityText) == 0x000008, "Wrong alignment on UI_ItemSlotVisual_C_SetSlotQuantityText");
static_assert(sizeof(UI_ItemSlotVisual_C_SetSlotQuantityText) == 0x000018, "Wrong size on UI_ItemSlotVisual_C_SetSlotQuantityText");
static_assert(offsetof(UI_ItemSlotVisual_C_SetSlotQuantityText, InText) == 0x000000, "Member 'UI_ItemSlotVisual_C_SetSlotQuantityText::InText' has a wrong offset!");

// Function UI_ItemSlotVisual.UI_ItemSlotVisual_C.SetSlotBackgroundColor
// 0x0010 (0x0010 - 0x0000)
struct UI_ItemSlotVisual_C_SetSlotBackgroundColor final
{
public:
	struct FLinearColor                           InColorAndOpacity;                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ItemSlotVisual_C_SetSlotBackgroundColor) == 0x000004, "Wrong alignment on UI_ItemSlotVisual_C_SetSlotBackgroundColor");
static_assert(sizeof(UI_ItemSlotVisual_C_SetSlotBackgroundColor) == 0x000010, "Wrong size on UI_ItemSlotVisual_C_SetSlotBackgroundColor");
static_assert(offsetof(UI_ItemSlotVisual_C_SetSlotBackgroundColor, InColorAndOpacity) == 0x000000, "Member 'UI_ItemSlotVisual_C_SetSlotBackgroundColor::InColorAndOpacity' has a wrong offset!");

// Function UI_ItemSlotVisual.UI_ItemSlotVisual_C.SetSlotIcon
// 0x0018 (0x0018 - 0x0000)
struct UI_ItemSlotVisual_C_SetSlotIcon final
{
public:
	class UTexture2D*                             Texture;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bMatchSize;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Scale;                                             // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ItemSlotVisual_C_SetSlotIcon) == 0x000008, "Wrong alignment on UI_ItemSlotVisual_C_SetSlotIcon");
static_assert(sizeof(UI_ItemSlotVisual_C_SetSlotIcon) == 0x000018, "Wrong size on UI_ItemSlotVisual_C_SetSlotIcon");
static_assert(offsetof(UI_ItemSlotVisual_C_SetSlotIcon, Texture) == 0x000000, "Member 'UI_ItemSlotVisual_C_SetSlotIcon::Texture' has a wrong offset!");
static_assert(offsetof(UI_ItemSlotVisual_C_SetSlotIcon, bMatchSize) == 0x000008, "Member 'UI_ItemSlotVisual_C_SetSlotIcon::bMatchSize' has a wrong offset!");
static_assert(offsetof(UI_ItemSlotVisual_C_SetSlotIcon, Scale) == 0x00000C, "Member 'UI_ItemSlotVisual_C_SetSlotIcon::Scale' has a wrong offset!");
static_assert(offsetof(UI_ItemSlotVisual_C_SetSlotIcon, CallFunc_MakeVector2D_ReturnValue) == 0x000010, "Member 'UI_ItemSlotVisual_C_SetSlotIcon::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function UI_ItemSlotVisual.UI_ItemSlotVisual_C.SetSlotIconLocation
// 0x0024 (0x0024 - 0x0000)
struct UI_ItemSlotVisual_C_SetSlotIconLocation final
{
public:
	struct FVector2D                              In_Transform_Translation;                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWidgetTransform                       K2Node_MakeStruct_WidgetTransform;                 // 0x0008(0x001C)(NoDestructor)
};
static_assert(alignof(UI_ItemSlotVisual_C_SetSlotIconLocation) == 0x000004, "Wrong alignment on UI_ItemSlotVisual_C_SetSlotIconLocation");
static_assert(sizeof(UI_ItemSlotVisual_C_SetSlotIconLocation) == 0x000024, "Wrong size on UI_ItemSlotVisual_C_SetSlotIconLocation");
static_assert(offsetof(UI_ItemSlotVisual_C_SetSlotIconLocation, In_Transform_Translation) == 0x000000, "Member 'UI_ItemSlotVisual_C_SetSlotIconLocation::In_Transform_Translation' has a wrong offset!");
static_assert(offsetof(UI_ItemSlotVisual_C_SetSlotIconLocation, K2Node_MakeStruct_WidgetTransform) == 0x000008, "Member 'UI_ItemSlotVisual_C_SetSlotIconLocation::K2Node_MakeStruct_WidgetTransform' has a wrong offset!");

// Function UI_ItemSlotVisual.UI_ItemSlotVisual_C.HoverIcon
// 0x0088 (0x0088 - 0x0000)
struct UI_ItemSlotVisual_C_HoverIcon final
{
public:
	bool                                          IsHovered_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0008(0x0028)()
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0038(0x0028)()
	struct FSlateColor                            K2Node_Select_Default;                             // 0x0060(0x0028)()
};
static_assert(alignof(UI_ItemSlotVisual_C_HoverIcon) == 0x000008, "Wrong alignment on UI_ItemSlotVisual_C_HoverIcon");
static_assert(sizeof(UI_ItemSlotVisual_C_HoverIcon) == 0x000088, "Wrong size on UI_ItemSlotVisual_C_HoverIcon");
static_assert(offsetof(UI_ItemSlotVisual_C_HoverIcon, IsHovered_0) == 0x000000, "Member 'UI_ItemSlotVisual_C_HoverIcon::IsHovered_0' has a wrong offset!");
static_assert(offsetof(UI_ItemSlotVisual_C_HoverIcon, K2Node_MakeStruct_SlateColor) == 0x000008, "Member 'UI_ItemSlotVisual_C_HoverIcon::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(UI_ItemSlotVisual_C_HoverIcon, Temp_bool_Variable) == 0x000030, "Member 'UI_ItemSlotVisual_C_HoverIcon::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_ItemSlotVisual_C_HoverIcon, K2Node_MakeStruct_SlateColor_1) == 0x000038, "Member 'UI_ItemSlotVisual_C_HoverIcon::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(UI_ItemSlotVisual_C_HoverIcon, K2Node_Select_Default) == 0x000060, "Member 'UI_ItemSlotVisual_C_HoverIcon::K2Node_Select_Default' has a wrong offset!");

}

