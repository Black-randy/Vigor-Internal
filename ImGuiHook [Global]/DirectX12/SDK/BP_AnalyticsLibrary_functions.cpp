#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AnalyticsLibrary

#include "Basic.hpp"

#include "BP_AnalyticsLibrary_classes.hpp"
#include "BP_AnalyticsLibrary_parameters.hpp"


namespace SDK
{

// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set User ID
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Analytics_User_ID                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_User_ID(class UJsonObject* Target, const class FString& FieldName, const class FString& Analytics_User_ID, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set User ID");

	Params::BP_AnalyticsLibrary_C_Set_User_ID Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Analytics_User_ID = std::move(Analytics_User_ID);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Match ID
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Match_ID(class UJsonObject* Target, const class FString& FieldName, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Match ID");

	Params::BP_AnalyticsLibrary_C_Set_Match_ID Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Version Number
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Version_Number(class UJsonObject* Target, const class FString& FieldName, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Version Number");

	Params::BP_AnalyticsLibrary_C_Set_Version_Number Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Time Since App Start
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Time_Since_App_Start(class UJsonObject* Target, const class FString& FieldName, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Time Since App Start");

	Params::BP_AnalyticsLibrary_C_Set_Time_Since_App_Start Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Tutorial Step Completed
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Tutorial_Step_ID                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Tutorial_Step_Completed(class UJsonObject* Target, int32 Tutorial_Step_ID, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Tutorial Step Completed");

	Params::BP_AnalyticsLibrary_C_Set_Tutorial_Step_Completed Parms{};

	Parms.Target = Target;
	Parms.Tutorial_Step_ID = Tutorial_Step_ID;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Level Name
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Level_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Level_Name(class UJsonObject* Target, const class FString& FieldName, const class FString& Level_Name, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Level Name");

	Params::BP_AnalyticsLibrary_C_Set_Level_Name Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Level_Name = std::move(Level_Name);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Matchmaking Waiting Time
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   Waiting_Time                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Matchmaking_Waiting_Time(class UJsonObject* Target, const class FString& FieldName, int32 Waiting_Time, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Matchmaking Waiting Time");

	Params::BP_AnalyticsLibrary_C_Set_Matchmaking_Waiting_Time Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Waiting_Time = Waiting_Time;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Elapsed Match Time
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Elapsed_Match_Time(class UJsonObject* Target, const class FString& FieldName, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Elapsed Match Time");

	Params::BP_AnalyticsLibrary_C_Set_Elapsed_Match_Time Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Vector Field
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Field_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FVector                          Vector                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Rounding_Factor                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Vector_Field(class UJsonObject* Target, const class FString& Field_Name, const struct FVector& Vector, float Rounding_Factor, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Vector Field");

	Params::BP_AnalyticsLibrary_C_Set_Vector_Field Parms{};

	Parms.Target = Target;
	Parms.Field_Name = std::move(Field_Name);
	Parms.Vector = std::move(Vector);
	Parms.Rounding_Factor = Rounding_Factor;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Location of Spawned Player
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Field_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class ACharacter*                       Spawned_Character                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Location_of_Spawned_Player(class UJsonObject* Target, const class FString& Field_Name, class ACharacter* Spawned_Character, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Location of Spawned Player");

	Params::BP_AnalyticsLibrary_C_Set_Location_of_Spawned_Player Parms{};

	Parms.Target = Target;
	Parms.Field_Name = std::move(Field_Name);
	Parms.Spawned_Character = Spawned_Character;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Weapon Name
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UClass*                           Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Weapon_Name(class UJsonObject* Target, const class FString& FieldName, class UClass* Item, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Weapon Name");

	Params::BP_AnalyticsLibrary_C_Set_Weapon_Name Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Item = Item;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Equipment Value
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UInventoryComponent*              Inventory                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Equipment_Value(class UJsonObject* Target, const class FString& FieldName, class UInventoryComponent* Inventory, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Equipment Value");

	Params::BP_AnalyticsLibrary_C_Set_Equipment_Value Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Inventory = Inventory;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Location of Victim
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Field_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class ACharacter*                       Victim                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Location_of_Victim(class UJsonObject* Target, const class FString& Field_Name, class ACharacter* Victim, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Location of Victim");

	Params::BP_AnalyticsLibrary_C_Set_Location_of_Victim Parms{};

	Parms.Target = Target;
	Parms.Field_Name = std::move(Field_Name);
	Parms.Victim = Victim;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Location of Killer
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Field_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class ACharacter*                       Killer                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Location_of_Killer(class UJsonObject* Target, const class FString& Field_Name, class ACharacter* Killer, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Location of Killer");

	Params::BP_AnalyticsLibrary_C_Set_Location_of_Killer Parms{};

	Parms.Target = Target;
	Parms.Field_Name = std::move(Field_Name);
	Parms.Killer = Killer;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Tutorial Step Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Tutorial_Step_ID                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Tutorial_Step_Event(int32 Tutorial_Step_ID, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Tutorial Step Event");

	Params::BP_AnalyticsLibrary_C_Send_Tutorial_Step_Event Parms{};

	Parms.Tutorial_Step_ID = Tutorial_Step_ID;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Join Requested Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Level_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    LoneWolfButtonState                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Matchmaking_Slot                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    QuickPlay                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Join_Requested_Event(const class FString& Level_Name, bool LoneWolfButtonState, int32 Matchmaking_Slot, bool QuickPlay, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Join Requested Event");

	Params::BP_AnalyticsLibrary_C_Send_Join_Requested_Event Parms{};

	Parms.Level_Name = std::move(Level_Name);
	Parms.LoneWolfButtonState = LoneWolfButtonState;
	Parms.Matchmaking_Slot = Matchmaking_Slot;
	Parms.QuickPlay = QuickPlay;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Join Cancelled Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Level_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   Waiting_Time                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Join_Cancelled_Event(const class FString& Level_Name, int32 Waiting_Time, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Join Cancelled Event");

	Params::BP_AnalyticsLibrary_C_Send_Join_Cancelled_Event Parms{};

	Parms.Level_Name = std::move(Level_Name);
	Parms.Waiting_Time = Waiting_Time;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Player Spawned Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHumanCharacter*                  Spawned_Player                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             SpawnPointName                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Player_Spawned_Event(class AHumanCharacter* Spawned_Player, class FName SpawnPointName, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Player Spawned Event");

	Params::BP_AnalyticsLibrary_C_Send_Player_Spawned_Event Parms{};

	Parms.Spawned_Player = Spawned_Player;
	Parms.SpawnPointName = SpawnPointName;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Inventory Weapons Count
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UInventoryComponent*              Inventory                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Inventory_Weapons_Count(class UJsonObject* Target, const class FString& FieldName, class UInventoryComponent* Inventory, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Inventory Weapons Count");

	Params::BP_AnalyticsLibrary_C_Set_Inventory_Weapons_Count Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Inventory = Inventory;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Player Scored Kill Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHumanCharacter*                  Killer                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AHumanCharacter*                  Victim                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           Instigating_Item                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Headshot                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Teamkill                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Player_Scored_Kill_Event(class AHumanCharacter* Killer, class AHumanCharacter* Victim, class UClass* Instigating_Item, bool Headshot, bool Teamkill, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Player Scored Kill Event");

	Params::BP_AnalyticsLibrary_C_Send_Player_Scored_Kill_Event Parms{};

	Parms.Killer = Killer;
	Parms.Victim = Victim;
	Parms.Instigating_Item = Instigating_Item;
	Parms.Headshot = Headshot;
	Parms.Teamkill = Teamkill;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Kill Distance
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class ACharacter*                       Killer                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AHumanCharacter*                  Victim                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Kill_Distance(class UJsonObject* Target, const class FString& FieldName, class ACharacter* Killer, class AHumanCharacter* Victim, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Kill Distance");

	Params::BP_AnalyticsLibrary_C_Set_Kill_Distance Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Killer = Killer;
	Parms.Victim = Victim;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Player Results Event
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Player_Escaped                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Player_Won                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FString                           Exit_Name                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Exit_Prevented_Radiation_Kill                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UInventoryComponent*              Inventory                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Accuracy                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerState*                     Player_State                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class FString>                   Rewards                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<struct FCloudBattlePassMatchEventInfo>Events                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// int32                                   Distance_Traveled                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Meaningful_Distance_Traveled                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   TotalTeamScore                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Average_Ping                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Player_Results_Event(bool Player_Escaped, bool Player_Won, const class FString& Exit_Name, bool Exit_Prevented_Radiation_Kill, class UInventoryComponent* Inventory, int32 Accuracy, class APlayerState* Player_State, TArray<class FString>& Rewards, TArray<struct FCloudBattlePassMatchEventInfo>& Events, int32 Distance_Traveled, int32 Meaningful_Distance_Traveled, int32 TotalTeamScore, float Average_Ping, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Player Results Event");

	Params::BP_AnalyticsLibrary_C_Send_Player_Results_Event Parms{};

	Parms.Player_Escaped = Player_Escaped;
	Parms.Player_Won = Player_Won;
	Parms.Exit_Name = std::move(Exit_Name);
	Parms.Exit_Prevented_Radiation_Kill = Exit_Prevented_Radiation_Kill;
	Parms.Inventory = Inventory;
	Parms.Accuracy = Accuracy;
	Parms.Player_State = Player_State;
	Parms.Rewards = std::move(Rewards);
	Parms.Events = std::move(Events);
	Parms.Distance_Traveled = Distance_Traveled;
	Parms.Meaningful_Distance_Traveled = Meaningful_Distance_Traveled;
	Parms.TotalTeamScore = TotalTeamScore;
	Parms.Average_Ping = Average_Ping;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Rewards = std::move(Parms.Rewards);
	Events = std::move(Parms.Events);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Player Death Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHumanCharacter*                  Victim                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AHumanCharacter*                  Killer                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ECloudDeathCauseType                    Cause_of_Death                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           Instigating_Item                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Player_Death_Event(class AHumanCharacter* Victim, class AHumanCharacter* Killer, ECloudDeathCauseType Cause_of_Death, class UClass* Instigating_Item, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Player Death Event");

	Params::BP_AnalyticsLibrary_C_Send_Player_Death_Event Parms{};

	Parms.Victim = Victim;
	Parms.Killer = Killer;
	Parms.Cause_of_Death = Cause_of_Death;
	Parms.Instigating_Item = Instigating_Item;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Cause of Death
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// ECloudDeathCauseType                    Cause_of_Death                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Cause_of_Death(class UJsonObject* Target, const class FString& FieldName, ECloudDeathCauseType Cause_of_Death, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Cause of Death");

	Params::BP_AnalyticsLibrary_C_Set_Cause_of_Death Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Cause_of_Death = Cause_of_Death;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Inventory Shelter Resources Value
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UInventoryComponent*              Inventory                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerState*                     Player_State                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Inventory_Shelter_Resources_Value(class UJsonObject* Target, const class FString& FieldName, class UInventoryComponent* Inventory, class APlayerState* Player_State, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Inventory Shelter Resources Value");

	Params::BP_AnalyticsLibrary_C_Set_Inventory_Shelter_Resources_Value Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Inventory = Inventory;
	Parms.Player_State = Player_State;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Player Escaped
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Player_Escaped                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Player_Escaped(class UJsonObject* Target, const class FString& FieldName, bool Player_Escaped, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Player Escaped");

	Params::BP_AnalyticsLibrary_C_Set_Player_Escaped Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Player_Escaped = Player_Escaped;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Player Won
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Player_Won                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Player_Won(class UJsonObject* Target, const class FString& FieldName, bool Player_Won, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Player Won");

	Params::BP_AnalyticsLibrary_C_Set_Player_Won Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Player_Won = Player_Won;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Exit Name
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Exit_Name                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Exit_Name(class UJsonObject* Target, const class FString& FieldName, const class FString& Exit_Name, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Exit Name");

	Params::BP_AnalyticsLibrary_C_Set_Exit_Name Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Exit_Name = std::move(Exit_Name);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Inventory Ammo Count
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UInventoryComponent*              Inventory                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Inventory_Ammo_Count(class UJsonObject* Target, const class FString& FieldName, class UInventoryComponent* Inventory, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Inventory Ammo Count");

	Params::BP_AnalyticsLibrary_C_Set_Inventory_Ammo_Count Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Inventory = Inventory;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Inventory Consumables Count
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UInventoryComponent*              Inventory                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Inventory_Consumables_Count(class UJsonObject* Target, const class FString& FieldName, class UInventoryComponent* Inventory, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Inventory Consumables Count");

	Params::BP_AnalyticsLibrary_C_Set_Inventory_Consumables_Count Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Inventory = Inventory;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Inventory Shelter Resources List
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UInventoryComponent*              Inventory                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Inventory_Shelter_Resources_List(class UJsonObject* Target, const class FString& FieldName, class UInventoryComponent* Inventory, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Inventory Shelter Resources List");

	Params::BP_AnalyticsLibrary_C_Set_Inventory_Shelter_Resources_List Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Inventory = Inventory;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Air Drop Looted Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Drop_Zone_Name                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class AActor*                           Air_Drop_Container                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Air_Drop_Looted_Event(const class FString& Drop_Zone_Name, class AActor* Air_Drop_Container, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Air Drop Looted Event");

	Params::BP_AnalyticsLibrary_C_Send_Air_Drop_Looted_Event Parms{};

	Parms.Drop_Zone_Name = std::move(Drop_Zone_Name);
	Parms.Air_Drop_Container = Air_Drop_Container;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Drop Zone Name
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Drop_Zone_Name                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Drop_Zone_Name(class UJsonObject* Target, const class FString& FieldName, const class FString& Drop_Zone_Name, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Drop Zone Name");

	Params::BP_AnalyticsLibrary_C_Set_Drop_Zone_Name Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Drop_Zone_Name = std::move(Drop_Zone_Name);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Air Drop Location
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Field_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class AActor*                           Air_Drop_Container                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Air_Drop_Location(class UJsonObject* Target, const class FString& Field_Name, class AActor* Air_Drop_Container, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Air Drop Location");

	Params::BP_AnalyticsLibrary_C_Set_Air_Drop_Location Parms{};

	Parms.Target = Target;
	Parms.Field_Name = std::move(Field_Name);
	Parms.Air_Drop_Container = Air_Drop_Container;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Player Measures Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Elapsed_Time_Interval                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Distance_Traveled                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Start_Location                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          End_Location                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Used_Ammo                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Used_Explosives                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Used_Medkits                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Firemodes_Switched                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ladder_Used                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ADS_Used                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Time_in_UI                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Advanced_Options_Accessed                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Lootables_Accessed                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInventoryComponent*              Inventory                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AHumanCharacter*                  Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<int32>                           SecondsUnder25_Stamina                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<int32>                           SecondsAt0_Stamina                                     (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Player_Measures_Event(int32 Elapsed_Time_Interval, float Distance_Traveled, const struct FVector& Start_Location, const struct FVector& End_Location, int32 Used_Ammo, int32 Used_Explosives, int32 Used_Medkits, int32 Firemodes_Switched, bool Ladder_Used, bool ADS_Used, int32 Time_in_UI, bool Advanced_Options_Accessed, int32 Lootables_Accessed, class UInventoryComponent* Inventory, class AHumanCharacter* Character, TArray<int32>& SecondsUnder25_Stamina, TArray<int32>& SecondsAt0_Stamina, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Player Measures Event");

	Params::BP_AnalyticsLibrary_C_Send_Player_Measures_Event Parms{};

	Parms.Elapsed_Time_Interval = Elapsed_Time_Interval;
	Parms.Distance_Traveled = Distance_Traveled;
	Parms.Start_Location = std::move(Start_Location);
	Parms.End_Location = std::move(End_Location);
	Parms.Used_Ammo = Used_Ammo;
	Parms.Used_Explosives = Used_Explosives;
	Parms.Used_Medkits = Used_Medkits;
	Parms.Firemodes_Switched = Firemodes_Switched;
	Parms.Ladder_Used = Ladder_Used;
	Parms.ADS_Used = ADS_Used;
	Parms.Time_in_UI = Time_in_UI;
	Parms.Advanced_Options_Accessed = Advanced_Options_Accessed;
	Parms.Lootables_Accessed = Lootables_Accessed;
	Parms.Inventory = Inventory;
	Parms.Character = Character;
	Parms.SecondsUnder25_Stamina = std::move(SecondsUnder25_Stamina);
	Parms.SecondsAt0_Stamina = std::move(SecondsAt0_Stamina);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	SecondsUnder25_Stamina = std::move(Parms.SecondsUnder25_Stamina);
	SecondsAt0_Stamina = std::move(Parms.SecondsAt0_Stamina);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Elapsed Time Interval
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   Elapsed_Time_Interval                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Elapsed_Time_Interval(class UJsonObject* Target, const class FString& FieldName, int32 Elapsed_Time_Interval, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Elapsed Time Interval");

	Params::BP_AnalyticsLibrary_C_Set_Elapsed_Time_Interval Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Elapsed_Time_Interval = Elapsed_Time_Interval;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Distance Traveled
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// float                                   Distance_Traveled                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Distance_Traveled(class UJsonObject* Target, const class FString& FieldName, float Distance_Traveled, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Distance Traveled");

	Params::BP_AnalyticsLibrary_C_Set_Distance_Traveled Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Distance_Traveled = Distance_Traveled;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Start Location
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Field_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FVector                          Start_Location                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Start_Location(class UJsonObject* Target, const class FString& Field_Name, const struct FVector& Start_Location, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Start Location");

	Params::BP_AnalyticsLibrary_C_Set_Start_Location Parms{};

	Parms.Target = Target;
	Parms.Field_Name = std::move(Field_Name);
	Parms.Start_Location = std::move(Start_Location);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set End Location
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Field_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FVector                          End_Location                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_End_Location(class UJsonObject* Target, const class FString& Field_Name, const struct FVector& End_Location, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set End Location");

	Params::BP_AnalyticsLibrary_C_Set_End_Location Parms{};

	Parms.Target = Target;
	Parms.Field_Name = std::move(Field_Name);
	Parms.End_Location = std::move(End_Location);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Used Ammo Count
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   Used_Ammo                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Used_Ammo_Count(class UJsonObject* Target, const class FString& FieldName, int32 Used_Ammo, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Used Ammo Count");

	Params::BP_AnalyticsLibrary_C_Set_Used_Ammo_Count Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Used_Ammo = Used_Ammo;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Used Explosives Count
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   Used_Explosives                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Used_Explosives_Count(class UJsonObject* Target, const class FString& FieldName, int32 Used_Explosives, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Used Explosives Count");

	Params::BP_AnalyticsLibrary_C_Set_Used_Explosives_Count Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Used_Explosives = Used_Explosives;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Used Medkit Count
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   Used_Medkits                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Used_Medkit_Count(class UJsonObject* Target, const class FString& FieldName, int32 Used_Medkits, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Used Medkit Count");

	Params::BP_AnalyticsLibrary_C_Set_Used_Medkit_Count Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Used_Medkits = Used_Medkits;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Firemode Switched Count
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   Firemodes_Switched                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Firemode_Switched_Count(class UJsonObject* Target, const class FString& FieldName, int32 Firemodes_Switched, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Firemode Switched Count");

	Params::BP_AnalyticsLibrary_C_Set_Firemode_Switched_Count Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Firemodes_Switched = Firemodes_Switched;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Ladder Used
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Ladder_Used                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Ladder_Used(class UJsonObject* Target, const class FString& FieldName, bool Ladder_Used, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Ladder Used");

	Params::BP_AnalyticsLibrary_C_Set_Ladder_Used Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Ladder_Used = Ladder_Used;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set ADS Used
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    ADS_Used                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_ADS_Used(class UJsonObject* Target, const class FString& FieldName, bool ADS_Used, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set ADS Used");

	Params::BP_AnalyticsLibrary_C_Set_ADS_Used Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.ADS_Used = ADS_Used;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Time in UI
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   Time_in_UI                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Time_in_UI(class UJsonObject* Target, const class FString& FieldName, int32 Time_in_UI, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Time in UI");

	Params::BP_AnalyticsLibrary_C_Set_Time_in_UI Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Time_in_UI = Time_in_UI;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Advanced Options Accessed
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Advanced_Options_Accessed                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Advanced_Options_Accessed(class UJsonObject* Target, const class FString& FieldName, bool Advanced_Options_Accessed, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Advanced Options Accessed");

	Params::BP_AnalyticsLibrary_C_Set_Advanced_Options_Accessed Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Advanced_Options_Accessed = Advanced_Options_Accessed;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Player Status Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHumanPlayerController*           Player_Controller                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TMap<class UClass*, struct FLootBoxInfoCloud>Crates_Cache                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class ABP_TitlesManager_C*              Titles_Manager                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Player_Status_Event(class AHumanPlayerController* Player_Controller, TMap<class UClass*, struct FLootBoxInfoCloud>& Crates_Cache, class ABP_TitlesManager_C* Titles_Manager, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Player Status Event");

	Params::BP_AnalyticsLibrary_C_Send_Player_Status_Event Parms{};

	Parms.Player_Controller = Player_Controller;
	Parms.Crates_Cache = std::move(Crates_Cache);
	Parms.Titles_Manager = Titles_Manager;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Crates_Cache = std::move(Parms.Crates_Cache);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Stash Shelter Resources List
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class AStash*                           Stash                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Stash_Shelter_Resources_List(class UJsonObject* Target, const class FString& FieldName, class AStash* Stash, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Stash Shelter Resources List");

	Params::BP_AnalyticsLibrary_C_Set_Stash_Shelter_Resources_List Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Stash = Stash;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Stash Materials Count
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class AStash*                           Stash                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Stash_Materials_Count(class UJsonObject* Target, const class FString& FieldName, class AStash* Stash, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Stash Materials Count");

	Params::BP_AnalyticsLibrary_C_Set_Stash_Materials_Count Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Stash = Stash;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set All Firearms Count
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class AHumanPlayerController*           Player_Controller                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_All_Firearms_Count(class UJsonObject* Target, const class FString& FieldName, class AHumanPlayerController* Player_Controller, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set All Firearms Count");

	Params::BP_AnalyticsLibrary_C_Set_All_Firearms_Count Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Player_Controller = Player_Controller;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set All Ammo Count
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class AHumanPlayerController*           Player_Controller                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_All_Ammo_Count(class UJsonObject* Target, const class FString& FieldName, class AHumanPlayerController* Player_Controller, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set All Ammo Count");

	Params::BP_AnalyticsLibrary_C_Set_All_Ammo_Count Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Player_Controller = Player_Controller;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set All Consumables Count
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class AHumanPlayerController*           Player_Controller                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_All_Consumables_Count(class UJsonObject* Target, const class FString& FieldName, class AHumanPlayerController* Player_Controller, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set All Consumables Count");

	Params::BP_AnalyticsLibrary_C_Set_All_Consumables_Count Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Player_Controller = Player_Controller;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Shelter Improvements Count
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class AHumanPlayerController*           Player_Controller                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Shelter_Improvements_Count(class UJsonObject* Target, const class FString& FieldName, class AHumanPlayerController* Player_Controller, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Shelter Improvements Count");

	Params::BP_AnalyticsLibrary_C_Set_Shelter_Improvements_Count Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Player_Controller = Player_Controller;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set All Plans Count
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class AHumanPlayerController*           Player_Controller                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_All_Plans_Count(class UJsonObject* Target, const class FString& FieldName, class AHumanPlayerController* Player_Controller, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set All Plans Count");

	Params::BP_AnalyticsLibrary_C_Set_All_Plans_Count Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Player_Controller = Player_Controller;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Shelter Improved Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Shelter_Slot                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AStash*                           Stash                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Shelter_Improved_Event(class UClass* Shelter_Slot, class AStash* Stash, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Shelter Improved Event");

	Params::BP_AnalyticsLibrary_C_Send_Shelter_Improved_Event Parms{};

	Parms.Shelter_Slot = Shelter_Slot;
	Parms.Stash = Stash;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Shelter Improvement Name
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UClass*                           Shelter_Slot                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AStash*                           Stash                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Shelter_Improvement_Name(class UJsonObject* Target, const class FString& FieldName, class UClass* Shelter_Slot, class AStash* Stash, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Shelter Improvement Name");

	Params::BP_AnalyticsLibrary_C_Set_Shelter_Improvement_Name Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Shelter_Slot = Shelter_Slot;
	Parms.Stash = Stash;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Shelter Improvement Level
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UClass*                           Shelter_Slot                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AStash*                           Stash                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Shelter_Improvement_Level(class UJsonObject* Target, const class FString& FieldName, class UClass* Shelter_Slot, class AStash* Stash, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Shelter Improvement Level");

	Params::BP_AnalyticsLibrary_C_Set_Shelter_Improvement_Level Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Shelter_Slot = Shelter_Slot;
	Parms.Stash = Stash;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Shelter Improvement Resources List
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UClass*                           Shelter_Slot                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AStash*                           Stash                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Shelter_Improvement_Resources_List(class UJsonObject* Target, const class FString& FieldName, class UClass* Shelter_Slot, class AStash* Stash, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Shelter Improvement Resources List");

	Params::BP_AnalyticsLibrary_C_Set_Shelter_Improvement_Resources_List Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Shelter_Slot = Shelter_Slot;
	Parms.Stash = Stash;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Item Disassembled Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Item_Type                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Received_Materials                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Item_count                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           Shelter_Slot                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AStash*                           Stash                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Item_Disassembled_Event(class UClass* Item_Type, int32 Received_Materials, int32 Item_count, class UClass* Shelter_Slot, class AStash* Stash, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Item Disassembled Event");

	Params::BP_AnalyticsLibrary_C_Send_Item_Disassembled_Event Parms{};

	Parms.Item_Type = Item_Type;
	Parms.Received_Materials = Received_Materials;
	Parms.Item_count = Item_count;
	Parms.Shelter_Slot = Shelter_Slot;
	Parms.Stash = Stash;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Item Name
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UClass*                           Item_Type                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Item_Name(class UJsonObject* Target, const class FString& FieldName, class UClass* Item_Type, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Item Name");

	Params::BP_AnalyticsLibrary_C_Set_Item_Name Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Item_Type = Item_Type;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Received Material Count
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   Received_Mateials                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Received_Material_Count(class UJsonObject* Target, const class FString& FieldName, int32 Received_Mateials, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Received Material Count");

	Params::BP_AnalyticsLibrary_C_Set_Received_Material_Count Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Received_Mateials = Received_Mateials;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Item Crafted Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Item_Type                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Item_Crafted_Event(class UClass* Item_Type, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Item Crafted Event");

	Params::BP_AnalyticsLibrary_C_Send_Item_Crafted_Event Parms{};

	Parms.Item_Type = Item_Type;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Item Category
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UClass*                           Item_Type                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Item_Category(class UJsonObject* Target, const class FString& FieldName, class UClass* Item_Type, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Item Category");

	Params::BP_AnalyticsLibrary_C_Set_Item_Category Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Item_Type = Item_Type;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Materials Amount
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   Amount_of_Materials                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Materials_Amount(class UJsonObject* Target, const class FString& FieldName, int32 Amount_of_Materials, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Materials Amount");

	Params::BP_AnalyticsLibrary_C_Set_Materials_Amount Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Amount_of_Materials = Amount_of_Materials;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Parts Used
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Crafted_from_Parts                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Parts_Used(class UJsonObject* Target, const class FString& FieldName, bool Crafted_from_Parts, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Parts Used");

	Params::BP_AnalyticsLibrary_C_Set_Parts_Used Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Crafted_from_Parts = Crafted_from_Parts;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Crate Rewards Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Lootbox_Tier                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           Lootbox_Class                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UClass*>                   Item_Types                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<int32>                           Item_Amounts                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Crate_Rewards_Event(int32 Lootbox_Tier, class UClass* Lootbox_Class, TArray<class UClass*>& Item_Types, TArray<int32>& Item_Amounts, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Crate Rewards Event");

	Params::BP_AnalyticsLibrary_C_Send_Crate_Rewards_Event Parms{};

	Parms.Lootbox_Tier = Lootbox_Tier;
	Parms.Lootbox_Class = Lootbox_Class;
	Parms.Item_Types = std::move(Item_Types);
	Parms.Item_Amounts = std::move(Item_Amounts);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Item_Types = std::move(Parms.Item_Types);
	Item_Amounts = std::move(Parms.Item_Amounts);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Crate Tier
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   Lootbox_Tier                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Crate_Tier(class UJsonObject* Target, const class FString& FieldName, int32 Lootbox_Tier, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Crate Tier");

	Params::BP_AnalyticsLibrary_C_Set_Crate_Tier Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Lootbox_Tier = Lootbox_Tier;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set List of Rewards
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// TArray<class UClass*>                   Item_Types                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<int32>                           Item_Amounts                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_List_of_Rewards(class UJsonObject* Target, const class FString& FieldName, TArray<class UClass*>& Item_Types, TArray<int32>& Item_Amounts, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set List of Rewards");

	Params::BP_AnalyticsLibrary_C_Set_List_of_Rewards Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Item_Types = std::move(Item_Types);
	Parms.Item_Amounts = std::move(Item_Amounts);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Item_Types = std::move(Parms.Item_Types);
	Item_Amounts = std::move(Parms.Item_Amounts);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Match Start Event
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Match_Start_Event(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Match Start Event");

	Params::BP_AnalyticsLibrary_C_Send_Match_Start_Event Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Match Finished Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Had_a_Winner                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Match_Finished_Event(bool Had_a_Winner, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Match Finished Event");

	Params::BP_AnalyticsLibrary_C_Send_Match_Finished_Event Parms{};

	Parms.Had_a_Winner = Had_a_Winner;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Match Had Winner
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Had_a_Winner                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Match_Had_Winner(class UJsonObject* Target, const class FString& FieldName, bool Had_a_Winner, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Match Had Winner");

	Params::BP_AnalyticsLibrary_C_Set_Match_Had_Winner Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Had_a_Winner = Had_a_Winner;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Air Drop Landed Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Drop_Zone_Name                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class AActor*                           Air_Drop_Container                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Air_Drop_Landed_Event(const class FString& Drop_Zone_Name, class AActor* Air_Drop_Container, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Air Drop Landed Event");

	Params::BP_AnalyticsLibrary_C_Send_Air_Drop_Landed_Event Parms{};

	Parms.Drop_Zone_Name = std::move(Drop_Zone_Name);
	Parms.Air_Drop_Container = Air_Drop_Container;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Player Disconnected Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHumanPlayerController*           Player_Controller                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Player_Disconnected_Event(class AHumanPlayerController* Player_Controller, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Player Disconnected Event");

	Params::BP_AnalyticsLibrary_C_Send_Player_Disconnected_Event Parms{};

	Parms.Player_Controller = Player_Controller;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Server Measures
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Server_Measures(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Server Measures");

	Params::BP_AnalyticsLibrary_C_Send_Server_Measures Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Finish Analytics Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           EventName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UJsonObject*                      EventData                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DebugPrint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Finish_Analytics_Event(const class FString& EventName, class UJsonObject* EventData, bool DebugPrint, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Finish Analytics Event");

	Params::BP_AnalyticsLibrary_C_Finish_Analytics_Event Parms{};

	Parms.EventName = std::move(EventName);
	Parms.EventData = EventData;
	Parms.DebugPrint = DebugPrint;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Used Character Customizations
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AHumanPlayerController*           Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Used_Character_Customizations(class UJsonObject* Target, class AHumanPlayerController* Controller, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Used Character Customizations");

	Params::BP_AnalyticsLibrary_C_Set_Used_Character_Customizations Parms{};

	Parms.Target = Target;
	Parms.Controller = Controller;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Group ID from Start of the Match
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Group_ID_from_Start_of_the_Match(class UJsonObject* Target, const class FString& FieldName, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Group ID from Start of the Match");

	Params::BP_AnalyticsLibrary_C_Set_Group_ID_from_Start_of_the_Match Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Inventory Weapons List
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UInventoryComponent*              Inventory                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Inventory_Weapons_List(class UJsonObject* Target, const class FString& FieldName, class UInventoryComponent* Inventory, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Inventory Weapons List");

	Params::BP_AnalyticsLibrary_C_Set_Inventory_Weapons_List Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Inventory = Inventory;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Air Drop in Inventory
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UInventoryComponent*              Inventory                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Air_Drop_in_Inventory(class UJsonObject* Target, const class FString& FieldName, class UInventoryComponent* Inventory, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Air Drop in Inventory");

	Params::BP_AnalyticsLibrary_C_Set_Air_Drop_in_Inventory Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Inventory = Inventory;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Inventory Consumables List
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UInventoryComponent*              Inventory                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Inventory_Consumables_List(class UJsonObject* Target, const class FString& FieldName, class UInventoryComponent* Inventory, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Inventory Consumables List");

	Params::BP_AnalyticsLibrary_C_Set_Inventory_Consumables_List Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Inventory = Inventory;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Inventory Weapon Parts List
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UInventoryComponent*              Inventory                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Inventory_Weapon_Parts_List(class UJsonObject* Target, const class FString& FieldName, class UInventoryComponent* Inventory, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Inventory Weapon Parts List");

	Params::BP_AnalyticsLibrary_C_Set_Inventory_Weapon_Parts_List Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Inventory = Inventory;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Inventory Consumable Parts List
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UInventoryComponent*              Inventory                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Inventory_Consumable_Parts_List(class UJsonObject* Target, const class FString& FieldName, class UInventoryComponent* Inventory, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Inventory Consumable Parts List");

	Params::BP_AnalyticsLibrary_C_Set_Inventory_Consumable_Parts_List Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Inventory = Inventory;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Waiting for Match
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Waiting_for_Match(class UJsonObject* Target, const class FString& FieldName, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Waiting for Match");

	Params::BP_AnalyticsLibrary_C_Set_Waiting_for_Match Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Lootables Accessed
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   Lootables_Accessed                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Lootables_Accessed(class UJsonObject* Target, const class FString& FieldName, int32 Lootables_Accessed, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Lootables Accessed");

	Params::BP_AnalyticsLibrary_C_Set_Lootables_Accessed Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Lootables_Accessed = Lootables_Accessed;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Current Weapon Name
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UInventoryComponent*              Inventory                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Current_Weapon_Name(class UJsonObject* Target, const class FString& FieldName, class UInventoryComponent* Inventory, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Current Weapon Name");

	Params::BP_AnalyticsLibrary_C_Set_Current_Weapon_Name Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Inventory = Inventory;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Current Weapon Value
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UInventoryComponent*              Inventory                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Current_Weapon_Value(class UJsonObject* Target, const class FString& FieldName, class UInventoryComponent* Inventory, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Current Weapon Value");

	Params::BP_AnalyticsLibrary_C_Set_Current_Weapon_Value Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Inventory = Inventory;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set All Weapons Count
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class AHumanPlayerController*           Player_Controller                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_All_Weapons_Count(class UJsonObject* Target, const class FString& FieldName, class AHumanPlayerController* Player_Controller, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set All Weapons Count");

	Params::BP_AnalyticsLibrary_C_Set_All_Weapons_Count Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Player_Controller = Player_Controller;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Shelter Improvement Requested Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Shelter_Slot                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AStash*                           Stash                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Shelter_Improvement_Requested_Event(class UClass* Shelter_Slot, class AStash* Stash, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Shelter Improvement Requested Event");

	Params::BP_AnalyticsLibrary_C_Send_Shelter_Improvement_Requested_Event Parms{};

	Parms.Shelter_Slot = Shelter_Slot;
	Parms.Stash = Stash;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Shelter Improvement Cancelled Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Shelter_Slot                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AStash*                           Stash                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Shelter_Improvement_Cancelled_Event(class UClass* Shelter_Slot, class AStash* Stash, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Shelter Improvement Cancelled Event");

	Params::BP_AnalyticsLibrary_C_Send_Shelter_Improvement_Cancelled_Event Parms{};

	Parms.Shelter_Slot = Shelter_Slot;
	Parms.Stash = Stash;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Shelter Level Improved Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AStash*                           Stash                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Shelter_Level_Improved_Event(class AStash* Stash, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Shelter Level Improved Event");

	Params::BP_AnalyticsLibrary_C_Send_Shelter_Level_Improved_Event Parms{};

	Parms.Stash = Stash;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Shelter Level
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class AStash*                           Stash                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Shelter_Level(class UJsonObject* Target, const class FString& FieldName, class AStash* Stash, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Shelter Level");

	Params::BP_AnalyticsLibrary_C_Set_Shelter_Level Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Stash = Stash;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Item Crafting Requested Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Item_Type                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bInstaCrafted                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Crafted_from_Parts                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Used_Materials                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Used_Parts                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AStash*                           Stash                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Items_Amount                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Item_Crafting_Requested_Event(class UClass* Item_Type, bool bInstaCrafted, bool Crafted_from_Parts, int32 Used_Materials, int32 Used_Parts, class AStash* Stash, int32 Items_Amount, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Item Crafting Requested Event");

	Params::BP_AnalyticsLibrary_C_Send_Item_Crafting_Requested_Event Parms{};

	Parms.Item_Type = Item_Type;
	Parms.bInstaCrafted = bInstaCrafted;
	Parms.Crafted_from_Parts = Crafted_from_Parts;
	Parms.Used_Materials = Used_Materials;
	Parms.Used_Parts = Used_Parts;
	Parms.Stash = Stash;
	Parms.Items_Amount = Items_Amount;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Parts Amount
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   Amount_of_Parts                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Parts_Amount(class UJsonObject* Target, const class FString& FieldName, int32 Amount_of_Parts, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Parts Amount");

	Params::BP_AnalyticsLibrary_C_Set_Parts_Amount Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Amount_of_Parts = Amount_of_Parts;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Crafting Table Level
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class AStash*                           Stash                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Crafting_Table_Level(class UJsonObject* Target, const class FString& FieldName, class AStash* Stash, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Crafting Table Level");

	Params::BP_AnalyticsLibrary_C_Set_Crafting_Table_Level Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Stash = Stash;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Item Crafting Cancelled Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Item_Type                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Crafted_from_Parts                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Used_Materials                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Used_Parts                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AStash*                           Stash                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Item_Crafting_Cancelled_Event(class UClass* Item_Type, bool Crafted_from_Parts, int32 Used_Materials, int32 Used_Parts, class AStash* Stash, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Item Crafting Cancelled Event");

	Params::BP_AnalyticsLibrary_C_Send_Item_Crafting_Cancelled_Event Parms{};

	Parms.Item_Type = Item_Type;
	Parms.Crafted_from_Parts = Crafted_from_Parts;
	Parms.Used_Materials = Used_Materials;
	Parms.Used_Parts = Used_Parts;
	Parms.Stash = Stash;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Array Shelter Resources List
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// TArray<class UClass*>                   Item_Types                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<int32>                           Item_Amounts                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Array_Shelter_Resources_List(class UJsonObject* Target, const class FString& FieldName, TArray<class UClass*>& Item_Types, TArray<int32>& Item_Amounts, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Array Shelter Resources List");

	Params::BP_AnalyticsLibrary_C_Set_Array_Shelter_Resources_List Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Item_Types = std::move(Item_Types);
	Parms.Item_Amounts = std::move(Item_Amounts);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Item_Types = std::move(Parms.Item_Types);
	Item_Amounts = std::move(Parms.Item_Amounts);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Array Weapons Count
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// TArray<class UClass*>                   Item_Types                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<int32>                           Item_Amounts                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Array_Weapons_Count(class UJsonObject* Target, const class FString& FieldName, TArray<class UClass*>& Item_Types, TArray<int32>& Item_Amounts, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Array Weapons Count");

	Params::BP_AnalyticsLibrary_C_Set_Array_Weapons_Count Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Item_Types = std::move(Item_Types);
	Parms.Item_Amounts = std::move(Item_Amounts);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Item_Types = std::move(Parms.Item_Types);
	Item_Amounts = std::move(Parms.Item_Amounts);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Array Ammo Count
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// TArray<class UClass*>                   Item_Types                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<int32>                           Item_Amounts                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Array_Ammo_Count(class UJsonObject* Target, const class FString& FieldName, TArray<class UClass*>& Item_Types, TArray<int32>& Item_Amounts, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Array Ammo Count");

	Params::BP_AnalyticsLibrary_C_Set_Array_Ammo_Count Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Item_Types = std::move(Item_Types);
	Parms.Item_Amounts = std::move(Item_Amounts);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Item_Types = std::move(Parms.Item_Types);
	Item_Amounts = std::move(Parms.Item_Amounts);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Array Consumables Count
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// TArray<class UClass*>                   Item_Types                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<int32>                           Item_Amounts                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Array_Consumables_Count(class UJsonObject* Target, const class FString& FieldName, TArray<class UClass*>& Item_Types, TArray<int32>& Item_Amounts, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Array Consumables Count");

	Params::BP_AnalyticsLibrary_C_Set_Array_Consumables_Count Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Item_Types = std::move(Item_Types);
	Parms.Item_Amounts = std::move(Item_Amounts);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Item_Types = std::move(Parms.Item_Types);
	Item_Amounts = std::move(Parms.Item_Amounts);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Generator Used Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Shelter_Slot                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AStash*                           Stash                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Generator_Used_Event(class UClass* Shelter_Slot, class AStash* Stash, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Generator Used Event");

	Params::BP_AnalyticsLibrary_C_Send_Generator_Used_Event Parms{};

	Parms.Shelter_Slot = Shelter_Slot;
	Parms.Stash = Stash;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Accumulated Resource Amount
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UClass*                           Shelter_Slot                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AStash*                           Stash                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Accumulated_Resource_Amount(class UJsonObject* Target, const class FString& FieldName, class UClass* Shelter_Slot, class AStash* Stash, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Accumulated Resource Amount");

	Params::BP_AnalyticsLibrary_C_Set_Accumulated_Resource_Amount Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Shelter_Slot = Shelter_Slot;
	Parms.Stash = Stash;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Generator Capacity
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UClass*                           Shelter_Slot                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AStash*                           Stash                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Generator_Capacity(class UJsonObject* Target, const class FString& FieldName, class UClass* Shelter_Slot, class AStash* Stash, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Generator Capacity");

	Params::BP_AnalyticsLibrary_C_Set_Generator_Capacity Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Shelter_Slot = Shelter_Slot;
	Parms.Stash = Stash;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Generator Resource Name
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UClass*                           Shelter_Slot                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AStash*                           Stash                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Generator_Resource_Name(class UJsonObject* Target, const class FString& FieldName, class UClass* Shelter_Slot, class AStash* Stash, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Generator Resource Name");

	Params::BP_AnalyticsLibrary_C_Set_Generator_Resource_Name Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Shelter_Slot = Shelter_Slot;
	Parms.Stash = Stash;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Character Customized Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Customization_Slot                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           Customization                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           Customization_Variant                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Character_Customized_Event(class UClass* Customization_Slot, class UClass* Customization, class UClass* Customization_Variant, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Character Customized Event");

	Params::BP_AnalyticsLibrary_C_Send_Character_Customized_Event Parms{};

	Parms.Customization_Slot = Customization_Slot;
	Parms.Customization = Customization;
	Parms.Customization_Variant = Customization_Variant;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Customization Slot Name
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UClass*                           Customization_Slot                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Customization_Slot_Name(class UJsonObject* Target, const class FString& FieldName, class UClass* Customization_Slot, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Customization Slot Name");

	Params::BP_AnalyticsLibrary_C_Set_Customization_Slot_Name Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Customization_Slot = Customization_Slot;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Customization Name
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UClass*                           Customization                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           Customization_Variant                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Customization_Name(class UJsonObject* Target, const class FString& FieldName, class UClass* Customization, class UClass* Customization_Variant, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Customization Name");

	Params::BP_AnalyticsLibrary_C_Set_Customization_Name Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Customization = Customization;
	Parms.Customization_Variant = Customization_Variant;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Screen Tip Displayed Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Tip_Name                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UClass*                           Tip_Widget                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Screen_Tip_Displayed_Event(const class FString& Tip_Name, class UClass* Tip_Widget, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Screen Tip Displayed Event");

	Params::BP_AnalyticsLibrary_C_Send_Screen_Tip_Displayed_Event Parms{};

	Parms.Tip_Name = std::move(Tip_Name);
	Parms.Tip_Widget = Tip_Widget;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Tip Name
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Tip_Name                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Tip_Name(class UJsonObject* Target, const class FString& FieldName, const class FString& Tip_Name, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Tip Name");

	Params::BP_AnalyticsLibrary_C_Set_Tip_Name Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Tip_Name = std::move(Tip_Name);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Widget Name
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UClass*                           Widget_Type                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Widget_Name(class UJsonObject* Target, const class FString& FieldName, class UClass* Widget_Type, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Widget Name");

	Params::BP_AnalyticsLibrary_C_Set_Widget_Name Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Widget_Type = Widget_Type;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Group Invitation Sent Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Group_Invitation_Sent_Event(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Group Invitation Sent Event");

	Params::BP_AnalyticsLibrary_C_Send_Group_Invitation_Sent_Event Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Group Joined Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Group_ID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Analytics_User_ID                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Group_Joined_Event(const class FString& Group_ID, const class FString& Analytics_User_ID, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Group Joined Event");

	Params::BP_AnalyticsLibrary_C_Send_Group_Joined_Event Parms{};

	Parms.Group_ID = std::move(Group_ID);
	Parms.Analytics_User_ID = std::move(Analytics_User_ID);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Group Left Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Group_ID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Analytics_User_ID                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Group_Left_Event(const class FString& Group_ID, const class FString& Analytics_User_ID, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Group Left Event");

	Params::BP_AnalyticsLibrary_C_Send_Group_Left_Event Parms{};

	Parms.Group_ID = std::move(Group_ID);
	Parms.Analytics_User_ID = std::move(Analytics_User_ID);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Item Destroyed Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Item_Type                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           Widget_Type                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Item_Destroyed_Event(class UClass* Item_Type, class UClass* Widget_Type, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Item Destroyed Event");

	Params::BP_AnalyticsLibrary_C_Send_Item_Destroyed_Event Parms{};

	Parms.Item_Type = Item_Type;
	Parms.Widget_Type = Widget_Type;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Array Weapons List
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// TArray<class UClass*>                   Item_Types                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<int32>                           Item_Amounts                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Array_Weapons_List(class UJsonObject* Target, const class FString& FieldName, TArray<class UClass*>& Item_Types, TArray<int32>& Item_Amounts, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Array Weapons List");

	Params::BP_AnalyticsLibrary_C_Set_Array_Weapons_List Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Item_Types = std::move(Item_Types);
	Parms.Item_Amounts = std::move(Item_Amounts);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Item_Types = std::move(Parms.Item_Types);
	Item_Amounts = std::move(Parms.Item_Amounts);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Array Ammo List
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// TArray<class UClass*>                   Item_Types                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<int32>                           Item_Amounts                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Array_Ammo_List(class UJsonObject* Target, const class FString& FieldName, TArray<class UClass*>& Item_Types, TArray<int32>& Item_Amounts, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Array Ammo List");

	Params::BP_AnalyticsLibrary_C_Set_Array_Ammo_List Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Item_Types = std::move(Item_Types);
	Parms.Item_Amounts = std::move(Item_Amounts);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Item_Types = std::move(Parms.Item_Types);
	Item_Amounts = std::move(Parms.Item_Amounts);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Array Consumables List
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// TArray<class UClass*>                   Item_Types                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<int32>                           Item_Amounts                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Array_Consumables_List(class UJsonObject* Target, const class FString& FieldName, TArray<class UClass*>& Item_Types, TArray<int32>& Item_Amounts, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Array Consumables List");

	Params::BP_AnalyticsLibrary_C_Set_Array_Consumables_List Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Item_Types = std::move(Item_Types);
	Parms.Item_Amounts = std::move(Item_Amounts);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Item_Types = std::move(Parms.Item_Types);
	Item_Amounts = std::move(Parms.Item_Amounts);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Array Weapon Parts List
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// TArray<class UClass*>                   Item_Types                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<int32>                           Item_Amounts                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Array_Weapon_Parts_List(class UJsonObject* Target, const class FString& FieldName, TArray<class UClass*>& Item_Types, TArray<int32>& Item_Amounts, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Array Weapon Parts List");

	Params::BP_AnalyticsLibrary_C_Set_Array_Weapon_Parts_List Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Item_Types = std::move(Item_Types);
	Parms.Item_Amounts = std::move(Item_Amounts);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Item_Types = std::move(Parms.Item_Types);
	Item_Amounts = std::move(Parms.Item_Amounts);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Array Consumable Parts List
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// TArray<class UClass*>                   Item_Types                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<int32>                           Item_Amounts                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Array_Consumable_Parts_List(class UJsonObject* Target, const class FString& FieldName, TArray<class UClass*>& Item_Types, TArray<int32>& Item_Amounts, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Array Consumable Parts List");

	Params::BP_AnalyticsLibrary_C_Set_Array_Consumable_Parts_List Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Item_Types = std::move(Item_Types);
	Parms.Item_Amounts = std::move(Item_Amounts);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Item_Types = std::move(Parms.Item_Types);
	Item_Amounts = std::move(Parms.Item_Amounts);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Array Weapon Plans List
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// TArray<class UClass*>                   Item_Types                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<int32>                           Item_Amounts                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Array_Weapon_Plans_List(class UJsonObject* Target, const class FString& FieldName, TArray<class UClass*>& Item_Types, TArray<int32>& Item_Amounts, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Array Weapon Plans List");

	Params::BP_AnalyticsLibrary_C_Set_Array_Weapon_Plans_List Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Item_Types = std::move(Item_Types);
	Parms.Item_Amounts = std::move(Item_Amounts);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Item_Types = std::move(Parms.Item_Types);
	Item_Amounts = std::move(Parms.Item_Amounts);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Array Consumable Plans List
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// TArray<class UClass*>                   Item_Types                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<int32>                           Item_Amounts                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Array_Consumable_Plans_List(class UJsonObject* Target, const class FString& FieldName, TArray<class UClass*>& Item_Types, TArray<int32>& Item_Amounts, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Array Consumable Plans List");

	Params::BP_AnalyticsLibrary_C_Set_Array_Consumable_Plans_List Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Item_Types = std::move(Item_Types);
	Parms.Item_Amounts = std::move(Item_Amounts);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Item_Types = std::move(Parms.Item_Types);
	Item_Amounts = std::move(Parms.Item_Amounts);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Array Materials Count
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// TArray<class UClass*>                   Item_Types                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<int32>                           Item_Amounts                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Array_Materials_Count(class UJsonObject* Target, const class FString& FieldName, TArray<class UClass*>& Item_Types, TArray<int32>& Item_Amounts, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Array Materials Count");

	Params::BP_AnalyticsLibrary_C_Set_Array_Materials_Count Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Item_Types = std::move(Item_Types);
	Parms.Item_Amounts = std::move(Item_Amounts);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Item_Types = std::move(Parms.Item_Types);
	Item_Amounts = std::move(Parms.Item_Amounts);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Group ID from Game Instance
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Group_ID_from_Game_Instance(class UJsonObject* Target, const class FString& FieldName, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Group ID from Game Instance");

	Params::BP_AnalyticsLibrary_C_Set_Group_ID_from_Game_Instance Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Group ID by Context
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Group_ID_by_Context(class UJsonObject* Target, const class FString& FieldName, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Group ID by Context");

	Params::BP_AnalyticsLibrary_C_Set_Group_ID_by_Context Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Group Count
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Group_Count(class UJsonObject* Target, const class FString& FieldName, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Group Count");

	Params::BP_AnalyticsLibrary_C_Set_Group_Count Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Group ID Manually
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Group_ID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Group_ID_Manually(class UJsonObject* Target, const class FString& FieldName, const class FString& Group_ID, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Group ID Manually");

	Params::BP_AnalyticsLibrary_C_Set_Group_ID_Manually Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Group_ID = std::move(Group_ID);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Shots Accuracy
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   Accuracy                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Shots_Accuracy(class UJsonObject* Target, const class FString& FieldName, int32 Accuracy, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Shots Accuracy");

	Params::BP_AnalyticsLibrary_C_Set_Shots_Accuracy Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Accuracy = Accuracy;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Items Amount
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   Items_Amount                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Items_Amount(class UJsonObject* Target, const class FString& FieldName, int32 Items_Amount, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Items Amount");

	Params::BP_AnalyticsLibrary_C_Set_Items_Amount Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Items_Amount = Items_Amount;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Plank Removed Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_ADM_DoorBarricade_Component_C*Barricade                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Plank_Removed_Event(class UBP_ADM_DoorBarricade_Component_C* Barricade, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Plank Removed Event");

	Params::BP_AnalyticsLibrary_C_Send_Plank_Removed_Event Parms{};

	Parms.Barricade = Barricade;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Vault Start Unlocking Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Unlock_Duration                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Vault_Start_Unlocking_Event(float Unlock_Duration, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Vault Start Unlocking Event");

	Params::BP_AnalyticsLibrary_C_Send_Vault_Start_Unlocking_Event Parms{};

	Parms.Unlock_Duration = Unlock_Duration;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Vault Item Looted Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Item_Type                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Items_Amount                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Vault_Item_Looted_Event(class UClass* Item_Type, int32 Items_Amount, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Vault Item Looted Event");

	Params::BP_AnalyticsLibrary_C_Send_Vault_Item_Looted_Event Parms{};

	Parms.Item_Type = Item_Type;
	Parms.Items_Amount = Items_Amount;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Cube Solved Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Time_Since_Last_Suffle                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Moves_Count                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Cube_Solved_Event(int32 Time_Since_Last_Suffle, int32 Moves_Count, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Cube Solved Event");

	Params::BP_AnalyticsLibrary_C_Send_Cube_Solved_Event Parms{};

	Parms.Time_Since_Last_Suffle = Time_Since_Last_Suffle;
	Parms.Moves_Count = Moves_Count;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Cube Closed Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Time_in_Cube_UI                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Solved_Button_Used_Count                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Shuffle_Button_Used_Count                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Cube_Closed_Event(int32 Time_in_Cube_UI, int32 Solved_Button_Used_Count, int32 Shuffle_Button_Used_Count, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Cube Closed Event");

	Params::BP_AnalyticsLibrary_C_Send_Cube_Closed_Event Parms{};

	Parms.Time_in_Cube_UI = Time_in_Cube_UI;
	Parms.Solved_Button_Used_Count = Solved_Button_Used_Count;
	Parms.Shuffle_Button_Used_Count = Shuffle_Button_Used_Count;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Vault Spawned Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_ADM_BarredVaultLocation_C*    Barred_Vault_Location                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_ADM_BarredVault_C*            Barred_Vault                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Vault_Spawned_Event(class ABP_ADM_BarredVaultLocation_C* Barred_Vault_Location, class ABP_ADM_BarredVault_C* Barred_Vault, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Vault Spawned Event");

	Params::BP_AnalyticsLibrary_C_Send_Vault_Spawned_Event Parms{};

	Parms.Barred_Vault_Location = Barred_Vault_Location;
	Parms.Barred_Vault = Barred_Vault;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Equipment Storage Content List
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UEquipmentStorageComponent*       Equipemnt_Storage                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Equipment_Storage_Content_List(class UJsonObject* Target, const class FString& FieldName, class UEquipmentStorageComponent* Equipemnt_Storage, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Equipment Storage Content List");

	Params::BP_AnalyticsLibrary_C_Set_Equipment_Storage_Content_List Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Equipemnt_Storage = Equipemnt_Storage;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Vault Emptied Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_ADM_BarredVaultLocation_C*    Barred_Vault_Location                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_ADM_BarredVault_C*            Barred_Vault                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Vault_Emptied_Event(class ABP_ADM_BarredVaultLocation_C* Barred_Vault_Location, class ABP_ADM_BarredVault_C* Barred_Vault, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Vault Emptied Event");

	Params::BP_AnalyticsLibrary_C_Send_Vault_Emptied_Event Parms{};

	Parms.Barred_Vault_Location = Barred_Vault_Location;
	Parms.Barred_Vault = Barred_Vault;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Insurance Booster Status
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class APlayerState*                     Player_State                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UJsonObject* UBP_AnalyticsLibrary_C::Set_Insurance_Booster_Status(class UJsonObject* Target, const class FString& FieldName, class APlayerState* Player_State, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Insurance Booster Status");

	Params::BP_AnalyticsLibrary_C_Set_Insurance_Booster_Status Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Player_State = Player_State;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Loot Booster Status
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class APlayerState*                     Player_State                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UJsonObject* UBP_AnalyticsLibrary_C::Set_Loot_Booster_Status(class UJsonObject* Target, const class FString& FieldName, class APlayerState* Player_State, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Loot Booster Status");

	Params::BP_AnalyticsLibrary_C_Set_Loot_Booster_Status Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Player_State = Player_State;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Crate Booster Status
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class APlayerState*                     Player_State                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UJsonObject* UBP_AnalyticsLibrary_C::Set_Crate_Booster_Status(class UJsonObject* Target, const class FString& FieldName, class APlayerState* Player_State, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Crate Booster Status");

	Params::BP_AnalyticsLibrary_C_Set_Crate_Booster_Status Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Player_State = Player_State;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Kill Was Headshot
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Headshot                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Kill_Was_Headshot(class UJsonObject* Target, const class FString& FieldName, bool Headshot, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Kill Was Headshot");

	Params::BP_AnalyticsLibrary_C_Set_Kill_Was_Headshot Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Headshot = Headshot;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Lobby Entered Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHumanCharacter*                  Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Lobby_Entered_Event(class AHumanCharacter* Character, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Lobby Entered Event");

	Params::BP_AnalyticsLibrary_C_Send_Lobby_Entered_Event Parms{};

	Parms.Character = Character;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Rewards List
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// TArray<class FString>                   Rewards                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Rewards_List(class UJsonObject* Target, const class FString& FieldName, TArray<class FString>& Rewards, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Rewards List");

	Params::BP_AnalyticsLibrary_C_Set_Rewards_List Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Rewards = std::move(Rewards);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Rewards = std::move(Parms.Rewards);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Result Screen Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FString>                   Rewards                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// int32                                   Received_Mateials                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   TimeSpent                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Result_Screen_Event(TArray<class FString>& Rewards, int32 Received_Mateials, int32 TimeSpent, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Result Screen Event");

	Params::BP_AnalyticsLibrary_C_Send_Result_Screen_Event Parms{};

	Parms.Rewards = std::move(Rewards);
	Parms.Received_Mateials = Received_Mateials;
	Parms.TimeSpent = TimeSpent;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Rewards = std::move(Parms.Rewards);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Lobby Player Focused Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PlayerState_C*                Player_State                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Lobby_Player_Focused_Event(class ABP_PlayerState_C* Player_State, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Lobby Player Focused Event");

	Params::BP_AnalyticsLibrary_C_Send_Lobby_Player_Focused_Event Parms{};

	Parms.Player_State = Player_State;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Lobby Times
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Lobby_Times(class UJsonObject* Target, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Lobby Times");

	Params::BP_AnalyticsLibrary_C_Set_Lobby_Times Parms{};

	Parms.Target = Target;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Booster Switched On Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EBooster                                Booster_Type                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Player_Is_Ready                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    UsedTicketInsteadOfCrowns                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Booster_Switched_On_Event(EBooster Booster_Type, bool Player_Is_Ready, bool UsedTicketInsteadOfCrowns, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Booster Switched On Event");

	Params::BP_AnalyticsLibrary_C_Send_Booster_Switched_On_Event Parms{};

	Parms.Booster_Type = Booster_Type;
	Parms.Player_Is_Ready = Player_Is_Ready;
	Parms.UsedTicketInsteadOfCrowns = UsedTicketInsteadOfCrowns;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Booster Name
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// EBooster                                Booster_Type                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    UsedTicket                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UJsonObject* UBP_AnalyticsLibrary_C::Set_Booster_Name(class UJsonObject* Target, const class FString& FieldName, EBooster Booster_Type, bool UsedTicket, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Booster Name");

	Params::BP_AnalyticsLibrary_C_Set_Booster_Name Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Booster_Type = Booster_Type;
	Parms.UsedTicket = UsedTicket;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Booster Type
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// EBooster                                Booster_Type                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UJsonObject* UBP_AnalyticsLibrary_C::Set_Booster_Type(class UJsonObject* Target, const class FString& FieldName, EBooster Booster_Type, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Booster Type");

	Params::BP_AnalyticsLibrary_C_Set_Booster_Type Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Booster_Type = Booster_Type;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Booster Switched Off Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EBooster                                Booster_Type                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Booster_Switched_Off_Event(EBooster Booster_Type, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Booster Switched Off Event");

	Params::BP_AnalyticsLibrary_C_Send_Booster_Switched_Off_Event Parms{};

	Parms.Booster_Type = Booster_Type;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Antenna Used Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Player_Amount                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Antenna_Used_Event(int32 Player_Amount, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Antenna Used Event");

	Params::BP_AnalyticsLibrary_C_Send_Antenna_Used_Event Parms{};

	Parms.Player_Amount = Player_Amount;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Store Opened Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Product_ID                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Store_Opened_Event(const class FString& Product_ID, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Store Opened Event");

	Params::BP_AnalyticsLibrary_C_Send_Store_Opened_Event Parms{};

	Parms.Product_ID = std::move(Product_ID);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Shooting Challenge Finished Event
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Weapon                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Challange_Name                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Success                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// E_ShootingChallengeResult               Result                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TMap<class UClass*, int32>              Rewards                                                (BlueprintVisible, BlueprintReadOnly, Parm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Shooting_Challenge_Finished_Event(class UClass* Weapon, const class FString& Challange_Name, bool Success, E_ShootingChallengeResult Result, float Time, const TMap<class UClass*, int32>& Rewards, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Shooting Challenge Finished Event");

	Params::BP_AnalyticsLibrary_C_Send_Shooting_Challenge_Finished_Event Parms{};

	Parms.Weapon = Weapon;
	Parms.Challange_Name = std::move(Challange_Name);
	Parms.Success = Success;
	Parms.Result = Result;
	Parms.Time = Time;
	Parms.Rewards = std::move(Rewards);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Comm Station Used Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AirDropLocation_C*            New_Drop_Zone                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Comm_Station_Used_Event(class ABP_AirDropLocation_C* New_Drop_Zone, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Comm Station Used Event");

	Params::BP_AnalyticsLibrary_C_Send_Comm_Station_Used_Event Parms{};

	Parms.New_Drop_Zone = New_Drop_Zone;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Combination Lock Chest Unlocked Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_ADM_CombinationChest_C*       Unlocked_Container                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Combination_Lock_Chest_Unlocked_Event(class ABP_ADM_CombinationChest_C* Unlocked_Container, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Combination Lock Chest Unlocked Event");

	Params::BP_AnalyticsLibrary_C_Send_Combination_Lock_Chest_Unlocked_Event Parms{};

	Parms.Unlocked_Container = Unlocked_Container;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Combination Lock Chest Looted Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_ADM_CombinationChest_C*       Looted_Container                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Combination_Lock_Chest_Looted_Event(class ABP_ADM_CombinationChest_C* Looted_Container, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Combination Lock Chest Looted Event");

	Params::BP_AnalyticsLibrary_C_Send_Combination_Lock_Chest_Looted_Event Parms{};

	Parms.Looted_Container = Looted_Container;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Antenna Spawned Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_ADM_AntennaLocation_C*        Antenna_Location                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Antenna_Spawned_Event(class ABP_ADM_AntennaLocation_C* Antenna_Location, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Antenna Spawned Event");

	Params::BP_AnalyticsLibrary_C_Send_Antenna_Spawned_Event Parms{};

	Parms.Antenna_Location = Antenna_Location;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Comm Station Spawned Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_ADM_CommStation_Location_C*   Comm_Station_Location                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Comm_Station_Spawned_Event(class ABP_ADM_CommStation_Location_C* Comm_Station_Location, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Comm Station Spawned Event");

	Params::BP_AnalyticsLibrary_C_Send_Comm_Station_Spawned_Event Parms{};

	Parms.Comm_Station_Location = Comm_Station_Location;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Combination Lock Chest Spawned Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_ADM_CombinationChest_C*       Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Combination_Lock_Chest_Spawned_Event(class ABP_ADM_CombinationChest_C* Container, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Combination Lock Chest Spawned Event");

	Params::BP_AnalyticsLibrary_C_Send_Combination_Lock_Chest_Spawned_Event Parms{};

	Parms.Container = Container;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Lobby Started Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Lobby_Started_Event(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Lobby Started Event");

	Params::BP_AnalyticsLibrary_C_Send_Lobby_Started_Event Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Lobby Finished Event
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECloudRequestResult                     Result                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_PlayerLobby_Base_C*           Player_Lobby                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Lobby_Finished_Event(ECloudRequestResult Result, class ABP_PlayerLobby_Base_C* Player_Lobby, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Lobby Finished Event");

	Params::BP_AnalyticsLibrary_C_Send_Lobby_Finished_Event Parms{};

	Parms.Result = Result;
	Parms.Player_Lobby = Player_Lobby;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Match Cancelled Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Match_Cancelled_Event(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Match Cancelled Event");

	Params::BP_AnalyticsLibrary_C_Send_Match_Cancelled_Event Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Cloud Request Result
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// ECloudRequestResult                     Result                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UJsonObject* UBP_AnalyticsLibrary_C::Set_Cloud_Request_Result(class UJsonObject* Target, const class FString& FieldName, ECloudRequestResult Result, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Cloud Request Result");

	Params::BP_AnalyticsLibrary_C_Set_Cloud_Request_Result Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Result = Result;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Gesture Used Event
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Gesture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Gesture_Used_Event(class UClass* Gesture, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Gesture Used Event");

	Params::BP_AnalyticsLibrary_C_Send_Gesture_Used_Event Parms{};

	Parms.Gesture = Gesture;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Achievement Queue Result Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Achievement_ID                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   New_Progress                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Old_Progress                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Result                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Achievement_Queue_Result_Event(class FName Achievement_ID, float New_Progress, float Old_Progress, int32 Result, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Achievement Queue Result Event");

	Params::BP_AnalyticsLibrary_C_Send_Achievement_Queue_Result_Event Parms{};

	Parms.Achievement_ID = Achievement_ID;
	Parms.New_Progress = New_Progress;
	Parms.Old_Progress = Old_Progress;
	Parms.Result = Result;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Character Stance
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class AHumanCharacter*                  Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UJsonObject* UBP_AnalyticsLibrary_C::Set_Character_Stance(class UJsonObject* Target, const class FString& FieldName, class AHumanCharacter* Character, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Character Stance");

	Params::BP_AnalyticsLibrary_C_Set_Character_Stance Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Character = Character;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Challenge Assigned Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Slot_ID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_ChallengeManagerState                 Challenge_Manager_State                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Challenge_Name                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Challenge_Assigned_Event(int32 Slot_ID, E_ChallengeManagerState Challenge_Manager_State, class FName Challenge_Name, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Challenge Assigned Event");

	Params::BP_AnalyticsLibrary_C_Send_Challenge_Assigned_Event Parms{};

	Parms.Slot_ID = Slot_ID;
	Parms.Challenge_Manager_State = Challenge_Manager_State;
	Parms.Challenge_Name = Challenge_Name;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Challenge Rewards Claimed Event
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Slot_ID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Slot_Category                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// E_ChallengeManagerState                 Challenge_Manager_State                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Challenge_Name                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FChallengeReward>         Challenge_Rewards                                      (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Challenge_Rewards_Claimed_Event(int32 Slot_ID, const class FString& Slot_Category, E_ChallengeManagerState Challenge_Manager_State, class FName Challenge_Name, TArray<struct FChallengeReward>& Challenge_Rewards, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Challenge Rewards Claimed Event");

	Params::BP_AnalyticsLibrary_C_Send_Challenge_Rewards_Claimed_Event Parms{};

	Parms.Slot_ID = Slot_ID;
	Parms.Slot_Category = std::move(Slot_Category);
	Parms.Challenge_Manager_State = Challenge_Manager_State;
	Parms.Challenge_Name = Challenge_Name;
	Parms.Challenge_Rewards = std::move(Challenge_Rewards);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Challenge_Rewards = std::move(Parms.Challenge_Rewards);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Challenge Cancelled Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Slot_ID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Slot_Category                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// E_ChallengeManagerState                 Challenge_Manager_State                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Challenge_Name                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Challenge_Cancelled_Event(int32 Slot_ID, const class FString& Slot_Category, E_ChallengeManagerState Challenge_Manager_State, class FName Challenge_Name, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Challenge Cancelled Event");

	Params::BP_AnalyticsLibrary_C_Send_Challenge_Cancelled_Event Parms{};

	Parms.Slot_ID = Slot_ID;
	Parms.Slot_Category = std::move(Slot_Category);
	Parms.Challenge_Manager_State = Challenge_Manager_State;
	Parms.Challenge_Name = Challenge_Name;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Challenge Replacement Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Slot_ID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_ChallengeManagerState                 Challenge_Manager_State                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Old_Challenge_Name                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             New_Challenge_Name                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Context                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Challenge_Replacement_Event(int32 Slot_ID, E_ChallengeManagerState Challenge_Manager_State, class FName Old_Challenge_Name, class FName New_Challenge_Name, const class FString& Context, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Challenge Replacement Event");

	Params::BP_AnalyticsLibrary_C_Send_Challenge_Replacement_Event Parms{};

	Parms.Slot_ID = Slot_ID;
	Parms.Challenge_Manager_State = Challenge_Manager_State;
	Parms.Old_Challenge_Name = Old_Challenge_Name;
	Parms.New_Challenge_Name = New_Challenge_Name;
	Parms.Context = std::move(Context);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Challenge Progress Set Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Slot_ID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Slot_Category                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// E_ChallengeManagerState                 Challenge_Manager_State                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Challenge_Name                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   New_Progress                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Challenge_Progress_Set_Event(int32 Slot_ID, const class FString& Slot_Category, E_ChallengeManagerState Challenge_Manager_State, class FName Challenge_Name, int32 New_Progress, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Challenge Progress Set Event");

	Params::BP_AnalyticsLibrary_C_Send_Challenge_Progress_Set_Event Parms{};

	Parms.Slot_ID = Slot_ID;
	Parms.Slot_Category = std::move(Slot_Category);
	Parms.Challenge_Manager_State = Challenge_Manager_State;
	Parms.Challenge_Name = Challenge_Name;
	Parms.New_Progress = New_Progress;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Shop Item Detail Closed Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           ItemType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ShopTileID                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   TimeInDetail                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Shop_Item_Detail_Closed_Event(class UClass* ItemType, int32 ShopTileID, int32 TimeInDetail, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Shop Item Detail Closed Event");

	Params::BP_AnalyticsLibrary_C_Send_Shop_Item_Detail_Closed_Event Parms{};

	Parms.ItemType = ItemType;
	Parms.ShopTileID = ShopTileID;
	Parms.TimeInDetail = TimeInDetail;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.SetHardCurrencyBalance
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class AStash*                           Stash                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UJsonObject* UBP_AnalyticsLibrary_C::SetHardCurrencyBalance(class UJsonObject* Target, const class FString& FieldName, class AStash* Stash, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "SetHardCurrencyBalance");

	Params::BP_AnalyticsLibrary_C_SetHardCurrencyBalance Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Stash = Stash;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Shop Closed Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AStash*                           Stash                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   TimeInShop                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Shop_Closed_Event(class AStash* Stash, int32 TimeInShop, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Shop Closed Event");

	Params::BP_AnalyticsLibrary_C_Send_Shop_Closed_Event Parms{};

	Parms.Stash = Stash;
	Parms.TimeInShop = TimeInShop;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Shop Entered Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AStash*                           Stash                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Shop_Entered_Event(class AStash* Stash, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Shop Entered Event");

	Params::BP_AnalyticsLibrary_C_Send_Shop_Entered_Event Parms{};

	Parms.Stash = Stash;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Inventory Weapons Skins List
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UInventoryComponent*              Inventory                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Inventory_Weapons_Skins_List(class UJsonObject* Target, const class FString& FieldName, class UInventoryComponent* Inventory, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Inventory Weapons Skins List");

	Params::BP_AnalyticsLibrary_C_Set_Inventory_Weapons_Skins_List Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Inventory = Inventory;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Array Weapon Skins List
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// TArray<class UClass*>                   Item_Types                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<int32>                           Item_Amounts                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Array_Weapon_Skins_List(class UJsonObject* Target, const class FString& FieldName, TArray<class UClass*>& Item_Types, TArray<int32>& Item_Amounts, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Array Weapon Skins List");

	Params::BP_AnalyticsLibrary_C_Set_Array_Weapon_Skins_List Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Item_Types = std::move(Item_Types);
	Parms.Item_Amounts = std::move(Item_Amounts);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Item_Types = std::move(Parms.Item_Types);
	Item_Amounts = std::move(Parms.Item_Amounts);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Charity Box Donation Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   DonatedFood                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   DonatedInSeason                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           SeasonName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Charity_Box_Donation_Event(int32 DonatedFood, int32 DonatedInSeason, const class FString& SeasonName, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Charity Box Donation Event");

	Params::BP_AnalyticsLibrary_C_Send_Charity_Box_Donation_Event Parms{};

	Parms.DonatedFood = DonatedFood;
	Parms.DonatedInSeason = DonatedInSeason;
	Parms.SeasonName = std::move(SeasonName);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Stash Weapons Skins List
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class AHumanPlayerController*           PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Stash_Weapons_Skins_List(class UJsonObject* Target, const class FString& FieldName, class AHumanPlayerController* PlayerController, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Stash Weapons Skins List");

	Params::BP_AnalyticsLibrary_C_Set_Stash_Weapons_Skins_List Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.PlayerController = PlayerController;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Inventory Food Item Count
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UInventoryComponent*              Inventory                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Inventory_Food_Item_Count(class UJsonObject* Target, const class FString& FieldName, class UInventoryComponent* Inventory, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Inventory Food Item Count");

	Params::BP_AnalyticsLibrary_C_Set_Inventory_Food_Item_Count Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Inventory = Inventory;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set All Food Item Count
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class AHumanPlayerController*           Player_Controller                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_All_Food_Item_Count(class UJsonObject* Target, const class FString& FieldName, class AHumanPlayerController* Player_Controller, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set All Food Item Count");

	Params::BP_AnalyticsLibrary_C_Set_All_Food_Item_Count Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Player_Controller = Player_Controller;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set All Weapons List
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class AHumanPlayerController*           Player_Controller                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_All_Weapons_List(class UJsonObject* Target, const class FString& FieldName, class AHumanPlayerController* Player_Controller, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set All Weapons List");

	Params::BP_AnalyticsLibrary_C_Set_All_Weapons_List Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Player_Controller = Player_Controller;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Array Currencies List
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// TArray<class UClass*>                   Item_Types                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<int32>                           Item_Amounts                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Array_Currencies_List(class UJsonObject* Target, const class FString& FieldName, TArray<class UClass*>& Item_Types, TArray<int32>& Item_Amounts, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Array Currencies List");

	Params::BP_AnalyticsLibrary_C_Set_Array_Currencies_List Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Item_Types = std::move(Item_Types);
	Parms.Item_Amounts = std::move(Item_Amounts);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Item_Types = std::move(Parms.Item_Types);
	Item_Amounts = std::move(Parms.Item_Amounts);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Used Gestures
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Field_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class AHumanPlayerController*           Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Used_Gestures(class UJsonObject* Target, const class FString& Field_Name, class AHumanPlayerController* Controller, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Used Gestures");

	Params::BP_AnalyticsLibrary_C_Set_Used_Gestures Parms{};

	Parms.Target = Target;
	Parms.Field_Name = std::move(Field_Name);
	Parms.Controller = Controller;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set All Currencies List
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class AHumanPlayerController*           Player_Controller                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_All_Currencies_List(class UJsonObject* Target, const class FString& FieldName, class AHumanPlayerController* Player_Controller, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set All Currencies List");

	Params::BP_AnalyticsLibrary_C_Set_All_Currencies_List Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Player_Controller = Player_Controller;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Array Character Customizations List
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// TArray<class UClass*>                   Item_Types                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<int32>                           Item_Amounts                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Array_Character_Customizations_List(class UJsonObject* Target, const class FString& FieldName, TArray<class UClass*>& Item_Types, TArray<int32>& Item_Amounts, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Array Character Customizations List");

	Params::BP_AnalyticsLibrary_C_Set_Array_Character_Customizations_List Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Item_Types = std::move(Item_Types);
	Parms.Item_Amounts = std::move(Item_Amounts);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Item_Types = std::move(Parms.Item_Types);
	Item_Amounts = std::move(Parms.Item_Amounts);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Array Gestures List
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// TArray<class UClass*>                   Item_Types                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<int32>                           Item_Amounts                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Array_Gestures_List(class UJsonObject* Target, const class FString& FieldName, TArray<class UClass*>& Item_Types, TArray<int32>& Item_Amounts, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Array Gestures List");

	Params::BP_AnalyticsLibrary_C_Set_Array_Gestures_List Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Item_Types = std::move(Item_Types);
	Parms.Item_Amounts = std::move(Item_Amounts);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Item_Types = std::move(Parms.Item_Types);
	Item_Amounts = std::move(Parms.Item_Amounts);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Polaroid Acquired Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Polaroid_Item                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Polaroid_Acquired_Event(class UClass* Polaroid_Item, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Polaroid Acquired Event");

	Params::BP_AnalyticsLibrary_C_Send_Polaroid_Acquired_Event Parms{};

	Parms.Polaroid_Item = Polaroid_Item;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Polaroid Destroyed Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Polaroid_Item                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Polaroid_Destroyed_Event(class UClass* Polaroid_Item, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Polaroid Destroyed Event");

	Params::BP_AnalyticsLibrary_C_Send_Polaroid_Destroyed_Event Parms{};

	Parms.Polaroid_Item = Polaroid_Item;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Buried Cache Opened Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Polaroid_in_Inventory                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Already_Excavated                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Buried_Cache_Opened_Event(bool Polaroid_in_Inventory, bool Already_Excavated, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Buried Cache Opened Event");

	Params::BP_AnalyticsLibrary_C_Send_Buried_Cache_Opened_Event Parms{};

	Parms.Polaroid_in_Inventory = Polaroid_in_Inventory;
	Parms.Already_Excavated = Already_Excavated;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Buried Cache Spawned Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_ADM_BuriedCache_C*            Buried_Cache                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Buried_Cache_Spawned_Event(class ABP_ADM_BuriedCache_C* Buried_Cache, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Buried Cache Spawned Event");

	Params::BP_AnalyticsLibrary_C_Send_Buried_Cache_Spawned_Event Parms{};

	Parms.Buried_Cache = Buried_Cache;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Character Orientation
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class AHumanCharacter*                  Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UJsonObject* UBP_AnalyticsLibrary_C::Set_Character_Orientation(class UJsonObject* Target, const class FString& FieldName, class AHumanCharacter* Character, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Character Orientation");

	Params::BP_AnalyticsLibrary_C_Set_Character_Orientation Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Character = Character;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Polaroid Observed Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Polaroid_Item                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Polaroid_Observed_Event(class UClass* Polaroid_Item, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Polaroid Observed Event");

	Params::BP_AnalyticsLibrary_C_Send_Polaroid_Observed_Event Parms{};

	Parms.Polaroid_Item = Polaroid_Item;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Spectating Finished
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Spectating_Finished(int32 Time, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Spectating Finished");

	Params::BP_AnalyticsLibrary_C_Send_Spectating_Finished Parms{};

	Parms.Time = Time;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Spectating Switched
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   TimeSpentSpectating                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Spectated_Player_Analytics_ID                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Spectating_Switched(int32 TimeSpentSpectating, const class FString& Spectated_Player_Analytics_ID, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Spectating Switched");

	Params::BP_AnalyticsLibrary_C_Send_Spectating_Switched Parms{};

	Parms.TimeSpentSpectating = TimeSpentSpectating;
	Parms.Spectated_Player_Analytics_ID = std::move(Spectated_Player_Analytics_ID);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send craftingBoosterUsed Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Item_Type                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_craftingBoosterUsed_Event(class UClass* Item_Type, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send craftingBoosterUsed Event");

	Params::BP_AnalyticsLibrary_C_Send_craftingBoosterUsed_Event Parms{};

	Parms.Item_Type = Item_Type;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Tutorial Locations Collected
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TMap<float, struct FVector>             LocationsCollected                                     (BlueprintVisible, BlueprintReadOnly, Parm)
// class FString                           Reson                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Tutorial_Locations_Collected(const TMap<float, struct FVector>& LocationsCollected, const class FString& Reson, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Tutorial Locations Collected");

	Params::BP_AnalyticsLibrary_C_Send_Tutorial_Locations_Collected Parms{};

	Parms.LocationsCollected = std::move(LocationsCollected);
	Parms.Reson = std::move(Reson);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Tool Planted Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Item_Type                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Tool_Planted_Event(class UClass* Item_Type, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Tool Planted Event");

	Params::BP_AnalyticsLibrary_C_Send_Tool_Planted_Event Parms{};

	Parms.Item_Type = Item_Type;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Tool Triggered Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Item_Type                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Owner_name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Tool_Triggered_Event(class UClass* Item_Type, const class FString& Owner_name, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Tool Triggered Event");

	Params::BP_AnalyticsLibrary_C_Send_Tool_Triggered_Event Parms{};

	Parms.Item_Type = Item_Type;
	Parms.Owner_name = std::move(Owner_name);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Tool Destroyed Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Item_Type                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Owner_name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Tool_Destroyed_Event(class UClass* Item_Type, const class FString& Owner_name, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Tool Destroyed Event");

	Params::BP_AnalyticsLibrary_C_Send_Tool_Destroyed_Event Parms{};

	Parms.Item_Type = Item_Type;
	Parms.Owner_name = std::move(Owner_name);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Gained Battle Pass XP Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             GameplayEventName                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             SeasonName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsLegacy                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   GainedBaseXp                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   GainedBonusXp                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Gained_Battle_Pass_XP_Event(class FName GameplayEventName, class FName SeasonName, bool IsLegacy, int32 GainedBaseXp, int32 GainedBonusXp, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Gained Battle Pass XP Event");

	Params::BP_AnalyticsLibrary_C_Send_Gained_Battle_Pass_XP_Event Parms{};

	Parms.GameplayEventName = GameplayEventName;
	Parms.SeasonName = SeasonName;
	Parms.IsLegacy = IsLegacy;
	Parms.GainedBaseXp = GainedBaseXp;
	Parms.GainedBonusXp = GainedBonusXp;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Add Item Descriptor to Json Dictionary
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           Class_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Amount                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UJsonObject* UBP_AnalyticsLibrary_C::Add_Item_Descriptor_to_Json_Dictionary(class UJsonObject* Target, class UClass* Class_0, int32 Amount, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Add Item Descriptor to Json Dictionary");

	Params::BP_AnalyticsLibrary_C_Add_Item_Descriptor_to_Json_Dictionary Parms{};

	Parms.Target = Target;
	Parms.Class_0 = Class_0;
	Parms.Amount = Amount;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Battle Pass Season Name
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FName                             SeasonNameID                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Battle_Pass_Season_Name(class UJsonObject* Target, const class FString& FieldName, class FName SeasonNameID, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Battle Pass Season Name");

	Params::BP_AnalyticsLibrary_C_Set_Battle_Pass_Season_Name Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.SeasonNameID = SeasonNameID;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Battle Pass Current Season Name
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Battle_Pass_Current_Season_Name(class UJsonObject* Target, const class FString& FieldName, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Battle Pass Current Season Name");

	Params::BP_AnalyticsLibrary_C_Set_Battle_Pass_Current_Season_Name Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Battle Pass Premium Status
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FName                             SeasonNameID                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Battle_Pass_Premium_Status(class UJsonObject* Target, const class FString& FieldName, class FName SeasonNameID, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Battle Pass Premium Status");

	Params::BP_AnalyticsLibrary_C_Set_Battle_Pass_Premium_Status Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.SeasonNameID = SeasonNameID;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Battle Pass Total XP
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FName                             SeasonNameID                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Battle_Pass_Total_XP(class UJsonObject* Target, const class FString& FieldName, class FName SeasonNameID, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Battle Pass Total XP");

	Params::BP_AnalyticsLibrary_C_Set_Battle_Pass_Total_XP Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.SeasonNameID = SeasonNameID;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Battle Pass Level
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FName                             SeasonNameID                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Battle_Pass_Level(class UJsonObject* Target, const class FString& FieldName, class FName SeasonNameID, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Battle Pass Level");

	Params::BP_AnalyticsLibrary_C_Set_Battle_Pass_Level Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.SeasonNameID = SeasonNameID;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Battle Pass XP within Level
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FName                             SeasonNameID                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Battle_Pass_XP_within_Level(class UJsonObject* Target, const class FString& FieldName, class FName SeasonNameID, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Battle Pass XP within Level");

	Params::BP_AnalyticsLibrary_C_Set_Battle_Pass_XP_within_Level Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.SeasonNameID = SeasonNameID;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Purchased Battle Pass Level Up Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   XP_Bought                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Price                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Purchased_Battle_Pass_Level_Up_Event(int32 XP_Bought, int32 Price, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Purchased Battle Pass Level Up Event");

	Params::BP_AnalyticsLibrary_C_Send_Purchased_Battle_Pass_Level_Up_Event Parms{};

	Parms.XP_Bought = XP_Bought;
	Parms.Price = Price;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Battle Pass Status Event
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Battle_Pass_Status_Event(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Battle Pass Status Event");

	Params::BP_AnalyticsLibrary_C_Send_Battle_Pass_Status_Event Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Battle Pass Rewards List
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// TArray<struct FBattlePassLevelRewardFull>Rewards                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    IsPremiumRewards                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Battle_Pass_Rewards_List(class UJsonObject* Target, const class FString& FieldName, TArray<struct FBattlePassLevelRewardFull>& Rewards, bool IsPremiumRewards, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Battle Pass Rewards List");

	Params::BP_AnalyticsLibrary_C_Set_Battle_Pass_Rewards_List Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Rewards = std::move(Rewards);
	Parms.IsPremiumRewards = IsPremiumRewards;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Rewards = std::move(Parms.Rewards);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Collected Battle Pass Rewards Event
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FName>                     Seasons                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<struct FS_BattlePassLevelRewardFull>Free_Rewards                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<struct FS_BattlePassLevelRewardFull>Premium_Rewards                                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Collected_Battle_Pass_Rewards_Event(TArray<class FName>& Seasons, TArray<struct FS_BattlePassLevelRewardFull>& Free_Rewards, TArray<struct FS_BattlePassLevelRewardFull>& Premium_Rewards, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Collected Battle Pass Rewards Event");

	Params::BP_AnalyticsLibrary_C_Send_Collected_Battle_Pass_Rewards_Event Parms{};

	Parms.Seasons = std::move(Seasons);
	Parms.Free_Rewards = std::move(Free_Rewards);
	Parms.Premium_Rewards = std::move(Premium_Rewards);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Seasons = std::move(Parms.Seasons);
	Free_Rewards = std::move(Parms.Free_Rewards);
	Premium_Rewards = std::move(Parms.Premium_Rewards);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Match Events List
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Json_Object                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// TArray<struct FCloudBattlePassMatchEventInfo>Events                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// int32                                   Booster                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Json                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Match_Events_List(class UJsonObject* Json_Object, const class FString& FieldName, TArray<struct FCloudBattlePassMatchEventInfo>& Events, int32 Booster, class UObject* __WorldContext, class UJsonObject** Json)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Match Events List");

	Params::BP_AnalyticsLibrary_C_Set_Match_Events_List Parms{};

	Parms.Json_Object = Json_Object;
	Parms.FieldName = std::move(FieldName);
	Parms.Events = std::move(Events);
	Parms.Booster = Booster;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Events = std::move(Parms.Events);

	if (Json != nullptr)
		*Json = Parms.Json;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Battle Pass Level Up Event from Shelter
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             SeasonName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Gained_Levels                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Gained_XP                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Level_Purchased                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Battle_Pass_Level_Up_Event_from_Shelter(class FName SeasonName, int32 Gained_Levels, int32 Gained_XP, bool Level_Purchased, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Battle Pass Level Up Event from Shelter");

	Params::BP_AnalyticsLibrary_C_Send_Battle_Pass_Level_Up_Event_from_Shelter Parms{};

	Parms.SeasonName = SeasonName;
	Parms.Gained_Levels = Gained_Levels;
	Parms.Gained_XP = Gained_XP;
	Parms.Level_Purchased = Level_Purchased;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Battle Pass Level Up Event from Result Screen
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Season_Name                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Premium_Status                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Total_XP                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Level                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   XP_within_Level                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Gained_Levels                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Gained_XP                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Battle_Pass_Level_Up_Event_from_Result_Screen(class FName Season_Name, bool Premium_Status, int32 Total_XP, int32 Level, int32 XP_within_Level, int32 Gained_Levels, int32 Gained_XP, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Battle Pass Level Up Event from Result Screen");

	Params::BP_AnalyticsLibrary_C_Send_Battle_Pass_Level_Up_Event_from_Result_Screen Parms{};

	Parms.Season_Name = Season_Name;
	Parms.Premium_Status = Premium_Status;
	Parms.Total_XP = Total_XP;
	Parms.Level = Level;
	Parms.XP_within_Level = XP_within_Level;
	Parms.Gained_Levels = Gained_Levels;
	Parms.Gained_XP = Gained_XP;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Time Since Respawn
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Field_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UJsonObject* UBP_AnalyticsLibrary_C::Set_Time_Since_Respawn(class UJsonObject* Target, const class FString& Field_Name, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Time Since Respawn");

	Params::BP_AnalyticsLibrary_C_Set_Time_Since_Respawn Parms{};

	Parms.Target = Target;
	Parms.Field_Name = std::move(Field_Name);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set GameMode Name
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Field_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UJsonObject* UBP_AnalyticsLibrary_C::Set_GameMode_Name(class UJsonObject* Target, const class FString& Field_Name, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set GameMode Name");

	Params::BP_AnalyticsLibrary_C_Set_GameMode_Name Parms{};

	Parms.Target = Target;
	Parms.Field_Name = std::move(Field_Name);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Consumable Used
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Consumable                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerState*                     Player_State                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Consumable_Used(class UClass* Consumable, class APlayerState* Player_State, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Consumable Used");

	Params::BP_AnalyticsLibrary_C_Send_Consumable_Used Parms{};

	Parms.Consumable = Consumable;
	Parms.Player_State = Player_State;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Character Camera State
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class AHumanCharacter*                  Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UJsonObject* UBP_AnalyticsLibrary_C::Set_Character_Camera_State(class UJsonObject* Target, const class FString& FieldName, class AHumanCharacter* Character, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Character Camera State");

	Params::BP_AnalyticsLibrary_C_Set_Character_Camera_State Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Character = Character;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Currency Count
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class AHumanPlayerController*           Player_Controller                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           CurrencyClass                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Currency_Count(class UJsonObject* Target, const class FString& FieldName, class AHumanPlayerController* Player_Controller, class UClass* CurrencyClass, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Currency Count");

	Params::BP_AnalyticsLibrary_C_Set_Currency_Count Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Player_Controller = Player_Controller;
	Parms.CurrencyClass = CurrencyClass;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Crates List
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// TMap<class UClass*, struct FLootBoxInfoCloud>Crates_Cache                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Crates_List(class UJsonObject* Target, const class FString& FieldName, TMap<class UClass*, struct FLootBoxInfoCloud>& Crates_Cache, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Crates List");

	Params::BP_AnalyticsLibrary_C_Set_Crates_List Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Crates_Cache = std::move(Crates_Cache);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Crates_Cache = std::move(Parms.Crates_Cache);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Death Match Statistic
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Json_Object                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FStruct_TVTDeathmatchStatistics  Statistic                                              (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Json                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Death_Match_Statistic(class UJsonObject* Json_Object, const class FString& FieldName, const struct FStruct_TVTDeathmatchStatistics& Statistic, class UObject* __WorldContext, class UJsonObject** Json)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Death Match Statistic");

	Params::BP_AnalyticsLibrary_C_Set_Death_Match_Statistic Parms{};

	Parms.Json_Object = Json_Object;
	Parms.FieldName = std::move(FieldName);
	Parms.Statistic = std::move(Statistic);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Json != nullptr)
		*Json = Parms.Json;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Bad Challenge Chosen Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Slot_ID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EChallengeCategory                      Challenge_Category                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Challenge_Name                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_ChallengeManagerState                 Challenge_Manager_State                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FCloudChallengeSlotInfo>  Cloud_Slots                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TMap<class FName, struct FDateTime>     Cloud_Stats                                            (BlueprintVisible, BlueprintReadOnly, Parm)
// TArray<class FString>                   Log                                                    (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Bad_Challenge_Chosen_Event(int32 Slot_ID, EChallengeCategory Challenge_Category, class FName Challenge_Name, E_ChallengeManagerState Challenge_Manager_State, TArray<struct FCloudChallengeSlotInfo>& Cloud_Slots, const TMap<class FName, struct FDateTime>& Cloud_Stats, TArray<class FString>& Log, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Bad Challenge Chosen Event");

	Params::BP_AnalyticsLibrary_C_Send_Bad_Challenge_Chosen_Event Parms{};

	Parms.Slot_ID = Slot_ID;
	Parms.Challenge_Category = Challenge_Category;
	Parms.Challenge_Name = Challenge_Name;
	Parms.Challenge_Manager_State = Challenge_Manager_State;
	Parms.Cloud_Slots = std::move(Cloud_Slots);
	Parms.Cloud_Stats = std::move(Cloud_Stats);
	Parms.Log = std::move(Log);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Cloud_Slots = std::move(Parms.Cloud_Slots);
	Log = std::move(Parms.Log);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Challenge Cloud Slots
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FCloudChallengeSlotInfo>  Slots                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UJsonObject* UBP_AnalyticsLibrary_C::Set_Challenge_Cloud_Slots(class UJsonObject* Target, TArray<struct FCloudChallengeSlotInfo>& Slots, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Challenge Cloud Slots");

	Params::BP_AnalyticsLibrary_C_Set_Challenge_Cloud_Slots Parms{};

	Parms.Target = Target;
	Parms.Slots = std::move(Slots);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Slots = std::move(Parms.Slots);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Challenge Cloud Stats
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// TMap<class FName, struct FDateTime>     Stats                                                  (BlueprintVisible, BlueprintReadOnly, Parm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UJsonObject* UBP_AnalyticsLibrary_C::Set_Challenge_Cloud_Stats(class UJsonObject* Target, const class FString& FieldName, const TMap<class FName, struct FDateTime>& Stats, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Challenge Cloud Stats");

	Params::BP_AnalyticsLibrary_C_Set_Challenge_Cloud_Stats Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Stats = std::move(Stats);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Duplicate Challenge Category Spotted Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EChallengeCategory                      Challenge_Category                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_ChallengeManagerState                 Challenge_Manager_State                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FCloudChallengeSlotInfo>  Cloud_Slots                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TMap<class FName, struct FDateTime>     Cloud_Stats                                            (BlueprintVisible, BlueprintReadOnly, Parm)
// TArray<class FString>                   Log                                                    (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Duplicate_Challenge_Category_Spotted_Event(EChallengeCategory Challenge_Category, E_ChallengeManagerState Challenge_Manager_State, TArray<struct FCloudChallengeSlotInfo>& Cloud_Slots, const TMap<class FName, struct FDateTime>& Cloud_Stats, TArray<class FString>& Log, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Duplicate Challenge Category Spotted Event");

	Params::BP_AnalyticsLibrary_C_Send_Duplicate_Challenge_Category_Spotted_Event Parms{};

	Parms.Challenge_Category = Challenge_Category;
	Parms.Challenge_Manager_State = Challenge_Manager_State;
	Parms.Cloud_Slots = std::move(Cloud_Slots);
	Parms.Cloud_Stats = std::move(Cloud_Stats);
	Parms.Log = std::move(Log);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Cloud_Slots = std::move(Parms.Cloud_Slots);
	Log = std::move(Parms.Log);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Leaderboards Tab Closed
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Time_Spent_In_Leaderboards                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EShelterMainTab                         Initial_Tab                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TMap<E_LeaderboardsStatsTypes, int32>   Focused_Stats                                          (BlueprintVisible, BlueprintReadOnly, Parm)
// int32                                   Scrolled_To_First                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Scrolled_To_Last                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Filtering_AroundPlayer                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Filtering_Friends                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Filtering_TopTen                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Leaderboards_Tab_Closed(int32 Time_Spent_In_Leaderboards, EShelterMainTab Initial_Tab, const TMap<E_LeaderboardsStatsTypes, int32>& Focused_Stats, int32 Scrolled_To_First, int32 Scrolled_To_Last, int32 Filtering_AroundPlayer, int32 Filtering_Friends, int32 Filtering_TopTen, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Leaderboards Tab Closed");

	Params::BP_AnalyticsLibrary_C_Send_Leaderboards_Tab_Closed Parms{};

	Parms.Time_Spent_In_Leaderboards = Time_Spent_In_Leaderboards;
	Parms.Initial_Tab = Initial_Tab;
	Parms.Focused_Stats = std::move(Focused_Stats);
	Parms.Scrolled_To_First = Scrolled_To_First;
	Parms.Scrolled_To_Last = Scrolled_To_Last;
	Parms.Filtering_AroundPlayer = Filtering_AroundPlayer;
	Parms.Filtering_Friends = Filtering_Friends;
	Parms.Filtering_TopTen = Filtering_TopTen;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Leaderboard Stats Integer Dictionary
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Json                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Field_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// TMap<E_LeaderboardsStatsTypes, int32>   StatsIntegerDictionary                                 (BlueprintVisible, BlueprintReadOnly, Parm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      JSON_Output                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Leaderboard_Stats_Integer_Dictionary(class UJsonObject* Json, const class FString& Field_Name, const TMap<E_LeaderboardsStatsTypes, int32>& StatsIntegerDictionary, class UObject* __WorldContext, class UJsonObject** JSON_Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Leaderboard Stats Integer Dictionary");

	Params::BP_AnalyticsLibrary_C_Set_Leaderboard_Stats_Integer_Dictionary Parms{};

	Parms.Json = Json;
	Parms.Field_Name = std::move(Field_Name);
	Parms.StatsIntegerDictionary = std::move(StatsIntegerDictionary);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (JSON_Output != nullptr)
		*JSON_Output = Parms.JSON_Output;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Owned Titles List
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class ABP_TitlesManager_C*              Titles_Manager                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerState*                     Player_State                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Owned_Titles_List(class UJsonObject* Target, const class FString& FieldName, class ABP_TitlesManager_C* Titles_Manager, class APlayerState* Player_State, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Owned Titles List");

	Params::BP_AnalyticsLibrary_C_Set_Owned_Titles_List Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Titles_Manager = Titles_Manager;
	Parms.Player_State = Player_State;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Selected Titles List
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class APlayerState*                     Player_State                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Selected_Titles_List(class UJsonObject* Target, const class FString& FieldName, class APlayerState* Player_State, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Selected Titles List");

	Params::BP_AnalyticsLibrary_C_Set_Selected_Titles_List Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Player_State = Player_State;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Shelter Repair Level
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AStash*                           Stash                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Shelter_Repair_Level(class UJsonObject* Target, class AStash* Stash, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Shelter Repair Level");

	Params::BP_AnalyticsLibrary_C_Set_Shelter_Repair_Level Parms{};

	Parms.Target = Target;
	Parms.Stash = Stash;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Shelter Appearance Changed Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerState*                     PlayerState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Shelter_Appearance_Changed_Event(class APlayerState* PlayerState, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Shelter Appearance Changed Event");

	Params::BP_AnalyticsLibrary_C_Send_Shelter_Appearance_Changed_Event Parms{};

	Parms.PlayerState = PlayerState;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Mementos Spawned Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UClass*>                   Mementos                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Mementos_Spawned_Event(TArray<class UClass*>& Mementos, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Mementos Spawned Event");

	Params::BP_AnalyticsLibrary_C_Send_Mementos_Spawned_Event Parms{};

	Parms.Mementos = std::move(Mementos);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Mementos = std::move(Parms.Mementos);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Array Items List
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// TArray<class UClass*>                   Items                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Array_Items_List(class UJsonObject* Target, const class FString& FieldName, TArray<class UClass*>& Items, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Array Items List");

	Params::BP_AnalyticsLibrary_C_Set_Array_Items_List Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Items = std::move(Items);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Items = std::move(Parms.Items);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Memento Acquired Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Memento_Item                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Memento_Amount                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Memento_Acquired_Event(class UClass* Memento_Item, int32 Memento_Amount, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Memento Acquired Event");

	Params::BP_AnalyticsLibrary_C_Send_Memento_Acquired_Event Parms{};

	Parms.Memento_Item = Memento_Item;
	Parms.Memento_Amount = Memento_Amount;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Stash Mementos List
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class AStash*                           Stash                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Stash_Mementos_List(class UJsonObject* Target, const class FString& FieldName, class AStash* Stash, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Stash Mementos List");

	Params::BP_AnalyticsLibrary_C_Set_Stash_Mementos_List Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Stash = Stash;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Inventory Mementos List
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UInventoryComponent*              Inventory                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Inventory_Mementos_List(class UJsonObject* Target, const class FString& FieldName, class UInventoryComponent* Inventory, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Inventory Mementos List");

	Params::BP_AnalyticsLibrary_C_Set_Inventory_Mementos_List Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Inventory = Inventory;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send CommStation Action Taken
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECommStationAction                      Action                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_CommStation_Action_Taken(ECommStationAction Action, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send CommStation Action Taken");

	Params::BP_AnalyticsLibrary_C_Send_CommStation_Action_Taken Parms{};

	Parms.Action = Action;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Phone Call Started
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHumanCharacter*                  Interacted_Character                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Phone_Call_Started(class AHumanCharacter* Interacted_Character, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Phone Call Started");

	Params::BP_AnalyticsLibrary_C_Send_Phone_Call_Started Parms{};

	Parms.Interacted_Character = Interacted_Character;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Phone Call Answered
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHumanCharacter*                  Interacting_Character                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           EnemyID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Phone_Call_Answered(class AHumanCharacter* Interacting_Character, const class FString& EnemyID, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Phone Call Answered");

	Params::BP_AnalyticsLibrary_C_Send_Phone_Call_Answered Parms{};

	Parms.Interacting_Character = Interacting_Character;
	Parms.EnemyID = std::move(EnemyID);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Phone Duel Completed
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           CallerID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           EnemyID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    InitiatorWon                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Phone_Duel_Completed(const class FString& CallerID, const class FString& EnemyID, bool InitiatorWon, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Phone Duel Completed");

	Params::BP_AnalyticsLibrary_C_Send_Phone_Duel_Completed Parms{};

	Parms.CallerID = std::move(CallerID);
	Parms.EnemyID = std::move(EnemyID);
	Parms.InitiatorWon = InitiatorWon;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Phone Call Unanswered
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Caller_User_ID                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Phone_Call_Unanswered(const class FString& Caller_User_ID, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Phone Call Unanswered");

	Params::BP_AnalyticsLibrary_C_Send_Phone_Call_Unanswered Parms{};

	Parms.Caller_User_ID = std::move(Caller_User_ID);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Phone Duel Abandoned
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           CallerID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           EnemyID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Phone_Duel_Abandoned(const class FString& CallerID, const class FString& EnemyID, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Phone Duel Abandoned");

	Params::BP_AnalyticsLibrary_C_Send_Phone_Duel_Abandoned Parms{};

	Parms.CallerID = std::move(CallerID);
	Parms.EnemyID = std::move(EnemyID);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Signal Jammer Used
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Signal_Jammer_Used(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Signal Jammer Used");

	Params::BP_AnalyticsLibrary_C_Send_Signal_Jammer_Used Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Player Pinged
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FStruct_PingInfo                 Ping_Info                                              (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Player_Pinged(const struct FStruct_PingInfo& Ping_Info, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Player Pinged");

	Params::BP_AnalyticsLibrary_C_Send_Player_Pinged Parms{};

	Parms.Ping_Info = std::move(Ping_Info);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Signal Jammer Ended
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayersJammed                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   UniquePlayersJammed                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Signal_Jammer_Ended(int32 PlayersJammed, int32 UniquePlayersJammed, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Signal Jammer Ended");

	Params::BP_AnalyticsLibrary_C_Send_Signal_Jammer_Ended Parms{};

	Parms.PlayersJammed = PlayersJammed;
	Parms.UniquePlayersJammed = UniquePlayersJammed;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Match Weather
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Json_Object                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Json                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Match_Weather(class UJsonObject* Json_Object, const class FString& FieldName, class UObject* __WorldContext, class UJsonObject** Json)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Match Weather");

	Params::BP_AnalyticsLibrary_C_Set_Match_Weather Parms{};

	Parms.Json_Object = Json_Object;
	Parms.FieldName = std::move(FieldName);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Json != nullptr)
		*Json = Parms.Json;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Battle Pass Buy Premium Closed Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             SeasonName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsLegacy                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    WasPremiumPurchased                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Battle_Pass_Buy_Premium_Closed_Event(class FName SeasonName, bool IsLegacy, bool WasPremiumPurchased, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Battle Pass Buy Premium Closed Event");

	Params::BP_AnalyticsLibrary_C_Send_Battle_Pass_Buy_Premium_Closed_Event Parms{};

	Parms.SeasonName = SeasonName;
	Parms.IsLegacy = IsLegacy;
	Parms.WasPremiumPurchased = WasPremiumPurchased;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Shelter Left
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHumanPlayerController*           Player_Controller                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Shelter_Left(class AHumanPlayerController* Player_Controller, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Shelter Left");

	Params::BP_AnalyticsLibrary_C_Send_Shelter_Left Parms{};

	Parms.Player_Controller = Player_Controller;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send GunFight Round Ended
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_GSC_Team_Raid_C*              Winning_Team                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EGunFightWinReason                      Win_Reason                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           WinnerSpawnStart                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   ArenaSettingID                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   TimeInRound                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           RoundPhase                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_GunFight_Round_Ended(class UBP_GSC_Team_Raid_C* Winning_Team, EGunFightWinReason Win_Reason, const class FString& WinnerSpawnStart, int32 ArenaSettingID, int32 TimeInRound, const class FString& RoundPhase, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send GunFight Round Ended");

	Params::BP_AnalyticsLibrary_C_Send_GunFight_Round_Ended Parms{};

	Parms.Winning_Team = Winning_Team;
	Parms.Win_Reason = Win_Reason;
	Parms.WinnerSpawnStart = std::move(WinnerSpawnStart);
	Parms.ArenaSettingID = ArenaSettingID;
	Parms.TimeInRound = TimeInRound;
	Parms.RoundPhase = std::move(RoundPhase);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send BoobyTrap Finished
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Amt_Time_Triggered                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Defusal_Exit_Time                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Trap_Defused                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Defusal_Exited                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Defusal_Time_Left                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Amt_Characters_Damaged                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Analytics_ID                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   Trap_Count                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_BoobyTrap_Finished(int32 Amt_Time_Triggered, int32 Defusal_Exit_Time, bool Trap_Defused, bool Defusal_Exited, int32 Defusal_Time_Left, int32 Amt_Characters_Damaged, const class FString& Analytics_ID, int32 Trap_Count, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send BoobyTrap Finished");

	Params::BP_AnalyticsLibrary_C_Send_BoobyTrap_Finished Parms{};

	Parms.Amt_Time_Triggered = Amt_Time_Triggered;
	Parms.Defusal_Exit_Time = Defusal_Exit_Time;
	Parms.Trap_Defused = Trap_Defused;
	Parms.Defusal_Exited = Defusal_Exited;
	Parms.Defusal_Time_Left = Defusal_Time_Left;
	Parms.Amt_Characters_Damaged = Amt_Characters_Damaged;
	Parms.Analytics_ID = std::move(Analytics_ID);
	Parms.Trap_Count = Trap_Count;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send New Titles Unlocked Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TMap<class FName, int32>                NewOwnedTitles                                         (BlueprintVisible, BlueprintReadOnly, Parm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_New_Titles_Unlocked_Event(const TMap<class FName, int32>& NewOwnedTitles, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send New Titles Unlocked Event");

	Params::BP_AnalyticsLibrary_C_Send_New_Titles_Unlocked_Event Parms{};

	Parms.NewOwnedTitles = std::move(NewOwnedTitles);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.SetTitlesList
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// TMap<class FName, int32>                NewOwnedTitles                                         (BlueprintVisible, BlueprintReadOnly, Parm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UJsonObject* UBP_AnalyticsLibrary_C::SetTitlesList(class UJsonObject* Target, const class FString& FieldName, const TMap<class FName, int32>& NewOwnedTitles, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "SetTitlesList");

	Params::BP_AnalyticsLibrary_C_SetTitlesList Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.NewOwnedTitles = std::move(NewOwnedTitles);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.SendArmoryTimeSpent
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   TimeSpent_Seconds                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::SendArmoryTimeSpent(int32 TimeSpent_Seconds, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "SendArmoryTimeSpent");

	Params::BP_AnalyticsLibrary_C_SendArmoryTimeSpent Parms{};

	Parms.TimeSpent_Seconds = TimeSpent_Seconds;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send ExitTell Triggered
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class AHumanCharacter*>          Campers                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    TellFired                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_ExitTell_Triggered(TArray<class AHumanCharacter*>& Campers, bool TellFired, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send ExitTell Triggered");

	Params::BP_AnalyticsLibrary_C_Send_ExitTell_Triggered Parms{};

	Parms.Campers = std::move(Campers);
	Parms.TellFired = TellFired;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Campers = std::move(Parms.Campers);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Start ClientSide Analytics Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Start_ClientSide_Analytics_Event(class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Start ClientSide Analytics Event");

	Params::BP_AnalyticsLibrary_C_Start_ClientSide_Analytics_Event Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Review Completed Event
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ErrorCode                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FUserReviewResult                Result                                                 (BlueprintVisible, BlueprintReadOnly, Parm)
// int32                                   AmountOfReviewsOpened                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   AmountOfReviewsFulfilled                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   DaysCounter                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           SourceEvent                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Send_Review_Completed_Event(int32 ErrorCode, const struct FUserReviewResult& Result, int32 AmountOfReviewsOpened, int32 AmountOfReviewsFulfilled, int32 DaysCounter, const class FString& SourceEvent, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Review Completed Event");

	Params::BP_AnalyticsLibrary_C_Send_Review_Completed_Event Parms{};

	Parms.ErrorCode = ErrorCode;
	Parms.Result = std::move(Result);
	Parms.AmountOfReviewsOpened = AmountOfReviewsOpened;
	Parms.AmountOfReviewsFulfilled = AmountOfReviewsFulfilled;
	Parms.DaysCounter = DaysCounter;
	Parms.SourceEvent = std::move(SourceEvent);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send BoobyTrap Placed
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Lootable_Location                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_BoobyTrap_Placed(const struct FVector& Lootable_Location, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send BoobyTrap Placed");

	Params::BP_AnalyticsLibrary_C_Send_BoobyTrap_Placed Parms{};

	Parms.Lootable_Location = std::move(Lootable_Location);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Shelter D-Pad Used
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Shelter_DMinusPad_Used(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Shelter D-Pad Used");

	Params::BP_AnalyticsLibrary_C_Send_Shelter_DMinusPad_Used Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Music Player Interacted
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Music_Player_Interacted(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Music Player Interacted");

	Params::BP_AnalyticsLibrary_C_Send_Music_Player_Interacted Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Music Player Track Played
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FMusicTrackRow                   TrackInfo                                              (BlueprintVisible, BlueprintReadOnly, Parm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Music_Player_Track_Played(const struct FMusicTrackRow& TrackInfo, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Music Player Track Played");

	Params::BP_AnalyticsLibrary_C_Send_Music_Player_Track_Played Parms{};

	Parms.TrackInfo = std::move(TrackInfo);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send TicTacToe Played Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Result                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           GameLog                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   Wins                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Losses                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_TicTacToe_Played_Event(int32 Result, const class FString& GameLog, int32 Wins, int32 Losses, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send TicTacToe Played Event");

	Params::BP_AnalyticsLibrary_C_Send_TicTacToe_Played_Event Parms{};

	Parms.Result = Result;
	Parms.GameLog = std::move(GameLog);
	Parms.Wins = Wins;
	Parms.Losses = Losses;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Shelter Stash Interactions
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ShelterStashInteraction                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Shelter_Stash_Interactions(class FName ShelterStashInteraction, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Shelter Stash Interactions");

	Params::BP_AnalyticsLibrary_C_Send_Shelter_Stash_Interactions Parms{};

	Parms.ShelterStashInteraction = ShelterStashInteraction;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Favorite Loadout Used
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Called_By                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UInventoryComponent*              Inventory                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Favorite_Loadout_Used(const class FString& Called_By, class UInventoryComponent* Inventory, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Favorite Loadout Used");

	Params::BP_AnalyticsLibrary_C_Send_Favorite_Loadout_Used Parms{};

	Parms.Called_By = std::move(Called_By);
	Parms.Inventory = Inventory;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Ammo Type List
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UInventoryComponent*              Inventory                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Ammo_Type_List(class UJsonObject* Target, const class FString& FieldName, class UInventoryComponent* Inventory, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Ammo Type List");

	Params::BP_AnalyticsLibrary_C_Set_Ammo_Type_List Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Inventory = Inventory;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Disassembled Items
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   Disassembled_items                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Disassembled_Items(class UJsonObject* Target, const class FString& FieldName, int32 Disassembled_items, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Disassembled Items");

	Params::BP_AnalyticsLibrary_C_Set_Disassembled_Items Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Disassembled_items = Disassembled_items;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Inventory List
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UInventoryComponent*              Inventory                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Inventory_List(class UJsonObject* Target, const class FString& FieldName, class UInventoryComponent* Inventory, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Inventory List");

	Params::BP_AnalyticsLibrary_C_Set_Inventory_List Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Inventory = Inventory;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Timed Safe Spawned Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Timed_Safe_Location                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_Lootable_Base_C*              Timed_Safe_                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class AActor*>                   Timed_Switches                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Timed_Safe_Spawned_Event(class AActor* Timed_Safe_Location, class ABP_Lootable_Base_C* Timed_Safe_, TArray<class AActor*>& Timed_Switches, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Timed Safe Spawned Event");

	Params::BP_AnalyticsLibrary_C_Send_Timed_Safe_Spawned_Event Parms{};

	Parms.Timed_Safe_Location = Timed_Safe_Location;
	Parms.Timed_Safe_ = Timed_Safe_;
	Parms.Timed_Switches = std::move(Timed_Switches);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Timed_Switches = std::move(Parms.Timed_Switches);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Timed Safe Looted Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHumanCharacter*                  Looting_character                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Timed_Safe_Looted_Event(class AHumanCharacter* Looting_character, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Timed Safe Looted Event");

	Params::BP_AnalyticsLibrary_C_Send_Timed_Safe_Looted_Event Parms{};

	Parms.Looting_character = Looting_character;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Locked Container Looted Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHumanCharacter*                  Looting_character                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Did_bombardment_happen                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Locked_Container_Looted_Event(class AHumanCharacter* Looting_character, bool Did_bombardment_happen, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Locked Container Looted Event");

	Params::BP_AnalyticsLibrary_C_Send_Locked_Container_Looted_Event Parms{};

	Parms.Looting_character = Looting_character;
	Parms.Did_bombardment_happen = Did_bombardment_happen;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Timed Safe Switch Opened
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Switch                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Linked_location                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AHumanCharacter*                  Interacting_Character                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Timed_Safe_Switch_Opened(class AActor* Switch, class AActor* Linked_location, class AHumanCharacter* Interacting_Character, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Timed Safe Switch Opened");

	Params::BP_AnalyticsLibrary_C_Send_Timed_Safe_Switch_Opened Parms{};

	Parms.Switch = Switch;
	Parms.Linked_location = Linked_location;
	Parms.Interacting_Character = Interacting_Character;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Locked Container Spawned Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_ADM_LockedContainer_Location_C*Locked_container_location                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_ADM_LockedContainer_Crate_C*  Locked_crate                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Locked_Container_Spawned_Event(class ABP_ADM_LockedContainer_Location_C* Locked_container_location, class ABP_ADM_LockedContainer_Crate_C* Locked_crate, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Locked Container Spawned Event");

	Params::BP_AnalyticsLibrary_C_Send_Locked_Container_Spawned_Event Parms{};

	Parms.Locked_container_location = Locked_container_location;
	Parms.Locked_crate = Locked_crate;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Lone Wolf Button Pressed
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    LoneWolfButtonState                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Lone_Wolf_Button_Pressed(bool LoneWolfButtonState, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Lone Wolf Button Pressed");

	Params::BP_AnalyticsLibrary_C_Send_Lone_Wolf_Button_Pressed Parms{};

	Parms.LoneWolfButtonState = LoneWolfButtonState;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Red chest Spawned Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Red_chest_location                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_Lootable_Base_C*              Spawned_red_chest                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Red_chest_Spawned_Event(class AActor* Red_chest_location, class ABP_Lootable_Base_C* Spawned_red_chest, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Red chest Spawned Event");

	Params::BP_AnalyticsLibrary_C_Send_Red_chest_Spawned_Event Parms{};

	Parms.Red_chest_location = Red_chest_location;
	Parms.Spawned_red_chest = Spawned_red_chest;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Red chest Looted Event
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Item_Type                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Items_Amount                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Red_chest_location                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Red_chest_Looted_Event(class UClass* Item_Type, int32 Items_Amount, class AActor* Red_chest_location, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Red chest Looted Event");

	Params::BP_AnalyticsLibrary_C_Send_Red_chest_Looted_Event Parms{};

	Parms.Item_Type = Item_Type;
	Parms.Items_Amount = Items_Amount;
	Parms.Red_chest_location = Red_chest_location;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Wardrobe Customization Variants List
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class AHumanPlayerController*           PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Wardrobe_Customization_Variants_List(class UJsonObject* Target, const class FString& FieldName, class AHumanPlayerController* PlayerController, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Wardrobe Customization Variants List");

	Params::BP_AnalyticsLibrary_C_Set_Wardrobe_Customization_Variants_List Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.PlayerController = PlayerController;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set User Locale
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Field_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Locale                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_User_Locale(class UJsonObject* Target, const class FString& Field_Name, const class FString& Locale, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set User Locale");

	Params::BP_AnalyticsLibrary_C_Set_User_Locale Parms{};

	Parms.Target = Target;
	Parms.Field_Name = std::move(Field_Name);
	Parms.Locale = std::move(Locale);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Player Downtime
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHumanPlayerController*           Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Player_Downtime(class AHumanPlayerController* Controller, class UJsonObject* Target, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Player Downtime");

	Params::BP_AnalyticsLibrary_C_Set_Player_Downtime Parms{};

	Parms.Controller = Controller;
	Parms.Target = Target;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Elimination Statistics
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Field_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// TArray<struct FStruct_GunfightRoundStats>RoundStatistics                                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Elimination_Statistics(class UJsonObject* Target, const class FString& Field_Name, TArray<struct FStruct_GunfightRoundStats>& RoundStatistics, class UObject* __WorldContext, class UJsonObject** Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Elimination Statistics");

	Params::BP_AnalyticsLibrary_C_Set_Elimination_Statistics Parms{};

	Parms.Target = Target;
	Parms.Field_Name = std::move(Field_Name);
	Parms.RoundStatistics = std::move(RoundStatistics);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	RoundStatistics = std::move(Parms.RoundStatistics);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Cassette Player Track Played
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_CassetteTrackInfo             CassetteTrackInfo                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Cassette_Player_Track_Played(const struct FS_CassetteTrackInfo& CassetteTrackInfo, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Cassette Player Track Played");

	Params::BP_AnalyticsLibrary_C_Send_Cassette_Player_Track_Played Parms{};

	Parms.CassetteTrackInfo = std::move(CassetteTrackInfo);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Cassette Player Interacted
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Cassette_Player_Interacted(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Cassette Player Interacted");

	Params::BP_AnalyticsLibrary_C_Send_Cassette_Player_Interacted Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Elimination Score
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Field_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// TArray<struct FStruct_GunfightRoundStats>RoundStatistics                                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Elimination_Score(class UJsonObject* Target, const class FString& Field_Name, TArray<struct FStruct_GunfightRoundStats>& RoundStatistics, class UObject* __WorldContext, class UJsonObject** Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Elimination Score");

	Params::BP_AnalyticsLibrary_C_Set_Elimination_Score Parms{};

	Parms.Target = Target;
	Parms.Field_Name = std::move(Field_Name);
	Parms.RoundStatistics = std::move(RoundStatistics);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	RoundStatistics = std::move(Parms.RoundStatistics);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Collect loot data
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class FString>                   List_of_spawned_loot                                   (Parm, OutParm)

void UBP_AnalyticsLibrary_C::Collect_loot_data(class UObject* __WorldContext, TArray<class FString>* List_of_spawned_loot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Collect loot data");

	Params::BP_AnalyticsLibrary_C_Collect_loot_data Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (List_of_spawned_loot != nullptr)
		*List_of_spawned_loot = std::move(Parms.List_of_spawned_loot);
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Player Connection Analytics
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHumanPlayerController*           Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Send_Player_Connection_Analytics(class AHumanPlayerController* Controller, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Player Connection Analytics");

	Params::BP_AnalyticsLibrary_C_Send_Player_Connection_Analytics Parms{};

	Parms.Controller = Controller;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Player Denied Hits
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHumanPlayerController*           Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Player_Denied_Hits(class AHumanPlayerController* Controller, class UJsonObject* Target, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Player Denied Hits");

	Params::BP_AnalyticsLibrary_C_Set_Player_Denied_Hits Parms{};

	Parms.Controller = Controller;
	Parms.Target = Target;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Challenge Rewards List
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FChallengeReward>         Challenge_Rewards                                      (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UJsonObject*>              Object                                                 (Parm, OutParm)

void UBP_AnalyticsLibrary_C::Set_Challenge_Rewards_List(TArray<struct FChallengeReward>& Challenge_Rewards, class UObject* __WorldContext, TArray<class UJsonObject*>* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Challenge Rewards List");

	Params::BP_AnalyticsLibrary_C_Set_Challenge_Rewards_List Parms{};

	Parms.Challenge_Rewards = std::move(Challenge_Rewards);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Challenge_Rewards = std::move(Parms.Challenge_Rewards);

	if (Object != nullptr)
		*Object = std::move(Parms.Object);
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Elimination Loadout Stats
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Field_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// TArray<struct FStruct_Gunfight_LoadoutAnalyticsInfo>LoadoutsStats                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Elimination_Loadout_Stats(class UJsonObject* Target, const class FString& Field_Name, TArray<struct FStruct_Gunfight_LoadoutAnalyticsInfo>& LoadoutsStats, class UObject* __WorldContext, class UJsonObject** Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Elimination Loadout Stats");

	Params::BP_AnalyticsLibrary_C_Set_Elimination_Loadout_Stats Parms{};

	Parms.Target = Target;
	Parms.Field_Name = std::move(Field_Name);
	Parms.LoadoutsStats = std::move(LoadoutsStats);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	LoadoutsStats = std::move(Parms.LoadoutsStats);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Elimination Loadout Dictionary
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      JsonObjectIn                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FS_GunFightLoadouts_S12          LoadoutsStats                                          (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      JsonObjectOut                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Elimination_Loadout_Dictionary(class UJsonObject*& JsonObjectIn, const class FString& FieldName, const struct FS_GunFightLoadouts_S12& LoadoutsStats, class UObject* __WorldContext, class UJsonObject** JsonObjectOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Elimination Loadout Dictionary");

	Params::BP_AnalyticsLibrary_C_Set_Elimination_Loadout_Dictionary Parms{};

	Parms.JsonObjectIn = JsonObjectIn;
	Parms.FieldName = std::move(FieldName);
	Parms.LoadoutsStats = std::move(LoadoutsStats);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	JsonObjectIn = Parms.JsonObjectIn;

	if (JsonObjectOut != nullptr)
		*JsonObjectOut = Parms.JsonObjectOut;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Elimination Loadouts For Match Selected
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FS_Gunfight_LoadoutSlotInfo>Loadouts                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Elimination_Loadouts_For_Match_Selected(TArray<struct FS_Gunfight_LoadoutSlotInfo>& Loadouts, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Elimination Loadouts For Match Selected");

	Params::BP_AnalyticsLibrary_C_Send_Elimination_Loadouts_For_Match_Selected Parms{};

	Parms.Loadouts = std::move(Loadouts);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Loadouts = std::move(Parms.Loadouts);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Elimination Match Loadouts Dictionary
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      JsonObjectIn                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// TArray<struct FS_GunFightLoadouts_S12>  LoadoutsStats                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      JsonObjectOut                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Elimination_Match_Loadouts_Dictionary(class UJsonObject*& JsonObjectIn, const class FString& FieldName, TArray<struct FS_GunFightLoadouts_S12>& LoadoutsStats, class UObject* __WorldContext, class UJsonObject** JsonObjectOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Elimination Match Loadouts Dictionary");

	Params::BP_AnalyticsLibrary_C_Set_Elimination_Match_Loadouts_Dictionary Parms{};

	Parms.JsonObjectIn = JsonObjectIn;
	Parms.FieldName = std::move(FieldName);
	Parms.LoadoutsStats = std::move(LoadoutsStats);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	JsonObjectIn = Parms.JsonObjectIn;
	LoadoutsStats = std::move(Parms.LoadoutsStats);

	if (JsonObjectOut != nullptr)
		*JsonObjectOut = Parms.JsonObjectOut;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Tutorial Skip Measures
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          End_Location                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInventoryComponent*              Inventory                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AHumanCharacter*                  Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Tutorial_Skip_Measures(const struct FVector& End_Location, class UInventoryComponent* Inventory, class AHumanCharacter* Character, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Tutorial Skip Measures");

	Params::BP_AnalyticsLibrary_C_Send_Tutorial_Skip_Measures Parms{};

	Parms.End_Location = std::move(End_Location);
	Parms.Inventory = Inventory;
	Parms.Character = Character;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set MatchmaikingMatch ID
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_MatchmaikingMatch_ID(class UJsonObject* Target, const class FString& FieldName, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set MatchmaikingMatch ID");

	Params::BP_AnalyticsLibrary_C_Set_MatchmaikingMatch_ID Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Elimination Vote Kick Ended
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_GSC_Team_C*                   VotingTeam                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Kick_result                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           AFK_check_result                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// TMap<int32, bool>                       PlayerID_To_Vote                                       (BlueprintVisible, BlueprintReadOnly, Parm)
// class FString                           Kickee                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Kicker                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Elimination_Vote_Kick_Ended(class UBP_GSC_Team_C* VotingTeam, const class FString& Kick_result, const class FString& AFK_check_result, const TMap<int32, bool>& PlayerID_To_Vote, const class FString& Kickee, const class FString& Kicker, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Elimination Vote Kick Ended");

	Params::BP_AnalyticsLibrary_C_Send_Elimination_Vote_Kick_Ended Parms{};

	Parms.VotingTeam = VotingTeam;
	Parms.Kick_result = std::move(Kick_result);
	Parms.AFK_check_result = std::move(AFK_check_result);
	Parms.PlayerID_To_Vote = std::move(PlayerID_To_Vote);
	Parms.Kickee = std::move(Kickee);
	Parms.Kicker = std::move(Kicker);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.SendPlayerEliminationTelemetry
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TMap<int32, class UJsonObject*>         PlayerTelemetry                                        (BlueprintVisible, BlueprintReadOnly, Parm)
// class FString                           MatchID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::SendPlayerEliminationTelemetry(const TMap<int32, class UJsonObject*>& PlayerTelemetry, const class FString& MatchID, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "SendPlayerEliminationTelemetry");

	Params::BP_AnalyticsLibrary_C_SendPlayerEliminationTelemetry Parms{};

	Parms.PlayerTelemetry = std::move(PlayerTelemetry);
	Parms.MatchID = std::move(MatchID);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Onboarding Login Rewards Claimed Event
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   EventDay                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FCloudItemInfo>           Rewards                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::Send_Onboarding_Login_Rewards_Claimed_Event(int32 EventDay, TArray<struct FCloudItemInfo>& Rewards, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Onboarding Login Rewards Claimed Event");

	Params::BP_AnalyticsLibrary_C_Send_Onboarding_Login_Rewards_Claimed_Event Parms{};

	Parms.EventDay = EventDay;
	Parms.Rewards = std::move(Rewards);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Rewards = std::move(Parms.Rewards);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.SendPlayerEncounterTelemetry
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TMap<float, class UJsonObject*>         PlayerTelemetry                                        (BlueprintVisible, BlueprintReadOnly, Parm)
// class FString                           MatchID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::SendPlayerEncounterTelemetry(const TMap<float, class UJsonObject*>& PlayerTelemetry, const class FString& MatchID, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "SendPlayerEncounterTelemetry");

	Params::BP_AnalyticsLibrary_C_SendPlayerEncounterTelemetry Parms{};

	Parms.PlayerTelemetry = std::move(PlayerTelemetry);
	Parms.MatchID = std::move(MatchID);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set All Active Booster Tickets List
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class AHumanPlayerController*           Player_Controller                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_All_Active_Booster_Tickets_List(class UJsonObject* Target, const class FString& FieldName, class AHumanPlayerController* Player_Controller, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set All Active Booster Tickets List");

	Params::BP_AnalyticsLibrary_C_Set_All_Active_Booster_Tickets_List Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Player_Controller = Player_Controller;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set All Unused Booster Tickets List
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class AHumanPlayerController*           Player_Controller                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_All_Unused_Booster_Tickets_List(class UJsonObject* Target, const class FString& FieldName, class AHumanPlayerController* Player_Controller, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set All Unused Booster Tickets List");

	Params::BP_AnalyticsLibrary_C_Set_All_Unused_Booster_Tickets_List Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Player_Controller = Player_Controller;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Used Tickets Counts
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class APlayerState*                     Player_State                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EBooster                                Booster                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AHumanPlayerController*           PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UJsonObject* UBP_AnalyticsLibrary_C::Set_Used_Tickets_Counts(class UJsonObject* Target, const class FString& FieldName, class APlayerState* Player_State, EBooster Booster, class AHumanPlayerController* PlayerController, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Used Tickets Counts");

	Params::BP_AnalyticsLibrary_C_Set_Used_Tickets_Counts Parms{};

	Parms.Target = Target;
	Parms.FieldName = std::move(FieldName);
	Parms.Player_State = Player_State;
	Parms.Booster = Booster;
	Parms.PlayerController = PlayerController;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Hit Registration Event
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHumanPlayerController*           Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Send_Hit_Registration_Event(class AHumanPlayerController* Controller, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Hit Registration Event");

	Params::BP_AnalyticsLibrary_C_Send_Hit_Registration_Event Parms{};

	Parms.Controller = Controller;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Send Network Stability Event
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHumanPlayerController*           Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Send_Network_Stability_Event(class AHumanPlayerController* Controller, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Send Network Stability Event");

	Params::BP_AnalyticsLibrary_C_Send_Network_Stability_Event Parms{};

	Parms.Controller = Controller;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.ParseBattlePassReward_BP_Structure_To_Code
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<struct FS_BattlePassLevelRewardFull>Rewards                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FBattlePassLevelRewardFull>NewParam                                               (Parm, OutParm)

void UBP_AnalyticsLibrary_C::ParseBattlePassReward_BP_Structure_To_Code(TArray<struct FS_BattlePassLevelRewardFull>& Rewards, class UObject* __WorldContext, TArray<struct FBattlePassLevelRewardFull>* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "ParseBattlePassReward_BP_Structure_To_Code");

	Params::BP_AnalyticsLibrary_C_ParseBattlePassReward_BP_Structure_To_Code Parms{};

	Parms.Rewards = std::move(Rewards);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Rewards = std::move(Parms.Rewards);

	if (NewParam != nullptr)
		*NewParam = std::move(Parms.NewParam);
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.SetPlayerLeaderboardsData
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AHumanPlayerController*           PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_object                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::SetPlayerLeaderboardsData(class UJsonObject* Target, class AHumanPlayerController* PlayerController, class UObject* __WorldContext, class UJsonObject** Return_object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "SetPlayerLeaderboardsData");

	Params::BP_AnalyticsLibrary_C_SetPlayerLeaderboardsData Parms{};

	Parms.Target = Target;
	Parms.PlayerController = PlayerController;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_object != nullptr)
		*Return_object = Parms.Return_object;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.SetPlayerLeaderboardsSkillRating
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FCloudUserStatistics             CloudUserStatistics                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UJsonObject* UBP_AnalyticsLibrary_C::SetPlayerLeaderboardsSkillRating(const struct FCloudUserStatistics& CloudUserStatistics, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "SetPlayerLeaderboardsSkillRating");

	Params::BP_AnalyticsLibrary_C_SetPlayerLeaderboardsSkillRating Parms{};

	Parms.CloudUserStatistics = std::move(CloudUserStatistics);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.SetPlayerLeaderboardsRanks
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UBP_OnlineUserLeaderBoardsComponent_C*LeaderboardsComponent                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EOnlineGameMode                         Game_Mode                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UJsonObject* UBP_AnalyticsLibrary_C::SetPlayerLeaderboardsRanks(class UBP_OnlineUserLeaderBoardsComponent_C* LeaderboardsComponent, EOnlineGameMode Game_Mode, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "SetPlayerLeaderboardsRanks");

	Params::BP_AnalyticsLibrary_C_SetPlayerLeaderboardsRanks Parms{};

	Parms.LeaderboardsComponent = LeaderboardsComponent;
	Parms.Game_Mode = Game_Mode;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.IsMatchID Special
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsSpecial                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AnalyticsLibrary_C::IsMatchID_Special(class UObject* __WorldContext, bool* IsSpecial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "IsMatchID Special");

	Params::BP_AnalyticsLibrary_C_IsMatchID_Special Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (IsSpecial != nullptr)
		*IsSpecial = Parms.IsSpecial;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.Set Stamina Consumption Dict
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonObject*                      Target_                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FieldName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class AHumanCharacter*                  Char_                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJsonObject*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnalyticsLibrary_C::Set_Stamina_Consumption_Dict(class UJsonObject* Target_, const class FString& FieldName, class AHumanCharacter* Char_, class UObject* __WorldContext, class UJsonObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "Set Stamina Consumption Dict");

	Params::BP_AnalyticsLibrary_C_Set_Stamina_Consumption_Dict Parms{};

	Parms.Target_ = Target_;
	Parms.FieldName = std::move(FieldName);
	Parms.Char_ = Char_;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_AnalyticsLibrary.BP_AnalyticsLibrary_C.SendNewsAnalytics
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FS_NewsAnalyticsStructure>AnalyticsData                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AnalyticsLibrary_C::SendNewsAnalytics(TArray<struct FS_NewsAnalyticsStructure>& AnalyticsData, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_AnalyticsLibrary_C", "SendNewsAnalytics");

	Params::BP_AnalyticsLibrary_C_SendNewsAnalytics Parms{};

	Parms.AnalyticsData = std::move(AnalyticsData);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	AnalyticsData = std::move(Parms.AnalyticsData);

	return Parms.ReturnValue;
}

}

