#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GMComponent_ADM_Reward_TrackedBox

#include "Basic.hpp"

#include "BP_GMComponent_ADM_Reward_TrackedBox_classes.hpp"
#include "BP_GMComponent_ADM_Reward_TrackedBox_parameters.hpp"


namespace SDK
{

// Function BP_GMComponent_ADM_Reward_TrackedBox.BP_GMComponent_ADM_Reward_TrackedBox_C.ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GMComponent_ADM_Reward_TrackedBox_C::ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GMComponent_ADM_Reward_TrackedBox_C", "ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox");

	Params::BP_GMComponent_ADM_Reward_TrackedBox_C_ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GMComponent_ADM_Reward_TrackedBox.BP_GMComponent_ADM_Reward_TrackedBox_C.Toggle comm station stealth buff
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Active                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_GMComponent_ADM_Reward_TrackedBox_C::Toggle_comm_station_stealth_buff(bool Active)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GMComponent_ADM_Reward_TrackedBox_C", "Toggle comm station stealth buff");

	Params::BP_GMComponent_ADM_Reward_TrackedBox_C_Toggle_comm_station_stealth_buff Parms{};

	Parms.Active = Active;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GMComponent_ADM_Reward_TrackedBox.BP_GMComponent_ADM_Reward_TrackedBox_C.Disable Tracking
// (BlueprintCallable, BlueprintEvent)

void UBP_GMComponent_ADM_Reward_TrackedBox_C::Disable_Tracking()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GMComponent_ADM_Reward_TrackedBox_C", "Disable Tracking");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GMComponent_ADM_Reward_TrackedBox.BP_GMComponent_ADM_Reward_TrackedBox_C.Match Has Started
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void UBP_GMComponent_ADM_Reward_TrackedBox_C::Match_Has_Started()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GMComponent_ADM_Reward_TrackedBox_C", "Match Has Started");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GMComponent_ADM_Reward_TrackedBox.BP_GMComponent_ADM_Reward_TrackedBox_C.Start Tracking
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AirDropContainer_Base_C*      Looted_Container                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           Item_Taken                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GMComponent_ADM_Reward_TrackedBox_C::Start_Tracking(class ABP_AirDropContainer_Base_C* Looted_Container, class UClass* Item_Taken)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GMComponent_ADM_Reward_TrackedBox_C", "Start Tracking");

	Params::BP_GMComponent_ADM_Reward_TrackedBox_C_Start_Tracking Parms{};

	Parms.Looted_Container = Looted_Container;
	Parms.Item_Taken = Item_Taken;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GMComponent_ADM_Reward_TrackedBox.BP_GMComponent_ADM_Reward_TrackedBox_C.Initialize Component
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void UBP_GMComponent_ADM_Reward_TrackedBox_C::Initialize_Component()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GMComponent_ADM_Reward_TrackedBox_C", "Initialize Component");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GMComponent_ADM_Reward_TrackedBox.BP_GMComponent_ADM_Reward_TrackedBox_C.Game Mode Toggled
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Game_Mode_Is_Running                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_GMComponent_ADM_Reward_TrackedBox_C::Game_Mode_Toggled(bool Game_Mode_Is_Running)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GMComponent_ADM_Reward_TrackedBox_C", "Game Mode Toggled");

	Params::BP_GMComponent_ADM_Reward_TrackedBox_C_Game_Mode_Toggled Parms{};

	Parms.Game_Mode_Is_Running = Game_Mode_Is_Running;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GMComponent_ADM_Reward_TrackedBox.BP_GMComponent_ADM_Reward_TrackedBox_C.Ping Carriers
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_GMComponent_ADM_Reward_TrackedBox_C::Ping_Carriers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GMComponent_ADM_Reward_TrackedBox_C", "Ping Carriers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GMComponent_ADM_Reward_TrackedBox.BP_GMComponent_ADM_Reward_TrackedBox_C.Create PCComponent for Player Controller
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PlayerController_AirDropModular_C*Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBP_PCComponent_ADM_C*            Player_Controller_Component                            (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GMComponent_ADM_Reward_TrackedBox_C::Create_PCComponent_for_Player_Controller(class ABP_PlayerController_AirDropModular_C* Controller, class UBP_PCComponent_ADM_C** Player_Controller_Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GMComponent_ADM_Reward_TrackedBox_C", "Create PCComponent for Player Controller");

	Params::BP_GMComponent_ADM_Reward_TrackedBox_C_Create_PCComponent_for_Player_Controller Parms{};

	Parms.Controller = Controller;

	UObject::ProcessEvent(Func, &Parms);

	if (Player_Controller_Component != nullptr)
		*Player_Controller_Component = Parms.Player_Controller_Component;
}


// Function BP_GMComponent_ADM_Reward_TrackedBox.BP_GMComponent_ADM_Reward_TrackedBox_C.Is Player Winner
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PlayerController_AirDropModular_C*Player_Controller                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Player_Is_Winner                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Output_is_Valid                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_GMComponent_ADM_Reward_TrackedBox_C::Is_Player_Winner(class ABP_PlayerController_AirDropModular_C* Player_Controller, bool* Player_Is_Winner, bool* Output_is_Valid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GMComponent_ADM_Reward_TrackedBox_C", "Is Player Winner");

	Params::BP_GMComponent_ADM_Reward_TrackedBox_C_Is_Player_Winner Parms{};

	Parms.Player_Controller = Player_Controller;

	UObject::ProcessEvent(Func, &Parms);

	if (Player_Is_Winner != nullptr)
		*Player_Is_Winner = Parms.Player_Is_Winner;

	if (Output_is_Valid != nullptr)
		*Output_is_Valid = Parms.Output_is_Valid;
}


// Function BP_GMComponent_ADM_Reward_TrackedBox.BP_GMComponent_ADM_Reward_TrackedBox_C.Initialize Bindings
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_GMComponent_ADM_Reward_TrackedBox_C::Initialize_Bindings(bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GMComponent_ADM_Reward_TrackedBox_C", "Initialize Bindings");

	Params::BP_GMComponent_ADM_Reward_TrackedBox_C_Initialize_Bindings Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_GMComponent_ADM_Reward_TrackedBox.BP_GMComponent_ADM_Reward_TrackedBox_C.Get Rewards For Player
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PlayerController_AirDropModular_C*Player_Controller                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class FString>                   Rewards                                                (Parm, OutParm)

void UBP_GMComponent_ADM_Reward_TrackedBox_C::Get_Rewards_For_Player(class ABP_PlayerController_AirDropModular_C* Player_Controller, TArray<class FString>* Rewards)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GMComponent_ADM_Reward_TrackedBox_C", "Get Rewards For Player");

	Params::BP_GMComponent_ADM_Reward_TrackedBox_C_Get_Rewards_For_Player Parms{};

	Parms.Player_Controller = Player_Controller;

	UObject::ProcessEvent(Func, &Parms);

	if (Rewards != nullptr)
		*Rewards = std::move(Parms.Rewards);
}

}

