#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_CassettePlayer

#include "Basic.hpp"

#include "Flame_classes.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_CassettePlayer.UI_CassettePlayer_C
// 0x0178 (0x0450 - 0x02D8)
class UUI_CassettePlayer_C final : public UMenuWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UFlameTextBlock*                        Author_Text;                                       // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Content2;                                          // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameTextBlock*                        CurrentTime_Text;                                  // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameTextBlock*                        FilterText;                                        // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameTextBlock*                        FlameTextYoudontown;                               // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_941;                                         // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               NoSongDummy_Overlay;                               // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PlayButton_Image;                                  // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PlayButton_Image_1;                                // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               PlayingSong_Overlay;                               // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameTextBlock*                        SongName_Text;                                     // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           SongProgress_ProgressBar;                          // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           SongProgress_ProgressBar_1;                        // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TrackImage_Image;                                  // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TrackImage_Image_1;                                // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             TrackList;                                         // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        TrackListWidgetSwitcher;                           // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameTextBlock*                        TrackTime_Text;                                    // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_InputActionWidget_C*                UI_CloseButton;                                    // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_FlameSafezone_C*                    UI_FlameSafezone;                                  // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_InputActionWidget_C*                UI_InputActionWidget;                              // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_InputActionWidget_C*                UI_InputActionWidget_1;                            // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_InputActionWidget_C*                UI_PlayButton;                                     // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_InputActionWidget_C*                UI_PreviewButton;                                  // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_InputActionWidget_C*                UI_Rotate;                                         // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_InputActionWidget_C*                UI_ScrollDown;                                     // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_InputActionWidget_C*                UI_ScrollUp;                                       // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_InputActionWidget_C*                UI_StopButton;                                     // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class UUI_CassettePlayer_TrackButton_C*> MusicButtonList;                                   // 0x03C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class ABP_CassettePlayer_C*                   CassettePlayer;                                    // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FTimerHandle                           TrackTimeUpdateTimer;                              // 0x03D8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          CanAxisScroll;                                     // 0x03E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E1[0x3];                                      // 0x03E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AxisScrollCooldown;                                // 0x03E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsUsingCassetteCamera;                            // 0x03E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E9[0x3];                                      // 0x03E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LStick_AxisInput;                                  // 0x03EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentFilter;                                     // 0x03F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F4[0x4];                                      // 0x03F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<int32, class FText>                      FilterIndex_To_Text;                               // 0x03F8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         SelectedTrackIndex;                                // 0x0448(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_UI_CassettePlayer(int32 EntryPoint);
	void HandleInput(float DeltaTime, float X_Input);
	void OneMoveRight(float AxisValue);
	void BndEvt__UI_GamepadActionWidget_K2Node_ComponentBoundEvent_0_OnActionPressedEvent__DelegateSignature();
	void PlayTrack();
	void BndEvt__UI_InputActionWidget_K2Node_ComponentBoundEvent_7_OnActionPressedEvent__DelegateSignature();
	void BndEvt__UI_InputActionWidget_1_K2Node_ComponentBoundEvent_6_OnActionPressedEvent__DelegateSignature();
	void BndEvt__UI_ScrollDown_K2Node_ComponentBoundEvent_1_OnActionPressedEvent__DelegateSignature();
	void PreConstruct(bool IsDesignTime);
	void OnAvailableTracksAdded();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Destruct();
	void BndEvt__UI_PreviewButton_K2Node_ComponentBoundEvent_5_OnActionPressedEvent__DelegateSignature();
	void LookUpDown(float AxisValue);
	void Start_Track_Time_Update();
	void Construct();
	void Started_New_Song(class UBP_CassetteTrack_C* Previous, class UBP_CassetteTrack_C* Current);
	void BndEvt__UI_StopButton_K2Node_ComponentBoundEvent_4_OnActionPressedEvent__DelegateSignature();
	void BndEvt__UI_CloseButton_K2Node_ComponentBoundEvent_3_OnActionPressedEvent__DelegateSignature();
	void BndEvt__UI_ScrollUp_K2Node_ComponentBoundEvent_2_OnActionPressedEvent__DelegateSignature();
	void PopulateTrackList(TArray<class UBP_CassetteTrack_C*>& Tracks, class UBP_CassetteTrack_C* PlayedTrack, int32 Filter);
	void SelectTrackButton(int32 TrackIndex);
	void SelectNextTrack();
	void SelectPreviousTrack();
	void PlaySelectedButton(bool* Success);
	void GetSelectedTrackButton(class UUI_CassettePlayer_TrackButton_C** SelectedTrackButton, int32* Index_0, bool* IsFound);
	void GetPlayedTrackButton(class UUI_CassettePlayer_TrackButton_C** SelectedTrackButton);
	void GetTrackButton(class UBP_CassetteTrack_C* CassetteTrack, class UUI_CassettePlayer_TrackButton_C** Button);
	void SetCurrentTrackInfo(class UBP_CassetteTrack_C* Track);
	void UpdateTrackTime();
	void Get_Time_Text_From_Float(float Value, class FText* Text);
	void Enable_Axis_Scroll();
	void UpdateRotateVisibility(bool bCanRotate);
	void UpdateButtonsVisibility(bool bPreviewButtonVisibility, bool bSelectedCurrentlyPlayedButton, bool bHideAll);
	void UpdateCassetteFilter(int32 Filter);
	void ChangeFilter(int32 FilterIndex, bool* bSuccess);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_CassettePlayer_C">();
	}
	static class UUI_CassettePlayer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_CassettePlayer_C>();
	}
};
static_assert(alignof(UUI_CassettePlayer_C) == 0x000008, "Wrong alignment on UUI_CassettePlayer_C");
static_assert(sizeof(UUI_CassettePlayer_C) == 0x000450, "Wrong size on UUI_CassettePlayer_C");
static_assert(offsetof(UUI_CassettePlayer_C, UberGraphFrame) == 0x0002D8, "Member 'UUI_CassettePlayer_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_CassettePlayer_C, Author_Text) == 0x0002E0, "Member 'UUI_CassettePlayer_C::Author_Text' has a wrong offset!");
static_assert(offsetof(UUI_CassettePlayer_C, Content2) == 0x0002E8, "Member 'UUI_CassettePlayer_C::Content2' has a wrong offset!");
static_assert(offsetof(UUI_CassettePlayer_C, CurrentTime_Text) == 0x0002F0, "Member 'UUI_CassettePlayer_C::CurrentTime_Text' has a wrong offset!");
static_assert(offsetof(UUI_CassettePlayer_C, FilterText) == 0x0002F8, "Member 'UUI_CassettePlayer_C::FilterText' has a wrong offset!");
static_assert(offsetof(UUI_CassettePlayer_C, FlameTextYoudontown) == 0x000300, "Member 'UUI_CassettePlayer_C::FlameTextYoudontown' has a wrong offset!");
static_assert(offsetof(UUI_CassettePlayer_C, Image_941) == 0x000308, "Member 'UUI_CassettePlayer_C::Image_941' has a wrong offset!");
static_assert(offsetof(UUI_CassettePlayer_C, NoSongDummy_Overlay) == 0x000310, "Member 'UUI_CassettePlayer_C::NoSongDummy_Overlay' has a wrong offset!");
static_assert(offsetof(UUI_CassettePlayer_C, PlayButton_Image) == 0x000318, "Member 'UUI_CassettePlayer_C::PlayButton_Image' has a wrong offset!");
static_assert(offsetof(UUI_CassettePlayer_C, PlayButton_Image_1) == 0x000320, "Member 'UUI_CassettePlayer_C::PlayButton_Image_1' has a wrong offset!");
static_assert(offsetof(UUI_CassettePlayer_C, PlayingSong_Overlay) == 0x000328, "Member 'UUI_CassettePlayer_C::PlayingSong_Overlay' has a wrong offset!");
static_assert(offsetof(UUI_CassettePlayer_C, SongName_Text) == 0x000330, "Member 'UUI_CassettePlayer_C::SongName_Text' has a wrong offset!");
static_assert(offsetof(UUI_CassettePlayer_C, SongProgress_ProgressBar) == 0x000338, "Member 'UUI_CassettePlayer_C::SongProgress_ProgressBar' has a wrong offset!");
static_assert(offsetof(UUI_CassettePlayer_C, SongProgress_ProgressBar_1) == 0x000340, "Member 'UUI_CassettePlayer_C::SongProgress_ProgressBar_1' has a wrong offset!");
static_assert(offsetof(UUI_CassettePlayer_C, TrackImage_Image) == 0x000348, "Member 'UUI_CassettePlayer_C::TrackImage_Image' has a wrong offset!");
static_assert(offsetof(UUI_CassettePlayer_C, TrackImage_Image_1) == 0x000350, "Member 'UUI_CassettePlayer_C::TrackImage_Image_1' has a wrong offset!");
static_assert(offsetof(UUI_CassettePlayer_C, TrackList) == 0x000358, "Member 'UUI_CassettePlayer_C::TrackList' has a wrong offset!");
static_assert(offsetof(UUI_CassettePlayer_C, TrackListWidgetSwitcher) == 0x000360, "Member 'UUI_CassettePlayer_C::TrackListWidgetSwitcher' has a wrong offset!");
static_assert(offsetof(UUI_CassettePlayer_C, TrackTime_Text) == 0x000368, "Member 'UUI_CassettePlayer_C::TrackTime_Text' has a wrong offset!");
static_assert(offsetof(UUI_CassettePlayer_C, UI_CloseButton) == 0x000370, "Member 'UUI_CassettePlayer_C::UI_CloseButton' has a wrong offset!");
static_assert(offsetof(UUI_CassettePlayer_C, UI_FlameSafezone) == 0x000378, "Member 'UUI_CassettePlayer_C::UI_FlameSafezone' has a wrong offset!");
static_assert(offsetof(UUI_CassettePlayer_C, UI_InputActionWidget) == 0x000380, "Member 'UUI_CassettePlayer_C::UI_InputActionWidget' has a wrong offset!");
static_assert(offsetof(UUI_CassettePlayer_C, UI_InputActionWidget_1) == 0x000388, "Member 'UUI_CassettePlayer_C::UI_InputActionWidget_1' has a wrong offset!");
static_assert(offsetof(UUI_CassettePlayer_C, UI_PlayButton) == 0x000390, "Member 'UUI_CassettePlayer_C::UI_PlayButton' has a wrong offset!");
static_assert(offsetof(UUI_CassettePlayer_C, UI_PreviewButton) == 0x000398, "Member 'UUI_CassettePlayer_C::UI_PreviewButton' has a wrong offset!");
static_assert(offsetof(UUI_CassettePlayer_C, UI_Rotate) == 0x0003A0, "Member 'UUI_CassettePlayer_C::UI_Rotate' has a wrong offset!");
static_assert(offsetof(UUI_CassettePlayer_C, UI_ScrollDown) == 0x0003A8, "Member 'UUI_CassettePlayer_C::UI_ScrollDown' has a wrong offset!");
static_assert(offsetof(UUI_CassettePlayer_C, UI_ScrollUp) == 0x0003B0, "Member 'UUI_CassettePlayer_C::UI_ScrollUp' has a wrong offset!");
static_assert(offsetof(UUI_CassettePlayer_C, UI_StopButton) == 0x0003B8, "Member 'UUI_CassettePlayer_C::UI_StopButton' has a wrong offset!");
static_assert(offsetof(UUI_CassettePlayer_C, MusicButtonList) == 0x0003C0, "Member 'UUI_CassettePlayer_C::MusicButtonList' has a wrong offset!");
static_assert(offsetof(UUI_CassettePlayer_C, CassettePlayer) == 0x0003D0, "Member 'UUI_CassettePlayer_C::CassettePlayer' has a wrong offset!");
static_assert(offsetof(UUI_CassettePlayer_C, TrackTimeUpdateTimer) == 0x0003D8, "Member 'UUI_CassettePlayer_C::TrackTimeUpdateTimer' has a wrong offset!");
static_assert(offsetof(UUI_CassettePlayer_C, CanAxisScroll) == 0x0003E0, "Member 'UUI_CassettePlayer_C::CanAxisScroll' has a wrong offset!");
static_assert(offsetof(UUI_CassettePlayer_C, AxisScrollCooldown) == 0x0003E4, "Member 'UUI_CassettePlayer_C::AxisScrollCooldown' has a wrong offset!");
static_assert(offsetof(UUI_CassettePlayer_C, bIsUsingCassetteCamera) == 0x0003E8, "Member 'UUI_CassettePlayer_C::bIsUsingCassetteCamera' has a wrong offset!");
static_assert(offsetof(UUI_CassettePlayer_C, LStick_AxisInput) == 0x0003EC, "Member 'UUI_CassettePlayer_C::LStick_AxisInput' has a wrong offset!");
static_assert(offsetof(UUI_CassettePlayer_C, CurrentFilter) == 0x0003F0, "Member 'UUI_CassettePlayer_C::CurrentFilter' has a wrong offset!");
static_assert(offsetof(UUI_CassettePlayer_C, FilterIndex_To_Text) == 0x0003F8, "Member 'UUI_CassettePlayer_C::FilterIndex_To_Text' has a wrong offset!");
static_assert(offsetof(UUI_CassettePlayer_C, SelectedTrackIndex) == 0x000448, "Member 'UUI_CassettePlayer_C::SelectedTrackIndex' has a wrong offset!");

}

