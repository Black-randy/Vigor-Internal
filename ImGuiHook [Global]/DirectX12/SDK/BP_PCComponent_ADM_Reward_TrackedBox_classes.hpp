#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PCComponent_ADM_Reward_TrackedBox

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "S_CustomMapMarker_structs.hpp"
#include "BP_PCComponent_ADM_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PCComponent_ADM_Reward_TrackedBox.BP_PCComponent_ADM_Reward_TrackedBox_C
// 0x00A0 (0x0188 - 0x00E8)
class UBP_PCComponent_ADM_Reward_TrackedBox_C final : public UBP_PCComponent_ADM_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_PCComponent_ADM_Reward_TrackedBox_C; // 0x00E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TArray<class FName>                           Marker_Names;                                      // 0x00F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FS_CustomMapMarker>             Marker_Types;                                      // 0x0100(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<float>                                 Marker_Durations;                                  // 0x0110(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<float>                                 Marker_Remaining_Durations;                        // 0x0120(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FS_CustomMapMarker                     Marker_Settings;                                   // 0x0130(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	float                                         Last_Marker_Refresh_Timestamp;                     // 0x0180(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Marker_Fade_Period;                                // 0x0184(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_PCComponent_ADM_Reward_TrackedBox(int32 EntryPoint);
	void ReceiveBeginPlay();
	void Save_Marker_Settings_on_Client(const struct FS_CustomMapMarker& Marker_Settings_0);
	void Ping_Objective_Location(float Ping_Duration, const struct FVector& Ping_Location, bool Carried);
	void Add_Marker(class FName Marker_Name, const float& Marker_Duration, const struct FS_CustomMapMarker& Marker_Type);
	void Remove_Marker(class FName Marker_Name, int32 Marker_Index);
	void Refresh_Markers();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PCComponent_ADM_Reward_TrackedBox_C">();
	}
	static class UBP_PCComponent_ADM_Reward_TrackedBox_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_PCComponent_ADM_Reward_TrackedBox_C>();
	}
};
static_assert(alignof(UBP_PCComponent_ADM_Reward_TrackedBox_C) == 0x000008, "Wrong alignment on UBP_PCComponent_ADM_Reward_TrackedBox_C");
static_assert(sizeof(UBP_PCComponent_ADM_Reward_TrackedBox_C) == 0x000188, "Wrong size on UBP_PCComponent_ADM_Reward_TrackedBox_C");
static_assert(offsetof(UBP_PCComponent_ADM_Reward_TrackedBox_C, UberGraphFrame_BP_PCComponent_ADM_Reward_TrackedBox_C) == 0x0000E8, "Member 'UBP_PCComponent_ADM_Reward_TrackedBox_C::UberGraphFrame_BP_PCComponent_ADM_Reward_TrackedBox_C' has a wrong offset!");
static_assert(offsetof(UBP_PCComponent_ADM_Reward_TrackedBox_C, Marker_Names) == 0x0000F0, "Member 'UBP_PCComponent_ADM_Reward_TrackedBox_C::Marker_Names' has a wrong offset!");
static_assert(offsetof(UBP_PCComponent_ADM_Reward_TrackedBox_C, Marker_Types) == 0x000100, "Member 'UBP_PCComponent_ADM_Reward_TrackedBox_C::Marker_Types' has a wrong offset!");
static_assert(offsetof(UBP_PCComponent_ADM_Reward_TrackedBox_C, Marker_Durations) == 0x000110, "Member 'UBP_PCComponent_ADM_Reward_TrackedBox_C::Marker_Durations' has a wrong offset!");
static_assert(offsetof(UBP_PCComponent_ADM_Reward_TrackedBox_C, Marker_Remaining_Durations) == 0x000120, "Member 'UBP_PCComponent_ADM_Reward_TrackedBox_C::Marker_Remaining_Durations' has a wrong offset!");
static_assert(offsetof(UBP_PCComponent_ADM_Reward_TrackedBox_C, Marker_Settings) == 0x000130, "Member 'UBP_PCComponent_ADM_Reward_TrackedBox_C::Marker_Settings' has a wrong offset!");
static_assert(offsetof(UBP_PCComponent_ADM_Reward_TrackedBox_C, Last_Marker_Refresh_Timestamp) == 0x000180, "Member 'UBP_PCComponent_ADM_Reward_TrackedBox_C::Last_Marker_Refresh_Timestamp' has a wrong offset!");
static_assert(offsetof(UBP_PCComponent_ADM_Reward_TrackedBox_C, Marker_Fade_Period) == 0x000184, "Member 'UBP_PCComponent_ADM_Reward_TrackedBox_C::Marker_Fade_Period' has a wrong offset!");

}

