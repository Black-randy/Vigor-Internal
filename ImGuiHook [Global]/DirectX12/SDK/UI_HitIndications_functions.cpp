#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_HitIndications

#include "Basic.hpp"

#include "UI_HitIndications_classes.hpp"
#include "UI_HitIndications_parameters.hpp"


namespace SDK
{

// Function UI_HitIndications.UI_HitIndications_C.ExecuteUbergraph_UI_HitIndications
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_HitIndications_C::ExecuteUbergraph_UI_HitIndications(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HitIndications_C", "ExecuteUbergraph_UI_HitIndications");

	Params::UI_HitIndications_C_ExecuteUbergraph_UI_HitIndications Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_HitIndications.UI_HitIndications_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_HitIndications_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HitIndications_C", "PreConstruct");

	Params::UI_HitIndications_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_HitIndications.UI_HitIndications_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_HitIndications_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HitIndications_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_HitIndications.UI_HitIndications_C.InitializeHitIndication
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUI_HitIndication_C*              Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          BulletOrigin                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsPlayerHit                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsArmorHit                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsFriendlyFire                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class ABP_Character_Script_C*           Caster                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_HitIndications_C::InitializeHitIndication(class UUI_HitIndication_C* Target, const struct FVector& BulletOrigin, bool IsPlayerHit, bool IsArmorHit, bool IsFriendlyFire, class ABP_Character_Script_C* Caster)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HitIndications_C", "InitializeHitIndication");

	Params::UI_HitIndications_C_InitializeHitIndication Parms{};

	Parms.Target = Target;
	Parms.BulletOrigin = std::move(BulletOrigin);
	Parms.IsPlayerHit = IsPlayerHit;
	Parms.IsArmorHit = IsArmorHit;
	Parms.IsFriendlyFire = IsFriendlyFire;
	Parms.Caster = Caster;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_HitIndications.UI_HitIndications_C.CreateHitLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          BulletOrigin                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsPlayerHit                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsArmorHit                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsFriendlyFire                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class ABP_Character_Script_C*           Caster                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UUI_HitIndication_C*              OutputPin                                              (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_HitIndications_C::CreateHitLocation(const struct FVector& BulletOrigin, bool IsPlayerHit, bool IsArmorHit, bool IsFriendlyFire, class ABP_Character_Script_C* Caster, class UUI_HitIndication_C** OutputPin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HitIndications_C", "CreateHitLocation");

	Params::UI_HitIndications_C_CreateHitLocation Parms{};

	Parms.BulletOrigin = std::move(BulletOrigin);
	Parms.IsPlayerHit = IsPlayerHit;
	Parms.IsArmorHit = IsArmorHit;
	Parms.IsFriendlyFire = IsFriendlyFire;
	Parms.Caster = Caster;

	UObject::ProcessEvent(Func, &Parms);

	if (OutputPin != nullptr)
		*OutputPin = Parms.OutputPin;
}

}

