#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GSComponent_ADM

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_GSComponent_ADM.BP_GSComponent_ADM_C
// 0x0030 (0x00E0 - 0x00B0)
#pragma pack(push, 0x1)
class alignas(0x08) UBP_GSComponent_ADM_C : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_GMComponent_ADM_Base_C*             Game_Mode_Component;                               // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_PCComponent_ADM_C*                  Player_Controller_Component;                       // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Module_Name;                                       // 0x00C8(0x0010)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	int32                                         Module_ID;                                         // 0x00D8(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_GSComponent_ADM(int32 EntryPoint);
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_GSComponent_ADM_C">();
	}
	static class UBP_GSComponent_ADM_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_GSComponent_ADM_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(UBP_GSComponent_ADM_C) == 0x000008, "Wrong alignment on UBP_GSComponent_ADM_C");
static_assert(sizeof(UBP_GSComponent_ADM_C) == 0x0000E0, "Wrong size on UBP_GSComponent_ADM_C");
static_assert(offsetof(UBP_GSComponent_ADM_C, UberGraphFrame) == 0x0000B0, "Member 'UBP_GSComponent_ADM_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_GSComponent_ADM_C, Game_Mode_Component) == 0x0000B8, "Member 'UBP_GSComponent_ADM_C::Game_Mode_Component' has a wrong offset!");
static_assert(offsetof(UBP_GSComponent_ADM_C, Player_Controller_Component) == 0x0000C0, "Member 'UBP_GSComponent_ADM_C::Player_Controller_Component' has a wrong offset!");
static_assert(offsetof(UBP_GSComponent_ADM_C, Module_Name) == 0x0000C8, "Member 'UBP_GSComponent_ADM_C::Module_Name' has a wrong offset!");
static_assert(offsetof(UBP_GSComponent_ADM_C, Module_ID) == 0x0000D8, "Member 'UBP_GSComponent_ADM_C::Module_ID' has a wrong offset!");

}

