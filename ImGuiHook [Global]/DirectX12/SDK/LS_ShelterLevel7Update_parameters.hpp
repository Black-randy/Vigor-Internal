#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LS_ShelterLevel7Update

#include "Basic.hpp"

#include "S_ActorTagVisibilityMapWrap_structs.hpp"


namespace SDK::Params
{

// Function LS_ShelterLevel7Update.SequenceDirector_C.ExecuteUbergraph_SequenceDirector
// 0x01A8 (0x01A8 - 0x0000)
struct SequenceDirector_C_ExecuteUbergraph_SequenceDirector final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_Tag;                            // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_MaxIndex;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_StreamingRepair_C*                  K2Node_CustomEvent_BP_StreamingRepair;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bShouldBeVisible;               // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_ShelterLevel;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ShelterCameras_C*                   K2Node_CustomEvent_BP_ShelterCameras_2;            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Index;                          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ShelterCameras_C*                   K2Node_CustomEvent_BP_ShelterCameras_1;            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Mannequin_C*                        K2Node_CustomEvent_BP_Mannequin;                   // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerController*                 CallFunc_GetFlameController_ReturnValue;           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerCharacter*                  CallFunc_GetHumanCharacter_ReturnValue;            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_Tag_1;                          // 0x009C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Visibility;                     // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, int32>                    K2Node_MakeMap_Map;                                // 0x00A8(0x0050)()
	TMap<class FString, int32>                    K2Node_MakeMap_Map_1;                              // 0x00F8(0x0050)()
	struct FS_ActorTagVisibilityMapWrap           K2Node_MakeStruct_S_ActorTagVisibilityMapWrap;     // 0x0148(0x0050)(HasGetValueTypeHash)
	class ABP_ShelterCameras_C*                   K2Node_CustomEvent_BP_ShelterCameras;              // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_CaptureTotalCount;              // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector) == 0x000008, "Wrong alignment on SequenceDirector_C_ExecuteUbergraph_SequenceDirector");
static_assert(sizeof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector) == 0x0001A8, "Wrong size on SequenceDirector_C_ExecuteUbergraph_SequenceDirector");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, EntryPoint) == 0x000000, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::EntryPoint' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_CustomEvent_Tag) == 0x000008, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_CustomEvent_Tag' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_CustomEvent_MaxIndex) == 0x000018, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_CustomEvent_MaxIndex' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, Temp_int_Variable) == 0x00001C, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, CallFunc_Conv_IntToString_ReturnValue) == 0x000020, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000040, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, CallFunc_Conv_StringToName_ReturnValue) == 0x000044, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_CustomEvent_BP_StreamingRepair) == 0x000050, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_CustomEvent_BP_StreamingRepair' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_CustomEvent_bShouldBeVisible) == 0x000058, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_CustomEvent_bShouldBeVisible' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_CustomEvent_ShelterLevel) == 0x00005C, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_CustomEvent_ShelterLevel' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_CustomEvent_BP_ShelterCameras_2) == 0x000060, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_CustomEvent_BP_ShelterCameras_2' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_CustomEvent_Index) == 0x000068, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_CustomEvent_Index' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_CustomEvent_BP_ShelterCameras_1) == 0x000070, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_CustomEvent_BP_ShelterCameras_1' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_CustomEvent_BP_Mannequin) == 0x000078, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_CustomEvent_BP_Mannequin' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, CallFunc_GetFlameController_ReturnValue) == 0x000080, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::CallFunc_GetFlameController_ReturnValue' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, CallFunc_IsValid_ReturnValue) == 0x000088, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, CallFunc_GetHumanCharacter_ReturnValue) == 0x000090, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::CallFunc_GetHumanCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, CallFunc_IsValid_ReturnValue_1) == 0x000098, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_CustomEvent_Tag_1) == 0x00009C, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_CustomEvent_Tag_1' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_CustomEvent_Visibility) == 0x0000A4, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_CustomEvent_Visibility' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_MakeMap_Map) == 0x0000A8, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_MakeMap_Map' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_MakeMap_Map_1) == 0x0000F8, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_MakeMap_Map_1' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_MakeStruct_S_ActorTagVisibilityMapWrap) == 0x000148, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_MakeStruct_S_ActorTagVisibilityMapWrap' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_CustomEvent_BP_ShelterCameras) == 0x000198, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_CustomEvent_BP_ShelterCameras' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_CustomEvent_CaptureTotalCount) == 0x0001A0, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_CustomEvent_CaptureTotalCount' has a wrong offset!");

// Function LS_ShelterLevel7Update.SequenceDirector_C.ShowAllNeededScafoldings
// 0x0018 (0x0018 - 0x0000)
struct SequenceDirector_C_ShowAllNeededScafoldings final
{
public:
	class FString                                 Tag;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         MaxIndex;                                          // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_ShowAllNeededScafoldings) == 0x000008, "Wrong alignment on SequenceDirector_C_ShowAllNeededScafoldings");
static_assert(sizeof(SequenceDirector_C_ShowAllNeededScafoldings) == 0x000018, "Wrong size on SequenceDirector_C_ShowAllNeededScafoldings");
static_assert(offsetof(SequenceDirector_C_ShowAllNeededScafoldings, Tag) == 0x000000, "Member 'SequenceDirector_C_ShowAllNeededScafoldings::Tag' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ShowAllNeededScafoldings, MaxIndex) == 0x000010, "Member 'SequenceDirector_C_ShowAllNeededScafoldings::MaxIndex' has a wrong offset!");

// Function LS_ShelterLevel7Update.SequenceDirector_C.CaptureAllUsedCameras
// 0x0010 (0x0010 - 0x0000)
struct SequenceDirector_C_CaptureAllUsedCameras final
{
public:
	class ABP_ShelterCameras_C*                   BP_ShelterCameras;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CaptureTotalCount;                                 // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_CaptureAllUsedCameras) == 0x000008, "Wrong alignment on SequenceDirector_C_CaptureAllUsedCameras");
static_assert(sizeof(SequenceDirector_C_CaptureAllUsedCameras) == 0x000010, "Wrong size on SequenceDirector_C_CaptureAllUsedCameras");
static_assert(offsetof(SequenceDirector_C_CaptureAllUsedCameras, BP_ShelterCameras) == 0x000000, "Member 'SequenceDirector_C_CaptureAllUsedCameras::BP_ShelterCameras' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_CaptureAllUsedCameras, CaptureTotalCount) == 0x000008, "Member 'SequenceDirector_C_CaptureAllUsedCameras::CaptureTotalCount' has a wrong offset!");

// Function LS_ShelterLevel7Update.SequenceDirector_C.SetScafoldingVIsibilityByTag
// 0x000C (0x000C - 0x0000)
struct SequenceDirector_C_SetScafoldingVIsibilityByTag final
{
public:
	class FName                                   Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Visibility;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SequenceDirector_C_SetScafoldingVIsibilityByTag) == 0x000004, "Wrong alignment on SequenceDirector_C_SetScafoldingVIsibilityByTag");
static_assert(sizeof(SequenceDirector_C_SetScafoldingVIsibilityByTag) == 0x00000C, "Wrong size on SequenceDirector_C_SetScafoldingVIsibilityByTag");
static_assert(offsetof(SequenceDirector_C_SetScafoldingVIsibilityByTag, Tag) == 0x000000, "Member 'SequenceDirector_C_SetScafoldingVIsibilityByTag::Tag' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_SetScafoldingVIsibilityByTag, Visibility) == 0x000008, "Member 'SequenceDirector_C_SetScafoldingVIsibilityByTag::Visibility' has a wrong offset!");

// Function LS_ShelterLevel7Update.SequenceDirector_C.UsePlayerCustomizations
// 0x0008 (0x0008 - 0x0000)
struct SequenceDirector_C_UsePlayerCustomizations final
{
public:
	class ABP_Mannequin_C*                        BP_Mannequin;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_UsePlayerCustomizations) == 0x000008, "Wrong alignment on SequenceDirector_C_UsePlayerCustomizations");
static_assert(sizeof(SequenceDirector_C_UsePlayerCustomizations) == 0x000008, "Wrong size on SequenceDirector_C_UsePlayerCustomizations");
static_assert(offsetof(SequenceDirector_C_UsePlayerCustomizations, BP_Mannequin) == 0x000000, "Member 'SequenceDirector_C_UsePlayerCustomizations::BP_Mannequin' has a wrong offset!");

// Function LS_ShelterLevel7Update.SequenceDirector_C.PassNextUIContext
// 0x0008 (0x0008 - 0x0000)
struct SequenceDirector_C_PassNextUIContext final
{
public:
	class ABP_ShelterCameras_C*                   BP_ShelterCameras;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_PassNextUIContext) == 0x000008, "Wrong alignment on SequenceDirector_C_PassNextUIContext");
static_assert(sizeof(SequenceDirector_C_PassNextUIContext) == 0x000008, "Wrong size on SequenceDirector_C_PassNextUIContext");
static_assert(offsetof(SequenceDirector_C_PassNextUIContext, BP_ShelterCameras) == 0x000000, "Member 'SequenceDirector_C_PassNextUIContext::BP_ShelterCameras' has a wrong offset!");

// Function LS_ShelterLevel7Update.SequenceDirector_C.CaptureUpgradeSnapshot
// 0x0010 (0x0010 - 0x0000)
struct SequenceDirector_C_CaptureUpgradeSnapshot final
{
public:
	class ABP_ShelterCameras_C*                   BP_ShelterCameras;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_CaptureUpgradeSnapshot) == 0x000008, "Wrong alignment on SequenceDirector_C_CaptureUpgradeSnapshot");
static_assert(sizeof(SequenceDirector_C_CaptureUpgradeSnapshot) == 0x000010, "Wrong size on SequenceDirector_C_CaptureUpgradeSnapshot");
static_assert(offsetof(SequenceDirector_C_CaptureUpgradeSnapshot, BP_ShelterCameras) == 0x000000, "Member 'SequenceDirector_C_CaptureUpgradeSnapshot::BP_ShelterCameras' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_CaptureUpgradeSnapshot, Index_0) == 0x000008, "Member 'SequenceDirector_C_CaptureUpgradeSnapshot::Index_0' has a wrong offset!");

// Function LS_ShelterLevel7Update.SequenceDirector_C.SetSeublevelVisibility
// 0x0010 (0x0010 - 0x0000)
struct SequenceDirector_C_SetSeublevelVisibility final
{
public:
	class ABP_StreamingRepair_C*                  BP_StreamingRepair;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShouldBeVisible;                                  // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ShelterLevel;                                      // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_SetSeublevelVisibility) == 0x000008, "Wrong alignment on SequenceDirector_C_SetSeublevelVisibility");
static_assert(sizeof(SequenceDirector_C_SetSeublevelVisibility) == 0x000010, "Wrong size on SequenceDirector_C_SetSeublevelVisibility");
static_assert(offsetof(SequenceDirector_C_SetSeublevelVisibility, BP_StreamingRepair) == 0x000000, "Member 'SequenceDirector_C_SetSeublevelVisibility::BP_StreamingRepair' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_SetSeublevelVisibility, bShouldBeVisible) == 0x000008, "Member 'SequenceDirector_C_SetSeublevelVisibility::bShouldBeVisible' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_SetSeublevelVisibility, ShelterLevel) == 0x00000C, "Member 'SequenceDirector_C_SetSeublevelVisibility::ShelterLevel' has a wrong offset!");

// Function LS_ShelterLevel7Update.SequenceDirector_C.SequenceEvent__ENTRYPOINTSequenceDirector_0
// 0x0008 (0x0008 - 0x0000)
struct SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_0 final
{
public:
	class ABP_ShelterCameras_C*                   BP_ShelterCameras;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_0) == 0x000008, "Wrong alignment on SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_0");
static_assert(sizeof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_0) == 0x000008, "Wrong size on SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_0");
static_assert(offsetof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_0, BP_ShelterCameras) == 0x000000, "Member 'SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_0::BP_ShelterCameras' has a wrong offset!");

// Function LS_ShelterLevel7Update.SequenceDirector_C.SequenceEvent__ENTRYPOINTSequenceDirector_1
// 0x0008 (0x0008 - 0x0000)
struct SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_1 final
{
public:
	class ABP_ShelterCameras_C*                   BP_ShelterCameras;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_1) == 0x000008, "Wrong alignment on SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_1");
static_assert(sizeof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_1) == 0x000008, "Wrong size on SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_1");
static_assert(offsetof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_1, BP_ShelterCameras) == 0x000000, "Member 'SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_1::BP_ShelterCameras' has a wrong offset!");

// Function LS_ShelterLevel7Update.SequenceDirector_C.SequenceEvent__ENTRYPOINTSequenceDirector_2
// 0x0008 (0x0008 - 0x0000)
struct SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_2 final
{
public:
	class ABP_ShelterCameras_C*                   BP_ShelterCameras;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_2) == 0x000008, "Wrong alignment on SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_2");
static_assert(sizeof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_2) == 0x000008, "Wrong size on SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_2");
static_assert(offsetof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_2, BP_ShelterCameras) == 0x000000, "Member 'SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_2::BP_ShelterCameras' has a wrong offset!");

// Function LS_ShelterLevel7Update.SequenceDirector_C.SequenceEvent__ENTRYPOINTSequenceDirector_3
// 0x0008 (0x0008 - 0x0000)
struct SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_3 final
{
public:
	class ABP_StreamingRepair_C*                  BP_StreamingRepair;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_3) == 0x000008, "Wrong alignment on SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_3");
static_assert(sizeof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_3) == 0x000008, "Wrong size on SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_3");
static_assert(offsetof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_3, BP_StreamingRepair) == 0x000000, "Member 'SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_3::BP_StreamingRepair' has a wrong offset!");

// Function LS_ShelterLevel7Update.SequenceDirector_C.SequenceEvent__ENTRYPOINTSequenceDirector_4
// 0x0008 (0x0008 - 0x0000)
struct SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_4 final
{
public:
	class ABP_StreamingRepair_C*                  BP_StreamingRepair;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_4) == 0x000008, "Wrong alignment on SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_4");
static_assert(sizeof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_4) == 0x000008, "Wrong size on SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_4");
static_assert(offsetof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_4, BP_StreamingRepair) == 0x000000, "Member 'SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_4::BP_StreamingRepair' has a wrong offset!");

// Function LS_ShelterLevel7Update.SequenceDirector_C.SequenceEvent__ENTRYPOINTSequenceDirector_5
// 0x0008 (0x0008 - 0x0000)
struct SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_5 final
{
public:
	class ABP_Mannequin_C*                        BP_Mannequin;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_5) == 0x000008, "Wrong alignment on SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_5");
static_assert(sizeof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_5) == 0x000008, "Wrong size on SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_5");
static_assert(offsetof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_5, BP_Mannequin) == 0x000000, "Member 'SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_5::BP_Mannequin' has a wrong offset!");

// Function LS_ShelterLevel7Update.SequenceDirector_C.SequenceEvent__ENTRYPOINTSequenceDirector_40
// 0x0008 (0x0008 - 0x0000)
struct SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_40 final
{
public:
	class ABP_StreamingRepair_C*                  BP_StreamingRepair;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_40) == 0x000008, "Wrong alignment on SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_40");
static_assert(sizeof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_40) == 0x000008, "Wrong size on SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_40");
static_assert(offsetof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_40, BP_StreamingRepair) == 0x000000, "Member 'SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_40::BP_StreamingRepair' has a wrong offset!");

// Function LS_ShelterLevel7Update.SequenceDirector_C.SequenceEvent__ENTRYPOINTSequenceDirector_41
// 0x0008 (0x0008 - 0x0000)
struct SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_41 final
{
public:
	class ABP_StreamingRepair_C*                  BP_StreamingRepair;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_41) == 0x000008, "Wrong alignment on SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_41");
static_assert(sizeof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_41) == 0x000008, "Wrong size on SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_41");
static_assert(offsetof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_41, BP_StreamingRepair) == 0x000000, "Member 'SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_41::BP_StreamingRepair' has a wrong offset!");

}

