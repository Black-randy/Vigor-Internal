#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GameMode_Raid

#include "Basic.hpp"

#include "BP_GameMode_Raid_classes.hpp"
#include "BP_GameMode_Raid_parameters.hpp"


namespace SDK
{

// Function BP_GameMode_Raid.BP_GameMode_Raid_C.ExecuteUbergraph_BP_GameMode_Raid
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_Raid_C::ExecuteUbergraph_BP_GameMode_Raid(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Raid_C", "ExecuteUbergraph_BP_GameMode_Raid");

	Params::BP_GameMode_Raid_C_ExecuteUbergraph_BP_GameMode_Raid Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_Raid.BP_GameMode_Raid_C.Increment Rounds and assign sides to teams
// (BlueprintCallable, BlueprintEvent)

void ABP_GameMode_Raid_C::Increment_Rounds_and_assign_sides_to_teams()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Raid_C", "Increment Rounds and assign sides to teams");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_Raid.BP_GameMode_Raid_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_Raid_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Raid_C", "ReceiveTick");

	Params::BP_GameMode_Raid_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_Raid.BP_GameMode_Raid_C.Second On Server Passed
// (BlueprintCallable, BlueprintEvent)

void ABP_GameMode_Raid_C::Second_On_Server_Passed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Raid_C", "Second On Server Passed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_Raid.BP_GameMode_Raid_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_GameMode_Raid_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Raid_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_Raid.BP_GameMode_Raid_C.Player Connected To Match
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PlayerController_Raid_C*      Player_Controller                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_Raid_C::Player_Connected_To_Match(class ABP_PlayerController_Raid_C* Player_Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Raid_C", "Player Connected To Match");

	Params::BP_GameMode_Raid_C_Player_Connected_To_Match Parms{};

	Parms.Player_Controller = Player_Controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_Raid.BP_GameMode_Raid_C.Deserter Timer Elapsed
// (BlueprintCallable, BlueprintEvent)

void ABP_GameMode_Raid_C::Deserter_Timer_Elapsed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Raid_C", "Deserter Timer Elapsed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_Raid.BP_GameMode_Raid_C.Player Left Defender Area
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PlayerController_Raid_C*      Player_Controller                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_Raid_C::Player_Left_Defender_Area(class ABP_PlayerController_Raid_C* Player_Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Raid_C", "Player Left Defender Area");

	Params::BP_GameMode_Raid_C_Player_Left_Defender_Area Parms{};

	Parms.Player_Controller = Player_Controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_Raid.BP_GameMode_Raid_C.Player Entered Defender Area
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PlayerController_Raid_C*      Player_Controller                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_Raid_C::Player_Entered_Defender_Area(class ABP_PlayerController_Raid_C* Player_Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Raid_C", "Player Entered Defender Area");

	Params::BP_GameMode_Raid_C_Player_Entered_Defender_Area Parms{};

	Parms.Player_Controller = Player_Controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_Raid.BP_GameMode_Raid_C.Objective Spotted
// (BlueprintCallable, BlueprintEvent)

void ABP_GameMode_Raid_C::Objective_Spotted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Raid_C", "Objective Spotted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_Raid.BP_GameMode_Raid_C.Attackers Won
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// ERaidWinReason                          Win_Reason                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_Raid_C::Attackers_Won(ERaidWinReason Win_Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Raid_C", "Attackers Won");

	Params::BP_GameMode_Raid_C_Attackers_Won Parms{};

	Parms.Win_Reason = Win_Reason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_Raid.BP_GameMode_Raid_C.Defenders Won
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// ERaidWinReason                          Win_Reason                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_Raid_C::Defenders_Won(ERaidWinReason Win_Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Raid_C", "Defenders Won");

	Params::BP_GameMode_Raid_C_Defenders_Won Parms{};

	Parms.Win_Reason = Win_Reason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_Raid.BP_GameMode_Raid_C.Player Died
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Character_Raid_C*             Victim_Character                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AHumanCharacter*                  Killer_Character                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_Raid_C::Player_Died(class ABP_Character_Raid_C* Victim_Character, class AHumanCharacter* Killer_Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Raid_C", "Player Died");

	Params::BP_GameMode_Raid_C_Player_Died Parms{};

	Parms.Victim_Character = Victim_Character;
	Parms.Killer_Character = Killer_Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_Raid.BP_GameMode_Raid_C.Move To Next Phase
// (BlueprintCallable, BlueprintEvent)

void ABP_GameMode_Raid_C::Move_To_Next_Phase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Raid_C", "Move To Next Phase");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_Raid.BP_GameMode_Raid_C.Match Finish
// (BlueprintCallable, BlueprintEvent)

void ABP_GameMode_Raid_C::Match_Finish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Raid_C", "Match Finish");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_Raid.BP_GameMode_Raid_C.Match Cleanup
// (BlueprintCallable, BlueprintEvent)

void ABP_GameMode_Raid_C::Match_Cleanup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Raid_C", "Match Cleanup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_Raid.BP_GameMode_Raid_C.Match Initialization
// (BlueprintCallable, BlueprintEvent)

void ABP_GameMode_Raid_C::Match_Initialization()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Raid_C", "Match Initialization");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_Raid.BP_GameMode_Raid_C.Start the Round
// (BlueprintCallable, BlueprintEvent)

void ABP_GameMode_Raid_C::Start_the_Round()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Raid_C", "Start the Round");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_Raid.BP_GameMode_Raid_C.Initialize New Round
// (BlueprintCallable, BlueprintEvent)

void ABP_GameMode_Raid_C::Initialize_New_Round()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Raid_C", "Initialize New Round");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_Raid.BP_GameMode_Raid_C.Round Timer Expired
// (BlueprintCallable, BlueprintEvent)

void ABP_GameMode_Raid_C::Round_Timer_Expired()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Raid_C", "Round Timer Expired");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_Raid.BP_GameMode_Raid_C.Round In Progress
// (BlueprintCallable, BlueprintEvent)

void ABP_GameMode_Raid_C::Round_In_Progress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Raid_C", "Round In Progress");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_Raid.BP_GameMode_Raid_C.Round Start
// (BlueprintCallable, BlueprintEvent)

void ABP_GameMode_Raid_C::Round_Start()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Raid_C", "Round Start");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_Raid.BP_GameMode_Raid_C.Round Finish
// (BlueprintCallable, BlueprintEvent)

void ABP_GameMode_Raid_C::Round_Finish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Raid_C", "Round Finish");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_Raid.BP_GameMode_Raid_C.Round Cleanup
// (BlueprintCallable, BlueprintEvent)

void ABP_GameMode_Raid_C::Round_Cleanup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Raid_C", "Round Cleanup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_Raid.BP_GameMode_Raid_C.Round Initialization
// (BlueprintCallable, BlueprintEvent)

void ABP_GameMode_Raid_C::Round_Initialization()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Raid_C", "Round Initialization");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_Raid.BP_GameMode_Raid_C.Find Objective Spawn Positions
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_GameMode_Raid_C::Find_Objective_Spawn_Positions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Raid_C", "Find Objective Spawn Positions");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_Raid.BP_GameMode_Raid_C.Spawn Objective On Server
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_GameMode_Raid_C::Spawn_Objective_On_Server()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Raid_C", "Spawn Objective On Server");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_Raid.BP_GameMode_Raid_C.Destroy Objective On Server
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_GameMode_Raid_C::Destroy_Objective_On_Server()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Raid_C", "Destroy Objective On Server");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_Raid.BP_GameMode_Raid_C.Check for Winner
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Winner_Found                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_GameMode_Raid_C::Check_for_Winner(bool* Winner_Found)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Raid_C", "Check for Winner");

	Params::BP_GameMode_Raid_C_Check_for_Winner Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Winner_Found != nullptr)
		*Winner_Found = Parms.Winner_Found;
}


// Function BP_GameMode_Raid.BP_GameMode_Raid_C.Get Attacking Team
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UBP_GSC_Team_Raid_C*              Attacking_Team                                         (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_Raid_C::Get_Attacking_Team(class UBP_GSC_Team_Raid_C** Attacking_Team)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Raid_C", "Get Attacking Team");

	Params::BP_GameMode_Raid_C_Get_Attacking_Team Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Attacking_Team != nullptr)
		*Attacking_Team = Parms.Attacking_Team;
}


// Function BP_GameMode_Raid.BP_GameMode_Raid_C.Get Defending Team
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UBP_GSC_Team_Raid_C*              Defending_Team                                         (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_Raid_C::Get_Defending_Team(class UBP_GSC_Team_Raid_C** Defending_Team)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Raid_C", "Get Defending Team");

	Params::BP_GameMode_Raid_C_Get_Defending_Team Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Defending_Team != nullptr)
		*Defending_Team = Parms.Defending_Team;
}


// Function BP_GameMode_Raid.BP_GameMode_Raid_C.Spawn All Players
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_GameMode_Raid_C::Spawn_All_Players()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Raid_C", "Spawn All Players");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_Raid.BP_GameMode_Raid_C.Get Round Winner by Player Elimination
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PlayerController_Raid_C*      Killed_Player_Controller                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Attackers_Won                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Defenders_Won                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_GameMode_Raid_C::Get_Round_Winner_by_Player_Elimination(class ABP_PlayerController_Raid_C* Killed_Player_Controller, bool* Attackers_Won, bool* Defenders_Won)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Raid_C", "Get Round Winner by Player Elimination");

	Params::BP_GameMode_Raid_C_Get_Round_Winner_by_Player_Elimination Parms{};

	Parms.Killed_Player_Controller = Killed_Player_Controller;

	UObject::ProcessEvent(Func, &Parms);

	if (Attackers_Won != nullptr)
		*Attackers_Won = Parms.Attackers_Won;

	if (Defenders_Won != nullptr)
		*Defenders_Won = Parms.Defenders_Won;
}


// Function BP_GameMode_Raid.BP_GameMode_Raid_C.Get All Players
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ABP_PlayerController_Raid_C*>All_Players                                            (Parm, OutParm)
// bool                                    Refreshed                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_GameMode_Raid_C::Get_All_Players(TArray<class ABP_PlayerController_Raid_C*>* All_Players, bool* Refreshed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Raid_C", "Get All Players");

	Params::BP_GameMode_Raid_C_Get_All_Players Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (All_Players != nullptr)
		*All_Players = std::move(Parms.All_Players);

	if (Refreshed != nullptr)
		*Refreshed = Parms.Refreshed;
}


// Function BP_GameMode_Raid.BP_GameMode_Raid_C.Spawn Player
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PlayerController_C*           Player_Controller                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Player_Start                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_Raid_C::Spawn_Player(class ABP_PlayerController_C* Player_Controller, class AActor* Player_Start)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Raid_C", "Spawn Player");

	Params::BP_GameMode_Raid_C_Spawn_Player Parms{};

	Parms.Player_Controller = Player_Controller;
	Parms.Player_Start = Player_Start;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_Raid.BP_GameMode_Raid_C.Get Player Spawn Position
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PlayerController_Raid_C*      Player_Controller                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Spawn_Position                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_Raid_C::Get_Player_Spawn_Position(class ABP_PlayerController_Raid_C* Player_Controller, class AActor** Spawn_Position)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Raid_C", "Get Player Spawn Position");

	Params::BP_GameMode_Raid_C_Get_Player_Spawn_Position Parms{};

	Parms.Player_Controller = Player_Controller;

	UObject::ProcessEvent(Func, &Parms);

	if (Spawn_Position != nullptr)
		*Spawn_Position = Parms.Spawn_Position;
}


// Function BP_GameMode_Raid.BP_GameMode_Raid_C.Set Player Selected Spawn Position
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PlayerController_Raid_C*      Player_Controller                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_PlayerStart_Raid_C*           Selected_Start                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_Raid_C::Set_Player_Selected_Spawn_Position(class ABP_PlayerController_Raid_C* Player_Controller, class ABP_PlayerStart_Raid_C* Selected_Start)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Raid_C", "Set Player Selected Spawn Position");

	Params::BP_GameMode_Raid_C_Set_Player_Selected_Spawn_Position Parms{};

	Parms.Player_Controller = Player_Controller;
	Parms.Selected_Start = Selected_Start;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_Raid.BP_GameMode_Raid_C.Show Objective Location To Team
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    To_Attackers                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_GameMode_Raid_C::Show_Objective_Location_To_Team(bool To_Attackers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Raid_C", "Show Objective Location To Team");

	Params::BP_GameMode_Raid_C_Show_Objective_Location_To_Team Parms{};

	Parms.To_Attackers = To_Attackers;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_Raid.BP_GameMode_Raid_C.Show Objective Spawn Locations To Attackers
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_GameMode_Raid_C::Show_Objective_Spawn_Locations_To_Attackers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Raid_C", "Show Objective Spawn Locations To Attackers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_Raid.BP_GameMode_Raid_C.Remove Objective Markers
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_GameMode_Raid_C::Remove_Objective_Markers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Raid_C", "Remove Objective Markers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_Raid.BP_GameMode_Raid_C.Clean Map Of Dead Bodies
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_GameMode_Raid_C::Clean_Map_Of_Dead_Bodies()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Raid_C", "Clean Map Of Dead Bodies");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_Raid.BP_GameMode_Raid_C.Clear Deserters
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_GameMode_Raid_C::Clear_Deserters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Raid_C", "Clear Deserters");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_Raid.BP_GameMode_Raid_C.Increase Player Kill Count
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PlayerController_Raid_C*      Player_Controller                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Headshot                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_GameMode_Raid_C::Increase_Player_Kill_Count(class ABP_PlayerController_Raid_C* Player_Controller, bool Headshot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Raid_C", "Increase Player Kill Count");

	Params::BP_GameMode_Raid_C_Increase_Player_Kill_Count Parms{};

	Parms.Player_Controller = Player_Controller;
	Parms.Headshot = Headshot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_Raid.BP_GameMode_Raid_C.Increase Player Objective Time
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PlayerController_Raid_C*      Player_Controller                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Objective_Time                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_Raid_C::Increase_Player_Objective_Time(class ABP_PlayerController_Raid_C* Player_Controller, float Objective_Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Raid_C", "Increase Player Objective Time");

	Params::BP_GameMode_Raid_C_Increase_Player_Objective_Time Parms{};

	Parms.Player_Controller = Player_Controller;
	Parms.Objective_Time = Objective_Time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_Raid.BP_GameMode_Raid_C.Get Player Statistics
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PlayerController_Raid_C*      Player_Controller                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Found                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FStruct_RaidStatistics           Statistic                                              (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void ABP_GameMode_Raid_C::Get_Player_Statistics(class ABP_PlayerController_Raid_C* Player_Controller, bool* Found, struct FStruct_RaidStatistics* Statistic)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Raid_C", "Get Player Statistics");

	Params::BP_GameMode_Raid_C_Get_Player_Statistics Parms{};

	Parms.Player_Controller = Player_Controller;

	UObject::ProcessEvent(Func, &Parms);

	if (Found != nullptr)
		*Found = Parms.Found;

	if (Statistic != nullptr)
		*Statistic = std::move(Parms.Statistic);
}


// Function BP_GameMode_Raid.BP_GameMode_Raid_C.Increase Player Death Count
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PlayerController_Raid_C*      Player_Controller                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_Raid_C::Increase_Player_Death_Count(class ABP_PlayerController_Raid_C* Player_Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Raid_C", "Increase Player Death Count");

	Params::BP_GameMode_Raid_C_Increase_Player_Death_Count Parms{};

	Parms.Player_Controller = Player_Controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_Raid.BP_GameMode_Raid_C.Teleport All Players To Random Spawn
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_GameMode_Raid_C::Teleport_All_Players_To_Random_Spawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Raid_C", "Teleport All Players To Random Spawn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode_Raid.BP_GameMode_Raid_C.Get Random Spawn Position
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Spawn_Position                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_Raid_C::Get_Random_Spawn_Position(class AActor** Spawn_Position)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Raid_C", "Get Random Spawn Position");

	Params::BP_GameMode_Raid_C_Get_Random_Spawn_Position Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Spawn_Position != nullptr)
		*Spawn_Position = Parms.Spawn_Position;
}


// Function BP_GameMode_Raid.BP_GameMode_Raid_C.Set All Players Invicibility
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Set_Invincible                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_GameMode_Raid_C::Set_All_Players_Invicibility(bool Set_Invincible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Raid_C", "Set All Players Invicibility");

	Params::BP_GameMode_Raid_C_Set_All_Players_Invicibility Parms{};

	Parms.Set_Invincible = Set_Invincible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_Raid.BP_GameMode_Raid_C.Are Teams Full
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Teams_Full                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_GameMode_Raid_C::Are_Teams_Full(bool* Teams_Full)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Raid_C", "Are Teams Full");

	Params::BP_GameMode_Raid_C_Are_Teams_Full Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Teams_Full != nullptr)
		*Teams_Full = Parms.Teams_Full;
}


// Function BP_GameMode_Raid.BP_GameMode_Raid_C.PlayerCanRestart
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_GameMode_Raid_C::PlayerCanRestart(class APlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Raid_C", "PlayerCanRestart");

	Params::BP_GameMode_Raid_C_PlayerCanRestart Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_GameMode_Raid.BP_GameMode_Raid_C.Player Died Update Statistic
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHumanCharacter*                  Victim_Character                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AHumanCharacter*                  Killer_Character                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_Raid_C::Player_Died_Update_Statistic(class AHumanCharacter* Victim_Character, class AHumanCharacter* Killer_Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Raid_C", "Player Died Update Statistic");

	Params::BP_GameMode_Raid_C_Player_Died_Update_Statistic Parms{};

	Parms.Victim_Character = Victim_Character;
	Parms.Killer_Character = Killer_Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode_Raid.BP_GameMode_Raid_C.OnPlayerDied
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHumanCharacter*                  Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AHumanCharacter*                  Killer                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_GameMode_Raid_C::OnPlayerDied(class AHumanCharacter* Player, class AHumanCharacter* Killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_Raid_C", "OnPlayerDied");

	Params::BP_GameMode_Raid_C_OnPlayerDied Parms{};

	Parms.Player = Player;
	Parms.Killer = Killer;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

