#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ADM_LockedContainer_GSComponent

#include "Basic.hpp"

#include "BP_ADM_LockedContainer_GSComponent_classes.hpp"
#include "BP_ADM_LockedContainer_GSComponent_parameters.hpp"


namespace SDK
{

// Function BP_ADM_LockedContainer_GSComponent.BP_ADM_LockedContainer_GSComponent_C.ExecuteUbergraph_BP_ADM_LockedContainer_GSComponent
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ADM_LockedContainer_GSComponent_C::ExecuteUbergraph_BP_ADM_LockedContainer_GSComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ADM_LockedContainer_GSComponent_C", "ExecuteUbergraph_BP_ADM_LockedContainer_GSComponent");

	Params::BP_ADM_LockedContainer_GSComponent_C_ExecuteUbergraph_BP_ADM_LockedContainer_GSComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ADM_LockedContainer_GSComponent.BP_ADM_LockedContainer_GSComponent_C.Lock shot
// (BlueprintCallable, BlueprintEvent)

void UBP_ADM_LockedContainer_GSComponent_C::Lock_shot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ADM_LockedContainer_GSComponent_C", "Lock shot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ADM_LockedContainer_GSComponent.BP_ADM_LockedContainer_GSComponent_C.Lock opened
// (BlueprintCallable, BlueprintEvent)

void UBP_ADM_LockedContainer_GSComponent_C::Lock_opened()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ADM_LockedContainer_GSComponent_C", "Lock opened");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ADM_LockedContainer_GSComponent.BP_ADM_LockedContainer_GSComponent_C.Draw pillar on location
// (Net, HasOutParams, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       InTransform                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)

void UBP_ADM_LockedContainer_GSComponent_C::Draw_pillar_on_location(const struct FTransform& InTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ADM_LockedContainer_GSComponent_C", "Draw pillar on location");

	Params::BP_ADM_LockedContainer_GSComponent_C_Draw_pillar_on_location Parms{};

	Parms.InTransform = std::move(InTransform);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ADM_LockedContainer_GSComponent.BP_ADM_LockedContainer_GSComponent_C.Get all player controllers that are not in array
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ABP_Character_Matches_C*>  Characters_to_ignore                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class APlayerController*>        Player_Controllers                                     (Parm, OutParm)

void UBP_ADM_LockedContainer_GSComponent_C::Get_all_player_controllers_that_are_not_in_array(TArray<class ABP_Character_Matches_C*>& Characters_to_ignore, TArray<class APlayerController*>* Player_Controllers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ADM_LockedContainer_GSComponent_C", "Get all player controllers that are not in array");

	Params::BP_ADM_LockedContainer_GSComponent_C_Get_all_player_controllers_that_are_not_in_array Parms{};

	Parms.Characters_to_ignore = std::move(Characters_to_ignore);

	UObject::ProcessEvent(Func, &Parms);

	Characters_to_ignore = std::move(Parms.Characters_to_ignore);

	if (Player_Controllers != nullptr)
		*Player_Controllers = std::move(Parms.Player_Controllers);
}

}

