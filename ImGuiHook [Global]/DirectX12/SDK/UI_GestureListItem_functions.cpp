#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_GestureListItem

#include "Basic.hpp"

#include "UI_GestureListItem_classes.hpp"
#include "UI_GestureListItem_parameters.hpp"


namespace SDK
{

// Function UI_GestureListItem.UI_GestureListItem_C.ExecuteUbergraph_UI_GestureListItem
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_GestureListItem_C::ExecuteUbergraph_UI_GestureListItem(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GestureListItem_C", "ExecuteUbergraph_UI_GestureListItem");

	Params::UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_GestureListItem.UI_GestureListItem_C.OnMouseLeave
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UUI_GestureListItem_C::OnMouseLeave(const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GestureListItem_C", "OnMouseLeave");

	Params::UI_GestureListItem_C_OnMouseLeave Parms{};

	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_GestureListItem.UI_GestureListItem_C.OnMouseEnter
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UUI_GestureListItem_C::OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GestureListItem_C", "OnMouseEnter");

	Params::UI_GestureListItem_C_OnMouseEnter Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_GestureListItem.UI_GestureListItem_C.BndEvt__Button_K2Node_ComponentBoundEvent_1_OnButtonFocusEvent__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UButton*                          Sender                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_GestureListItem_C::BndEvt__Button_K2Node_ComponentBoundEvent_1_OnButtonFocusEvent__DelegateSignature(class UButton* Sender)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GestureListItem_C", "BndEvt__Button_K2Node_ComponentBoundEvent_1_OnButtonFocusEvent__DelegateSignature");

	Params::UI_GestureListItem_C_BndEvt__Button_K2Node_ComponentBoundEvent_1_OnButtonFocusEvent__DelegateSignature Parms{};

	Parms.Sender = Sender;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_GestureListItem.UI_GestureListItem_C.OnCustomizationLoaded
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHumanCharacter*                  Sender                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInventoryCustomizationComponent* Inventory                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_GestureListItem_C::OnCustomizationLoaded(class AHumanCharacter* Sender, class UInventoryCustomizationComponent* Inventory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GestureListItem_C", "OnCustomizationLoaded");

	Params::UI_GestureListItem_C_OnCustomizationLoaded Parms{};

	Parms.Sender = Sender;
	Parms.Inventory = Inventory;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_GestureListItem.UI_GestureListItem_C.BndEvt__Button_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UButton*                          Sender                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_GestureListItem_C::BndEvt__Button_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature(class UButton* Sender)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GestureListItem_C", "BndEvt__Button_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature");

	Params::UI_GestureListItem_C_BndEvt__Button_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature Parms{};

	Parms.Sender = Sender;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_GestureListItem.UI_GestureListItem_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_GestureListItem_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GestureListItem_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_GestureListItem.UI_GestureListItem_C.BndEvt__Button_K2Node_ComponentBoundEvent_70_OnButtonFocusEvent__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UButton*                          Sender                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_GestureListItem_C::BndEvt__Button_K2Node_ComponentBoundEvent_70_OnButtonFocusEvent__DelegateSignature(class UButton* Sender)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GestureListItem_C", "BndEvt__Button_K2Node_ComponentBoundEvent_70_OnButtonFocusEvent__DelegateSignature");

	Params::UI_GestureListItem_C_BndEvt__Button_K2Node_ComponentBoundEvent_70_OnButtonFocusEvent__DelegateSignature Parms{};

	Parms.Sender = Sender;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_GestureListItem.UI_GestureListItem_C.UpdateVisual
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUI_GestureListItem_C::UpdateVisual()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GestureListItem_C", "UpdateVisual");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_GestureListItem.UI_GestureListItem_C.IsEquipped
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsEquipped_0                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_GestureListItem_C::IsEquipped(bool* IsEquipped_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GestureListItem_C", "IsEquipped");

	Params::UI_GestureListItem_C_IsEquipped Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsEquipped_0 != nullptr)
		*IsEquipped_0 = Parms.IsEquipped_0;
}


// Function UI_GestureListItem.UI_GestureListItem_C.IsAssignedToAnySlot
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UClass*                           InGestureVariant                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsAssigned                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_GestureListItem_C::IsAssignedToAnySlot(class UClass* InGestureVariant, bool* IsAssigned)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GestureListItem_C", "IsAssignedToAnySlot");

	Params::UI_GestureListItem_C_IsAssignedToAnySlot Parms{};

	Parms.InGestureVariant = InGestureVariant;

	UObject::ProcessEvent(Func, &Parms);

	if (IsAssigned != nullptr)
		*IsAssigned = Parms.IsAssigned;
}

}

