#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VegetationAffector_Player

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_VegetationAffector_classes.hpp"
#include "PhysicsCore_structs.hpp"
#include "FlameUI_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_VegetationAffector_Player.BP_VegetationAffector_Player_C
// 0x0030 (0x0280 - 0x0250)
class ABP_VegetationAffector_Player_C final : public ABP_VegetationAffector_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_VegetationAffector_Player_C;     // 0x0250(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCapsuleComponent*                      Capsule;                                           // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BackgroundForGrassTrails;                          // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          IsOnGround;                                        // 0x0268(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_269[0x3];                                      // 0x0269(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MaxHeightAboveLand;                                // 0x026C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            OwnerCharacterMovementComponent;                   // 0x0270(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OverlapsInstancedMesh;                             // 0x0278(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_VegetationAffector_Player(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void CheckSurfaces(class AActor* Hit_actor, bool* Success);
	void Simulate();
	void InitMovementComponent();
	void IsInContactWithLand(bool* Result);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_VegetationAffector_Player_C">();
	}
	static class ABP_VegetationAffector_Player_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_VegetationAffector_Player_C>();
	}
};
static_assert(alignof(ABP_VegetationAffector_Player_C) == 0x000008, "Wrong alignment on ABP_VegetationAffector_Player_C");
static_assert(sizeof(ABP_VegetationAffector_Player_C) == 0x000280, "Wrong size on ABP_VegetationAffector_Player_C");
static_assert(offsetof(ABP_VegetationAffector_Player_C, UberGraphFrame_BP_VegetationAffector_Player_C) == 0x000250, "Member 'ABP_VegetationAffector_Player_C::UberGraphFrame_BP_VegetationAffector_Player_C' has a wrong offset!");
static_assert(offsetof(ABP_VegetationAffector_Player_C, Capsule) == 0x000258, "Member 'ABP_VegetationAffector_Player_C::Capsule' has a wrong offset!");
static_assert(offsetof(ABP_VegetationAffector_Player_C, BackgroundForGrassTrails) == 0x000260, "Member 'ABP_VegetationAffector_Player_C::BackgroundForGrassTrails' has a wrong offset!");
static_assert(offsetof(ABP_VegetationAffector_Player_C, IsOnGround) == 0x000268, "Member 'ABP_VegetationAffector_Player_C::IsOnGround' has a wrong offset!");
static_assert(offsetof(ABP_VegetationAffector_Player_C, MaxHeightAboveLand) == 0x00026C, "Member 'ABP_VegetationAffector_Player_C::MaxHeightAboveLand' has a wrong offset!");
static_assert(offsetof(ABP_VegetationAffector_Player_C, OwnerCharacterMovementComponent) == 0x000270, "Member 'ABP_VegetationAffector_Player_C::OwnerCharacterMovementComponent' has a wrong offset!");
static_assert(offsetof(ABP_VegetationAffector_Player_C, OverlapsInstancedMesh) == 0x000278, "Member 'ABP_VegetationAffector_Player_C::OverlapsInstancedMesh' has a wrong offset!");

}

