#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MementoPreviewScene_Vinyls

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_MementoPreviewScene_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_MementoPreviewScene_Vinyls.BP_MementoPreviewScene_Vinyls_C
// 0x0140 (0x0530 - 0x03F0)
class ABP_MementoPreviewScene_Vinyls_C final : public ABP_MementoPreviewScene_Base_C
{
public:
	uint8                                         Pad_3E1[0x7];                                      // 0x03E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_MementoPreviewScene_Vinyls_C;    // 0x03E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class URectLightComponent*                    RectLight;                                         // 0x03F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SmallVinylHolderRight;                             // 0x03F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SmallVinylHolderMiddle;                            // 0x0400(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SmallVinylHolderLeft;                              // 0x0408(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Pulley_Box_01;                                  // 0x0410(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   VinylHolderRight;                                  // 0x0418(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   VinylHolderLeft;                                   // 0x0420(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Vinyl15;                                           // 0x0428(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Vinyl14;                                           // 0x0430(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Vinyl13;                                           // 0x0438(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Vinyl12;                                           // 0x0440(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Vinyl11;                                           // 0x0448(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Vinyl10;                                           // 0x0450(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight;                                         // 0x0458(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       Camera;                                            // 0x0460(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Vase;                                              // 0x0468(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Carpet;                                            // 0x0470(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Vinyl09;                                           // 0x0478(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Vinyl08;                                           // 0x0480(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Vinyl07;                                           // 0x0488(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Vinyl06;                                           // 0x0490(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Vinyl05;                                           // 0x0498(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Vinyl04;                                           // 0x04A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Vinyl03;                                           // 0x04A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Vinyl02;                                           // 0x04B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Vinyl01;                                           // 0x04B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Arm;                                               // 0x04C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Record;                                            // 0x04C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Disc;                                              // 0x04D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Gramophone;                                        // 0x04D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Speaker;                                           // 0x04E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SideBoard;                                         // 0x04E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          Suppressing_Shelter_Music;                         // 0x04F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F1[0x7];                                      // 0x04F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USoundBase>              Ambient_Sound;                                     // 0x04F8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class USoundBase*                             Loaded_Sound;                                      // 0x0520(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Ambient_Sound_Component;                           // 0x0528(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_MementoPreviewScene_Vinyls(int32 EntryPoint);
	void Stop_Ambient_Sound();
	void Start_Ambient_Sound();
	void OnLoaded_303A9E7341428F48F05BE78A73CBE2E0(class UObject* Loaded);
	void Initialize_ItemMinusMesh_Map();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MementoPreviewScene_Vinyls_C">();
	}
	static class ABP_MementoPreviewScene_Vinyls_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_MementoPreviewScene_Vinyls_C>();
	}
};
static_assert(alignof(ABP_MementoPreviewScene_Vinyls_C) == 0x000010, "Wrong alignment on ABP_MementoPreviewScene_Vinyls_C");
static_assert(sizeof(ABP_MementoPreviewScene_Vinyls_C) == 0x000530, "Wrong size on ABP_MementoPreviewScene_Vinyls_C");
static_assert(offsetof(ABP_MementoPreviewScene_Vinyls_C, UberGraphFrame_BP_MementoPreviewScene_Vinyls_C) == 0x0003E8, "Member 'ABP_MementoPreviewScene_Vinyls_C::UberGraphFrame_BP_MementoPreviewScene_Vinyls_C' has a wrong offset!");
static_assert(offsetof(ABP_MementoPreviewScene_Vinyls_C, RectLight) == 0x0003F0, "Member 'ABP_MementoPreviewScene_Vinyls_C::RectLight' has a wrong offset!");
static_assert(offsetof(ABP_MementoPreviewScene_Vinyls_C, SmallVinylHolderRight) == 0x0003F8, "Member 'ABP_MementoPreviewScene_Vinyls_C::SmallVinylHolderRight' has a wrong offset!");
static_assert(offsetof(ABP_MementoPreviewScene_Vinyls_C, SmallVinylHolderMiddle) == 0x000400, "Member 'ABP_MementoPreviewScene_Vinyls_C::SmallVinylHolderMiddle' has a wrong offset!");
static_assert(offsetof(ABP_MementoPreviewScene_Vinyls_C, SmallVinylHolderLeft) == 0x000408, "Member 'ABP_MementoPreviewScene_Vinyls_C::SmallVinylHolderLeft' has a wrong offset!");
static_assert(offsetof(ABP_MementoPreviewScene_Vinyls_C, SM_Pulley_Box_01) == 0x000410, "Member 'ABP_MementoPreviewScene_Vinyls_C::SM_Pulley_Box_01' has a wrong offset!");
static_assert(offsetof(ABP_MementoPreviewScene_Vinyls_C, VinylHolderRight) == 0x000418, "Member 'ABP_MementoPreviewScene_Vinyls_C::VinylHolderRight' has a wrong offset!");
static_assert(offsetof(ABP_MementoPreviewScene_Vinyls_C, VinylHolderLeft) == 0x000420, "Member 'ABP_MementoPreviewScene_Vinyls_C::VinylHolderLeft' has a wrong offset!");
static_assert(offsetof(ABP_MementoPreviewScene_Vinyls_C, Vinyl15) == 0x000428, "Member 'ABP_MementoPreviewScene_Vinyls_C::Vinyl15' has a wrong offset!");
static_assert(offsetof(ABP_MementoPreviewScene_Vinyls_C, Vinyl14) == 0x000430, "Member 'ABP_MementoPreviewScene_Vinyls_C::Vinyl14' has a wrong offset!");
static_assert(offsetof(ABP_MementoPreviewScene_Vinyls_C, Vinyl13) == 0x000438, "Member 'ABP_MementoPreviewScene_Vinyls_C::Vinyl13' has a wrong offset!");
static_assert(offsetof(ABP_MementoPreviewScene_Vinyls_C, Vinyl12) == 0x000440, "Member 'ABP_MementoPreviewScene_Vinyls_C::Vinyl12' has a wrong offset!");
static_assert(offsetof(ABP_MementoPreviewScene_Vinyls_C, Vinyl11) == 0x000448, "Member 'ABP_MementoPreviewScene_Vinyls_C::Vinyl11' has a wrong offset!");
static_assert(offsetof(ABP_MementoPreviewScene_Vinyls_C, Vinyl10) == 0x000450, "Member 'ABP_MementoPreviewScene_Vinyls_C::Vinyl10' has a wrong offset!");
static_assert(offsetof(ABP_MementoPreviewScene_Vinyls_C, SpotLight) == 0x000458, "Member 'ABP_MementoPreviewScene_Vinyls_C::SpotLight' has a wrong offset!");
static_assert(offsetof(ABP_MementoPreviewScene_Vinyls_C, Camera) == 0x000460, "Member 'ABP_MementoPreviewScene_Vinyls_C::Camera' has a wrong offset!");
static_assert(offsetof(ABP_MementoPreviewScene_Vinyls_C, Vase) == 0x000468, "Member 'ABP_MementoPreviewScene_Vinyls_C::Vase' has a wrong offset!");
static_assert(offsetof(ABP_MementoPreviewScene_Vinyls_C, Carpet) == 0x000470, "Member 'ABP_MementoPreviewScene_Vinyls_C::Carpet' has a wrong offset!");
static_assert(offsetof(ABP_MementoPreviewScene_Vinyls_C, Vinyl09) == 0x000478, "Member 'ABP_MementoPreviewScene_Vinyls_C::Vinyl09' has a wrong offset!");
static_assert(offsetof(ABP_MementoPreviewScene_Vinyls_C, Vinyl08) == 0x000480, "Member 'ABP_MementoPreviewScene_Vinyls_C::Vinyl08' has a wrong offset!");
static_assert(offsetof(ABP_MementoPreviewScene_Vinyls_C, Vinyl07) == 0x000488, "Member 'ABP_MementoPreviewScene_Vinyls_C::Vinyl07' has a wrong offset!");
static_assert(offsetof(ABP_MementoPreviewScene_Vinyls_C, Vinyl06) == 0x000490, "Member 'ABP_MementoPreviewScene_Vinyls_C::Vinyl06' has a wrong offset!");
static_assert(offsetof(ABP_MementoPreviewScene_Vinyls_C, Vinyl05) == 0x000498, "Member 'ABP_MementoPreviewScene_Vinyls_C::Vinyl05' has a wrong offset!");
static_assert(offsetof(ABP_MementoPreviewScene_Vinyls_C, Vinyl04) == 0x0004A0, "Member 'ABP_MementoPreviewScene_Vinyls_C::Vinyl04' has a wrong offset!");
static_assert(offsetof(ABP_MementoPreviewScene_Vinyls_C, Vinyl03) == 0x0004A8, "Member 'ABP_MementoPreviewScene_Vinyls_C::Vinyl03' has a wrong offset!");
static_assert(offsetof(ABP_MementoPreviewScene_Vinyls_C, Vinyl02) == 0x0004B0, "Member 'ABP_MementoPreviewScene_Vinyls_C::Vinyl02' has a wrong offset!");
static_assert(offsetof(ABP_MementoPreviewScene_Vinyls_C, Vinyl01) == 0x0004B8, "Member 'ABP_MementoPreviewScene_Vinyls_C::Vinyl01' has a wrong offset!");
static_assert(offsetof(ABP_MementoPreviewScene_Vinyls_C, Arm) == 0x0004C0, "Member 'ABP_MementoPreviewScene_Vinyls_C::Arm' has a wrong offset!");
static_assert(offsetof(ABP_MementoPreviewScene_Vinyls_C, Record) == 0x0004C8, "Member 'ABP_MementoPreviewScene_Vinyls_C::Record' has a wrong offset!");
static_assert(offsetof(ABP_MementoPreviewScene_Vinyls_C, Disc) == 0x0004D0, "Member 'ABP_MementoPreviewScene_Vinyls_C::Disc' has a wrong offset!");
static_assert(offsetof(ABP_MementoPreviewScene_Vinyls_C, Gramophone) == 0x0004D8, "Member 'ABP_MementoPreviewScene_Vinyls_C::Gramophone' has a wrong offset!");
static_assert(offsetof(ABP_MementoPreviewScene_Vinyls_C, Speaker) == 0x0004E0, "Member 'ABP_MementoPreviewScene_Vinyls_C::Speaker' has a wrong offset!");
static_assert(offsetof(ABP_MementoPreviewScene_Vinyls_C, SideBoard) == 0x0004E8, "Member 'ABP_MementoPreviewScene_Vinyls_C::SideBoard' has a wrong offset!");
static_assert(offsetof(ABP_MementoPreviewScene_Vinyls_C, Suppressing_Shelter_Music) == 0x0004F0, "Member 'ABP_MementoPreviewScene_Vinyls_C::Suppressing_Shelter_Music' has a wrong offset!");
static_assert(offsetof(ABP_MementoPreviewScene_Vinyls_C, Ambient_Sound) == 0x0004F8, "Member 'ABP_MementoPreviewScene_Vinyls_C::Ambient_Sound' has a wrong offset!");
static_assert(offsetof(ABP_MementoPreviewScene_Vinyls_C, Loaded_Sound) == 0x000520, "Member 'ABP_MementoPreviewScene_Vinyls_C::Loaded_Sound' has a wrong offset!");
static_assert(offsetof(ABP_MementoPreviewScene_Vinyls_C, Ambient_Sound_Component) == 0x000528, "Member 'ABP_MementoPreviewScene_Vinyls_C::Ambient_Sound_Component' has a wrong offset!");

}

