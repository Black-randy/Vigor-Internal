#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerController_TVTDeathmatch

#include "Basic.hpp"

#include "E_TeamsMatchPhase_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Flame_structs.hpp"
#include "Engine_structs.hpp"
#include "BP_PlayerController_Teams_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PlayerController_TVTDeathmatch.BP_PlayerController_TVTDeathmatch_C
// 0x00F0 (0x0E88 - 0x0D98)
class ABP_PlayerController_TVTDeathmatch_C final : public ABP_PlayerController_Teams_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_PlayerController_TVTDeathmatch_C; // 0x0D98(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ABP_Character_TVTDeathmatch_C*          Character_To_Destroy_On_Respawn;                   // 0x0DA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Can_Respawn;                                       // 0x0DA8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DA9[0x7];                                      // 0x0DA9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_TVTDeathMatch_RespawnScreen_C*      Respawn_Screen_UI;                                 // 0x0DB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_TVTDeathmatch_WaitingForMatchStart_C* Wait_For_Match_Start_UI;                           // 0x0DB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_TVTDeathmatch_MatchProgress_C*      Match_Progress_UI;                                 // 0x0DC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_FreeCameraSpectator_C*              Player_Spectator;                                  // 0x0DC8(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_LobbyBase_C*                        Lobby_UI;                                          // 0x0DD0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TeamsMatchPhase                             Phase_Before_Round_Start;                          // 0x0DD8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DD9[0x7];                                      // 0x0DD9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_TVTDeathmatch_DeathAfterLastManStanding_C* Death_After_LMS_UI;                                // 0x0DE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DestroyCharacterOnRespawn;                         // 0x0DE8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DE9[0x7];                                      // 0x0DE9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_BlueScreen_C*                       BlueScreen;                                        // 0x0DF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ForcedBlueScreenAlreadyHappened;                   // 0x0DF8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DF9[0x7];                                      // 0x0DF9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FWeaponDescriptor>              PossibleWeaponSpawnLoadouts;                       // 0x0E00(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FWeaponDescriptor                      LastSpawnedInWeapon;                               // 0x0E10(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	TArray<class FName>                           NamesFound;                                        // 0x0E30(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FTimerHandle                           Timer_CheatRespawnBlockerUpdate;                   // 0x0E40(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        TempPlayerVectors;                                 // 0x0E48(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FCloudMatchWeaponGroup>         InitialLoadoutsPool;                               // 0x0E58(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FCloudMatchWeaponGroup                 LastUsedInitialLoadout;                            // 0x0E68(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UUI_GunFight_ChosenLoadout_PopUp_C*     ChosenLoadoutPopUp_UI;                             // 0x0E78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastUpdateRemainingTime;                           // 0x0E80(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDead;                                            // 0x0E84(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_PlayerController_TVTDeathmatch(int32 EntryPoint);
	void CompassMarkerOnLastManStanding();
	void AddPlayerToLastManStanding();
	void CycleWeaponOut(const TArray<struct FCloudMatchWeaponGroup>& AllLoadouts, const struct FCloudMatchWeaponGroup& LoadoutToRemove);
	void ReuseKilledPlayer();
	void Match_Ended();
	void ReceivePossess(class APawn* PossessedPawn);
	void Save_Match_ID_on_Client(const class FString& Match_ID);
	void Died();
	void Player_Connected_Server();
	void Ask_Server_To_Respawn();
	void Enable_Respawn();
	void On_Player_Died(bool Last_Man_Standing_Started, class ABP_Character_TVTDeathmatch_C* Character_To_Remove_On_Respawn, int32 Respawn_Time_On_Death, EDamageType Cause_of_Death, class AHumanCharacter* Killer);
	void HideChosenLoadoutPopUp();
	void ShowChosenLoadoutPopUp();
	void Hide_Transfer_and_Inventory_UI();
	void RemoveBlueScreen();
	void ShowBlueScreen();
	void Hide_Died_After_LMS_Started();
	void Hide_Match_Progress();
	void Enable_Respawn_Button();
	void Show_or_Update_Match_Progress_UI(float Time_Left);
	void Hide_Wait_For_Match_Start_UI();
	void Set_Match_Start_Countdown_Time(float Time);
	void Show_Wait_For_Match_Start_UI();
	void Hide_Respawn_Screen_UI();
	void Show_Respawn_Screen_UI(int32 Respawn_Time, EDamageType Cause_of_Death, class AHumanCharacter* Killer, bool Is_Suicide);
	void Cheat_StandLastManEarly();
	void Cheat_HalveRemainingTime();
	void Cheat_SkipToMatchEnd();
	void Cheat_RequestNewCloudMatchLoadouts();
	void Cheat_SetKillWinThreshold(int32 KillWinThreshold);
	void Cheat_ReplicateRespawnBlockers(TArray<struct FVector>& TempPlayerVectors_0);
	void Cheat_StopPeriodicRespawnBlockerUpdate();
	void Cheat_StartUpdatingRespawnBlockers();
	void DEBUG_Respawns();
	void Cheat_StopPerdiodicRespawnCheck();
	void Cheat_StartPerdiodicRespawnCheck();
	void Cheat_SetSafenessTarget(float Target);
	void Cheat_ResetRoundTime();
	void Cheat_ForceOneWeaponLoadout_ToEveryone(bool Enabled, class UClass* Weapon);
	void Cheat_ForceOneWeaponLoadout(bool Enabled, class UClass* Weapon);
	void Cheat_RespawnVisDebug(const TArray<float>& DistanceArray, const TArray<struct FVector>& LocationArray, const TArray<struct FColor>& ColorArray, const TArray<class FString>& Strings);
	void Cheat_SetEnableNewRespawn(bool Enable);
	void Cheat_SetRespawnVisualDebug(bool Enable);
	void Start_Spectating();
	void Get_Statistics(TArray<struct FStruct_TVTDeathmatchStatistics>* Statistics);
	void GetWeaponSemiRandom(TArray<struct FWeaponDescriptor>& AllPossibleWeapons, struct FWeaponDescriptor* WeaponDescriptor);
	void UpdateCompassMarkersOnLastStandingMan();
	void CheckForRespawnButtonAfterLagSpike();
	void Get_Semi_Random_Initial_Loadout(const struct FCloudLoadout& PossibleLoadouts, struct FCloudMatchWeaponGroup* Weapons, TArray<struct FCloudItemInfo>* Items);
	void Player_Respawned();
	void ReceiveBeginPlay();
	void CheatHideUI(bool Hide);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PlayerController_TVTDeathmatch_C">();
	}
	static class ABP_PlayerController_TVTDeathmatch_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_PlayerController_TVTDeathmatch_C>();
	}
};
static_assert(alignof(ABP_PlayerController_TVTDeathmatch_C) == 0x000008, "Wrong alignment on ABP_PlayerController_TVTDeathmatch_C");
static_assert(sizeof(ABP_PlayerController_TVTDeathmatch_C) == 0x000E88, "Wrong size on ABP_PlayerController_TVTDeathmatch_C");
static_assert(offsetof(ABP_PlayerController_TVTDeathmatch_C, UberGraphFrame_BP_PlayerController_TVTDeathmatch_C) == 0x000D98, "Member 'ABP_PlayerController_TVTDeathmatch_C::UberGraphFrame_BP_PlayerController_TVTDeathmatch_C' has a wrong offset!");
static_assert(offsetof(ABP_PlayerController_TVTDeathmatch_C, Character_To_Destroy_On_Respawn) == 0x000DA0, "Member 'ABP_PlayerController_TVTDeathmatch_C::Character_To_Destroy_On_Respawn' has a wrong offset!");
static_assert(offsetof(ABP_PlayerController_TVTDeathmatch_C, Can_Respawn) == 0x000DA8, "Member 'ABP_PlayerController_TVTDeathmatch_C::Can_Respawn' has a wrong offset!");
static_assert(offsetof(ABP_PlayerController_TVTDeathmatch_C, Respawn_Screen_UI) == 0x000DB0, "Member 'ABP_PlayerController_TVTDeathmatch_C::Respawn_Screen_UI' has a wrong offset!");
static_assert(offsetof(ABP_PlayerController_TVTDeathmatch_C, Wait_For_Match_Start_UI) == 0x000DB8, "Member 'ABP_PlayerController_TVTDeathmatch_C::Wait_For_Match_Start_UI' has a wrong offset!");
static_assert(offsetof(ABP_PlayerController_TVTDeathmatch_C, Match_Progress_UI) == 0x000DC0, "Member 'ABP_PlayerController_TVTDeathmatch_C::Match_Progress_UI' has a wrong offset!");
static_assert(offsetof(ABP_PlayerController_TVTDeathmatch_C, Player_Spectator) == 0x000DC8, "Member 'ABP_PlayerController_TVTDeathmatch_C::Player_Spectator' has a wrong offset!");
static_assert(offsetof(ABP_PlayerController_TVTDeathmatch_C, Lobby_UI) == 0x000DD0, "Member 'ABP_PlayerController_TVTDeathmatch_C::Lobby_UI' has a wrong offset!");
static_assert(offsetof(ABP_PlayerController_TVTDeathmatch_C, Phase_Before_Round_Start) == 0x000DD8, "Member 'ABP_PlayerController_TVTDeathmatch_C::Phase_Before_Round_Start' has a wrong offset!");
static_assert(offsetof(ABP_PlayerController_TVTDeathmatch_C, Death_After_LMS_UI) == 0x000DE0, "Member 'ABP_PlayerController_TVTDeathmatch_C::Death_After_LMS_UI' has a wrong offset!");
static_assert(offsetof(ABP_PlayerController_TVTDeathmatch_C, DestroyCharacterOnRespawn) == 0x000DE8, "Member 'ABP_PlayerController_TVTDeathmatch_C::DestroyCharacterOnRespawn' has a wrong offset!");
static_assert(offsetof(ABP_PlayerController_TVTDeathmatch_C, BlueScreen) == 0x000DF0, "Member 'ABP_PlayerController_TVTDeathmatch_C::BlueScreen' has a wrong offset!");
static_assert(offsetof(ABP_PlayerController_TVTDeathmatch_C, ForcedBlueScreenAlreadyHappened) == 0x000DF8, "Member 'ABP_PlayerController_TVTDeathmatch_C::ForcedBlueScreenAlreadyHappened' has a wrong offset!");
static_assert(offsetof(ABP_PlayerController_TVTDeathmatch_C, PossibleWeaponSpawnLoadouts) == 0x000E00, "Member 'ABP_PlayerController_TVTDeathmatch_C::PossibleWeaponSpawnLoadouts' has a wrong offset!");
static_assert(offsetof(ABP_PlayerController_TVTDeathmatch_C, LastSpawnedInWeapon) == 0x000E10, "Member 'ABP_PlayerController_TVTDeathmatch_C::LastSpawnedInWeapon' has a wrong offset!");
static_assert(offsetof(ABP_PlayerController_TVTDeathmatch_C, NamesFound) == 0x000E30, "Member 'ABP_PlayerController_TVTDeathmatch_C::NamesFound' has a wrong offset!");
static_assert(offsetof(ABP_PlayerController_TVTDeathmatch_C, Timer_CheatRespawnBlockerUpdate) == 0x000E40, "Member 'ABP_PlayerController_TVTDeathmatch_C::Timer_CheatRespawnBlockerUpdate' has a wrong offset!");
static_assert(offsetof(ABP_PlayerController_TVTDeathmatch_C, TempPlayerVectors) == 0x000E48, "Member 'ABP_PlayerController_TVTDeathmatch_C::TempPlayerVectors' has a wrong offset!");
static_assert(offsetof(ABP_PlayerController_TVTDeathmatch_C, InitialLoadoutsPool) == 0x000E58, "Member 'ABP_PlayerController_TVTDeathmatch_C::InitialLoadoutsPool' has a wrong offset!");
static_assert(offsetof(ABP_PlayerController_TVTDeathmatch_C, LastUsedInitialLoadout) == 0x000E68, "Member 'ABP_PlayerController_TVTDeathmatch_C::LastUsedInitialLoadout' has a wrong offset!");
static_assert(offsetof(ABP_PlayerController_TVTDeathmatch_C, ChosenLoadoutPopUp_UI) == 0x000E78, "Member 'ABP_PlayerController_TVTDeathmatch_C::ChosenLoadoutPopUp_UI' has a wrong offset!");
static_assert(offsetof(ABP_PlayerController_TVTDeathmatch_C, LastUpdateRemainingTime) == 0x000E80, "Member 'ABP_PlayerController_TVTDeathmatch_C::LastUpdateRemainingTime' has a wrong offset!");
static_assert(offsetof(ABP_PlayerController_TVTDeathmatch_C, IsDead) == 0x000E84, "Member 'ABP_PlayerController_TVTDeathmatch_C::IsDead' has a wrong offset!");

}

