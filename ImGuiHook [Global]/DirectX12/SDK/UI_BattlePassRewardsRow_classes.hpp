#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_BattlePassRewardsRow

#include "Basic.hpp"

#include "Flame_classes.hpp"
#include "Engine_structs.hpp"
#include "S_BattlePassLevelRewardFull_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_BattlePassRewardsRow.UI_BattlePassRewardsRow_C
// 0x0060 (0x0318 - 0x02B8)
class UUI_BattlePassRewardsRow_C final : public UFlameWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Background;                                        // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IconBattlePass;                                    // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LockImagePremium;                                  // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameTextBlock*                        NoFreeRewardsText;                                 // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             SlotsScrollBox;                                    // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TierBackground;                                    // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IsPremiumRewardsList;                              // 0x02F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_2F1[0x7];                                      // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_BattlePassLevelRewardFull>   TestArrayOfRewards;                                // 0x02F8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	FMulticastInlineDelegateProperty_             SlotInRewardsRowClicked;                           // 0x0308(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void SlotInRewardsRowClicked__DelegateSignature();
	void ExecuteUbergraph_UI_BattlePassRewardsRow(int32 EntryPoint);
	void EventSlotClicked(class UButton* Button);
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void SetRowFocus(bool* FocusWasSet);
	void SetRowLocked(bool IsLockedIn);
	void FillRewardSlots(TArray<struct FS_BattlePassLevelRewardFull>& RewardsIn, bool Aggregate);
	void GetFirstChild(class UWidget** BattlePassItem);

	void IsDurable(class UClass* ItemClassIn, bool* IsDurableOut) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_BattlePassRewardsRow_C">();
	}
	static class UUI_BattlePassRewardsRow_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_BattlePassRewardsRow_C>();
	}
};
static_assert(alignof(UUI_BattlePassRewardsRow_C) == 0x000008, "Wrong alignment on UUI_BattlePassRewardsRow_C");
static_assert(sizeof(UUI_BattlePassRewardsRow_C) == 0x000318, "Wrong size on UUI_BattlePassRewardsRow_C");
static_assert(offsetof(UUI_BattlePassRewardsRow_C, UberGraphFrame) == 0x0002B8, "Member 'UUI_BattlePassRewardsRow_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_BattlePassRewardsRow_C, Background) == 0x0002C0, "Member 'UUI_BattlePassRewardsRow_C::Background' has a wrong offset!");
static_assert(offsetof(UUI_BattlePassRewardsRow_C, IconBattlePass) == 0x0002C8, "Member 'UUI_BattlePassRewardsRow_C::IconBattlePass' has a wrong offset!");
static_assert(offsetof(UUI_BattlePassRewardsRow_C, LockImagePremium) == 0x0002D0, "Member 'UUI_BattlePassRewardsRow_C::LockImagePremium' has a wrong offset!");
static_assert(offsetof(UUI_BattlePassRewardsRow_C, NoFreeRewardsText) == 0x0002D8, "Member 'UUI_BattlePassRewardsRow_C::NoFreeRewardsText' has a wrong offset!");
static_assert(offsetof(UUI_BattlePassRewardsRow_C, SlotsScrollBox) == 0x0002E0, "Member 'UUI_BattlePassRewardsRow_C::SlotsScrollBox' has a wrong offset!");
static_assert(offsetof(UUI_BattlePassRewardsRow_C, TierBackground) == 0x0002E8, "Member 'UUI_BattlePassRewardsRow_C::TierBackground' has a wrong offset!");
static_assert(offsetof(UUI_BattlePassRewardsRow_C, IsPremiumRewardsList) == 0x0002F0, "Member 'UUI_BattlePassRewardsRow_C::IsPremiumRewardsList' has a wrong offset!");
static_assert(offsetof(UUI_BattlePassRewardsRow_C, TestArrayOfRewards) == 0x0002F8, "Member 'UUI_BattlePassRewardsRow_C::TestArrayOfRewards' has a wrong offset!");
static_assert(offsetof(UUI_BattlePassRewardsRow_C, SlotInRewardsRowClicked) == 0x000308, "Member 'UUI_BattlePassRewardsRow_C::SlotInRewardsRowClicked' has a wrong offset!");

}

