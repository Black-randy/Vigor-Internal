#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ActorToCarry

#include "Basic.hpp"

#include "Flame_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ActorToCarry.BP_ActorToCarry_C
// 0x0048 (0x0268 - 0x0220)
class ABP_ActorToCarry_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_InteractionItemComponent_C*         BP_InteractionItemComponent;                       // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CarriedMesh;                                       // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Handle;                                            // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_CarryingComponent_C*                CarrierComponent;                                  // 0x0248(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MovementSpeedRatio;                                // 0x0250(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         StaminaBurnRatio;                                  // 0x0254(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class ABP_Character_C*                        OwningCharacter;                                   // 0x0258(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxCarriedCount;                                   // 0x0260(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_ActorToCarry(int32 EntryPoint);
	void BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_4_Interaction_Start_On_Client__DelegateSignature(class UInteractionItemComponent* Sender, class AActor* Interacting_Actor);
	void BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_3_Interaction_Start_on_Server__DelegateSignature(class UInteractionItemComponent* Sender, class AActor* Interacting_Actor);
	void HalfTick();
	void BndEvt__CarriedMesh_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void MulticastedDrop();
	void MulticastedGrab();
	void OnCarrierDied(class ABP_Character_C* DyingCharacter, float DamageAmount, EDamageType DamageType, class AHumanCharacter* InstigatingCharacter, class UClass* InstigatingItem, const struct FHitResult& HitResult);
	void GrabCargoServer(class ABP_Character_C* Character);
	void DropCargo(const struct FTransform& HandleWorldTransform);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ActorToCarry_C">();
	}
	static class ABP_ActorToCarry_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ActorToCarry_C>();
	}
};
static_assert(alignof(ABP_ActorToCarry_C) == 0x000008, "Wrong alignment on ABP_ActorToCarry_C");
static_assert(sizeof(ABP_ActorToCarry_C) == 0x000268, "Wrong size on ABP_ActorToCarry_C");
static_assert(offsetof(ABP_ActorToCarry_C, UberGraphFrame) == 0x000220, "Member 'ABP_ActorToCarry_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ActorToCarry_C, BP_InteractionItemComponent) == 0x000228, "Member 'ABP_ActorToCarry_C::BP_InteractionItemComponent' has a wrong offset!");
static_assert(offsetof(ABP_ActorToCarry_C, CarriedMesh) == 0x000230, "Member 'ABP_ActorToCarry_C::CarriedMesh' has a wrong offset!");
static_assert(offsetof(ABP_ActorToCarry_C, Handle) == 0x000238, "Member 'ABP_ActorToCarry_C::Handle' has a wrong offset!");
static_assert(offsetof(ABP_ActorToCarry_C, DefaultSceneRoot) == 0x000240, "Member 'ABP_ActorToCarry_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_ActorToCarry_C, CarrierComponent) == 0x000248, "Member 'ABP_ActorToCarry_C::CarrierComponent' has a wrong offset!");
static_assert(offsetof(ABP_ActorToCarry_C, MovementSpeedRatio) == 0x000250, "Member 'ABP_ActorToCarry_C::MovementSpeedRatio' has a wrong offset!");
static_assert(offsetof(ABP_ActorToCarry_C, StaminaBurnRatio) == 0x000254, "Member 'ABP_ActorToCarry_C::StaminaBurnRatio' has a wrong offset!");
static_assert(offsetof(ABP_ActorToCarry_C, OwningCharacter) == 0x000258, "Member 'ABP_ActorToCarry_C::OwningCharacter' has a wrong offset!");
static_assert(offsetof(ABP_ActorToCarry_C, MaxCarriedCount) == 0x000260, "Member 'ABP_ActorToCarry_C::MaxCarriedCount' has a wrong offset!");

}

