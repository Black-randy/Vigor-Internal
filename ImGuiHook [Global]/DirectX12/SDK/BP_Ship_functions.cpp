#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Ship

#include "Basic.hpp"

#include "BP_Ship_classes.hpp"
#include "BP_Ship_parameters.hpp"


namespace SDK
{

// Function BP_Ship.BP_Ship_C.SetMeches
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Ship_C::SetMeches()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ship_C", "SetMeches");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Ship.BP_Ship_C.SetColours
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Ship_C::SetColours()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ship_C", "SetColours");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Ship.BP_Ship_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_Ship_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ship_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Ship.BP_Ship_C.AdjustWindIntensity
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   CurrentWindIntensity                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Ship_C::AdjustWindIntensity(float CurrentWindIntensity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ship_C", "AdjustWindIntensity");

	Params::BP_Ship_C_AdjustWindIntensity Parms{};

	Parms.CurrentWindIntensity = CurrentWindIntensity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Ship.BP_Ship_C.AdjustWindDirection
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          CurrentWindDirection                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Ship_C::AdjustWindDirection(const struct FVector& CurrentWindDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ship_C", "AdjustWindDirection");

	Params::BP_Ship_C_AdjustWindDirection Parms{};

	Parms.CurrentWindDirection = std::move(CurrentWindDirection);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Ship.BP_Ship_C.SetHeavyRain
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    HeavyRain                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Ship_C::SetHeavyRain(bool HeavyRain)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ship_C", "SetHeavyRain");

	Params::BP_Ship_C_SetHeavyRain Parms{};

	Parms.HeavyRain = HeavyRain;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Ship.BP_Ship_C.AdjustRainIntensity
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   CurrentRainAmount                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CurrentWetnessAmount                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Ship_C::AdjustRainIntensity(float CurrentRainAmount, float CurrentWetnessAmount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ship_C", "AdjustRainIntensity");

	Params::BP_Ship_C_AdjustRainIntensity Parms{};

	Parms.CurrentRainAmount = CurrentRainAmount;
	Parms.CurrentWetnessAmount = CurrentWetnessAmount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Ship.BP_Ship_C.AdjustWeather
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   CurrentRainAmount                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CurrentWindIntensity                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          CurrentWindDirection                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CurrentWetnessAmount                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Ship_C::AdjustWeather(float CurrentRainAmount, float CurrentWindIntensity, const struct FVector& CurrentWindDirection, float CurrentWetnessAmount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ship_C", "AdjustWeather");

	Params::BP_Ship_C_AdjustWeather Parms{};

	Parms.CurrentRainAmount = CurrentRainAmount;
	Parms.CurrentWindIntensity = CurrentWindIntensity;
	Parms.CurrentWindDirection = std::move(CurrentWindDirection);
	Parms.CurrentWetnessAmount = CurrentWetnessAmount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Ship.BP_Ship_C.ExecuteUbergraph_BP_Ship
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Ship_C::ExecuteUbergraph_BP_Ship(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ship_C", "ExecuteUbergraph_BP_Ship");

	Params::BP_Ship_C_ExecuteUbergraph_BP_Ship Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

