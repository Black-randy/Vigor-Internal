#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_HitIndication

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function UI_HitIndication.UI_HitIndication_C.ExecuteUbergraph_UI_HitIndication
// 0x0070 (0x0070 - 0x0000)
struct UI_HitIndication_C_ExecuteUbergraph_UI_HitIndication final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_BulletOrigin;                   // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsPlayerHit;                    // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_IsArmorHit;                     // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_IsFriendlyFire;                 // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F[0x1];                                       // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_Script_C*                 K2Node_CustomEvent_Caster;                         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0038(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0040(0x0010)(ZeroConstructor, NoDestructor)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_1;                   // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_2;                   // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HitIndication_C_ExecuteUbergraph_UI_HitIndication) == 0x000008, "Wrong alignment on UI_HitIndication_C_ExecuteUbergraph_UI_HitIndication");
static_assert(sizeof(UI_HitIndication_C_ExecuteUbergraph_UI_HitIndication) == 0x000070, "Wrong size on UI_HitIndication_C_ExecuteUbergraph_UI_HitIndication");
static_assert(offsetof(UI_HitIndication_C_ExecuteUbergraph_UI_HitIndication, EntryPoint) == 0x000000, "Member 'UI_HitIndication_C_ExecuteUbergraph_UI_HitIndication::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_HitIndication_C_ExecuteUbergraph_UI_HitIndication, K2Node_Event_IsDesignTime) == 0x000004, "Member 'UI_HitIndication_C_ExecuteUbergraph_UI_HitIndication::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_HitIndication_C_ExecuteUbergraph_UI_HitIndication, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'UI_HitIndication_C_ExecuteUbergraph_UI_HitIndication::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HitIndication_C_ExecuteUbergraph_UI_HitIndication, K2Node_CustomEvent_BulletOrigin) == 0x000010, "Member 'UI_HitIndication_C_ExecuteUbergraph_UI_HitIndication::K2Node_CustomEvent_BulletOrigin' has a wrong offset!");
static_assert(offsetof(UI_HitIndication_C_ExecuteUbergraph_UI_HitIndication, K2Node_CustomEvent_IsPlayerHit) == 0x00001C, "Member 'UI_HitIndication_C_ExecuteUbergraph_UI_HitIndication::K2Node_CustomEvent_IsPlayerHit' has a wrong offset!");
static_assert(offsetof(UI_HitIndication_C_ExecuteUbergraph_UI_HitIndication, K2Node_CustomEvent_IsArmorHit) == 0x00001D, "Member 'UI_HitIndication_C_ExecuteUbergraph_UI_HitIndication::K2Node_CustomEvent_IsArmorHit' has a wrong offset!");
static_assert(offsetof(UI_HitIndication_C_ExecuteUbergraph_UI_HitIndication, K2Node_CustomEvent_IsFriendlyFire) == 0x00001E, "Member 'UI_HitIndication_C_ExecuteUbergraph_UI_HitIndication::K2Node_CustomEvent_IsFriendlyFire' has a wrong offset!");
static_assert(offsetof(UI_HitIndication_C_ExecuteUbergraph_UI_HitIndication, K2Node_CustomEvent_Caster) == 0x000020, "Member 'UI_HitIndication_C_ExecuteUbergraph_UI_HitIndication::K2Node_CustomEvent_Caster' has a wrong offset!");
static_assert(offsetof(UI_HitIndication_C_ExecuteUbergraph_UI_HitIndication, K2Node_MakeStruct_LinearColor) == 0x000028, "Member 'UI_HitIndication_C_ExecuteUbergraph_UI_HitIndication::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(UI_HitIndication_C_ExecuteUbergraph_UI_HitIndication, CallFunc_K2_SetTimer_ReturnValue) == 0x000038, "Member 'UI_HitIndication_C_ExecuteUbergraph_UI_HitIndication::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HitIndication_C_ExecuteUbergraph_UI_HitIndication, K2Node_CreateDelegate_OutputDelegate) == 0x000040, "Member 'UI_HitIndication_C_ExecuteUbergraph_UI_HitIndication::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UI_HitIndication_C_ExecuteUbergraph_UI_HitIndication, K2Node_MakeStruct_LinearColor_1) == 0x000050, "Member 'UI_HitIndication_C_ExecuteUbergraph_UI_HitIndication::K2Node_MakeStruct_LinearColor_1' has a wrong offset!");
static_assert(offsetof(UI_HitIndication_C_ExecuteUbergraph_UI_HitIndication, K2Node_MakeStruct_LinearColor_2) == 0x000060, "Member 'UI_HitIndication_C_ExecuteUbergraph_UI_HitIndication::K2Node_MakeStruct_LinearColor_2' has a wrong offset!");

// Function UI_HitIndication.UI_HitIndication_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_HitIndication_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_HitIndication_C_PreConstruct) == 0x000001, "Wrong alignment on UI_HitIndication_C_PreConstruct");
static_assert(sizeof(UI_HitIndication_C_PreConstruct) == 0x000001, "Wrong size on UI_HitIndication_C_PreConstruct");
static_assert(offsetof(UI_HitIndication_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_HitIndication_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_HitIndication.UI_HitIndication_C.Event Initialize
// 0x0018 (0x0018 - 0x0000)
struct UI_HitIndication_C_Event_Initialize final
{
public:
	struct FVector                                BulletOrigin_0;                                    // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlayerHit_0;                                     // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsArmorHit_0;                                      // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsFriendlyFire_0;                                  // 0x000E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F[0x1];                                        // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_Script_C*                 Caster_0;                                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HitIndication_C_Event_Initialize) == 0x000008, "Wrong alignment on UI_HitIndication_C_Event_Initialize");
static_assert(sizeof(UI_HitIndication_C_Event_Initialize) == 0x000018, "Wrong size on UI_HitIndication_C_Event_Initialize");
static_assert(offsetof(UI_HitIndication_C_Event_Initialize, BulletOrigin_0) == 0x000000, "Member 'UI_HitIndication_C_Event_Initialize::BulletOrigin_0' has a wrong offset!");
static_assert(offsetof(UI_HitIndication_C_Event_Initialize, IsPlayerHit_0) == 0x00000C, "Member 'UI_HitIndication_C_Event_Initialize::IsPlayerHit_0' has a wrong offset!");
static_assert(offsetof(UI_HitIndication_C_Event_Initialize, IsArmorHit_0) == 0x00000D, "Member 'UI_HitIndication_C_Event_Initialize::IsArmorHit_0' has a wrong offset!");
static_assert(offsetof(UI_HitIndication_C_Event_Initialize, IsFriendlyFire_0) == 0x00000E, "Member 'UI_HitIndication_C_Event_Initialize::IsFriendlyFire_0' has a wrong offset!");
static_assert(offsetof(UI_HitIndication_C_Event_Initialize, Caster_0) == 0x000010, "Member 'UI_HitIndication_C_Event_Initialize::Caster_0' has a wrong offset!");

// Function UI_HitIndication.UI_HitIndication_C.UpdateBulletIndicator
// 0x0088 (0x0088 - 0x0000)
struct UI_HitIndication_C_UpdateBulletIndicator final
{
public:
	float                                         HitDirection;                                      // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWidgetTransform                       K2Node_MakeStruct_WidgetTransform;                 // 0x0004(0x001C)(NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_Script_C*                 K2Node_DynamicCast_AsBP_Character_Script;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HitIndication_C_UpdateBulletIndicator) == 0x000008, "Wrong alignment on UI_HitIndication_C_UpdateBulletIndicator");
static_assert(sizeof(UI_HitIndication_C_UpdateBulletIndicator) == 0x000088, "Wrong size on UI_HitIndication_C_UpdateBulletIndicator");
static_assert(offsetof(UI_HitIndication_C_UpdateBulletIndicator, HitDirection) == 0x000000, "Member 'UI_HitIndication_C_UpdateBulletIndicator::HitDirection' has a wrong offset!");
static_assert(offsetof(UI_HitIndication_C_UpdateBulletIndicator, K2Node_MakeStruct_WidgetTransform) == 0x000004, "Member 'UI_HitIndication_C_UpdateBulletIndicator::K2Node_MakeStruct_WidgetTransform' has a wrong offset!");
static_assert(offsetof(UI_HitIndication_C_UpdateBulletIndicator, CallFunc_Add_FloatFloat_ReturnValue) == 0x000020, "Member 'UI_HitIndication_C_UpdateBulletIndicator::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HitIndication_C_UpdateBulletIndicator, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000028, "Member 'UI_HitIndication_C_UpdateBulletIndicator::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HitIndication_C_UpdateBulletIndicator, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000030, "Member 'UI_HitIndication_C_UpdateBulletIndicator::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HitIndication_C_UpdateBulletIndicator, K2Node_DynamicCast_AsBP_Character_Script) == 0x000038, "Member 'UI_HitIndication_C_UpdateBulletIndicator::K2Node_DynamicCast_AsBP_Character_Script' has a wrong offset!");
static_assert(offsetof(UI_HitIndication_C_UpdateBulletIndicator, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'UI_HitIndication_C_UpdateBulletIndicator::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_HitIndication_C_UpdateBulletIndicator, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000044, "Member 'UI_HitIndication_C_UpdateBulletIndicator::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HitIndication_C_UpdateBulletIndicator, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000050, "Member 'UI_HitIndication_C_UpdateBulletIndicator::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HitIndication_C_UpdateBulletIndicator, CallFunc_FindLookAtRotation_ReturnValue) == 0x00005C, "Member 'UI_HitIndication_C_UpdateBulletIndicator::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HitIndication_C_UpdateBulletIndicator, CallFunc_BreakRotator_Roll) == 0x000068, "Member 'UI_HitIndication_C_UpdateBulletIndicator::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(UI_HitIndication_C_UpdateBulletIndicator, CallFunc_BreakRotator_Pitch) == 0x00006C, "Member 'UI_HitIndication_C_UpdateBulletIndicator::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(UI_HitIndication_C_UpdateBulletIndicator, CallFunc_BreakRotator_Yaw) == 0x000070, "Member 'UI_HitIndication_C_UpdateBulletIndicator::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(UI_HitIndication_C_UpdateBulletIndicator, CallFunc_BreakRotator_Roll_1) == 0x000074, "Member 'UI_HitIndication_C_UpdateBulletIndicator::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(UI_HitIndication_C_UpdateBulletIndicator, CallFunc_BreakRotator_Pitch_1) == 0x000078, "Member 'UI_HitIndication_C_UpdateBulletIndicator::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(UI_HitIndication_C_UpdateBulletIndicator, CallFunc_BreakRotator_Yaw_1) == 0x00007C, "Member 'UI_HitIndication_C_UpdateBulletIndicator::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(UI_HitIndication_C_UpdateBulletIndicator, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000080, "Member 'UI_HitIndication_C_UpdateBulletIndicator::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");

}

