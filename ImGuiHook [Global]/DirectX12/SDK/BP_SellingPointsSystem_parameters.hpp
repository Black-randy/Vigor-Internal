#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SellingPointsSystem

#include "Basic.hpp"

#include "E_SellingPointStatus_structs.hpp"
#include "Flame_structs.hpp"
#include "S_BattlePassLevelRewardFull_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_SellingPointsSystem.BP_SellingPointsSystem_C.UpdateStaticData
// 0x0138 (0x0138 - 0x0000)
struct BP_SellingPointsSystem_C_UpdateStaticData final
{
public:
	class UGameStoreOffers*                       GameStoreOffers;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBattlePassSystem*                      BattlePassSystem;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              Now;                                               // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         SeasonMaxLevel;                                    // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SeasonName;                                        // 0x001C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BattlePassSystem_C*                 BP_BattlePassSystem;                               // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameStoreInfo                         StoreInfo;                                         // 0x0030(0x0028)(Edit, BlueprintVisible)
	class UBP_BattlePassSystem_C*                 K2Node_DynamicCast_AsBP_Battle_Pass_System;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetGameStoreSlotInfo_StoreFound;          // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameStoreInfo                         CallFunc_GetGameStoreSlotInfo_ReturnValue;         // 0x0068(0x0028)(ConstParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_BattlePassLevelRewardFull>   CallFunc_Compile_Rewards_in_Level_Range_Rewards;   // 0x00A0(0x0010)(ReferenceParm)
	TArray<struct FS_BattlePassLevelRewardFull>   CallFunc_Compile_Rewards_in_Level_Range_Rewards_1; // 0x00B0(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Get_Season_Name_Active_Season_Name;       // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameStoreSlotInfo                     CallFunc_Array_Get_Item;                           // 0x00C8(0x0020)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Get_Season_Max_Level_Max_Level;           // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindValidOffer_ValidOfferFound;           // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F5[0x3];                                       // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameStoreOfferInfo                    CallFunc_FindValidOffer_ValidOffer;                // 0x00F8(0x0028)()
	struct FDateTime                              CallFunc_FindValidOffer_ValidUntil;                // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FindValidOffer_RemainingSeconds;          // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FindValidOffer_OfferIndex;                // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SellingPointsSystem_C_UpdateStaticData) == 0x000008, "Wrong alignment on BP_SellingPointsSystem_C_UpdateStaticData");
static_assert(sizeof(BP_SellingPointsSystem_C_UpdateStaticData) == 0x000138, "Wrong size on BP_SellingPointsSystem_C_UpdateStaticData");
static_assert(offsetof(BP_SellingPointsSystem_C_UpdateStaticData, GameStoreOffers) == 0x000000, "Member 'BP_SellingPointsSystem_C_UpdateStaticData::GameStoreOffers' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_UpdateStaticData, BattlePassSystem) == 0x000008, "Member 'BP_SellingPointsSystem_C_UpdateStaticData::BattlePassSystem' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_UpdateStaticData, Now) == 0x000010, "Member 'BP_SellingPointsSystem_C_UpdateStaticData::Now' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_UpdateStaticData, SeasonMaxLevel) == 0x000018, "Member 'BP_SellingPointsSystem_C_UpdateStaticData::SeasonMaxLevel' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_UpdateStaticData, SeasonName) == 0x00001C, "Member 'BP_SellingPointsSystem_C_UpdateStaticData::SeasonName' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_UpdateStaticData, BP_BattlePassSystem) == 0x000028, "Member 'BP_SellingPointsSystem_C_UpdateStaticData::BP_BattlePassSystem' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_UpdateStaticData, StoreInfo) == 0x000030, "Member 'BP_SellingPointsSystem_C_UpdateStaticData::StoreInfo' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_UpdateStaticData, K2Node_DynamicCast_AsBP_Battle_Pass_System) == 0x000058, "Member 'BP_SellingPointsSystem_C_UpdateStaticData::K2Node_DynamicCast_AsBP_Battle_Pass_System' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_UpdateStaticData, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'BP_SellingPointsSystem_C_UpdateStaticData::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_UpdateStaticData, CallFunc_GetGameStoreSlotInfo_StoreFound) == 0x000061, "Member 'BP_SellingPointsSystem_C_UpdateStaticData::CallFunc_GetGameStoreSlotInfo_StoreFound' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_UpdateStaticData, CallFunc_GetGameStoreSlotInfo_ReturnValue) == 0x000068, "Member 'BP_SellingPointsSystem_C_UpdateStaticData::CallFunc_GetGameStoreSlotInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_UpdateStaticData, Temp_int_Array_Index_Variable) == 0x000090, "Member 'BP_SellingPointsSystem_C_UpdateStaticData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_UpdateStaticData, Temp_int_Loop_Counter_Variable) == 0x000094, "Member 'BP_SellingPointsSystem_C_UpdateStaticData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_UpdateStaticData, CallFunc_Add_IntInt_ReturnValue) == 0x000098, "Member 'BP_SellingPointsSystem_C_UpdateStaticData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_UpdateStaticData, CallFunc_Compile_Rewards_in_Level_Range_Rewards) == 0x0000A0, "Member 'BP_SellingPointsSystem_C_UpdateStaticData::CallFunc_Compile_Rewards_in_Level_Range_Rewards' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_UpdateStaticData, CallFunc_Compile_Rewards_in_Level_Range_Rewards_1) == 0x0000B0, "Member 'BP_SellingPointsSystem_C_UpdateStaticData::CallFunc_Compile_Rewards_in_Level_Range_Rewards_1' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_UpdateStaticData, CallFunc_Get_Season_Name_Active_Season_Name) == 0x0000C0, "Member 'BP_SellingPointsSystem_C_UpdateStaticData::CallFunc_Get_Season_Name_Active_Season_Name' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_UpdateStaticData, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'BP_SellingPointsSystem_C_UpdateStaticData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_UpdateStaticData, CallFunc_Array_Length_ReturnValue) == 0x0000E8, "Member 'BP_SellingPointsSystem_C_UpdateStaticData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_UpdateStaticData, CallFunc_Less_IntInt_ReturnValue) == 0x0000EC, "Member 'BP_SellingPointsSystem_C_UpdateStaticData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_UpdateStaticData, CallFunc_Get_Season_Max_Level_Max_Level) == 0x0000F0, "Member 'BP_SellingPointsSystem_C_UpdateStaticData::CallFunc_Get_Season_Max_Level_Max_Level' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_UpdateStaticData, CallFunc_FindValidOffer_ValidOfferFound) == 0x0000F4, "Member 'BP_SellingPointsSystem_C_UpdateStaticData::CallFunc_FindValidOffer_ValidOfferFound' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_UpdateStaticData, CallFunc_FindValidOffer_ValidOffer) == 0x0000F8, "Member 'BP_SellingPointsSystem_C_UpdateStaticData::CallFunc_FindValidOffer_ValidOffer' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_UpdateStaticData, CallFunc_FindValidOffer_ValidUntil) == 0x000120, "Member 'BP_SellingPointsSystem_C_UpdateStaticData::CallFunc_FindValidOffer_ValidUntil' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_UpdateStaticData, CallFunc_FindValidOffer_RemainingSeconds) == 0x000128, "Member 'BP_SellingPointsSystem_C_UpdateStaticData::CallFunc_FindValidOffer_RemainingSeconds' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_UpdateStaticData, CallFunc_FindValidOffer_OfferIndex) == 0x00012C, "Member 'BP_SellingPointsSystem_C_UpdateStaticData::CallFunc_FindValidOffer_OfferIndex' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_UpdateStaticData, CallFunc_Array_AddUnique_ReturnValue) == 0x000130, "Member 'BP_SellingPointsSystem_C_UpdateStaticData::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function BP_SellingPointsSystem.BP_SellingPointsSystem_C.UpdateOwnedItems
// 0x0010 (0x0010 - 0x0000)
struct BP_SellingPointsSystem_C_UpdateOwnedItems final
{
public:
	TArray<class UClass*>                         OwnedItems_0;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_SellingPointsSystem_C_UpdateOwnedItems) == 0x000008, "Wrong alignment on BP_SellingPointsSystem_C_UpdateOwnedItems");
static_assert(sizeof(BP_SellingPointsSystem_C_UpdateOwnedItems) == 0x000010, "Wrong size on BP_SellingPointsSystem_C_UpdateOwnedItems");
static_assert(offsetof(BP_SellingPointsSystem_C_UpdateOwnedItems, OwnedItems_0) == 0x000000, "Member 'BP_SellingPointsSystem_C_UpdateOwnedItems::OwnedItems_0' has a wrong offset!");

// Function BP_SellingPointsSystem.BP_SellingPointsSystem_C.GetFocusedItemState
// 0x0308 (0x0308 - 0x0000)
struct BP_SellingPointsSystem_C_GetFocusedItemState final
{
public:
	const class UClass*                           Item;                                              // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SellingPointStatus                          Status;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameStoreProductInfo                  FocusedProductInfo;                                // 0x0010(0x0050)(Parm, OutParm)
	struct FGameStoreProductInfo                  FocusedProductInfoLocal;                           // 0x0060(0x0050)(Edit, BlueprintVisible)
	class UClass*                                 ItemLocal;                                         // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BE[0x2];                                       // 0x00BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_105[0x3];                                      // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_BattlePassLevelRewardFull           CallFunc_Array_Get_Item;                           // 0x0108(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AItem*                                  CallFunc_GetClassDefaultObject_ReturnValue;        // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACustomizationVariant*                  K2Node_DynamicCast_AsCustomization_Variant;        // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class ACustomizationVariantBundle> CallFunc_GetCustomizationBundle_ReturnValue;       // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue_1;               // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SellingPointStatus                          CallFunc_GetFocusedItemState_Status;               // 0x014A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14B[0x5];                                      // 0x014B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameStoreProductInfo                  CallFunc_GetFocusedItemState_FocusedProductInfo;   // 0x0150(0x0050)()
	struct FGameStoreOfferInfo                    CallFunc_Array_Get_Item_1;                         // 0x01A0(0x0028)()
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1CD[0x3];                                      // 0x01CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameStoreProductInfo                  CallFunc_Array_Get_Item_2;                         // 0x01D0(0x0050)()
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_224[0x4];                                      // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameStoreBundleInfo                   CallFunc_Array_Get_Item_3;                         // 0x0228(0x0028)()
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_251[0x7];                                      // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameStoreItemInfo                     CallFunc_Array_Get_Item_4;                         // 0x0258(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x026C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26D[0x3];                                      // 0x026D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x0274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetGameSellingPointInfoForItem_ProductFound; // 0x0275(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_276[0x2];                                      // 0x0276(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameStoreSellingPointInfo             CallFunc_GetGameSellingPointInfoForItem_ReturnValue; // 0x0278(0x0060)(ConstParm)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue_1;      // 0x02D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DA[0x2];                                      // 0x02DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_BattlePassLevelRewardFull           CallFunc_Array_Get_Item_5;                         // 0x02E0(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue_2;      // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0301(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0302(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SellingPointsSystem_C_GetFocusedItemState) == 0x000008, "Wrong alignment on BP_SellingPointsSystem_C_GetFocusedItemState");
static_assert(sizeof(BP_SellingPointsSystem_C_GetFocusedItemState) == 0x000308, "Wrong size on BP_SellingPointsSystem_C_GetFocusedItemState");
static_assert(offsetof(BP_SellingPointsSystem_C_GetFocusedItemState, Item) == 0x000000, "Member 'BP_SellingPointsSystem_C_GetFocusedItemState::Item' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetFocusedItemState, Status) == 0x000008, "Member 'BP_SellingPointsSystem_C_GetFocusedItemState::Status' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetFocusedItemState, FocusedProductInfo) == 0x000010, "Member 'BP_SellingPointsSystem_C_GetFocusedItemState::FocusedProductInfo' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetFocusedItemState, FocusedProductInfoLocal) == 0x000060, "Member 'BP_SellingPointsSystem_C_GetFocusedItemState::FocusedProductInfoLocal' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetFocusedItemState, ItemLocal) == 0x0000B0, "Member 'BP_SellingPointsSystem_C_GetFocusedItemState::ItemLocal' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetFocusedItemState, Temp_int_Array_Index_Variable) == 0x0000B8, "Member 'BP_SellingPointsSystem_C_GetFocusedItemState::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetFocusedItemState, CallFunc_IsValidClass_ReturnValue) == 0x0000BC, "Member 'BP_SellingPointsSystem_C_GetFocusedItemState::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetFocusedItemState, CallFunc_Not_PreBool_ReturnValue) == 0x0000BD, "Member 'BP_SellingPointsSystem_C_GetFocusedItemState::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetFocusedItemState, Temp_int_Loop_Counter_Variable) == 0x0000C0, "Member 'BP_SellingPointsSystem_C_GetFocusedItemState::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetFocusedItemState, CallFunc_Add_IntInt_ReturnValue) == 0x0000C4, "Member 'BP_SellingPointsSystem_C_GetFocusedItemState::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetFocusedItemState, Temp_int_Array_Index_Variable_1) == 0x0000C8, "Member 'BP_SellingPointsSystem_C_GetFocusedItemState::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetFocusedItemState, Temp_int_Array_Index_Variable_2) == 0x0000CC, "Member 'BP_SellingPointsSystem_C_GetFocusedItemState::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetFocusedItemState, Temp_int_Loop_Counter_Variable_1) == 0x0000D0, "Member 'BP_SellingPointsSystem_C_GetFocusedItemState::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetFocusedItemState, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000D4, "Member 'BP_SellingPointsSystem_C_GetFocusedItemState::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetFocusedItemState, Temp_int_Array_Index_Variable_3) == 0x0000D8, "Member 'BP_SellingPointsSystem_C_GetFocusedItemState::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetFocusedItemState, Temp_int_Loop_Counter_Variable_2) == 0x0000DC, "Member 'BP_SellingPointsSystem_C_GetFocusedItemState::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetFocusedItemState, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000E0, "Member 'BP_SellingPointsSystem_C_GetFocusedItemState::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetFocusedItemState, Temp_int_Loop_Counter_Variable_3) == 0x0000E4, "Member 'BP_SellingPointsSystem_C_GetFocusedItemState::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetFocusedItemState, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000E8, "Member 'BP_SellingPointsSystem_C_GetFocusedItemState::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetFocusedItemState, Temp_int_Array_Index_Variable_4) == 0x0000EC, "Member 'BP_SellingPointsSystem_C_GetFocusedItemState::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetFocusedItemState, Temp_int_Loop_Counter_Variable_4) == 0x0000F0, "Member 'BP_SellingPointsSystem_C_GetFocusedItemState::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetFocusedItemState, CallFunc_Add_IntInt_ReturnValue_4) == 0x0000F4, "Member 'BP_SellingPointsSystem_C_GetFocusedItemState::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetFocusedItemState, Temp_int_Loop_Counter_Variable_5) == 0x0000F8, "Member 'BP_SellingPointsSystem_C_GetFocusedItemState::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetFocusedItemState, CallFunc_Array_Length_ReturnValue) == 0x0000FC, "Member 'BP_SellingPointsSystem_C_GetFocusedItemState::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetFocusedItemState, CallFunc_Add_IntInt_ReturnValue_5) == 0x000100, "Member 'BP_SellingPointsSystem_C_GetFocusedItemState::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetFocusedItemState, CallFunc_Less_IntInt_ReturnValue) == 0x000104, "Member 'BP_SellingPointsSystem_C_GetFocusedItemState::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetFocusedItemState, CallFunc_Array_Get_Item) == 0x000108, "Member 'BP_SellingPointsSystem_C_GetFocusedItemState::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetFocusedItemState, CallFunc_GetClassDefaultObject_ReturnValue) == 0x000128, "Member 'BP_SellingPointsSystem_C_GetFocusedItemState::CallFunc_GetClassDefaultObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetFocusedItemState, K2Node_DynamicCast_AsCustomization_Variant) == 0x000130, "Member 'BP_SellingPointsSystem_C_GetFocusedItemState::K2Node_DynamicCast_AsCustomization_Variant' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetFocusedItemState, K2Node_DynamicCast_bSuccess) == 0x000138, "Member 'BP_SellingPointsSystem_C_GetFocusedItemState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetFocusedItemState, CallFunc_Array_Length_ReturnValue_1) == 0x00013C, "Member 'BP_SellingPointsSystem_C_GetFocusedItemState::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetFocusedItemState, CallFunc_GetCustomizationBundle_ReturnValue) == 0x000140, "Member 'BP_SellingPointsSystem_C_GetFocusedItemState::CallFunc_GetCustomizationBundle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetFocusedItemState, CallFunc_Less_IntInt_ReturnValue_1) == 0x000148, "Member 'BP_SellingPointsSystem_C_GetFocusedItemState::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetFocusedItemState, CallFunc_IsValidClass_ReturnValue_1) == 0x000149, "Member 'BP_SellingPointsSystem_C_GetFocusedItemState::CallFunc_IsValidClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetFocusedItemState, CallFunc_GetFocusedItemState_Status) == 0x00014A, "Member 'BP_SellingPointsSystem_C_GetFocusedItemState::CallFunc_GetFocusedItemState_Status' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetFocusedItemState, CallFunc_GetFocusedItemState_FocusedProductInfo) == 0x000150, "Member 'BP_SellingPointsSystem_C_GetFocusedItemState::CallFunc_GetFocusedItemState_FocusedProductInfo' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetFocusedItemState, CallFunc_Array_Get_Item_1) == 0x0001A0, "Member 'BP_SellingPointsSystem_C_GetFocusedItemState::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetFocusedItemState, CallFunc_Array_Length_ReturnValue_2) == 0x0001C8, "Member 'BP_SellingPointsSystem_C_GetFocusedItemState::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetFocusedItemState, CallFunc_Less_IntInt_ReturnValue_2) == 0x0001CC, "Member 'BP_SellingPointsSystem_C_GetFocusedItemState::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetFocusedItemState, CallFunc_Array_Get_Item_2) == 0x0001D0, "Member 'BP_SellingPointsSystem_C_GetFocusedItemState::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetFocusedItemState, CallFunc_Array_Length_ReturnValue_3) == 0x000220, "Member 'BP_SellingPointsSystem_C_GetFocusedItemState::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetFocusedItemState, CallFunc_Array_Get_Item_3) == 0x000228, "Member 'BP_SellingPointsSystem_C_GetFocusedItemState::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetFocusedItemState, CallFunc_Less_IntInt_ReturnValue_3) == 0x000250, "Member 'BP_SellingPointsSystem_C_GetFocusedItemState::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetFocusedItemState, CallFunc_Array_Get_Item_4) == 0x000258, "Member 'BP_SellingPointsSystem_C_GetFocusedItemState::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetFocusedItemState, CallFunc_Array_Length_ReturnValue_4) == 0x000268, "Member 'BP_SellingPointsSystem_C_GetFocusedItemState::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetFocusedItemState, CallFunc_Less_IntInt_ReturnValue_4) == 0x00026C, "Member 'BP_SellingPointsSystem_C_GetFocusedItemState::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetFocusedItemState, CallFunc_Array_Length_ReturnValue_5) == 0x000270, "Member 'BP_SellingPointsSystem_C_GetFocusedItemState::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetFocusedItemState, CallFunc_Less_IntInt_ReturnValue_5) == 0x000274, "Member 'BP_SellingPointsSystem_C_GetFocusedItemState::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetFocusedItemState, CallFunc_GetGameSellingPointInfoForItem_ProductFound) == 0x000275, "Member 'BP_SellingPointsSystem_C_GetFocusedItemState::CallFunc_GetGameSellingPointInfoForItem_ProductFound' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetFocusedItemState, CallFunc_GetGameSellingPointInfoForItem_ReturnValue) == 0x000278, "Member 'BP_SellingPointsSystem_C_GetFocusedItemState::CallFunc_GetGameSellingPointInfoForItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetFocusedItemState, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x0002D8, "Member 'BP_SellingPointsSystem_C_GetFocusedItemState::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetFocusedItemState, CallFunc_EqualEqual_ClassClass_ReturnValue_1) == 0x0002D9, "Member 'BP_SellingPointsSystem_C_GetFocusedItemState::CallFunc_EqualEqual_ClassClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetFocusedItemState, Temp_int_Array_Index_Variable_5) == 0x0002DC, "Member 'BP_SellingPointsSystem_C_GetFocusedItemState::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetFocusedItemState, CallFunc_Array_Get_Item_5) == 0x0002E0, "Member 'BP_SellingPointsSystem_C_GetFocusedItemState::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetFocusedItemState, CallFunc_EqualEqual_ClassClass_ReturnValue_2) == 0x000300, "Member 'BP_SellingPointsSystem_C_GetFocusedItemState::CallFunc_EqualEqual_ClassClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetFocusedItemState, CallFunc_Array_Contains_ReturnValue) == 0x000301, "Member 'BP_SellingPointsSystem_C_GetFocusedItemState::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetFocusedItemState, CallFunc_BooleanOR_ReturnValue) == 0x000302, "Member 'BP_SellingPointsSystem_C_GetFocusedItemState::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_SellingPointsSystem.BP_SellingPointsSystem_C.IsItemVisible
// 0x0220 (0x0220 - 0x0000)
struct BP_SellingPointsSystem_C_IsItemVisible final
{
public:
	class UClass*                                 Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Visible;                                        // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 ItemLocal;                                         // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_BattlePassLevelRewardFull           CallFunc_Array_Get_Item;                           // 0x0058(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_BattlePassLevelRewardFull           CallFunc_Array_Get_Item_1;                         // 0x0080(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameStoreOfferInfo                    CallFunc_Array_Get_Item_2;                         // 0x00D8(0x0028)()
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameStoreProductInfo                  CallFunc_Array_Get_Item_3;                         // 0x0108(0x0050)()
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15D[0x3];                                      // 0x015D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameStoreBundleInfo                   CallFunc_Array_Get_Item_4;                         // 0x0160(0x0028)()
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameStoreItemInfo                     CallFunc_Array_Get_Item_5;                         // 0x0190(0x0010)(NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x3];                                      // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetGameSellingPointInfoForItem_ProductFound; // 0x01B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B3[0x5];                                      // 0x01B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameStoreSellingPointInfo             CallFunc_GetGameSellingPointInfoForItem_ReturnValue; // 0x01B8(0x0060)(ConstParm)
	bool                                          CallFunc_Array_Contains_ReturnValue_2;             // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SellingPointsSystem_C_IsItemVisible) == 0x000008, "Wrong alignment on BP_SellingPointsSystem_C_IsItemVisible");
static_assert(sizeof(BP_SellingPointsSystem_C_IsItemVisible) == 0x000220, "Wrong size on BP_SellingPointsSystem_C_IsItemVisible");
static_assert(offsetof(BP_SellingPointsSystem_C_IsItemVisible, Item) == 0x000000, "Member 'BP_SellingPointsSystem_C_IsItemVisible::Item' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_IsItemVisible, Is_Visible) == 0x000008, "Member 'BP_SellingPointsSystem_C_IsItemVisible::Is_Visible' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_IsItemVisible, ItemLocal) == 0x000010, "Member 'BP_SellingPointsSystem_C_IsItemVisible::ItemLocal' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_IsItemVisible, CallFunc_IsValidClass_ReturnValue) == 0x000018, "Member 'BP_SellingPointsSystem_C_IsItemVisible::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_IsItemVisible, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_SellingPointsSystem_C_IsItemVisible::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_IsItemVisible, Temp_int_Array_Index_Variable_1) == 0x000020, "Member 'BP_SellingPointsSystem_C_IsItemVisible::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_IsItemVisible, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_SellingPointsSystem_C_IsItemVisible::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_IsItemVisible, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_SellingPointsSystem_C_IsItemVisible::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_IsItemVisible, Temp_int_Array_Index_Variable_2) == 0x00002C, "Member 'BP_SellingPointsSystem_C_IsItemVisible::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_IsItemVisible, Temp_int_Loop_Counter_Variable_1) == 0x000030, "Member 'BP_SellingPointsSystem_C_IsItemVisible::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_IsItemVisible, CallFunc_Add_IntInt_ReturnValue_1) == 0x000034, "Member 'BP_SellingPointsSystem_C_IsItemVisible::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_IsItemVisible, Temp_int_Array_Index_Variable_3) == 0x000038, "Member 'BP_SellingPointsSystem_C_IsItemVisible::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_IsItemVisible, Temp_int_Loop_Counter_Variable_2) == 0x00003C, "Member 'BP_SellingPointsSystem_C_IsItemVisible::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_IsItemVisible, CallFunc_Add_IntInt_ReturnValue_2) == 0x000040, "Member 'BP_SellingPointsSystem_C_IsItemVisible::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_IsItemVisible, Temp_int_Array_Index_Variable_4) == 0x000044, "Member 'BP_SellingPointsSystem_C_IsItemVisible::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_IsItemVisible, Temp_int_Loop_Counter_Variable_3) == 0x000048, "Member 'BP_SellingPointsSystem_C_IsItemVisible::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_IsItemVisible, CallFunc_Add_IntInt_ReturnValue_3) == 0x00004C, "Member 'BP_SellingPointsSystem_C_IsItemVisible::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_IsItemVisible, Temp_int_Array_Index_Variable_5) == 0x000050, "Member 'BP_SellingPointsSystem_C_IsItemVisible::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_IsItemVisible, CallFunc_Array_Get_Item) == 0x000058, "Member 'BP_SellingPointsSystem_C_IsItemVisible::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_IsItemVisible, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'BP_SellingPointsSystem_C_IsItemVisible::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_IsItemVisible, CallFunc_Array_Get_Item_1) == 0x000080, "Member 'BP_SellingPointsSystem_C_IsItemVisible::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_IsItemVisible, CallFunc_Array_Length_ReturnValue_1) == 0x0000A0, "Member 'BP_SellingPointsSystem_C_IsItemVisible::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_IsItemVisible, Temp_int_Loop_Counter_Variable_4) == 0x0000A4, "Member 'BP_SellingPointsSystem_C_IsItemVisible::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_IsItemVisible, Temp_int_Loop_Counter_Variable_5) == 0x0000A8, "Member 'BP_SellingPointsSystem_C_IsItemVisible::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_IsItemVisible, CallFunc_Less_IntInt_ReturnValue) == 0x0000AC, "Member 'BP_SellingPointsSystem_C_IsItemVisible::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_IsItemVisible, CallFunc_Add_IntInt_ReturnValue_4) == 0x0000B0, "Member 'BP_SellingPointsSystem_C_IsItemVisible::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_IsItemVisible, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000B4, "Member 'BP_SellingPointsSystem_C_IsItemVisible::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_IsItemVisible, CallFunc_Add_IntInt_ReturnValue_5) == 0x0000B8, "Member 'BP_SellingPointsSystem_C_IsItemVisible::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_IsItemVisible, CallFunc_Array_Length_ReturnValue_2) == 0x0000BC, "Member 'BP_SellingPointsSystem_C_IsItemVisible::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_IsItemVisible, CallFunc_Greater_IntInt_ReturnValue) == 0x0000C0, "Member 'BP_SellingPointsSystem_C_IsItemVisible::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_IsItemVisible, CallFunc_Not_PreBool_ReturnValue) == 0x0000C1, "Member 'BP_SellingPointsSystem_C_IsItemVisible::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_IsItemVisible, CallFunc_Array_Contains_ReturnValue) == 0x0000C2, "Member 'BP_SellingPointsSystem_C_IsItemVisible::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_IsItemVisible, CallFunc_Array_Contains_ReturnValue_1) == 0x0000C3, "Member 'BP_SellingPointsSystem_C_IsItemVisible::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_IsItemVisible, CallFunc_Array_Add_ReturnValue) == 0x0000C4, "Member 'BP_SellingPointsSystem_C_IsItemVisible::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_IsItemVisible, CallFunc_Array_Add_ReturnValue_1) == 0x0000C8, "Member 'BP_SellingPointsSystem_C_IsItemVisible::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_IsItemVisible, CallFunc_Array_Length_ReturnValue_3) == 0x0000CC, "Member 'BP_SellingPointsSystem_C_IsItemVisible::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_IsItemVisible, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0000D0, "Member 'BP_SellingPointsSystem_C_IsItemVisible::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_IsItemVisible, CallFunc_Array_Get_Item_2) == 0x0000D8, "Member 'BP_SellingPointsSystem_C_IsItemVisible::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_IsItemVisible, CallFunc_Not_PreBool_ReturnValue_1) == 0x000100, "Member 'BP_SellingPointsSystem_C_IsItemVisible::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_IsItemVisible, CallFunc_Array_Get_Item_3) == 0x000108, "Member 'BP_SellingPointsSystem_C_IsItemVisible::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_IsItemVisible, CallFunc_Array_Length_ReturnValue_4) == 0x000158, "Member 'BP_SellingPointsSystem_C_IsItemVisible::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_IsItemVisible, CallFunc_Less_IntInt_ReturnValue_2) == 0x00015C, "Member 'BP_SellingPointsSystem_C_IsItemVisible::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_IsItemVisible, CallFunc_Array_Get_Item_4) == 0x000160, "Member 'BP_SellingPointsSystem_C_IsItemVisible::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_IsItemVisible, CallFunc_Array_Length_ReturnValue_5) == 0x000188, "Member 'BP_SellingPointsSystem_C_IsItemVisible::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_IsItemVisible, CallFunc_Array_Get_Item_5) == 0x000190, "Member 'BP_SellingPointsSystem_C_IsItemVisible::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_IsItemVisible, CallFunc_Less_IntInt_ReturnValue_3) == 0x0001A0, "Member 'BP_SellingPointsSystem_C_IsItemVisible::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_IsItemVisible, CallFunc_Array_Add_ReturnValue_2) == 0x0001A4, "Member 'BP_SellingPointsSystem_C_IsItemVisible::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_IsItemVisible, CallFunc_Array_Length_ReturnValue_6) == 0x0001A8, "Member 'BP_SellingPointsSystem_C_IsItemVisible::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_IsItemVisible, CallFunc_Array_Length_ReturnValue_7) == 0x0001AC, "Member 'BP_SellingPointsSystem_C_IsItemVisible::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_IsItemVisible, CallFunc_Less_IntInt_ReturnValue_4) == 0x0001B0, "Member 'BP_SellingPointsSystem_C_IsItemVisible::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_IsItemVisible, CallFunc_Less_IntInt_ReturnValue_5) == 0x0001B1, "Member 'BP_SellingPointsSystem_C_IsItemVisible::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_IsItemVisible, CallFunc_GetGameSellingPointInfoForItem_ProductFound) == 0x0001B2, "Member 'BP_SellingPointsSystem_C_IsItemVisible::CallFunc_GetGameSellingPointInfoForItem_ProductFound' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_IsItemVisible, CallFunc_GetGameSellingPointInfoForItem_ReturnValue) == 0x0001B8, "Member 'BP_SellingPointsSystem_C_IsItemVisible::CallFunc_GetGameSellingPointInfoForItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_IsItemVisible, CallFunc_Array_Contains_ReturnValue_2) == 0x000218, "Member 'BP_SellingPointsSystem_C_IsItemVisible::CallFunc_Array_Contains_ReturnValue_2' has a wrong offset!");

// Function BP_SellingPointsSystem.BP_SellingPointsSystem_C.UpdateOwnedCustomizations
// 0x0020 (0x0020 - 0x0000)
struct BP_SellingPointsSystem_C_UpdateOwnedCustomizations final
{
public:
	class AHumanPlayerController*                 Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_Script_C*          K2Node_DynamicCast_AsBP_Player_Controller_Script;  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UShelterCustomizationComponent*         CallFunc_GetWardrobeComponent_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SellingPointsSystem_C_UpdateOwnedCustomizations) == 0x000008, "Wrong alignment on BP_SellingPointsSystem_C_UpdateOwnedCustomizations");
static_assert(sizeof(BP_SellingPointsSystem_C_UpdateOwnedCustomizations) == 0x000020, "Wrong size on BP_SellingPointsSystem_C_UpdateOwnedCustomizations");
static_assert(offsetof(BP_SellingPointsSystem_C_UpdateOwnedCustomizations, Controller) == 0x000000, "Member 'BP_SellingPointsSystem_C_UpdateOwnedCustomizations::Controller' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_UpdateOwnedCustomizations, K2Node_DynamicCast_AsBP_Player_Controller_Script) == 0x000008, "Member 'BP_SellingPointsSystem_C_UpdateOwnedCustomizations::K2Node_DynamicCast_AsBP_Player_Controller_Script' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_UpdateOwnedCustomizations, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_SellingPointsSystem_C_UpdateOwnedCustomizations::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_UpdateOwnedCustomizations, CallFunc_GetWardrobeComponent_ReturnValue) == 0x000018, "Member 'BP_SellingPointsSystem_C_UpdateOwnedCustomizations::CallFunc_GetWardrobeComponent_ReturnValue' has a wrong offset!");

// Function BP_SellingPointsSystem.BP_SellingPointsSystem_C.GetCachedItemState
// 0x02C8 (0x02C8 - 0x0000)
struct BP_SellingPointsSystem_C_GetCachedItemState final
{
public:
	class UClass*                                 Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SellingPointStatus                          Status;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameStoreProductInfo                  FocusedProductInfo;                                // 0x0010(0x0050)(Parm, OutParm)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SellingPointStatus                          Temp_byte_Variable;                                // 0x006C(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SellingPointStatus                          Temp_byte_Variable_1;                              // 0x0074(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SellingPointStatus                          Temp_byte_Variable_2;                              // 0x0094(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SellingPointStatus                          Temp_byte_Variable_3;                              // 0x00B4(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SellingPointStatus                          Temp_byte_Variable_4;                              // 0x00B5(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SellingPointStatus                          Temp_byte_Variable_5;                              // 0x00B6(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SellingPointStatus                          CallFunc_Map_Find_Value;                           // 0x00B7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SellingPointStatus                          CallFunc_Map_Find_Value_1;                         // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SellingPointStatus                          Temp_byte_Variable_6;                              // 0x00BB(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AItem*                                  CallFunc_GetClassDefaultObject_ReturnValue;        // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetGameSellingPointInfoForItem_ProductFound; // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameStoreSellingPointInfo             CallFunc_GetGameSellingPointInfoForItem_ReturnValue; // 0x00D0(0x0060)(ConstParm)
	class ACustomizationVariant*                  K2Node_DynamicCast_AsCustomization_Variant;        // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class ACustomizationVariantBundle> CallFunc_GetCustomizationBundle_ReturnValue;       // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	E_SellingPointStatus                          CallFunc_GetFocusedItemState_Status;               // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameStoreProductInfo                  CallFunc_GetFocusedItemState_FocusedProductInfo;   // 0x0150(0x0050)()
	bool                                          CallFunc_IsValidClass_ReturnValue_1;               // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_BattlePassLevelRewardFull           CallFunc_Array_Get_Item;                           // 0x01A8(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_BattlePassLevelRewardFull           CallFunc_Array_Get_Item_1;                         // 0x01C8(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SellingPointStatus                          CallFunc_Map_Find_Value_2;                         // 0x01F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x01F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F4[0x4];                                      // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameStoreOfferInfo                    CallFunc_Array_Get_Item_2;                         // 0x01F8(0x0028)()
	struct FGameStoreProductInfo                  CallFunc_Array_Get_Item_3;                         // 0x0220(0x0050)()
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_275[0x3];                                      // 0x0275(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameStoreBundleInfo                   CallFunc_Array_Get_Item_4;                         // 0x0278(0x0028)()
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A4[0x4];                                      // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameStoreItemInfo                     CallFunc_Array_Get_Item_5;                         // 0x02A8(0x0010)(NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B9[0x3];                                      // 0x02B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x02C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x02C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x02C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SellingPointsSystem_C_GetCachedItemState) == 0x000008, "Wrong alignment on BP_SellingPointsSystem_C_GetCachedItemState");
static_assert(sizeof(BP_SellingPointsSystem_C_GetCachedItemState) == 0x0002C8, "Wrong size on BP_SellingPointsSystem_C_GetCachedItemState");
static_assert(offsetof(BP_SellingPointsSystem_C_GetCachedItemState, Item) == 0x000000, "Member 'BP_SellingPointsSystem_C_GetCachedItemState::Item' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetCachedItemState, Status) == 0x000008, "Member 'BP_SellingPointsSystem_C_GetCachedItemState::Status' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetCachedItemState, FocusedProductInfo) == 0x000010, "Member 'BP_SellingPointsSystem_C_GetCachedItemState::FocusedProductInfo' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetCachedItemState, CallFunc_IsValidClass_ReturnValue) == 0x000060, "Member 'BP_SellingPointsSystem_C_GetCachedItemState::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetCachedItemState, Temp_int_Array_Index_Variable) == 0x000064, "Member 'BP_SellingPointsSystem_C_GetCachedItemState::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetCachedItemState, Temp_int_Loop_Counter_Variable) == 0x000068, "Member 'BP_SellingPointsSystem_C_GetCachedItemState::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetCachedItemState, Temp_byte_Variable) == 0x00006C, "Member 'BP_SellingPointsSystem_C_GetCachedItemState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetCachedItemState, CallFunc_Add_IntInt_ReturnValue) == 0x000070, "Member 'BP_SellingPointsSystem_C_GetCachedItemState::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetCachedItemState, Temp_byte_Variable_1) == 0x000074, "Member 'BP_SellingPointsSystem_C_GetCachedItemState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetCachedItemState, Temp_int_Loop_Counter_Variable_1) == 0x000078, "Member 'BP_SellingPointsSystem_C_GetCachedItemState::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetCachedItemState, CallFunc_Add_IntInt_ReturnValue_1) == 0x00007C, "Member 'BP_SellingPointsSystem_C_GetCachedItemState::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetCachedItemState, Temp_int_Array_Index_Variable_1) == 0x000080, "Member 'BP_SellingPointsSystem_C_GetCachedItemState::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetCachedItemState, Temp_int_Array_Index_Variable_2) == 0x000084, "Member 'BP_SellingPointsSystem_C_GetCachedItemState::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetCachedItemState, Temp_int_Loop_Counter_Variable_2) == 0x000088, "Member 'BP_SellingPointsSystem_C_GetCachedItemState::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetCachedItemState, CallFunc_Add_IntInt_ReturnValue_2) == 0x00008C, "Member 'BP_SellingPointsSystem_C_GetCachedItemState::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetCachedItemState, Temp_int_Array_Index_Variable_3) == 0x000090, "Member 'BP_SellingPointsSystem_C_GetCachedItemState::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetCachedItemState, Temp_byte_Variable_2) == 0x000094, "Member 'BP_SellingPointsSystem_C_GetCachedItemState::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetCachedItemState, Temp_int_Loop_Counter_Variable_3) == 0x000098, "Member 'BP_SellingPointsSystem_C_GetCachedItemState::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetCachedItemState, Temp_int_Loop_Counter_Variable_4) == 0x00009C, "Member 'BP_SellingPointsSystem_C_GetCachedItemState::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetCachedItemState, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000A0, "Member 'BP_SellingPointsSystem_C_GetCachedItemState::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetCachedItemState, CallFunc_Add_IntInt_ReturnValue_4) == 0x0000A4, "Member 'BP_SellingPointsSystem_C_GetCachedItemState::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetCachedItemState, Temp_int_Loop_Counter_Variable_5) == 0x0000A8, "Member 'BP_SellingPointsSystem_C_GetCachedItemState::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetCachedItemState, CallFunc_Add_IntInt_ReturnValue_5) == 0x0000AC, "Member 'BP_SellingPointsSystem_C_GetCachedItemState::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetCachedItemState, Temp_int_Array_Index_Variable_4) == 0x0000B0, "Member 'BP_SellingPointsSystem_C_GetCachedItemState::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetCachedItemState, Temp_byte_Variable_3) == 0x0000B4, "Member 'BP_SellingPointsSystem_C_GetCachedItemState::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetCachedItemState, Temp_byte_Variable_4) == 0x0000B5, "Member 'BP_SellingPointsSystem_C_GetCachedItemState::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetCachedItemState, Temp_byte_Variable_5) == 0x0000B6, "Member 'BP_SellingPointsSystem_C_GetCachedItemState::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetCachedItemState, CallFunc_Map_Find_Value) == 0x0000B7, "Member 'BP_SellingPointsSystem_C_GetCachedItemState::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetCachedItemState, CallFunc_Map_Find_ReturnValue) == 0x0000B8, "Member 'BP_SellingPointsSystem_C_GetCachedItemState::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetCachedItemState, CallFunc_Map_Find_Value_1) == 0x0000B9, "Member 'BP_SellingPointsSystem_C_GetCachedItemState::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetCachedItemState, CallFunc_Map_Find_ReturnValue_1) == 0x0000BA, "Member 'BP_SellingPointsSystem_C_GetCachedItemState::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetCachedItemState, Temp_byte_Variable_6) == 0x0000BB, "Member 'BP_SellingPointsSystem_C_GetCachedItemState::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetCachedItemState, Temp_int_Array_Index_Variable_5) == 0x0000BC, "Member 'BP_SellingPointsSystem_C_GetCachedItemState::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetCachedItemState, CallFunc_GetClassDefaultObject_ReturnValue) == 0x0000C0, "Member 'BP_SellingPointsSystem_C_GetCachedItemState::CallFunc_GetClassDefaultObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetCachedItemState, CallFunc_GetGameSellingPointInfoForItem_ProductFound) == 0x0000C8, "Member 'BP_SellingPointsSystem_C_GetCachedItemState::CallFunc_GetGameSellingPointInfoForItem_ProductFound' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetCachedItemState, CallFunc_GetGameSellingPointInfoForItem_ReturnValue) == 0x0000D0, "Member 'BP_SellingPointsSystem_C_GetCachedItemState::CallFunc_GetGameSellingPointInfoForItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetCachedItemState, K2Node_DynamicCast_AsCustomization_Variant) == 0x000130, "Member 'BP_SellingPointsSystem_C_GetCachedItemState::K2Node_DynamicCast_AsCustomization_Variant' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetCachedItemState, K2Node_DynamicCast_bSuccess) == 0x000138, "Member 'BP_SellingPointsSystem_C_GetCachedItemState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetCachedItemState, CallFunc_GetCustomizationBundle_ReturnValue) == 0x000140, "Member 'BP_SellingPointsSystem_C_GetCachedItemState::CallFunc_GetCustomizationBundle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetCachedItemState, CallFunc_GetFocusedItemState_Status) == 0x000148, "Member 'BP_SellingPointsSystem_C_GetCachedItemState::CallFunc_GetFocusedItemState_Status' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetCachedItemState, CallFunc_GetFocusedItemState_FocusedProductInfo) == 0x000150, "Member 'BP_SellingPointsSystem_C_GetCachedItemState::CallFunc_GetFocusedItemState_FocusedProductInfo' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetCachedItemState, CallFunc_IsValidClass_ReturnValue_1) == 0x0001A0, "Member 'BP_SellingPointsSystem_C_GetCachedItemState::CallFunc_IsValidClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetCachedItemState, CallFunc_Array_Get_Item) == 0x0001A8, "Member 'BP_SellingPointsSystem_C_GetCachedItemState::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetCachedItemState, CallFunc_Array_Get_Item_1) == 0x0001C8, "Member 'BP_SellingPointsSystem_C_GetCachedItemState::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetCachedItemState, CallFunc_Array_Length_ReturnValue) == 0x0001E8, "Member 'BP_SellingPointsSystem_C_GetCachedItemState::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetCachedItemState, CallFunc_Array_Length_ReturnValue_1) == 0x0001EC, "Member 'BP_SellingPointsSystem_C_GetCachedItemState::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetCachedItemState, CallFunc_Less_IntInt_ReturnValue) == 0x0001F0, "Member 'BP_SellingPointsSystem_C_GetCachedItemState::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetCachedItemState, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001F1, "Member 'BP_SellingPointsSystem_C_GetCachedItemState::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetCachedItemState, CallFunc_Map_Find_Value_2) == 0x0001F2, "Member 'BP_SellingPointsSystem_C_GetCachedItemState::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetCachedItemState, CallFunc_Map_Find_ReturnValue_2) == 0x0001F3, "Member 'BP_SellingPointsSystem_C_GetCachedItemState::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetCachedItemState, CallFunc_Array_Get_Item_2) == 0x0001F8, "Member 'BP_SellingPointsSystem_C_GetCachedItemState::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetCachedItemState, CallFunc_Array_Get_Item_3) == 0x000220, "Member 'BP_SellingPointsSystem_C_GetCachedItemState::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetCachedItemState, CallFunc_Array_Length_ReturnValue_2) == 0x000270, "Member 'BP_SellingPointsSystem_C_GetCachedItemState::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetCachedItemState, CallFunc_Less_IntInt_ReturnValue_2) == 0x000274, "Member 'BP_SellingPointsSystem_C_GetCachedItemState::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetCachedItemState, CallFunc_Array_Get_Item_4) == 0x000278, "Member 'BP_SellingPointsSystem_C_GetCachedItemState::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetCachedItemState, CallFunc_Array_Length_ReturnValue_3) == 0x0002A0, "Member 'BP_SellingPointsSystem_C_GetCachedItemState::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetCachedItemState, CallFunc_Array_Get_Item_5) == 0x0002A8, "Member 'BP_SellingPointsSystem_C_GetCachedItemState::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetCachedItemState, CallFunc_Less_IntInt_ReturnValue_3) == 0x0002B8, "Member 'BP_SellingPointsSystem_C_GetCachedItemState::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetCachedItemState, CallFunc_Array_Length_ReturnValue_4) == 0x0002BC, "Member 'BP_SellingPointsSystem_C_GetCachedItemState::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetCachedItemState, CallFunc_Array_Length_ReturnValue_5) == 0x0002C0, "Member 'BP_SellingPointsSystem_C_GetCachedItemState::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetCachedItemState, CallFunc_Less_IntInt_ReturnValue_4) == 0x0002C4, "Member 'BP_SellingPointsSystem_C_GetCachedItemState::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetCachedItemState, CallFunc_Less_IntInt_ReturnValue_5) == 0x0002C5, "Member 'BP_SellingPointsSystem_C_GetCachedItemState::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_GetCachedItemState, CallFunc_Array_Contains_ReturnValue) == 0x0002C6, "Member 'BP_SellingPointsSystem_C_GetCachedItemState::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function BP_SellingPointsSystem.BP_SellingPointsSystem_C.UpdateCachedItemState
// 0x0010 (0x0010 - 0x0000)
struct BP_SellingPointsSystem_C_UpdateCachedItemState final
{
public:
	class UClass*                                 Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SellingPointStatus                          SellingPointStatus;                                // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SellingPointsSystem_C_UpdateCachedItemState) == 0x000008, "Wrong alignment on BP_SellingPointsSystem_C_UpdateCachedItemState");
static_assert(sizeof(BP_SellingPointsSystem_C_UpdateCachedItemState) == 0x000010, "Wrong size on BP_SellingPointsSystem_C_UpdateCachedItemState");
static_assert(offsetof(BP_SellingPointsSystem_C_UpdateCachedItemState, Item) == 0x000000, "Member 'BP_SellingPointsSystem_C_UpdateCachedItemState::Item' has a wrong offset!");
static_assert(offsetof(BP_SellingPointsSystem_C_UpdateCachedItemState, SellingPointStatus) == 0x000008, "Member 'BP_SellingPointsSystem_C_UpdateCachedItemState::SellingPointStatus' has a wrong offset!");

}

