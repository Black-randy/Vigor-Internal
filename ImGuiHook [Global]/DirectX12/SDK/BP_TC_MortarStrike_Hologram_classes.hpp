#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TC_MortarStrike_Hologram

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_PlacableTrap_Hologram_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_TC_MortarStrike_Hologram.BP_TC_MortarStrike_Hologram_C
// 0x0028 (0x02C0 - 0x0298)
class ABP_TC_MortarStrike_Hologram_C final : public ABP_PlacableTrap_Hologram_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_TC_MortarStrike_Hologram_C;      // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   MortarAreaBoundary;                                // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Min_Scale;                                         // 0x02A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Max_Scale;                                         // 0x02AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Mortar_Radius;                                     // 0x02B0(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B4[0x4];                                      // 0x02B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanCharacter*                        Character;                                         // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_TC_MortarStrike_Hologram(int32 EntryPoint);
	void Update_Scale();
	void ReceiveBeginPlay();
	void Set_Variables_From_Tool(float Mortar_Strike_Radius);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_TC_MortarStrike_Hologram_C">();
	}
	static class ABP_TC_MortarStrike_Hologram_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_TC_MortarStrike_Hologram_C>();
	}
};
static_assert(alignof(ABP_TC_MortarStrike_Hologram_C) == 0x000008, "Wrong alignment on ABP_TC_MortarStrike_Hologram_C");
static_assert(sizeof(ABP_TC_MortarStrike_Hologram_C) == 0x0002C0, "Wrong size on ABP_TC_MortarStrike_Hologram_C");
static_assert(offsetof(ABP_TC_MortarStrike_Hologram_C, UberGraphFrame_BP_TC_MortarStrike_Hologram_C) == 0x000298, "Member 'ABP_TC_MortarStrike_Hologram_C::UberGraphFrame_BP_TC_MortarStrike_Hologram_C' has a wrong offset!");
static_assert(offsetof(ABP_TC_MortarStrike_Hologram_C, MortarAreaBoundary) == 0x0002A0, "Member 'ABP_TC_MortarStrike_Hologram_C::MortarAreaBoundary' has a wrong offset!");
static_assert(offsetof(ABP_TC_MortarStrike_Hologram_C, Min_Scale) == 0x0002A8, "Member 'ABP_TC_MortarStrike_Hologram_C::Min_Scale' has a wrong offset!");
static_assert(offsetof(ABP_TC_MortarStrike_Hologram_C, Max_Scale) == 0x0002AC, "Member 'ABP_TC_MortarStrike_Hologram_C::Max_Scale' has a wrong offset!");
static_assert(offsetof(ABP_TC_MortarStrike_Hologram_C, Mortar_Radius) == 0x0002B0, "Member 'ABP_TC_MortarStrike_Hologram_C::Mortar_Radius' has a wrong offset!");
static_assert(offsetof(ABP_TC_MortarStrike_Hologram_C, Character) == 0x0002B8, "Member 'ABP_TC_MortarStrike_Hologram_C::Character' has a wrong offset!");

}

