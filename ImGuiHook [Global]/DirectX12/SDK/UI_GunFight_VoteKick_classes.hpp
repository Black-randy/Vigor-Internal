#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_GunFight_VoteKick

#include "Basic.hpp"

#include "Flame_classes.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_GunFight_VoteKick.UI_GunFight_VoteKick_C
// 0x0128 (0x03E0 - 0x02B8)
class UUI_GunFight_VoteKick_C final : public UFlameWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       MoveToCenter;                                      // 0x02C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeIn;                                            // 0x02C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanel*                           Canvas_VoteWindow;                                 // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HBox_Timer;                                        // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image;                                             // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_2;                                           // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_19;                                          // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_45;                                          // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_65;                                          // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_ResultIcon;                                  // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_TimeSpinner;                                 // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_InputActionWidget_C*                InputActionWidget_NoVote;                          // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_InputActionWidget_C*                InputActionWidget_YesVote;                         // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Body;                                      // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Bottom;                                    // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URichTextBlock*                         RichTextBlock_55;                                  // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameTextBlock*                        Text_NoVoteCount;                                  // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameTextBlock*                        Text_PlayerVote;                                   // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameTextBlock*                        Text_RemainingTime;                                // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameTextBlock*                        Text_Title;                                        // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameTextBlock*                        Text_VoteCount;                                    // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameTextBlock*                        Text_YesVoteCount;                                 // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_FlameSafezone_C*                    UI_FlameSafezone;                                  // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_PlayerNickname_C*                   UI_PlayerNickname;                                 // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_Body;                               // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_Bottom;                             // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         PlayerToKickID;                                    // 0x0390(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LocalPlayerTeamID;                                 // 0x0394(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 PlayerToKickName;                                  // 0x0398(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          bVotedToKick;                                      // 0x03A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A9[0x7];                                      // 0x03A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           Timer_Minimize;                                    // 0x03B0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         YesVote_PressTime;                                 // 0x03B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NoVote_PressTime;                                  // 0x03BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsInPlayerMenu;                                   // 0x03C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bVotingResolved;                                   // 0x03C1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bLocalPlayerBeingKicked;                           // 0x03C2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C3[0x5];                                      // 0x03C3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           AutoDestroyTimer;                                  // 0x03C8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalTimeForVoting;                                // 0x03D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bVotingTimedOut;                                   // 0x03D4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D5[0x3];                                      // 0x03D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           TimedOutTimer;                                     // 0x03D8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_UI_GunFight_VoteKick(int32 EntryPoint);
	void VotingTimedOut();
	void StartLocalVotingTimeOut();
	void DelayedRemoveFromParent();
	void DisableVoteButtons();
	void BndEvt__InputActionWidget_NoVote_K2Node_ComponentBoundEvent_8_OnActionReleasedEvent__DelegateSignature();
	void BndEvt__InputActionWidget_NoVote_K2Node_ComponentBoundEvent_7_OnActionPressedEvent__DelegateSignature();
	void BndEvt__InputActionWidget_YesVote_K2Node_ComponentBoundEvent_6_OnActionReleasedEvent__DelegateSignature();
	void BndEvt__InputActionWidget_YesVote_K2Node_ComponentBoundEvent_5_OnActionPressedEvent__DelegateSignature();
	void Event_Minimize();
	void MinimazeAfterDelay(float Delay);
	void OnSecondPassed();
	void Destruct();
	void OnPlayerVoted();
	void OnVoteResultReached(bool bKicked, int32 TimeBeforeWidgetRemoval);
	void RemoveVoteKick(bool InstantRemove);
	void FillData(int32 TotalTimeActive, const struct FUniqueNetIdRepl& PlayerNetId, const class FString& PlayerToKickName_0, int32 PlayerID_ToKick, bool LocalPlayerIsBeingKicked);
	void BndEvt__UI_InputActionWidget_1_K2Node_ComponentBoundEvent_1_OnActionHoldEvent__DelegateSignature();
	void BndEvt__UI_InputActionWidget_K2Node_ComponentBoundEvent_0_OnActionHoldEvent__DelegateSignature();
	void UpdateVoteCount(int32 TotalCount, int32 YesCount, int32 NoCount);
	void UpdateRemainingTime(int32 RemTime);
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void Finished_E7329DB942E8A45D007456A033588B56();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_GunFight_VoteKick_C">();
	}
	static class UUI_GunFight_VoteKick_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_GunFight_VoteKick_C>();
	}
};
static_assert(alignof(UUI_GunFight_VoteKick_C) == 0x000008, "Wrong alignment on UUI_GunFight_VoteKick_C");
static_assert(sizeof(UUI_GunFight_VoteKick_C) == 0x0003E0, "Wrong size on UUI_GunFight_VoteKick_C");
static_assert(offsetof(UUI_GunFight_VoteKick_C, UberGraphFrame) == 0x0002B8, "Member 'UUI_GunFight_VoteKick_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_VoteKick_C, MoveToCenter) == 0x0002C0, "Member 'UUI_GunFight_VoteKick_C::MoveToCenter' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_VoteKick_C, FadeIn) == 0x0002C8, "Member 'UUI_GunFight_VoteKick_C::FadeIn' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_VoteKick_C, Canvas_VoteWindow) == 0x0002D0, "Member 'UUI_GunFight_VoteKick_C::Canvas_VoteWindow' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_VoteKick_C, HBox_Timer) == 0x0002D8, "Member 'UUI_GunFight_VoteKick_C::HBox_Timer' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_VoteKick_C, Image) == 0x0002E0, "Member 'UUI_GunFight_VoteKick_C::Image' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_VoteKick_C, Image_2) == 0x0002E8, "Member 'UUI_GunFight_VoteKick_C::Image_2' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_VoteKick_C, Image_19) == 0x0002F0, "Member 'UUI_GunFight_VoteKick_C::Image_19' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_VoteKick_C, Image_45) == 0x0002F8, "Member 'UUI_GunFight_VoteKick_C::Image_45' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_VoteKick_C, Image_65) == 0x000300, "Member 'UUI_GunFight_VoteKick_C::Image_65' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_VoteKick_C, Image_ResultIcon) == 0x000308, "Member 'UUI_GunFight_VoteKick_C::Image_ResultIcon' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_VoteKick_C, Image_TimeSpinner) == 0x000310, "Member 'UUI_GunFight_VoteKick_C::Image_TimeSpinner' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_VoteKick_C, InputActionWidget_NoVote) == 0x000318, "Member 'UUI_GunFight_VoteKick_C::InputActionWidget_NoVote' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_VoteKick_C, InputActionWidget_YesVote) == 0x000320, "Member 'UUI_GunFight_VoteKick_C::InputActionWidget_YesVote' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_VoteKick_C, Overlay_Body) == 0x000328, "Member 'UUI_GunFight_VoteKick_C::Overlay_Body' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_VoteKick_C, Overlay_Bottom) == 0x000330, "Member 'UUI_GunFight_VoteKick_C::Overlay_Bottom' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_VoteKick_C, RichTextBlock_55) == 0x000338, "Member 'UUI_GunFight_VoteKick_C::RichTextBlock_55' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_VoteKick_C, Text_NoVoteCount) == 0x000340, "Member 'UUI_GunFight_VoteKick_C::Text_NoVoteCount' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_VoteKick_C, Text_PlayerVote) == 0x000348, "Member 'UUI_GunFight_VoteKick_C::Text_PlayerVote' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_VoteKick_C, Text_RemainingTime) == 0x000350, "Member 'UUI_GunFight_VoteKick_C::Text_RemainingTime' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_VoteKick_C, Text_Title) == 0x000358, "Member 'UUI_GunFight_VoteKick_C::Text_Title' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_VoteKick_C, Text_VoteCount) == 0x000360, "Member 'UUI_GunFight_VoteKick_C::Text_VoteCount' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_VoteKick_C, Text_YesVoteCount) == 0x000368, "Member 'UUI_GunFight_VoteKick_C::Text_YesVoteCount' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_VoteKick_C, UI_FlameSafezone) == 0x000370, "Member 'UUI_GunFight_VoteKick_C::UI_FlameSafezone' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_VoteKick_C, UI_PlayerNickname) == 0x000378, "Member 'UUI_GunFight_VoteKick_C::UI_PlayerNickname' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_VoteKick_C, WidgetSwitcher_Body) == 0x000380, "Member 'UUI_GunFight_VoteKick_C::WidgetSwitcher_Body' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_VoteKick_C, WidgetSwitcher_Bottom) == 0x000388, "Member 'UUI_GunFight_VoteKick_C::WidgetSwitcher_Bottom' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_VoteKick_C, PlayerToKickID) == 0x000390, "Member 'UUI_GunFight_VoteKick_C::PlayerToKickID' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_VoteKick_C, LocalPlayerTeamID) == 0x000394, "Member 'UUI_GunFight_VoteKick_C::LocalPlayerTeamID' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_VoteKick_C, PlayerToKickName) == 0x000398, "Member 'UUI_GunFight_VoteKick_C::PlayerToKickName' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_VoteKick_C, bVotedToKick) == 0x0003A8, "Member 'UUI_GunFight_VoteKick_C::bVotedToKick' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_VoteKick_C, Timer_Minimize) == 0x0003B0, "Member 'UUI_GunFight_VoteKick_C::Timer_Minimize' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_VoteKick_C, YesVote_PressTime) == 0x0003B8, "Member 'UUI_GunFight_VoteKick_C::YesVote_PressTime' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_VoteKick_C, NoVote_PressTime) == 0x0003BC, "Member 'UUI_GunFight_VoteKick_C::NoVote_PressTime' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_VoteKick_C, bIsInPlayerMenu) == 0x0003C0, "Member 'UUI_GunFight_VoteKick_C::bIsInPlayerMenu' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_VoteKick_C, bVotingResolved) == 0x0003C1, "Member 'UUI_GunFight_VoteKick_C::bVotingResolved' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_VoteKick_C, bLocalPlayerBeingKicked) == 0x0003C2, "Member 'UUI_GunFight_VoteKick_C::bLocalPlayerBeingKicked' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_VoteKick_C, AutoDestroyTimer) == 0x0003C8, "Member 'UUI_GunFight_VoteKick_C::AutoDestroyTimer' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_VoteKick_C, TotalTimeForVoting) == 0x0003D0, "Member 'UUI_GunFight_VoteKick_C::TotalTimeForVoting' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_VoteKick_C, bVotingTimedOut) == 0x0003D4, "Member 'UUI_GunFight_VoteKick_C::bVotingTimedOut' has a wrong offset!");
static_assert(offsetof(UUI_GunFight_VoteKick_C, TimedOutTimer) == 0x0003D8, "Member 'UUI_GunFight_VoteKick_C::TimedOutTimer' has a wrong offset!");

}

