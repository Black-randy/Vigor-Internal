#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ItemPreview

#include "Basic.hpp"

#include "EItemPreviewContext_structs.hpp"
#include "Flame_classes.hpp"
#include "Engine_structs.hpp"
#include "E_MeshSpecificJiggle_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ItemPreview.BP_ItemPreview_C
// 0x00B0 (0x02E8 - 0x0238)
class ABP_ItemPreview_C : public AMannequin
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0238(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USkeletalMeshComponent*                 ExtraSkinGeometry;                                 // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_MeshParticleTrigger_Component_C*    BP_MeshParticleTrigger_Component;                  // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        ModelTransform;                                    // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CustomRotation;                                    // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_UniformComponent_C*                 BP_UniformComponent;                               // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_HeadgearMiddleComponent_C*          BP_HeadgearMiddleComponent;                        // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_HeadgearLowerComponent_C*           BP_HeadgearLowerComponent;                         // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_HairComponent_C*                    BP_HairComponent;                                  // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_GlovesComponent_C*                  BP_GlovesComponent;                                // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_BackpackComponent_C*                BP_BackpackComponent;                              // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_HeadgearUpperComponent_C*           BP_HeadgearUpperComponent;                         // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_HeadComponent_C*                    BP_HeadComponent;                                  // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Mannequin;                                         // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          AnimationIsActive;                                 // 0x02C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             ItemShown;                                         // 0x02C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UClass*                                 AnimationClass;                                    // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           LastPlayedAnim;                                    // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ItemShown__DelegateSignature();
	void ExecuteUbergraph_BP_ItemPreview(int32 EntryPoint);
	void StopAnimationImmediate();
	void ReceiveBeginPlay();
	void StopAnimation();
	void RepeatAnimation();
	void PlayAnimation(class UAnimMontage* MontageToPlay);
	void OnCompleted_10C475484EB5079FAC83B189671E51CB(class FName NotifyName);
	void OnBlendOut_10C475484EB5079FAC83B189671E51CB(class FName NotifyName);
	void OnInterrupted_10C475484EB5079FAC83B189671E51CB(class FName NotifyName);
	void OnNotifyBegin_10C475484EB5079FAC83B189671E51CB(class FName NotifyName);
	void OnNotifyEnd_10C475484EB5079FAC83B189671E51CB(class FName NotifyName);
	void UserConstructionScript();
	void ShowStaticMesh(class UStaticMesh* NewMesh, const TArray<class UMaterialInterface*>& OverrideMaterials);
	void ShowSkeletalMesh(class USkeletalMesh* NewMesh, const TArray<class UMaterialInterface*>& OverrideMaterials);
	void ShowCustomizationClothes(class AHumanPlayerController* Player, class UClass* Customization_0, class UClass* Variant);
	void ShowItem(class UClass* ItemClass, EItemPreviewContext Context, int32 Optional_PreviewParameter);
	void HideAll();
	void ShowMe();
	void ApplySkin(class UClass* ItemSkin, class UClass* WeaponClass);
	void GetVariantFromBundle(class UClass* Bundle, class AHumanPlayerController* Player, class UClass** VariantFromBundle);
	void CheckForJiggleAnimBP(bool* Success);
	void CheckForJiggleAnimSequence(class AHumanPlayerController* PlayerController, class UClass* CustomizationClass, class UAnimSequence** AnimSequence);
	void BPGet_Player_Current_Outfit_Variant_Slots(TArray<struct FCustomizationSlotVariant>& PairsToOverride, TArray<struct FCustomizationSlotVariant>* VariantSlotsPairs, bool* bSuccess);
	void ClearEverything();
	void HideSnowMaterialEffects();
	void GetPlayerCurrentOutfitVariantSlots(TArray<struct FCustomizationSlotVariant>& PairsToOverride, TArray<struct FCustomizationSlotVariant>* OutVariantSlotsPairs, bool* bOutSucess);
	void GetHardCurrencyPreviewModel(int32 SizeIndex, class UStaticMesh** Mesh);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ItemPreview_C">();
	}
	static class ABP_ItemPreview_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ItemPreview_C>();
	}
};
static_assert(alignof(ABP_ItemPreview_C) == 0x000008, "Wrong alignment on ABP_ItemPreview_C");
static_assert(sizeof(ABP_ItemPreview_C) == 0x0002E8, "Wrong size on ABP_ItemPreview_C");
static_assert(offsetof(ABP_ItemPreview_C, UberGraphFrame) == 0x000238, "Member 'ABP_ItemPreview_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ItemPreview_C, ExtraSkinGeometry) == 0x000240, "Member 'ABP_ItemPreview_C::ExtraSkinGeometry' has a wrong offset!");
static_assert(offsetof(ABP_ItemPreview_C, BP_MeshParticleTrigger_Component) == 0x000248, "Member 'ABP_ItemPreview_C::BP_MeshParticleTrigger_Component' has a wrong offset!");
static_assert(offsetof(ABP_ItemPreview_C, ModelTransform) == 0x000250, "Member 'ABP_ItemPreview_C::ModelTransform' has a wrong offset!");
static_assert(offsetof(ABP_ItemPreview_C, CustomRotation) == 0x000258, "Member 'ABP_ItemPreview_C::CustomRotation' has a wrong offset!");
static_assert(offsetof(ABP_ItemPreview_C, BP_UniformComponent) == 0x000260, "Member 'ABP_ItemPreview_C::BP_UniformComponent' has a wrong offset!");
static_assert(offsetof(ABP_ItemPreview_C, BP_HeadgearMiddleComponent) == 0x000268, "Member 'ABP_ItemPreview_C::BP_HeadgearMiddleComponent' has a wrong offset!");
static_assert(offsetof(ABP_ItemPreview_C, BP_HeadgearLowerComponent) == 0x000270, "Member 'ABP_ItemPreview_C::BP_HeadgearLowerComponent' has a wrong offset!");
static_assert(offsetof(ABP_ItemPreview_C, BP_HairComponent) == 0x000278, "Member 'ABP_ItemPreview_C::BP_HairComponent' has a wrong offset!");
static_assert(offsetof(ABP_ItemPreview_C, BP_GlovesComponent) == 0x000280, "Member 'ABP_ItemPreview_C::BP_GlovesComponent' has a wrong offset!");
static_assert(offsetof(ABP_ItemPreview_C, BP_BackpackComponent) == 0x000288, "Member 'ABP_ItemPreview_C::BP_BackpackComponent' has a wrong offset!");
static_assert(offsetof(ABP_ItemPreview_C, BP_HeadgearUpperComponent) == 0x000290, "Member 'ABP_ItemPreview_C::BP_HeadgearUpperComponent' has a wrong offset!");
static_assert(offsetof(ABP_ItemPreview_C, BP_HeadComponent) == 0x000298, "Member 'ABP_ItemPreview_C::BP_HeadComponent' has a wrong offset!");
static_assert(offsetof(ABP_ItemPreview_C, SkeletalMesh) == 0x0002A0, "Member 'ABP_ItemPreview_C::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(ABP_ItemPreview_C, StaticMesh) == 0x0002A8, "Member 'ABP_ItemPreview_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_ItemPreview_C, Mannequin) == 0x0002B0, "Member 'ABP_ItemPreview_C::Mannequin' has a wrong offset!");
static_assert(offsetof(ABP_ItemPreview_C, DefaultSceneRoot) == 0x0002B8, "Member 'ABP_ItemPreview_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_ItemPreview_C, AnimationIsActive) == 0x0002C0, "Member 'ABP_ItemPreview_C::AnimationIsActive' has a wrong offset!");
static_assert(offsetof(ABP_ItemPreview_C, ItemShown) == 0x0002C8, "Member 'ABP_ItemPreview_C::ItemShown' has a wrong offset!");
static_assert(offsetof(ABP_ItemPreview_C, AnimationClass) == 0x0002D8, "Member 'ABP_ItemPreview_C::AnimationClass' has a wrong offset!");
static_assert(offsetof(ABP_ItemPreview_C, LastPlayedAnim) == 0x0002E0, "Member 'ABP_ItemPreview_C::LastPlayedAnim' has a wrong offset!");

}

