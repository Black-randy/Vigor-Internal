#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_BattlePassSeasonCountdown

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function UI_BattlePassSeasonCountdown.UI_BattlePassSeasonCountdown_C.ExecuteUbergraph_UI_BattlePassSeasonCountdown
// 0x01D0 (0x01D0 - 0x0000)
struct UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	int32                                         Temp_int_Variable_1;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_4;                             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_5;                             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_6;                             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_7;                             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_8;                             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_9;                             // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_10;                            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_11;                            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_12;                            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66[0x2];                                       // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_GetCloudTime_ReturnValue;                 // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBattlePassSystem*                      CallFunc_GetBattlePassSystem_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_BattlePassSystem_C*                 K2Node_DynamicCast_AsBP_Battle_Pass_System;        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_Get_Current_Season_Start_Timestamp_Season_Start_Time; // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_Get_Current_Season_End_Timestamp_Season_End_Time; // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_Subtract_DateTimeDateTime_ReturnValue;    // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_Subtract_DateTimeDateTime_ReturnValue_1;  // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_Subtract_DateTimeDateTime_ReturnValue_2;  // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable_1;                              // 0x00B0(0x0018)()
	struct FTimespan                              CallFunc_MakeTimespan_ReturnValue;                 // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_TimespanTimespan_ReturnValue;        // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_TimespanTimespan_ReturnValue_1;      // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D2[0x2];                                       // 0x00D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTotalDays_ReturnValue;                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTotalDays_ReturnValue_1;               // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_2;                              // 0x00E8(0x0018)()
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_FormatTimespanDHMS_TimespanDHMSOut;       // 0x0108(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0120(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0160(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0170(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0188(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x01A0(0x0018)()
	float                                         K2Node_Select_Default_1;                           // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_2;                           // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_3;                           // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_4;                           // 0x01CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_5;                           // 0x01CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown) == 0x000008, "Wrong alignment on UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown");
static_assert(sizeof(UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown) == 0x0001D0, "Wrong size on UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown");
static_assert(offsetof(UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown, EntryPoint) == 0x000000, "Member 'UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown, Temp_int_Variable) == 0x000004, "Member 'UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown, Temp_text_Variable) == 0x000008, "Member 'UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown, Temp_int_Variable_1) == 0x000020, "Member 'UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown, Temp_float_Variable) == 0x000024, "Member 'UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown, Temp_float_Variable_1) == 0x000028, "Member 'UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown, Temp_float_Variable_2) == 0x00002C, "Member 'UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown, Temp_float_Variable_3) == 0x000030, "Member 'UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown, Temp_int_Variable_2) == 0x000034, "Member 'UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown, Temp_float_Variable_4) == 0x000038, "Member 'UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown, Temp_float_Variable_5) == 0x00003C, "Member 'UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown::Temp_float_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown, Temp_float_Variable_6) == 0x000040, "Member 'UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown::Temp_float_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown, Temp_float_Variable_7) == 0x000044, "Member 'UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown::Temp_float_Variable_7' has a wrong offset!");
static_assert(offsetof(UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown, Temp_float_Variable_8) == 0x000048, "Member 'UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown::Temp_float_Variable_8' has a wrong offset!");
static_assert(offsetof(UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown, Temp_int_Variable_3) == 0x00004C, "Member 'UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown, Temp_float_Variable_9) == 0x000050, "Member 'UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown::Temp_float_Variable_9' has a wrong offset!");
static_assert(offsetof(UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown, Temp_float_Variable_10) == 0x000054, "Member 'UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown::Temp_float_Variable_10' has a wrong offset!");
static_assert(offsetof(UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown, Temp_float_Variable_11) == 0x000058, "Member 'UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown::Temp_float_Variable_11' has a wrong offset!");
static_assert(offsetof(UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown, Temp_float_Variable_12) == 0x00005C, "Member 'UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown::Temp_float_Variable_12' has a wrong offset!");
static_assert(offsetof(UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown, Temp_bool_Variable) == 0x000060, "Member 'UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown, Temp_byte_Variable) == 0x000061, "Member 'UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown, Temp_byte_Variable_1) == 0x000062, "Member 'UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown, Temp_bool_Variable_1) == 0x000063, "Member 'UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown, Temp_byte_Variable_2) == 0x000064, "Member 'UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown, Temp_byte_Variable_3) == 0x000065, "Member 'UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown, CallFunc_GetCloudTime_ReturnValue) == 0x000068, "Member 'UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown::CallFunc_GetCloudTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown, CallFunc_GetBattlePassSystem_ReturnValue) == 0x000070, "Member 'UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown::CallFunc_GetBattlePassSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown, K2Node_DynamicCast_AsBP_Battle_Pass_System) == 0x000078, "Member 'UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown::K2Node_DynamicCast_AsBP_Battle_Pass_System' has a wrong offset!");
static_assert(offsetof(UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown, CallFunc_Get_Current_Season_Start_Timestamp_Season_Start_Time) == 0x000088, "Member 'UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown::CallFunc_Get_Current_Season_Start_Timestamp_Season_Start_Time' has a wrong offset!");
static_assert(offsetof(UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown, CallFunc_Get_Current_Season_End_Timestamp_Season_End_Time) == 0x000090, "Member 'UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown::CallFunc_Get_Current_Season_End_Timestamp_Season_End_Time' has a wrong offset!");
static_assert(offsetof(UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown, CallFunc_Subtract_DateTimeDateTime_ReturnValue) == 0x000098, "Member 'UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown::CallFunc_Subtract_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown, CallFunc_Subtract_DateTimeDateTime_ReturnValue_1) == 0x0000A0, "Member 'UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown::CallFunc_Subtract_DateTimeDateTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown, CallFunc_Subtract_DateTimeDateTime_ReturnValue_2) == 0x0000A8, "Member 'UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown::CallFunc_Subtract_DateTimeDateTime_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown, Temp_text_Variable_1) == 0x0000B0, "Member 'UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown, CallFunc_MakeTimespan_ReturnValue) == 0x0000C8, "Member 'UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown::CallFunc_MakeTimespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown, CallFunc_Less_TimespanTimespan_ReturnValue) == 0x0000D0, "Member 'UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown::CallFunc_Less_TimespanTimespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown, CallFunc_Less_TimespanTimespan_ReturnValue_1) == 0x0000D1, "Member 'UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown::CallFunc_Less_TimespanTimespan_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown, CallFunc_GetTotalDays_ReturnValue) == 0x0000D4, "Member 'UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown::CallFunc_GetTotalDays_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown, CallFunc_GetTotalDays_ReturnValue_1) == 0x0000D8, "Member 'UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown::CallFunc_GetTotalDays_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000DC, "Member 'UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000E0, "Member 'UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown, Temp_text_Variable_2) == 0x0000E8, "Member 'UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown, CallFunc_FFloor_ReturnValue) == 0x000100, "Member 'UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown, CallFunc_Add_IntInt_ReturnValue) == 0x000104, "Member 'UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown, CallFunc_FormatTimespanDHMS_TimespanDHMSOut) == 0x000108, "Member 'UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown::CallFunc_FormatTimespanDHMS_TimespanDHMSOut' has a wrong offset!");
static_assert(offsetof(UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown, K2Node_MakeStruct_FormatArgumentData) == 0x000120, "Member 'UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown, K2Node_MakeArray_Array) == 0x000160, "Member 'UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown, CallFunc_Format_ReturnValue) == 0x000170, "Member 'UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown, Temp_text_Variable_3) == 0x000188, "Member 'UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown, K2Node_Select_Default) == 0x0001A0, "Member 'UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown, K2Node_Select_Default_1) == 0x0001B8, "Member 'UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown, CallFunc_MakeLiteralFloat_ReturnValue) == 0x0001BC, "Member 'UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0001C0, "Member 'UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown, K2Node_Select_Default_2) == 0x0001C4, "Member 'UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown, K2Node_Select_Default_3) == 0x0001C8, "Member 'UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown, K2Node_Event_IsDesignTime) == 0x0001CC, "Member 'UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown, K2Node_Select_Default_4) == 0x0001CD, "Member 'UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown, K2Node_Select_Default_5) == 0x0001CE, "Member 'UI_BattlePassSeasonCountdown_C_ExecuteUbergraph_UI_BattlePassSeasonCountdown::K2Node_Select_Default_5' has a wrong offset!");

// Function UI_BattlePassSeasonCountdown.UI_BattlePassSeasonCountdown_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_BattlePassSeasonCountdown_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_BattlePassSeasonCountdown_C_PreConstruct) == 0x000001, "Wrong alignment on UI_BattlePassSeasonCountdown_C_PreConstruct");
static_assert(sizeof(UI_BattlePassSeasonCountdown_C_PreConstruct) == 0x000001, "Wrong size on UI_BattlePassSeasonCountdown_C_PreConstruct");
static_assert(offsetof(UI_BattlePassSeasonCountdown_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_BattlePassSeasonCountdown_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

