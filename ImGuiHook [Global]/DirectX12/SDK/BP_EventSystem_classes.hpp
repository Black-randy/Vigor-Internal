#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EventSystem

#include "Basic.hpp"

#include "EPingType_structs.hpp"
#include "Flame_structs.hpp"
#include "Flame_classes.hpp"
#include "Engine_structs.hpp"
#include "E_AnalyticsFile_structs.hpp"
#include "ECommStationAction_structs.hpp"
#include "E_TimedSafe_OpenCombinations_structs.hpp"
#include "E_ShootingChallengeResult_structs.hpp"
#include "EBooster_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_EventSystem.BP_EventSystem_C
// 0x0588 (0x05B8 - 0x0030)
class UBP_EventSystem_C final : public UEventSystem
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0030(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	FMulticastInlineDelegateProperty_             Player_Arrived_in_Shelter;                         // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Level_Entered;                                     // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Level_Exited;                                      // 0x0058(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Create_Opened;                                     // 0x0068(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Item_Crafting_Started;                             // 0x0078(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Encounter_Result_Screen_Entered;                   // 0x0088(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Encounter_Started;                                 // 0x0098(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Started_Unlocking_Barred_Vault;                    // 0x00A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Opened_Barred_Vault_Inventory;                     // 0x00B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Player_Scored_Kill;                                // 0x00C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Improvement_Upgrade_Started;                       // 0x00D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Player_Became_Threat;                              // 0x00E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Other_Player_Became_Threat;                        // 0x00F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Antenna_Used;                                      // 0x0108(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Comm_Station_Used;                                 // 0x0118(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Booster_Used;                                      // 0x0128(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Shooting_Challenge_Finished;                       // 0x0138(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Airdrop_Container_Inventory_Accessed;              // 0x0148(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Generic_Lootable_Object_Inventory_Accessed;        // 0x0158(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Item_Deconstructed;                                // 0x0168(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Airdrop_In_Backpack;                               // 0x0178(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Near_Exit_Area;                                    // 0x0188(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Near_Airdrop;                                      // 0x0198(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Near_Antenna;                                      // 0x01A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Prior_To_Airdrop;                                  // 0x01B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Airdrop_Carried_By_Other_Player;                   // 0x01C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Cookie_Timer_Ring;                                 // 0x01D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Near_Barred_House;                                 // 0x01E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Near_Comm_Station;                                 // 0x01F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Threat_Died;                                       // 0x0208(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Other_Player_Became_TeamKiller;                    // 0x0218(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Player_Became_Teamkiller;                          // 0x0228(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Item_Destroyed;                                    // 0x0238(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Burried_Cache_Opened;                              // 0x0248(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Dummy_Buried_Cache_opened;                         // 0x0258(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Player_Dealt_Damage;                               // 0x0268(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Airdrop_Saved_With_Kills;                          // 0x0278(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Healed_Amount;                                     // 0x0288(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Customization_Unlocked;                            // 0x0298(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Item_Looted;                                       // 0x02A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Player_Left_Encounter_by_Countdown;                // 0x02B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Shooting_Challenge_New_High_Score;                 // 0x02C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             StreamingLevelLoaded;                              // 0x02D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             MatchFinishedForPlayer;                            // 0x02E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Crate_Opened_UI_Closed;                            // 0x02F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             ItemBought;                                        // 0x0308(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             BattlePassRewardsClaimed;                          // 0x0318(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Player_Died;                                       // 0x0328(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             PlayerLootedCrate;                                 // 0x0338(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             MatchStarted;                                      // 0x0348(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             MatchFinished;                                     // 0x0358(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             ConsumableUsed;                                    // 0x0368(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             SignalDetected;                                    // 0x0378(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             SignalDetectionBlocked;                            // 0x0388(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             NonFriendlyPlayerJammed;                           // 0x0398(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OwnTransmitterDetected;                            // 0x03A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Distance_Traveled_Updated;                         // 0x03B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Gunfight_RoundEnded;                               // 0x03C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Gunfight_ObjectiveCaptured;                        // 0x03D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Gunfight_MatchFinished;                            // 0x03E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Gunfight_LoadoutLockBreak;                         // 0x03F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Gunfight_MatchStarted;                             // 0x0408(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Gunfight_PlayerDealtDamage;                        // 0x0418(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Gunfight_PlayerReceivedDamage;                     // 0x0428(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             GestureUsed;                                       // 0x0438(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OtherPlayerSteppedIntoAlarmTrap;                   // 0x0448(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             FeaturedLobbyPlayer;                               // 0x0458(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             CarAlarmTriggered;                                 // 0x0468(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             PhoneDuelInitiaited;                               // 0x0478(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             PhoneDuelAnswered;                                 // 0x0488(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             PhoneDuelWon;                                      // 0x0498(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             PingCreated;                                       // 0x04A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Gunfight_LocalPlayerStatisticsUpdated;             // 0x04B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             RedChestLooted;                                    // 0x04C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             TimedSafeOpened;                                   // 0x04D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Player_stayed_in_radiation;                        // 0x04E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             PlayerDestroyedTrap;                               // 0x04F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             LockedContainerLooted;                             // 0x0508(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             GrenadeHitTarget;                                  // 0x0518(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             GrenadeMultiHit;                                   // 0x0528(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             ShelterLevelChanged;                               // 0x0538(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             FoodDonated;                                       // 0x0548(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             CommStationUsedWithAction;                         // 0x0558(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             StoredWeapon;                                      // 0x0568(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Exit_Unlocked;                                     // 0x0578(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Destroy_Barricade;                                 // 0x0588(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             AnalyticsValueProcessed;                           // 0x0598(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             AnalyticsValuesPrinted;                            // 0x05A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void Player_Arrived_in_Shelter__DelegateSignature();
	void Level_Entered__DelegateSignature();
	void Level_Exited__DelegateSignature();
	void Create_Opened__DelegateSignature(class UClass* Loot_Box_Class, TArray<struct FLootBoxPoolItem>& Items);
	void Item_Crafting_Started__DelegateSignature(class UClass* Item_Type, int32 Amount);
	void Encounter_Result_Screen_Entered__DelegateSignature(const struct FUserMatchResult& Match_Result);
	void Encounter_Started__DelegateSignature();
	void Started_Unlocking_Barred_Vault__DelegateSignature(class AActor* Vault);
	void Opened_Barred_Vault_Inventory__DelegateSignature(class AActor* Vault);
	void Player_Scored_Kill__DelegateSignature(class AHumanCharacter* Killer, class AHumanCharacter* Victim, float Damage_Amount, EDamageType Damage_Type, class UClass* Instigating_Item, const struct FHitResult& Hit_Result);
	void Improvement_Upgrade_Started__DelegateSignature(class UClass* Shelter_Slot);
	void Player_Became_Threat__DelegateSignature();
	void Other_Player_Became_Threat__DelegateSignature(class AHumanCharacter* Killer);
	void Antenna_Used__DelegateSignature(int32 Players_Spotted);
	void Comm_Station_Used__DelegateSignature(class AEditorActor* Air_Drop_Location, bool Location_Changed);
	void Booster_Used__DelegateSignature(EBooster Booster_Type, bool UsedTicketInsteadOfCrowns);
	void Shooting_Challenge_Finished__DelegateSignature(E_ShootingChallengeResult Rank);
	void Airdrop_Container_Inventory_Accessed__DelegateSignature(class AActor* Airdrop_Container);
	void Generic_Lootable_Object_Inventory_Accessed__DelegateSignature(class ALootable* Lootable_Object);
	void Item_Deconstructed__DelegateSignature(class UClass* Item_Type, int32 Amount);
	void Airdrop_In_Backpack__DelegateSignature();
	void Near_Exit_Area__DelegateSignature();
	void Near_Airdrop__DelegateSignature();
	void Near_Antenna__DelegateSignature();
	void Prior_To_Airdrop__DelegateSignature();
	void Airdrop_Carried_By_Other_Player__DelegateSignature();
	void Cookie_Timer_Ring__DelegateSignature();
	void Near_Barred_House__DelegateSignature();
	void Near_Comm_Station__DelegateSignature();
	void Threat_Died__DelegateSignature(class AHumanCharacter* Killer);
	void Other_Player_Became_TeamKiller__DelegateSignature(class AHumanCharacter* Killer);
	void Player_Became_Teamkiller__DelegateSignature();
	void Item_Destroyed__DelegateSignature(class UClass* Item_Type, class UClass* Widget_Type);
	void Burried_Cache_Opened__DelegateSignature(class AActor* Cache);
	void Player_Dealt_Damage__DelegateSignature(float DamageAmount, bool TeammateHit);
	void ConsumableUsed__DelegateSignature(class UClass* UsedConsumable, class APlayerState* User);
	void Airdrop_Saved_With_Kills__DelegateSignature(int32 KillAmount);
	void Healed_Amount__DelegateSignature(float Heal_Amount, class APlayerState* Player_State);
	void Customization_Unlocked__DelegateSignature();
	void Item_Looted__DelegateSignature(int32 Amount, class UClass* Item);
	void Player_Left_Encounter_by_Countdown__DelegateSignature();
	void Shooting_Challenge_New_High_Score__DelegateSignature();
	void StreamingLevelLoaded__DelegateSignature();
	void MatchFinishedForPlayer__DelegateSignature();
	void Crate_Opened_UI_Closed__DelegateSignature(class UClass* Loot_Box_Class, TArray<struct FLootBoxPoolItem>& Items);
	void ItemBought__DelegateSignature(class UClass* Item);
	void BattlePassRewardsClaimed__DelegateSignature(TArray<struct FS_BattlePassLevelRewardFull>& Free, TArray<struct FS_BattlePassLevelRewardFull>& Premium, bool PremiumLocked);
	void Player_Died__DelegateSignature(class AHumanCharacter* Killer);
	void PlayerLootedCrate__DelegateSignature(class ALootable* Crate);
	void MatchStarted__DelegateSignature();
	void MatchFinished__DelegateSignature();
	void SignalDetected__DelegateSignature(class AActor* Detected_actor);
	void OwnTransmitterDetected__DelegateSignature();
	void Distance_Traveled_Updated__DelegateSignature(float Distance_Increment);
	void SignalDetectionBlocked__DelegateSignature();
	void Gunfight_RoundEnded__DelegateSignature();
	void Gunfight_ObjectiveCaptured__DelegateSignature();
	void NonFriendlyPlayerJammed__DelegateSignature(class AHumanCharacter* Jammed_character);
	void Gunfight_MatchFinished__DelegateSignature();
	void Gunfight_LoadoutLockBreak__DelegateSignature(bool TicketUsed);
	void Gunfight_MatchStarted__DelegateSignature();
	void Gunfight_PlayerDealtDamage__DelegateSignature(int32 PlayerId, float Damage, EDamageType DamageType, class UClass* DamagingItem);
	void Gunfight_PlayerReceivedDamage__DelegateSignature(int32 Userid, float Damage, EDamageType DamageType);
	void GestureUsed__DelegateSignature(class UClass* Gesture);
	void OtherPlayerSteppedIntoAlarmTrap__DelegateSignature(class AHumanCharacter* Character_that_stepped_into_alarm_trap, class AActor* Triggered_alarm_trap);
	void FeaturedLobbyPlayer__DelegateSignature();
	void CarAlarmTriggered__DelegateSignature();
	void PhoneDuelInitiaited__DelegateSignature();
	void PhoneDuelAnswered__DelegateSignature();
	void PhoneDuelWon__DelegateSignature();
	void PingCreated__DelegateSignature(EPingType Ping_Type, const struct FVector& Location, class UClass* Pinged_Item);
	void Gunfight_LocalPlayerStatisticsUpdated__DelegateSignature(const struct FStruct_GunFightStatistics& Statistics);
	void RedChestLooted__DelegateSignature();
	void TimedSafeOpened__DelegateSignature(E_TimedSafe_OpenCombinations OpenedSolo);
	void Player_stayed_in_radiation__DelegateSignature(bool Radiation_cloud, bool Radiation_wave, bool Radioactive_airdrop, float Time_stayed);
	void PlayerDestroyedTrap__DelegateSignature(class UClass* Destroyed_trap);
	void LockedContainerLooted__DelegateSignature();
	void GrenadeHitTarget__DelegateSignature(class AActor* Target_that_got_hit, class UClass* Grenade_class);
	void GrenadeMultiHit__DelegateSignature(int32 Amount_of_nonMinusfriendly_hits, class UClass* Grenade_class);
	void ShelterLevelChanged__DelegateSignature(int32 NewLevel);
	void FoodDonated__DelegateSignature(int32 Amount);
	void CommStationUsedWithAction__DelegateSignature(ECommStationAction Action);
	void StoredWeapon__DelegateSignature(const class FString& WeaponObjectName, class UClass* WeaponClass);
	void Dummy_Buried_Cache_opened__DelegateSignature(class ALootable* Cache);
	void Exit_Unlocked__DelegateSignature();
	void Destroy_Barricade__DelegateSignature();
	void AnalyticsValueProcessed__DelegateSignature(const class FString& Analytics_Value_Name, const struct FS_AnalyticsValue& Analytics_Value);
	void AnalyticsValuesPrinted__DelegateSignature(E_AnalyticsFile File, EAnalyticsFileType FileType);
	void ExecuteUbergraph_BP_EventSystem(int32 EntryPoint);
	void BlueprintInit();
	void FiXXX();
	void Get_BP_event_system(class UBP_EventSystem_C** Event_system);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_EventSystem_C">();
	}
	static class UBP_EventSystem_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_EventSystem_C>();
	}
};
static_assert(alignof(UBP_EventSystem_C) == 0x000008, "Wrong alignment on UBP_EventSystem_C");
static_assert(sizeof(UBP_EventSystem_C) == 0x0005B8, "Wrong size on UBP_EventSystem_C");
static_assert(offsetof(UBP_EventSystem_C, UberGraphFrame) == 0x000030, "Member 'UBP_EventSystem_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, Player_Arrived_in_Shelter) == 0x000038, "Member 'UBP_EventSystem_C::Player_Arrived_in_Shelter' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, Level_Entered) == 0x000048, "Member 'UBP_EventSystem_C::Level_Entered' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, Level_Exited) == 0x000058, "Member 'UBP_EventSystem_C::Level_Exited' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, Create_Opened) == 0x000068, "Member 'UBP_EventSystem_C::Create_Opened' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, Item_Crafting_Started) == 0x000078, "Member 'UBP_EventSystem_C::Item_Crafting_Started' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, Encounter_Result_Screen_Entered) == 0x000088, "Member 'UBP_EventSystem_C::Encounter_Result_Screen_Entered' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, Encounter_Started) == 0x000098, "Member 'UBP_EventSystem_C::Encounter_Started' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, Started_Unlocking_Barred_Vault) == 0x0000A8, "Member 'UBP_EventSystem_C::Started_Unlocking_Barred_Vault' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, Opened_Barred_Vault_Inventory) == 0x0000B8, "Member 'UBP_EventSystem_C::Opened_Barred_Vault_Inventory' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, Player_Scored_Kill) == 0x0000C8, "Member 'UBP_EventSystem_C::Player_Scored_Kill' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, Improvement_Upgrade_Started) == 0x0000D8, "Member 'UBP_EventSystem_C::Improvement_Upgrade_Started' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, Player_Became_Threat) == 0x0000E8, "Member 'UBP_EventSystem_C::Player_Became_Threat' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, Other_Player_Became_Threat) == 0x0000F8, "Member 'UBP_EventSystem_C::Other_Player_Became_Threat' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, Antenna_Used) == 0x000108, "Member 'UBP_EventSystem_C::Antenna_Used' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, Comm_Station_Used) == 0x000118, "Member 'UBP_EventSystem_C::Comm_Station_Used' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, Booster_Used) == 0x000128, "Member 'UBP_EventSystem_C::Booster_Used' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, Shooting_Challenge_Finished) == 0x000138, "Member 'UBP_EventSystem_C::Shooting_Challenge_Finished' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, Airdrop_Container_Inventory_Accessed) == 0x000148, "Member 'UBP_EventSystem_C::Airdrop_Container_Inventory_Accessed' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, Generic_Lootable_Object_Inventory_Accessed) == 0x000158, "Member 'UBP_EventSystem_C::Generic_Lootable_Object_Inventory_Accessed' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, Item_Deconstructed) == 0x000168, "Member 'UBP_EventSystem_C::Item_Deconstructed' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, Airdrop_In_Backpack) == 0x000178, "Member 'UBP_EventSystem_C::Airdrop_In_Backpack' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, Near_Exit_Area) == 0x000188, "Member 'UBP_EventSystem_C::Near_Exit_Area' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, Near_Airdrop) == 0x000198, "Member 'UBP_EventSystem_C::Near_Airdrop' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, Near_Antenna) == 0x0001A8, "Member 'UBP_EventSystem_C::Near_Antenna' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, Prior_To_Airdrop) == 0x0001B8, "Member 'UBP_EventSystem_C::Prior_To_Airdrop' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, Airdrop_Carried_By_Other_Player) == 0x0001C8, "Member 'UBP_EventSystem_C::Airdrop_Carried_By_Other_Player' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, Cookie_Timer_Ring) == 0x0001D8, "Member 'UBP_EventSystem_C::Cookie_Timer_Ring' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, Near_Barred_House) == 0x0001E8, "Member 'UBP_EventSystem_C::Near_Barred_House' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, Near_Comm_Station) == 0x0001F8, "Member 'UBP_EventSystem_C::Near_Comm_Station' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, Threat_Died) == 0x000208, "Member 'UBP_EventSystem_C::Threat_Died' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, Other_Player_Became_TeamKiller) == 0x000218, "Member 'UBP_EventSystem_C::Other_Player_Became_TeamKiller' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, Player_Became_Teamkiller) == 0x000228, "Member 'UBP_EventSystem_C::Player_Became_Teamkiller' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, Item_Destroyed) == 0x000238, "Member 'UBP_EventSystem_C::Item_Destroyed' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, Burried_Cache_Opened) == 0x000248, "Member 'UBP_EventSystem_C::Burried_Cache_Opened' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, Dummy_Buried_Cache_opened) == 0x000258, "Member 'UBP_EventSystem_C::Dummy_Buried_Cache_opened' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, Player_Dealt_Damage) == 0x000268, "Member 'UBP_EventSystem_C::Player_Dealt_Damage' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, Airdrop_Saved_With_Kills) == 0x000278, "Member 'UBP_EventSystem_C::Airdrop_Saved_With_Kills' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, Healed_Amount) == 0x000288, "Member 'UBP_EventSystem_C::Healed_Amount' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, Customization_Unlocked) == 0x000298, "Member 'UBP_EventSystem_C::Customization_Unlocked' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, Item_Looted) == 0x0002A8, "Member 'UBP_EventSystem_C::Item_Looted' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, Player_Left_Encounter_by_Countdown) == 0x0002B8, "Member 'UBP_EventSystem_C::Player_Left_Encounter_by_Countdown' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, Shooting_Challenge_New_High_Score) == 0x0002C8, "Member 'UBP_EventSystem_C::Shooting_Challenge_New_High_Score' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, StreamingLevelLoaded) == 0x0002D8, "Member 'UBP_EventSystem_C::StreamingLevelLoaded' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, MatchFinishedForPlayer) == 0x0002E8, "Member 'UBP_EventSystem_C::MatchFinishedForPlayer' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, Crate_Opened_UI_Closed) == 0x0002F8, "Member 'UBP_EventSystem_C::Crate_Opened_UI_Closed' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, ItemBought) == 0x000308, "Member 'UBP_EventSystem_C::ItemBought' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, BattlePassRewardsClaimed) == 0x000318, "Member 'UBP_EventSystem_C::BattlePassRewardsClaimed' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, Player_Died) == 0x000328, "Member 'UBP_EventSystem_C::Player_Died' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, PlayerLootedCrate) == 0x000338, "Member 'UBP_EventSystem_C::PlayerLootedCrate' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, MatchStarted) == 0x000348, "Member 'UBP_EventSystem_C::MatchStarted' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, MatchFinished) == 0x000358, "Member 'UBP_EventSystem_C::MatchFinished' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, ConsumableUsed) == 0x000368, "Member 'UBP_EventSystem_C::ConsumableUsed' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, SignalDetected) == 0x000378, "Member 'UBP_EventSystem_C::SignalDetected' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, SignalDetectionBlocked) == 0x000388, "Member 'UBP_EventSystem_C::SignalDetectionBlocked' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, NonFriendlyPlayerJammed) == 0x000398, "Member 'UBP_EventSystem_C::NonFriendlyPlayerJammed' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, OwnTransmitterDetected) == 0x0003A8, "Member 'UBP_EventSystem_C::OwnTransmitterDetected' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, Distance_Traveled_Updated) == 0x0003B8, "Member 'UBP_EventSystem_C::Distance_Traveled_Updated' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, Gunfight_RoundEnded) == 0x0003C8, "Member 'UBP_EventSystem_C::Gunfight_RoundEnded' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, Gunfight_ObjectiveCaptured) == 0x0003D8, "Member 'UBP_EventSystem_C::Gunfight_ObjectiveCaptured' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, Gunfight_MatchFinished) == 0x0003E8, "Member 'UBP_EventSystem_C::Gunfight_MatchFinished' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, Gunfight_LoadoutLockBreak) == 0x0003F8, "Member 'UBP_EventSystem_C::Gunfight_LoadoutLockBreak' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, Gunfight_MatchStarted) == 0x000408, "Member 'UBP_EventSystem_C::Gunfight_MatchStarted' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, Gunfight_PlayerDealtDamage) == 0x000418, "Member 'UBP_EventSystem_C::Gunfight_PlayerDealtDamage' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, Gunfight_PlayerReceivedDamage) == 0x000428, "Member 'UBP_EventSystem_C::Gunfight_PlayerReceivedDamage' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, GestureUsed) == 0x000438, "Member 'UBP_EventSystem_C::GestureUsed' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, OtherPlayerSteppedIntoAlarmTrap) == 0x000448, "Member 'UBP_EventSystem_C::OtherPlayerSteppedIntoAlarmTrap' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, FeaturedLobbyPlayer) == 0x000458, "Member 'UBP_EventSystem_C::FeaturedLobbyPlayer' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, CarAlarmTriggered) == 0x000468, "Member 'UBP_EventSystem_C::CarAlarmTriggered' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, PhoneDuelInitiaited) == 0x000478, "Member 'UBP_EventSystem_C::PhoneDuelInitiaited' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, PhoneDuelAnswered) == 0x000488, "Member 'UBP_EventSystem_C::PhoneDuelAnswered' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, PhoneDuelWon) == 0x000498, "Member 'UBP_EventSystem_C::PhoneDuelWon' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, PingCreated) == 0x0004A8, "Member 'UBP_EventSystem_C::PingCreated' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, Gunfight_LocalPlayerStatisticsUpdated) == 0x0004B8, "Member 'UBP_EventSystem_C::Gunfight_LocalPlayerStatisticsUpdated' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, RedChestLooted) == 0x0004C8, "Member 'UBP_EventSystem_C::RedChestLooted' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, TimedSafeOpened) == 0x0004D8, "Member 'UBP_EventSystem_C::TimedSafeOpened' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, Player_stayed_in_radiation) == 0x0004E8, "Member 'UBP_EventSystem_C::Player_stayed_in_radiation' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, PlayerDestroyedTrap) == 0x0004F8, "Member 'UBP_EventSystem_C::PlayerDestroyedTrap' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, LockedContainerLooted) == 0x000508, "Member 'UBP_EventSystem_C::LockedContainerLooted' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, GrenadeHitTarget) == 0x000518, "Member 'UBP_EventSystem_C::GrenadeHitTarget' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, GrenadeMultiHit) == 0x000528, "Member 'UBP_EventSystem_C::GrenadeMultiHit' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, ShelterLevelChanged) == 0x000538, "Member 'UBP_EventSystem_C::ShelterLevelChanged' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, FoodDonated) == 0x000548, "Member 'UBP_EventSystem_C::FoodDonated' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, CommStationUsedWithAction) == 0x000558, "Member 'UBP_EventSystem_C::CommStationUsedWithAction' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, StoredWeapon) == 0x000568, "Member 'UBP_EventSystem_C::StoredWeapon' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, Exit_Unlocked) == 0x000578, "Member 'UBP_EventSystem_C::Exit_Unlocked' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, Destroy_Barricade) == 0x000588, "Member 'UBP_EventSystem_C::Destroy_Barricade' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, AnalyticsValueProcessed) == 0x000598, "Member 'UBP_EventSystem_C::AnalyticsValueProcessed' has a wrong offset!");
static_assert(offsetof(UBP_EventSystem_C, AnalyticsValuesPrinted) == 0x0005A8, "Member 'UBP_EventSystem_C::AnalyticsValuesPrinted' has a wrong offset!");

}

