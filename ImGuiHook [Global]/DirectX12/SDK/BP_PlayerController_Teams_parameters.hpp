#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerController_Teams

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Flame_structs.hpp"


namespace SDK::Params
{

// Function BP_PlayerController_Teams.BP_PlayerController_Teams_C.ExecuteUbergraph_BP_PlayerController_Teams
// 0x0328 (0x0328 - 0x0000)
struct BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_BattlePass_Reward;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FUserMatchReward                       K2Node_CustomEvent_Reward;                         // 0x0028(0x0010)(ConstParm)
	TMap<class UClass*, int32>                    CallFunc_Get_Cloud_Reward_Item_Reward;             // 0x0038(0x0050)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0088(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_GetXPReward__XP;                          // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x00A0(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UUI_RewardPopUp_C*                      CallFunc_Create_ReturnValue;                       // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_BattlepassReward_1;             // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FUserMatchReward                       K2Node_CustomEvent_Rewards_1;                      // 0x00B8(0x0010)()
	TMap<class UClass*, int32>                    CallFunc_Get_Cloud_Reward_Item_Reward_1;           // 0x00C8(0x0050)()
	int32                                         CallFunc_GetXPReward__XP_1;                        // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class UClass*, int32>                    K2Node_CustomEvent_MatchRewards;                   // 0x0120(0x0050)()
	int32                                         K2Node_CustomEvent_Match_XP_Reward;                // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x017A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x017B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17D[0x3];                                      // 0x017D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_BattlepassReward;               // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FUserMatchReward                       K2Node_CustomEvent_Rewards;                        // 0x0188(0x0010)()
	TMap<class UClass*, int32>                    CallFunc_Get_Cloud_Reward_Item_Reward_2;           // 0x0198(0x0050)()
	int32                                         CallFunc_GetXPReward__XP_2;                        // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EC[0x4];                                      // 0x01EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_WinnerScreen_Base_C*                K2Node_CustomEvent_WinnerScreenWidget;             // 0x01F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F9[0x3];                                      // 0x01F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Length_ReturnValue_1;                 // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0202(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0203(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0204(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0205(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_206[0x2];                                      // 0x0206(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GSC_Team_C*                         K2Node_CustomEvent_Team_1;                         // 0x0208(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GSC_Team_C*                         K2Node_CustomEvent_Team;                           // 0x0210(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerState_Teams_C*                K2Node_DynamicCast_AsBP_Player_State_Teams;        // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_Teams_C*                K2Node_DynamicCast_AsBP_Player_State_Teams_1;      // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_2;          // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_232[0x2];                                      // 0x0232(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_Side;                           // 0x0234(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23C[0x4];                                      // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_C*                        K2Node_Event_Possessed_Character_1;                // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0248(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x0258(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0268(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABP_Character_C*                        K2Node_Event_Possessed_Character;                  // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0280(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_2;             // 0x0290(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x02A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x02B0(0x0010)(ZeroConstructor, NoDestructor)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_3;             // 0x02C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_2;        // 0x02D0(0x0008)(NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x02D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x02E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AHumanPlayerCharacter*                  CallFunc_GetHumanCharacter_ReturnValue;            // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0300(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_311[0x7];                                      // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_Teams_C*                  K2Node_DynamicCast_AsBP_Character_Teams;           // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams) == 0x000008, "Wrong alignment on BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams");
static_assert(sizeof(BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams) == 0x000328, "Wrong size on BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams");
static_assert(offsetof(BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams, EntryPoint) == 0x000000, "Member 'BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams, CallFunc_IsDedicatedServer_ReturnValue) == 0x000004, "Member 'BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams, K2Node_CustomEvent_BattlePass_Reward) == 0x000020, "Member 'BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams::K2Node_CustomEvent_BattlePass_Reward' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams, K2Node_CustomEvent_Reward) == 0x000028, "Member 'BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams::K2Node_CustomEvent_Reward' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams, CallFunc_Get_Cloud_Reward_Item_Reward) == 0x000038, "Member 'BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams::CallFunc_Get_Cloud_Reward_Item_Reward' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams, K2Node_CreateDelegate_OutputDelegate_1) == 0x000088, "Member 'BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams, CallFunc_GetXPReward__XP) == 0x000098, "Member 'BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams::CallFunc_GetXPReward__XP' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x0000A0, "Member 'BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams, CallFunc_Create_ReturnValue) == 0x0000A8, "Member 'BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams, K2Node_CustomEvent_BattlepassReward_1) == 0x0000B0, "Member 'BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams::K2Node_CustomEvent_BattlepassReward_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams, K2Node_CustomEvent_Rewards_1) == 0x0000B8, "Member 'BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams::K2Node_CustomEvent_Rewards_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams, CallFunc_Get_Cloud_Reward_Item_Reward_1) == 0x0000C8, "Member 'BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams::CallFunc_Get_Cloud_Reward_Item_Reward_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams, CallFunc_GetXPReward__XP_1) == 0x000118, "Member 'BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams::CallFunc_GetXPReward__XP_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams, K2Node_CustomEvent_MatchRewards) == 0x000120, "Member 'BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams::K2Node_CustomEvent_MatchRewards' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams, K2Node_CustomEvent_Match_XP_Reward) == 0x000170, "Member 'BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams::K2Node_CustomEvent_Match_XP_Reward' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams, CallFunc_Map_Length_ReturnValue) == 0x000174, "Member 'BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams, CallFunc_Greater_IntInt_ReturnValue) == 0x000178, "Member 'BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams, CallFunc_Not_PreBool_ReturnValue) == 0x000179, "Member 'BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00017A, "Member 'BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams, CallFunc_BooleanOR_ReturnValue) == 0x00017B, "Member 'BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x00017C, "Member 'BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams, K2Node_CustomEvent_BattlepassReward) == 0x000180, "Member 'BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams::K2Node_CustomEvent_BattlepassReward' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams, K2Node_CustomEvent_Rewards) == 0x000188, "Member 'BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams::K2Node_CustomEvent_Rewards' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams, CallFunc_Get_Cloud_Reward_Item_Reward_2) == 0x000198, "Member 'BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams::CallFunc_Get_Cloud_Reward_Item_Reward_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams, CallFunc_GetXPReward__XP_2) == 0x0001E8, "Member 'BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams::CallFunc_GetXPReward__XP_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams, K2Node_CustomEvent_WinnerScreenWidget) == 0x0001F0, "Member 'BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams::K2Node_CustomEvent_WinnerScreenWidget' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams, CallFunc_IsValid_ReturnValue) == 0x0001F8, "Member 'BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams, CallFunc_Map_Length_ReturnValue_1) == 0x0001FC, "Member 'BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams::CallFunc_Map_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000200, "Member 'BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000201, "Member 'BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams, CallFunc_Not_PreBool_ReturnValue_1) == 0x000202, "Member 'BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams, CallFunc_Not_PreBool_ReturnValue_2) == 0x000203, "Member 'BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams, K2Node_Event_EndPlayReason) == 0x000204, "Member 'BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams, CallFunc_BooleanOR_ReturnValue_1) == 0x000205, "Member 'BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams, K2Node_CustomEvent_Team_1) == 0x000208, "Member 'BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams::K2Node_CustomEvent_Team_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams, K2Node_CustomEvent_Team) == 0x000210, "Member 'BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams::K2Node_CustomEvent_Team' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams, K2Node_DynamicCast_AsBP_Player_State_Teams) == 0x000218, "Member 'BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams::K2Node_DynamicCast_AsBP_Player_State_Teams' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams, K2Node_DynamicCast_bSuccess) == 0x000220, "Member 'BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams, K2Node_DynamicCast_AsBP_Player_State_Teams_1) == 0x000228, "Member 'BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams::K2Node_DynamicCast_AsBP_Player_State_Teams_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams, K2Node_DynamicCast_bSuccess_1) == 0x000230, "Member 'BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams, CallFunc_IsDedicatedServer_ReturnValue_2) == 0x000231, "Member 'BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams::CallFunc_IsDedicatedServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams, K2Node_CustomEvent_Side) == 0x000234, "Member 'BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams::K2Node_CustomEvent_Side' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams, K2Node_Event_Possessed_Character_1) == 0x000240, "Member 'BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams::K2Node_Event_Possessed_Character_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams, CallFunc_GetDisplayName_ReturnValue) == 0x000248, "Member 'BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams, CallFunc_GetDisplayName_ReturnValue_1) == 0x000258, "Member 'BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams, CallFunc_Concat_StrStr_ReturnValue) == 0x000268, "Member 'BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams, K2Node_Event_Possessed_Character) == 0x000278, "Member 'BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams::K2Node_Event_Possessed_Character' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000280, "Member 'BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams, CallFunc_GetDisplayName_ReturnValue_2) == 0x000290, "Member 'BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams::CallFunc_GetDisplayName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0002A0, "Member 'BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams, K2Node_CreateDelegate_OutputDelegate_2) == 0x0002B0, "Member 'BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams, CallFunc_GetDisplayName_ReturnValue_3) == 0x0002C0, "Member 'BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams::CallFunc_GetDisplayName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams, CallFunc_K2_SetTimerDelegate_ReturnValue_2) == 0x0002D0, "Member 'BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams::CallFunc_K2_SetTimerDelegate_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0002D8, "Member 'BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0002E8, "Member 'BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams, CallFunc_GetHumanCharacter_ReturnValue) == 0x0002F8, "Member 'BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams::CallFunc_GetHumanCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000300, "Member 'BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams, CallFunc_IsValid_ReturnValue_1) == 0x000310, "Member 'BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams, K2Node_DynamicCast_AsBP_Character_Teams) == 0x000318, "Member 'BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams::K2Node_DynamicCast_AsBP_Character_Teams' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams, K2Node_DynamicCast_bSuccess_2) == 0x000320, "Member 'BP_PlayerController_Teams_C_ExecuteUbergraph_BP_PlayerController_Teams::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function BP_PlayerController_Teams.BP_PlayerController_Teams_C.Possessed
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerController_Teams_C_Possessed final
{
public:
	class ABP_Character_C*                        Possessed_Character;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_Teams_C_Possessed) == 0x000008, "Wrong alignment on BP_PlayerController_Teams_C_Possessed");
static_assert(sizeof(BP_PlayerController_Teams_C_Possessed) == 0x000008, "Wrong size on BP_PlayerController_Teams_C_Possessed");
static_assert(offsetof(BP_PlayerController_Teams_C_Possessed, Possessed_Character) == 0x000000, "Member 'BP_PlayerController_Teams_C_Possessed::Possessed_Character' has a wrong offset!");

// Function BP_PlayerController_Teams.BP_PlayerController_Teams_C.PossessedServer
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerController_Teams_C_PossessedServer final
{
public:
	class ABP_Character_C*                        Possessed_Character;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_Teams_C_PossessedServer) == 0x000008, "Wrong alignment on BP_PlayerController_Teams_C_PossessedServer");
static_assert(sizeof(BP_PlayerController_Teams_C_PossessedServer) == 0x000008, "Wrong size on BP_PlayerController_Teams_C_PossessedServer");
static_assert(offsetof(BP_PlayerController_Teams_C_PossessedServer, Possessed_Character) == 0x000000, "Member 'BP_PlayerController_Teams_C_PossessedServer::Possessed_Character' has a wrong offset!");

// Function BP_PlayerController_Teams.BP_PlayerController_Teams_C.Side Joined
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerController_Teams_C_Side_Joined final
{
public:
	class FName                                   Side;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_Teams_C_Side_Joined) == 0x000004, "Wrong alignment on BP_PlayerController_Teams_C_Side_Joined");
static_assert(sizeof(BP_PlayerController_Teams_C_Side_Joined) == 0x000008, "Wrong size on BP_PlayerController_Teams_C_Side_Joined");
static_assert(offsetof(BP_PlayerController_Teams_C_Side_Joined, Side) == 0x000000, "Member 'BP_PlayerController_Teams_C_Side_Joined::Side' has a wrong offset!");

// Function BP_PlayerController_Teams.BP_PlayerController_Teams_C.Team Left
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerController_Teams_C_Team_Left final
{
public:
	class UBP_GSC_Team_C*                         Team;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_Teams_C_Team_Left) == 0x000008, "Wrong alignment on BP_PlayerController_Teams_C_Team_Left");
static_assert(sizeof(BP_PlayerController_Teams_C_Team_Left) == 0x000008, "Wrong size on BP_PlayerController_Teams_C_Team_Left");
static_assert(offsetof(BP_PlayerController_Teams_C_Team_Left, Team) == 0x000000, "Member 'BP_PlayerController_Teams_C_Team_Left::Team' has a wrong offset!");

// Function BP_PlayerController_Teams.BP_PlayerController_Teams_C.Team Joined
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerController_Teams_C_Team_Joined final
{
public:
	class UBP_GSC_Team_C*                         Team;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_Teams_C_Team_Joined) == 0x000008, "Wrong alignment on BP_PlayerController_Teams_C_Team_Joined");
static_assert(sizeof(BP_PlayerController_Teams_C_Team_Joined) == 0x000008, "Wrong size on BP_PlayerController_Teams_C_Team_Joined");
static_assert(offsetof(BP_PlayerController_Teams_C_Team_Joined, Team) == 0x000000, "Member 'BP_PlayerController_Teams_C_Team_Joined::Team' has a wrong offset!");

// Function BP_PlayerController_Teams.BP_PlayerController_Teams_C.ShowRewardPopUp
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerController_Teams_C_ShowRewardPopUp final
{
public:
	class UUI_WinnerScreen_Base_C*                WinnerScreenWidget;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_Teams_C_ShowRewardPopUp) == 0x000008, "Wrong alignment on BP_PlayerController_Teams_C_ShowRewardPopUp");
static_assert(sizeof(BP_PlayerController_Teams_C_ShowRewardPopUp) == 0x000008, "Wrong size on BP_PlayerController_Teams_C_ShowRewardPopUp");
static_assert(offsetof(BP_PlayerController_Teams_C_ShowRewardPopUp, WinnerScreenWidget) == 0x000000, "Member 'BP_PlayerController_Teams_C_ShowRewardPopUp::WinnerScreenWidget' has a wrong offset!");

// Function BP_PlayerController_Teams.BP_PlayerController_Teams_C.StoreRewardInfo
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerController_Teams_C_StoreRewardInfo final
{
public:
	class FName                                   BattlepassReward;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FUserMatchReward                       Rewards;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_PlayerController_Teams_C_StoreRewardInfo) == 0x000008, "Wrong alignment on BP_PlayerController_Teams_C_StoreRewardInfo");
static_assert(sizeof(BP_PlayerController_Teams_C_StoreRewardInfo) == 0x000018, "Wrong size on BP_PlayerController_Teams_C_StoreRewardInfo");
static_assert(offsetof(BP_PlayerController_Teams_C_StoreRewardInfo, BattlepassReward) == 0x000000, "Member 'BP_PlayerController_Teams_C_StoreRewardInfo::BattlepassReward' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_StoreRewardInfo, Rewards) == 0x000008, "Member 'BP_PlayerController_Teams_C_StoreRewardInfo::Rewards' has a wrong offset!");

// Function BP_PlayerController_Teams.BP_PlayerController_Teams_C.Client_CheckForReceivedRewards
// 0x0058 (0x0058 - 0x0000)
struct BP_PlayerController_Teams_C_Client_CheckForReceivedRewards final
{
public:
	TMap<class UClass*, int32>                    MatchRewards_0;                                    // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         Match_XP_Reward_0;                                 // 0x0050(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_Teams_C_Client_CheckForReceivedRewards) == 0x000008, "Wrong alignment on BP_PlayerController_Teams_C_Client_CheckForReceivedRewards");
static_assert(sizeof(BP_PlayerController_Teams_C_Client_CheckForReceivedRewards) == 0x000058, "Wrong size on BP_PlayerController_Teams_C_Client_CheckForReceivedRewards");
static_assert(offsetof(BP_PlayerController_Teams_C_Client_CheckForReceivedRewards, MatchRewards_0) == 0x000000, "Member 'BP_PlayerController_Teams_C_Client_CheckForReceivedRewards::MatchRewards_0' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_Client_CheckForReceivedRewards, Match_XP_Reward_0) == 0x000050, "Member 'BP_PlayerController_Teams_C_Client_CheckForReceivedRewards::Match_XP_Reward_0' has a wrong offset!");

// Function BP_PlayerController_Teams.BP_PlayerController_Teams_C.StoreRewardInfoWithCheck
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerController_Teams_C_StoreRewardInfoWithCheck final
{
public:
	class FName                                   BattlepassReward;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FUserMatchReward                       Rewards;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_PlayerController_Teams_C_StoreRewardInfoWithCheck) == 0x000008, "Wrong alignment on BP_PlayerController_Teams_C_StoreRewardInfoWithCheck");
static_assert(sizeof(BP_PlayerController_Teams_C_StoreRewardInfoWithCheck) == 0x000018, "Wrong size on BP_PlayerController_Teams_C_StoreRewardInfoWithCheck");
static_assert(offsetof(BP_PlayerController_Teams_C_StoreRewardInfoWithCheck, BattlepassReward) == 0x000000, "Member 'BP_PlayerController_Teams_C_StoreRewardInfoWithCheck::BattlepassReward' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_StoreRewardInfoWithCheck, Rewards) == 0x000008, "Member 'BP_PlayerController_Teams_C_StoreRewardInfoWithCheck::Rewards' has a wrong offset!");

// Function BP_PlayerController_Teams.BP_PlayerController_Teams_C.Show Reward PopUp
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerController_Teams_C_Show_Reward_PopUp final
{
public:
	class FName                                   BattlePass_Reward;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FUserMatchReward                       Reward;                                            // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_PlayerController_Teams_C_Show_Reward_PopUp) == 0x000008, "Wrong alignment on BP_PlayerController_Teams_C_Show_Reward_PopUp");
static_assert(sizeof(BP_PlayerController_Teams_C_Show_Reward_PopUp) == 0x000018, "Wrong size on BP_PlayerController_Teams_C_Show_Reward_PopUp");
static_assert(offsetof(BP_PlayerController_Teams_C_Show_Reward_PopUp, BattlePass_Reward) == 0x000000, "Member 'BP_PlayerController_Teams_C_Show_Reward_PopUp::BattlePass_Reward' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_Show_Reward_PopUp, Reward) == 0x000008, "Member 'BP_PlayerController_Teams_C_Show_Reward_PopUp::Reward' has a wrong offset!");

// Function BP_PlayerController_Teams.BP_PlayerController_Teams_C.GetXPReward
// 0x0050 (0x0050 - 0x0000)
struct BP_PlayerController_Teams_C_GetXPReward final
{
public:
	class FName                                   BPReward;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         _XP;                                               // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             CallFunc_DataProviderFindTableByAssetTable_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEvent                         CallFunc_GetDataTableRowFromName_OutRow;           // 0x0018(0x0030)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerController_Teams_C_GetXPReward) == 0x000008, "Wrong alignment on BP_PlayerController_Teams_C_GetXPReward");
static_assert(sizeof(BP_PlayerController_Teams_C_GetXPReward) == 0x000050, "Wrong size on BP_PlayerController_Teams_C_GetXPReward");
static_assert(offsetof(BP_PlayerController_Teams_C_GetXPReward, BPReward) == 0x000000, "Member 'BP_PlayerController_Teams_C_GetXPReward::BPReward' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_GetXPReward, _XP) == 0x000008, "Member 'BP_PlayerController_Teams_C_GetXPReward::_XP' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_GetXPReward, CallFunc_DataProviderFindTableByAssetTable_ReturnValue) == 0x000010, "Member 'BP_PlayerController_Teams_C_GetXPReward::CallFunc_DataProviderFindTableByAssetTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_GetXPReward, CallFunc_GetDataTableRowFromName_OutRow) == 0x000018, "Member 'BP_PlayerController_Teams_C_GetXPReward::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_GetXPReward, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000048, "Member 'BP_PlayerController_Teams_C_GetXPReward::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_PlayerController_Teams.BP_PlayerController_Teams_C.Get Cloud Reward
// 0x05D8 (0x05D8 - 0x0000)
struct BP_PlayerController_Teams_C_Get_Cloud_Reward final
{
public:
	struct FUserMatchReward                       Reward;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	TMap<class UClass*, int32>                    Item_Reward;                                       // 0x0010(0x0050)(Parm, OutParm)
	TMap<class UClass*, int32>                    ItemReward;                                        // 0x0060(0x0050)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRewards                               CallFunc_Array_Get_Item;                           // 0x00B8(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FConsumablePartsList                   CallFunc_GetDataTableRowFromName_OutRow;           // 0x00E0(0x0130)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_212[0x2];                                      // 0x0212(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             CallFunc_DataProviderFindTableByAssetTable_ReturnValue; // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             CallFunc_DataProviderFindTableByAssetTable_ReturnValue_1; // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCurrenciesList                        CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0228(0x0120)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_349[0x7];                                      // 0x0349(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLootBoxList                           CallFunc_GetDataTableRowFromName_OutRow_2;         // 0x0350(0x0128)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_2;    // 0x0478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_479[0x7];                                      // 0x0479(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             CallFunc_DataProviderFindTableByAssetTable_ReturnValue_2; // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FConsumablesList                       CallFunc_GetDataTableRowFromName_OutRow_3;         // 0x0488(0x0138)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_3;    // 0x05C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C1[0x7];                                      // 0x05C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsItem;                    // 0x05C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x05D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerController_Teams_C_Get_Cloud_Reward) == 0x000008, "Wrong alignment on BP_PlayerController_Teams_C_Get_Cloud_Reward");
static_assert(sizeof(BP_PlayerController_Teams_C_Get_Cloud_Reward) == 0x0005D8, "Wrong size on BP_PlayerController_Teams_C_Get_Cloud_Reward");
static_assert(offsetof(BP_PlayerController_Teams_C_Get_Cloud_Reward, Reward) == 0x000000, "Member 'BP_PlayerController_Teams_C_Get_Cloud_Reward::Reward' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_Get_Cloud_Reward, Item_Reward) == 0x000010, "Member 'BP_PlayerController_Teams_C_Get_Cloud_Reward::Item_Reward' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_Get_Cloud_Reward, ItemReward) == 0x000060, "Member 'BP_PlayerController_Teams_C_Get_Cloud_Reward::ItemReward' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_Get_Cloud_Reward, Temp_int_Array_Index_Variable) == 0x0000B0, "Member 'BP_PlayerController_Teams_C_Get_Cloud_Reward::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_Get_Cloud_Reward, CallFunc_Array_Get_Item) == 0x0000B8, "Member 'BP_PlayerController_Teams_C_Get_Cloud_Reward::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_Get_Cloud_Reward, CallFunc_Array_Length_ReturnValue) == 0x0000D0, "Member 'BP_PlayerController_Teams_C_Get_Cloud_Reward::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_Get_Cloud_Reward, Temp_int_Loop_Counter_Variable) == 0x0000D4, "Member 'BP_PlayerController_Teams_C_Get_Cloud_Reward::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_Get_Cloud_Reward, CallFunc_Conv_StringToName_ReturnValue) == 0x0000D8, "Member 'BP_PlayerController_Teams_C_Get_Cloud_Reward::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_Get_Cloud_Reward, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000E0, "Member 'BP_PlayerController_Teams_C_Get_Cloud_Reward::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_Get_Cloud_Reward, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000210, "Member 'BP_PlayerController_Teams_C_Get_Cloud_Reward::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_Get_Cloud_Reward, CallFunc_Less_IntInt_ReturnValue) == 0x000211, "Member 'BP_PlayerController_Teams_C_Get_Cloud_Reward::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_Get_Cloud_Reward, CallFunc_Add_IntInt_ReturnValue) == 0x000214, "Member 'BP_PlayerController_Teams_C_Get_Cloud_Reward::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_Get_Cloud_Reward, CallFunc_DataProviderFindTableByAssetTable_ReturnValue) == 0x000218, "Member 'BP_PlayerController_Teams_C_Get_Cloud_Reward::CallFunc_DataProviderFindTableByAssetTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_Get_Cloud_Reward, CallFunc_DataProviderFindTableByAssetTable_ReturnValue_1) == 0x000220, "Member 'BP_PlayerController_Teams_C_Get_Cloud_Reward::CallFunc_DataProviderFindTableByAssetTable_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_Get_Cloud_Reward, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000228, "Member 'BP_PlayerController_Teams_C_Get_Cloud_Reward::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_Get_Cloud_Reward, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000348, "Member 'BP_PlayerController_Teams_C_Get_Cloud_Reward::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_Get_Cloud_Reward, CallFunc_GetDataTableRowFromName_OutRow_2) == 0x000350, "Member 'BP_PlayerController_Teams_C_Get_Cloud_Reward::CallFunc_GetDataTableRowFromName_OutRow_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_Get_Cloud_Reward, CallFunc_GetDataTableRowFromName_ReturnValue_2) == 0x000478, "Member 'BP_PlayerController_Teams_C_Get_Cloud_Reward::CallFunc_GetDataTableRowFromName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_Get_Cloud_Reward, CallFunc_DataProviderFindTableByAssetTable_ReturnValue_2) == 0x000480, "Member 'BP_PlayerController_Teams_C_Get_Cloud_Reward::CallFunc_DataProviderFindTableByAssetTable_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_Get_Cloud_Reward, CallFunc_GetDataTableRowFromName_OutRow_3) == 0x000488, "Member 'BP_PlayerController_Teams_C_Get_Cloud_Reward::CallFunc_GetDataTableRowFromName_OutRow_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_Get_Cloud_Reward, CallFunc_GetDataTableRowFromName_ReturnValue_3) == 0x0005C0, "Member 'BP_PlayerController_Teams_C_Get_Cloud_Reward::CallFunc_GetDataTableRowFromName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_Get_Cloud_Reward, K2Node_ClassDynamicCast_AsItem) == 0x0005C8, "Member 'BP_PlayerController_Teams_C_Get_Cloud_Reward::K2Node_ClassDynamicCast_AsItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_Get_Cloud_Reward, K2Node_ClassDynamicCast_bSuccess) == 0x0005D0, "Member 'BP_PlayerController_Teams_C_Get_Cloud_Reward::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");

// Function BP_PlayerController_Teams.BP_PlayerController_Teams_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerController_Teams_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_Teams_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_PlayerController_Teams_C_ReceiveEndPlay");
static_assert(sizeof(BP_PlayerController_Teams_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_PlayerController_Teams_C_ReceiveEndPlay");
static_assert(offsetof(BP_PlayerController_Teams_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_PlayerController_Teams_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_PlayerController_Teams.BP_PlayerController_Teams_C.Is Player Ready for Analytics
// 0x0040 (0x0040 - 0x0000)
struct BP_PlayerController_Teams_C_Is_Player_Ready_for_Analytics final
{
public:
	bool                                          Is_Client_Ready;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Inventoy_CustomizationsLoaded;                     // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Local_Has_Match_Started;                           // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameState_Teams_C*                  K2Node_DynamicCast_AsBP_Game_State_Teams;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_ByteByte_ReturnValue;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_Script_C*                 K2Node_DynamicCast_AsBP_Character_Script;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerController_Teams_C_Is_Player_Ready_for_Analytics) == 0x000008, "Wrong alignment on BP_PlayerController_Teams_C_Is_Player_Ready_for_Analytics");
static_assert(sizeof(BP_PlayerController_Teams_C_Is_Player_Ready_for_Analytics) == 0x000040, "Wrong size on BP_PlayerController_Teams_C_Is_Player_Ready_for_Analytics");
static_assert(offsetof(BP_PlayerController_Teams_C_Is_Player_Ready_for_Analytics, Is_Client_Ready) == 0x000000, "Member 'BP_PlayerController_Teams_C_Is_Player_Ready_for_Analytics::Is_Client_Ready' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_Is_Player_Ready_for_Analytics, Inventoy_CustomizationsLoaded) == 0x000001, "Member 'BP_PlayerController_Teams_C_Is_Player_Ready_for_Analytics::Inventoy_CustomizationsLoaded' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_Is_Player_Ready_for_Analytics, Local_Has_Match_Started) == 0x000002, "Member 'BP_PlayerController_Teams_C_Is_Player_Ready_for_Analytics::Local_Has_Match_Started' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_Is_Player_Ready_for_Analytics, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'BP_PlayerController_Teams_C_Is_Player_Ready_for_Analytics::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_Is_Player_Ready_for_Analytics, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'BP_PlayerController_Teams_C_Is_Player_Ready_for_Analytics::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_Is_Player_Ready_for_Analytics, K2Node_DynamicCast_AsBP_Game_State_Teams) == 0x000010, "Member 'BP_PlayerController_Teams_C_Is_Player_Ready_for_Analytics::K2Node_DynamicCast_AsBP_Game_State_Teams' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_Is_Player_Ready_for_Analytics, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_PlayerController_Teams_C_Is_Player_Ready_for_Analytics::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_Is_Player_Ready_for_Analytics, CallFunc_MakeLiteralByte_ReturnValue) == 0x000019, "Member 'BP_PlayerController_Teams_C_Is_Player_Ready_for_Analytics::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_Is_Player_Ready_for_Analytics, CallFunc_K2_GetPawn_ReturnValue) == 0x000020, "Member 'BP_PlayerController_Teams_C_Is_Player_Ready_for_Analytics::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_Is_Player_Ready_for_Analytics, CallFunc_Greater_ByteByte_ReturnValue) == 0x000028, "Member 'BP_PlayerController_Teams_C_Is_Player_Ready_for_Analytics::CallFunc_Greater_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_Is_Player_Ready_for_Analytics, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'BP_PlayerController_Teams_C_Is_Player_Ready_for_Analytics::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_Is_Player_Ready_for_Analytics, K2Node_DynamicCast_AsBP_Character_Script) == 0x000030, "Member 'BP_PlayerController_Teams_C_Is_Player_Ready_for_Analytics::K2Node_DynamicCast_AsBP_Character_Script' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_Is_Player_Ready_for_Analytics, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_PlayerController_Teams_C_Is_Player_Ready_for_Analytics::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_Is_Player_Ready_for_Analytics, CallFunc_IsValid_ReturnValue_1) == 0x000039, "Member 'BP_PlayerController_Teams_C_Is_Player_Ready_for_Analytics::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_Teams_C_Is_Player_Ready_for_Analytics, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x00003A, "Member 'BP_PlayerController_Teams_C_Is_Player_Ready_for_Analytics::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_PlayerController_Teams.BP_PlayerController_Teams_C.GetGameScenario
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerController_Teams_C_GetGameScenario final
{
public:
	EGameScenario                                 ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_Teams_C_GetGameScenario) == 0x000001, "Wrong alignment on BP_PlayerController_Teams_C_GetGameScenario");
static_assert(sizeof(BP_PlayerController_Teams_C_GetGameScenario) == 0x000001, "Wrong size on BP_PlayerController_Teams_C_GetGameScenario");
static_assert(offsetof(BP_PlayerController_Teams_C_GetGameScenario, ReturnValue) == 0x000000, "Member 'BP_PlayerController_Teams_C_GetGameScenario::ReturnValue' has a wrong offset!");

}

