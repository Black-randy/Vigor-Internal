#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_ChallengeNotification

#include "Basic.hpp"

#include "UI_ChallengeNotification_classes.hpp"
#include "UI_ChallengeNotification_parameters.hpp"


namespace SDK
{

// Function UI_ChallengeNotification.UI_ChallengeNotification_C.ExecuteUbergraph_UI_ChallengeNotification
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ChallengeNotification_C::ExecuteUbergraph_UI_ChallengeNotification(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ChallengeNotification_C", "ExecuteUbergraph_UI_ChallengeNotification");

	Params::UI_ChallengeNotification_C_ExecuteUbergraph_UI_ChallengeNotification Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ChallengeNotification.UI_ChallengeNotification_C.OnHide
// (Event, Public, BlueprintEvent)

void UUI_ChallengeNotification_C::OnHide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ChallengeNotification_C", "OnHide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ChallengeNotification.UI_ChallengeNotification_C.OnShow
// (Event, Public, BlueprintEvent)

void UUI_ChallengeNotification_C::OnShow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ChallengeNotification_C", "OnShow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ChallengeNotification.UI_ChallengeNotification_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_ChallengeNotification_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ChallengeNotification_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ChallengeNotification.UI_ChallengeNotification_C.UpdateChallengeState
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUI_ChallengeNotification_C::UpdateChallengeState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ChallengeNotification_C", "UpdateChallengeState");

	UObject::ProcessEvent(Func, nullptr);
}

}

