#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BattlePassSystem

#include "Basic.hpp"

#include "S_BattlePassLevelRewardFull_structs.hpp"
#include "E_BattlePassSeasonType_structs.hpp"
#include "Engine_structs.hpp"
#include "Flame_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "E_BattlePassSystem_State_structs.hpp"


namespace SDK::Params
{

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.State Changed__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct BP_BattlePassSystem_C_State_Changed__DelegateSignature final
{
public:
	E_BattlePassSystem_State                      New_State;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattlePassSystem_C_State_Changed__DelegateSignature) == 0x000001, "Wrong alignment on BP_BattlePassSystem_C_State_Changed__DelegateSignature");
static_assert(sizeof(BP_BattlePassSystem_C_State_Changed__DelegateSignature) == 0x000001, "Wrong size on BP_BattlePassSystem_C_State_Changed__DelegateSignature");
static_assert(offsetof(BP_BattlePassSystem_C_State_Changed__DelegateSignature, New_State) == 0x000000, "Member 'BP_BattlePassSystem_C_State_Changed__DelegateSignature::New_State' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.Level Purchase Result__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct BP_BattlePassSystem_C_Level_Purchase_Result__DelegateSignature final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattlePassSystem_C_Level_Purchase_Result__DelegateSignature) == 0x000001, "Wrong alignment on BP_BattlePassSystem_C_Level_Purchase_Result__DelegateSignature");
static_assert(sizeof(BP_BattlePassSystem_C_Level_Purchase_Result__DelegateSignature) == 0x000001, "Wrong size on BP_BattlePassSystem_C_Level_Purchase_Result__DelegateSignature");
static_assert(offsetof(BP_BattlePassSystem_C_Level_Purchase_Result__DelegateSignature, Success) == 0x000000, "Member 'BP_BattlePassSystem_C_Level_Purchase_Result__DelegateSignature::Success' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.Rewards Claim Result__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct BP_BattlePassSystem_C_Rewards_Claim_Result__DelegateSignature final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattlePassSystem_C_Rewards_Claim_Result__DelegateSignature) == 0x000001, "Wrong alignment on BP_BattlePassSystem_C_Rewards_Claim_Result__DelegateSignature");
static_assert(sizeof(BP_BattlePassSystem_C_Rewards_Claim_Result__DelegateSignature) == 0x000001, "Wrong size on BP_BattlePassSystem_C_Rewards_Claim_Result__DelegateSignature");
static_assert(offsetof(BP_BattlePassSystem_C_Rewards_Claim_Result__DelegateSignature, Success) == 0x000000, "Member 'BP_BattlePassSystem_C_Rewards_Claim_Result__DelegateSignature::Success' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.Premium Purchase Result__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct BP_BattlePassSystem_C_Premium_Purchase_Result__DelegateSignature final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattlePassSystem_C_Premium_Purchase_Result__DelegateSignature) == 0x000001, "Wrong alignment on BP_BattlePassSystem_C_Premium_Purchase_Result__DelegateSignature");
static_assert(sizeof(BP_BattlePassSystem_C_Premium_Purchase_Result__DelegateSignature) == 0x000001, "Wrong size on BP_BattlePassSystem_C_Premium_Purchase_Result__DelegateSignature");
static_assert(offsetof(BP_BattlePassSystem_C_Premium_Purchase_Result__DelegateSignature, Success) == 0x000000, "Member 'BP_BattlePassSystem_C_Premium_Purchase_Result__DelegateSignature::Success' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.LegacySeasonSelected__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct BP_BattlePassSystem_C_LegacySeasonSelected__DelegateSignature final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattlePassSystem_C_LegacySeasonSelected__DelegateSignature) == 0x000001, "Wrong alignment on BP_BattlePassSystem_C_LegacySeasonSelected__DelegateSignature");
static_assert(sizeof(BP_BattlePassSystem_C_LegacySeasonSelected__DelegateSignature) == 0x000001, "Wrong size on BP_BattlePassSystem_C_LegacySeasonSelected__DelegateSignature");
static_assert(offsetof(BP_BattlePassSystem_C_LegacySeasonSelected__DelegateSignature, Success) == 0x000000, "Member 'BP_BattlePassSystem_C_LegacySeasonSelected__DelegateSignature::Success' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.ExecuteUbergraph_BP_BattlePassSystem
// 0x0C60 (0x0C60 - 0x0000)
struct BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BattlePassSystem_State                      CallFunc_Get_State_State;                          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	E_BattlePassSystem_State                      CallFunc_Get_State_State_1;                        // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_2;            // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_3;            // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2; // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_4;            // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BattlePassSystem_State                      CallFunc_Get_State_State_2;                        // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_2;          // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BattlePassSystem_State                      CallFunc_Get_State_State_3;                        // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BattlePassSystem_State                      CallFunc_Get_State_State_4;                        // 0x00C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_7;        // 0x00C7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_3;          // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_5;            // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CA[0x6];                                       // 0x00CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_3; // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_8;        // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_4;          // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_4; // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_9;        // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_5;          // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCloudRequestResult                    K2Node_CustomEvent_RequestResult_3;                // 0x0150(0x0058)(ConstParm)
	struct FCloudBattlePassRewardsClaim           K2Node_CustomEvent_Data_2;                         // 0x01A8(0x0020)(ConstParm)
	struct FCloudRequestResult                    K2Node_CustomEvent_RequestResult_2;                // 0x01C8(0x0058)(ConstParm)
	struct FCloudBattlePassLevelPurchase          K2Node_CustomEvent_Data_1;                         // 0x0220(0x0028)(ConstParm)
	bool                                          CallFunc_Process_Rewards_Claim_Success;            // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Process_Level_Purchase_Success;           // 0x0249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetCloudRequestResultLevel_ReturnValue;   // 0x024A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_10;       // 0x024B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24C[0x4];                                      // 0x024C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_ToString__CloudRequestResult__String;     // 0x0250(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_10;             // 0x0260(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetCloudRequestResultLevel_ReturnValue_1; // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_271[0x7];                                      // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_ToString__CloudRequestResult__String_1;   // 0x0278(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_11;       // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_289[0x7];                                      // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_11;             // 0x0290(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FCloudRequestResult                    K2Node_CustomEvent_RequestResult_1;                // 0x02A0(0x0058)(ConstParm)
	struct FCloudBattlePassSeasonsState           K2Node_CustomEvent_Data;                           // 0x02F8(0x0078)(ConstParm)
	bool                                          CallFunc_Process_Seasons_Data_Success;             // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_371[0x7];                                      // 0x0371(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_ToString__CloudRequestResult__String_2;   // 0x0378(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_12;       // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_389[0x7];                                      // 0x0389(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_12;             // 0x0390(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_InvalidCloudRequest_ReturnValue;          // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FCloudRequestResult& RequestResult, struct FCloudBattlePassSeasonsState& Data)> K2Node_CreateDelegate_OutputDelegate;              // 0x03A4(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(struct FCloudRequestResult& RequestResult, struct FCloudBattlePassLevelPurchase& Data)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x03B4(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(struct FCloudRequestResult& RequestResult, struct FCloudBattlePassRewardsClaim& Data)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x03C4(0x0010)(ZeroConstructor, NoDestructor)
	float                                         K2Node_Event_DeltaTime;                            // 0x03D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x03D8(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_13;       // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E9[0x7];                                      // 0x03E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x03F0(0x0008)(NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_5; // 0x03F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_13;             // 0x0408(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_6;            // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_419[0x7];                                      // 0x0419(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_14;             // 0x0420(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_6; // 0x0430(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_14;       // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_441[0x7];                                      // 0x0441(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_15;             // 0x0448(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_16;             // 0x0458(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0468(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_17;             // 0x0478(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_SeasonName;                     // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Levels;                         // 0x0490(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_494[0x4];                                      // 0x0494(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_18;             // 0x0498(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetLevelsPurchasePrice_Level_Purchase_Price; // 0x04A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x04AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4AD[0x3];                                      // 0x04AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Get_Level_in_Season_Level;                // 0x04B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Season_Max_Level_Max_Level;           // 0x04B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x04B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x04BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLegacySeason_IsLegacy;                  // 0x04BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x04BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4BF[0x1];                                      // 0x04BF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_InvalidCloudRequest_ReturnValue_1;        // 0x04C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsLegacy;                       // 0x04C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C5[0x3];                                      // 0x04C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_Get_Unclaimed_Rewards_Seasons;            // 0x04C8(0x0010)(ReferenceParm)
	TArray<struct FS_BattlePassLevelRewardFull>   CallFunc_Get_Unclaimed_Rewards_Free_Rewards;       // 0x04D8(0x0010)(ReferenceParm)
	TArray<struct FS_BattlePassLevelRewardFull>   CallFunc_Get_Unclaimed_Rewards_Premium_Rewards;    // 0x04E8(0x0010)(ReferenceParm)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x04F8(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0508(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x050C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0510(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0511(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0512(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0513(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_InvalidCloudRequest_ReturnValue_2;        // 0x0514(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0518(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0519(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51A[0x2];                                      // 0x051A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x051C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x052C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_7;            // 0x053C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53D[0x3];                                      // 0x053D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0540(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_19;             // 0x0550(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_20;             // 0x0560(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_15;       // 0x0570(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_571[0x7];                                      // 0x0571(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_7; // 0x0578(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_21;             // 0x0588(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_8;            // 0x0598(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_599[0x7];                                      // 0x0599(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_22;             // 0x05A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_6;          // 0x05B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B1[0x3];                                      // 0x05B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Get_Current_Season_Number_Number;         // 0x05B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x05B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B9[0x3];                                      // 0x05B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNotificationParams                    K2Node_MakeStruct_NotificationParams;              // 0x05BC(0x000C)(NoDestructor)
	class UNotificationSystem*                    CallFunc_GetNotificationSystem_ReturnValue;        // 0x05C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BattlePassSystem_State                      CallFunc_Get_State_State_5;                        // 0x05D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D1[0x7];                                      // 0x05D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNotificationSystem*                    CallFunc_GetNotificationSystem_ReturnValue_1;      // 0x05D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_16;       // 0x05E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E1[0x3];                                      // 0x05E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Get_Previous_Season_Previous_Season_Name; // 0x05E4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Previous_Season_Previous_Season_Order; // 0x05EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Season_Number_Number;                 // 0x05F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_Season_1;                       // 0x05F4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5FC[0x4];                                      // 0x05FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_PremiumBattlePassProductID;     // 0x0600(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_4;             // 0x0610(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StringNotEmpty_ReturnValue;               // 0x0611(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Get_Premium_Status_Premium_Active;        // 0x0612(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0613(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_614[0x4];                                      // 0x0614(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 K2Node_CustomEvent_Player;                         // 0x0618(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCloudBattlePassExperienceEvent        K2Node_CustomEvent_Event;                          // 0x0620(0x0024)(ConstParm, NoDestructor)
	TDelegate<void(class AHumanPlayerController* Player, struct FCloudBattlePassExperienceEvent& Event)> K2Node_CreateDelegate_OutputDelegate_7;            // 0x0644(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Process_Experience_Awarded_Success;       // 0x0654(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Process_Experience_Awarded_Player_Stats_Changed; // 0x0655(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BattlePassSystem_State                      CallFunc_Get_State_State_6;                        // 0x0656(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_17;       // 0x0657(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UGameStoreSystem*                       CallFunc_GetGameStoreSystem_ReturnValue;           // 0x0658(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameStorePurchaseType                        K2Node_CustomEvent_PurchaseType;                   // 0x0660(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_661[0x7];                                      // 0x0661(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUniqueNetIdRepl                       K2Node_CustomEvent_InUserId;                       // 0x0668(0x0028)(ConstParm, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_PurchaseRequestId;              // 0x0690(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_694[0x4];                                      // 0x0694(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameStoreProductId                    K2Node_CustomEvent_RequestedProductId;             // 0x0698(0x0010)(ConstParm)
	struct FCloudRequestResult                    K2Node_CustomEvent_Result;                         // 0x06A8(0x0058)(ConstParm)
	struct FGameStorePurchaseResult               K2Node_CustomEvent_PurchaseResult;                 // 0x0700(0x0038)(ConstParm)
	bool                                          K2Node_CustomEvent_PurchaseListRefreshed;          // 0x0738(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_739[0x3];                                      // 0x0739(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_InvalidCloudRequest_ReturnValue_3;        // 0x073C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ToString__CloudRequestResult__String_3;   // 0x0740(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_18;       // 0x0750(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_751[0x7];                                      // 0x0751(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_23;             // 0x0758(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(EGameStorePurchaseType PurchaseType, struct FUniqueNetIdRepl& InUserId, int32 PurchaseRequestId, struct FGameStoreProductId& RequestedProductId, struct FCloudRequestResult& Result, struct FGameStorePurchaseResult& PurchaseResult, bool PurchaseListRefreshed)> K2Node_CreateDelegate_OutputDelegate_8;            // 0x0768(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Process_Premium_Purchase_Success;         // 0x0778(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_19;       // 0x0779(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x077A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77B[0x5];                                      // 0x077B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_8; // 0x0780(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_24;             // 0x0790(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_9;            // 0x07A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A1[0x7];                                      // 0x07A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_25;             // 0x07A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_7;          // 0x07B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x07B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x07BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7BB[0x5];                                      // 0x07BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_9; // 0x07C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_20;       // 0x07D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D1[0x7];                                      // 0x07D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_26;             // 0x07D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_27;             // 0x07E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_10;           // 0x07F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetCloudRequestResultLevel_ReturnValue_2; // 0x07F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_8;          // 0x07FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x07FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_21;       // 0x07FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7FD[0x3];                                      // 0x07FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_10; // 0x0800(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_22;       // 0x0810(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_811[0x7];                                      // 0x0811(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_28;             // 0x0818(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_29;             // 0x0828(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_11;           // 0x0838(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_9;          // 0x0839(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_83A[0x6];                                      // 0x083A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_11; // 0x0840(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_23;       // 0x0850(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_851[0x7];                                      // 0x0851(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_30;             // 0x0858(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_31;             // 0x0868(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Send_Battle_Pass_Status_Event_ReturnValue; // 0x0878(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_12;           // 0x0879(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87A[0x2];                                      // 0x087A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x087C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_10;         // 0x0880(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_881[0x7];                                      // 0x0881(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_12; // 0x0888(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0898(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_32;             // 0x08A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FName>                           K2Node_Select_Default;                             // 0x08B8(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_33;             // 0x08C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FCloudBattlePassSeasonClaim>    CallFunc_Find_Levels_to_Claim_Claims;              // 0x08D8(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_24;       // 0x08E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_Season_Active_ReturnValue;             // 0x08E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_13;           // 0x08EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8EB[0x5];                                      // 0x08EB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameStoreProducts*                     CallFunc_GetGameStoreProductsManager_ReturnValue;  // 0x08F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetGameStoreProductInfoById_ProductFound; // 0x08F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8F9[0x7];                                      // 0x08F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameStoreProductInfo                  CallFunc_GetGameStoreProductInfoById_ReturnValue;  // 0x0900(0x0050)(ConstParm)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_11;         // 0x0950(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_951[0x3];                                      // 0x0951(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetUserControllerId_ReturnValue;          // 0x0954(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetUserControllerId_ReturnValue_1;        // 0x0958(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_95C[0x4];                                      // 0x095C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue; // 0x0960(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_1; // 0x0968(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0970(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_971[0x3];                                      // 0x0971(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PurchaseBattlePassLevel_ReturnValue;      // 0x0974(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0978(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0979(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_97A[0x2];                                      // 0x097A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetAllBattlePassSeasonsState_ReturnValue; // 0x097C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x0980(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_981[0x3];                                      // 0x0981(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetUserControllerId_ReturnValue_2;        // 0x0984(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_2; // 0x0988(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetUserControllerId_ReturnValue_3;        // 0x0990(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ClaimBattlePassRewards_ReturnValue;       // 0x0994(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_3; // 0x0998(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_BattlePassNotification_Season_C*    CallFunc_Create_ReturnValue;                       // 0x09A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x09A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EGameScenario                                 CallFunc_GetGameScenario_ReturnValue;              // 0x09A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_2;            // 0x09AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_25;       // 0x09AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x09AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9AD[0x3];                                      // 0x09AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetUserControllerId_ReturnValue_4;        // 0x09B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9B4[0x4];                                      // 0x09B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_4; // 0x09B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetUserControllerId_ReturnValue_5;        // 0x09C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C4[0x4];                                      // 0x09C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_BattlePassNotification_Season_C*    CallFunc_Create_ReturnValue_1;                     // 0x09C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_5; // 0x09D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x09D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D9[0x7];                                      // 0x09D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerState*                      K2Node_DynamicCast_AsHuman_Player_State;           // 0x09E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x09E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9E9[0x7];                                      // 0x09E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUniqueNetIdRepl                       CallFunc_GetPlayerUniqueId_ReturnValue;            // 0x09F0(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_StartPurchaseRequest_ReturnValue;         // 0x0A18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0A1C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_3;            // 0x0A1D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EGameScenario                                 CallFunc_GetGameScenario_ReturnValue_1;            // 0x0A1E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_26;       // 0x0A1F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_13; // 0x0A20(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_27;       // 0x0A30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A31[0x7];                                      // 0x0A31(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_34;             // 0x0A38(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_35;             // 0x0A48(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0A58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_9;            // 0x0A60(0x0010)(ZeroConstructor, NoDestructor)
	class ABP_GameMode_Shelter_C*                 K2Node_DynamicCast_AsBP_Game_Mode_Shelter;         // 0x0A70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0A78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_14;           // 0x0A79(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A7A[0x6];                                      // 0x0A7A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UEventSystem*                           CallFunc_GetEventSystem_ReturnValue;               // 0x0A80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_EventSystem_C*                      K2Node_DynamicCast_AsBP_Event_System;              // 0x0A88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0A90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_12;         // 0x0A91(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A92[0x2];                                      // 0x0A92(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetUserControllerId_ReturnValue_6;        // 0x0A94(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_6; // 0x0A98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_28;       // 0x0AA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EGameScenario                                 CallFunc_GetGameScenario_ReturnValue_2;            // 0x0AA1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_29;       // 0x0AA2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AA3[0x5];                                      // 0x0AA3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_14; // 0x0AA8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_36;             // 0x0AB8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_37;             // 0x0AC8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(struct FCloudRequestResult& RequestResult)> K2Node_CreateDelegate_OutputDelegate_10;           // 0x0AD8(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_GetUserControllerId_ReturnValue_7;        // 0x0AE8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AEC[0x4];                                      // 0x0AEC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_7; // 0x0AF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_InvalidCloudRequest_ReturnValue_4;        // 0x0AF8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0AFC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AFD[0x3];                                      // 0x0AFD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_Season;                         // 0x0B00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectLegacySeason_ReturnValue;           // 0x0B08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x0B0C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_4;            // 0x0B0D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_15;           // 0x0B0E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B0F[0x1];                                      // 0x0B0F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCloudRequestResult                    K2Node_CustomEvent_RequestResult;                  // 0x0B10(0x0058)(ConstParm)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_30;       // 0x0B68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_13;         // 0x0B69(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B6A[0x6];                                      // 0x0B6A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_ToString__CloudRequestResult__String_4;   // 0x0B70(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_38;             // 0x0B80(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x0B90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B91[0x7];                                      // 0x0B91(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_15; // 0x0B98(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_39;             // 0x0BA8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_31;       // 0x0BB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BB9[0x7];                                      // 0x0BB9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_40;             // 0x0BC0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_14;         // 0x0BD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_16;           // 0x0BD1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetCloudRequestResultLevel_ReturnValue_3; // 0x0BD2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_15;         // 0x0BD3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BD4[0x4];                                      // 0x0BD4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_16; // 0x0BD8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_32;       // 0x0BE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BE9[0x7];                                      // 0x0BE9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_41;             // 0x0BF0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_42;             // 0x0C00(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_17;           // 0x0C10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x0C11(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_16;         // 0x0C12(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_17;         // 0x0C13(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C14[0x4];                                      // 0x0C14(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_17; // 0x0C18(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_33;       // 0x0C28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C29[0x7];                                      // 0x0C29(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_43;             // 0x0C30(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_44;             // 0x0C40(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Get_Season_Name_Active_Season_Name;       // 0x0C50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_2;        // 0x0C58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0C59(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem) == 0x000008, "Wrong alignment on BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem");
static_assert(sizeof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem) == 0x000C60, "Wrong size on BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, EntryPoint) == 0x000000, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_MakeLiteralByte_ReturnValue) == 0x000004, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Get_State_State) == 0x000005, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Get_State_State' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000006, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000008, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Concat_StrStr_ReturnValue) == 0x000018, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000028, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000030, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Get_State_State_1) == 0x000040, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Get_State_State_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000041, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x000042, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_MakeLiteralByte_ReturnValue_2) == 0x000043, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_MakeLiteralByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000044, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x000048, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000058, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000060, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000070, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_MakeLiteralByte_ReturnValue_3) == 0x000080, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_MakeLiteralByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000081, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2) == 0x000088, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000098, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x0000A8, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0000B0, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_MakeLiteralByte_ReturnValue_4) == 0x0000C0, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_MakeLiteralByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Get_State_State_2) == 0x0000C1, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Get_State_State_2' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x0000C2, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_NotEqual_ByteByte_ReturnValue_2) == 0x0000C3, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_NotEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Get_State_State_3) == 0x0000C4, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Get_State_State_3' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x0000C5, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Get_State_State_4) == 0x0000C6, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Get_State_State_4' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_EqualEqual_ByteByte_ReturnValue_7) == 0x0000C7, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_EqualEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_NotEqual_ByteByte_ReturnValue_3) == 0x0000C8, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_NotEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_MakeLiteralByte_ReturnValue_5) == 0x0000C9, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_MakeLiteralByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_3) == 0x0000D0, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_EqualEqual_ByteByte_ReturnValue_8) == 0x0000E0, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_EqualEqual_ByteByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Concat_StrStr_ReturnValue_6) == 0x0000E8, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Concat_StrStr_ReturnValue_7) == 0x0000F8, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_NotEqual_ByteByte_ReturnValue_4) == 0x000108, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_NotEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_4) == 0x000110, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_EqualEqual_ByteByte_ReturnValue_9) == 0x000120, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_EqualEqual_ByteByte_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Concat_StrStr_ReturnValue_8) == 0x000128, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Concat_StrStr_ReturnValue_9) == 0x000138, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_NotEqual_ByteByte_ReturnValue_5) == 0x000148, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_NotEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, K2Node_CustomEvent_RequestResult_3) == 0x000150, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::K2Node_CustomEvent_RequestResult_3' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, K2Node_CustomEvent_Data_2) == 0x0001A8, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::K2Node_CustomEvent_Data_2' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, K2Node_CustomEvent_RequestResult_2) == 0x0001C8, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::K2Node_CustomEvent_RequestResult_2' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, K2Node_CustomEvent_Data_1) == 0x000220, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::K2Node_CustomEvent_Data_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Process_Rewards_Claim_Success) == 0x000248, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Process_Rewards_Claim_Success' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Process_Level_Purchase_Success) == 0x000249, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Process_Level_Purchase_Success' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_SetCloudRequestResultLevel_ReturnValue) == 0x00024A, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_SetCloudRequestResultLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_EqualEqual_ByteByte_ReturnValue_10) == 0x00024B, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_EqualEqual_ByteByte_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_ToString__CloudRequestResult__String) == 0x000250, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_ToString__CloudRequestResult__String' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Concat_StrStr_ReturnValue_10) == 0x000260, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Concat_StrStr_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_SetCloudRequestResultLevel_ReturnValue_1) == 0x000270, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_SetCloudRequestResultLevel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_ToString__CloudRequestResult__String_1) == 0x000278, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_ToString__CloudRequestResult__String_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_EqualEqual_ByteByte_ReturnValue_11) == 0x000288, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_EqualEqual_ByteByte_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Concat_StrStr_ReturnValue_11) == 0x000290, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Concat_StrStr_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, K2Node_CustomEvent_RequestResult_1) == 0x0002A0, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::K2Node_CustomEvent_RequestResult_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, K2Node_CustomEvent_Data) == 0x0002F8, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::K2Node_CustomEvent_Data' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Process_Seasons_Data_Success) == 0x000370, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Process_Seasons_Data_Success' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_ToString__CloudRequestResult__String_2) == 0x000378, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_ToString__CloudRequestResult__String_2' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_EqualEqual_ByteByte_ReturnValue_12) == 0x000388, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_EqualEqual_ByteByte_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Concat_StrStr_ReturnValue_12) == 0x000390, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Concat_StrStr_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_InvalidCloudRequest_ReturnValue) == 0x0003A0, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_InvalidCloudRequest_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, K2Node_CreateDelegate_OutputDelegate) == 0x0003A4, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, K2Node_CreateDelegate_OutputDelegate_1) == 0x0003B4, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, K2Node_CreateDelegate_OutputDelegate_2) == 0x0003C4, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, K2Node_Event_DeltaTime) == 0x0003D4, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::K2Node_Event_DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, K2Node_CreateDelegate_OutputDelegate_3) == 0x0003D8, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_EqualEqual_ByteByte_ReturnValue_13) == 0x0003E8, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_EqualEqual_ByteByte_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0003F0, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_5) == 0x0003F8, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Concat_StrStr_ReturnValue_13) == 0x000408, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Concat_StrStr_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_MakeLiteralByte_ReturnValue_6) == 0x000418, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_MakeLiteralByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Concat_StrStr_ReturnValue_14) == 0x000420, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Concat_StrStr_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_6) == 0x000430, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_EqualEqual_ByteByte_ReturnValue_14) == 0x000440, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_EqualEqual_ByteByte_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Concat_StrStr_ReturnValue_15) == 0x000448, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Concat_StrStr_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Concat_StrStr_ReturnValue_16) == 0x000458, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Concat_StrStr_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Conv_IntToString_ReturnValue) == 0x000468, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Concat_StrStr_ReturnValue_17) == 0x000478, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Concat_StrStr_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, K2Node_CustomEvent_SeasonName) == 0x000488, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::K2Node_CustomEvent_SeasonName' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, K2Node_CustomEvent_Levels) == 0x000490, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::K2Node_CustomEvent_Levels' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Concat_StrStr_ReturnValue_18) == 0x000498, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Concat_StrStr_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_GetLevelsPurchasePrice_Level_Purchase_Price) == 0x0004A8, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_GetLevelsPurchasePrice_Level_Purchase_Price' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Greater_IntInt_ReturnValue) == 0x0004AC, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Get_Level_in_Season_Level) == 0x0004B0, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Get_Level_in_Season_Level' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Get_Season_Max_Level_Max_Level) == 0x0004B4, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Get_Season_Max_Level_Max_Level' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Add_IntInt_ReturnValue) == 0x0004B8, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Less_IntInt_ReturnValue) == 0x0004BC, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_IsLegacySeason_IsLegacy) == 0x0004BD, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_IsLegacySeason_IsLegacy' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_BooleanAND_ReturnValue) == 0x0004BE, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_InvalidCloudRequest_ReturnValue_1) == 0x0004C0, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_InvalidCloudRequest_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, K2Node_CustomEvent_IsLegacy) == 0x0004C4, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::K2Node_CustomEvent_IsLegacy' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Get_Unclaimed_Rewards_Seasons) == 0x0004C8, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Get_Unclaimed_Rewards_Seasons' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Get_Unclaimed_Rewards_Free_Rewards) == 0x0004D8, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Get_Unclaimed_Rewards_Free_Rewards' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Get_Unclaimed_Rewards_Premium_Rewards) == 0x0004E8, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Get_Unclaimed_Rewards_Premium_Rewards' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, K2Node_CreateDelegate_OutputDelegate_4) == 0x0004F8, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Array_Length_ReturnValue) == 0x000508, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Array_Length_ReturnValue_1) == 0x00050C, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000510, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000511, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Not_PreBool_ReturnValue) == 0x000512, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Not_PreBool_ReturnValue_1) == 0x000513, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_InvalidCloudRequest_ReturnValue_2) == 0x000514, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_InvalidCloudRequest_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, Temp_bool_Variable) == 0x000518, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, K2Node_SwitchEnum_CmpSuccess) == 0x000519, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, K2Node_CreateDelegate_OutputDelegate_5) == 0x00051C, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, K2Node_CreateDelegate_OutputDelegate_6) == 0x00052C, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_MakeLiteralByte_ReturnValue_7) == 0x00053C, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_MakeLiteralByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000540, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Concat_StrStr_ReturnValue_19) == 0x000550, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Concat_StrStr_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Concat_StrStr_ReturnValue_20) == 0x000560, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Concat_StrStr_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_EqualEqual_ByteByte_ReturnValue_15) == 0x000570, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_EqualEqual_ByteByte_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_7) == 0x000578, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Concat_StrStr_ReturnValue_21) == 0x000588, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Concat_StrStr_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_MakeLiteralByte_ReturnValue_8) == 0x000598, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_MakeLiteralByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Concat_StrStr_ReturnValue_22) == 0x0005A0, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Concat_StrStr_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_NotEqual_ByteByte_ReturnValue_6) == 0x0005B0, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_NotEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Get_Current_Season_Number_Number) == 0x0005B4, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Get_Current_Season_Number_Number' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Greater_IntInt_ReturnValue_3) == 0x0005B8, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, K2Node_MakeStruct_NotificationParams) == 0x0005BC, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::K2Node_MakeStruct_NotificationParams' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_GetNotificationSystem_ReturnValue) == 0x0005C8, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_GetNotificationSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Get_State_State_5) == 0x0005D0, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Get_State_State_5' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_GetNotificationSystem_ReturnValue_1) == 0x0005D8, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_GetNotificationSystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_EqualEqual_ByteByte_ReturnValue_16) == 0x0005E0, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_EqualEqual_ByteByte_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Get_Previous_Season_Previous_Season_Name) == 0x0005E4, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Get_Previous_Season_Previous_Season_Name' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Get_Previous_Season_Previous_Season_Order) == 0x0005EC, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Get_Previous_Season_Previous_Season_Order' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Get_Season_Number_Number) == 0x0005F0, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Get_Season_Number_Number' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, K2Node_CustomEvent_Season_1) == 0x0005F4, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::K2Node_CustomEvent_Season_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, K2Node_CustomEvent_PremiumBattlePassProductID) == 0x000600, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::K2Node_CustomEvent_PremiumBattlePassProductID' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Greater_IntInt_ReturnValue_4) == 0x000610, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Greater_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_StringNotEmpty_ReturnValue) == 0x000611, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_StringNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Get_Premium_Status_Premium_Active) == 0x000612, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Get_Premium_Status_Premium_Active' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000613, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, K2Node_CustomEvent_Player) == 0x000618, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::K2Node_CustomEvent_Player' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, K2Node_CustomEvent_Event) == 0x000620, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::K2Node_CustomEvent_Event' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, K2Node_CreateDelegate_OutputDelegate_7) == 0x000644, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Process_Experience_Awarded_Success) == 0x000654, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Process_Experience_Awarded_Success' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Process_Experience_Awarded_Player_Stats_Changed) == 0x000655, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Process_Experience_Awarded_Player_Stats_Changed' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Get_State_State_6) == 0x000656, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Get_State_State_6' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_EqualEqual_ByteByte_ReturnValue_17) == 0x000657, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_EqualEqual_ByteByte_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_GetGameStoreSystem_ReturnValue) == 0x000658, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_GetGameStoreSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, K2Node_CustomEvent_PurchaseType) == 0x000660, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::K2Node_CustomEvent_PurchaseType' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, K2Node_CustomEvent_InUserId) == 0x000668, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::K2Node_CustomEvent_InUserId' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, K2Node_CustomEvent_PurchaseRequestId) == 0x000690, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::K2Node_CustomEvent_PurchaseRequestId' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, K2Node_CustomEvent_RequestedProductId) == 0x000698, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::K2Node_CustomEvent_RequestedProductId' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, K2Node_CustomEvent_Result) == 0x0006A8, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::K2Node_CustomEvent_Result' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, K2Node_CustomEvent_PurchaseResult) == 0x000700, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::K2Node_CustomEvent_PurchaseResult' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, K2Node_CustomEvent_PurchaseListRefreshed) == 0x000738, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::K2Node_CustomEvent_PurchaseListRefreshed' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_InvalidCloudRequest_ReturnValue_3) == 0x00073C, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_InvalidCloudRequest_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_ToString__CloudRequestResult__String_3) == 0x000740, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_ToString__CloudRequestResult__String_3' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_EqualEqual_ByteByte_ReturnValue_18) == 0x000750, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_EqualEqual_ByteByte_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Concat_StrStr_ReturnValue_23) == 0x000758, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Concat_StrStr_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, K2Node_CreateDelegate_OutputDelegate_8) == 0x000768, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Process_Premium_Purchase_Success) == 0x000778, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Process_Premium_Purchase_Success' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_EqualEqual_ByteByte_ReturnValue_19) == 0x000779, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_EqualEqual_ByteByte_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00077A, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_8) == 0x000780, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Concat_StrStr_ReturnValue_24) == 0x000790, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Concat_StrStr_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_MakeLiteralByte_ReturnValue_9) == 0x0007A0, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_MakeLiteralByte_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Concat_StrStr_ReturnValue_25) == 0x0007A8, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Concat_StrStr_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_NotEqual_ByteByte_ReturnValue_7) == 0x0007B8, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_NotEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0007B9, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x0007BA, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_9) == 0x0007C0, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_EqualEqual_ByteByte_ReturnValue_20) == 0x0007D0, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_EqualEqual_ByteByte_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Concat_StrStr_ReturnValue_26) == 0x0007D8, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Concat_StrStr_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Concat_StrStr_ReturnValue_27) == 0x0007E8, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Concat_StrStr_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_MakeLiteralByte_ReturnValue_10) == 0x0007F8, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_MakeLiteralByte_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_SetCloudRequestResultLevel_ReturnValue_2) == 0x0007F9, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_SetCloudRequestResultLevel_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_NotEqual_ByteByte_ReturnValue_8) == 0x0007FA, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_NotEqual_ByteByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x0007FB, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_EqualEqual_ByteByte_ReturnValue_21) == 0x0007FC, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_EqualEqual_ByteByte_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_10) == 0x000800, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_EqualEqual_ByteByte_ReturnValue_22) == 0x000810, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_EqualEqual_ByteByte_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Concat_StrStr_ReturnValue_28) == 0x000818, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Concat_StrStr_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Concat_StrStr_ReturnValue_29) == 0x000828, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Concat_StrStr_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_MakeLiteralByte_ReturnValue_11) == 0x000838, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_MakeLiteralByte_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_NotEqual_ByteByte_ReturnValue_9) == 0x000839, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_NotEqual_ByteByte_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_11) == 0x000840, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_EqualEqual_ByteByte_ReturnValue_23) == 0x000850, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_EqualEqual_ByteByte_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Concat_StrStr_ReturnValue_30) == 0x000858, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Concat_StrStr_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Concat_StrStr_ReturnValue_31) == 0x000868, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Concat_StrStr_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Send_Battle_Pass_Status_Event_ReturnValue) == 0x000878, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Send_Battle_Pass_Status_Event_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_MakeLiteralByte_ReturnValue_12) == 0x000879, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_MakeLiteralByte_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Array_Add_ReturnValue) == 0x00087C, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_NotEqual_ByteByte_ReturnValue_10) == 0x000880, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_NotEqual_ByteByte_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_12) == 0x000888, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, K2Node_MakeArray_Array) == 0x000898, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Concat_StrStr_ReturnValue_32) == 0x0008A8, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Concat_StrStr_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, K2Node_Select_Default) == 0x0008B8, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Concat_StrStr_ReturnValue_33) == 0x0008C8, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Concat_StrStr_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Find_Levels_to_Claim_Claims) == 0x0008D8, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Find_Levels_to_Claim_Claims' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_EqualEqual_ByteByte_ReturnValue_24) == 0x0008E8, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_EqualEqual_ByteByte_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Is_Season_Active_ReturnValue) == 0x0008E9, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Is_Season_Active_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_MakeLiteralByte_ReturnValue_13) == 0x0008EA, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_MakeLiteralByte_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_GetGameStoreProductsManager_ReturnValue) == 0x0008F0, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_GetGameStoreProductsManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_GetGameStoreProductInfoById_ProductFound) == 0x0008F8, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_GetGameStoreProductInfoById_ProductFound' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_GetGameStoreProductInfoById_ReturnValue) == 0x000900, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_GetGameStoreProductInfoById_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_NotEqual_ByteByte_ReturnValue_11) == 0x000950, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_NotEqual_ByteByte_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_GetUserControllerId_ReturnValue) == 0x000954, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_GetUserControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_GetUserControllerId_ReturnValue_1) == 0x000958, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_GetUserControllerId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue) == 0x000960, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_1) == 0x000968, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_IsValid_ReturnValue) == 0x000970, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_PurchaseBattlePassLevel_ReturnValue) == 0x000974, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_PurchaseBattlePassLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000978, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_IsValid_ReturnValue_1) == 0x000979, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_GetAllBattlePassSeasonsState_ReturnValue) == 0x00097C, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_GetAllBattlePassSeasonsState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x000980, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_GetUserControllerId_ReturnValue_2) == 0x000984, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_GetUserControllerId_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_2) == 0x000988, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_GetUserControllerId_ReturnValue_3) == 0x000990, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_GetUserControllerId_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_ClaimBattlePassRewards_ReturnValue) == 0x000994, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_ClaimBattlePassRewards_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_3) == 0x000998, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Create_ReturnValue) == 0x0009A0, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_IsValid_ReturnValue_2) == 0x0009A8, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_GetGameScenario_ReturnValue) == 0x0009A9, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_GetGameScenario_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_NotEqual_IntInt_ReturnValue_2) == 0x0009AA, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_NotEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_EqualEqual_ByteByte_ReturnValue_25) == 0x0009AB, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_EqualEqual_ByteByte_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_IsValid_ReturnValue_3) == 0x0009AC, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_GetUserControllerId_ReturnValue_4) == 0x0009B0, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_GetUserControllerId_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_4) == 0x0009B8, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_GetUserControllerId_ReturnValue_5) == 0x0009C0, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_GetUserControllerId_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Create_ReturnValue_1) == 0x0009C8, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_5) == 0x0009D0, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_IsValid_ReturnValue_4) == 0x0009D8, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, K2Node_DynamicCast_AsHuman_Player_State) == 0x0009E0, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::K2Node_DynamicCast_AsHuman_Player_State' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, K2Node_DynamicCast_bSuccess) == 0x0009E8, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_GetPlayerUniqueId_ReturnValue) == 0x0009F0, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_GetPlayerUniqueId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_StartPurchaseRequest_ReturnValue) == 0x000A18, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_StartPurchaseRequest_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_IsValid_ReturnValue_5) == 0x000A1C, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_NotEqual_IntInt_ReturnValue_3) == 0x000A1D, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_NotEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_GetGameScenario_ReturnValue_1) == 0x000A1E, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_GetGameScenario_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_EqualEqual_ByteByte_ReturnValue_26) == 0x000A1F, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_EqualEqual_ByteByte_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_13) == 0x000A20, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_EqualEqual_ByteByte_ReturnValue_27) == 0x000A30, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_EqualEqual_ByteByte_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Concat_StrStr_ReturnValue_34) == 0x000A38, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Concat_StrStr_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Concat_StrStr_ReturnValue_35) == 0x000A48, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Concat_StrStr_ReturnValue_35' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_GetGameMode_ReturnValue) == 0x000A58, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, K2Node_CreateDelegate_OutputDelegate_9) == 0x000A60, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, K2Node_DynamicCast_AsBP_Game_Mode_Shelter) == 0x000A70, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::K2Node_DynamicCast_AsBP_Game_Mode_Shelter' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, K2Node_DynamicCast_bSuccess_1) == 0x000A78, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_MakeLiteralByte_ReturnValue_14) == 0x000A79, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_MakeLiteralByte_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_GetEventSystem_ReturnValue) == 0x000A80, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_GetEventSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, K2Node_DynamicCast_AsBP_Event_System) == 0x000A88, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::K2Node_DynamicCast_AsBP_Event_System' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, K2Node_DynamicCast_bSuccess_2) == 0x000A90, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_NotEqual_ByteByte_ReturnValue_12) == 0x000A91, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_NotEqual_ByteByte_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_GetUserControllerId_ReturnValue_6) == 0x000A94, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_GetUserControllerId_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_6) == 0x000A98, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_EqualEqual_ByteByte_ReturnValue_28) == 0x000AA0, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_EqualEqual_ByteByte_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_GetGameScenario_ReturnValue_2) == 0x000AA1, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_GetGameScenario_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_EqualEqual_ByteByte_ReturnValue_29) == 0x000AA2, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_EqualEqual_ByteByte_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_14) == 0x000AA8, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Concat_StrStr_ReturnValue_36) == 0x000AB8, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Concat_StrStr_ReturnValue_36' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Concat_StrStr_ReturnValue_37) == 0x000AC8, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Concat_StrStr_ReturnValue_37' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, K2Node_CreateDelegate_OutputDelegate_10) == 0x000AD8, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_GetUserControllerId_ReturnValue_7) == 0x000AE8, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_GetUserControllerId_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_7) == 0x000AF0, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_InvalidCloudRequest_ReturnValue_4) == 0x000AF8, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_InvalidCloudRequest_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_IsValid_ReturnValue_6) == 0x000AFC, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, K2Node_CustomEvent_Season) == 0x000B00, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::K2Node_CustomEvent_Season' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_SelectLegacySeason_ReturnValue) == 0x000B08, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_SelectLegacySeason_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x000B0C, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_NotEqual_IntInt_ReturnValue_4) == 0x000B0D, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_NotEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_MakeLiteralByte_ReturnValue_15) == 0x000B0E, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_MakeLiteralByte_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, K2Node_CustomEvent_RequestResult) == 0x000B10, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::K2Node_CustomEvent_RequestResult' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_EqualEqual_ByteByte_ReturnValue_30) == 0x000B68, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_EqualEqual_ByteByte_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_NotEqual_ByteByte_ReturnValue_13) == 0x000B69, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_NotEqual_ByteByte_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_ToString__CloudRequestResult__String_4) == 0x000B70, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_ToString__CloudRequestResult__String_4' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Concat_StrStr_ReturnValue_38) == 0x000B80, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Concat_StrStr_ReturnValue_38' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x000B90, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_15) == 0x000B98, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Concat_StrStr_ReturnValue_39) == 0x000BA8, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Concat_StrStr_ReturnValue_39' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_EqualEqual_ByteByte_ReturnValue_31) == 0x000BB8, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_EqualEqual_ByteByte_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Concat_StrStr_ReturnValue_40) == 0x000BC0, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Concat_StrStr_ReturnValue_40' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_NotEqual_ByteByte_ReturnValue_14) == 0x000BD0, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_NotEqual_ByteByte_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_MakeLiteralByte_ReturnValue_16) == 0x000BD1, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_MakeLiteralByte_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_SetCloudRequestResultLevel_ReturnValue_3) == 0x000BD2, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_SetCloudRequestResultLevel_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_NotEqual_ByteByte_ReturnValue_15) == 0x000BD3, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_NotEqual_ByteByte_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_16) == 0x000BD8, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_EqualEqual_ByteByte_ReturnValue_32) == 0x000BE8, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_EqualEqual_ByteByte_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Concat_StrStr_ReturnValue_41) == 0x000BF0, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Concat_StrStr_ReturnValue_41' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Concat_StrStr_ReturnValue_42) == 0x000C00, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Concat_StrStr_ReturnValue_42' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_MakeLiteralByte_ReturnValue_17) == 0x000C10, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_MakeLiteralByte_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x000C11, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_NotEqual_ByteByte_ReturnValue_16) == 0x000C12, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_NotEqual_ByteByte_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_NotEqual_ByteByte_ReturnValue_17) == 0x000C13, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_NotEqual_ByteByte_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_17) == 0x000C18, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_EqualEqual_ByteByte_ReturnValue_33) == 0x000C28, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_EqualEqual_ByteByte_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Concat_StrStr_ReturnValue_43) == 0x000C30, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Concat_StrStr_ReturnValue_43' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Concat_StrStr_ReturnValue_44) == 0x000C40, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Concat_StrStr_ReturnValue_44' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_Get_Season_Name_Active_Season_Name) == 0x000C50, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_Get_Season_Name_Active_Season_Name' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_EqualEqual_NameName_ReturnValue_2) == 0x000C58, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_EqualEqual_NameName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem, CallFunc_BooleanOR_ReturnValue) == 0x000C59, "Member 'BP_BattlePassSystem_C_ExecuteUbergraph_BP_BattlePassSystem::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.EventSelectLegacySeasonFinished
// 0x0058 (0x0058 - 0x0000)
struct BP_BattlePassSystem_C_EventSelectLegacySeasonFinished final
{
public:
	struct FCloudRequestResult                    RequestResult;                                     // 0x0000(0x0058)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_BattlePassSystem_C_EventSelectLegacySeasonFinished) == 0x000008, "Wrong alignment on BP_BattlePassSystem_C_EventSelectLegacySeasonFinished");
static_assert(sizeof(BP_BattlePassSystem_C_EventSelectLegacySeasonFinished) == 0x000058, "Wrong size on BP_BattlePassSystem_C_EventSelectLegacySeasonFinished");
static_assert(offsetof(BP_BattlePassSystem_C_EventSelectLegacySeasonFinished, RequestResult) == 0x000000, "Member 'BP_BattlePassSystem_C_EventSelectLegacySeasonFinished::RequestResult' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.RequestLegacySeasonSelection
// 0x0008 (0x0008 - 0x0000)
struct BP_BattlePassSystem_C_RequestLegacySeasonSelection final
{
public:
	class FName                                   Season;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattlePassSystem_C_RequestLegacySeasonSelection) == 0x000004, "Wrong alignment on BP_BattlePassSystem_C_RequestLegacySeasonSelection");
static_assert(sizeof(BP_BattlePassSystem_C_RequestLegacySeasonSelection) == 0x000008, "Wrong size on BP_BattlePassSystem_C_RequestLegacySeasonSelection");
static_assert(offsetof(BP_BattlePassSystem_C_RequestLegacySeasonSelection, Season) == 0x000000, "Member 'BP_BattlePassSystem_C_RequestLegacySeasonSelection::Season' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.OnGameStorePurchase
// 0x00E0 (0x00E0 - 0x0000)
struct BP_BattlePassSystem_C_OnGameStorePurchase final
{
public:
	EGameStorePurchaseType                        PurchaseType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUniqueNetIdRepl                       InUserId;                                          // 0x0008(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         PurchaseRequestId;                                 // 0x0030(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameStoreProductId                    RequestedProductId;                                // 0x0038(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FCloudRequestResult                    Result;                                            // 0x0048(0x0058)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FGameStorePurchaseResult               PurchaseResult;                                    // 0x00A0(0x0038)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          PurchaseListRefreshed;                             // 0x00D8(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattlePassSystem_C_OnGameStorePurchase) == 0x000008, "Wrong alignment on BP_BattlePassSystem_C_OnGameStorePurchase");
static_assert(sizeof(BP_BattlePassSystem_C_OnGameStorePurchase) == 0x0000E0, "Wrong size on BP_BattlePassSystem_C_OnGameStorePurchase");
static_assert(offsetof(BP_BattlePassSystem_C_OnGameStorePurchase, PurchaseType) == 0x000000, "Member 'BP_BattlePassSystem_C_OnGameStorePurchase::PurchaseType' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_OnGameStorePurchase, InUserId) == 0x000008, "Member 'BP_BattlePassSystem_C_OnGameStorePurchase::InUserId' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_OnGameStorePurchase, PurchaseRequestId) == 0x000030, "Member 'BP_BattlePassSystem_C_OnGameStorePurchase::PurchaseRequestId' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_OnGameStorePurchase, RequestedProductId) == 0x000038, "Member 'BP_BattlePassSystem_C_OnGameStorePurchase::RequestedProductId' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_OnGameStorePurchase, Result) == 0x000048, "Member 'BP_BattlePassSystem_C_OnGameStorePurchase::Result' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_OnGameStorePurchase, PurchaseResult) == 0x0000A0, "Member 'BP_BattlePassSystem_C_OnGameStorePurchase::PurchaseResult' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_OnGameStorePurchase, PurchaseListRefreshed) == 0x0000D8, "Member 'BP_BattlePassSystem_C_OnGameStorePurchase::PurchaseListRefreshed' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.Experience Awarded
// 0x0030 (0x0030 - 0x0000)
struct BP_BattlePassSystem_C_Experience_Awarded final
{
public:
	class AHumanPlayerController*                 Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCloudBattlePassExperienceEvent        Event;                                             // 0x0008(0x0024)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(BP_BattlePassSystem_C_Experience_Awarded) == 0x000008, "Wrong alignment on BP_BattlePassSystem_C_Experience_Awarded");
static_assert(sizeof(BP_BattlePassSystem_C_Experience_Awarded) == 0x000030, "Wrong size on BP_BattlePassSystem_C_Experience_Awarded");
static_assert(offsetof(BP_BattlePassSystem_C_Experience_Awarded, Player) == 0x000000, "Member 'BP_BattlePassSystem_C_Experience_Awarded::Player' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Experience_Awarded, Event) == 0x000008, "Member 'BP_BattlePassSystem_C_Experience_Awarded::Event' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.Request Premium Battle Pass Purchase
// 0x0018 (0x0018 - 0x0000)
struct BP_BattlePassSystem_C_Request_Premium_Battle_Pass_Purchase final
{
public:
	class FName                                   Season;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 PremiumBattlePassProductID;                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattlePassSystem_C_Request_Premium_Battle_Pass_Purchase) == 0x000008, "Wrong alignment on BP_BattlePassSystem_C_Request_Premium_Battle_Pass_Purchase");
static_assert(sizeof(BP_BattlePassSystem_C_Request_Premium_Battle_Pass_Purchase) == 0x000018, "Wrong size on BP_BattlePassSystem_C_Request_Premium_Battle_Pass_Purchase");
static_assert(offsetof(BP_BattlePassSystem_C_Request_Premium_Battle_Pass_Purchase, Season) == 0x000000, "Member 'BP_BattlePassSystem_C_Request_Premium_Battle_Pass_Purchase::Season' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Request_Premium_Battle_Pass_Purchase, PremiumBattlePassProductID) == 0x000008, "Member 'BP_BattlePassSystem_C_Request_Premium_Battle_Pass_Purchase::PremiumBattlePassProductID' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.Request Rewards Claim
// 0x0001 (0x0001 - 0x0000)
struct BP_BattlePassSystem_C_Request_Rewards_Claim final
{
public:
	bool                                          IsLegacy;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattlePassSystem_C_Request_Rewards_Claim) == 0x000001, "Wrong alignment on BP_BattlePassSystem_C_Request_Rewards_Claim");
static_assert(sizeof(BP_BattlePassSystem_C_Request_Rewards_Claim) == 0x000001, "Wrong size on BP_BattlePassSystem_C_Request_Rewards_Claim");
static_assert(offsetof(BP_BattlePassSystem_C_Request_Rewards_Claim, IsLegacy) == 0x000000, "Member 'BP_BattlePassSystem_C_Request_Rewards_Claim::IsLegacy' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.Request Level Purchase
// 0x000C (0x000C - 0x0000)
struct BP_BattlePassSystem_C_Request_Level_Purchase final
{
public:
	class FName                                   SeasonName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Levels;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattlePassSystem_C_Request_Level_Purchase) == 0x000004, "Wrong alignment on BP_BattlePassSystem_C_Request_Level_Purchase");
static_assert(sizeof(BP_BattlePassSystem_C_Request_Level_Purchase) == 0x00000C, "Wrong size on BP_BattlePassSystem_C_Request_Level_Purchase");
static_assert(offsetof(BP_BattlePassSystem_C_Request_Level_Purchase, SeasonName) == 0x000000, "Member 'BP_BattlePassSystem_C_Request_Level_Purchase::SeasonName' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Request_Level_Purchase, Levels) == 0x000008, "Member 'BP_BattlePassSystem_C_Request_Level_Purchase::Levels' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.Tick
// 0x0004 (0x0004 - 0x0000)
struct BP_BattlePassSystem_C_Tick final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattlePassSystem_C_Tick) == 0x000004, "Wrong alignment on BP_BattlePassSystem_C_Tick");
static_assert(sizeof(BP_BattlePassSystem_C_Tick) == 0x000004, "Wrong size on BP_BattlePassSystem_C_Tick");
static_assert(offsetof(BP_BattlePassSystem_C_Tick, DeltaTime) == 0x000000, "Member 'BP_BattlePassSystem_C_Tick::DeltaTime' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.All Battle Pass Seasons State Finished
// 0x00D0 (0x00D0 - 0x0000)
struct BP_BattlePassSystem_C_All_Battle_Pass_Seasons_State_Finished final
{
public:
	struct FCloudRequestResult                    RequestResult;                                     // 0x0000(0x0058)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FCloudBattlePassSeasonsState           Data;                                              // 0x0058(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_BattlePassSystem_C_All_Battle_Pass_Seasons_State_Finished) == 0x000008, "Wrong alignment on BP_BattlePassSystem_C_All_Battle_Pass_Seasons_State_Finished");
static_assert(sizeof(BP_BattlePassSystem_C_All_Battle_Pass_Seasons_State_Finished) == 0x0000D0, "Wrong size on BP_BattlePassSystem_C_All_Battle_Pass_Seasons_State_Finished");
static_assert(offsetof(BP_BattlePassSystem_C_All_Battle_Pass_Seasons_State_Finished, RequestResult) == 0x000000, "Member 'BP_BattlePassSystem_C_All_Battle_Pass_Seasons_State_Finished::RequestResult' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_All_Battle_Pass_Seasons_State_Finished, Data) == 0x000058, "Member 'BP_BattlePassSystem_C_All_Battle_Pass_Seasons_State_Finished::Data' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.Purchase Battle Pass Level Finished
// 0x0080 (0x0080 - 0x0000)
struct BP_BattlePassSystem_C_Purchase_Battle_Pass_Level_Finished final
{
public:
	struct FCloudRequestResult                    RequestResult;                                     // 0x0000(0x0058)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FCloudBattlePassLevelPurchase          Data;                                              // 0x0058(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_BattlePassSystem_C_Purchase_Battle_Pass_Level_Finished) == 0x000008, "Wrong alignment on BP_BattlePassSystem_C_Purchase_Battle_Pass_Level_Finished");
static_assert(sizeof(BP_BattlePassSystem_C_Purchase_Battle_Pass_Level_Finished) == 0x000080, "Wrong size on BP_BattlePassSystem_C_Purchase_Battle_Pass_Level_Finished");
static_assert(offsetof(BP_BattlePassSystem_C_Purchase_Battle_Pass_Level_Finished, RequestResult) == 0x000000, "Member 'BP_BattlePassSystem_C_Purchase_Battle_Pass_Level_Finished::RequestResult' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Purchase_Battle_Pass_Level_Finished, Data) == 0x000058, "Member 'BP_BattlePassSystem_C_Purchase_Battle_Pass_Level_Finished::Data' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.Claim Battle Pass Rewards Finished
// 0x0078 (0x0078 - 0x0000)
struct BP_BattlePassSystem_C_Claim_Battle_Pass_Rewards_Finished final
{
public:
	struct FCloudRequestResult                    RequestResult;                                     // 0x0000(0x0058)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FCloudBattlePassRewardsClaim           Data;                                              // 0x0058(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_BattlePassSystem_C_Claim_Battle_Pass_Rewards_Finished) == 0x000008, "Wrong alignment on BP_BattlePassSystem_C_Claim_Battle_Pass_Rewards_Finished");
static_assert(sizeof(BP_BattlePassSystem_C_Claim_Battle_Pass_Rewards_Finished) == 0x000078, "Wrong size on BP_BattlePassSystem_C_Claim_Battle_Pass_Rewards_Finished");
static_assert(offsetof(BP_BattlePassSystem_C_Claim_Battle_Pass_Rewards_Finished, RequestResult) == 0x000000, "Member 'BP_BattlePassSystem_C_Claim_Battle_Pass_Rewards_Finished::RequestResult' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Claim_Battle_Pass_Rewards_Finished, Data) == 0x000058, "Member 'BP_BattlePassSystem_C_Claim_Battle_Pass_Rewards_Finished::Data' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.Get Season Name
// 0x0018 (0x0018 - 0x0000)
struct BP_BattlePassSystem_C_Get_Season_Name final
{
public:
	E_BattlePassSeasonType                        SeasonType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Active_Season_Name;                                // 0x0004(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BattlePassSeasonType                        Temp_byte_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattlePassSystem_C_Get_Season_Name) == 0x000004, "Wrong alignment on BP_BattlePassSystem_C_Get_Season_Name");
static_assert(sizeof(BP_BattlePassSystem_C_Get_Season_Name) == 0x000018, "Wrong size on BP_BattlePassSystem_C_Get_Season_Name");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Name, SeasonType) == 0x000000, "Member 'BP_BattlePassSystem_C_Get_Season_Name::SeasonType' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Name, Active_Season_Name) == 0x000004, "Member 'BP_BattlePassSystem_C_Get_Season_Name::Active_Season_Name' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Name, Temp_byte_Variable) == 0x00000C, "Member 'BP_BattlePassSystem_C_Get_Season_Name::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Name, K2Node_Select_Default) == 0x000010, "Member 'BP_BattlePassSystem_C_Get_Season_Name::K2Node_Select_Default' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.Is Season Active
// 0x0002 (0x0002 - 0x0000)
struct BP_BattlePassSystem_C_Is_Season_Active final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattlePassSystem_C_Is_Season_Active) == 0x000001, "Wrong alignment on BP_BattlePassSystem_C_Is_Season_Active");
static_assert(sizeof(BP_BattlePassSystem_C_Is_Season_Active) == 0x000002, "Wrong size on BP_BattlePassSystem_C_Is_Season_Active");
static_assert(offsetof(BP_BattlePassSystem_C_Is_Season_Active, ReturnValue) == 0x000000, "Member 'BP_BattlePassSystem_C_Is_Season_Active::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Is_Season_Active, CallFunc_NotEqual_NameName_ReturnValue) == 0x000001, "Member 'BP_BattlePassSystem_C_Is_Season_Active::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.Process Seasons Data
// 0x0250 (0x0250 - 0x0000)
struct BP_BattlePassSystem_C_Process_Seasons_Data final
{
public:
	struct FCloudBattlePassSeasonsState           CloudBattlePassSeasonsState;                       // 0x0000(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Success;                                           // 0x0078(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x007C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0088(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x00A4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B2[0x2];                                       // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Contains_ReturnValue;                 // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Contains_ReturnValue_1;               // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   K2Node_Select_Default;                             // 0x00BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x00C4(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x00D4(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_GetCloudTime_ReturnValue;                 // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_GetCloudTime_ReturnValue_1;               // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_Subtract_DateTimeDateTime_ReturnValue;    // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTotalSeconds_ReturnValue;              // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             CallFunc_DataProviderFindTableByAssetTable_ReturnValue; // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBattlePassSeason                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x0118(0x00A0)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x01C0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_Subtract_DateTimeDateTime_ReturnValue_1;  // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTotalSeconds_ReturnValue_1;            // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCloudBattlePassSeasonState            CallFunc_Map_Find_Value;                           // 0x01D4(0x001C)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F1[0x3];                                      // 0x01F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x01F8(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Convert_Total_XP_to_Level_Level;          // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Convert_Total_XP_to_Level_XP_within_Level; // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Convert_Total_XP_to_Level_XP_for_Next_Level; // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20C[0x4];                                      // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_MakeTimespan_ReturnValue;                 // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_TimespanTimespan_ReturnValue;     // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_222[0x6];                                      // 0x0222(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             CallFunc_DataProviderFindTableByAssetTable_ReturnValue_1; // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0230(0x0010)(ReferenceParm)
	class FName                                   K2Node_Select_Default_1;                           // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattlePassSystem_C_Process_Seasons_Data) == 0x000008, "Wrong alignment on BP_BattlePassSystem_C_Process_Seasons_Data");
static_assert(sizeof(BP_BattlePassSystem_C_Process_Seasons_Data) == 0x000250, "Wrong size on BP_BattlePassSystem_C_Process_Seasons_Data");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Seasons_Data, CloudBattlePassSeasonsState) == 0x000000, "Member 'BP_BattlePassSystem_C_Process_Seasons_Data::CloudBattlePassSeasonsState' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Seasons_Data, Success) == 0x000078, "Member 'BP_BattlePassSystem_C_Process_Seasons_Data::Success' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Seasons_Data, Temp_name_Variable) == 0x00007C, "Member 'BP_BattlePassSystem_C_Process_Seasons_Data::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Seasons_Data, CallFunc_Map_Keys_Keys) == 0x000088, "Member 'BP_BattlePassSystem_C_Process_Seasons_Data::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Seasons_Data, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'BP_BattlePassSystem_C_Process_Seasons_Data::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Seasons_Data, Temp_bool_True_if_break_was_hit_Variable) == 0x00009C, "Member 'BP_BattlePassSystem_C_Process_Seasons_Data::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Seasons_Data, Temp_int_Array_Index_Variable) == 0x0000A0, "Member 'BP_BattlePassSystem_C_Process_Seasons_Data::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Seasons_Data, CallFunc_Array_Get_Item) == 0x0000A4, "Member 'BP_BattlePassSystem_C_Process_Seasons_Data::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Seasons_Data, Temp_int_Loop_Counter_Variable) == 0x0000AC, "Member 'BP_BattlePassSystem_C_Process_Seasons_Data::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Seasons_Data, Temp_bool_Variable) == 0x0000B0, "Member 'BP_BattlePassSystem_C_Process_Seasons_Data::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Seasons_Data, CallFunc_Less_IntInt_ReturnValue) == 0x0000B1, "Member 'BP_BattlePassSystem_C_Process_Seasons_Data::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Seasons_Data, CallFunc_Add_IntInt_ReturnValue) == 0x0000B4, "Member 'BP_BattlePassSystem_C_Process_Seasons_Data::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Seasons_Data, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0000B8, "Member 'BP_BattlePassSystem_C_Process_Seasons_Data::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Seasons_Data, CallFunc_NotEqual_NameName_ReturnValue) == 0x0000B9, "Member 'BP_BattlePassSystem_C_Process_Seasons_Data::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Seasons_Data, CallFunc_Map_Contains_ReturnValue) == 0x0000BA, "Member 'BP_BattlePassSystem_C_Process_Seasons_Data::CallFunc_Map_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Seasons_Data, CallFunc_Map_Contains_ReturnValue_1) == 0x0000BB, "Member 'BP_BattlePassSystem_C_Process_Seasons_Data::CallFunc_Map_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Seasons_Data, K2Node_Select_Default) == 0x0000BC, "Member 'BP_BattlePassSystem_C_Process_Seasons_Data::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Seasons_Data, K2Node_CreateDelegate_OutputDelegate) == 0x0000C4, "Member 'BP_BattlePassSystem_C_Process_Seasons_Data::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Seasons_Data, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000D4, "Member 'BP_BattlePassSystem_C_Process_Seasons_Data::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Seasons_Data, CallFunc_GetCloudTime_ReturnValue) == 0x0000E8, "Member 'BP_BattlePassSystem_C_Process_Seasons_Data::CallFunc_GetCloudTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Seasons_Data, CallFunc_GetCloudTime_ReturnValue_1) == 0x0000F0, "Member 'BP_BattlePassSystem_C_Process_Seasons_Data::CallFunc_GetCloudTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Seasons_Data, CallFunc_Subtract_DateTimeDateTime_ReturnValue) == 0x0000F8, "Member 'BP_BattlePassSystem_C_Process_Seasons_Data::CallFunc_Subtract_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Seasons_Data, CallFunc_GetTotalSeconds_ReturnValue) == 0x000100, "Member 'BP_BattlePassSystem_C_Process_Seasons_Data::CallFunc_GetTotalSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Seasons_Data, CallFunc_DataProviderFindTableByAssetTable_ReturnValue) == 0x000108, "Member 'BP_BattlePassSystem_C_Process_Seasons_Data::CallFunc_DataProviderFindTableByAssetTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Seasons_Data, CallFunc_Add_FloatFloat_ReturnValue) == 0x000110, "Member 'BP_BattlePassSystem_C_Process_Seasons_Data::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Seasons_Data, CallFunc_GetDataTableRowFromName_OutRow) == 0x000118, "Member 'BP_BattlePassSystem_C_Process_Seasons_Data::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Seasons_Data, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0001B8, "Member 'BP_BattlePassSystem_C_Process_Seasons_Data::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Seasons_Data, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0001C0, "Member 'BP_BattlePassSystem_C_Process_Seasons_Data::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Seasons_Data, CallFunc_Subtract_DateTimeDateTime_ReturnValue_1) == 0x0001C8, "Member 'BP_BattlePassSystem_C_Process_Seasons_Data::CallFunc_Subtract_DateTimeDateTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Seasons_Data, CallFunc_GetTotalSeconds_ReturnValue_1) == 0x0001D0, "Member 'BP_BattlePassSystem_C_Process_Seasons_Data::CallFunc_GetTotalSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Seasons_Data, CallFunc_Map_Find_Value) == 0x0001D4, "Member 'BP_BattlePassSystem_C_Process_Seasons_Data::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Seasons_Data, CallFunc_Map_Find_ReturnValue) == 0x0001F0, "Member 'BP_BattlePassSystem_C_Process_Seasons_Data::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Seasons_Data, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0001F4, "Member 'BP_BattlePassSystem_C_Process_Seasons_Data::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Seasons_Data, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x0001F8, "Member 'BP_BattlePassSystem_C_Process_Seasons_Data::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Seasons_Data, CallFunc_Convert_Total_XP_to_Level_Level) == 0x000200, "Member 'BP_BattlePassSystem_C_Process_Seasons_Data::CallFunc_Convert_Total_XP_to_Level_Level' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Seasons_Data, CallFunc_Convert_Total_XP_to_Level_XP_within_Level) == 0x000204, "Member 'BP_BattlePassSystem_C_Process_Seasons_Data::CallFunc_Convert_Total_XP_to_Level_XP_within_Level' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Seasons_Data, CallFunc_Convert_Total_XP_to_Level_XP_for_Next_Level) == 0x000208, "Member 'BP_BattlePassSystem_C_Process_Seasons_Data::CallFunc_Convert_Total_XP_to_Level_XP_for_Next_Level' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Seasons_Data, CallFunc_MakeTimespan_ReturnValue) == 0x000210, "Member 'BP_BattlePassSystem_C_Process_Seasons_Data::CallFunc_MakeTimespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Seasons_Data, Temp_name_Variable_1) == 0x000218, "Member 'BP_BattlePassSystem_C_Process_Seasons_Data::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Seasons_Data, CallFunc_Greater_TimespanTimespan_ReturnValue) == 0x000220, "Member 'BP_BattlePassSystem_C_Process_Seasons_Data::CallFunc_Greater_TimespanTimespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Seasons_Data, Temp_bool_Variable_1) == 0x000221, "Member 'BP_BattlePassSystem_C_Process_Seasons_Data::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Seasons_Data, CallFunc_DataProviderFindTableByAssetTable_ReturnValue_1) == 0x000228, "Member 'BP_BattlePassSystem_C_Process_Seasons_Data::CallFunc_DataProviderFindTableByAssetTable_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Seasons_Data, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000230, "Member 'BP_BattlePassSystem_C_Process_Seasons_Data::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Seasons_Data, K2Node_Select_Default_1) == 0x000240, "Member 'BP_BattlePassSystem_C_Process_Seasons_Data::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Seasons_Data, CallFunc_Array_Contains_ReturnValue) == 0x000248, "Member 'BP_BattlePassSystem_C_Process_Seasons_Data::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.Get Level
// 0x0008 (0x0008 - 0x0000)
struct BP_BattlePassSystem_C_Get_Level final
{
public:
	int32                                         Level;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattlePassSystem_C_Get_Level) == 0x000004, "Wrong alignment on BP_BattlePassSystem_C_Get_Level");
static_assert(sizeof(BP_BattlePassSystem_C_Get_Level) == 0x000008, "Wrong size on BP_BattlePassSystem_C_Get_Level");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Level, Level) == 0x000000, "Member 'BP_BattlePassSystem_C_Get_Level::Level' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Level, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000004, "Member 'BP_BattlePassSystem_C_Get_Level::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.Convert Total XP to Level
// 0x0128 (0x0128 - 0x0000)
struct BP_BattlePassSystem_C_Convert_Total_XP_to_Level final
{
public:
	class FName                                   Season;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Total_XP;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Level;                                             // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         XP_within_Level;                                   // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         XP_for_Next_Level;                                 // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Reached_Level;                                     // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             CallFunc_DataProviderFindTableByAssetTable_ReturnValue; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBattlePassSeason                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x0040(0x00A0)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBattlePassLevel                       CallFunc_Array_Get_Item;                           // 0x00E8(0x0028)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11D[0x3];                                      // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattlePassSystem_C_Convert_Total_XP_to_Level) == 0x000008, "Wrong alignment on BP_BattlePassSystem_C_Convert_Total_XP_to_Level");
static_assert(sizeof(BP_BattlePassSystem_C_Convert_Total_XP_to_Level) == 0x000128, "Wrong size on BP_BattlePassSystem_C_Convert_Total_XP_to_Level");
static_assert(offsetof(BP_BattlePassSystem_C_Convert_Total_XP_to_Level, Season) == 0x000000, "Member 'BP_BattlePassSystem_C_Convert_Total_XP_to_Level::Season' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Convert_Total_XP_to_Level, Total_XP) == 0x000008, "Member 'BP_BattlePassSystem_C_Convert_Total_XP_to_Level::Total_XP' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Convert_Total_XP_to_Level, Level) == 0x00000C, "Member 'BP_BattlePassSystem_C_Convert_Total_XP_to_Level::Level' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Convert_Total_XP_to_Level, XP_within_Level) == 0x000010, "Member 'BP_BattlePassSystem_C_Convert_Total_XP_to_Level::XP_within_Level' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Convert_Total_XP_to_Level, XP_for_Next_Level) == 0x000014, "Member 'BP_BattlePassSystem_C_Convert_Total_XP_to_Level::XP_for_Next_Level' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Convert_Total_XP_to_Level, Reached_Level) == 0x000018, "Member 'BP_BattlePassSystem_C_Convert_Total_XP_to_Level::Reached_Level' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Convert_Total_XP_to_Level, Temp_bool_True_if_break_was_hit_Variable) == 0x00001C, "Member 'BP_BattlePassSystem_C_Convert_Total_XP_to_Level::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Convert_Total_XP_to_Level, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_BattlePassSystem_C_Convert_Total_XP_to_Level::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Convert_Total_XP_to_Level, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_BattlePassSystem_C_Convert_Total_XP_to_Level::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Convert_Total_XP_to_Level, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_BattlePassSystem_C_Convert_Total_XP_to_Level::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Convert_Total_XP_to_Level, CallFunc_Subtract_IntInt_ReturnValue) == 0x00002C, "Member 'BP_BattlePassSystem_C_Convert_Total_XP_to_Level::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Convert_Total_XP_to_Level, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000030, "Member 'BP_BattlePassSystem_C_Convert_Total_XP_to_Level::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Convert_Total_XP_to_Level, CallFunc_DataProviderFindTableByAssetTable_ReturnValue) == 0x000038, "Member 'BP_BattlePassSystem_C_Convert_Total_XP_to_Level::CallFunc_DataProviderFindTableByAssetTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Convert_Total_XP_to_Level, CallFunc_GetDataTableRowFromName_OutRow) == 0x000040, "Member 'BP_BattlePassSystem_C_Convert_Total_XP_to_Level::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Convert_Total_XP_to_Level, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000E0, "Member 'BP_BattlePassSystem_C_Convert_Total_XP_to_Level::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Convert_Total_XP_to_Level, CallFunc_Array_Length_ReturnValue) == 0x0000E4, "Member 'BP_BattlePassSystem_C_Convert_Total_XP_to_Level::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Convert_Total_XP_to_Level, CallFunc_Array_Get_Item) == 0x0000E8, "Member 'BP_BattlePassSystem_C_Convert_Total_XP_to_Level::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Convert_Total_XP_to_Level, CallFunc_Less_IntInt_ReturnValue) == 0x000110, "Member 'BP_BattlePassSystem_C_Convert_Total_XP_to_Level::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Convert_Total_XP_to_Level, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000114, "Member 'BP_BattlePassSystem_C_Convert_Total_XP_to_Level::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Convert_Total_XP_to_Level, CallFunc_Array_Length_ReturnValue_1) == 0x000118, "Member 'BP_BattlePassSystem_C_Convert_Total_XP_to_Level::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Convert_Total_XP_to_Level, CallFunc_Less_IntInt_ReturnValue_1) == 0x00011C, "Member 'BP_BattlePassSystem_C_Convert_Total_XP_to_Level::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Convert_Total_XP_to_Level, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000120, "Member 'BP_BattlePassSystem_C_Convert_Total_XP_to_Level::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.Get Unclaimed Rewards
// 0x02B8 (0x02B8 - 0x0000)
struct BP_BattlePassSystem_C_Get_Unclaimed_Rewards final
{
public:
	bool                                          IsLegacy;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           Seasons;                                           // 0x0008(0x0010)(Parm, OutParm)
	TArray<struct FS_BattlePassLevelRewardFull>   Free_Rewards;                                      // 0x0018(0x0010)(Parm, OutParm)
	TArray<struct FS_BattlePassLevelRewardFull>   Premium_Rewards;                                   // 0x0028(0x0010)(Parm, OutParm)
	TArray<class FName>                           SeasonsArray;                                      // 0x0038(0x0010)(Edit, BlueprintVisible)
	TArray<struct FS_BattlePassLevelRewardFull>   Accumulated_Premium_Rewards;                       // 0x0048(0x0010)(Edit, BlueprintVisible)
	TArray<struct FS_BattlePassLevelRewardFull>   Accumulated_Free_Rewards;                          // 0x0058(0x0010)(Edit, BlueprintVisible)
	TArray<class FName>                           Accumulated_Seasons;                               // 0x0068(0x0010)(Edit, BlueprintVisible)
	struct FCloudBattlePassSeasonState            Player_Progress_In_Season;                         // 0x0078(0x001C)(Edit, BlueprintVisible, NoDestructor)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBattlePassSeason                      Season_Info;                                       // 0x0098(0x00A0)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_155[0x3];                                      // 0x0155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0160(0x0010)(ReferenceParm)
	class UDataTable*                             CallFunc_DataProviderFindTableByAssetTable_ReturnValue; // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17D[0x3];                                      // 0x017D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Convert_Total_XP_to_Level_Level;          // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Convert_Total_XP_to_Level_XP_within_Level; // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Convert_Total_XP_to_Level_XP_for_Next_Level; // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBattlePassSeason                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x01A0(0x00A0)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_241[0x3];                                      // 0x0241(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue_2;            // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_249[0x3];                                      // 0x0249(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_251[0x7];                                      // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_BattlePassLevelRewardFull>   CallFunc_Compile_Rewards_in_Level_Range_Rewards;   // 0x0258(0x0010)(ReferenceParm)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_269[0x3];                                      // 0x0269(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_275[0x3];                                      // 0x0275(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_BattlePassLevelRewardFull>   CallFunc_Compile_Rewards_in_Level_Range_Rewards_1; // 0x0278(0x0010)(ReferenceParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_289[0x3];                                      // 0x0289(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x0291(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0292(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_293[0x1];                                      // 0x0293(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCloudBattlePassSeasonState            CallFunc_Map_Find_Value;                           // 0x0294(0x001C)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattlePassSystem_C_Get_Unclaimed_Rewards) == 0x000008, "Wrong alignment on BP_BattlePassSystem_C_Get_Unclaimed_Rewards");
static_assert(sizeof(BP_BattlePassSystem_C_Get_Unclaimed_Rewards) == 0x0002B8, "Wrong size on BP_BattlePassSystem_C_Get_Unclaimed_Rewards");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Unclaimed_Rewards, IsLegacy) == 0x000000, "Member 'BP_BattlePassSystem_C_Get_Unclaimed_Rewards::IsLegacy' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Unclaimed_Rewards, Seasons) == 0x000008, "Member 'BP_BattlePassSystem_C_Get_Unclaimed_Rewards::Seasons' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Unclaimed_Rewards, Free_Rewards) == 0x000018, "Member 'BP_BattlePassSystem_C_Get_Unclaimed_Rewards::Free_Rewards' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Unclaimed_Rewards, Premium_Rewards) == 0x000028, "Member 'BP_BattlePassSystem_C_Get_Unclaimed_Rewards::Premium_Rewards' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Unclaimed_Rewards, SeasonsArray) == 0x000038, "Member 'BP_BattlePassSystem_C_Get_Unclaimed_Rewards::SeasonsArray' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Unclaimed_Rewards, Accumulated_Premium_Rewards) == 0x000048, "Member 'BP_BattlePassSystem_C_Get_Unclaimed_Rewards::Accumulated_Premium_Rewards' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Unclaimed_Rewards, Accumulated_Free_Rewards) == 0x000058, "Member 'BP_BattlePassSystem_C_Get_Unclaimed_Rewards::Accumulated_Free_Rewards' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Unclaimed_Rewards, Accumulated_Seasons) == 0x000068, "Member 'BP_BattlePassSystem_C_Get_Unclaimed_Rewards::Accumulated_Seasons' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Unclaimed_Rewards, Player_Progress_In_Season) == 0x000078, "Member 'BP_BattlePassSystem_C_Get_Unclaimed_Rewards::Player_Progress_In_Season' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Unclaimed_Rewards, Season_Info) == 0x000098, "Member 'BP_BattlePassSystem_C_Get_Unclaimed_Rewards::Season_Info' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Unclaimed_Rewards, Temp_int_Array_Index_Variable) == 0x000138, "Member 'BP_BattlePassSystem_C_Get_Unclaimed_Rewards::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Unclaimed_Rewards, Temp_int_Loop_Counter_Variable) == 0x00013C, "Member 'BP_BattlePassSystem_C_Get_Unclaimed_Rewards::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Unclaimed_Rewards, CallFunc_Array_Get_Item) == 0x000140, "Member 'BP_BattlePassSystem_C_Get_Unclaimed_Rewards::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Unclaimed_Rewards, CallFunc_Add_IntInt_ReturnValue) == 0x000148, "Member 'BP_BattlePassSystem_C_Get_Unclaimed_Rewards::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Unclaimed_Rewards, CallFunc_Array_Length_ReturnValue) == 0x00014C, "Member 'BP_BattlePassSystem_C_Get_Unclaimed_Rewards::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Unclaimed_Rewards, Temp_int_Loop_Counter_Variable_1) == 0x000150, "Member 'BP_BattlePassSystem_C_Get_Unclaimed_Rewards::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Unclaimed_Rewards, CallFunc_Less_IntInt_ReturnValue) == 0x000154, "Member 'BP_BattlePassSystem_C_Get_Unclaimed_Rewards::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Unclaimed_Rewards, CallFunc_Add_IntInt_ReturnValue_1) == 0x000158, "Member 'BP_BattlePassSystem_C_Get_Unclaimed_Rewards::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Unclaimed_Rewards, CallFunc_Map_Keys_Keys) == 0x000160, "Member 'BP_BattlePassSystem_C_Get_Unclaimed_Rewards::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Unclaimed_Rewards, CallFunc_DataProviderFindTableByAssetTable_ReturnValue) == 0x000170, "Member 'BP_BattlePassSystem_C_Get_Unclaimed_Rewards::CallFunc_DataProviderFindTableByAssetTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Unclaimed_Rewards, CallFunc_Array_Length_ReturnValue_1) == 0x000178, "Member 'BP_BattlePassSystem_C_Get_Unclaimed_Rewards::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Unclaimed_Rewards, CallFunc_Less_IntInt_ReturnValue_1) == 0x00017C, "Member 'BP_BattlePassSystem_C_Get_Unclaimed_Rewards::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Unclaimed_Rewards, CallFunc_Array_AddUnique_ReturnValue) == 0x000180, "Member 'BP_BattlePassSystem_C_Get_Unclaimed_Rewards::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Unclaimed_Rewards, CallFunc_Array_AddUnique_ReturnValue_1) == 0x000184, "Member 'BP_BattlePassSystem_C_Get_Unclaimed_Rewards::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Unclaimed_Rewards, Temp_int_Array_Index_Variable_1) == 0x000188, "Member 'BP_BattlePassSystem_C_Get_Unclaimed_Rewards::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Unclaimed_Rewards, CallFunc_Convert_Total_XP_to_Level_Level) == 0x00018C, "Member 'BP_BattlePassSystem_C_Get_Unclaimed_Rewards::CallFunc_Convert_Total_XP_to_Level_Level' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Unclaimed_Rewards, CallFunc_Convert_Total_XP_to_Level_XP_within_Level) == 0x000190, "Member 'BP_BattlePassSystem_C_Get_Unclaimed_Rewards::CallFunc_Convert_Total_XP_to_Level_XP_within_Level' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Unclaimed_Rewards, CallFunc_Convert_Total_XP_to_Level_XP_for_Next_Level) == 0x000194, "Member 'BP_BattlePassSystem_C_Get_Unclaimed_Rewards::CallFunc_Convert_Total_XP_to_Level_XP_for_Next_Level' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Unclaimed_Rewards, CallFunc_Array_Get_Item_1) == 0x000198, "Member 'BP_BattlePassSystem_C_Get_Unclaimed_Rewards::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Unclaimed_Rewards, CallFunc_GetDataTableRowFromName_OutRow) == 0x0001A0, "Member 'BP_BattlePassSystem_C_Get_Unclaimed_Rewards::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Unclaimed_Rewards, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000240, "Member 'BP_BattlePassSystem_C_Get_Unclaimed_Rewards::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Unclaimed_Rewards, CallFunc_Array_AddUnique_ReturnValue_2) == 0x000244, "Member 'BP_BattlePassSystem_C_Get_Unclaimed_Rewards::CallFunc_Array_AddUnique_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Unclaimed_Rewards, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x000248, "Member 'BP_BattlePassSystem_C_Get_Unclaimed_Rewards::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Unclaimed_Rewards, CallFunc_Add_IntInt_ReturnValue_2) == 0x00024C, "Member 'BP_BattlePassSystem_C_Get_Unclaimed_Rewards::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Unclaimed_Rewards, CallFunc_Greater_IntInt_ReturnValue) == 0x000250, "Member 'BP_BattlePassSystem_C_Get_Unclaimed_Rewards::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Unclaimed_Rewards, CallFunc_Compile_Rewards_in_Level_Range_Rewards) == 0x000258, "Member 'BP_BattlePassSystem_C_Get_Unclaimed_Rewards::CallFunc_Compile_Rewards_in_Level_Range_Rewards' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Unclaimed_Rewards, CallFunc_BooleanAND_ReturnValue) == 0x000268, "Member 'BP_BattlePassSystem_C_Get_Unclaimed_Rewards::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Unclaimed_Rewards, CallFunc_Array_Length_ReturnValue_2) == 0x00026C, "Member 'BP_BattlePassSystem_C_Get_Unclaimed_Rewards::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Unclaimed_Rewards, CallFunc_Add_IntInt_ReturnValue_3) == 0x000270, "Member 'BP_BattlePassSystem_C_Get_Unclaimed_Rewards::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Unclaimed_Rewards, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000274, "Member 'BP_BattlePassSystem_C_Get_Unclaimed_Rewards::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Unclaimed_Rewards, CallFunc_Compile_Rewards_in_Level_Range_Rewards_1) == 0x000278, "Member 'BP_BattlePassSystem_C_Get_Unclaimed_Rewards::CallFunc_Compile_Rewards_in_Level_Range_Rewards_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Unclaimed_Rewards, CallFunc_Not_PreBool_ReturnValue) == 0x000288, "Member 'BP_BattlePassSystem_C_Get_Unclaimed_Rewards::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Unclaimed_Rewards, CallFunc_Array_Length_ReturnValue_3) == 0x00028C, "Member 'BP_BattlePassSystem_C_Get_Unclaimed_Rewards::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Unclaimed_Rewards, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000290, "Member 'BP_BattlePassSystem_C_Get_Unclaimed_Rewards::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Unclaimed_Rewards, CallFunc_Greater_IntInt_ReturnValue_3) == 0x000291, "Member 'BP_BattlePassSystem_C_Get_Unclaimed_Rewards::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Unclaimed_Rewards, CallFunc_Not_PreBool_ReturnValue_1) == 0x000292, "Member 'BP_BattlePassSystem_C_Get_Unclaimed_Rewards::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Unclaimed_Rewards, CallFunc_Map_Find_Value) == 0x000294, "Member 'BP_BattlePassSystem_C_Get_Unclaimed_Rewards::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Unclaimed_Rewards, CallFunc_Map_Find_ReturnValue) == 0x0002B0, "Member 'BP_BattlePassSystem_C_Get_Unclaimed_Rewards::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.IsLegacySeasonInProgress
// 0x000C (0x000C - 0x0000)
struct BP_BattlePassSystem_C_IsLegacySeasonInProgress final
{
public:
	class FName                                   Season;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattlePassSystem_C_IsLegacySeasonInProgress) == 0x000004, "Wrong alignment on BP_BattlePassSystem_C_IsLegacySeasonInProgress");
static_assert(sizeof(BP_BattlePassSystem_C_IsLegacySeasonInProgress) == 0x00000C, "Wrong size on BP_BattlePassSystem_C_IsLegacySeasonInProgress");
static_assert(offsetof(BP_BattlePassSystem_C_IsLegacySeasonInProgress, Season) == 0x000000, "Member 'BP_BattlePassSystem_C_IsLegacySeasonInProgress::Season' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_IsLegacySeasonInProgress, ReturnValue) == 0x000008, "Member 'BP_BattlePassSystem_C_IsLegacySeasonInProgress::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_IsLegacySeasonInProgress, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000009, "Member 'BP_BattlePassSystem_C_IsLegacySeasonInProgress::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_IsLegacySeasonInProgress, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x00000A, "Member 'BP_BattlePassSystem_C_IsLegacySeasonInProgress::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.Compile Rewards in Level Range
// 0x03F0 (0x03F0 - 0x0000)
struct BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range final
{
public:
	class FName                                   Season_Name;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Min_Level;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Max_Level;                                         // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Premium;                                           // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_BattlePassLevelRewardFull>   Rewards;                                           // 0x0018(0x0010)(Parm, OutParm)
	int32                                         ProcessedLevelIndex;                               // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBattlePassLevelRewardExtended         BattlePassLevelRewardExtended;                     // 0x0030(0x0020)(Edit, BlueprintVisible, NoDestructor)
	struct FBattlePassLevelReward                 BattlePassLevelReward;                             // 0x0050(0x0010)(Edit, BlueprintVisible, NoDestructor)
	bool                                          IsLegacy;                                          // 0x0060(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Max_Index;                                         // 0x0064(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Min_Index;                                         // 0x0068(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_BattlePassLevelRewardFull>   Accumulated_Rewards;                               // 0x0070(0x0010)(Edit, BlueprintVisible)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_BattlePassLevelRewardFull           K2Node_MakeStruct_S_BattlePassLevelRewardFull;     // 0x0088(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_BattlePassLevelRewardFull           K2Node_MakeStruct_S_BattlePassLevelRewardFull_1;   // 0x00B0(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_BattlePassLevelRewardFull           K2Node_MakeStruct_S_BattlePassLevelRewardFull_2;   // 0x00D8(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0110(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0150(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0168(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01A8(0x0010)(ReferenceParm)
	struct FCloudBattlePassSeasonState            CallFunc_Map_Find_Value;                           // 0x01B8(0x001C)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D5[0x3];                                      // 0x01D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01D8(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x01F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_202[0x6];                                      // 0x0202(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue_1;            // 0x0208(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0220(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0260(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0270(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0288(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FS_BattlePassLevelRewardFull           K2Node_MakeStruct_S_BattlePassLevelRewardFull_3;   // 0x0298(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetUserControllerId_ReturnValue;          // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C4[0x4];                                      // 0x02C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue; // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasOwnedLabelInShop_OwnedOut;             // 0x02D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x02D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D7[0x1];                                      // 0x02D7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Max_ReturnValue;                          // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DC[0x4];                                      // 0x02DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             CallFunc_DataProviderFindTableByAssetTable_ReturnValue; // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EC[0x4];                                      // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBattlePassSeason                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x02F0(0x00A0)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_391[0x3];                                      // 0x0391(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0394(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x039C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A4[0x4];                                      // 0x03A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBattlePassLevelRewardExtended> K2Node_Select_Default;                             // 0x03A8(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B9[0x7];                                      // 0x03B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBattlePassLevelRewardExtended         CallFunc_Array_Get_Item;                           // 0x03C0(0x0020)(NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E1[0x3];                                      // 0x03E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x03E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range) == 0x000008, "Wrong alignment on BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range");
static_assert(sizeof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range) == 0x0003F0, "Wrong size on BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range");
static_assert(offsetof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range, Season_Name) == 0x000000, "Member 'BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range::Season_Name' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range, Min_Level) == 0x000008, "Member 'BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range::Min_Level' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range, Max_Level) == 0x00000C, "Member 'BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range::Max_Level' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range, Premium) == 0x000010, "Member 'BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range::Premium' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range, Rewards) == 0x000018, "Member 'BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range::Rewards' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range, ProcessedLevelIndex) == 0x000028, "Member 'BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range::ProcessedLevelIndex' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range, BattlePassLevelRewardExtended) == 0x000030, "Member 'BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range::BattlePassLevelRewardExtended' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range, BattlePassLevelReward) == 0x000050, "Member 'BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range::BattlePassLevelReward' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range, IsLegacy) == 0x000060, "Member 'BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range::IsLegacy' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range, Max_Index) == 0x000064, "Member 'BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range::Max_Index' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range, Min_Index) == 0x000068, "Member 'BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range::Min_Index' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range, Accumulated_Rewards) == 0x000070, "Member 'BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range::Accumulated_Rewards' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range, CallFunc_Greater_IntInt_ReturnValue) == 0x000080, "Member 'BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range, K2Node_MakeStruct_S_BattlePassLevelRewardFull) == 0x000088, "Member 'BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range::K2Node_MakeStruct_S_BattlePassLevelRewardFull' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range, CallFunc_Array_Add_ReturnValue) == 0x0000A8, "Member 'BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range, K2Node_MakeStruct_S_BattlePassLevelRewardFull_1) == 0x0000B0, "Member 'BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range::K2Node_MakeStruct_S_BattlePassLevelRewardFull_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range, CallFunc_Array_Add_ReturnValue_1) == 0x0000D0, "Member 'BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range, K2Node_MakeStruct_S_BattlePassLevelRewardFull_2) == 0x0000D8, "Member 'BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range::K2Node_MakeStruct_S_BattlePassLevelRewardFull_2' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range, CallFunc_Array_Add_ReturnValue_2) == 0x0000F8, "Member 'BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range, Temp_int_Variable) == 0x0000FC, "Member 'BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range, CallFunc_Add_IntInt_ReturnValue) == 0x000100, "Member 'BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range, Temp_int_Array_Index_Variable) == 0x000104, "Member 'BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range, CallFunc_Add_IntInt_ReturnValue_1) == 0x000108, "Member 'BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range, CallFunc_Add_IntInt_ReturnValue_2) == 0x00010C, "Member 'BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range, K2Node_MakeStruct_FormatArgumentData) == 0x000110, "Member 'BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range, CallFunc_Conv_NameToText_ReturnValue) == 0x000150, "Member 'BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range, K2Node_MakeStruct_FormatArgumentData_1) == 0x000168, "Member 'BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range, K2Node_MakeArray_Array) == 0x0001A8, "Member 'BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range, CallFunc_Map_Find_Value) == 0x0001B8, "Member 'BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range, CallFunc_Map_Find_ReturnValue) == 0x0001D4, "Member 'BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range, CallFunc_Format_ReturnValue) == 0x0001D8, "Member 'BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range, CallFunc_Conv_TextToString_ReturnValue) == 0x0001F0, "Member 'BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000200, "Member 'BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range, Temp_bool_Variable) == 0x000201, "Member 'BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range, CallFunc_Conv_NameToText_ReturnValue_1) == 0x000208, "Member 'BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range::CallFunc_Conv_NameToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range, K2Node_MakeStruct_FormatArgumentData_2) == 0x000220, "Member 'BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range, K2Node_MakeArray_Array_1) == 0x000260, "Member 'BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range, CallFunc_Format_ReturnValue_1) == 0x000270, "Member 'BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000288, "Member 'BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range, K2Node_MakeStruct_S_BattlePassLevelRewardFull_3) == 0x000298, "Member 'BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range::K2Node_MakeStruct_S_BattlePassLevelRewardFull_3' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range, CallFunc_Array_Add_ReturnValue_3) == 0x0002B8, "Member 'BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range, Temp_int_Loop_Counter_Variable) == 0x0002BC, "Member 'BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range, CallFunc_GetUserControllerId_ReturnValue) == 0x0002C0, "Member 'BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range::CallFunc_GetUserControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue) == 0x0002C8, "Member 'BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range, CallFunc_Add_IntInt_ReturnValue_3) == 0x0002D0, "Member 'BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range, CallFunc_HasOwnedLabelInShop_OwnedOut) == 0x0002D4, "Member 'BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range::CallFunc_HasOwnedLabelInShop_OwnedOut' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range, CallFunc_IsValid_ReturnValue) == 0x0002D5, "Member 'BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0002D6, "Member 'BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range, CallFunc_Max_ReturnValue) == 0x0002D8, "Member 'BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range, CallFunc_DataProviderFindTableByAssetTable_ReturnValue) == 0x0002E0, "Member 'BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range::CallFunc_DataProviderFindTableByAssetTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range, CallFunc_Subtract_IntInt_ReturnValue) == 0x0002E8, "Member 'BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range, CallFunc_GetDataTableRowFromName_OutRow) == 0x0002F0, "Member 'BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000390, "Member 'BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range, CallFunc_Array_Length_ReturnValue) == 0x000394, "Member 'BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range, CallFunc_Min_ReturnValue) == 0x000398, "Member 'BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00039C, "Member 'BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range, CallFunc_Array_Length_ReturnValue_1) == 0x0003A0, "Member 'BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range, K2Node_Select_Default) == 0x0003A8, "Member 'BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0003B8, "Member 'BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range, CallFunc_Array_Get_Item) == 0x0003C0, "Member 'BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range, CallFunc_BooleanAND_ReturnValue) == 0x0003E0, "Member 'BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range, CallFunc_Array_Length_ReturnValue_2) == 0x0003E4, "Member 'BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range, CallFunc_Less_IntInt_ReturnValue) == 0x0003E8, "Member 'BP_BattlePassSystem_C_Compile_Rewards_in_Level_Range::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.Get Current Season Number
// 0x00B8 (0x00B8 - 0x0000)
struct BP_BattlePassSystem_C_Get_Current_Season_Number final
{
public:
	int32                                         Number;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             CallFunc_DataProviderFindTableByAssetTable_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBattlePassSeason                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x0010(0x00A0)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattlePassSystem_C_Get_Current_Season_Number) == 0x000008, "Wrong alignment on BP_BattlePassSystem_C_Get_Current_Season_Number");
static_assert(sizeof(BP_BattlePassSystem_C_Get_Current_Season_Number) == 0x0000B8, "Wrong size on BP_BattlePassSystem_C_Get_Current_Season_Number");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Current_Season_Number, Number) == 0x000000, "Member 'BP_BattlePassSystem_C_Get_Current_Season_Number::Number' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Current_Season_Number, CallFunc_DataProviderFindTableByAssetTable_ReturnValue) == 0x000008, "Member 'BP_BattlePassSystem_C_Get_Current_Season_Number::CallFunc_DataProviderFindTableByAssetTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Current_Season_Number, CallFunc_GetDataTableRowFromName_OutRow) == 0x000010, "Member 'BP_BattlePassSystem_C_Get_Current_Season_Number::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Current_Season_Number, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000B0, "Member 'BP_BattlePassSystem_C_Get_Current_Season_Number::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Current_Season_Number, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0000B1, "Member 'BP_BattlePassSystem_C_Get_Current_Season_Number::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.Get Season Title
// 0x00E0 (0x00E0 - 0x0000)
struct BP_BattlePassSystem_C_Get_Season_Title final
{
public:
	class FName                                   Season;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Title;                                             // 0x0008(0x0018)(Parm, OutParm)
	class FName                                   SeasonName;                                        // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             CallFunc_DataProviderFindTableByAssetTable_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBattlePassSeason                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x0038(0x00A0)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattlePassSystem_C_Get_Season_Title) == 0x000008, "Wrong alignment on BP_BattlePassSystem_C_Get_Season_Title");
static_assert(sizeof(BP_BattlePassSystem_C_Get_Season_Title) == 0x0000E0, "Wrong size on BP_BattlePassSystem_C_Get_Season_Title");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Title, Season) == 0x000000, "Member 'BP_BattlePassSystem_C_Get_Season_Title::Season' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Title, Title) == 0x000008, "Member 'BP_BattlePassSystem_C_Get_Season_Title::Title' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Title, SeasonName) == 0x000020, "Member 'BP_BattlePassSystem_C_Get_Season_Title::SeasonName' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Title, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000028, "Member 'BP_BattlePassSystem_C_Get_Season_Title::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Title, CallFunc_DataProviderFindTableByAssetTable_ReturnValue) == 0x000030, "Member 'BP_BattlePassSystem_C_Get_Season_Title::CallFunc_DataProviderFindTableByAssetTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Title, CallFunc_GetDataTableRowFromName_OutRow) == 0x000038, "Member 'BP_BattlePassSystem_C_Get_Season_Title::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Title, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000D8, "Member 'BP_BattlePassSystem_C_Get_Season_Title::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.Get Current Season Description
// 0x00C8 (0x00C8 - 0x0000)
struct BP_BattlePassSystem_C_Get_Current_Season_Description final
{
public:
	class FText                                   Description;                                       // 0x0000(0x0018)(Parm, OutParm)
	class UDataTable*                             CallFunc_DataProviderFindTableByAssetTable_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBattlePassSeason                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x0020(0x00A0)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattlePassSystem_C_Get_Current_Season_Description) == 0x000008, "Wrong alignment on BP_BattlePassSystem_C_Get_Current_Season_Description");
static_assert(sizeof(BP_BattlePassSystem_C_Get_Current_Season_Description) == 0x0000C8, "Wrong size on BP_BattlePassSystem_C_Get_Current_Season_Description");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Current_Season_Description, Description) == 0x000000, "Member 'BP_BattlePassSystem_C_Get_Current_Season_Description::Description' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Current_Season_Description, CallFunc_DataProviderFindTableByAssetTable_ReturnValue) == 0x000018, "Member 'BP_BattlePassSystem_C_Get_Current_Season_Description::CallFunc_DataProviderFindTableByAssetTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Current_Season_Description, CallFunc_GetDataTableRowFromName_OutRow) == 0x000020, "Member 'BP_BattlePassSystem_C_Get_Current_Season_Description::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Current_Season_Description, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000C0, "Member 'BP_BattlePassSystem_C_Get_Current_Season_Description::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Current_Season_Description, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0000C1, "Member 'BP_BattlePassSystem_C_Get_Current_Season_Description::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.Get Current Season Image
// 0x00B8 (0x00B8 - 0x0000)
struct BP_BattlePassSystem_C_Get_Current_Season_Image final
{
public:
	class UTexture2D*                             Image;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             CallFunc_DataProviderFindTableByAssetTable_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBattlePassSeason                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x0010(0x00A0)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattlePassSystem_C_Get_Current_Season_Image) == 0x000008, "Wrong alignment on BP_BattlePassSystem_C_Get_Current_Season_Image");
static_assert(sizeof(BP_BattlePassSystem_C_Get_Current_Season_Image) == 0x0000B8, "Wrong size on BP_BattlePassSystem_C_Get_Current_Season_Image");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Current_Season_Image, Image) == 0x000000, "Member 'BP_BattlePassSystem_C_Get_Current_Season_Image::Image' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Current_Season_Image, CallFunc_DataProviderFindTableByAssetTable_ReturnValue) == 0x000008, "Member 'BP_BattlePassSystem_C_Get_Current_Season_Image::CallFunc_DataProviderFindTableByAssetTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Current_Season_Image, CallFunc_GetDataTableRowFromName_OutRow) == 0x000010, "Member 'BP_BattlePassSystem_C_Get_Current_Season_Image::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Current_Season_Image, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000B0, "Member 'BP_BattlePassSystem_C_Get_Current_Season_Image::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Current_Season_Image, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0000B1, "Member 'BP_BattlePassSystem_C_Get_Current_Season_Image::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.Get Current Season Start Timestamp
// 0x00C0 (0x00C0 - 0x0000)
struct BP_BattlePassSystem_C_Get_Current_Season_Start_Timestamp final
{
public:
	struct FDateTime                              Season_Start_Time;                                 // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_MakeDateTime_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             CallFunc_DataProviderFindTableByAssetTable_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBattlePassSeason                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x0018(0x00A0)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattlePassSystem_C_Get_Current_Season_Start_Timestamp) == 0x000008, "Wrong alignment on BP_BattlePassSystem_C_Get_Current_Season_Start_Timestamp");
static_assert(sizeof(BP_BattlePassSystem_C_Get_Current_Season_Start_Timestamp) == 0x0000C0, "Wrong size on BP_BattlePassSystem_C_Get_Current_Season_Start_Timestamp");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Current_Season_Start_Timestamp, Season_Start_Time) == 0x000000, "Member 'BP_BattlePassSystem_C_Get_Current_Season_Start_Timestamp::Season_Start_Time' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Current_Season_Start_Timestamp, CallFunc_MakeDateTime_ReturnValue) == 0x000008, "Member 'BP_BattlePassSystem_C_Get_Current_Season_Start_Timestamp::CallFunc_MakeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Current_Season_Start_Timestamp, CallFunc_DataProviderFindTableByAssetTable_ReturnValue) == 0x000010, "Member 'BP_BattlePassSystem_C_Get_Current_Season_Start_Timestamp::CallFunc_DataProviderFindTableByAssetTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Current_Season_Start_Timestamp, CallFunc_GetDataTableRowFromName_OutRow) == 0x000018, "Member 'BP_BattlePassSystem_C_Get_Current_Season_Start_Timestamp::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Current_Season_Start_Timestamp, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000B8, "Member 'BP_BattlePassSystem_C_Get_Current_Season_Start_Timestamp::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Current_Season_Start_Timestamp, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0000B9, "Member 'BP_BattlePassSystem_C_Get_Current_Season_Start_Timestamp::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.Get Current Season End Timestamp
// 0x00C0 (0x00C0 - 0x0000)
struct BP_BattlePassSystem_C_Get_Current_Season_End_Timestamp final
{
public:
	struct FDateTime                              Season_End_Time;                                   // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_MakeDateTime_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             CallFunc_DataProviderFindTableByAssetTable_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBattlePassSeason                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x0018(0x00A0)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattlePassSystem_C_Get_Current_Season_End_Timestamp) == 0x000008, "Wrong alignment on BP_BattlePassSystem_C_Get_Current_Season_End_Timestamp");
static_assert(sizeof(BP_BattlePassSystem_C_Get_Current_Season_End_Timestamp) == 0x0000C0, "Wrong size on BP_BattlePassSystem_C_Get_Current_Season_End_Timestamp");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Current_Season_End_Timestamp, Season_End_Time) == 0x000000, "Member 'BP_BattlePassSystem_C_Get_Current_Season_End_Timestamp::Season_End_Time' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Current_Season_End_Timestamp, CallFunc_MakeDateTime_ReturnValue) == 0x000008, "Member 'BP_BattlePassSystem_C_Get_Current_Season_End_Timestamp::CallFunc_MakeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Current_Season_End_Timestamp, CallFunc_DataProviderFindTableByAssetTable_ReturnValue) == 0x000010, "Member 'BP_BattlePassSystem_C_Get_Current_Season_End_Timestamp::CallFunc_DataProviderFindTableByAssetTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Current_Season_End_Timestamp, CallFunc_GetDataTableRowFromName_OutRow) == 0x000018, "Member 'BP_BattlePassSystem_C_Get_Current_Season_End_Timestamp::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Current_Season_End_Timestamp, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000B8, "Member 'BP_BattlePassSystem_C_Get_Current_Season_End_Timestamp::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Current_Season_End_Timestamp, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0000B9, "Member 'BP_BattlePassSystem_C_Get_Current_Season_End_Timestamp::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.Get Season Tier1 Premium Product ID
// 0x0110 (0x0110 - 0x0000)
struct BP_BattlePassSystem_C_Get_Season_Tier1_Premium_Product_ID final
{
public:
	class FName                                   Season;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Premium_Battle_Pass_Product_ID;                    // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 ProductId;                                         // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x1];                                       // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             CallFunc_DataProviderFindTableByAssetTable_ReturnValue; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBattlePassSeason                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x0040(0x00A0)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBattlePassSeasonProducts              CallFunc_Array_Get_Item;                           // 0x00E8(0x0020)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x010D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x010E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattlePassSystem_C_Get_Season_Tier1_Premium_Product_ID) == 0x000008, "Wrong alignment on BP_BattlePassSystem_C_Get_Season_Tier1_Premium_Product_ID");
static_assert(sizeof(BP_BattlePassSystem_C_Get_Season_Tier1_Premium_Product_ID) == 0x000110, "Wrong size on BP_BattlePassSystem_C_Get_Season_Tier1_Premium_Product_ID");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Tier1_Premium_Product_ID, Season) == 0x000000, "Member 'BP_BattlePassSystem_C_Get_Season_Tier1_Premium_Product_ID::Season' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Tier1_Premium_Product_ID, Premium_Battle_Pass_Product_ID) == 0x000008, "Member 'BP_BattlePassSystem_C_Get_Season_Tier1_Premium_Product_ID::Premium_Battle_Pass_Product_ID' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Tier1_Premium_Product_ID, ProductId) == 0x000018, "Member 'BP_BattlePassSystem_C_Get_Season_Tier1_Premium_Product_ID::ProductId' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Tier1_Premium_Product_ID, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000028, "Member 'BP_BattlePassSystem_C_Get_Season_Tier1_Premium_Product_ID::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Tier1_Premium_Product_ID, Temp_bool_True_if_break_was_hit_Variable) == 0x000029, "Member 'BP_BattlePassSystem_C_Get_Season_Tier1_Premium_Product_ID::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Tier1_Premium_Product_ID, CallFunc_Not_PreBool_ReturnValue) == 0x00002A, "Member 'BP_BattlePassSystem_C_Get_Season_Tier1_Premium_Product_ID::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Tier1_Premium_Product_ID, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'BP_BattlePassSystem_C_Get_Season_Tier1_Premium_Product_ID::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Tier1_Premium_Product_ID, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'BP_BattlePassSystem_C_Get_Season_Tier1_Premium_Product_ID::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Tier1_Premium_Product_ID, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BP_BattlePassSystem_C_Get_Season_Tier1_Premium_Product_ID::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Tier1_Premium_Product_ID, CallFunc_DataProviderFindTableByAssetTable_ReturnValue) == 0x000038, "Member 'BP_BattlePassSystem_C_Get_Season_Tier1_Premium_Product_ID::CallFunc_DataProviderFindTableByAssetTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Tier1_Premium_Product_ID, CallFunc_GetDataTableRowFromName_OutRow) == 0x000040, "Member 'BP_BattlePassSystem_C_Get_Season_Tier1_Premium_Product_ID::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Tier1_Premium_Product_ID, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000E0, "Member 'BP_BattlePassSystem_C_Get_Season_Tier1_Premium_Product_ID::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Tier1_Premium_Product_ID, CallFunc_Array_Get_Item) == 0x0000E8, "Member 'BP_BattlePassSystem_C_Get_Season_Tier1_Premium_Product_ID::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Tier1_Premium_Product_ID, CallFunc_Array_Length_ReturnValue) == 0x000108, "Member 'BP_BattlePassSystem_C_Get_Season_Tier1_Premium_Product_ID::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Tier1_Premium_Product_ID, CallFunc_Less_IntInt_ReturnValue) == 0x00010C, "Member 'BP_BattlePassSystem_C_Get_Season_Tier1_Premium_Product_ID::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Tier1_Premium_Product_ID, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00010D, "Member 'BP_BattlePassSystem_C_Get_Season_Tier1_Premium_Product_ID::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Tier1_Premium_Product_ID, CallFunc_BooleanAND_ReturnValue) == 0x00010E, "Member 'BP_BattlePassSystem_C_Get_Season_Tier1_Premium_Product_ID::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.Get Premium Status
// 0x002C (0x002C - 0x0000)
struct BP_BattlePassSystem_C_Get_Premium_Status final
{
public:
	class FName                                   SeasonName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Premium_Active;                                    // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCloudBattlePassSeasonState            CallFunc_Map_Find_Value;                           // 0x000C(0x001C)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattlePassSystem_C_Get_Premium_Status) == 0x000004, "Wrong alignment on BP_BattlePassSystem_C_Get_Premium_Status");
static_assert(sizeof(BP_BattlePassSystem_C_Get_Premium_Status) == 0x00002C, "Wrong size on BP_BattlePassSystem_C_Get_Premium_Status");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Premium_Status, SeasonName) == 0x000000, "Member 'BP_BattlePassSystem_C_Get_Premium_Status::SeasonName' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Premium_Status, Premium_Active) == 0x000008, "Member 'BP_BattlePassSystem_C_Get_Premium_Status::Premium_Active' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Premium_Status, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000009, "Member 'BP_BattlePassSystem_C_Get_Premium_Status::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Premium_Status, CallFunc_Map_Find_Value) == 0x00000C, "Member 'BP_BattlePassSystem_C_Get_Premium_Status::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Premium_Status, CallFunc_Map_Find_ReturnValue) == 0x000028, "Member 'BP_BattlePassSystem_C_Get_Premium_Status::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.Get State
// 0x0001 (0x0001 - 0x0000)
struct BP_BattlePassSystem_C_Get_State final
{
public:
	E_BattlePassSystem_State                      State_0;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattlePassSystem_C_Get_State) == 0x000001, "Wrong alignment on BP_BattlePassSystem_C_Get_State");
static_assert(sizeof(BP_BattlePassSystem_C_Get_State) == 0x000001, "Wrong size on BP_BattlePassSystem_C_Get_State");
static_assert(offsetof(BP_BattlePassSystem_C_Get_State, State_0) == 0x000000, "Member 'BP_BattlePassSystem_C_Get_State::State_0' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.Get Level Purchase Price
// 0x00C8 (0x00C8 - 0x0000)
struct BP_BattlePassSystem_C_Get_Level_Purchase_Price final
{
public:
	class FName                                   SeasonName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Level_Purchase_Price;                              // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             CallFunc_DataProviderFindTableByAssetTable_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Level_in_Season_Level;                // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBattlePassSeason                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x0020(0x00A0)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattlePassSystem_C_Get_Level_Purchase_Price) == 0x000008, "Wrong alignment on BP_BattlePassSystem_C_Get_Level_Purchase_Price");
static_assert(sizeof(BP_BattlePassSystem_C_Get_Level_Purchase_Price) == 0x0000C8, "Wrong size on BP_BattlePassSystem_C_Get_Level_Purchase_Price");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Level_Purchase_Price, SeasonName) == 0x000000, "Member 'BP_BattlePassSystem_C_Get_Level_Purchase_Price::SeasonName' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Level_Purchase_Price, Level_Purchase_Price) == 0x000008, "Member 'BP_BattlePassSystem_C_Get_Level_Purchase_Price::Level_Purchase_Price' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Level_Purchase_Price, CallFunc_DataProviderFindTableByAssetTable_ReturnValue) == 0x000010, "Member 'BP_BattlePassSystem_C_Get_Level_Purchase_Price::CallFunc_DataProviderFindTableByAssetTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Level_Purchase_Price, CallFunc_Get_Level_in_Season_Level) == 0x000018, "Member 'BP_BattlePassSystem_C_Get_Level_Purchase_Price::CallFunc_Get_Level_in_Season_Level' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Level_Purchase_Price, CallFunc_GetDataTableRowFromName_OutRow) == 0x000020, "Member 'BP_BattlePassSystem_C_Get_Level_Purchase_Price::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Level_Purchase_Price, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000C0, "Member 'BP_BattlePassSystem_C_Get_Level_Purchase_Price::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Level_Purchase_Price, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0000C1, "Member 'BP_BattlePassSystem_C_Get_Level_Purchase_Price::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Level_Purchase_Price, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000C2, "Member 'BP_BattlePassSystem_C_Get_Level_Purchase_Price::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.Process Level Purchase
// 0x00B0 (0x00B0 - 0x0000)
struct BP_BattlePassSystem_C_Process_Level_Purchase final
{
public:
	struct FCloudBattlePassLevelPurchase          CloudBattlePassLevelPurchase;                      // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Success;                                           // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Levels_Gained;                                     // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         XP_Gained;                                         // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Price;                                             // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Convert_Total_XP_to_Level_Level;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Convert_Total_XP_to_Level_XP_within_Level; // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Convert_Total_XP_to_Level_XP_for_Next_Level; // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLegacySeason_IsLegacy;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_47[0x1];                                       // 0x0047(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Get_Level_Purchase_Price_Level_Purchase_Price; // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Season_Max_Level_Max_Level;           // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Send_Purchased_Battle_Pass_Level_Up_Event_ReturnValue; // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_Season_Active_ReturnValue;             // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x005F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   CallFunc_Get_Season_Name_Active_Season_Name;       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Send_Battle_Pass_Level_Up_Event_from_Shelter_ReturnValue; // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCloudBattlePassSeasonState            CallFunc_Map_Find_Value;                           // 0x006C(0x001C)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A[0x2];                                       // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCloudBattlePassSeasonState            K2Node_SetFieldsInStruct_StructOut;                // 0x008C(0x001C)(NoDestructor)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattlePassSystem_C_Process_Level_Purchase) == 0x000008, "Wrong alignment on BP_BattlePassSystem_C_Process_Level_Purchase");
static_assert(sizeof(BP_BattlePassSystem_C_Process_Level_Purchase) == 0x0000B0, "Wrong size on BP_BattlePassSystem_C_Process_Level_Purchase");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Level_Purchase, CloudBattlePassLevelPurchase) == 0x000000, "Member 'BP_BattlePassSystem_C_Process_Level_Purchase::CloudBattlePassLevelPurchase' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Level_Purchase, Success) == 0x000028, "Member 'BP_BattlePassSystem_C_Process_Level_Purchase::Success' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Level_Purchase, Levels_Gained) == 0x00002C, "Member 'BP_BattlePassSystem_C_Process_Level_Purchase::Levels_Gained' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Level_Purchase, XP_Gained) == 0x000030, "Member 'BP_BattlePassSystem_C_Process_Level_Purchase::XP_Gained' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Level_Purchase, Price) == 0x000034, "Member 'BP_BattlePassSystem_C_Process_Level_Purchase::Price' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Level_Purchase, CallFunc_Convert_Total_XP_to_Level_Level) == 0x000038, "Member 'BP_BattlePassSystem_C_Process_Level_Purchase::CallFunc_Convert_Total_XP_to_Level_Level' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Level_Purchase, CallFunc_Convert_Total_XP_to_Level_XP_within_Level) == 0x00003C, "Member 'BP_BattlePassSystem_C_Process_Level_Purchase::CallFunc_Convert_Total_XP_to_Level_XP_within_Level' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Level_Purchase, CallFunc_Convert_Total_XP_to_Level_XP_for_Next_Level) == 0x000040, "Member 'BP_BattlePassSystem_C_Process_Level_Purchase::CallFunc_Convert_Total_XP_to_Level_XP_for_Next_Level' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Level_Purchase, CallFunc_IsLegacySeason_IsLegacy) == 0x000044, "Member 'BP_BattlePassSystem_C_Process_Level_Purchase::CallFunc_IsLegacySeason_IsLegacy' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Level_Purchase, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000045, "Member 'BP_BattlePassSystem_C_Process_Level_Purchase::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Level_Purchase, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000046, "Member 'BP_BattlePassSystem_C_Process_Level_Purchase::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Level_Purchase, CallFunc_Get_Level_Purchase_Price_Level_Purchase_Price) == 0x000048, "Member 'BP_BattlePassSystem_C_Process_Level_Purchase::CallFunc_Get_Level_Purchase_Price_Level_Purchase_Price' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Level_Purchase, CallFunc_Get_Season_Max_Level_Max_Level) == 0x00004C, "Member 'BP_BattlePassSystem_C_Process_Level_Purchase::CallFunc_Get_Season_Max_Level_Max_Level' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Level_Purchase, CallFunc_Greater_IntInt_ReturnValue) == 0x000050, "Member 'BP_BattlePassSystem_C_Process_Level_Purchase::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Level_Purchase, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000051, "Member 'BP_BattlePassSystem_C_Process_Level_Purchase::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Level_Purchase, CallFunc_BooleanAND_ReturnValue) == 0x000052, "Member 'BP_BattlePassSystem_C_Process_Level_Purchase::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Level_Purchase, CallFunc_BooleanAND_ReturnValue_1) == 0x000053, "Member 'BP_BattlePassSystem_C_Process_Level_Purchase::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Level_Purchase, CallFunc_BooleanOR_ReturnValue) == 0x000054, "Member 'BP_BattlePassSystem_C_Process_Level_Purchase::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Level_Purchase, CallFunc_Subtract_IntInt_ReturnValue) == 0x000058, "Member 'BP_BattlePassSystem_C_Process_Level_Purchase::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Level_Purchase, CallFunc_Send_Purchased_Battle_Pass_Level_Up_Event_ReturnValue) == 0x00005C, "Member 'BP_BattlePassSystem_C_Process_Level_Purchase::CallFunc_Send_Purchased_Battle_Pass_Level_Up_Event_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Level_Purchase, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00005D, "Member 'BP_BattlePassSystem_C_Process_Level_Purchase::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Level_Purchase, CallFunc_Is_Season_Active_ReturnValue) == 0x00005E, "Member 'BP_BattlePassSystem_C_Process_Level_Purchase::CallFunc_Is_Season_Active_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Level_Purchase, CallFunc_BooleanOR_ReturnValue_1) == 0x00005F, "Member 'BP_BattlePassSystem_C_Process_Level_Purchase::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Level_Purchase, CallFunc_Get_Season_Name_Active_Season_Name) == 0x000060, "Member 'BP_BattlePassSystem_C_Process_Level_Purchase::CallFunc_Get_Season_Name_Active_Season_Name' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Level_Purchase, CallFunc_Send_Battle_Pass_Level_Up_Event_from_Shelter_ReturnValue) == 0x000068, "Member 'BP_BattlePassSystem_C_Process_Level_Purchase::CallFunc_Send_Battle_Pass_Level_Up_Event_from_Shelter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Level_Purchase, CallFunc_Map_Find_Value) == 0x00006C, "Member 'BP_BattlePassSystem_C_Process_Level_Purchase::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Level_Purchase, CallFunc_Map_Find_ReturnValue) == 0x000088, "Member 'BP_BattlePassSystem_C_Process_Level_Purchase::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Level_Purchase, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000089, "Member 'BP_BattlePassSystem_C_Process_Level_Purchase::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Level_Purchase, K2Node_SetFieldsInStruct_StructOut) == 0x00008C, "Member 'BP_BattlePassSystem_C_Process_Level_Purchase::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Level_Purchase, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000A8, "Member 'BP_BattlePassSystem_C_Process_Level_Purchase::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.Process Rewards Claim
// 0x00E8 (0x00E8 - 0x0000)
struct BP_BattlePassSystem_C_Process_Rewards_Claim final
{
public:
	struct FCloudBattlePassRewardsClaim           CloudBattlePassRewardsClaim;                       // 0x0000(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Success;                                           // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           Claimed_Seasons;                                   // 0x0028(0x0010)(Edit, BlueprintVisible)
	TArray<struct FS_BattlePassLevelRewardFull>   Premium_Claimed_Rewards;                           // 0x0038(0x0010)(Edit, BlueprintVisible)
	TArray<struct FS_BattlePassLevelRewardFull>   Free_Claimed_Rewards;                              // 0x0048(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCloudBattlePassClaimedSeason          CallFunc_Array_Get_Item;                           // 0x006C(0x0014)(NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Send_Collected_Battle_Pass_Rewards_Event_ReturnValue; // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82[0x2];                                       // 0x0082(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCloudBattlePassSeasonState            CallFunc_Map_Find_Value;                           // 0x0088(0x001C)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_BattlePassLevelRewardFull>   CallFunc_Compile_Rewards_in_Level_Range_Rewards;   // 0x00A8(0x0010)(ReferenceParm)
	TArray<struct FS_BattlePassLevelRewardFull>   CallFunc_Compile_Rewards_in_Level_Range_Rewards_1; // 0x00B8(0x0010)(ReferenceParm)
	struct FCloudBattlePassSeasonState            K2Node_SetFieldsInStruct_StructOut;                // 0x00C8(0x001C)(NoDestructor)
};
static_assert(alignof(BP_BattlePassSystem_C_Process_Rewards_Claim) == 0x000008, "Wrong alignment on BP_BattlePassSystem_C_Process_Rewards_Claim");
static_assert(sizeof(BP_BattlePassSystem_C_Process_Rewards_Claim) == 0x0000E8, "Wrong size on BP_BattlePassSystem_C_Process_Rewards_Claim");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Rewards_Claim, CloudBattlePassRewardsClaim) == 0x000000, "Member 'BP_BattlePassSystem_C_Process_Rewards_Claim::CloudBattlePassRewardsClaim' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Rewards_Claim, Success) == 0x000020, "Member 'BP_BattlePassSystem_C_Process_Rewards_Claim::Success' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Rewards_Claim, Claimed_Seasons) == 0x000028, "Member 'BP_BattlePassSystem_C_Process_Rewards_Claim::Claimed_Seasons' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Rewards_Claim, Premium_Claimed_Rewards) == 0x000038, "Member 'BP_BattlePassSystem_C_Process_Rewards_Claim::Premium_Claimed_Rewards' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Rewards_Claim, Free_Claimed_Rewards) == 0x000048, "Member 'BP_BattlePassSystem_C_Process_Rewards_Claim::Free_Claimed_Rewards' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Rewards_Claim, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'BP_BattlePassSystem_C_Process_Rewards_Claim::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Rewards_Claim, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'BP_BattlePassSystem_C_Process_Rewards_Claim::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Rewards_Claim, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'BP_BattlePassSystem_C_Process_Rewards_Claim::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Rewards_Claim, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'BP_BattlePassSystem_C_Process_Rewards_Claim::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Rewards_Claim, Temp_int_Array_Index_Variable) == 0x000068, "Member 'BP_BattlePassSystem_C_Process_Rewards_Claim::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Rewards_Claim, CallFunc_Array_Get_Item) == 0x00006C, "Member 'BP_BattlePassSystem_C_Process_Rewards_Claim::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Rewards_Claim, Temp_bool_True_if_break_was_hit_Variable) == 0x000080, "Member 'BP_BattlePassSystem_C_Process_Rewards_Claim::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Rewards_Claim, CallFunc_Send_Collected_Battle_Pass_Rewards_Event_ReturnValue) == 0x000081, "Member 'BP_BattlePassSystem_C_Process_Rewards_Claim::CallFunc_Send_Collected_Battle_Pass_Rewards_Event_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Rewards_Claim, CallFunc_Array_Add_ReturnValue) == 0x000084, "Member 'BP_BattlePassSystem_C_Process_Rewards_Claim::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Rewards_Claim, CallFunc_Map_Find_Value) == 0x000088, "Member 'BP_BattlePassSystem_C_Process_Rewards_Claim::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Rewards_Claim, CallFunc_Map_Find_ReturnValue) == 0x0000A4, "Member 'BP_BattlePassSystem_C_Process_Rewards_Claim::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Rewards_Claim, CallFunc_Compile_Rewards_in_Level_Range_Rewards) == 0x0000A8, "Member 'BP_BattlePassSystem_C_Process_Rewards_Claim::CallFunc_Compile_Rewards_in_Level_Range_Rewards' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Rewards_Claim, CallFunc_Compile_Rewards_in_Level_Range_Rewards_1) == 0x0000B8, "Member 'BP_BattlePassSystem_C_Process_Rewards_Claim::CallFunc_Compile_Rewards_in_Level_Range_Rewards_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Rewards_Claim, K2Node_SetFieldsInStruct_StructOut) == 0x0000C8, "Member 'BP_BattlePassSystem_C_Process_Rewards_Claim::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.Get Previous Season
// 0x01E8 (0x01E8 - 0x0000)
struct BP_BattlePassSystem_C_Get_Previous_Season final
{
public:
	class FName                                   Previous_Season_Name;                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Previous_Season_Order;                             // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Highest_Season_Name;                               // 0x000C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Highest_Season_Order;                              // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             CallFunc_DataProviderFindTableByAssetTable_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Current_Season_Order_Order;           // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue_1;          // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0040(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             CallFunc_DataProviderFindTableByAssetTable_ReturnValue_1; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0068(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBattlePassSeason                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x0090(0x00A0)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0133(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue_2;          // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_135[0x3];                                      // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             CallFunc_DataProviderFindTableByAssetTable_ReturnValue_2; // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBattlePassSeason                      CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0140(0x00A0)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x01E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattlePassSystem_C_Get_Previous_Season) == 0x000008, "Wrong alignment on BP_BattlePassSystem_C_Get_Previous_Season");
static_assert(sizeof(BP_BattlePassSystem_C_Get_Previous_Season) == 0x0001E8, "Wrong size on BP_BattlePassSystem_C_Get_Previous_Season");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Previous_Season, Previous_Season_Name) == 0x000000, "Member 'BP_BattlePassSystem_C_Get_Previous_Season::Previous_Season_Name' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Previous_Season, Previous_Season_Order) == 0x000008, "Member 'BP_BattlePassSystem_C_Get_Previous_Season::Previous_Season_Order' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Previous_Season, Highest_Season_Name) == 0x00000C, "Member 'BP_BattlePassSystem_C_Get_Previous_Season::Highest_Season_Name' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Previous_Season, Highest_Season_Order) == 0x000014, "Member 'BP_BattlePassSystem_C_Get_Previous_Season::Highest_Season_Order' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Previous_Season, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_BattlePassSystem_C_Get_Previous_Season::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Previous_Season, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_BattlePassSystem_C_Get_Previous_Season::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Previous_Season, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_BattlePassSystem_C_Get_Previous_Season::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Previous_Season, CallFunc_DataProviderFindTableByAssetTable_ReturnValue) == 0x000028, "Member 'BP_BattlePassSystem_C_Get_Previous_Season::CallFunc_DataProviderFindTableByAssetTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Previous_Season, CallFunc_Get_Current_Season_Order_Order) == 0x000030, "Member 'BP_BattlePassSystem_C_Get_Previous_Season::CallFunc_Get_Current_Season_Order_Order' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Previous_Season, Temp_int_Loop_Counter_Variable_1) == 0x000034, "Member 'BP_BattlePassSystem_C_Get_Previous_Season::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Previous_Season, CallFunc_Add_IntInt_ReturnValue_1) == 0x000038, "Member 'BP_BattlePassSystem_C_Get_Previous_Season::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Previous_Season, CallFunc_NotEqual_NameName_ReturnValue) == 0x00003C, "Member 'BP_BattlePassSystem_C_Get_Previous_Season::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Previous_Season, CallFunc_NotEqual_NameName_ReturnValue_1) == 0x00003D, "Member 'BP_BattlePassSystem_C_Get_Previous_Season::CallFunc_NotEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Previous_Season, CallFunc_Map_Keys_Keys) == 0x000040, "Member 'BP_BattlePassSystem_C_Get_Previous_Season::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Previous_Season, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_BattlePassSystem_C_Get_Previous_Season::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Previous_Season, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BP_BattlePassSystem_C_Get_Previous_Season::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Previous_Season, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'BP_BattlePassSystem_C_Get_Previous_Season::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Previous_Season, CallFunc_DataProviderFindTableByAssetTable_ReturnValue_1) == 0x000060, "Member 'BP_BattlePassSystem_C_Get_Previous_Season::CallFunc_DataProviderFindTableByAssetTable_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Previous_Season, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000068, "Member 'BP_BattlePassSystem_C_Get_Previous_Season::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Previous_Season, Temp_int_Array_Index_Variable_1) == 0x000078, "Member 'BP_BattlePassSystem_C_Get_Previous_Season::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Previous_Season, CallFunc_Array_Length_ReturnValue_1) == 0x00007C, "Member 'BP_BattlePassSystem_C_Get_Previous_Season::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Previous_Season, CallFunc_Array_Get_Item_1) == 0x000080, "Member 'BP_BattlePassSystem_C_Get_Previous_Season::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Previous_Season, CallFunc_Less_IntInt_ReturnValue_1) == 0x000088, "Member 'BP_BattlePassSystem_C_Get_Previous_Season::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Previous_Season, CallFunc_GetDataTableRowFromName_OutRow) == 0x000090, "Member 'BP_BattlePassSystem_C_Get_Previous_Season::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Previous_Season, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000130, "Member 'BP_BattlePassSystem_C_Get_Previous_Season::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Previous_Season, CallFunc_Less_IntInt_ReturnValue_2) == 0x000131, "Member 'BP_BattlePassSystem_C_Get_Previous_Season::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Previous_Season, CallFunc_Less_IntInt_ReturnValue_3) == 0x000132, "Member 'BP_BattlePassSystem_C_Get_Previous_Season::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Previous_Season, CallFunc_BooleanAND_ReturnValue) == 0x000133, "Member 'BP_BattlePassSystem_C_Get_Previous_Season::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Previous_Season, CallFunc_NotEqual_NameName_ReturnValue_2) == 0x000134, "Member 'BP_BattlePassSystem_C_Get_Previous_Season::CallFunc_NotEqual_NameName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Previous_Season, CallFunc_DataProviderFindTableByAssetTable_ReturnValue_2) == 0x000138, "Member 'BP_BattlePassSystem_C_Get_Previous_Season::CallFunc_DataProviderFindTableByAssetTable_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Previous_Season, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000140, "Member 'BP_BattlePassSystem_C_Get_Previous_Season::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Previous_Season, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x0001E0, "Member 'BP_BattlePassSystem_C_Get_Previous_Season::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Previous_Season, CallFunc_Less_IntInt_ReturnValue_4) == 0x0001E1, "Member 'BP_BattlePassSystem_C_Get_Previous_Season::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Previous_Season, CallFunc_BooleanAND_ReturnValue_1) == 0x0001E2, "Member 'BP_BattlePassSystem_C_Get_Previous_Season::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.GetLevelsPurchasePrice
// 0x0118 (0x0118 - 0x0000)
struct BP_BattlePassSystem_C_GetLevelsPurchasePrice final
{
public:
	class FName                                   Season;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Levels;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Level_Purchase_Price;                              // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DesiredLevel;                                      // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Price;                                             // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Get_Level_in_Season_Level;                // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             CallFunc_DataProviderFindTableByAssetTable_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBattlePassSeason                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x0038(0x00A0)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBattlePassLevel                       CallFunc_Array_Get_Item;                           // 0x00E8(0x0028)()
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattlePassSystem_C_GetLevelsPurchasePrice) == 0x000008, "Wrong alignment on BP_BattlePassSystem_C_GetLevelsPurchasePrice");
static_assert(sizeof(BP_BattlePassSystem_C_GetLevelsPurchasePrice) == 0x000118, "Wrong size on BP_BattlePassSystem_C_GetLevelsPurchasePrice");
static_assert(offsetof(BP_BattlePassSystem_C_GetLevelsPurchasePrice, Season) == 0x000000, "Member 'BP_BattlePassSystem_C_GetLevelsPurchasePrice::Season' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetLevelsPurchasePrice, Levels) == 0x000008, "Member 'BP_BattlePassSystem_C_GetLevelsPurchasePrice::Levels' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetLevelsPurchasePrice, Level_Purchase_Price) == 0x00000C, "Member 'BP_BattlePassSystem_C_GetLevelsPurchasePrice::Level_Purchase_Price' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetLevelsPurchasePrice, DesiredLevel) == 0x000010, "Member 'BP_BattlePassSystem_C_GetLevelsPurchasePrice::DesiredLevel' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetLevelsPurchasePrice, Price) == 0x000014, "Member 'BP_BattlePassSystem_C_GetLevelsPurchasePrice::Price' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetLevelsPurchasePrice, Temp_int_Variable) == 0x000018, "Member 'BP_BattlePassSystem_C_GetLevelsPurchasePrice::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetLevelsPurchasePrice, CallFunc_Greater_IntInt_ReturnValue) == 0x00001C, "Member 'BP_BattlePassSystem_C_GetLevelsPurchasePrice::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetLevelsPurchasePrice, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_BattlePassSystem_C_GetLevelsPurchasePrice::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetLevelsPurchasePrice, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000024, "Member 'BP_BattlePassSystem_C_GetLevelsPurchasePrice::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetLevelsPurchasePrice, CallFunc_Get_Level_in_Season_Level) == 0x000028, "Member 'BP_BattlePassSystem_C_GetLevelsPurchasePrice::CallFunc_Get_Level_in_Season_Level' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetLevelsPurchasePrice, CallFunc_Add_IntInt_ReturnValue_1) == 0x00002C, "Member 'BP_BattlePassSystem_C_GetLevelsPurchasePrice::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetLevelsPurchasePrice, CallFunc_DataProviderFindTableByAssetTable_ReturnValue) == 0x000030, "Member 'BP_BattlePassSystem_C_GetLevelsPurchasePrice::CallFunc_DataProviderFindTableByAssetTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetLevelsPurchasePrice, CallFunc_GetDataTableRowFromName_OutRow) == 0x000038, "Member 'BP_BattlePassSystem_C_GetLevelsPurchasePrice::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetLevelsPurchasePrice, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000D8, "Member 'BP_BattlePassSystem_C_GetLevelsPurchasePrice::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetLevelsPurchasePrice, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000DC, "Member 'BP_BattlePassSystem_C_GetLevelsPurchasePrice::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetLevelsPurchasePrice, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000E0, "Member 'BP_BattlePassSystem_C_GetLevelsPurchasePrice::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetLevelsPurchasePrice, CallFunc_Array_Get_Item) == 0x0000E8, "Member 'BP_BattlePassSystem_C_GetLevelsPurchasePrice::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetLevelsPurchasePrice, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000110, "Member 'BP_BattlePassSystem_C_GetLevelsPurchasePrice::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetLevelsPurchasePrice, CallFunc_Add_IntInt_ReturnValue_2) == 0x000114, "Member 'BP_BattlePassSystem_C_GetLevelsPurchasePrice::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.GetUpdatedLevel
// 0x002C (0x002C - 0x0000)
struct BP_BattlePassSystem_C_GetUpdatedLevel final
{
public:
	class FName                                   Season;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Levels;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldSubtractPlayerLevel_;                        // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         UpdatedLevel;                                      // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Season_Max_Level_Max_Level;           // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Season_Max_Level_Max_Level_1;         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue_1;                      // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattlePassSystem_C_GetUpdatedLevel) == 0x000004, "Wrong alignment on BP_BattlePassSystem_C_GetUpdatedLevel");
static_assert(sizeof(BP_BattlePassSystem_C_GetUpdatedLevel) == 0x00002C, "Wrong size on BP_BattlePassSystem_C_GetUpdatedLevel");
static_assert(offsetof(BP_BattlePassSystem_C_GetUpdatedLevel, Season) == 0x000000, "Member 'BP_BattlePassSystem_C_GetUpdatedLevel::Season' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetUpdatedLevel, Levels) == 0x000008, "Member 'BP_BattlePassSystem_C_GetUpdatedLevel::Levels' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetUpdatedLevel, ShouldSubtractPlayerLevel_) == 0x00000C, "Member 'BP_BattlePassSystem_C_GetUpdatedLevel::ShouldSubtractPlayerLevel_' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetUpdatedLevel, UpdatedLevel) == 0x000010, "Member 'BP_BattlePassSystem_C_GetUpdatedLevel::UpdatedLevel' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetUpdatedLevel, CallFunc_Get_Season_Max_Level_Max_Level) == 0x000014, "Member 'BP_BattlePassSystem_C_GetUpdatedLevel::CallFunc_Get_Season_Max_Level_Max_Level' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetUpdatedLevel, CallFunc_Get_Season_Max_Level_Max_Level_1) == 0x000018, "Member 'BP_BattlePassSystem_C_GetUpdatedLevel::CallFunc_Get_Season_Max_Level_Max_Level_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetUpdatedLevel, CallFunc_Subtract_IntInt_ReturnValue) == 0x00001C, "Member 'BP_BattlePassSystem_C_GetUpdatedLevel::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetUpdatedLevel, CallFunc_Clamp_ReturnValue) == 0x000020, "Member 'BP_BattlePassSystem_C_GetUpdatedLevel::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetUpdatedLevel, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_BattlePassSystem_C_GetUpdatedLevel::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetUpdatedLevel, CallFunc_Clamp_ReturnValue_1) == 0x000028, "Member 'BP_BattlePassSystem_C_GetUpdatedLevel::CallFunc_Clamp_ReturnValue_1' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.Get Level in Season
// 0x003C (0x003C - 0x0000)
struct BP_BattlePassSystem_C_Get_Level_in_Season final
{
public:
	class FName                                   Season;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Level;                                             // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCloudBattlePassSeasonState            CallFunc_Map_Find_Value;                           // 0x0010(0x001C)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Convert_Total_XP_to_Level_Level;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Convert_Total_XP_to_Level_XP_within_Level; // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Convert_Total_XP_to_Level_XP_for_Next_Level; // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattlePassSystem_C_Get_Level_in_Season) == 0x000004, "Wrong alignment on BP_BattlePassSystem_C_Get_Level_in_Season");
static_assert(sizeof(BP_BattlePassSystem_C_Get_Level_in_Season) == 0x00003C, "Wrong size on BP_BattlePassSystem_C_Get_Level_in_Season");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Level_in_Season, Season) == 0x000000, "Member 'BP_BattlePassSystem_C_Get_Level_in_Season::Season' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Level_in_Season, Level) == 0x000008, "Member 'BP_BattlePassSystem_C_Get_Level_in_Season::Level' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Level_in_Season, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000C, "Member 'BP_BattlePassSystem_C_Get_Level_in_Season::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Level_in_Season, CallFunc_Map_Find_Value) == 0x000010, "Member 'BP_BattlePassSystem_C_Get_Level_in_Season::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Level_in_Season, CallFunc_Map_Find_ReturnValue) == 0x00002C, "Member 'BP_BattlePassSystem_C_Get_Level_in_Season::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Level_in_Season, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00002D, "Member 'BP_BattlePassSystem_C_Get_Level_in_Season::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Level_in_Season, CallFunc_Convert_Total_XP_to_Level_Level) == 0x000030, "Member 'BP_BattlePassSystem_C_Get_Level_in_Season::CallFunc_Convert_Total_XP_to_Level_Level' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Level_in_Season, CallFunc_Convert_Total_XP_to_Level_XP_within_Level) == 0x000034, "Member 'BP_BattlePassSystem_C_Get_Level_in_Season::CallFunc_Convert_Total_XP_to_Level_XP_within_Level' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Level_in_Season, CallFunc_Convert_Total_XP_to_Level_XP_for_Next_Level) == 0x000038, "Member 'BP_BattlePassSystem_C_Get_Level_in_Season::CallFunc_Convert_Total_XP_to_Level_XP_for_Next_Level' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.Print Status
// 0x0AB8 (0x0AB8 - 0x0000)
struct BP_BattlePassSystem_C_Print_Status final
{
public:
	TArray<class FString>                         PlayerInfo;                                        // 0x0000(0x0010)(Edit, BlueprintVisible)
	TArray<class FString>                         SeasonsInfo;                                       // 0x0010(0x0010)(Edit, BlueprintVisible)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_1;                            // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         K2Node_MakeArray_Array;                            // 0x0050(0x0010)(ReferenceParm)
	TArray<class FString>                         K2Node_MakeArray_Array_1;                          // 0x0060(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Get_Season_Tier1_Premium_Product_ID_Premium_Battle_Pass_Product_ID; // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FGameStoreProductInfo                  CallFunc_Get_Season_Premium_Product_with_Lowest_Price_PremiumProduct; // 0x0090(0x0050)()
	int32                                         CallFunc_Get_Season_Max_Level_Max_Level;           // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Level_Purchase_Price_Level_Purchase_Price; // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_JoinStringArray_ReturnValue;              // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Premium_Status_Premium_Active;        // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0150(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0164(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FCloudBattlePassSeasonState            CallFunc_Map_Find_Value;                           // 0x0180(0x001C)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19D[0x3];                                      // 0x019D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x01A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x01B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_3;           // 0x01C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_4;           // 0x01E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue_1;          // 0x01F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0200(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Convert_Total_XP_to_Level_Level;          // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Convert_Total_XP_to_Level_XP_within_Level; // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Convert_Total_XP_to_Level_XP_for_Next_Level; // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21C[0x4];                                      // 0x021C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_5;           // 0x0220(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_6;           // 0x0230(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_7;           // 0x0240(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_8;           // 0x0250(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x0260(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0270(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0280(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0290(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_JoinStringArray_ReturnValue_1;            // 0x02A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x02B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x02C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x02D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UDataTable*                             CallFunc_DataProviderFindTableByAssetTable_ReturnValue; // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x02E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UDataTable*                             CallFunc_DataProviderFindTableByAssetTable_ReturnValue_1; // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x0300(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0310(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_10;             // 0x0320(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_11;             // 0x0338(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FBattlePassSeason                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x0348(0x00A0)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E9[0x7];                                      // 0x03E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_12;             // 0x03F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_13;             // 0x0400(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_14;             // 0x0410(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_424[0x4];                                      // 0x0424(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_15;             // 0x0428(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_9;           // 0x0438(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_16;             // 0x0448(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetClassDisplayName_ReturnValue;          // 0x0458(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_17;             // 0x0468(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_10;          // 0x0478(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_18;             // 0x0488(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ToString__DateTime__String;               // 0x0498(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x04A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4AC[0x4];                                      // 0x04AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_ToString__DateTime__String_1;             // 0x04B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x04C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_11;          // 0x04D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_12;          // 0x04E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_2;          // 0x04F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0500(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_504[0x4];                                      // 0x0504(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_19;             // 0x0508(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0518(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_519[0x7];                                      // 0x0519(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_20;             // 0x0520(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_21;             // 0x0530(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Current_Season_Order_Order;           // 0x0540(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_544[0x4];                                      // 0x0544(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_22;             // 0x0548(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_13;          // 0x0558(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_23;             // 0x0568(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Current_Season_Number_Number;         // 0x0578(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57C[0x4];                                      // 0x057C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_24;             // 0x0580(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_14;          // 0x0590(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_25;             // 0x05A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Get_Previous_Season_Previous_Season_Name; // 0x05B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Previous_Season_Previous_Season_Order; // 0x05B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5BC[0x4];                                      // 0x05BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_26;             // 0x05C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_15;          // 0x05D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_27;             // 0x05E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_3;          // 0x05F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_28;             // 0x0600(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_29;             // 0x0610(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_30;             // 0x0620(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_31;             // 0x0630(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_32;             // 0x0640(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	E_BattlePassSystem_State                      CallFunc_Get_State_State;                          // 0x0650(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_651[0x7];                                      // 0x0651(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_33;             // 0x0658(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0668(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_34;             // 0x0678(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_35;             // 0x0688(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Handle_Valid_and_Timer_Exists_Return_Value; // 0x0698(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_699[0x7];                                      // 0x0699(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_36;             // 0x06A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_37;             // 0x06B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue; // 0x06C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x06C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_FromSeconds_ReturnValue;                  // 0x06C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ToString__Timespan__String;               // 0x06D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue_1; // 0x06E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E4[0x4];                                      // 0x06E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x06E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_FromSeconds_ReturnValue_1;                // 0x06F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Handle_Valid_and_Timer_Exists_Return_Value_1; // 0x0700(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_701[0x7];                                      // 0x0701(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_ToString__Timespan__String_1;             // 0x0708(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default_1;                           // 0x0718(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_16;          // 0x0728(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_17;          // 0x0738(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_18;          // 0x0748(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x0758(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_4;          // 0x0768(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Get_Season_Name_Active_Season_Name;       // 0x0778(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_38;             // 0x0780(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_5;          // 0x0790(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_39;             // 0x07A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Level_Level;                          // 0x07B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B4[0x4];                                      // 0x07B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_40;             // 0x07B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_19;          // 0x07C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_41;             // 0x07D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_GetCloudTime_ReturnValue;                 // 0x07E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_42;             // 0x07F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ToString__DateTime__String_2;             // 0x0800(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_43;             // 0x0810(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_Get_Current_Season_End_Timestamp_Season_End_Time; // 0x0820(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_44;             // 0x0828(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ToString__DateTime__String_3;             // 0x0838(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_45;             // 0x0848(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_Get_Current_Season_Start_Timestamp_Season_Start_Time; // 0x0858(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_46;             // 0x0860(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ToString__DateTime__String_4;             // 0x0870(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_47;             // 0x0880(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_48;             // 0x0890(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_49;             // 0x08A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_50;             // 0x08B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_51;             // 0x08C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_52;             // 0x08D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_53;             // 0x08E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_54;             // 0x08F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_55;             // 0x0900(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_56;             // 0x0910(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_57;             // 0x0920(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_58;             // 0x0930(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_59;             // 0x0940(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_60;             // 0x0950(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Season_Active_ReturnValue;             // 0x0960(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_961[0x7];                                      // 0x0961(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_61;             // 0x0968(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue_2;          // 0x0978(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_62;             // 0x0988(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_63;             // 0x0998(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_64;             // 0x09A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_65;             // 0x09B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_66;             // 0x09C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_67;             // 0x09D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_68;             // 0x09E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_69;             // 0x09F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_70;             // 0x0A08(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_71;             // 0x0A18(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_72;             // 0x0A28(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_73;             // 0x0A38(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_74;             // 0x0A48(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_75;             // 0x0A58(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_76;             // 0x0A68(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_77;             // 0x0A78(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_78;             // 0x0A88(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_79;             // 0x0A98(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_80;             // 0x0AA8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattlePassSystem_C_Print_Status) == 0x000008, "Wrong alignment on BP_BattlePassSystem_C_Print_Status");
static_assert(sizeof(BP_BattlePassSystem_C_Print_Status) == 0x000AB8, "Wrong size on BP_BattlePassSystem_C_Print_Status");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, PlayerInfo) == 0x000000, "Member 'BP_BattlePassSystem_C_Print_Status::PlayerInfo' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, SeasonsInfo) == 0x000010, "Member 'BP_BattlePassSystem_C_Print_Status::SeasonsInfo' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, Temp_bool_Variable) == 0x000020, "Member 'BP_BattlePassSystem_C_Print_Status::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, Temp_string_Variable) == 0x000028, "Member 'BP_BattlePassSystem_C_Print_Status::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, Temp_bool_Variable_1) == 0x000038, "Member 'BP_BattlePassSystem_C_Print_Status::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, Temp_string_Variable_1) == 0x000040, "Member 'BP_BattlePassSystem_C_Print_Status::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, K2Node_MakeArray_Array) == 0x000050, "Member 'BP_BattlePassSystem_C_Print_Status::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, K2Node_MakeArray_Array_1) == 0x000060, "Member 'BP_BattlePassSystem_C_Print_Status::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, Temp_int_Array_Index_Variable) == 0x000070, "Member 'BP_BattlePassSystem_C_Print_Status::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, Temp_int_Loop_Counter_Variable) == 0x000074, "Member 'BP_BattlePassSystem_C_Print_Status::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, Temp_int_Array_Index_Variable_1) == 0x00007C, "Member 'BP_BattlePassSystem_C_Print_Status::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Get_Season_Tier1_Premium_Product_ID_Premium_Battle_Pass_Product_ID) == 0x000080, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Get_Season_Tier1_Premium_Product_ID_Premium_Battle_Pass_Product_ID' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Get_Season_Premium_Product_with_Lowest_Price_PremiumProduct) == 0x000090, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Get_Season_Premium_Product_with_Lowest_Price_PremiumProduct' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Get_Season_Max_Level_Max_Level) == 0x0000E0, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Get_Season_Max_Level_Max_Level' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Conv_IntToString_ReturnValue) == 0x0000E8, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Conv_IntToString_ReturnValue_1) == 0x0000F8, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Get_Level_Purchase_Price_Level_Purchase_Price) == 0x000108, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Get_Level_Purchase_Price_Level_Purchase_Price' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_JoinStringArray_ReturnValue) == 0x000110, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_JoinStringArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Conv_IntToString_ReturnValue_2) == 0x000120, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Get_Premium_Status_Premium_Active) == 0x000130, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Get_Premium_Status_Premium_Active' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Conv_BoolToString_ReturnValue) == 0x000138, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, Temp_int_Loop_Counter_Variable_1) == 0x000148, "Member 'BP_BattlePassSystem_C_Print_Status::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Map_Keys_Keys) == 0x000150, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Add_IntInt_ReturnValue_1) == 0x000160, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Array_Get_Item) == 0x000164, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Conv_NameToString_ReturnValue) == 0x000170, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Map_Find_Value) == 0x000180, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Map_Find_ReturnValue) == 0x00019C, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue) == 0x0001A0, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0001B0, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Array_Length_ReturnValue) == 0x0001C0, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Conv_IntToString_ReturnValue_3) == 0x0001C8, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Conv_IntToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Less_IntInt_ReturnValue) == 0x0001D8, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Conv_IntToString_ReturnValue_4) == 0x0001E0, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Conv_IntToString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Conv_BoolToString_ReturnValue_1) == 0x0001F0, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Conv_BoolToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Conv_FloatToString_ReturnValue) == 0x000200, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Convert_Total_XP_to_Level_Level) == 0x000210, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Convert_Total_XP_to_Level_Level' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Convert_Total_XP_to_Level_XP_within_Level) == 0x000214, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Convert_Total_XP_to_Level_XP_within_Level' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Convert_Total_XP_to_Level_XP_for_Next_Level) == 0x000218, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Convert_Total_XP_to_Level_XP_for_Next_Level' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Conv_IntToString_ReturnValue_5) == 0x000220, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Conv_IntToString_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Conv_IntToString_ReturnValue_6) == 0x000230, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Conv_IntToString_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Conv_IntToString_ReturnValue_7) == 0x000240, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Conv_IntToString_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Conv_IntToString_ReturnValue_8) == 0x000250, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Conv_IntToString_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Conv_NameToString_ReturnValue_1) == 0x000260, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000270, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000280, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000290, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_JoinStringArray_ReturnValue_1) == 0x0002A0, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_JoinStringArray_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0002B0, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_6) == 0x0002C0, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_7) == 0x0002D0, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_DataProviderFindTableByAssetTable_ReturnValue) == 0x0002E0, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_DataProviderFindTableByAssetTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_8) == 0x0002E8, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_DataProviderFindTableByAssetTable_ReturnValue_1) == 0x0002F8, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_DataProviderFindTableByAssetTable_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_9) == 0x000300, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000310, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_10) == 0x000320, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Array_Get_Item_1) == 0x000330, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_11) == 0x000338, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_GetDataTableRowFromName_OutRow) == 0x000348, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0003E8, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_12) == 0x0003F0, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_13) == 0x000400, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_14) == 0x000410, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Array_Length_ReturnValue_1) == 0x000420, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_15) == 0x000428, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Conv_IntToString_ReturnValue_9) == 0x000438, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Conv_IntToString_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_16) == 0x000448, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_GetClassDisplayName_ReturnValue) == 0x000458, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_GetClassDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_17) == 0x000468, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Conv_IntToString_ReturnValue_10) == 0x000478, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Conv_IntToString_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_18) == 0x000488, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_ToString__DateTime__String) == 0x000498, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_ToString__DateTime__String' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Array_Add_ReturnValue) == 0x0004A8, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_ToString__DateTime__String_1) == 0x0004B0, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_ToString__DateTime__String_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Conv_TextToString_ReturnValue) == 0x0004C0, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Conv_IntToString_ReturnValue_11) == 0x0004D0, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Conv_IntToString_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Conv_IntToString_ReturnValue_12) == 0x0004E0, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Conv_IntToString_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Conv_NameToString_ReturnValue_2) == 0x0004F0, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Conv_NameToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Array_Length_ReturnValue_2) == 0x000500, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_19) == 0x000508, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Less_IntInt_ReturnValue_1) == 0x000518, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_20) == 0x000520, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_21) == 0x000530, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Get_Current_Season_Order_Order) == 0x000540, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Get_Current_Season_Order_Order' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_22) == 0x000548, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Conv_IntToString_ReturnValue_13) == 0x000558, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Conv_IntToString_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_23) == 0x000568, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Get_Current_Season_Number_Number) == 0x000578, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Get_Current_Season_Number_Number' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_24) == 0x000580, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Conv_IntToString_ReturnValue_14) == 0x000590, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Conv_IntToString_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_25) == 0x0005A0, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Get_Previous_Season_Previous_Season_Name) == 0x0005B0, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Get_Previous_Season_Previous_Season_Name' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Get_Previous_Season_Previous_Season_Order) == 0x0005B8, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Get_Previous_Season_Previous_Season_Order' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_26) == 0x0005C0, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Conv_IntToString_ReturnValue_15) == 0x0005D0, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Conv_IntToString_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_27) == 0x0005E0, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Conv_NameToString_ReturnValue_3) == 0x0005F0, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Conv_NameToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_28) == 0x000600, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_29) == 0x000610, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_30) == 0x000620, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_31) == 0x000630, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_32) == 0x000640, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Get_State_State) == 0x000650, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Get_State_State' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_33) == 0x000658, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000668, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_34) == 0x000678, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_35) == 0x000688, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_35' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Handle_Valid_and_Timer_Exists_Return_Value) == 0x000698, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Handle_Valid_and_Timer_Exists_Return_Value' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_36) == 0x0006A0, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_36' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_37) == 0x0006B0, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_37' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue) == 0x0006C0, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Array_Add_ReturnValue_1) == 0x0006C4, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_FromSeconds_ReturnValue) == 0x0006C8, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_FromSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_ToString__Timespan__String) == 0x0006D0, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_ToString__Timespan__String' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue_1) == 0x0006E0, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, K2Node_Select_Default) == 0x0006E8, "Member 'BP_BattlePassSystem_C_Print_Status::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_FromSeconds_ReturnValue_1) == 0x0006F8, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_FromSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Handle_Valid_and_Timer_Exists_Return_Value_1) == 0x000700, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Handle_Valid_and_Timer_Exists_Return_Value_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_ToString__Timespan__String_1) == 0x000708, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_ToString__Timespan__String_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, K2Node_Select_Default_1) == 0x000718, "Member 'BP_BattlePassSystem_C_Print_Status::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Conv_IntToString_ReturnValue_16) == 0x000728, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Conv_IntToString_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Conv_IntToString_ReturnValue_17) == 0x000738, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Conv_IntToString_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Conv_IntToString_ReturnValue_18) == 0x000748, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Conv_IntToString_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x000758, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Conv_NameToString_ReturnValue_4) == 0x000768, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Conv_NameToString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Get_Season_Name_Active_Season_Name) == 0x000778, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Get_Season_Name_Active_Season_Name' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_38) == 0x000780, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_38' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Conv_NameToString_ReturnValue_5) == 0x000790, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Conv_NameToString_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_39) == 0x0007A0, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_39' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Get_Level_Level) == 0x0007B0, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Get_Level_Level' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_40) == 0x0007B8, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_40' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Conv_IntToString_ReturnValue_19) == 0x0007C8, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Conv_IntToString_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_41) == 0x0007D8, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_41' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_GetCloudTime_ReturnValue) == 0x0007E8, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_GetCloudTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_42) == 0x0007F0, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_42' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_ToString__DateTime__String_2) == 0x000800, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_ToString__DateTime__String_2' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_43) == 0x000810, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_43' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Get_Current_Season_End_Timestamp_Season_End_Time) == 0x000820, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Get_Current_Season_End_Timestamp_Season_End_Time' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_44) == 0x000828, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_44' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_ToString__DateTime__String_3) == 0x000838, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_ToString__DateTime__String_3' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_45) == 0x000848, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_45' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Get_Current_Season_Start_Timestamp_Season_Start_Time) == 0x000858, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Get_Current_Season_Start_Timestamp_Season_Start_Time' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_46) == 0x000860, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_46' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_ToString__DateTime__String_4) == 0x000870, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_ToString__DateTime__String_4' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_47) == 0x000880, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_47' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_48) == 0x000890, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_48' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_49) == 0x0008A0, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_49' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_50) == 0x0008B0, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_50' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_51) == 0x0008C0, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_51' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_52) == 0x0008D0, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_52' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_53) == 0x0008E0, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_53' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_54) == 0x0008F0, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_54' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_55) == 0x000900, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_55' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_56) == 0x000910, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_56' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_57) == 0x000920, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_57' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_58) == 0x000930, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_58' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_59) == 0x000940, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_59' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_60) == 0x000950, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_60' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Is_Season_Active_ReturnValue) == 0x000960, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Is_Season_Active_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_61) == 0x000968, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_61' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Conv_BoolToString_ReturnValue_2) == 0x000978, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Conv_BoolToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_62) == 0x000988, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_62' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_63) == 0x000998, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_63' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_64) == 0x0009A8, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_64' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_65) == 0x0009B8, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_65' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_66) == 0x0009C8, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_66' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_67) == 0x0009D8, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_67' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_68) == 0x0009E8, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_68' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_69) == 0x0009F8, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_69' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_70) == 0x000A08, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_70' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_71) == 0x000A18, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_71' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_72) == 0x000A28, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_72' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_73) == 0x000A38, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_73' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_74) == 0x000A48, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_74' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_75) == 0x000A58, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_75' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_76) == 0x000A68, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_76' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_77) == 0x000A78, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_77' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_78) == 0x000A88, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_78' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_79) == 0x000A98, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_79' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Print_Status, CallFunc_Concat_StrStr_ReturnValue_80) == 0x000AA8, "Member 'BP_BattlePassSystem_C_Print_Status::CallFunc_Concat_StrStr_ReturnValue_80' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.Get Season Number
// 0x00C0 (0x00C0 - 0x0000)
struct BP_BattlePassSystem_C_Get_Season_Number final
{
public:
	class FName                                   Season;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Number;                                            // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             CallFunc_DataProviderFindTableByAssetTable_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBattlePassSeason                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x0018(0x00A0)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattlePassSystem_C_Get_Season_Number) == 0x000008, "Wrong alignment on BP_BattlePassSystem_C_Get_Season_Number");
static_assert(sizeof(BP_BattlePassSystem_C_Get_Season_Number) == 0x0000C0, "Wrong size on BP_BattlePassSystem_C_Get_Season_Number");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Number, Season) == 0x000000, "Member 'BP_BattlePassSystem_C_Get_Season_Number::Season' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Number, Number) == 0x000008, "Member 'BP_BattlePassSystem_C_Get_Season_Number::Number' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Number, CallFunc_DataProviderFindTableByAssetTable_ReturnValue) == 0x000010, "Member 'BP_BattlePassSystem_C_Get_Season_Number::CallFunc_DataProviderFindTableByAssetTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Number, CallFunc_GetDataTableRowFromName_OutRow) == 0x000018, "Member 'BP_BattlePassSystem_C_Get_Season_Number::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Number, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000B8, "Member 'BP_BattlePassSystem_C_Get_Season_Number::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.Get XP Within Level
// 0x003C (0x003C - 0x0000)
struct BP_BattlePassSystem_C_Get_XP_Within_Level final
{
public:
	class FName                                   Season;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Level;                                             // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCloudBattlePassSeasonState            CallFunc_Map_Find_Value;                           // 0x0010(0x001C)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Convert_Total_XP_to_Level_Level;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Convert_Total_XP_to_Level_XP_within_Level; // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Convert_Total_XP_to_Level_XP_for_Next_Level; // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattlePassSystem_C_Get_XP_Within_Level) == 0x000004, "Wrong alignment on BP_BattlePassSystem_C_Get_XP_Within_Level");
static_assert(sizeof(BP_BattlePassSystem_C_Get_XP_Within_Level) == 0x00003C, "Wrong size on BP_BattlePassSystem_C_Get_XP_Within_Level");
static_assert(offsetof(BP_BattlePassSystem_C_Get_XP_Within_Level, Season) == 0x000000, "Member 'BP_BattlePassSystem_C_Get_XP_Within_Level::Season' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_XP_Within_Level, Level) == 0x000008, "Member 'BP_BattlePassSystem_C_Get_XP_Within_Level::Level' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_XP_Within_Level, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000C, "Member 'BP_BattlePassSystem_C_Get_XP_Within_Level::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_XP_Within_Level, CallFunc_Map_Find_Value) == 0x000010, "Member 'BP_BattlePassSystem_C_Get_XP_Within_Level::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_XP_Within_Level, CallFunc_Map_Find_ReturnValue) == 0x00002C, "Member 'BP_BattlePassSystem_C_Get_XP_Within_Level::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_XP_Within_Level, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00002D, "Member 'BP_BattlePassSystem_C_Get_XP_Within_Level::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_XP_Within_Level, CallFunc_Convert_Total_XP_to_Level_Level) == 0x000030, "Member 'BP_BattlePassSystem_C_Get_XP_Within_Level::CallFunc_Convert_Total_XP_to_Level_Level' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_XP_Within_Level, CallFunc_Convert_Total_XP_to_Level_XP_within_Level) == 0x000034, "Member 'BP_BattlePassSystem_C_Get_XP_Within_Level::CallFunc_Convert_Total_XP_to_Level_XP_within_Level' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_XP_Within_Level, CallFunc_Convert_Total_XP_to_Level_XP_for_Next_Level) == 0x000038, "Member 'BP_BattlePassSystem_C_Get_XP_Within_Level::CallFunc_Convert_Total_XP_to_Level_XP_for_Next_Level' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.Get XP For Next Level
// 0x003C (0x003C - 0x0000)
struct BP_BattlePassSystem_C_Get_XP_For_Next_Level final
{
public:
	class FName                                   Season;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Level;                                             // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCloudBattlePassSeasonState            CallFunc_Map_Find_Value;                           // 0x0010(0x001C)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Convert_Total_XP_to_Level_Level;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Convert_Total_XP_to_Level_XP_within_Level; // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Convert_Total_XP_to_Level_XP_for_Next_Level; // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattlePassSystem_C_Get_XP_For_Next_Level) == 0x000004, "Wrong alignment on BP_BattlePassSystem_C_Get_XP_For_Next_Level");
static_assert(sizeof(BP_BattlePassSystem_C_Get_XP_For_Next_Level) == 0x00003C, "Wrong size on BP_BattlePassSystem_C_Get_XP_For_Next_Level");
static_assert(offsetof(BP_BattlePassSystem_C_Get_XP_For_Next_Level, Season) == 0x000000, "Member 'BP_BattlePassSystem_C_Get_XP_For_Next_Level::Season' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_XP_For_Next_Level, Level) == 0x000008, "Member 'BP_BattlePassSystem_C_Get_XP_For_Next_Level::Level' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_XP_For_Next_Level, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000C, "Member 'BP_BattlePassSystem_C_Get_XP_For_Next_Level::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_XP_For_Next_Level, CallFunc_Map_Find_Value) == 0x000010, "Member 'BP_BattlePassSystem_C_Get_XP_For_Next_Level::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_XP_For_Next_Level, CallFunc_Map_Find_ReturnValue) == 0x00002C, "Member 'BP_BattlePassSystem_C_Get_XP_For_Next_Level::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_XP_For_Next_Level, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00002D, "Member 'BP_BattlePassSystem_C_Get_XP_For_Next_Level::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_XP_For_Next_Level, CallFunc_Convert_Total_XP_to_Level_Level) == 0x000030, "Member 'BP_BattlePassSystem_C_Get_XP_For_Next_Level::CallFunc_Convert_Total_XP_to_Level_Level' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_XP_For_Next_Level, CallFunc_Convert_Total_XP_to_Level_XP_within_Level) == 0x000034, "Member 'BP_BattlePassSystem_C_Get_XP_For_Next_Level::CallFunc_Convert_Total_XP_to_Level_XP_within_Level' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_XP_For_Next_Level, CallFunc_Convert_Total_XP_to_Level_XP_for_Next_Level) == 0x000038, "Member 'BP_BattlePassSystem_C_Get_XP_For_Next_Level::CallFunc_Convert_Total_XP_to_Level_XP_for_Next_Level' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.Process Experience Awarded
// 0x01C8 (0x01C8 - 0x0000)
struct BP_BattlePassSystem_C_Process_Experience_Awarded final
{
public:
	struct FCloudBattlePassExperienceEvent        Event;                                             // 0x0000(0x0024)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	bool                                          Success;                                           // 0x0024(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Player_Stats_Changed_0;                            // 0x0025(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Old_Total_XP;                                      // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Stats_Changed;                                     // 0x002C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Old_Level;                                         // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCloudBattlePassSeasonState            Season_State;                                      // 0x0034(0x001C)(Edit, BlueprintVisible, NoDestructor)
	struct FGameplayEvent                         Event_Descriptor;                                  // 0x0050(0x0030)(Edit, BlueprintVisible)
	bool                                          CallFunc_Is_Season_Active_ReturnValue;             // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetUserControllerId_ReturnValue;          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue; // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_BattlePassNotification_LevelUp_C*   CallFunc_Create_ReturnValue;                       // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLegacySeason_IsLegacy;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9B[0x1];                                       // 0x009B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Get_Level_in_Season_Level;                // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLegacySeason_IsLegacy_1;                // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetUserControllerId_ReturnValue_1;        // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_1; // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_BattlePassNotification_GatheringXP_C* CallFunc_Create_ReturnValue_1;                     // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Send_Battle_Pass_Level_Up_Event_from_Shelter_ReturnValue; // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Get_XP_Booster_XP_Booster;                // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLegacySeason_IsLegacy_2;                // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Send_Gained_Battle_Pass_XP_Event_ReturnValue; // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FNotificationParams                    K2Node_MakeStruct_NotificationParams;              // 0x00CC(0x000C)(NoDestructor)
	int32                                         CallFunc_Convert_Total_XP_to_Level_Level;          // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Convert_Total_XP_to_Level_XP_within_Level; // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Convert_Total_XP_to_Level_XP_for_Next_Level; // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Get_Level_in_Season_Level_1;              // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLegacySeason_IsLegacy_3;                // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_Get_Unclaimed_Rewards_Seasons;            // 0x00F0(0x0010)(ReferenceParm)
	TArray<struct FS_BattlePassLevelRewardFull>   CallFunc_Get_Unclaimed_Rewards_Free_Rewards;       // 0x0100(0x0010)(ReferenceParm)
	TArray<struct FS_BattlePassLevelRewardFull>   CallFunc_Get_Unclaimed_Rewards_Premium_Rewards;    // 0x0110(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_4;             // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_125[0x3];                                      // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_5;             // 0x012D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12E[0x2];                                      // 0x012E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNotificationParams                    K2Node_MakeStruct_NotificationParams_1;            // 0x0130(0x000C)(NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanNAND_ReturnValue;                  // 0x013D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13E[0x2];                                      // 0x013E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UNotificationSystem*                    CallFunc_GetNotificationSystem_ReturnValue;        // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNotificationSystem*                    CallFunc_GetNotificationSystem_ReturnValue_1;      // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCloudBattlePassSeasonState            CallFunc_Map_Find_Value;                           // 0x0150(0x001C)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16D[0x3];                                      // 0x016D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_175[0x3];                                      // 0x0175(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Convert_Total_XP_to_Level_Level_1;        // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Convert_Total_XP_to_Level_XP_within_Level_1; // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Convert_Total_XP_to_Level_XP_for_Next_Level_1; // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             CallFunc_DataProviderFindTableByAssetTable_ReturnValue; // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEvent                         CallFunc_GetDataTableRowFromName_OutRow;           // 0x0190(0x0030)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattlePassSystem_C_Process_Experience_Awarded) == 0x000008, "Wrong alignment on BP_BattlePassSystem_C_Process_Experience_Awarded");
static_assert(sizeof(BP_BattlePassSystem_C_Process_Experience_Awarded) == 0x0001C8, "Wrong size on BP_BattlePassSystem_C_Process_Experience_Awarded");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Experience_Awarded, Event) == 0x000000, "Member 'BP_BattlePassSystem_C_Process_Experience_Awarded::Event' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Experience_Awarded, Success) == 0x000024, "Member 'BP_BattlePassSystem_C_Process_Experience_Awarded::Success' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Experience_Awarded, Player_Stats_Changed_0) == 0x000025, "Member 'BP_BattlePassSystem_C_Process_Experience_Awarded::Player_Stats_Changed_0' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Experience_Awarded, Old_Total_XP) == 0x000028, "Member 'BP_BattlePassSystem_C_Process_Experience_Awarded::Old_Total_XP' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Experience_Awarded, Stats_Changed) == 0x00002C, "Member 'BP_BattlePassSystem_C_Process_Experience_Awarded::Stats_Changed' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Experience_Awarded, Old_Level) == 0x000030, "Member 'BP_BattlePassSystem_C_Process_Experience_Awarded::Old_Level' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Experience_Awarded, Season_State) == 0x000034, "Member 'BP_BattlePassSystem_C_Process_Experience_Awarded::Season_State' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Experience_Awarded, Event_Descriptor) == 0x000050, "Member 'BP_BattlePassSystem_C_Process_Experience_Awarded::Event_Descriptor' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Experience_Awarded, CallFunc_Is_Season_Active_ReturnValue) == 0x000080, "Member 'BP_BattlePassSystem_C_Process_Experience_Awarded::CallFunc_Is_Season_Active_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Experience_Awarded, CallFunc_GetUserControllerId_ReturnValue) == 0x000084, "Member 'BP_BattlePassSystem_C_Process_Experience_Awarded::CallFunc_GetUserControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Experience_Awarded, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue) == 0x000088, "Member 'BP_BattlePassSystem_C_Process_Experience_Awarded::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Experience_Awarded, CallFunc_Create_ReturnValue) == 0x000090, "Member 'BP_BattlePassSystem_C_Process_Experience_Awarded::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Experience_Awarded, CallFunc_IsLegacySeason_IsLegacy) == 0x000098, "Member 'BP_BattlePassSystem_C_Process_Experience_Awarded::CallFunc_IsLegacySeason_IsLegacy' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Experience_Awarded, CallFunc_Not_PreBool_ReturnValue) == 0x000099, "Member 'BP_BattlePassSystem_C_Process_Experience_Awarded::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Experience_Awarded, CallFunc_BooleanAND_ReturnValue) == 0x00009A, "Member 'BP_BattlePassSystem_C_Process_Experience_Awarded::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Experience_Awarded, CallFunc_Get_Level_in_Season_Level) == 0x00009C, "Member 'BP_BattlePassSystem_C_Process_Experience_Awarded::CallFunc_Get_Level_in_Season_Level' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Experience_Awarded, CallFunc_IsLegacySeason_IsLegacy_1) == 0x0000A0, "Member 'BP_BattlePassSystem_C_Process_Experience_Awarded::CallFunc_IsLegacySeason_IsLegacy_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Experience_Awarded, CallFunc_GetUserControllerId_ReturnValue_1) == 0x0000A4, "Member 'BP_BattlePassSystem_C_Process_Experience_Awarded::CallFunc_GetUserControllerId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Experience_Awarded, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_1) == 0x0000A8, "Member 'BP_BattlePassSystem_C_Process_Experience_Awarded::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Experience_Awarded, CallFunc_Create_ReturnValue_1) == 0x0000B0, "Member 'BP_BattlePassSystem_C_Process_Experience_Awarded::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Experience_Awarded, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000B8, "Member 'BP_BattlePassSystem_C_Process_Experience_Awarded::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Experience_Awarded, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000BC, "Member 'BP_BattlePassSystem_C_Process_Experience_Awarded::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Experience_Awarded, CallFunc_Send_Battle_Pass_Level_Up_Event_from_Shelter_ReturnValue) == 0x0000C0, "Member 'BP_BattlePassSystem_C_Process_Experience_Awarded::CallFunc_Send_Battle_Pass_Level_Up_Event_from_Shelter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Experience_Awarded, CallFunc_Greater_IntInt_ReturnValue) == 0x0000C1, "Member 'BP_BattlePassSystem_C_Process_Experience_Awarded::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Experience_Awarded, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0000C2, "Member 'BP_BattlePassSystem_C_Process_Experience_Awarded::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Experience_Awarded, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000C3, "Member 'BP_BattlePassSystem_C_Process_Experience_Awarded::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Experience_Awarded, CallFunc_Get_XP_Booster_XP_Booster) == 0x0000C4, "Member 'BP_BattlePassSystem_C_Process_Experience_Awarded::CallFunc_Get_XP_Booster_XP_Booster' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Experience_Awarded, CallFunc_IsLegacySeason_IsLegacy_2) == 0x0000C8, "Member 'BP_BattlePassSystem_C_Process_Experience_Awarded::CallFunc_IsLegacySeason_IsLegacy_2' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Experience_Awarded, CallFunc_Greater_IntInt_ReturnValue_2) == 0x0000C9, "Member 'BP_BattlePassSystem_C_Process_Experience_Awarded::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Experience_Awarded, CallFunc_Send_Gained_Battle_Pass_XP_Event_ReturnValue) == 0x0000CA, "Member 'BP_BattlePassSystem_C_Process_Experience_Awarded::CallFunc_Send_Gained_Battle_Pass_XP_Event_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Experience_Awarded, CallFunc_Less_IntInt_ReturnValue) == 0x0000CB, "Member 'BP_BattlePassSystem_C_Process_Experience_Awarded::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Experience_Awarded, K2Node_MakeStruct_NotificationParams) == 0x0000CC, "Member 'BP_BattlePassSystem_C_Process_Experience_Awarded::K2Node_MakeStruct_NotificationParams' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Experience_Awarded, CallFunc_Convert_Total_XP_to_Level_Level) == 0x0000D8, "Member 'BP_BattlePassSystem_C_Process_Experience_Awarded::CallFunc_Convert_Total_XP_to_Level_Level' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Experience_Awarded, CallFunc_Convert_Total_XP_to_Level_XP_within_Level) == 0x0000DC, "Member 'BP_BattlePassSystem_C_Process_Experience_Awarded::CallFunc_Convert_Total_XP_to_Level_XP_within_Level' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Experience_Awarded, CallFunc_Convert_Total_XP_to_Level_XP_for_Next_Level) == 0x0000E0, "Member 'BP_BattlePassSystem_C_Process_Experience_Awarded::CallFunc_Convert_Total_XP_to_Level_XP_for_Next_Level' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Experience_Awarded, CallFunc_Greater_IntInt_ReturnValue_3) == 0x0000E4, "Member 'BP_BattlePassSystem_C_Process_Experience_Awarded::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Experience_Awarded, CallFunc_Get_Level_in_Season_Level_1) == 0x0000E8, "Member 'BP_BattlePassSystem_C_Process_Experience_Awarded::CallFunc_Get_Level_in_Season_Level_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Experience_Awarded, CallFunc_IsLegacySeason_IsLegacy_3) == 0x0000EC, "Member 'BP_BattlePassSystem_C_Process_Experience_Awarded::CallFunc_IsLegacySeason_IsLegacy_3' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Experience_Awarded, CallFunc_Get_Unclaimed_Rewards_Seasons) == 0x0000F0, "Member 'BP_BattlePassSystem_C_Process_Experience_Awarded::CallFunc_Get_Unclaimed_Rewards_Seasons' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Experience_Awarded, CallFunc_Get_Unclaimed_Rewards_Free_Rewards) == 0x000100, "Member 'BP_BattlePassSystem_C_Process_Experience_Awarded::CallFunc_Get_Unclaimed_Rewards_Free_Rewards' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Experience_Awarded, CallFunc_Get_Unclaimed_Rewards_Premium_Rewards) == 0x000110, "Member 'BP_BattlePassSystem_C_Process_Experience_Awarded::CallFunc_Get_Unclaimed_Rewards_Premium_Rewards' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Experience_Awarded, CallFunc_Array_Length_ReturnValue) == 0x000120, "Member 'BP_BattlePassSystem_C_Process_Experience_Awarded::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Experience_Awarded, CallFunc_Greater_IntInt_ReturnValue_4) == 0x000124, "Member 'BP_BattlePassSystem_C_Process_Experience_Awarded::CallFunc_Greater_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Experience_Awarded, CallFunc_Array_Length_ReturnValue_1) == 0x000128, "Member 'BP_BattlePassSystem_C_Process_Experience_Awarded::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Experience_Awarded, CallFunc_Not_PreBool_ReturnValue_1) == 0x00012C, "Member 'BP_BattlePassSystem_C_Process_Experience_Awarded::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Experience_Awarded, CallFunc_Greater_IntInt_ReturnValue_5) == 0x00012D, "Member 'BP_BattlePassSystem_C_Process_Experience_Awarded::CallFunc_Greater_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Experience_Awarded, K2Node_MakeStruct_NotificationParams_1) == 0x000130, "Member 'BP_BattlePassSystem_C_Process_Experience_Awarded::K2Node_MakeStruct_NotificationParams_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Experience_Awarded, CallFunc_Not_PreBool_ReturnValue_2) == 0x00013C, "Member 'BP_BattlePassSystem_C_Process_Experience_Awarded::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Experience_Awarded, CallFunc_BooleanNAND_ReturnValue) == 0x00013D, "Member 'BP_BattlePassSystem_C_Process_Experience_Awarded::CallFunc_BooleanNAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Experience_Awarded, CallFunc_GetNotificationSystem_ReturnValue) == 0x000140, "Member 'BP_BattlePassSystem_C_Process_Experience_Awarded::CallFunc_GetNotificationSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Experience_Awarded, CallFunc_GetNotificationSystem_ReturnValue_1) == 0x000148, "Member 'BP_BattlePassSystem_C_Process_Experience_Awarded::CallFunc_GetNotificationSystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Experience_Awarded, CallFunc_Map_Find_Value) == 0x000150, "Member 'BP_BattlePassSystem_C_Process_Experience_Awarded::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Experience_Awarded, CallFunc_Map_Find_ReturnValue) == 0x00016C, "Member 'BP_BattlePassSystem_C_Process_Experience_Awarded::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Experience_Awarded, CallFunc_Add_IntInt_ReturnValue) == 0x000170, "Member 'BP_BattlePassSystem_C_Process_Experience_Awarded::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Experience_Awarded, CallFunc_Less_IntInt_ReturnValue_1) == 0x000174, "Member 'BP_BattlePassSystem_C_Process_Experience_Awarded::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Experience_Awarded, CallFunc_Convert_Total_XP_to_Level_Level_1) == 0x000178, "Member 'BP_BattlePassSystem_C_Process_Experience_Awarded::CallFunc_Convert_Total_XP_to_Level_Level_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Experience_Awarded, CallFunc_Convert_Total_XP_to_Level_XP_within_Level_1) == 0x00017C, "Member 'BP_BattlePassSystem_C_Process_Experience_Awarded::CallFunc_Convert_Total_XP_to_Level_XP_within_Level_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Experience_Awarded, CallFunc_Convert_Total_XP_to_Level_XP_for_Next_Level_1) == 0x000180, "Member 'BP_BattlePassSystem_C_Process_Experience_Awarded::CallFunc_Convert_Total_XP_to_Level_XP_for_Next_Level_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Experience_Awarded, CallFunc_DataProviderFindTableByAssetTable_ReturnValue) == 0x000188, "Member 'BP_BattlePassSystem_C_Process_Experience_Awarded::CallFunc_DataProviderFindTableByAssetTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Experience_Awarded, CallFunc_GetDataTableRowFromName_OutRow) == 0x000190, "Member 'BP_BattlePassSystem_C_Process_Experience_Awarded::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Experience_Awarded, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0001C0, "Member 'BP_BattlePassSystem_C_Process_Experience_Awarded::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.Get Current Season Order
// 0x00B8 (0x00B8 - 0x0000)
struct BP_BattlePassSystem_C_Get_Current_Season_Order final
{
public:
	int32                                         Order;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             CallFunc_DataProviderFindTableByAssetTable_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBattlePassSeason                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x0010(0x00A0)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattlePassSystem_C_Get_Current_Season_Order) == 0x000008, "Wrong alignment on BP_BattlePassSystem_C_Get_Current_Season_Order");
static_assert(sizeof(BP_BattlePassSystem_C_Get_Current_Season_Order) == 0x0000B8, "Wrong size on BP_BattlePassSystem_C_Get_Current_Season_Order");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Current_Season_Order, Order) == 0x000000, "Member 'BP_BattlePassSystem_C_Get_Current_Season_Order::Order' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Current_Season_Order, CallFunc_DataProviderFindTableByAssetTable_ReturnValue) == 0x000008, "Member 'BP_BattlePassSystem_C_Get_Current_Season_Order::CallFunc_DataProviderFindTableByAssetTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Current_Season_Order, CallFunc_GetDataTableRowFromName_OutRow) == 0x000010, "Member 'BP_BattlePassSystem_C_Get_Current_Season_Order::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Current_Season_Order, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000B0, "Member 'BP_BattlePassSystem_C_Get_Current_Season_Order::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Current_Season_Order, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0000B1, "Member 'BP_BattlePassSystem_C_Get_Current_Season_Order::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.Find Levels to Claim
// 0x0060 (0x0060 - 0x0000)
struct BP_BattlePassSystem_C_Find_Levels_to_Claim final
{
public:
	TArray<class FName>                           Seasons;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FCloudBattlePassSeasonClaim>    Claims;                                            // 0x0010(0x0010)(ConstParm, Parm, OutParm)
	TArray<struct FCloudBattlePassSeasonClaim>    Accumulated_Claim;                                 // 0x0020(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Level_in_Season_Level;                // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCloudBattlePassSeasonClaim            K2Node_MakeStruct_CloudBattlePassSeasonClaim;      // 0x004C(0x000C)(NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattlePassSystem_C_Find_Levels_to_Claim) == 0x000008, "Wrong alignment on BP_BattlePassSystem_C_Find_Levels_to_Claim");
static_assert(sizeof(BP_BattlePassSystem_C_Find_Levels_to_Claim) == 0x000060, "Wrong size on BP_BattlePassSystem_C_Find_Levels_to_Claim");
static_assert(offsetof(BP_BattlePassSystem_C_Find_Levels_to_Claim, Seasons) == 0x000000, "Member 'BP_BattlePassSystem_C_Find_Levels_to_Claim::Seasons' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Find_Levels_to_Claim, Claims) == 0x000010, "Member 'BP_BattlePassSystem_C_Find_Levels_to_Claim::Claims' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Find_Levels_to_Claim, Accumulated_Claim) == 0x000020, "Member 'BP_BattlePassSystem_C_Find_Levels_to_Claim::Accumulated_Claim' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Find_Levels_to_Claim, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_BattlePassSystem_C_Find_Levels_to_Claim::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Find_Levels_to_Claim, Temp_int_Array_Index_Variable) == 0x000034, "Member 'BP_BattlePassSystem_C_Find_Levels_to_Claim::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Find_Levels_to_Claim, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BP_BattlePassSystem_C_Find_Levels_to_Claim::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Find_Levels_to_Claim, CallFunc_Array_Get_Item) == 0x00003C, "Member 'BP_BattlePassSystem_C_Find_Levels_to_Claim::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Find_Levels_to_Claim, CallFunc_Get_Level_in_Season_Level) == 0x000044, "Member 'BP_BattlePassSystem_C_Find_Levels_to_Claim::CallFunc_Get_Level_in_Season_Level' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Find_Levels_to_Claim, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'BP_BattlePassSystem_C_Find_Levels_to_Claim::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Find_Levels_to_Claim, K2Node_MakeStruct_CloudBattlePassSeasonClaim) == 0x00004C, "Member 'BP_BattlePassSystem_C_Find_Levels_to_Claim::K2Node_MakeStruct_CloudBattlePassSeasonClaim' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Find_Levels_to_Claim, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'BP_BattlePassSystem_C_Find_Levels_to_Claim::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Find_Levels_to_Claim, CallFunc_Array_Add_ReturnValue) == 0x00005C, "Member 'BP_BattlePassSystem_C_Find_Levels_to_Claim::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.Get Season Max Level
// 0x00C0 (0x00C0 - 0x0000)
struct BP_BattlePassSystem_C_Get_Season_Max_Level final
{
public:
	class FName                                   SeasonName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Max_Level;                                         // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             CallFunc_DataProviderFindTableByAssetTable_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBattlePassSeason                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x0018(0x00A0)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattlePassSystem_C_Get_Season_Max_Level) == 0x000008, "Wrong alignment on BP_BattlePassSystem_C_Get_Season_Max_Level");
static_assert(sizeof(BP_BattlePassSystem_C_Get_Season_Max_Level) == 0x0000C0, "Wrong size on BP_BattlePassSystem_C_Get_Season_Max_Level");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Max_Level, SeasonName) == 0x000000, "Member 'BP_BattlePassSystem_C_Get_Season_Max_Level::SeasonName' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Max_Level, Max_Level) == 0x000008, "Member 'BP_BattlePassSystem_C_Get_Season_Max_Level::Max_Level' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Max_Level, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00000C, "Member 'BP_BattlePassSystem_C_Get_Season_Max_Level::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Max_Level, CallFunc_DataProviderFindTableByAssetTable_ReturnValue) == 0x000010, "Member 'BP_BattlePassSystem_C_Get_Season_Max_Level::CallFunc_DataProviderFindTableByAssetTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Max_Level, CallFunc_GetDataTableRowFromName_OutRow) == 0x000018, "Member 'BP_BattlePassSystem_C_Get_Season_Max_Level::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Max_Level, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000B8, "Member 'BP_BattlePassSystem_C_Get_Season_Max_Level::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Max_Level, CallFunc_Array_Length_ReturnValue) == 0x0000BC, "Member 'BP_BattlePassSystem_C_Get_Season_Max_Level::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.Process Premium Purchase
// 0x01A0 (0x01A0 - 0x0000)
struct BP_BattlePassSystem_C_Process_Premium_Purchase final
{
public:
	class FString                                 PremiumBattlePassProductID;                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   SeasonName;                                        // 0x0014(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StringNotEmpty_ReturnValue;               // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F[0x1];                                       // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             CallFunc_DataProviderFindTableByAssetTable_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0028(0x0010)(ReferenceParm)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Premium_Status_Premium_Active;        // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             CallFunc_DataProviderFindTableByAssetTable_ReturnValue_1; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetUserControllerId_ReturnValue;          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNotificationSystem*                    CallFunc_GetNotificationSystem_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_BattlePassNotification_PremiumAcquired_C* CallFunc_Create_ReturnValue;                       // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCloudBattlePassSeasonState            CallFunc_Map_Find_Value;                           // 0x0074(0x001C)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCloudBattlePassSeasonState            K2Node_SetFieldsInStruct_StructOut;                // 0x0094(0x001C)(NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item;                           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBattlePassSeason                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x00C8(0x00A0)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBattlePassSeasonProducts              CallFunc_Array_Get_Item_1;                         // 0x0170(0x0020)()
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0195(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0196(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_197[0x1];                                      // 0x0197(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x019D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x019E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattlePassSystem_C_Process_Premium_Purchase) == 0x000008, "Wrong alignment on BP_BattlePassSystem_C_Process_Premium_Purchase");
static_assert(sizeof(BP_BattlePassSystem_C_Process_Premium_Purchase) == 0x0001A0, "Wrong size on BP_BattlePassSystem_C_Process_Premium_Purchase");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Premium_Purchase, PremiumBattlePassProductID) == 0x000000, "Member 'BP_BattlePassSystem_C_Process_Premium_Purchase::PremiumBattlePassProductID' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Premium_Purchase, Success) == 0x000010, "Member 'BP_BattlePassSystem_C_Process_Premium_Purchase::Success' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Premium_Purchase, SeasonName) == 0x000014, "Member 'BP_BattlePassSystem_C_Process_Premium_Purchase::SeasonName' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Premium_Purchase, Temp_bool_True_if_break_was_hit_Variable) == 0x00001C, "Member 'BP_BattlePassSystem_C_Process_Premium_Purchase::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Premium_Purchase, CallFunc_StringNotEmpty_ReturnValue) == 0x00001D, "Member 'BP_BattlePassSystem_C_Process_Premium_Purchase::CallFunc_StringNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Premium_Purchase, CallFunc_Not_PreBool_ReturnValue) == 0x00001E, "Member 'BP_BattlePassSystem_C_Process_Premium_Purchase::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Premium_Purchase, CallFunc_DataProviderFindTableByAssetTable_ReturnValue) == 0x000020, "Member 'BP_BattlePassSystem_C_Process_Premium_Purchase::CallFunc_DataProviderFindTableByAssetTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Premium_Purchase, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000028, "Member 'BP_BattlePassSystem_C_Process_Premium_Purchase::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Premium_Purchase, CallFunc_NotEqual_NameName_ReturnValue) == 0x000038, "Member 'BP_BattlePassSystem_C_Process_Premium_Purchase::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Premium_Purchase, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'BP_BattlePassSystem_C_Process_Premium_Purchase::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Premium_Purchase, CallFunc_Get_Premium_Status_Premium_Active) == 0x000040, "Member 'BP_BattlePassSystem_C_Process_Premium_Purchase::CallFunc_Get_Premium_Status_Premium_Active' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Premium_Purchase, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000041, "Member 'BP_BattlePassSystem_C_Process_Premium_Purchase::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Premium_Purchase, Temp_int_Array_Index_Variable) == 0x000044, "Member 'BP_BattlePassSystem_C_Process_Premium_Purchase::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Premium_Purchase, CallFunc_DataProviderFindTableByAssetTable_ReturnValue_1) == 0x000048, "Member 'BP_BattlePassSystem_C_Process_Premium_Purchase::CallFunc_DataProviderFindTableByAssetTable_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Premium_Purchase, CallFunc_GetUserControllerId_ReturnValue) == 0x000050, "Member 'BP_BattlePassSystem_C_Process_Premium_Purchase::CallFunc_GetUserControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Premium_Purchase, CallFunc_GetNotificationSystem_ReturnValue) == 0x000058, "Member 'BP_BattlePassSystem_C_Process_Premium_Purchase::CallFunc_GetNotificationSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Premium_Purchase, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue) == 0x000060, "Member 'BP_BattlePassSystem_C_Process_Premium_Purchase::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Premium_Purchase, CallFunc_Create_ReturnValue) == 0x000068, "Member 'BP_BattlePassSystem_C_Process_Premium_Purchase::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Premium_Purchase, Temp_int_Loop_Counter_Variable) == 0x000070, "Member 'BP_BattlePassSystem_C_Process_Premium_Purchase::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Premium_Purchase, CallFunc_Map_Find_Value) == 0x000074, "Member 'BP_BattlePassSystem_C_Process_Premium_Purchase::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Premium_Purchase, CallFunc_Map_Find_ReturnValue) == 0x000090, "Member 'BP_BattlePassSystem_C_Process_Premium_Purchase::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Premium_Purchase, K2Node_SetFieldsInStruct_StructOut) == 0x000094, "Member 'BP_BattlePassSystem_C_Process_Premium_Purchase::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Premium_Purchase, CallFunc_Add_IntInt_ReturnValue) == 0x0000B0, "Member 'BP_BattlePassSystem_C_Process_Premium_Purchase::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Premium_Purchase, Temp_int_Loop_Counter_Variable_1) == 0x0000B4, "Member 'BP_BattlePassSystem_C_Process_Premium_Purchase::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Premium_Purchase, Temp_int_Array_Index_Variable_1) == 0x0000B8, "Member 'BP_BattlePassSystem_C_Process_Premium_Purchase::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Premium_Purchase, CallFunc_Less_IntInt_ReturnValue) == 0x0000BC, "Member 'BP_BattlePassSystem_C_Process_Premium_Purchase::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Premium_Purchase, CallFunc_Array_Get_Item) == 0x0000C0, "Member 'BP_BattlePassSystem_C_Process_Premium_Purchase::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Premium_Purchase, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000C8, "Member 'BP_BattlePassSystem_C_Process_Premium_Purchase::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Premium_Purchase, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000168, "Member 'BP_BattlePassSystem_C_Process_Premium_Purchase::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Premium_Purchase, CallFunc_Array_Get_Item_1) == 0x000170, "Member 'BP_BattlePassSystem_C_Process_Premium_Purchase::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Premium_Purchase, CallFunc_Array_Length_ReturnValue_1) == 0x000190, "Member 'BP_BattlePassSystem_C_Process_Premium_Purchase::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Premium_Purchase, CallFunc_Less_IntInt_ReturnValue_1) == 0x000194, "Member 'BP_BattlePassSystem_C_Process_Premium_Purchase::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Premium_Purchase, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000195, "Member 'BP_BattlePassSystem_C_Process_Premium_Purchase::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Premium_Purchase, CallFunc_BooleanAND_ReturnValue) == 0x000196, "Member 'BP_BattlePassSystem_C_Process_Premium_Purchase::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Premium_Purchase, CallFunc_Add_IntInt_ReturnValue_1) == 0x000198, "Member 'BP_BattlePassSystem_C_Process_Premium_Purchase::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Premium_Purchase, Temp_bool_True_if_break_was_hit_Variable_1) == 0x00019C, "Member 'BP_BattlePassSystem_C_Process_Premium_Purchase::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Premium_Purchase, CallFunc_Not_PreBool_ReturnValue_1) == 0x00019D, "Member 'BP_BattlePassSystem_C_Process_Premium_Purchase::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Process_Premium_Purchase, CallFunc_BooleanAND_ReturnValue_1) == 0x00019E, "Member 'BP_BattlePassSystem_C_Process_Premium_Purchase::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.Get XP Booster
// 0x003C (0x003C - 0x0000)
struct BP_BattlePassSystem_C_Get_XP_Booster final
{
public:
	int32                                         XP_Booster;                                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCloudBattlePassSeasonState            CallFunc_Map_Find_Value;                           // 0x0008(0x001C)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Round_ReturnValue_1;                      // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattlePassSystem_C_Get_XP_Booster) == 0x000004, "Wrong alignment on BP_BattlePassSystem_C_Get_XP_Booster");
static_assert(sizeof(BP_BattlePassSystem_C_Get_XP_Booster) == 0x00003C, "Wrong size on BP_BattlePassSystem_C_Get_XP_Booster");
static_assert(offsetof(BP_BattlePassSystem_C_Get_XP_Booster, XP_Booster) == 0x000000, "Member 'BP_BattlePassSystem_C_Get_XP_Booster::XP_Booster' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_XP_Booster, Temp_bool_Variable) == 0x000004, "Member 'BP_BattlePassSystem_C_Get_XP_Booster::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_XP_Booster, CallFunc_Map_Find_Value) == 0x000008, "Member 'BP_BattlePassSystem_C_Get_XP_Booster::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_XP_Booster, CallFunc_Map_Find_ReturnValue) == 0x000024, "Member 'BP_BattlePassSystem_C_Get_XP_Booster::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_XP_Booster, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000025, "Member 'BP_BattlePassSystem_C_Get_XP_Booster::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_XP_Booster, CallFunc_Round_ReturnValue) == 0x000028, "Member 'BP_BattlePassSystem_C_Get_XP_Booster::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_XP_Booster, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00002C, "Member 'BP_BattlePassSystem_C_Get_XP_Booster::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_XP_Booster, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000030, "Member 'BP_BattlePassSystem_C_Get_XP_Booster::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_XP_Booster, CallFunc_Round_ReturnValue_1) == 0x000034, "Member 'BP_BattlePassSystem_C_Get_XP_Booster::CallFunc_Round_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_XP_Booster, K2Node_Select_Default) == 0x000038, "Member 'BP_BattlePassSystem_C_Get_XP_Booster::K2Node_Select_Default' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.Get Season Premium Product with Lowest Price
// 0x0168 (0x0168 - 0x0000)
struct BP_BattlePassSystem_C_Get_Season_Premium_Product_with_Lowest_Price final
{
public:
	class FName                                   Season;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameStoreProductInfo                  PremiumProduct;                                    // 0x0008(0x0050)(Parm, OutParm)
	struct FGameStoreProductInfo                  PremiumProductLowestPrice;                         // 0x0058(0x0050)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Season_Premium_Products_AreProductsValid; // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBattlePassSeasonProducts>      CallFunc_Get_Season_Premium_Products_PremiumBattlePassProducts; // 0x00B0(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBattlePassSeasonProducts              CallFunc_Array_Get_Item;                           // 0x00C8(0x0020)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameStoreProducts*                     CallFunc_GetGameStoreProductsManager_ReturnValue;  // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetGameStoreProductInfoById_ProductFound; // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameStoreProductInfo                  CallFunc_GetGameStoreProductInfoById_ReturnValue;  // 0x0108(0x0050)(ConstParm)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetFinalPremiumPrice_FinalPrice;          // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0165(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0166(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattlePassSystem_C_Get_Season_Premium_Product_with_Lowest_Price) == 0x000008, "Wrong alignment on BP_BattlePassSystem_C_Get_Season_Premium_Product_with_Lowest_Price");
static_assert(sizeof(BP_BattlePassSystem_C_Get_Season_Premium_Product_with_Lowest_Price) == 0x000168, "Wrong size on BP_BattlePassSystem_C_Get_Season_Premium_Product_with_Lowest_Price");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Premium_Product_with_Lowest_Price, Season) == 0x000000, "Member 'BP_BattlePassSystem_C_Get_Season_Premium_Product_with_Lowest_Price::Season' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Premium_Product_with_Lowest_Price, PremiumProduct) == 0x000008, "Member 'BP_BattlePassSystem_C_Get_Season_Premium_Product_with_Lowest_Price::PremiumProduct' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Premium_Product_with_Lowest_Price, PremiumProductLowestPrice) == 0x000058, "Member 'BP_BattlePassSystem_C_Get_Season_Premium_Product_with_Lowest_Price::PremiumProductLowestPrice' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Premium_Product_with_Lowest_Price, Temp_int_Array_Index_Variable) == 0x0000A8, "Member 'BP_BattlePassSystem_C_Get_Season_Premium_Product_with_Lowest_Price::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Premium_Product_with_Lowest_Price, CallFunc_Get_Season_Premium_Products_AreProductsValid) == 0x0000AC, "Member 'BP_BattlePassSystem_C_Get_Season_Premium_Product_with_Lowest_Price::CallFunc_Get_Season_Premium_Products_AreProductsValid' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Premium_Product_with_Lowest_Price, CallFunc_Get_Season_Premium_Products_PremiumBattlePassProducts) == 0x0000B0, "Member 'BP_BattlePassSystem_C_Get_Season_Premium_Product_with_Lowest_Price::CallFunc_Get_Season_Premium_Products_PremiumBattlePassProducts' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Premium_Product_with_Lowest_Price, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000C0, "Member 'BP_BattlePassSystem_C_Get_Season_Premium_Product_with_Lowest_Price::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Premium_Product_with_Lowest_Price, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'BP_BattlePassSystem_C_Get_Season_Premium_Product_with_Lowest_Price::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Premium_Product_with_Lowest_Price, CallFunc_Array_Length_ReturnValue) == 0x0000E8, "Member 'BP_BattlePassSystem_C_Get_Season_Premium_Product_with_Lowest_Price::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Premium_Product_with_Lowest_Price, Temp_int_Loop_Counter_Variable) == 0x0000EC, "Member 'BP_BattlePassSystem_C_Get_Season_Premium_Product_with_Lowest_Price::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Premium_Product_with_Lowest_Price, CallFunc_Less_IntInt_ReturnValue) == 0x0000F0, "Member 'BP_BattlePassSystem_C_Get_Season_Premium_Product_with_Lowest_Price::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Premium_Product_with_Lowest_Price, CallFunc_Add_IntInt_ReturnValue) == 0x0000F4, "Member 'BP_BattlePassSystem_C_Get_Season_Premium_Product_with_Lowest_Price::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Premium_Product_with_Lowest_Price, CallFunc_GetGameStoreProductsManager_ReturnValue) == 0x0000F8, "Member 'BP_BattlePassSystem_C_Get_Season_Premium_Product_with_Lowest_Price::CallFunc_GetGameStoreProductsManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Premium_Product_with_Lowest_Price, CallFunc_GetGameStoreProductInfoById_ProductFound) == 0x000100, "Member 'BP_BattlePassSystem_C_Get_Season_Premium_Product_with_Lowest_Price::CallFunc_GetGameStoreProductInfoById_ProductFound' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Premium_Product_with_Lowest_Price, CallFunc_GetGameStoreProductInfoById_ReturnValue) == 0x000108, "Member 'BP_BattlePassSystem_C_Get_Season_Premium_Product_with_Lowest_Price::CallFunc_GetGameStoreProductInfoById_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Premium_Product_with_Lowest_Price, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000158, "Member 'BP_BattlePassSystem_C_Get_Season_Premium_Product_with_Lowest_Price::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Premium_Product_with_Lowest_Price, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x00015C, "Member 'BP_BattlePassSystem_C_Get_Season_Premium_Product_with_Lowest_Price::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Premium_Product_with_Lowest_Price, CallFunc_GetFinalPremiumPrice_FinalPrice) == 0x000160, "Member 'BP_BattlePassSystem_C_Get_Season_Premium_Product_with_Lowest_Price::CallFunc_GetFinalPremiumPrice_FinalPrice' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Premium_Product_with_Lowest_Price, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000164, "Member 'BP_BattlePassSystem_C_Get_Season_Premium_Product_with_Lowest_Price::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Premium_Product_with_Lowest_Price, CallFunc_Less_IntInt_ReturnValue_1) == 0x000165, "Member 'BP_BattlePassSystem_C_Get_Season_Premium_Product_with_Lowest_Price::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Premium_Product_with_Lowest_Price, CallFunc_BooleanAND_ReturnValue) == 0x000166, "Member 'BP_BattlePassSystem_C_Get_Season_Premium_Product_with_Lowest_Price::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.Get Locked Rewards
// 0x0078 (0x0078 - 0x0000)
struct BP_BattlePassSystem_C_Get_Locked_Rewards final
{
public:
	TArray<struct FS_BattlePassLevelRewardFull>   Locked_Rewards;                                    // 0x0000(0x0010)(Parm, OutParm)
	struct FCloudBattlePassSeasonState            Player_Progress_In_Season;                         // 0x0010(0x001C)(Edit, BlueprintVisible, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Get_Premium_Status_Premium_Active;        // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Convert_Total_XP_to_Level_Level;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Convert_Total_XP_to_Level_XP_within_Level; // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Convert_Total_XP_to_Level_XP_for_Next_Level; // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCloudBattlePassSeasonState            CallFunc_Map_Find_Value;                           // 0x0040(0x001C)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_BattlePassLevelRewardFull>   CallFunc_Compile_Rewards_in_Level_Range_Rewards;   // 0x0060(0x0010)(ReferenceParm)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattlePassSystem_C_Get_Locked_Rewards) == 0x000008, "Wrong alignment on BP_BattlePassSystem_C_Get_Locked_Rewards");
static_assert(sizeof(BP_BattlePassSystem_C_Get_Locked_Rewards) == 0x000078, "Wrong size on BP_BattlePassSystem_C_Get_Locked_Rewards");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Locked_Rewards, Locked_Rewards) == 0x000000, "Member 'BP_BattlePassSystem_C_Get_Locked_Rewards::Locked_Rewards' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Locked_Rewards, Player_Progress_In_Season) == 0x000010, "Member 'BP_BattlePassSystem_C_Get_Locked_Rewards::Player_Progress_In_Season' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Locked_Rewards, CallFunc_NotEqual_NameName_ReturnValue) == 0x00002C, "Member 'BP_BattlePassSystem_C_Get_Locked_Rewards::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Locked_Rewards, CallFunc_Get_Premium_Status_Premium_Active) == 0x00002D, "Member 'BP_BattlePassSystem_C_Get_Locked_Rewards::CallFunc_Get_Premium_Status_Premium_Active' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Locked_Rewards, CallFunc_Convert_Total_XP_to_Level_Level) == 0x000030, "Member 'BP_BattlePassSystem_C_Get_Locked_Rewards::CallFunc_Convert_Total_XP_to_Level_Level' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Locked_Rewards, CallFunc_Convert_Total_XP_to_Level_XP_within_Level) == 0x000034, "Member 'BP_BattlePassSystem_C_Get_Locked_Rewards::CallFunc_Convert_Total_XP_to_Level_XP_within_Level' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Locked_Rewards, CallFunc_Convert_Total_XP_to_Level_XP_for_Next_Level) == 0x000038, "Member 'BP_BattlePassSystem_C_Get_Locked_Rewards::CallFunc_Convert_Total_XP_to_Level_XP_for_Next_Level' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Locked_Rewards, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_BattlePassSystem_C_Get_Locked_Rewards::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Locked_Rewards, CallFunc_Map_Find_Value) == 0x000040, "Member 'BP_BattlePassSystem_C_Get_Locked_Rewards::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Locked_Rewards, CallFunc_Map_Find_ReturnValue) == 0x00005C, "Member 'BP_BattlePassSystem_C_Get_Locked_Rewards::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Locked_Rewards, CallFunc_Compile_Rewards_in_Level_Range_Rewards) == 0x000060, "Member 'BP_BattlePassSystem_C_Get_Locked_Rewards::CallFunc_Compile_Rewards_in_Level_Range_Rewards' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Locked_Rewards, CallFunc_Greater_IntInt_ReturnValue) == 0x000070, "Member 'BP_BattlePassSystem_C_Get_Locked_Rewards::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Locked_Rewards, CallFunc_Not_PreBool_ReturnValue) == 0x000071, "Member 'BP_BattlePassSystem_C_Get_Locked_Rewards::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Locked_Rewards, CallFunc_BooleanAND_ReturnValue) == 0x000072, "Member 'BP_BattlePassSystem_C_Get_Locked_Rewards::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.Get Total XP
// 0x0030 (0x0030 - 0x0000)
struct BP_BattlePassSystem_C_Get_Total_XP final
{
public:
	class FName                                   SeasonName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalXP;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCloudBattlePassSeasonState            CallFunc_Map_Find_Value;                           // 0x0010(0x001C)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattlePassSystem_C_Get_Total_XP) == 0x000004, "Wrong alignment on BP_BattlePassSystem_C_Get_Total_XP");
static_assert(sizeof(BP_BattlePassSystem_C_Get_Total_XP) == 0x000030, "Wrong size on BP_BattlePassSystem_C_Get_Total_XP");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Total_XP, SeasonName) == 0x000000, "Member 'BP_BattlePassSystem_C_Get_Total_XP::SeasonName' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Total_XP, TotalXP) == 0x000008, "Member 'BP_BattlePassSystem_C_Get_Total_XP::TotalXP' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Total_XP, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00000C, "Member 'BP_BattlePassSystem_C_Get_Total_XP::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Total_XP, CallFunc_Map_Find_Value) == 0x000010, "Member 'BP_BattlePassSystem_C_Get_Total_XP::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Total_XP, CallFunc_Map_Find_ReturnValue) == 0x00002C, "Member 'BP_BattlePassSystem_C_Get_Total_XP::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.Get Unclaimed Levels in Season
// 0x0044 (0x0044 - 0x0000)
struct BP_BattlePassSystem_C_Get_Unclaimed_Levels_in_Season final
{
public:
	class FName                                   Season;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Free_Levels;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Premium_Levels;                                    // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCloudBattlePassSeasonState            CallFunc_Map_Find_Value;                           // 0x0010(0x001C)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Convert_Total_XP_to_Level_Level;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Convert_Total_XP_to_Level_XP_within_Level; // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Convert_Total_XP_to_Level_XP_for_Next_Level; // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattlePassSystem_C_Get_Unclaimed_Levels_in_Season) == 0x000004, "Wrong alignment on BP_BattlePassSystem_C_Get_Unclaimed_Levels_in_Season");
static_assert(sizeof(BP_BattlePassSystem_C_Get_Unclaimed_Levels_in_Season) == 0x000044, "Wrong size on BP_BattlePassSystem_C_Get_Unclaimed_Levels_in_Season");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Unclaimed_Levels_in_Season, Season) == 0x000000, "Member 'BP_BattlePassSystem_C_Get_Unclaimed_Levels_in_Season::Season' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Unclaimed_Levels_in_Season, Free_Levels) == 0x000008, "Member 'BP_BattlePassSystem_C_Get_Unclaimed_Levels_in_Season::Free_Levels' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Unclaimed_Levels_in_Season, Premium_Levels) == 0x00000C, "Member 'BP_BattlePassSystem_C_Get_Unclaimed_Levels_in_Season::Premium_Levels' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Unclaimed_Levels_in_Season, CallFunc_Map_Find_Value) == 0x000010, "Member 'BP_BattlePassSystem_C_Get_Unclaimed_Levels_in_Season::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Unclaimed_Levels_in_Season, CallFunc_Map_Find_ReturnValue) == 0x00002C, "Member 'BP_BattlePassSystem_C_Get_Unclaimed_Levels_in_Season::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Unclaimed_Levels_in_Season, CallFunc_Convert_Total_XP_to_Level_Level) == 0x000030, "Member 'BP_BattlePassSystem_C_Get_Unclaimed_Levels_in_Season::CallFunc_Convert_Total_XP_to_Level_Level' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Unclaimed_Levels_in_Season, CallFunc_Convert_Total_XP_to_Level_XP_within_Level) == 0x000034, "Member 'BP_BattlePassSystem_C_Get_Unclaimed_Levels_in_Season::CallFunc_Convert_Total_XP_to_Level_XP_within_Level' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Unclaimed_Levels_in_Season, CallFunc_Convert_Total_XP_to_Level_XP_for_Next_Level) == 0x000038, "Member 'BP_BattlePassSystem_C_Get_Unclaimed_Levels_in_Season::CallFunc_Convert_Total_XP_to_Level_XP_for_Next_Level' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Unclaimed_Levels_in_Season, CallFunc_Subtract_IntInt_ReturnValue) == 0x00003C, "Member 'BP_BattlePassSystem_C_Get_Unclaimed_Levels_in_Season::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Unclaimed_Levels_in_Season, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000040, "Member 'BP_BattlePassSystem_C_Get_Unclaimed_Levels_in_Season::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.ShelterOnboardingSequenceFinished
// 0x00E0 (0x00E0 - 0x0000)
struct BP_BattlePassSystem_C_ShelterOnboardingSequenceFinished final
{
public:
	bool                                          StatChanged;                                       // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameMode_Shelter_C*                 ShelterGameMode;                                   // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FCloudBattlePassExperienceEvent        CallFunc_Array_Get_Item;                           // 0x0058(0x0024)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Process_Experience_Awarded_Success;       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Process_Experience_Awarded_Player_Stats_Changed; // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82[0x2];                                       // 0x0082(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A2[0x2];                                       // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x00A4(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default_1;                           // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameMode_Shelter_C*                 K2Node_DynamicCast_AsBP_Game_Mode_Shelter;         // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattlePassSystem_C_ShelterOnboardingSequenceFinished) == 0x000008, "Wrong alignment on BP_BattlePassSystem_C_ShelterOnboardingSequenceFinished");
static_assert(sizeof(BP_BattlePassSystem_C_ShelterOnboardingSequenceFinished) == 0x0000E0, "Wrong size on BP_BattlePassSystem_C_ShelterOnboardingSequenceFinished");
static_assert(offsetof(BP_BattlePassSystem_C_ShelterOnboardingSequenceFinished, StatChanged) == 0x000000, "Member 'BP_BattlePassSystem_C_ShelterOnboardingSequenceFinished::StatChanged' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ShelterOnboardingSequenceFinished, ShelterGameMode) == 0x000008, "Member 'BP_BattlePassSystem_C_ShelterOnboardingSequenceFinished::ShelterGameMode' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ShelterOnboardingSequenceFinished, Temp_struct_Variable) == 0x000010, "Member 'BP_BattlePassSystem_C_ShelterOnboardingSequenceFinished::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ShelterOnboardingSequenceFinished, Temp_struct_Variable_1) == 0x000020, "Member 'BP_BattlePassSystem_C_ShelterOnboardingSequenceFinished::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ShelterOnboardingSequenceFinished, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BP_BattlePassSystem_C_ShelterOnboardingSequenceFinished::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ShelterOnboardingSequenceFinished, Temp_bool_Variable) == 0x000034, "Member 'BP_BattlePassSystem_C_ShelterOnboardingSequenceFinished::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ShelterOnboardingSequenceFinished, Temp_string_Variable) == 0x000038, "Member 'BP_BattlePassSystem_C_ShelterOnboardingSequenceFinished::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ShelterOnboardingSequenceFinished, Temp_string_Variable_1) == 0x000048, "Member 'BP_BattlePassSystem_C_ShelterOnboardingSequenceFinished::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ShelterOnboardingSequenceFinished, CallFunc_Array_Get_Item) == 0x000058, "Member 'BP_BattlePassSystem_C_ShelterOnboardingSequenceFinished::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ShelterOnboardingSequenceFinished, CallFunc_Array_Length_ReturnValue) == 0x00007C, "Member 'BP_BattlePassSystem_C_ShelterOnboardingSequenceFinished::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ShelterOnboardingSequenceFinished, CallFunc_Process_Experience_Awarded_Success) == 0x000080, "Member 'BP_BattlePassSystem_C_ShelterOnboardingSequenceFinished::CallFunc_Process_Experience_Awarded_Success' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ShelterOnboardingSequenceFinished, CallFunc_Process_Experience_Awarded_Player_Stats_Changed) == 0x000081, "Member 'BP_BattlePassSystem_C_ShelterOnboardingSequenceFinished::CallFunc_Process_Experience_Awarded_Player_Stats_Changed' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ShelterOnboardingSequenceFinished, Temp_int_Loop_Counter_Variable) == 0x000084, "Member 'BP_BattlePassSystem_C_ShelterOnboardingSequenceFinished::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ShelterOnboardingSequenceFinished, K2Node_Select_Default) == 0x000088, "Member 'BP_BattlePassSystem_C_ShelterOnboardingSequenceFinished::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ShelterOnboardingSequenceFinished, CallFunc_Less_IntInt_ReturnValue) == 0x000098, "Member 'BP_BattlePassSystem_C_ShelterOnboardingSequenceFinished::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ShelterOnboardingSequenceFinished, CallFunc_Add_IntInt_ReturnValue) == 0x00009C, "Member 'BP_BattlePassSystem_C_ShelterOnboardingSequenceFinished::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ShelterOnboardingSequenceFinished, CallFunc_IsValid_ReturnValue) == 0x0000A0, "Member 'BP_BattlePassSystem_C_ShelterOnboardingSequenceFinished::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ShelterOnboardingSequenceFinished, Temp_bool_Variable_1) == 0x0000A1, "Member 'BP_BattlePassSystem_C_ShelterOnboardingSequenceFinished::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ShelterOnboardingSequenceFinished, K2Node_CreateDelegate_OutputDelegate) == 0x0000A4, "Member 'BP_BattlePassSystem_C_ShelterOnboardingSequenceFinished::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ShelterOnboardingSequenceFinished, K2Node_Select_Default_1) == 0x0000B8, "Member 'BP_BattlePassSystem_C_ShelterOnboardingSequenceFinished::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ShelterOnboardingSequenceFinished, CallFunc_GetGameMode_ReturnValue) == 0x0000C8, "Member 'BP_BattlePassSystem_C_ShelterOnboardingSequenceFinished::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ShelterOnboardingSequenceFinished, K2Node_DynamicCast_AsBP_Game_Mode_Shelter) == 0x0000D0, "Member 'BP_BattlePassSystem_C_ShelterOnboardingSequenceFinished::K2Node_DynamicCast_AsBP_Game_Mode_Shelter' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ShelterOnboardingSequenceFinished, K2Node_DynamicCast_bSuccess) == 0x0000D8, "Member 'BP_BattlePassSystem_C_ShelterOnboardingSequenceFinished::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.Get newest legacy season
// 0x0068 (0x0068 - 0x0000)
struct BP_BattlePassSystem_C_Get_newest_legacy_season final
{
public:
	class FName                                   Newest_legacy_season;                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Newest_legacy_season_number;                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Newest_legacy_season_name;                         // 0x000C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Highest_legacy_season_number;                      // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePassSystem*                      CallFunc_GetBattlePassSystem_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_BattlePassSystem_C*                 K2Node_DynamicCast_AsBP_Battle_Pass_System;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetAvailableLegacySeasons_AvailableLegacySeasons; // 0x0040(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Get_Season_Number_Number;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattlePassSystem_C_Get_newest_legacy_season) == 0x000008, "Wrong alignment on BP_BattlePassSystem_C_Get_newest_legacy_season");
static_assert(sizeof(BP_BattlePassSystem_C_Get_newest_legacy_season) == 0x000068, "Wrong size on BP_BattlePassSystem_C_Get_newest_legacy_season");
static_assert(offsetof(BP_BattlePassSystem_C_Get_newest_legacy_season, Newest_legacy_season) == 0x000000, "Member 'BP_BattlePassSystem_C_Get_newest_legacy_season::Newest_legacy_season' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_newest_legacy_season, Newest_legacy_season_number) == 0x000008, "Member 'BP_BattlePassSystem_C_Get_newest_legacy_season::Newest_legacy_season_number' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_newest_legacy_season, Newest_legacy_season_name) == 0x00000C, "Member 'BP_BattlePassSystem_C_Get_newest_legacy_season::Newest_legacy_season_name' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_newest_legacy_season, Highest_legacy_season_number) == 0x000014, "Member 'BP_BattlePassSystem_C_Get_newest_legacy_season::Highest_legacy_season_number' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_newest_legacy_season, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_BattlePassSystem_C_Get_newest_legacy_season::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_newest_legacy_season, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_BattlePassSystem_C_Get_newest_legacy_season::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_newest_legacy_season, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_BattlePassSystem_C_Get_newest_legacy_season::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_newest_legacy_season, CallFunc_GetBattlePassSystem_ReturnValue) == 0x000028, "Member 'BP_BattlePassSystem_C_Get_newest_legacy_season::CallFunc_GetBattlePassSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_newest_legacy_season, K2Node_DynamicCast_AsBP_Battle_Pass_System) == 0x000030, "Member 'BP_BattlePassSystem_C_Get_newest_legacy_season::K2Node_DynamicCast_AsBP_Battle_Pass_System' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_newest_legacy_season, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_BattlePassSystem_C_Get_newest_legacy_season::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_newest_legacy_season, CallFunc_GetAvailableLegacySeasons_AvailableLegacySeasons) == 0x000040, "Member 'BP_BattlePassSystem_C_Get_newest_legacy_season::CallFunc_GetAvailableLegacySeasons_AvailableLegacySeasons' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_newest_legacy_season, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_BattlePassSystem_C_Get_newest_legacy_season::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_newest_legacy_season, CallFunc_Array_Get_Item) == 0x000054, "Member 'BP_BattlePassSystem_C_Get_newest_legacy_season::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_newest_legacy_season, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'BP_BattlePassSystem_C_Get_newest_legacy_season::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_newest_legacy_season, CallFunc_Get_Season_Number_Number) == 0x000060, "Member 'BP_BattlePassSystem_C_Get_newest_legacy_season::CallFunc_Get_Season_Number_Number' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_newest_legacy_season, CallFunc_Greater_IntInt_ReturnValue) == 0x000064, "Member 'BP_BattlePassSystem_C_Get_newest_legacy_season::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.GetSeasonName
// 0x0018 (0x0018 - 0x0000)
struct BP_BattlePassSystem_C_GetSeasonName final
{
public:
	EBattlePassSeasonType                         SeasonType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ReturnValue;                                       // 0x0004(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Get_Season_Name_Active_Season_Name;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattlePassSystem_C_GetSeasonName) == 0x000004, "Wrong alignment on BP_BattlePassSystem_C_GetSeasonName");
static_assert(sizeof(BP_BattlePassSystem_C_GetSeasonName) == 0x000018, "Wrong size on BP_BattlePassSystem_C_GetSeasonName");
static_assert(offsetof(BP_BattlePassSystem_C_GetSeasonName, SeasonType) == 0x000000, "Member 'BP_BattlePassSystem_C_GetSeasonName::SeasonType' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetSeasonName, ReturnValue) == 0x000004, "Member 'BP_BattlePassSystem_C_GetSeasonName::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetSeasonName, CallFunc_MakeLiteralByte_ReturnValue) == 0x00000C, "Member 'BP_BattlePassSystem_C_GetSeasonName::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetSeasonName, CallFunc_GetValidValue_ReturnValue) == 0x00000D, "Member 'BP_BattlePassSystem_C_GetSeasonName::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetSeasonName, CallFunc_Get_Season_Name_Active_Season_Name) == 0x000010, "Member 'BP_BattlePassSystem_C_GetSeasonName::CallFunc_Get_Season_Name_Active_Season_Name' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.GetLevelInSeason
// 0x0010 (0x0010 - 0x0000)
struct BP_BattlePassSystem_C_GetLevelInSeason final
{
public:
	class FName                                   SeasonName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Level_in_Season_Level;                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattlePassSystem_C_GetLevelInSeason) == 0x000004, "Wrong alignment on BP_BattlePassSystem_C_GetLevelInSeason");
static_assert(sizeof(BP_BattlePassSystem_C_GetLevelInSeason) == 0x000010, "Wrong size on BP_BattlePassSystem_C_GetLevelInSeason");
static_assert(offsetof(BP_BattlePassSystem_C_GetLevelInSeason, SeasonName) == 0x000000, "Member 'BP_BattlePassSystem_C_GetLevelInSeason::SeasonName' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetLevelInSeason, ReturnValue) == 0x000008, "Member 'BP_BattlePassSystem_C_GetLevelInSeason::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetLevelInSeason, CallFunc_Get_Level_in_Season_Level) == 0x00000C, "Member 'BP_BattlePassSystem_C_GetLevelInSeason::CallFunc_Get_Level_in_Season_Level' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.GetPremiumStatus
// 0x000C (0x000C - 0x0000)
struct BP_BattlePassSystem_C_GetPremiumStatus final
{
public:
	class FName                                   SeasonName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Get_Premium_Status_Premium_Active;        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattlePassSystem_C_GetPremiumStatus) == 0x000004, "Wrong alignment on BP_BattlePassSystem_C_GetPremiumStatus");
static_assert(sizeof(BP_BattlePassSystem_C_GetPremiumStatus) == 0x00000C, "Wrong size on BP_BattlePassSystem_C_GetPremiumStatus");
static_assert(offsetof(BP_BattlePassSystem_C_GetPremiumStatus, SeasonName) == 0x000000, "Member 'BP_BattlePassSystem_C_GetPremiumStatus::SeasonName' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetPremiumStatus, ReturnValue) == 0x000008, "Member 'BP_BattlePassSystem_C_GetPremiumStatus::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetPremiumStatus, CallFunc_Get_Premium_Status_Premium_Active) == 0x000009, "Member 'BP_BattlePassSystem_C_GetPremiumStatus::CallFunc_Get_Premium_Status_Premium_Active' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.GetTotalXP
// 0x0010 (0x0010 - 0x0000)
struct BP_BattlePassSystem_C_GetTotalXP final
{
public:
	class FName                                   SeasonName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Total_XP_TotalXP;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattlePassSystem_C_GetTotalXP) == 0x000004, "Wrong alignment on BP_BattlePassSystem_C_GetTotalXP");
static_assert(sizeof(BP_BattlePassSystem_C_GetTotalXP) == 0x000010, "Wrong size on BP_BattlePassSystem_C_GetTotalXP");
static_assert(offsetof(BP_BattlePassSystem_C_GetTotalXP, SeasonName) == 0x000000, "Member 'BP_BattlePassSystem_C_GetTotalXP::SeasonName' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetTotalXP, ReturnValue) == 0x000008, "Member 'BP_BattlePassSystem_C_GetTotalXP::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetTotalXP, CallFunc_Get_Total_XP_TotalXP) == 0x00000C, "Member 'BP_BattlePassSystem_C_GetTotalXP::CallFunc_Get_Total_XP_TotalXP' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.GetXPBooster
// 0x0008 (0x0008 - 0x0000)
struct BP_BattlePassSystem_C_GetXPBooster final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_XP_Booster_XP_Booster;                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattlePassSystem_C_GetXPBooster) == 0x000004, "Wrong alignment on BP_BattlePassSystem_C_GetXPBooster");
static_assert(sizeof(BP_BattlePassSystem_C_GetXPBooster) == 0x000008, "Wrong size on BP_BattlePassSystem_C_GetXPBooster");
static_assert(offsetof(BP_BattlePassSystem_C_GetXPBooster, ReturnValue) == 0x000000, "Member 'BP_BattlePassSystem_C_GetXPBooster::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetXPBooster, CallFunc_Get_XP_Booster_XP_Booster) == 0x000004, "Member 'BP_BattlePassSystem_C_GetXPBooster::CallFunc_Get_XP_Booster_XP_Booster' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.GetXPWithinLevel
// 0x0010 (0x0010 - 0x0000)
struct BP_BattlePassSystem_C_GetXPWithinLevel final
{
public:
	class FName                                   SeasonName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_XP_Within_Level_Level;                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattlePassSystem_C_GetXPWithinLevel) == 0x000004, "Wrong alignment on BP_BattlePassSystem_C_GetXPWithinLevel");
static_assert(sizeof(BP_BattlePassSystem_C_GetXPWithinLevel) == 0x000010, "Wrong size on BP_BattlePassSystem_C_GetXPWithinLevel");
static_assert(offsetof(BP_BattlePassSystem_C_GetXPWithinLevel, SeasonName) == 0x000000, "Member 'BP_BattlePassSystem_C_GetXPWithinLevel::SeasonName' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetXPWithinLevel, ReturnValue) == 0x000008, "Member 'BP_BattlePassSystem_C_GetXPWithinLevel::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetXPWithinLevel, CallFunc_Get_XP_Within_Level_Level) == 0x00000C, "Member 'BP_BattlePassSystem_C_GetXPWithinLevel::CallFunc_Get_XP_Within_Level_Level' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.ParseCodeReward_BP_Structure
// 0x0090 (0x0090 - 0x0000)
struct BP_BattlePassSystem_C_ParseCodeReward_BP_Structure final
{
public:
	TArray<struct FS_BattlePassLevelRewardFull>   In_BP_structure;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FBattlePassLevelRewardFull>     OutCodeStructure;                                  // 0x0010(0x0010)(Parm, OutParm)
	TArray<struct FBattlePassLevelRewardFull>     TempArray;                                         // 0x0020(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_BattlePassLevelRewardFull           CallFunc_Array_Get_Item;                           // 0x0040(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBattlePassLevelRewardFull             K2Node_MakeStruct_BattlePassLevelRewardFull;       // 0x0068(0x0020)(NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattlePassSystem_C_ParseCodeReward_BP_Structure) == 0x000008, "Wrong alignment on BP_BattlePassSystem_C_ParseCodeReward_BP_Structure");
static_assert(sizeof(BP_BattlePassSystem_C_ParseCodeReward_BP_Structure) == 0x000090, "Wrong size on BP_BattlePassSystem_C_ParseCodeReward_BP_Structure");
static_assert(offsetof(BP_BattlePassSystem_C_ParseCodeReward_BP_Structure, In_BP_structure) == 0x000000, "Member 'BP_BattlePassSystem_C_ParseCodeReward_BP_Structure::In_BP_structure' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ParseCodeReward_BP_Structure, OutCodeStructure) == 0x000010, "Member 'BP_BattlePassSystem_C_ParseCodeReward_BP_Structure::OutCodeStructure' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ParseCodeReward_BP_Structure, TempArray) == 0x000020, "Member 'BP_BattlePassSystem_C_ParseCodeReward_BP_Structure::TempArray' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ParseCodeReward_BP_Structure, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_BattlePassSystem_C_ParseCodeReward_BP_Structure::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ParseCodeReward_BP_Structure, Temp_int_Array_Index_Variable) == 0x000034, "Member 'BP_BattlePassSystem_C_ParseCodeReward_BP_Structure::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ParseCodeReward_BP_Structure, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BP_BattlePassSystem_C_ParseCodeReward_BP_Structure::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ParseCodeReward_BP_Structure, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_BattlePassSystem_C_ParseCodeReward_BP_Structure::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ParseCodeReward_BP_Structure, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'BP_BattlePassSystem_C_ParseCodeReward_BP_Structure::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ParseCodeReward_BP_Structure, K2Node_MakeStruct_BattlePassLevelRewardFull) == 0x000068, "Member 'BP_BattlePassSystem_C_ParseCodeReward_BP_Structure::K2Node_MakeStruct_BattlePassLevelRewardFull' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ParseCodeReward_BP_Structure, CallFunc_Add_IntInt_ReturnValue) == 0x000088, "Member 'BP_BattlePassSystem_C_ParseCodeReward_BP_Structure::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_ParseCodeReward_BP_Structure, CallFunc_Array_Add_ReturnValue) == 0x00008C, "Member 'BP_BattlePassSystem_C_ParseCodeReward_BP_Structure::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.GetUnclaimedRewardsCode
// 0x0088 (0x0088 - 0x0000)
struct BP_BattlePassSystem_C_GetUnclaimedRewardsCode final
{
public:
	bool                                          IsLegacy;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBattlePassLevelRewardFull>     FreeRewards;                                       // 0x0008(0x0010)(Parm, OutParm)
	TArray<struct FBattlePassLevelRewardFull>     PremiumRewards;                                    // 0x0018(0x0010)(Parm, OutParm)
	TArray<class FName>                           ReturnValue;                                       // 0x0028(0x0010)(Parm, OutParm, ReturnParm)
	TArray<class FName>                           CallFunc_Get_Unclaimed_Rewards_Seasons;            // 0x0038(0x0010)(ReferenceParm)
	TArray<struct FS_BattlePassLevelRewardFull>   CallFunc_Get_Unclaimed_Rewards_Free_Rewards;       // 0x0048(0x0010)(ReferenceParm)
	TArray<struct FS_BattlePassLevelRewardFull>   CallFunc_Get_Unclaimed_Rewards_Premium_Rewards;    // 0x0058(0x0010)(ReferenceParm)
	TArray<struct FBattlePassLevelRewardFull>     CallFunc_ParseCodeReward_BP_Structure_OutCodeStructure; // 0x0068(0x0010)(ReferenceParm)
	TArray<struct FBattlePassLevelRewardFull>     CallFunc_ParseCodeReward_BP_Structure_OutCodeStructure_1; // 0x0078(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_BattlePassSystem_C_GetUnclaimedRewardsCode) == 0x000008, "Wrong alignment on BP_BattlePassSystem_C_GetUnclaimedRewardsCode");
static_assert(sizeof(BP_BattlePassSystem_C_GetUnclaimedRewardsCode) == 0x000088, "Wrong size on BP_BattlePassSystem_C_GetUnclaimedRewardsCode");
static_assert(offsetof(BP_BattlePassSystem_C_GetUnclaimedRewardsCode, IsLegacy) == 0x000000, "Member 'BP_BattlePassSystem_C_GetUnclaimedRewardsCode::IsLegacy' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetUnclaimedRewardsCode, FreeRewards) == 0x000008, "Member 'BP_BattlePassSystem_C_GetUnclaimedRewardsCode::FreeRewards' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetUnclaimedRewardsCode, PremiumRewards) == 0x000018, "Member 'BP_BattlePassSystem_C_GetUnclaimedRewardsCode::PremiumRewards' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetUnclaimedRewardsCode, ReturnValue) == 0x000028, "Member 'BP_BattlePassSystem_C_GetUnclaimedRewardsCode::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetUnclaimedRewardsCode, CallFunc_Get_Unclaimed_Rewards_Seasons) == 0x000038, "Member 'BP_BattlePassSystem_C_GetUnclaimedRewardsCode::CallFunc_Get_Unclaimed_Rewards_Seasons' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetUnclaimedRewardsCode, CallFunc_Get_Unclaimed_Rewards_Free_Rewards) == 0x000048, "Member 'BP_BattlePassSystem_C_GetUnclaimedRewardsCode::CallFunc_Get_Unclaimed_Rewards_Free_Rewards' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetUnclaimedRewardsCode, CallFunc_Get_Unclaimed_Rewards_Premium_Rewards) == 0x000058, "Member 'BP_BattlePassSystem_C_GetUnclaimedRewardsCode::CallFunc_Get_Unclaimed_Rewards_Premium_Rewards' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetUnclaimedRewardsCode, CallFunc_ParseCodeReward_BP_Structure_OutCodeStructure) == 0x000068, "Member 'BP_BattlePassSystem_C_GetUnclaimedRewardsCode::CallFunc_ParseCodeReward_BP_Structure_OutCodeStructure' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetUnclaimedRewardsCode, CallFunc_ParseCodeReward_BP_Structure_OutCodeStructure_1) == 0x000078, "Member 'BP_BattlePassSystem_C_GetUnclaimedRewardsCode::CallFunc_ParseCodeReward_BP_Structure_OutCodeStructure_1' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.IsLegacySeason
// 0x00C0 (0x00C0 - 0x0000)
struct BP_BattlePassSystem_C_IsLegacySeason final
{
public:
	class FName                                   Season;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLegacy;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             CallFunc_DataProviderFindTableByAssetTable_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBattlePassSeason                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x0018(0x00A0)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattlePassSystem_C_IsLegacySeason) == 0x000008, "Wrong alignment on BP_BattlePassSystem_C_IsLegacySeason");
static_assert(sizeof(BP_BattlePassSystem_C_IsLegacySeason) == 0x0000C0, "Wrong size on BP_BattlePassSystem_C_IsLegacySeason");
static_assert(offsetof(BP_BattlePassSystem_C_IsLegacySeason, Season) == 0x000000, "Member 'BP_BattlePassSystem_C_IsLegacySeason::Season' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_IsLegacySeason, IsLegacy) == 0x000008, "Member 'BP_BattlePassSystem_C_IsLegacySeason::IsLegacy' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_IsLegacySeason, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000009, "Member 'BP_BattlePassSystem_C_IsLegacySeason::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_IsLegacySeason, CallFunc_DataProviderFindTableByAssetTable_ReturnValue) == 0x000010, "Member 'BP_BattlePassSystem_C_IsLegacySeason::CallFunc_DataProviderFindTableByAssetTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_IsLegacySeason, CallFunc_GetDataTableRowFromName_OutRow) == 0x000018, "Member 'BP_BattlePassSystem_C_IsLegacySeason::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_IsLegacySeason, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000B8, "Member 'BP_BattlePassSystem_C_IsLegacySeason::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.Get Season Premium Products
// 0x01D8 (0x01D8 - 0x0000)
struct BP_BattlePassSystem_C_Get_Season_Premium_Products final
{
public:
	class FName                                   Season;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AreProductsValid;                                  // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBattlePassSeasonProducts>      PremiumBattlePassProducts;                         // 0x0010(0x0010)(Parm, OutParm)
	struct FGameStoreProductInfo                  ValidProduct;                                      // 0x0020(0x0050)(Edit, BlueprintVisible)
	TArray<struct FBattlePassSeasonProducts>      ProductsArray;                                     // 0x0070(0x0010)(Edit, BlueprintVisible)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0x2];                                       // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x009E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9F[0x1];                                       // 0x009F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameStoreProducts*                     CallFunc_GetGameStoreProductsManager_ReturnValue;  // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             CallFunc_DataProviderFindTableByAssetTable_ReturnValue; // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBattlePassSeason                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x00B0(0x00A0)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBattlePassSeasonProducts              CallFunc_Array_Get_Item;                           // 0x0158(0x0020)()
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StringNotEmpty_ReturnValue;               // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetGameStoreProductInfoById_ProductFound; // 0x0182(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_183[0x5];                                      // 0x0183(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameStoreProductInfo                  CallFunc_GetGameStoreProductInfoById_ReturnValue;  // 0x0188(0x0050)(ConstParm)
};
static_assert(alignof(BP_BattlePassSystem_C_Get_Season_Premium_Products) == 0x000008, "Wrong alignment on BP_BattlePassSystem_C_Get_Season_Premium_Products");
static_assert(sizeof(BP_BattlePassSystem_C_Get_Season_Premium_Products) == 0x0001D8, "Wrong size on BP_BattlePassSystem_C_Get_Season_Premium_Products");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Premium_Products, Season) == 0x000000, "Member 'BP_BattlePassSystem_C_Get_Season_Premium_Products::Season' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Premium_Products, AreProductsValid) == 0x000008, "Member 'BP_BattlePassSystem_C_Get_Season_Premium_Products::AreProductsValid' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Premium_Products, PremiumBattlePassProducts) == 0x000010, "Member 'BP_BattlePassSystem_C_Get_Season_Premium_Products::PremiumBattlePassProducts' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Premium_Products, ValidProduct) == 0x000020, "Member 'BP_BattlePassSystem_C_Get_Season_Premium_Products::ValidProduct' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Premium_Products, ProductsArray) == 0x000070, "Member 'BP_BattlePassSystem_C_Get_Season_Premium_Products::ProductsArray' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Premium_Products, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000080, "Member 'BP_BattlePassSystem_C_Get_Season_Premium_Products::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Premium_Products, Temp_int_Array_Index_Variable) == 0x000084, "Member 'BP_BattlePassSystem_C_Get_Season_Premium_Products::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Premium_Products, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'BP_BattlePassSystem_C_Get_Season_Premium_Products::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Premium_Products, Temp_int_Loop_Counter_Variable) == 0x00008C, "Member 'BP_BattlePassSystem_C_Get_Season_Premium_Products::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Premium_Products, CallFunc_Greater_IntInt_ReturnValue) == 0x000090, "Member 'BP_BattlePassSystem_C_Get_Season_Premium_Products::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Premium_Products, CallFunc_Not_PreBool_ReturnValue) == 0x000091, "Member 'BP_BattlePassSystem_C_Get_Season_Premium_Products::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Premium_Products, CallFunc_Add_IntInt_ReturnValue) == 0x000094, "Member 'BP_BattlePassSystem_C_Get_Season_Premium_Products::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Premium_Products, CallFunc_Array_Length_ReturnValue_1) == 0x000098, "Member 'BP_BattlePassSystem_C_Get_Season_Premium_Products::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Premium_Products, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00009C, "Member 'BP_BattlePassSystem_C_Get_Season_Premium_Products::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Premium_Products, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00009D, "Member 'BP_BattlePassSystem_C_Get_Season_Premium_Products::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Premium_Products, CallFunc_BooleanOR_ReturnValue) == 0x00009E, "Member 'BP_BattlePassSystem_C_Get_Season_Premium_Products::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Premium_Products, CallFunc_GetGameStoreProductsManager_ReturnValue) == 0x0000A0, "Member 'BP_BattlePassSystem_C_Get_Season_Premium_Products::CallFunc_GetGameStoreProductsManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Premium_Products, CallFunc_DataProviderFindTableByAssetTable_ReturnValue) == 0x0000A8, "Member 'BP_BattlePassSystem_C_Get_Season_Premium_Products::CallFunc_DataProviderFindTableByAssetTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Premium_Products, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000B0, "Member 'BP_BattlePassSystem_C_Get_Season_Premium_Products::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Premium_Products, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000150, "Member 'BP_BattlePassSystem_C_Get_Season_Premium_Products::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Premium_Products, CallFunc_Array_Get_Item) == 0x000158, "Member 'BP_BattlePassSystem_C_Get_Season_Premium_Products::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Premium_Products, CallFunc_Array_Length_ReturnValue_2) == 0x000178, "Member 'BP_BattlePassSystem_C_Get_Season_Premium_Products::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Premium_Products, CallFunc_Array_Add_ReturnValue) == 0x00017C, "Member 'BP_BattlePassSystem_C_Get_Season_Premium_Products::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Premium_Products, CallFunc_Less_IntInt_ReturnValue) == 0x000180, "Member 'BP_BattlePassSystem_C_Get_Season_Premium_Products::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Premium_Products, CallFunc_StringNotEmpty_ReturnValue) == 0x000181, "Member 'BP_BattlePassSystem_C_Get_Season_Premium_Products::CallFunc_StringNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Premium_Products, CallFunc_GetGameStoreProductInfoById_ProductFound) == 0x000182, "Member 'BP_BattlePassSystem_C_Get_Season_Premium_Products::CallFunc_GetGameStoreProductInfoById_ProductFound' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Season_Premium_Products, CallFunc_GetGameStoreProductInfoById_ReturnValue) == 0x000188, "Member 'BP_BattlePassSystem_C_Get_Season_Premium_Products::CallFunc_GetGameStoreProductInfoById_ReturnValue' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.Get Current Season Level Token
// 0x00B8 (0x00B8 - 0x0000)
struct BP_BattlePassSystem_C_Get_Current_Season_Level_Token final
{
public:
	class UClass*                                 LevelToken;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             CallFunc_DataProviderFindTableByAssetTable_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBattlePassSeason                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x0010(0x00A0)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattlePassSystem_C_Get_Current_Season_Level_Token) == 0x000008, "Wrong alignment on BP_BattlePassSystem_C_Get_Current_Season_Level_Token");
static_assert(sizeof(BP_BattlePassSystem_C_Get_Current_Season_Level_Token) == 0x0000B8, "Wrong size on BP_BattlePassSystem_C_Get_Current_Season_Level_Token");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Current_Season_Level_Token, LevelToken) == 0x000000, "Member 'BP_BattlePassSystem_C_Get_Current_Season_Level_Token::LevelToken' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Current_Season_Level_Token, CallFunc_DataProviderFindTableByAssetTable_ReturnValue) == 0x000008, "Member 'BP_BattlePassSystem_C_Get_Current_Season_Level_Token::CallFunc_DataProviderFindTableByAssetTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Current_Season_Level_Token, CallFunc_GetDataTableRowFromName_OutRow) == 0x000010, "Member 'BP_BattlePassSystem_C_Get_Current_Season_Level_Token::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Current_Season_Level_Token, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000B0, "Member 'BP_BattlePassSystem_C_Get_Current_Season_Level_Token::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Current_Season_Level_Token, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0000B1, "Member 'BP_BattlePassSystem_C_Get_Current_Season_Level_Token::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.Get Current Season Premium Token
// 0x00B8 (0x00B8 - 0x0000)
struct BP_BattlePassSystem_C_Get_Current_Season_Premium_Token final
{
public:
	class UClass*                                 PremiumToken;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             CallFunc_DataProviderFindTableByAssetTable_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBattlePassSeason                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x0010(0x00A0)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattlePassSystem_C_Get_Current_Season_Premium_Token) == 0x000008, "Wrong alignment on BP_BattlePassSystem_C_Get_Current_Season_Premium_Token");
static_assert(sizeof(BP_BattlePassSystem_C_Get_Current_Season_Premium_Token) == 0x0000B8, "Wrong size on BP_BattlePassSystem_C_Get_Current_Season_Premium_Token");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Current_Season_Premium_Token, PremiumToken) == 0x000000, "Member 'BP_BattlePassSystem_C_Get_Current_Season_Premium_Token::PremiumToken' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Current_Season_Premium_Token, CallFunc_DataProviderFindTableByAssetTable_ReturnValue) == 0x000008, "Member 'BP_BattlePassSystem_C_Get_Current_Season_Premium_Token::CallFunc_DataProviderFindTableByAssetTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Current_Season_Premium_Token, CallFunc_GetDataTableRowFromName_OutRow) == 0x000010, "Member 'BP_BattlePassSystem_C_Get_Current_Season_Premium_Token::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Current_Season_Premium_Token, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000B0, "Member 'BP_BattlePassSystem_C_Get_Current_Season_Premium_Token::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_Get_Current_Season_Premium_Token, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0000B1, "Member 'BP_BattlePassSystem_C_Get_Current_Season_Premium_Token::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.GetFinalPremiumPrice
// 0x001C (0x001C - 0x0000)
struct BP_BattlePassSystem_C_GetFinalPremiumPrice final
{
public:
	float                                         Price;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DiscountPercent;                                   // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FinalPrice;                                        // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_MathExpression_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattlePassSystem_C_GetFinalPremiumPrice) == 0x000004, "Wrong alignment on BP_BattlePassSystem_C_GetFinalPremiumPrice");
static_assert(sizeof(BP_BattlePassSystem_C_GetFinalPremiumPrice) == 0x00001C, "Wrong size on BP_BattlePassSystem_C_GetFinalPremiumPrice");
static_assert(offsetof(BP_BattlePassSystem_C_GetFinalPremiumPrice, Price) == 0x000000, "Member 'BP_BattlePassSystem_C_GetFinalPremiumPrice::Price' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetFinalPremiumPrice, DiscountPercent) == 0x000004, "Member 'BP_BattlePassSystem_C_GetFinalPremiumPrice::DiscountPercent' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetFinalPremiumPrice, FinalPrice) == 0x000008, "Member 'BP_BattlePassSystem_C_GetFinalPremiumPrice::FinalPrice' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetFinalPremiumPrice, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_BattlePassSystem_C_GetFinalPremiumPrice::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetFinalPremiumPrice, K2Node_MathExpression_ReturnValue) == 0x000010, "Member 'BP_BattlePassSystem_C_GetFinalPremiumPrice::K2Node_MathExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetFinalPremiumPrice, CallFunc_Round_ReturnValue) == 0x000014, "Member 'BP_BattlePassSystem_C_GetFinalPremiumPrice::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetFinalPremiumPrice, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x000018, "Member 'BP_BattlePassSystem_C_GetFinalPremiumPrice::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.GetAvailableLegacySeasons
// 0x0060 (0x0060 - 0x0000)
struct BP_BattlePassSystem_C_GetAvailableLegacySeasons final
{
public:
	TArray<class FName>                           AvailableLegacySeasons;                            // 0x0000(0x0010)(Parm, OutParm)
	TArray<class FName>                           LegacySeasons;                                     // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             CallFunc_DataProviderFindTableByAssetTable_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0038(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLegacySeason_IsLegacy;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56[0x2];                                       // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattlePassSystem_C_GetAvailableLegacySeasons) == 0x000008, "Wrong alignment on BP_BattlePassSystem_C_GetAvailableLegacySeasons");
static_assert(sizeof(BP_BattlePassSystem_C_GetAvailableLegacySeasons) == 0x000060, "Wrong size on BP_BattlePassSystem_C_GetAvailableLegacySeasons");
static_assert(offsetof(BP_BattlePassSystem_C_GetAvailableLegacySeasons, AvailableLegacySeasons) == 0x000000, "Member 'BP_BattlePassSystem_C_GetAvailableLegacySeasons::AvailableLegacySeasons' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetAvailableLegacySeasons, LegacySeasons) == 0x000010, "Member 'BP_BattlePassSystem_C_GetAvailableLegacySeasons::LegacySeasons' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetAvailableLegacySeasons, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_BattlePassSystem_C_GetAvailableLegacySeasons::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetAvailableLegacySeasons, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_BattlePassSystem_C_GetAvailableLegacySeasons::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetAvailableLegacySeasons, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_BattlePassSystem_C_GetAvailableLegacySeasons::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetAvailableLegacySeasons, CallFunc_DataProviderFindTableByAssetTable_ReturnValue) == 0x000030, "Member 'BP_BattlePassSystem_C_GetAvailableLegacySeasons::CallFunc_DataProviderFindTableByAssetTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetAvailableLegacySeasons, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000038, "Member 'BP_BattlePassSystem_C_GetAvailableLegacySeasons::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetAvailableLegacySeasons, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_BattlePassSystem_C_GetAvailableLegacySeasons::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetAvailableLegacySeasons, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_BattlePassSystem_C_GetAvailableLegacySeasons::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetAvailableLegacySeasons, CallFunc_IsLegacySeason_IsLegacy) == 0x000054, "Member 'BP_BattlePassSystem_C_GetAvailableLegacySeasons::CallFunc_IsLegacySeason_IsLegacy' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetAvailableLegacySeasons, CallFunc_Less_IntInt_ReturnValue) == 0x000055, "Member 'BP_BattlePassSystem_C_GetAvailableLegacySeasons::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattlePassSystem_C_GetAvailableLegacySeasons, CallFunc_Array_Add_ReturnValue) == 0x000058, "Member 'BP_BattlePassSystem_C_GetAvailableLegacySeasons::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_BattlePassSystem.BP_BattlePassSystem_C.IsDoubleXpWeekendActive
// 0x0001 (0x0001 - 0x0000)
struct BP_BattlePassSystem_C_IsDoubleXpWeekendActive final
{
public:
	bool                                          IsDoubleXpWeekendActive_0;                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattlePassSystem_C_IsDoubleXpWeekendActive) == 0x000001, "Wrong alignment on BP_BattlePassSystem_C_IsDoubleXpWeekendActive");
static_assert(sizeof(BP_BattlePassSystem_C_IsDoubleXpWeekendActive) == 0x000001, "Wrong size on BP_BattlePassSystem_C_IsDoubleXpWeekendActive");
static_assert(offsetof(BP_BattlePassSystem_C_IsDoubleXpWeekendActive, IsDoubleXpWeekendActive_0) == 0x000000, "Member 'BP_BattlePassSystem_C_IsDoubleXpWeekendActive::IsDoubleXpWeekendActive_0' has a wrong offset!");

}

