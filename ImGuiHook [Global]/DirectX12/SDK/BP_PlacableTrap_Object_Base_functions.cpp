#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlacableTrap_Object_Base

#include "Basic.hpp"

#include "BP_PlacableTrap_Object_Base_classes.hpp"
#include "BP_PlacableTrap_Object_Base_parameters.hpp"


namespace SDK
{

// Function BP_PlacableTrap_Object_Base.BP_PlacableTrap_Object_Base_C.ExecuteUbergraph_BP_PlacableTrap_Object_Base
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlacableTrap_Object_Base_C::ExecuteUbergraph_BP_PlacableTrap_Object_Base(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlacableTrap_Object_Base_C", "ExecuteUbergraph_BP_PlacableTrap_Object_Base");

	Params::BP_PlacableTrap_Object_Base_C_ExecuteUbergraph_BP_PlacableTrap_Object_Base Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlacableTrap_Object_Base.BP_PlacableTrap_Object_Base_C.EventStopAmbientSounds
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_PlacableTrap_Object_Base_C::EventStopAmbientSounds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlacableTrap_Object_Base_C", "EventStopAmbientSounds");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlacableTrap_Object_Base.BP_PlacableTrap_Object_Base_C.ProccessExplosion
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ExplosionRadius                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AController*                      InstigatorController                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DamagingExplosion                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   EnviromentDamageMultiplier                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlacableTrap_Object_Base_C::ProccessExplosion(const struct FVector& Location, float ExplosionRadius, class AController* InstigatorController, class AActor* DamageCauser, bool DamagingExplosion, float EnviromentDamageMultiplier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlacableTrap_Object_Base_C", "ProccessExplosion");

	Params::BP_PlacableTrap_Object_Base_C_ProccessExplosion Parms{};

	Parms.Location = std::move(Location);
	Parms.ExplosionRadius = ExplosionRadius;
	Parms.InstigatorController = InstigatorController;
	Parms.DamageCauser = DamageCauser;
	Parms.DamagingExplosion = DamagingExplosion;
	Parms.EnviromentDamageMultiplier = EnviromentDamageMultiplier;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlacableTrap_Object_Base.BP_PlacableTrap_Object_Base_C.Send Player destroyed trap
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PlayerController_Script_C*    Player_that_destroyed_trap                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlacableTrap_Object_Base_C::Send_Player_destroyed_trap(class ABP_PlayerController_Script_C* Player_that_destroyed_trap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlacableTrap_Object_Base_C", "Send Player destroyed trap");

	Params::BP_PlacableTrap_Object_Base_C_Send_Player_destroyed_trap Parms{};

	Parms.Player_that_destroyed_trap = Player_that_destroyed_trap;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlacableTrap_Object_Base.BP_PlacableTrap_Object_Base_C.Trap play effects triggered
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_PlacableTrap_Object_Base_C::Trap_play_effects_triggered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlacableTrap_Object_Base_C", "Trap play effects triggered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlacableTrap_Object_Base.BP_PlacableTrap_Object_Base_C.Trap_Break
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Player_that_destroyed_the_trap                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlacableTrap_Object_Base_C::Trap_Break(class UObject* Player_that_destroyed_the_trap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlacableTrap_Object_Base_C", "Trap_Break");

	Params::BP_PlacableTrap_Object_Base_C_Trap_Break Parms{};

	Parms.Player_that_destroyed_the_trap = Player_that_destroyed_the_trap;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlacableTrap_Object_Base.BP_PlacableTrap_Object_Base_C.Send analytics tool placed
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_PlacableTrap_Object_Base_C::Send_analytics_tool_placed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlacableTrap_Object_Base_C", "Send analytics tool placed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlacableTrap_Object_Base.BP_PlacableTrap_Object_Base_C.Trap load ambient sound and play
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftObjectPtr<class UObject>           SoftObject                                             (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// float                                   FadeInDuration                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlacableTrap_Object_Base_C::Trap_load_ambient_sound_and_play(TSoftObjectPtr<class UObject> SoftObject, float FadeInDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlacableTrap_Object_Base_C", "Trap load ambient sound and play");

	Params::BP_PlacableTrap_Object_Base_C_Trap_load_ambient_sound_and_play Parms{};

	Parms.SoftObject = SoftObject;
	Parms.FadeInDuration = FadeInDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlacableTrap_Object_Base.BP_PlacableTrap_Object_Base_C.Trap_Despawn
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_PlacableTrap_Object_Base_C::Trap_Despawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlacableTrap_Object_Base_C", "Trap_Despawn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlacableTrap_Object_Base.BP_PlacableTrap_Object_Base_C.Trap load sound and play
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftObjectPtr<class UObject>           SoftSound                                              (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// float                                   FadeInDuration                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlacableTrap_Object_Base_C::Trap_load_sound_and_play(TSoftObjectPtr<class UObject> SoftSound, float FadeInDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlacableTrap_Object_Base_C", "Trap load sound and play");

	Params::BP_PlacableTrap_Object_Base_C_Trap_load_sound_and_play Parms{};

	Parms.SoftSound = SoftSound;
	Parms.FadeInDuration = FadeInDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlacableTrap_Object_Base.BP_PlacableTrap_Object_Base_C.ReceiveAnyDamage
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UDamageType*                      DamageType                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AController*                      InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlacableTrap_Object_Base_C::ReceiveAnyDamage(float Damage, const class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlacableTrap_Object_Base_C", "ReceiveAnyDamage");

	Params::BP_PlacableTrap_Object_Base_C_ReceiveAnyDamage Parms{};

	Parms.Damage = Damage;
	Parms.DamageType = DamageType;
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlacableTrap_Object_Base.BP_PlacableTrap_Object_Base_C.Trap_Triggered
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          ObjectThatTriggeredTrap                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlacableTrap_Object_Base_C::Trap_Triggered(class UObject* ObjectThatTriggeredTrap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlacableTrap_Object_Base_C", "Trap_Triggered");

	Params::BP_PlacableTrap_Object_Base_C_Trap_Triggered Parms{};

	Parms.ObjectThatTriggeredTrap = ObjectThatTriggeredTrap;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlacableTrap_Object_Base.BP_PlacableTrap_Object_Base_C.Trap_GotHit
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AController*                      PlayerControllerThatHitTheTrap                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Delayed_Trigger                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PlacableTrap_Object_Base_C::Trap_GotHit(float Damage, class AController* PlayerControllerThatHitTheTrap, bool Delayed_Trigger)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlacableTrap_Object_Base_C", "Trap_GotHit");

	Params::BP_PlacableTrap_Object_Base_C_Trap_GotHit Parms{};

	Parms.Damage = Damage;
	Parms.PlayerControllerThatHitTheTrap = PlayerControllerThatHitTheTrap;
	Parms.Delayed_Trigger = Delayed_Trigger;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlacableTrap_Object_Base.BP_PlacableTrap_Object_Base_C.Trap_Overlaps
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          ObjectThatOverlappedTrap                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlacableTrap_Object_Base_C::Trap_Overlaps(const class UObject* ObjectThatOverlappedTrap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlacableTrap_Object_Base_C", "Trap_Overlaps");

	Params::BP_PlacableTrap_Object_Base_C_Trap_Overlaps Parms{};

	Parms.ObjectThatOverlappedTrap = ObjectThatOverlappedTrap;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlacableTrap_Object_Base.BP_PlacableTrap_Object_Base_C.Trap_Placed
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_PlacableTrap_Object_Base_C::Trap_Placed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlacableTrap_Object_Base_C", "Trap_Placed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlacableTrap_Object_Base.BP_PlacableTrap_Object_Base_C.Trap_AutoBreak
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_PlacableTrap_Object_Base_C::Trap_AutoBreak()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlacableTrap_Object_Base_C", "Trap_AutoBreak");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlacableTrap_Object_Base.BP_PlacableTrap_Object_Base_C.Trap_Activate
// (BlueprintCallable, BlueprintEvent)

void ABP_PlacableTrap_Object_Base_C::Trap_Activate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlacableTrap_Object_Base_C", "Trap_Activate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlacableTrap_Object_Base.BP_PlacableTrap_Object_Base_C.Trap_SetStaticMesh
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftObjectPtr<class UStaticMesh>       SoftMesh                                               (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_PlacableTrap_Object_Base_C::Trap_SetStaticMesh(TSoftObjectPtr<class UStaticMesh> SoftMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlacableTrap_Object_Base_C", "Trap_SetStaticMesh");

	Params::BP_PlacableTrap_Object_Base_C_Trap_SetStaticMesh Parms{};

	Parms.SoftMesh = SoftMesh;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlacableTrap_Object_Base.BP_PlacableTrap_Object_Base_C.OnLoaded_303A9E7341428F48F05BE78AE7D6A9A7
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlacableTrap_Object_Base_C::OnLoaded_303A9E7341428F48F05BE78AE7D6A9A7(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlacableTrap_Object_Base_C", "OnLoaded_303A9E7341428F48F05BE78AE7D6A9A7");

	Params::BP_PlacableTrap_Object_Base_C_OnLoaded_303A9E7341428F48F05BE78AE7D6A9A7 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlacableTrap_Object_Base.BP_PlacableTrap_Object_Base_C.OnLoaded_303A9E7341428F48F05BE78A2D154574
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlacableTrap_Object_Base_C::OnLoaded_303A9E7341428F48F05BE78A2D154574(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlacableTrap_Object_Base_C", "OnLoaded_303A9E7341428F48F05BE78A2D154574");

	Params::BP_PlacableTrap_Object_Base_C_OnLoaded_303A9E7341428F48F05BE78A2D154574 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlacableTrap_Object_Base.BP_PlacableTrap_Object_Base_C.OnLoaded_303A9E7341428F48F05BE78AC1E2D764
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlacableTrap_Object_Base_C::OnLoaded_303A9E7341428F48F05BE78AC1E2D764(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlacableTrap_Object_Base_C", "OnLoaded_303A9E7341428F48F05BE78AC1E2D764");

	Params::BP_PlacableTrap_Object_Base_C_OnLoaded_303A9E7341428F48F05BE78AC1E2D764 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlacableTrap_Object_Base.BP_PlacableTrap_Object_Base_C.Trap_SetUpVariablesFromTool
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Trap_Range_Trigger_0                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Trap_Timer_Activation_0                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Trap_Timer_Despawn_0                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Trap_Timer_AutoSelfDestroy_0                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Trap_HealthPoints_0                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TSoftObjectPtr<class UStaticMesh>       Trap_Mesh_Placed_0                                     (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// TSoftObjectPtr<class UStaticMesh>       Trap_Mesh_Active_0                                     (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// TSoftObjectPtr<class UStaticMesh>       Trap_Mesh_Broken_0                                     (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// TSoftObjectPtr<class UStaticMesh>       Trap_Mesh_Triggered_0                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// TSoftObjectPtr<class USoundBase>        Trap_Sound_Placement                                   (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// TSoftObjectPtr<class USoundBase>        Trap_Sound_Break                                       (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// TSoftObjectPtr<class USoundBase>        Trap_Sound_TrapActivated                               (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// TSoftObjectPtr<class USoundBase>        Trap_Sound_TrapTriggered                               (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// TSoftObjectPtr<class USoundBase>        Trap_Sound_Despawn_0                                   (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// TSoftObjectPtr<class USoundBase>        Trap_Sound_Ambient_0                                   (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_PlacableTrap_Object_Base_C::Trap_SetUpVariablesFromTool(float Trap_Range_Trigger_0, float Trap_Timer_Activation_0, float Trap_Timer_Despawn_0, float Trap_Timer_AutoSelfDestroy_0, float Trap_HealthPoints_0, TSoftObjectPtr<class UStaticMesh> Trap_Mesh_Placed_0, TSoftObjectPtr<class UStaticMesh> Trap_Mesh_Active_0, TSoftObjectPtr<class UStaticMesh> Trap_Mesh_Broken_0, TSoftObjectPtr<class UStaticMesh> Trap_Mesh_Triggered_0, TSoftObjectPtr<class USoundBase> Trap_Sound_Placement, TSoftObjectPtr<class USoundBase> Trap_Sound_Break, TSoftObjectPtr<class USoundBase> Trap_Sound_TrapActivated, TSoftObjectPtr<class USoundBase> Trap_Sound_TrapTriggered, TSoftObjectPtr<class USoundBase> Trap_Sound_Despawn_0, TSoftObjectPtr<class USoundBase> Trap_Sound_Ambient_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlacableTrap_Object_Base_C", "Trap_SetUpVariablesFromTool");

	Params::BP_PlacableTrap_Object_Base_C_Trap_SetUpVariablesFromTool Parms{};

	Parms.Trap_Range_Trigger_0 = Trap_Range_Trigger_0;
	Parms.Trap_Timer_Activation_0 = Trap_Timer_Activation_0;
	Parms.Trap_Timer_Despawn_0 = Trap_Timer_Despawn_0;
	Parms.Trap_Timer_AutoSelfDestroy_0 = Trap_Timer_AutoSelfDestroy_0;
	Parms.Trap_HealthPoints_0 = Trap_HealthPoints_0;
	Parms.Trap_Mesh_Placed_0 = Trap_Mesh_Placed_0;
	Parms.Trap_Mesh_Active_0 = Trap_Mesh_Active_0;
	Parms.Trap_Mesh_Broken_0 = Trap_Mesh_Broken_0;
	Parms.Trap_Mesh_Triggered_0 = Trap_Mesh_Triggered_0;
	Parms.Trap_Sound_Placement = Trap_Sound_Placement;
	Parms.Trap_Sound_Break = Trap_Sound_Break;
	Parms.Trap_Sound_TrapActivated = Trap_Sound_TrapActivated;
	Parms.Trap_Sound_TrapTriggered = Trap_Sound_TrapTriggered;
	Parms.Trap_Sound_Despawn_0 = Trap_Sound_Despawn_0;
	Parms.Trap_Sound_Ambient_0 = Trap_Sound_Ambient_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlacableTrap_Object_Base.BP_PlacableTrap_Object_Base_C.Trap_Phase_Placed
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_PlacableTrap_Object_Base_C::Trap_Phase_Placed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlacableTrap_Object_Base_C", "Trap_Phase_Placed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlacableTrap_Object_Base.BP_PlacableTrap_Object_Base_C.Trap_Phase_Activated
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_PlacableTrap_Object_Base_C::Trap_Phase_Activated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlacableTrap_Object_Base_C", "Trap_Phase_Activated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlacableTrap_Object_Base.BP_PlacableTrap_Object_Base_C.Trap_Phase_Broken
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_PlacableTrap_Object_Base_C::Trap_Phase_Broken()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlacableTrap_Object_Base_C", "Trap_Phase_Broken");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlacableTrap_Object_Base.BP_PlacableTrap_Object_Base_C.Trap_Phase_Trigger
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          ObjectThatTriggeredTrap                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlacableTrap_Object_Base_C::Trap_Phase_Trigger(class UObject* ObjectThatTriggeredTrap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlacableTrap_Object_Base_C", "Trap_Phase_Trigger");

	Params::BP_PlacableTrap_Object_Base_C_Trap_Phase_Trigger Parms{};

	Parms.ObjectThatTriggeredTrap = ObjectThatTriggeredTrap;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlacableTrap_Object_Base.BP_PlacableTrap_Object_Base_C.Trap_PlayEffects_Placement
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_PlacableTrap_Object_Base_C::Trap_PlayEffects_Placement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlacableTrap_Object_Base_C", "Trap_PlayEffects_Placement");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlacableTrap_Object_Base.BP_PlacableTrap_Object_Base_C.Trap_PlayEffects_Activated
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_PlacableTrap_Object_Base_C::Trap_PlayEffects_Activated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlacableTrap_Object_Base_C", "Trap_PlayEffects_Activated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlacableTrap_Object_Base.BP_PlacableTrap_Object_Base_C.Trap_PlayEffects_Broken
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_PlacableTrap_Object_Base_C::Trap_PlayEffects_Broken()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlacableTrap_Object_Base_C", "Trap_PlayEffects_Broken");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlacableTrap_Object_Base.BP_PlacableTrap_Object_Base_C.Trap_PlayEffects_Despawn
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_PlacableTrap_Object_Base_C::Trap_PlayEffects_Despawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlacableTrap_Object_Base_C", "Trap_PlayEffects_Despawn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlacableTrap_Object_Base.BP_PlacableTrap_Object_Base_C.Trap_Phase_Despawn
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_PlacableTrap_Object_Base_C::Trap_Phase_Despawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlacableTrap_Object_Base_C", "Trap_Phase_Despawn");

	UObject::ProcessEvent(Func, nullptr);
}

}

