#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_DailyChallengesSubTab

#include "Basic.hpp"

#include "Flame_structs.hpp"
#include "Flame_classes.hpp"
#include "Engine_structs.hpp"
#include "E_ChallengeManagerState_structs.hpp"
#include "FlameUI_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "E_ChallengeSlotState_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_DailyChallengesSubTab.UI_DailyChallengesSubTab_C
// 0x0168 (0x0440 - 0x02D8)
class UUI_DailyChallengesSubTab_C final : public UMenuWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UUI_InputActionWidget_C*                ActionClose;                                       // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_InputActionWidget_C*                ActionMoreInfo;                                    // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_InputActionWidget_C*                ActionRemove;                                      // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             DailyChallengesList;                               // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameTextBlock*                        DailyResetTimerDisplay;                            // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameTextBlock*                        Header_Story;                                      // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_106;                                         // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_143;                                         // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         RerollAction;                                      // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RerollCrownsIcon;                                  // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameTextBlock*                        RerollPriceIndicator;                              // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameTextBlock*                        RerollUnavailableHint;                             // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           StoryChallengeList;                                // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_BackgroundBase_A_C*                 UI_BackgroundBase_A;                               // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_ChallengesListItemFocusable_C*      UI_ChallengesListItemFocusable;                    // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_ChallengesListItemFocusable_C*      UI_ChallengesListItemFocusable_1;                  // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_ChallengesListItemFocusable_C*      UI_ChallengesListItemFocusable_2;                  // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_ChallengesListItemFocusable_C*      UI_ChallengesListItemFocusable_3;                  // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_0;                                  // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class UUI_ChallengesListItemFocusable_C*> ChallengeWidgets;                                  // 0x0378(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class ABP_ChallengeSlot_C*                    FocusedSlot;                                       // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              NextResetTimestamp;                                // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          ChallengeDetailsFocused;                           // 0x0398(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_399[0x7];                                      // 0x0399(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        StoryChallengeSound;                               // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        HoldSound;                                         // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasCompletedChallenges;                            // 0x03B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B1[0x7];                                      // 0x03B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundWave*                             Challenge_Voice_Line;                              // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Voice_Line_Timer;                                  // 0x03C0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMap<EFlamePlatform, class FText>             NotEnoughCrownsTexts;                              // 0x03C8(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	class ABP_ChallengeManager_C*                 ChallengeManager;                                  // 0x0418(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_ChallengeSlot_C*>            CompletedChallengeSlots;                           // 0x0420(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class UWidget*                                CurrentFocusedWidget;                              // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldReturnFocus;                                 // 0x0438(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_UI_DailyChallengesSubTab(int32 EntryPoint);
	void OnResetToDefaultState();
	void OnCloseModal(EMessageBoxAction Result);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void BndEvt__UI_DailyChallengesSubTab_ActionMoreInfo_K2Node_ComponentBoundEvent_3_OnActionPressedEvent__DelegateSignature();
	void BndEvt__UI_DailyChallengesSubTab_ActionClose_K2Node_ComponentBoundEvent_1_OnClickedEvent__DelegateSignature();
	void Initialize_Challenge_Widget(class ABP_ChallengeSlot_C* Challenge_Slot, class UPanelWidget* Category_Container);
	void Initialize_Challenge_Widgets_By_Category(const TArray<class UObject*>& Challenge_Slots, class UPanelWidget* Category_Container);
	void ChallengeRerollRequest(EMessageBoxAction Result);
	void InitializeNewChallengeSlot(class ABP_ChallengeSlot_C* ChallengeSlot);
	void Play_Challenge_Voice_Line();
	void Challenges_Ready(class UFlameWidget* FlameWidget);
	void Destruct();
	void OnDailyReset(const struct FDateTime& Next_Reset_Timestamp);
	void OnTimer();
	void OnStateChanged(class ABP_ChallengeSlot_C* Slot_0);
	void BndEvt__ActionRemove_K2Node_ComponentBoundEvent_2_OnActionPressedEvent__DelegateSignature();
	void EventChallengeSlotCancelled(class ABP_ChallengeSlot_C* BP_ChallengeSlot);
	void EventChallengeManagerReady();
	void EventSlotFocused(class UListButtonWidget* Sender);
	void Construct();
	void UpdateActionRemoveState(class ABP_ChallengeSlot_C* ChallengeSlotIn);

	class UWidget* GetWidgetToFocus() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_DailyChallengesSubTab_C">();
	}
	static class UUI_DailyChallengesSubTab_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_DailyChallengesSubTab_C>();
	}
};
static_assert(alignof(UUI_DailyChallengesSubTab_C) == 0x000008, "Wrong alignment on UUI_DailyChallengesSubTab_C");
static_assert(sizeof(UUI_DailyChallengesSubTab_C) == 0x000440, "Wrong size on UUI_DailyChallengesSubTab_C");
static_assert(offsetof(UUI_DailyChallengesSubTab_C, UberGraphFrame) == 0x0002D8, "Member 'UUI_DailyChallengesSubTab_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_DailyChallengesSubTab_C, ActionClose) == 0x0002E0, "Member 'UUI_DailyChallengesSubTab_C::ActionClose' has a wrong offset!");
static_assert(offsetof(UUI_DailyChallengesSubTab_C, ActionMoreInfo) == 0x0002E8, "Member 'UUI_DailyChallengesSubTab_C::ActionMoreInfo' has a wrong offset!");
static_assert(offsetof(UUI_DailyChallengesSubTab_C, ActionRemove) == 0x0002F0, "Member 'UUI_DailyChallengesSubTab_C::ActionRemove' has a wrong offset!");
static_assert(offsetof(UUI_DailyChallengesSubTab_C, DailyChallengesList) == 0x0002F8, "Member 'UUI_DailyChallengesSubTab_C::DailyChallengesList' has a wrong offset!");
static_assert(offsetof(UUI_DailyChallengesSubTab_C, DailyResetTimerDisplay) == 0x000300, "Member 'UUI_DailyChallengesSubTab_C::DailyResetTimerDisplay' has a wrong offset!");
static_assert(offsetof(UUI_DailyChallengesSubTab_C, Header_Story) == 0x000308, "Member 'UUI_DailyChallengesSubTab_C::Header_Story' has a wrong offset!");
static_assert(offsetof(UUI_DailyChallengesSubTab_C, Image_106) == 0x000310, "Member 'UUI_DailyChallengesSubTab_C::Image_106' has a wrong offset!");
static_assert(offsetof(UUI_DailyChallengesSubTab_C, Image_143) == 0x000318, "Member 'UUI_DailyChallengesSubTab_C::Image_143' has a wrong offset!");
static_assert(offsetof(UUI_DailyChallengesSubTab_C, RerollAction) == 0x000320, "Member 'UUI_DailyChallengesSubTab_C::RerollAction' has a wrong offset!");
static_assert(offsetof(UUI_DailyChallengesSubTab_C, RerollCrownsIcon) == 0x000328, "Member 'UUI_DailyChallengesSubTab_C::RerollCrownsIcon' has a wrong offset!");
static_assert(offsetof(UUI_DailyChallengesSubTab_C, RerollPriceIndicator) == 0x000330, "Member 'UUI_DailyChallengesSubTab_C::RerollPriceIndicator' has a wrong offset!");
static_assert(offsetof(UUI_DailyChallengesSubTab_C, RerollUnavailableHint) == 0x000338, "Member 'UUI_DailyChallengesSubTab_C::RerollUnavailableHint' has a wrong offset!");
static_assert(offsetof(UUI_DailyChallengesSubTab_C, StoryChallengeList) == 0x000340, "Member 'UUI_DailyChallengesSubTab_C::StoryChallengeList' has a wrong offset!");
static_assert(offsetof(UUI_DailyChallengesSubTab_C, UI_BackgroundBase_A) == 0x000348, "Member 'UUI_DailyChallengesSubTab_C::UI_BackgroundBase_A' has a wrong offset!");
static_assert(offsetof(UUI_DailyChallengesSubTab_C, UI_ChallengesListItemFocusable) == 0x000350, "Member 'UUI_DailyChallengesSubTab_C::UI_ChallengesListItemFocusable' has a wrong offset!");
static_assert(offsetof(UUI_DailyChallengesSubTab_C, UI_ChallengesListItemFocusable_1) == 0x000358, "Member 'UUI_DailyChallengesSubTab_C::UI_ChallengesListItemFocusable_1' has a wrong offset!");
static_assert(offsetof(UUI_DailyChallengesSubTab_C, UI_ChallengesListItemFocusable_2) == 0x000360, "Member 'UUI_DailyChallengesSubTab_C::UI_ChallengesListItemFocusable_2' has a wrong offset!");
static_assert(offsetof(UUI_DailyChallengesSubTab_C, UI_ChallengesListItemFocusable_3) == 0x000368, "Member 'UUI_DailyChallengesSubTab_C::UI_ChallengesListItemFocusable_3' has a wrong offset!");
static_assert(offsetof(UUI_DailyChallengesSubTab_C, WidgetSwitcher_0) == 0x000370, "Member 'UUI_DailyChallengesSubTab_C::WidgetSwitcher_0' has a wrong offset!");
static_assert(offsetof(UUI_DailyChallengesSubTab_C, ChallengeWidgets) == 0x000378, "Member 'UUI_DailyChallengesSubTab_C::ChallengeWidgets' has a wrong offset!");
static_assert(offsetof(UUI_DailyChallengesSubTab_C, FocusedSlot) == 0x000388, "Member 'UUI_DailyChallengesSubTab_C::FocusedSlot' has a wrong offset!");
static_assert(offsetof(UUI_DailyChallengesSubTab_C, NextResetTimestamp) == 0x000390, "Member 'UUI_DailyChallengesSubTab_C::NextResetTimestamp' has a wrong offset!");
static_assert(offsetof(UUI_DailyChallengesSubTab_C, ChallengeDetailsFocused) == 0x000398, "Member 'UUI_DailyChallengesSubTab_C::ChallengeDetailsFocused' has a wrong offset!");
static_assert(offsetof(UUI_DailyChallengesSubTab_C, StoryChallengeSound) == 0x0003A0, "Member 'UUI_DailyChallengesSubTab_C::StoryChallengeSound' has a wrong offset!");
static_assert(offsetof(UUI_DailyChallengesSubTab_C, HoldSound) == 0x0003A8, "Member 'UUI_DailyChallengesSubTab_C::HoldSound' has a wrong offset!");
static_assert(offsetof(UUI_DailyChallengesSubTab_C, HasCompletedChallenges) == 0x0003B0, "Member 'UUI_DailyChallengesSubTab_C::HasCompletedChallenges' has a wrong offset!");
static_assert(offsetof(UUI_DailyChallengesSubTab_C, Challenge_Voice_Line) == 0x0003B8, "Member 'UUI_DailyChallengesSubTab_C::Challenge_Voice_Line' has a wrong offset!");
static_assert(offsetof(UUI_DailyChallengesSubTab_C, Voice_Line_Timer) == 0x0003C0, "Member 'UUI_DailyChallengesSubTab_C::Voice_Line_Timer' has a wrong offset!");
static_assert(offsetof(UUI_DailyChallengesSubTab_C, NotEnoughCrownsTexts) == 0x0003C8, "Member 'UUI_DailyChallengesSubTab_C::NotEnoughCrownsTexts' has a wrong offset!");
static_assert(offsetof(UUI_DailyChallengesSubTab_C, ChallengeManager) == 0x000418, "Member 'UUI_DailyChallengesSubTab_C::ChallengeManager' has a wrong offset!");
static_assert(offsetof(UUI_DailyChallengesSubTab_C, CompletedChallengeSlots) == 0x000420, "Member 'UUI_DailyChallengesSubTab_C::CompletedChallengeSlots' has a wrong offset!");
static_assert(offsetof(UUI_DailyChallengesSubTab_C, CurrentFocusedWidget) == 0x000430, "Member 'UUI_DailyChallengesSubTab_C::CurrentFocusedWidget' has a wrong offset!");
static_assert(offsetof(UUI_DailyChallengesSubTab_C, ShouldReturnFocus) == 0x000438, "Member 'UUI_DailyChallengesSubTab_C::ShouldReturnFocus' has a wrong offset!");

}

