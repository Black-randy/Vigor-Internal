#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_SeasonalChallenges_ProgressBar

#include "Basic.hpp"

#include "Flame_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_SeasonalChallenges_ProgressBar.UI_SeasonalChallenges_ProgressBar_C
// 0x0050 (0x0308 - 0x02B8)
class UUI_SeasonalChallenges_ProgressBar_C final : public UFlameWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCanvasPanel*                           Canvas_Root;                                       // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_MaxChallengeCount;                            // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_SeasonalChallenges_PartialProgressBar_C* UI_SeasonalChallenges_PartialProgressBar;          // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_SeasonalChallenges_PartialProgressBar_C* UI_SeasonalChallenges_PartialProgressBar_1;        // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_SeasonalChallenges_PartialProgressBar_C* UI_SeasonalChallenges_PartialProgressBar_2;        // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_SeasonalChallenges_PartialProgressBar_C* UI_SeasonalChallenges_PartialProgressBar_3;        // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_SeasonalChallenges_PartialProgressBar_C* UI_SeasonalChallenges_PartialProgressBar_4;        // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         MaxChallenges;                                     // 0x02F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentlyDoneChallenges;                           // 0x02FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_SeasonalChallengesSubTab_C*         SeasonalChallengesUI;                              // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_UI_SeasonalChallenges_ProgressBar(int32 EntryPoint);
	void UpdateDoneChallengesText();
	void PreConstruct(bool IsDesignTime);
	void UpdatePartialProgressBar(class UUI_SeasonalChallengeReward_SubGoal_Widget_C* SubGoalWidget);
	void FillChallengesSubgoalsProperly();
	void UpdateProgressBar(int32 CurrentlyDoneChallengesCount);
	void InitializeProgressBar(int32 MaxChallenges_0, int32 CurrentChallenges, const class UUI_SeasonalChallengesSubTab_C*& SeasonalChallengesUI_0);
	void InitializePartialProgressBars(TArray<struct FStruct_SeasonalChallengesSubGoalInfo>& SubGoalsInfo);
	void GetHighestChallengeSubGoal(struct FStruct_SeasonalChallengesSubGoalInfo* FinalGoal);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_SeasonalChallenges_ProgressBar_C">();
	}
	static class UUI_SeasonalChallenges_ProgressBar_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_SeasonalChallenges_ProgressBar_C>();
	}
};
static_assert(alignof(UUI_SeasonalChallenges_ProgressBar_C) == 0x000008, "Wrong alignment on UUI_SeasonalChallenges_ProgressBar_C");
static_assert(sizeof(UUI_SeasonalChallenges_ProgressBar_C) == 0x000308, "Wrong size on UUI_SeasonalChallenges_ProgressBar_C");
static_assert(offsetof(UUI_SeasonalChallenges_ProgressBar_C, UberGraphFrame) == 0x0002B8, "Member 'UUI_SeasonalChallenges_ProgressBar_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_SeasonalChallenges_ProgressBar_C, Canvas_Root) == 0x0002C0, "Member 'UUI_SeasonalChallenges_ProgressBar_C::Canvas_Root' has a wrong offset!");
static_assert(offsetof(UUI_SeasonalChallenges_ProgressBar_C, Text_MaxChallengeCount) == 0x0002C8, "Member 'UUI_SeasonalChallenges_ProgressBar_C::Text_MaxChallengeCount' has a wrong offset!");
static_assert(offsetof(UUI_SeasonalChallenges_ProgressBar_C, UI_SeasonalChallenges_PartialProgressBar) == 0x0002D0, "Member 'UUI_SeasonalChallenges_ProgressBar_C::UI_SeasonalChallenges_PartialProgressBar' has a wrong offset!");
static_assert(offsetof(UUI_SeasonalChallenges_ProgressBar_C, UI_SeasonalChallenges_PartialProgressBar_1) == 0x0002D8, "Member 'UUI_SeasonalChallenges_ProgressBar_C::UI_SeasonalChallenges_PartialProgressBar_1' has a wrong offset!");
static_assert(offsetof(UUI_SeasonalChallenges_ProgressBar_C, UI_SeasonalChallenges_PartialProgressBar_2) == 0x0002E0, "Member 'UUI_SeasonalChallenges_ProgressBar_C::UI_SeasonalChallenges_PartialProgressBar_2' has a wrong offset!");
static_assert(offsetof(UUI_SeasonalChallenges_ProgressBar_C, UI_SeasonalChallenges_PartialProgressBar_3) == 0x0002E8, "Member 'UUI_SeasonalChallenges_ProgressBar_C::UI_SeasonalChallenges_PartialProgressBar_3' has a wrong offset!");
static_assert(offsetof(UUI_SeasonalChallenges_ProgressBar_C, UI_SeasonalChallenges_PartialProgressBar_4) == 0x0002F0, "Member 'UUI_SeasonalChallenges_ProgressBar_C::UI_SeasonalChallenges_PartialProgressBar_4' has a wrong offset!");
static_assert(offsetof(UUI_SeasonalChallenges_ProgressBar_C, MaxChallenges) == 0x0002F8, "Member 'UUI_SeasonalChallenges_ProgressBar_C::MaxChallenges' has a wrong offset!");
static_assert(offsetof(UUI_SeasonalChallenges_ProgressBar_C, CurrentlyDoneChallenges) == 0x0002FC, "Member 'UUI_SeasonalChallenges_ProgressBar_C::CurrentlyDoneChallenges' has a wrong offset!");
static_assert(offsetof(UUI_SeasonalChallenges_ProgressBar_C, SeasonalChallengesUI) == 0x000300, "Member 'UUI_SeasonalChallenges_ProgressBar_C::SeasonalChallengesUI' has a wrong offset!");

}

