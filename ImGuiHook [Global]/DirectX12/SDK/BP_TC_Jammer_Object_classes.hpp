#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TC_Jammer_Object

#include "Basic.hpp"

#include "BP_PlacableTrap_Object_Base_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_TC_Jammer_Object.BP_TC_Jammer_Object_C
// 0x0050 (0x04B8 - 0x0468)
class ABP_TC_Jammer_Object_C final : public ABP_PlacableTrap_Object_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_TC_Jammer_Object_C;              // 0x0468(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USphereComponent*                       Jamming_Range_Collision;                           // 0x0470(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_InteractionItemComponent_C*         BP_InteractionItemComponent;                       // 0x0478(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   MarkerTag;                                         // 0x0480(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Jamming_Range;                                     // 0x0488(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48C[0x4];                                      // 0x048C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_HorizontalCompass_C*                Compass_UI;                                        // 0x0490(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_Character_Script_C*>         Jammed_characters;                                 // 0x0498(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class ABP_Character_Script_C*>         Unique_jammed_characters;                          // 0x04A8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)

public:
	void ExecuteUbergraph_BP_TC_Jammer_Object(int32 EntryPoint);
	void Trap_Activate();
	void ReceiveBeginPlay();
	void BndEvt__BP_InteractionItemComponent_K2Node_ComponentBoundEvent_1_Interaction_Start_on_Server__DelegateSignature(class UInteractionItemComponent* Sender, class AActor* Interacting_Actor);
	void BndEvt__Jamming_Range_Collision_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__Jamming_Range_Collision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void Update_Map();
	void Trap_AutoBreak();
	void Trap_Break(class UObject* Player_that_destroyed_the_trap);
	void Trap_Phase_Activated();
	void Add_Jammer_Marker();
	void Remove_Jammer_Marker();
	void Update_Open_Map_and_Compass();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_TC_Jammer_Object_C">();
	}
	static class ABP_TC_Jammer_Object_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_TC_Jammer_Object_C>();
	}
};
static_assert(alignof(ABP_TC_Jammer_Object_C) == 0x000008, "Wrong alignment on ABP_TC_Jammer_Object_C");
static_assert(sizeof(ABP_TC_Jammer_Object_C) == 0x0004B8, "Wrong size on ABP_TC_Jammer_Object_C");
static_assert(offsetof(ABP_TC_Jammer_Object_C, UberGraphFrame_BP_TC_Jammer_Object_C) == 0x000468, "Member 'ABP_TC_Jammer_Object_C::UberGraphFrame_BP_TC_Jammer_Object_C' has a wrong offset!");
static_assert(offsetof(ABP_TC_Jammer_Object_C, Jamming_Range_Collision) == 0x000470, "Member 'ABP_TC_Jammer_Object_C::Jamming_Range_Collision' has a wrong offset!");
static_assert(offsetof(ABP_TC_Jammer_Object_C, BP_InteractionItemComponent) == 0x000478, "Member 'ABP_TC_Jammer_Object_C::BP_InteractionItemComponent' has a wrong offset!");
static_assert(offsetof(ABP_TC_Jammer_Object_C, MarkerTag) == 0x000480, "Member 'ABP_TC_Jammer_Object_C::MarkerTag' has a wrong offset!");
static_assert(offsetof(ABP_TC_Jammer_Object_C, Jamming_Range) == 0x000488, "Member 'ABP_TC_Jammer_Object_C::Jamming_Range' has a wrong offset!");
static_assert(offsetof(ABP_TC_Jammer_Object_C, Compass_UI) == 0x000490, "Member 'ABP_TC_Jammer_Object_C::Compass_UI' has a wrong offset!");
static_assert(offsetof(ABP_TC_Jammer_Object_C, Jammed_characters) == 0x000498, "Member 'ABP_TC_Jammer_Object_C::Jammed_characters' has a wrong offset!");
static_assert(offsetof(ABP_TC_Jammer_Object_C, Unique_jammed_characters) == 0x0004A8, "Member 'ABP_TC_Jammer_Object_C::Unique_jammed_characters' has a wrong offset!");

}

