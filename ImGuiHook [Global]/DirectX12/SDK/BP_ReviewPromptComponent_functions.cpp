#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ReviewPromptComponent

#include "Basic.hpp"

#include "BP_ReviewPromptComponent_classes.hpp"
#include "BP_ReviewPromptComponent_parameters.hpp"


namespace SDK
{

// Function BP_ReviewPromptComponent.BP_ReviewPromptComponent_C.ExecuteUbergraph_BP_ReviewPromptComponent
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ReviewPromptComponent_C::ExecuteUbergraph_BP_ReviewPromptComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReviewPromptComponent_C", "ExecuteUbergraph_BP_ReviewPromptComponent");

	Params::BP_ReviewPromptComponent_C_ExecuteUbergraph_BP_ReviewPromptComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ReviewPromptComponent.BP_ReviewPromptComponent_C.LoadLastMatchData
// (BlueprintCallable, BlueprintEvent)

void UBP_ReviewPromptComponent_C::LoadLastMatchData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReviewPromptComponent_C", "LoadLastMatchData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ReviewPromptComponent.BP_ReviewPromptComponent_C.LoadCounters
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           NewParam                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_ReviewPromptComponent_C::LoadCounters(const class FString& NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReviewPromptComponent_C", "LoadCounters");

	Params::BP_ReviewPromptComponent_C_LoadCounters Parms{};

	Parms.NewParam = std::move(NewParam);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ReviewPromptComponent.BP_ReviewPromptComponent_C.OnUserCounterReceived
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FCloudRequestResult              RequestResult                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class AHumanPlayerController*           Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FCloudUserCounterValue           CounterValue                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UBP_ReviewPromptComponent_C::OnUserCounterReceived(const struct FCloudRequestResult& RequestResult, class AHumanPlayerController* Player, const struct FCloudUserCounterValue& CounterValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReviewPromptComponent_C", "OnUserCounterReceived");

	Params::BP_ReviewPromptComponent_C_OnUserCounterReceived Parms{};

	Parms.RequestResult = std::move(RequestResult);
	Parms.Player = Player;
	Parms.CounterValue = std::move(CounterValue);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ReviewPromptComponent.BP_ReviewPromptComponent_C.OnLeaderboardLoaded
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsLeaderboardsDataLoaded                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FCloudUserProfileStatistics      LeaderboardsData                                       (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_ReviewPromptComponent_C::OnLeaderboardLoaded(bool IsLeaderboardsDataLoaded, const struct FCloudUserProfileStatistics& LeaderboardsData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReviewPromptComponent_C", "OnLeaderboardLoaded");

	Params::BP_ReviewPromptComponent_C_OnLeaderboardLoaded Parms{};

	Parms.IsLeaderboardsDataLoaded = IsLeaderboardsDataLoaded;
	Parms.LeaderboardsData = std::move(LeaderboardsData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ReviewPromptComponent.BP_ReviewPromptComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_ReviewPromptComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReviewPromptComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ReviewPromptComponent.BP_ReviewPromptComponent_C.ProcessLastMatchData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FCloudUserProfileStatistics      CloudUserProfileStatistics                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_ReviewPromptComponent_C::ProcessLastMatchData(const struct FCloudUserProfileStatistics& CloudUserProfileStatistics)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReviewPromptComponent_C", "ProcessLastMatchData");

	Params::BP_ReviewPromptComponent_C_ProcessLastMatchData Parms{};

	Parms.CloudUserProfileStatistics = std::move(CloudUserProfileStatistics);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ReviewPromptComponent.BP_ReviewPromptComponent_C.ConvertDaysCounterToInt
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Counter                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FDateTime                        LastCountedDay                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   Int                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ReviewPromptComponent_C::ConvertDaysCounterToInt(int32 Counter, const struct FDateTime& LastCountedDay, int32* Int)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReviewPromptComponent_C", "ConvertDaysCounterToInt");

	Params::BP_ReviewPromptComponent_C_ConvertDaysCounterToInt Parms{};

	Parms.Counter = Counter;
	Parms.LastCountedDay = std::move(LastCountedDay);

	UObject::ProcessEvent(Func, &Parms);

	if (Int != nullptr)
		*Int = Parms.Int;
}


// Function BP_ReviewPromptComponent.BP_ReviewPromptComponent_C.ConvertIntToDaysCounter
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Int                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Counter                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FDateTime                        LastCountedDay                                         (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_ReviewPromptComponent_C::ConvertIntToDaysCounter(int32 Int, int32* Counter, struct FDateTime* LastCountedDay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReviewPromptComponent_C", "ConvertIntToDaysCounter");

	Params::BP_ReviewPromptComponent_C_ConvertIntToDaysCounter Parms{};

	Parms.Int = Int;

	UObject::ProcessEvent(Func, &Parms);

	if (Counter != nullptr)
		*Counter = Parms.Counter;

	if (LastCountedDay != nullptr)
		*LastCountedDay = std::move(Parms.LastCountedDay);
}


// Function BP_ReviewPromptComponent.BP_ReviewPromptComponent_C.ConvertReviewPromptTimestampToInt
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FDateTime                        TimespanAvailableAt_0                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   AmountOfReviewsOpened_0                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   AmountOfReviewsFulfilled_0                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Int                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ReviewPromptComponent_C::ConvertReviewPromptTimestampToInt(const struct FDateTime& TimespanAvailableAt_0, int32 AmountOfReviewsOpened_0, int32 AmountOfReviewsFulfilled_0, int32* Int)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReviewPromptComponent_C", "ConvertReviewPromptTimestampToInt");

	Params::BP_ReviewPromptComponent_C_ConvertReviewPromptTimestampToInt Parms{};

	Parms.TimespanAvailableAt_0 = std::move(TimespanAvailableAt_0);
	Parms.AmountOfReviewsOpened_0 = AmountOfReviewsOpened_0;
	Parms.AmountOfReviewsFulfilled_0 = AmountOfReviewsFulfilled_0;

	UObject::ProcessEvent(Func, &Parms);

	if (Int != nullptr)
		*Int = Parms.Int;
}


// Function BP_ReviewPromptComponent.BP_ReviewPromptComponent_C.ConvertIntToReviewPromptTimestamp
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Int                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FDateTime                        TimespanAvailableAt_0                                  (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   AmountOfReviewsOpened_0                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   AmountOfReviewsFulfilled_0                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ReviewPromptComponent_C::ConvertIntToReviewPromptTimestamp(int32 Int, struct FDateTime* TimespanAvailableAt_0, int32* AmountOfReviewsOpened_0, int32* AmountOfReviewsFulfilled_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReviewPromptComponent_C", "ConvertIntToReviewPromptTimestamp");

	Params::BP_ReviewPromptComponent_C_ConvertIntToReviewPromptTimestamp Parms{};

	Parms.Int = Int;

	UObject::ProcessEvent(Func, &Parms);

	if (TimespanAvailableAt_0 != nullptr)
		*TimespanAvailableAt_0 = std::move(Parms.TimespanAvailableAt_0);

	if (AmountOfReviewsOpened_0 != nullptr)
		*AmountOfReviewsOpened_0 = Parms.AmountOfReviewsOpened_0;

	if (AmountOfReviewsFulfilled_0 != nullptr)
		*AmountOfReviewsFulfilled_0 = Parms.AmountOfReviewsFulfilled_0;
}


// Function BP_ReviewPromptComponent.BP_ReviewPromptComponent_C.ShowPrompt
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           SourceEvent_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_ReviewPromptComponent_C::ShowPrompt(const class FString& SourceEvent_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReviewPromptComponent_C", "ShowPrompt");

	Params::BP_ReviewPromptComponent_C_ShowPrompt Parms{};

	Parms.SourceEvent_0 = std::move(SourceEvent_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ReviewPromptComponent.BP_ReviewPromptComponent_C.On Review Completed Event
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Success                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   ErrorCode                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FUserReviewResult                Result                                                 (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_ReviewPromptComponent_C::On_Review_Completed_Event(bool Success, int32 ErrorCode, const struct FUserReviewResult& Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReviewPromptComponent_C", "On Review Completed Event");

	Params::BP_ReviewPromptComponent_C_On_Review_Completed_Event Parms{};

	Parms.Success = Success;
	Parms.ErrorCode = ErrorCode;
	Parms.Result = std::move(Result);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ReviewPromptComponent.BP_ReviewPromptComponent_C.TEST_PACK
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_ReviewPromptComponent_C::TEST_PACK()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReviewPromptComponent_C", "TEST_PACK");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ReviewPromptComponent.BP_ReviewPromptComponent_C.OnCrateOpened
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Loot_Box_Class                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FLootBoxPoolItem>         Items                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_ReviewPromptComponent_C::OnCrateOpened(class UClass* Loot_Box_Class, TArray<struct FLootBoxPoolItem>& Items)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReviewPromptComponent_C", "OnCrateOpened");

	Params::BP_ReviewPromptComponent_C_OnCrateOpened Parms{};

	Parms.Loot_Box_Class = Loot_Box_Class;
	Parms.Items = std::move(Items);

	UObject::ProcessEvent(Func, &Parms);

	Items = std::move(Parms.Items);
}


// Function BP_ReviewPromptComponent.BP_ReviewPromptComponent_C.OnItemBought
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ReviewPromptComponent_C::OnItemBought(class UClass* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReviewPromptComponent_C", "OnItemBought");

	Params::BP_ReviewPromptComponent_C_OnItemBought Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ReviewPromptComponent.BP_ReviewPromptComponent_C.OnBaPaClaimed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FS_BattlePassLevelRewardFull>Free                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<struct FS_BattlePassLevelRewardFull>Premium                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    PremiumLocked                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ReviewPromptComponent_C::OnBaPaClaimed(TArray<struct FS_BattlePassLevelRewardFull>& Free, TArray<struct FS_BattlePassLevelRewardFull>& Premium, bool PremiumLocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReviewPromptComponent_C", "OnBaPaClaimed");

	Params::BP_ReviewPromptComponent_C_OnBaPaClaimed Parms{};

	Parms.Free = std::move(Free);
	Parms.Premium = std::move(Premium);
	Parms.PremiumLocked = PremiumLocked;

	UObject::ProcessEvent(Func, &Parms);

	Free = std::move(Parms.Free);
	Premium = std::move(Parms.Premium);
}


// Function BP_ReviewPromptComponent.BP_ReviewPromptComponent_C.ConditionsFulfilled
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_ReviewPromptComponent_C::ConditionsFulfilled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReviewPromptComponent_C", "ConditionsFulfilled");

	Params::BP_ReviewPromptComponent_C_ConditionsFulfilled Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

