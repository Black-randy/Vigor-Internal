#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_HUD

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "Flame_structs.hpp"
#include "E_ChallengeManagerState_structs.hpp"


namespace SDK::Params
{

// Function UI_HUD.UI_HUD_C.ExecuteUbergraph_UI_HUD
// 0x0170 (0x0170 - 0x0000)
struct UI_HUD_C_ExecuteUbergraph_UI_HUD final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_DelayTime;                      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateFlame*                        K2Node_DynamicCast_AsGame_State_Flame;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNotificationSystem*                    CallFunc_GetNotificationSystem_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_ChallengeNotification_C*            CallFunc_Create_ReturnValue;                       // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AChallengeManager*                      CallFunc_GetChallengeManager_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ChallengeManager_C*                 K2Node_DynamicCast_AsBP_Challenge_Manager;         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0074(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ChallengeSlot_C*                    K2Node_CustomEvent_Slot;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_New_Progress;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0098(0x0008)(NoDestructor, HasGetValueTypeHash)
	class ABP_ChallengeSlot_C*                    K2Node_CustomEvent_ChallengeSlot;                  // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ChallengeManagerState                       CallFunc_Get_Challenge_Manager_State_State;        // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AA[0x2];                                       // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x00AC(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class ABP_ChallengeSlot_C* Slot, int32 New_Progress)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x00BC(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_CustomEvent_ConsumableClass;                // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_EffectTimer;                    // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsPersistentEffect;             // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_ConsumableIndicators_C*             K2Node_DynamicCast_AsUI_Consumable_Indicators;     // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x00EC(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_Event_bShowHUD;                             // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFlameGameInstance*                     CallFunc_GetFlameGameInstance_ReturnValue;         // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AChallengeManager*                      CallFunc_GetChallengeManager_ReturnValue_1;        // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GameInstance_C*                     K2Node_DynamicCast_AsBP_Game_Instance;             // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11A[0x2];                                      // 0x011A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_ChallengeSlot_C*>            CallFunc_GetAllChallengeSlots_Challenge_Slots;     // 0x0128(0x0010)(ReferenceParm)
	class ABP_ChallengeSlot_C*                    CallFunc_Array_Get_Item;                           // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_145[0x3];                                      // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNotificationParams                    K2Node_MakeStruct_NotificationParams;              // 0x0148(0x000C)(NoDestructor)
	bool                                          CallFunc_Handle_Valid_and_Timer_Exists_Return_Value; // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_155[0x3];                                      // 0x0155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15D[0x3];                                      // 0x015D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ChallengeSlot_C*                    CallFunc_Array_Get_Item_1;                         // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_HUD_C_ExecuteUbergraph_UI_HUD) == 0x000008, "Wrong alignment on UI_HUD_C_ExecuteUbergraph_UI_HUD");
static_assert(sizeof(UI_HUD_C_ExecuteUbergraph_UI_HUD) == 0x000170, "Wrong size on UI_HUD_C_ExecuteUbergraph_UI_HUD");
static_assert(offsetof(UI_HUD_C_ExecuteUbergraph_UI_HUD, EntryPoint) == 0x000000, "Member 'UI_HUD_C_ExecuteUbergraph_UI_HUD::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_ExecuteUbergraph_UI_HUD, K2Node_CustomEvent_DelayTime) == 0x000004, "Member 'UI_HUD_C_ExecuteUbergraph_UI_HUD::K2Node_CustomEvent_DelayTime' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_ExecuteUbergraph_UI_HUD, Temp_int_Array_Index_Variable) == 0x000008, "Member 'UI_HUD_C_ExecuteUbergraph_UI_HUD::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_ExecuteUbergraph_UI_HUD, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'UI_HUD_C_ExecuteUbergraph_UI_HUD::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_ExecuteUbergraph_UI_HUD, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'UI_HUD_C_ExecuteUbergraph_UI_HUD::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_ExecuteUbergraph_UI_HUD, Temp_int_Array_Index_Variable_1) == 0x000014, "Member 'UI_HUD_C_ExecuteUbergraph_UI_HUD::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_ExecuteUbergraph_UI_HUD, K2Node_Event_IsDesignTime) == 0x000018, "Member 'UI_HUD_C_ExecuteUbergraph_UI_HUD::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_ExecuteUbergraph_UI_HUD, CallFunc_GetGameState_ReturnValue) == 0x000020, "Member 'UI_HUD_C_ExecuteUbergraph_UI_HUD::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_ExecuteUbergraph_UI_HUD, K2Node_DynamicCast_AsGame_State_Flame) == 0x000028, "Member 'UI_HUD_C_ExecuteUbergraph_UI_HUD::K2Node_DynamicCast_AsGame_State_Flame' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_ExecuteUbergraph_UI_HUD, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'UI_HUD_C_ExecuteUbergraph_UI_HUD::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_ExecuteUbergraph_UI_HUD, CallFunc_GetNotificationSystem_ReturnValue) == 0x000038, "Member 'UI_HUD_C_ExecuteUbergraph_UI_HUD::CallFunc_GetNotificationSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_ExecuteUbergraph_UI_HUD, CallFunc_GetOwningPlayer_ReturnValue) == 0x000040, "Member 'UI_HUD_C_ExecuteUbergraph_UI_HUD::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_ExecuteUbergraph_UI_HUD, CallFunc_ClassIsChildOf_ReturnValue) == 0x000048, "Member 'UI_HUD_C_ExecuteUbergraph_UI_HUD::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_ExecuteUbergraph_UI_HUD, CallFunc_Create_ReturnValue) == 0x000050, "Member 'UI_HUD_C_ExecuteUbergraph_UI_HUD::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_ExecuteUbergraph_UI_HUD, CallFunc_Not_PreBool_ReturnValue) == 0x000058, "Member 'UI_HUD_C_ExecuteUbergraph_UI_HUD::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_ExecuteUbergraph_UI_HUD, CallFunc_GetChallengeManager_ReturnValue) == 0x000060, "Member 'UI_HUD_C_ExecuteUbergraph_UI_HUD::CallFunc_GetChallengeManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_ExecuteUbergraph_UI_HUD, K2Node_DynamicCast_AsBP_Challenge_Manager) == 0x000068, "Member 'UI_HUD_C_ExecuteUbergraph_UI_HUD::K2Node_DynamicCast_AsBP_Challenge_Manager' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_ExecuteUbergraph_UI_HUD, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'UI_HUD_C_ExecuteUbergraph_UI_HUD::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_ExecuteUbergraph_UI_HUD, K2Node_CreateDelegate_OutputDelegate) == 0x000074, "Member 'UI_HUD_C_ExecuteUbergraph_UI_HUD::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_ExecuteUbergraph_UI_HUD, K2Node_CustomEvent_Slot) == 0x000088, "Member 'UI_HUD_C_ExecuteUbergraph_UI_HUD::K2Node_CustomEvent_Slot' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_ExecuteUbergraph_UI_HUD, K2Node_CustomEvent_New_Progress) == 0x000090, "Member 'UI_HUD_C_ExecuteUbergraph_UI_HUD::K2Node_CustomEvent_New_Progress' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_ExecuteUbergraph_UI_HUD, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000098, "Member 'UI_HUD_C_ExecuteUbergraph_UI_HUD::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_ExecuteUbergraph_UI_HUD, K2Node_CustomEvent_ChallengeSlot) == 0x0000A0, "Member 'UI_HUD_C_ExecuteUbergraph_UI_HUD::K2Node_CustomEvent_ChallengeSlot' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_ExecuteUbergraph_UI_HUD, CallFunc_Get_Challenge_Manager_State_State) == 0x0000A8, "Member 'UI_HUD_C_ExecuteUbergraph_UI_HUD::CallFunc_Get_Challenge_Manager_State_State' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_ExecuteUbergraph_UI_HUD, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000A9, "Member 'UI_HUD_C_ExecuteUbergraph_UI_HUD::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_ExecuteUbergraph_UI_HUD, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000AC, "Member 'UI_HUD_C_ExecuteUbergraph_UI_HUD::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_ExecuteUbergraph_UI_HUD, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000BC, "Member 'UI_HUD_C_ExecuteUbergraph_UI_HUD::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_ExecuteUbergraph_UI_HUD, K2Node_CustomEvent_ConsumableClass) == 0x0000D0, "Member 'UI_HUD_C_ExecuteUbergraph_UI_HUD::K2Node_CustomEvent_ConsumableClass' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_ExecuteUbergraph_UI_HUD, K2Node_CustomEvent_EffectTimer) == 0x0000D8, "Member 'UI_HUD_C_ExecuteUbergraph_UI_HUD::K2Node_CustomEvent_EffectTimer' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_ExecuteUbergraph_UI_HUD, K2Node_CustomEvent_IsPersistentEffect) == 0x0000DC, "Member 'UI_HUD_C_ExecuteUbergraph_UI_HUD::K2Node_CustomEvent_IsPersistentEffect' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_ExecuteUbergraph_UI_HUD, K2Node_DynamicCast_AsUI_Consumable_Indicators) == 0x0000E0, "Member 'UI_HUD_C_ExecuteUbergraph_UI_HUD::K2Node_DynamicCast_AsUI_Consumable_Indicators' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_ExecuteUbergraph_UI_HUD, K2Node_DynamicCast_bSuccess_2) == 0x0000E8, "Member 'UI_HUD_C_ExecuteUbergraph_UI_HUD::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_ExecuteUbergraph_UI_HUD, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000EC, "Member 'UI_HUD_C_ExecuteUbergraph_UI_HUD::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_ExecuteUbergraph_UI_HUD, K2Node_Event_bShowHUD) == 0x0000FC, "Member 'UI_HUD_C_ExecuteUbergraph_UI_HUD::K2Node_Event_bShowHUD' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_ExecuteUbergraph_UI_HUD, CallFunc_GetFlameGameInstance_ReturnValue) == 0x000100, "Member 'UI_HUD_C_ExecuteUbergraph_UI_HUD::CallFunc_GetFlameGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_ExecuteUbergraph_UI_HUD, CallFunc_GetChallengeManager_ReturnValue_1) == 0x000108, "Member 'UI_HUD_C_ExecuteUbergraph_UI_HUD::CallFunc_GetChallengeManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_ExecuteUbergraph_UI_HUD, K2Node_DynamicCast_AsBP_Game_Instance) == 0x000110, "Member 'UI_HUD_C_ExecuteUbergraph_UI_HUD::K2Node_DynamicCast_AsBP_Game_Instance' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_ExecuteUbergraph_UI_HUD, K2Node_DynamicCast_bSuccess_3) == 0x000118, "Member 'UI_HUD_C_ExecuteUbergraph_UI_HUD::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_ExecuteUbergraph_UI_HUD, CallFunc_IsValid_ReturnValue) == 0x000119, "Member 'UI_HUD_C_ExecuteUbergraph_UI_HUD::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_ExecuteUbergraph_UI_HUD, Temp_int_Loop_Counter_Variable_1) == 0x00011C, "Member 'UI_HUD_C_ExecuteUbergraph_UI_HUD::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_ExecuteUbergraph_UI_HUD, CallFunc_Add_IntInt_ReturnValue_1) == 0x000120, "Member 'UI_HUD_C_ExecuteUbergraph_UI_HUD::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_ExecuteUbergraph_UI_HUD, CallFunc_GetAllChallengeSlots_Challenge_Slots) == 0x000128, "Member 'UI_HUD_C_ExecuteUbergraph_UI_HUD::CallFunc_GetAllChallengeSlots_Challenge_Slots' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_ExecuteUbergraph_UI_HUD, CallFunc_Array_Get_Item) == 0x000138, "Member 'UI_HUD_C_ExecuteUbergraph_UI_HUD::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_ExecuteUbergraph_UI_HUD, CallFunc_Array_Length_ReturnValue) == 0x000140, "Member 'UI_HUD_C_ExecuteUbergraph_UI_HUD::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_ExecuteUbergraph_UI_HUD, CallFunc_Less_IntInt_ReturnValue) == 0x000144, "Member 'UI_HUD_C_ExecuteUbergraph_UI_HUD::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_ExecuteUbergraph_UI_HUD, K2Node_MakeStruct_NotificationParams) == 0x000148, "Member 'UI_HUD_C_ExecuteUbergraph_UI_HUD::K2Node_MakeStruct_NotificationParams' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_ExecuteUbergraph_UI_HUD, CallFunc_Handle_Valid_and_Timer_Exists_Return_Value) == 0x000154, "Member 'UI_HUD_C_ExecuteUbergraph_UI_HUD::CallFunc_Handle_Valid_and_Timer_Exists_Return_Value' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_ExecuteUbergraph_UI_HUD, CallFunc_Array_AddUnique_ReturnValue) == 0x000158, "Member 'UI_HUD_C_ExecuteUbergraph_UI_HUD::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_ExecuteUbergraph_UI_HUD, CallFunc_Not_PreBool_ReturnValue_1) == 0x00015C, "Member 'UI_HUD_C_ExecuteUbergraph_UI_HUD::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_ExecuteUbergraph_UI_HUD, CallFunc_Array_Get_Item_1) == 0x000160, "Member 'UI_HUD_C_ExecuteUbergraph_UI_HUD::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_ExecuteUbergraph_UI_HUD, CallFunc_Array_Length_ReturnValue_1) == 0x000168, "Member 'UI_HUD_C_ExecuteUbergraph_UI_HUD::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_ExecuteUbergraph_UI_HUD, CallFunc_Less_IntInt_ReturnValue_1) == 0x00016C, "Member 'UI_HUD_C_ExecuteUbergraph_UI_HUD::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function UI_HUD.UI_HUD_C.DelayChallengeNotificationPopUps
// 0x0004 (0x0004 - 0x0000)
struct UI_HUD_C_DelayChallengeNotificationPopUps final
{
public:
	float                                         DelayTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HUD_C_DelayChallengeNotificationPopUps) == 0x000004, "Wrong alignment on UI_HUD_C_DelayChallengeNotificationPopUps");
static_assert(sizeof(UI_HUD_C_DelayChallengeNotificationPopUps) == 0x000004, "Wrong size on UI_HUD_C_DelayChallengeNotificationPopUps");
static_assert(offsetof(UI_HUD_C_DelayChallengeNotificationPopUps, DelayTime) == 0x000000, "Member 'UI_HUD_C_DelayChallengeNotificationPopUps::DelayTime' has a wrong offset!");

// Function UI_HUD.UI_HUD_C.Show
// 0x0001 (0x0001 - 0x0000)
struct UI_HUD_C_Show final
{
public:
	bool                                          bShowHUD;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_HUD_C_Show) == 0x000001, "Wrong alignment on UI_HUD_C_Show");
static_assert(sizeof(UI_HUD_C_Show) == 0x000001, "Wrong size on UI_HUD_C_Show");
static_assert(offsetof(UI_HUD_C_Show, bShowHUD) == 0x000000, "Member 'UI_HUD_C_Show::bShowHUD' has a wrong offset!");

// Function UI_HUD.UI_HUD_C.ShowConsumableNotification
// 0x0010 (0x0010 - 0x0000)
struct UI_HUD_C_ShowConsumableNotification final
{
public:
	class UClass*                                 ConsumableClass;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EffectTimer;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPersistentEffect;                                // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_HUD_C_ShowConsumableNotification) == 0x000008, "Wrong alignment on UI_HUD_C_ShowConsumableNotification");
static_assert(sizeof(UI_HUD_C_ShowConsumableNotification) == 0x000010, "Wrong size on UI_HUD_C_ShowConsumableNotification");
static_assert(offsetof(UI_HUD_C_ShowConsumableNotification, ConsumableClass) == 0x000000, "Member 'UI_HUD_C_ShowConsumableNotification::ConsumableClass' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_ShowConsumableNotification, EffectTimer) == 0x000008, "Member 'UI_HUD_C_ShowConsumableNotification::EffectTimer' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_ShowConsumableNotification, IsPersistentEffect) == 0x00000C, "Member 'UI_HUD_C_ShowConsumableNotification::IsPersistentEffect' has a wrong offset!");

// Function UI_HUD.UI_HUD_C.ShowChallengeNotification
// 0x0008 (0x0008 - 0x0000)
struct UI_HUD_C_ShowChallengeNotification final
{
public:
	class ABP_ChallengeSlot_C*                    ChallengeSlot;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HUD_C_ShowChallengeNotification) == 0x000008, "Wrong alignment on UI_HUD_C_ShowChallengeNotification");
static_assert(sizeof(UI_HUD_C_ShowChallengeNotification) == 0x000008, "Wrong size on UI_HUD_C_ShowChallengeNotification");
static_assert(offsetof(UI_HUD_C_ShowChallengeNotification, ChallengeSlot) == 0x000000, "Member 'UI_HUD_C_ShowChallengeNotification::ChallengeSlot' has a wrong offset!");

// Function UI_HUD.UI_HUD_C.EventChallengeProgressUpdated
// 0x0010 (0x0010 - 0x0000)
struct UI_HUD_C_EventChallengeProgressUpdated final
{
public:
	class ABP_ChallengeSlot_C*                    Slot_0;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         New_Progress;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HUD_C_EventChallengeProgressUpdated) == 0x000008, "Wrong alignment on UI_HUD_C_EventChallengeProgressUpdated");
static_assert(sizeof(UI_HUD_C_EventChallengeProgressUpdated) == 0x000010, "Wrong size on UI_HUD_C_EventChallengeProgressUpdated");
static_assert(offsetof(UI_HUD_C_EventChallengeProgressUpdated, Slot_0) == 0x000000, "Member 'UI_HUD_C_EventChallengeProgressUpdated::Slot_0' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_EventChallengeProgressUpdated, New_Progress) == 0x000008, "Member 'UI_HUD_C_EventChallengeProgressUpdated::New_Progress' has a wrong offset!");

// Function UI_HUD.UI_HUD_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_HUD_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_HUD_C_PreConstruct) == 0x000001, "Wrong alignment on UI_HUD_C_PreConstruct");
static_assert(sizeof(UI_HUD_C_PreConstruct) == 0x000001, "Wrong size on UI_HUD_C_PreConstruct");
static_assert(offsetof(UI_HUD_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_HUD_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_HUD.UI_HUD_C.GetOwningCharacter
// 0x0020 (0x0020 - 0x0000)
struct UI_HUD_C_GetOwningCharacter final
{
public:
	class ABP_Character_C*                        BP_Character;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Character_C*                        K2Node_DynamicCast_AsBP_Character;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_HUD_C_GetOwningCharacter) == 0x000008, "Wrong alignment on UI_HUD_C_GetOwningCharacter");
static_assert(sizeof(UI_HUD_C_GetOwningCharacter) == 0x000020, "Wrong size on UI_HUD_C_GetOwningCharacter");
static_assert(offsetof(UI_HUD_C_GetOwningCharacter, BP_Character) == 0x000000, "Member 'UI_HUD_C_GetOwningCharacter::BP_Character' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_GetOwningCharacter, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000008, "Member 'UI_HUD_C_GetOwningCharacter::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_GetOwningCharacter, K2Node_DynamicCast_AsBP_Character) == 0x000010, "Member 'UI_HUD_C_GetOwningCharacter::K2Node_DynamicCast_AsBP_Character' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_GetOwningCharacter, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'UI_HUD_C_GetOwningCharacter::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function UI_HUD.UI_HUD_C.SetMainHUDVisibility
// 0x0078 (0x0078 - 0x0000)
struct UI_HUD_C_SetMainHUDVisibility final
{
public:
	bool                                          ShowHUD;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_C*                        OwningCharacter;                                   // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_GameInfo_C*                         CallFunc_Create_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 K2Node_DynamicCast_AsHuman_Player_Controller;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EGameScenario                                 CallFunc_GetGameScenario_ReturnValue;              // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActivatedOnOptions_ReturnValue;         // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_1;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFlameHUD*                              K2Node_DynamicCast_AsFlame_HUD;                    // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_HUD_C_SetMainHUDVisibility) == 0x000008, "Wrong alignment on UI_HUD_C_SetMainHUDVisibility");
static_assert(sizeof(UI_HUD_C_SetMainHUDVisibility) == 0x000078, "Wrong size on UI_HUD_C_SetMainHUDVisibility");
static_assert(offsetof(UI_HUD_C_SetMainHUDVisibility, ShowHUD) == 0x000000, "Member 'UI_HUD_C_SetMainHUDVisibility::ShowHUD' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_SetMainHUDVisibility, OwningCharacter) == 0x000008, "Member 'UI_HUD_C_SetMainHUDVisibility::OwningCharacter' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_SetMainHUDVisibility, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'UI_HUD_C_SetMainHUDVisibility::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_SetMainHUDVisibility, Temp_byte_Variable) == 0x000014, "Member 'UI_HUD_C_SetMainHUDVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_SetMainHUDVisibility, Temp_byte_Variable_1) == 0x000015, "Member 'UI_HUD_C_SetMainHUDVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_SetMainHUDVisibility, Temp_bool_Variable) == 0x000016, "Member 'UI_HUD_C_SetMainHUDVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_SetMainHUDVisibility, CallFunc_GetOwningPlayer_ReturnValue) == 0x000018, "Member 'UI_HUD_C_SetMainHUDVisibility::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_SetMainHUDVisibility, CallFunc_Create_ReturnValue) == 0x000020, "Member 'UI_HUD_C_SetMainHUDVisibility::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_SetMainHUDVisibility, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'UI_HUD_C_SetMainHUDVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_SetMainHUDVisibility, CallFunc_Not_PreBool_ReturnValue) == 0x000029, "Member 'UI_HUD_C_SetMainHUDVisibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_SetMainHUDVisibility, K2Node_DynamicCast_AsHuman_Player_Controller) == 0x000030, "Member 'UI_HUD_C_SetMainHUDVisibility::K2Node_DynamicCast_AsHuman_Player_Controller' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_SetMainHUDVisibility, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'UI_HUD_C_SetMainHUDVisibility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_SetMainHUDVisibility, CallFunc_GetGameScenario_ReturnValue) == 0x000039, "Member 'UI_HUD_C_SetMainHUDVisibility::CallFunc_GetGameScenario_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_SetMainHUDVisibility, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00003A, "Member 'UI_HUD_C_SetMainHUDVisibility::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_SetMainHUDVisibility, CallFunc_IsActivatedOnOptions_ReturnValue) == 0x00003B, "Member 'UI_HUD_C_SetMainHUDVisibility::CallFunc_IsActivatedOnOptions_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_SetMainHUDVisibility, CallFunc_BooleanAND_ReturnValue) == 0x00003C, "Member 'UI_HUD_C_SetMainHUDVisibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_SetMainHUDVisibility, CallFunc_AddChild_ReturnValue) == 0x000040, "Member 'UI_HUD_C_SetMainHUDVisibility::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_SetMainHUDVisibility, K2Node_Select_Default) == 0x000048, "Member 'UI_HUD_C_SetMainHUDVisibility::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_SetMainHUDVisibility, CallFunc_GetOwningPlayer_ReturnValue_1) == 0x000050, "Member 'UI_HUD_C_SetMainHUDVisibility::CallFunc_GetOwningPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_SetMainHUDVisibility, CallFunc_IsValid_ReturnValue_1) == 0x000058, "Member 'UI_HUD_C_SetMainHUDVisibility::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_SetMainHUDVisibility, CallFunc_IsValid_ReturnValue_2) == 0x000059, "Member 'UI_HUD_C_SetMainHUDVisibility::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_SetMainHUDVisibility, CallFunc_GetHUD_ReturnValue) == 0x000060, "Member 'UI_HUD_C_SetMainHUDVisibility::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_SetMainHUDVisibility, K2Node_DynamicCast_AsFlame_HUD) == 0x000068, "Member 'UI_HUD_C_SetMainHUDVisibility::K2Node_DynamicCast_AsFlame_HUD' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_SetMainHUDVisibility, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'UI_HUD_C_SetMainHUDVisibility::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function UI_HUD.UI_HUD_C.Set Freezing Indicator
// 0x000C (0x000C - 0x0000)
struct UI_HUD_C_Set_Freezing_Indicator final
{
public:
	bool                                          BeingFreezed_0;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Value;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HUD_C_Set_Freezing_Indicator) == 0x000004, "Wrong alignment on UI_HUD_C_Set_Freezing_Indicator");
static_assert(sizeof(UI_HUD_C_Set_Freezing_Indicator) == 0x00000C, "Wrong size on UI_HUD_C_Set_Freezing_Indicator");
static_assert(offsetof(UI_HUD_C_Set_Freezing_Indicator, BeingFreezed_0) == 0x000000, "Member 'UI_HUD_C_Set_Freezing_Indicator::BeingFreezed_0' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_Set_Freezing_Indicator, Value) == 0x000004, "Member 'UI_HUD_C_Set_Freezing_Indicator::Value' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_Set_Freezing_Indicator, Temp_byte_Variable) == 0x000008, "Member 'UI_HUD_C_Set_Freezing_Indicator::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_Set_Freezing_Indicator, Temp_byte_Variable_1) == 0x000009, "Member 'UI_HUD_C_Set_Freezing_Indicator::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_Set_Freezing_Indicator, Temp_bool_Variable) == 0x00000A, "Member 'UI_HUD_C_Set_Freezing_Indicator::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_HUD_C_Set_Freezing_Indicator, K2Node_Select_Default) == 0x00000B, "Member 'UI_HUD_C_Set_Freezing_Indicator::K2Node_Select_Default' has a wrong offset!");

}

