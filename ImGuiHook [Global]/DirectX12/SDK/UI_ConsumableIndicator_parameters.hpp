#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_ConsumableIndicator

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function UI_ConsumableIndicator.UI_ConsumableIndicator_C.ExecuteUbergraph_UI_ConsumableIndicator
// 0x0018 (0x0018 - 0x0000)
struct UI_ConsumableIndicator_C_ExecuteUbergraph_UI_ConsumableIndicator final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ConsumableIndicator_C_ExecuteUbergraph_UI_ConsumableIndicator) == 0x000008, "Wrong alignment on UI_ConsumableIndicator_C_ExecuteUbergraph_UI_ConsumableIndicator");
static_assert(sizeof(UI_ConsumableIndicator_C_ExecuteUbergraph_UI_ConsumableIndicator) == 0x000018, "Wrong size on UI_ConsumableIndicator_C_ExecuteUbergraph_UI_ConsumableIndicator");
static_assert(offsetof(UI_ConsumableIndicator_C_ExecuteUbergraph_UI_ConsumableIndicator, EntryPoint) == 0x000000, "Member 'UI_ConsumableIndicator_C_ExecuteUbergraph_UI_ConsumableIndicator::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_ConsumableIndicator_C_ExecuteUbergraph_UI_ConsumableIndicator, K2Node_Event_IsDesignTime) == 0x000004, "Member 'UI_ConsumableIndicator_C_ExecuteUbergraph_UI_ConsumableIndicator::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_ConsumableIndicator_C_ExecuteUbergraph_UI_ConsumableIndicator, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000008, "Member 'UI_ConsumableIndicator_C_ExecuteUbergraph_UI_ConsumableIndicator::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ConsumableIndicator_C_ExecuteUbergraph_UI_ConsumableIndicator, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000010, "Member 'UI_ConsumableIndicator_C_ExecuteUbergraph_UI_ConsumableIndicator::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");

// Function UI_ConsumableIndicator.UI_ConsumableIndicator_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_ConsumableIndicator_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_ConsumableIndicator_C_PreConstruct) == 0x000001, "Wrong alignment on UI_ConsumableIndicator_C_PreConstruct");
static_assert(sizeof(UI_ConsumableIndicator_C_PreConstruct) == 0x000001, "Wrong size on UI_ConsumableIndicator_C_PreConstruct");
static_assert(offsetof(UI_ConsumableIndicator_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_ConsumableIndicator_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_ConsumableIndicator.UI_ConsumableIndicator_C.ToggleIndicator
// 0x0058 (0x0058 - 0x0000)
struct UI_ConsumableIndicator_C_ToggleIndicator final
{
public:
	bool                                          Toggle;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 ConsumableClass;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPersistentEffect;                                // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         EffectTotalDuration_0;                             // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B[0x1];                                       // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x001C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x002C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0040(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0050(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ConsumableIndicator_C_ToggleIndicator) == 0x000008, "Wrong alignment on UI_ConsumableIndicator_C_ToggleIndicator");
static_assert(sizeof(UI_ConsumableIndicator_C_ToggleIndicator) == 0x000058, "Wrong size on UI_ConsumableIndicator_C_ToggleIndicator");
static_assert(offsetof(UI_ConsumableIndicator_C_ToggleIndicator, Toggle) == 0x000000, "Member 'UI_ConsumableIndicator_C_ToggleIndicator::Toggle' has a wrong offset!");
static_assert(offsetof(UI_ConsumableIndicator_C_ToggleIndicator, ConsumableClass) == 0x000008, "Member 'UI_ConsumableIndicator_C_ToggleIndicator::ConsumableClass' has a wrong offset!");
static_assert(offsetof(UI_ConsumableIndicator_C_ToggleIndicator, IsPersistentEffect) == 0x000010, "Member 'UI_ConsumableIndicator_C_ToggleIndicator::IsPersistentEffect' has a wrong offset!");
static_assert(offsetof(UI_ConsumableIndicator_C_ToggleIndicator, EffectTotalDuration_0) == 0x000014, "Member 'UI_ConsumableIndicator_C_ToggleIndicator::EffectTotalDuration_0' has a wrong offset!");
static_assert(offsetof(UI_ConsumableIndicator_C_ToggleIndicator, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000018, "Member 'UI_ConsumableIndicator_C_ToggleIndicator::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ConsumableIndicator_C_ToggleIndicator, CallFunc_BooleanOR_ReturnValue) == 0x000019, "Member 'UI_ConsumableIndicator_C_ToggleIndicator::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ConsumableIndicator_C_ToggleIndicator, CallFunc_BooleanAND_ReturnValue) == 0x00001A, "Member 'UI_ConsumableIndicator_C_ToggleIndicator::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ConsumableIndicator_C_ToggleIndicator, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'UI_ConsumableIndicator_C_ToggleIndicator::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UI_ConsumableIndicator_C_ToggleIndicator, K2Node_CreateDelegate_OutputDelegate_1) == 0x00002C, "Member 'UI_ConsumableIndicator_C_ToggleIndicator::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(UI_ConsumableIndicator_C_ToggleIndicator, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000040, "Member 'UI_ConsumableIndicator_C_ToggleIndicator::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ConsumableIndicator_C_ToggleIndicator, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000048, "Member 'UI_ConsumableIndicator_C_ToggleIndicator::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ConsumableIndicator_C_ToggleIndicator, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000050, "Member 'UI_ConsumableIndicator_C_ToggleIndicator::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");

// Function UI_ConsumableIndicator.UI_ConsumableIndicator_C.SetIndicatorProgress
// 0x0004 (0x0004 - 0x0000)
struct UI_ConsumableIndicator_C_SetIndicatorProgress final
{
public:
	float                                         Progress_0;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ConsumableIndicator_C_SetIndicatorProgress) == 0x000004, "Wrong alignment on UI_ConsumableIndicator_C_SetIndicatorProgress");
static_assert(sizeof(UI_ConsumableIndicator_C_SetIndicatorProgress) == 0x000004, "Wrong size on UI_ConsumableIndicator_C_SetIndicatorProgress");
static_assert(offsetof(UI_ConsumableIndicator_C_SetIndicatorProgress, Progress_0) == 0x000000, "Member 'UI_ConsumableIndicator_C_SetIndicatorProgress::Progress_0' has a wrong offset!");

// Function UI_ConsumableIndicator.UI_ConsumableIndicator_C.UpdateIndicator
// 0x0008 (0x0008 - 0x0000)
struct UI_ConsumableIndicator_C_UpdateIndicator final
{
public:
	float                                         CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue; // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ConsumableIndicator_C_UpdateIndicator) == 0x000004, "Wrong alignment on UI_ConsumableIndicator_C_UpdateIndicator");
static_assert(sizeof(UI_ConsumableIndicator_C_UpdateIndicator) == 0x000008, "Wrong size on UI_ConsumableIndicator_C_UpdateIndicator");
static_assert(offsetof(UI_ConsumableIndicator_C_UpdateIndicator, CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue) == 0x000000, "Member 'UI_ConsumableIndicator_C_UpdateIndicator::CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ConsumableIndicator_C_UpdateIndicator, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000004, "Member 'UI_ConsumableIndicator_C_UpdateIndicator::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function UI_ConsumableIndicator.UI_ConsumableIndicator_C.SetIndicatorIcon
// 0x0010 (0x0010 - 0x0000)
struct UI_ConsumableIndicator_C_SetIndicatorIcon final
{
public:
	class UClass*                                 ConsumableClass;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             CallFunc_GetConsumableIcon_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ConsumableIndicator_C_SetIndicatorIcon) == 0x000008, "Wrong alignment on UI_ConsumableIndicator_C_SetIndicatorIcon");
static_assert(sizeof(UI_ConsumableIndicator_C_SetIndicatorIcon) == 0x000010, "Wrong size on UI_ConsumableIndicator_C_SetIndicatorIcon");
static_assert(offsetof(UI_ConsumableIndicator_C_SetIndicatorIcon, ConsumableClass) == 0x000000, "Member 'UI_ConsumableIndicator_C_SetIndicatorIcon::ConsumableClass' has a wrong offset!");
static_assert(offsetof(UI_ConsumableIndicator_C_SetIndicatorIcon, CallFunc_GetConsumableIcon_ReturnValue) == 0x000008, "Member 'UI_ConsumableIndicator_C_SetIndicatorIcon::CallFunc_GetConsumableIcon_ReturnValue' has a wrong offset!");

// Function UI_ConsumableIndicator.UI_ConsumableIndicator_C.SetBrush
// 0x0060 (0x0060 - 0x0000)
struct UI_ConsumableIndicator_C_SetBrush final
{
public:
	class UClass*                                 ConsumableClass;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   CallFunc_GetSoftClassReference_ReturnValue;        // 0x0008(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   CallFunc_Conv_ClassToSoftClassReference_ReturnValue; // 0x0030(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_SoftClassReference_ReturnValue; // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_ConsumableIndicator_C_SetBrush) == 0x000008, "Wrong alignment on UI_ConsumableIndicator_C_SetBrush");
static_assert(sizeof(UI_ConsumableIndicator_C_SetBrush) == 0x000060, "Wrong size on UI_ConsumableIndicator_C_SetBrush");
static_assert(offsetof(UI_ConsumableIndicator_C_SetBrush, ConsumableClass) == 0x000000, "Member 'UI_ConsumableIndicator_C_SetBrush::ConsumableClass' has a wrong offset!");
static_assert(offsetof(UI_ConsumableIndicator_C_SetBrush, CallFunc_GetSoftClassReference_ReturnValue) == 0x000008, "Member 'UI_ConsumableIndicator_C_SetBrush::CallFunc_GetSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ConsumableIndicator_C_SetBrush, CallFunc_Conv_ClassToSoftClassReference_ReturnValue) == 0x000030, "Member 'UI_ConsumableIndicator_C_SetBrush::CallFunc_Conv_ClassToSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ConsumableIndicator_C_SetBrush, CallFunc_EqualEqual_SoftClassReference_ReturnValue) == 0x000058, "Member 'UI_ConsumableIndicator_C_SetBrush::CallFunc_EqualEqual_SoftClassReference_ReturnValue' has a wrong offset!");

}

