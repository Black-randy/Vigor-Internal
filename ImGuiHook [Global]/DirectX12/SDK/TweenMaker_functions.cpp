#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TweenMaker

#include "Basic.hpp"

#include "TweenMaker_classes.hpp"
#include "TweenMaker_parameters.hpp"


namespace SDK
{

// Function TweenMaker.BaseTween.AppendTweenActorFollowSpline
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USplineComponent*                 Spline                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ApplyRotation                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ApplyScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    UseConstantSpeed                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloat* UBaseTween::AppendTweenActorFollowSpline(class AActor*& TweenTarget, class USplineComponent* Spline, float Duration, bool ApplyRotation, bool ApplyScale, bool UseConstantSpeed, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "AppendTweenActorFollowSpline");

	Params::BaseTween_AppendTweenActorFollowSpline Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.Spline = Spline;
	Parms.Duration = Duration;
	Parms.ApplyRotation = ApplyRotation;
	Parms.ApplyScale = ApplyScale;
	Parms.UseConstantSpeed = UseConstantSpeed;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.AppendTweenCustomFloat
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   From                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloat* UBaseTween::AppendTweenCustomFloat(class UObject*& TweenTarget, float From, float To, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "AppendTweenCustomFloat");

	Params::BaseTween_AppendTweenCustomFloat Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.From = From;
	Parms.To = To;
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.AppendTweenCustomVector
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          From                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector* UBaseTween::AppendTweenCustomVector(class UObject*& TweenTarget, const struct FVector& From, const struct FVector& To, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "AppendTweenCustomVector");

	Params::BaseTween_AppendTweenCustomVector Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.From = std::move(From);
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.AppendTweenCustomVector2D
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        From                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2D*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector2D* UBaseTween::AppendTweenCustomVector2D(class UObject*& TweenTarget, const struct FVector2D& From, const struct FVector2D& To, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "AppendTweenCustomVector2D");

	Params::BaseTween_AppendTweenCustomVector2D Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.From = std::move(From);
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.AppendTweenMaterialFloatFromTo
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UMaterialInstanceDynamic*         TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   From                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloat* UBaseTween::AppendTweenMaterialFloatFromTo(class UMaterialInstanceDynamic*& TweenTarget, class FName ParameterName, float From, float To, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "AppendTweenMaterialFloatFromTo");

	Params::BaseTween_AppendTweenMaterialFloatFromTo Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.ParameterName = ParameterName;
	Parms.From = From;
	Parms.To = To;
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.AppendTweenMaterialFloatTo
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UMaterialInstanceDynamic*         TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloat* UBaseTween::AppendTweenMaterialFloatTo(class UMaterialInstanceDynamic*& TweenTarget, class FName ParameterName, float To, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "AppendTweenMaterialFloatTo");

	Params::BaseTween_AppendTweenMaterialFloatTo Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.ParameterName = ParameterName;
	Parms.To = To;
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.AppendTweenMaterialVectorFromTo
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UMaterialInstanceDynamic*         TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     From                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenLinearColor*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenLinearColor* UBaseTween::AppendTweenMaterialVectorFromTo(class UMaterialInstanceDynamic*& TweenTarget, class FName ParameterName, const struct FLinearColor& From, const struct FLinearColor& To, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "AppendTweenMaterialVectorFromTo");

	Params::BaseTween_AppendTweenMaterialVectorFromTo Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.ParameterName = ParameterName;
	Parms.From = std::move(From);
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.AppendTweenMaterialVectorTo
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UMaterialInstanceDynamic*         TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenLinearColor*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenLinearColor* UBaseTween::AppendTweenMaterialVectorTo(class UMaterialInstanceDynamic*& TweenTarget, class FName ParameterName, const struct FLinearColor& To, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "AppendTweenMaterialVectorTo");

	Params::BaseTween_AppendTweenMaterialVectorTo Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.ParameterName = ParameterName;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.AppendTweenMoveActorBy
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector* UBaseTween::AppendTweenMoveActorBy(class AActor*& TweenTarget, const struct FVector& bY, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "AppendTweenMoveActorBy");

	Params::BaseTween_AppendTweenMoveActorBy Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.AppendTweenMoveActorTo
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenSpace                             TweenSpace                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector* UBaseTween::AppendTweenMoveActorTo(class AActor*& TweenTarget, const struct FVector& To, float Duration, ETweenEaseType EaseType, ETweenSpace TweenSpace, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "AppendTweenMoveActorTo");

	Params::BaseTween_AppendTweenMoveActorTo Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.TweenSpace = TweenSpace;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.AppendTweenMoveSceneComponentBy
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector* UBaseTween::AppendTweenMoveSceneComponentBy(class USceneComponent*& TweenTarget, const struct FVector& bY, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "AppendTweenMoveSceneComponentBy");

	Params::BaseTween_AppendTweenMoveSceneComponentBy Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.AppendTweenMoveSceneComponentTo
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenSpace                             TweenSpace                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector* UBaseTween::AppendTweenMoveSceneComponentTo(class USceneComponent*& TweenTarget, const struct FVector& To, float Duration, ETweenEaseType EaseType, ETweenSpace TweenSpace, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "AppendTweenMoveSceneComponentTo");

	Params::BaseTween_AppendTweenMoveSceneComponentTo Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.TweenSpace = TweenSpace;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.AppendTweenMoveWidgetBy
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UWidget*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2D*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector2D* UBaseTween::AppendTweenMoveWidgetBy(class UWidget*& TweenTarget, const struct FVector2D& bY, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "AppendTweenMoveWidgetBy");

	Params::BaseTween_AppendTweenMoveWidgetBy Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.AppendTweenMoveWidgetTo
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UWidget*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2D*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector2D* UBaseTween::AppendTweenMoveWidgetTo(class UWidget*& TweenTarget, const struct FVector2D& To, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "AppendTweenMoveWidgetTo");

	Params::BaseTween_AppendTweenMoveWidgetTo Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.AppendTweenRotateActorAroundPoint
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          PivotPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartingAngle                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   EndingAngle                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Axis                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloat* UBaseTween::AppendTweenRotateActorAroundPoint(class AActor*& TweenTarget, const struct FVector& PivotPoint, float StartingAngle, float EndingAngle, float Radius, const struct FVector& Axis, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "AppendTweenRotateActorAroundPoint");

	Params::BaseTween_AppendTweenRotateActorAroundPoint Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.PivotPoint = std::move(PivotPoint);
	Parms.StartingAngle = StartingAngle;
	Parms.EndingAngle = EndingAngle;
	Parms.Radius = Radius;
	Parms.Axis = std::move(Axis);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.AppendTweenRotateActorAroundPointByOffset
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          PivotPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OffsetAngle                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenReferenceAxis                     ReferenceAxis                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloat* UBaseTween::AppendTweenRotateActorAroundPointByOffset(class AActor*& TweenTarget, const struct FVector& PivotPoint, float OffsetAngle, ETweenReferenceAxis ReferenceAxis, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "AppendTweenRotateActorAroundPointByOffset");

	Params::BaseTween_AppendTweenRotateActorAroundPointByOffset Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.PivotPoint = std::move(PivotPoint);
	Parms.OffsetAngle = OffsetAngle;
	Parms.ReferenceAxis = ReferenceAxis;
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.AppendTweenRotateActorBy
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenRotator*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenRotator* UBaseTween::AppendTweenRotateActorBy(class AActor*& TweenTarget, const struct FRotator& bY, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "AppendTweenRotateActorBy");

	Params::BaseTween_AppendTweenRotateActorBy Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.AppendTweenRotateActorTo
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenSpace                             TweenSpace                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenRotationMode                      RotationMode                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenRotator*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenRotator* UBaseTween::AppendTweenRotateActorTo(class AActor*& TweenTarget, const struct FRotator& To, float Duration, ETweenEaseType EaseType, ETweenSpace TweenSpace, ETweenRotationMode RotationMode, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "AppendTweenRotateActorTo");

	Params::BaseTween_AppendTweenRotateActorTo Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.TweenSpace = TweenSpace;
	Parms.RotationMode = RotationMode;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.AppendTweenRotateSceneComponentAroundPoint
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          PivotPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartingAngle                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   EndingAngle                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Axis                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloat* UBaseTween::AppendTweenRotateSceneComponentAroundPoint(class USceneComponent*& TweenTarget, const struct FVector& PivotPoint, float StartingAngle, float EndingAngle, float Radius, const struct FVector& Axis, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "AppendTweenRotateSceneComponentAroundPoint");

	Params::BaseTween_AppendTweenRotateSceneComponentAroundPoint Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.PivotPoint = std::move(PivotPoint);
	Parms.StartingAngle = StartingAngle;
	Parms.EndingAngle = EndingAngle;
	Parms.Radius = Radius;
	Parms.Axis = std::move(Axis);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.AppendTweenRotateSceneComponentAroundPointByOffset
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          PivotPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OffsetAngle                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenReferenceAxis                     ReferenceAxis                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloat* UBaseTween::AppendTweenRotateSceneComponentAroundPointByOffset(class USceneComponent*& TweenTarget, const struct FVector& PivotPoint, float OffsetAngle, ETweenReferenceAxis ReferenceAxis, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "AppendTweenRotateSceneComponentAroundPointByOffset");

	Params::BaseTween_AppendTweenRotateSceneComponentAroundPointByOffset Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.PivotPoint = std::move(PivotPoint);
	Parms.OffsetAngle = OffsetAngle;
	Parms.ReferenceAxis = ReferenceAxis;
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.AppendTweenRotateSceneComponentBy
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenRotator*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenRotator* UBaseTween::AppendTweenRotateSceneComponentBy(class USceneComponent*& TweenTarget, const struct FRotator& bY, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "AppendTweenRotateSceneComponentBy");

	Params::BaseTween_AppendTweenRotateSceneComponentBy Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.AppendTweenRotateSceneComponentTo
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenSpace                             TweenSpace                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenRotationMode                      RotationMode                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenRotator*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenRotator* UBaseTween::AppendTweenRotateSceneComponentTo(class USceneComponent*& TweenTarget, const struct FRotator& To, float Duration, ETweenEaseType EaseType, ETweenSpace TweenSpace, ETweenRotationMode RotationMode, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "AppendTweenRotateSceneComponentTo");

	Params::BaseTween_AppendTweenRotateSceneComponentTo Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.TweenSpace = TweenSpace;
	Parms.RotationMode = RotationMode;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.AppendTweenScaleActorBy
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector* UBaseTween::AppendTweenScaleActorBy(class AActor*& TweenTarget, const struct FVector& bY, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "AppendTweenScaleActorBy");

	Params::BaseTween_AppendTweenScaleActorBy Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.AppendTweenScaleActorTo
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenSpace                             TweenSpace                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector* UBaseTween::AppendTweenScaleActorTo(class AActor*& TweenTarget, const struct FVector& To, float Duration, ETweenEaseType EaseType, ETweenSpace TweenSpace, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "AppendTweenScaleActorTo");

	Params::BaseTween_AppendTweenScaleActorTo Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.TweenSpace = TweenSpace;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.AppendTweenScaleSceneComponentBy
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector* UBaseTween::AppendTweenScaleSceneComponentBy(class USceneComponent*& TweenTarget, const struct FVector& bY, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "AppendTweenScaleSceneComponentBy");

	Params::BaseTween_AppendTweenScaleSceneComponentBy Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.AppendTweenScaleSceneComponentTo
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenSpace                             TweenSpace                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector* UBaseTween::AppendTweenScaleSceneComponentTo(class USceneComponent*& TweenTarget, const struct FVector& To, float Duration, ETweenEaseType EaseType, ETweenSpace TweenSpace, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "AppendTweenScaleSceneComponentTo");

	Params::BaseTween_AppendTweenScaleSceneComponentTo Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.TweenSpace = TweenSpace;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.AppendTweenScaleWidgetBy
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UWidget*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2D*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector2D* UBaseTween::AppendTweenScaleWidgetBy(class UWidget*& TweenTarget, const struct FVector2D& bY, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "AppendTweenScaleWidgetBy");

	Params::BaseTween_AppendTweenScaleWidgetBy Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.AppendTweenScaleWidgetTo
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UWidget*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2D*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector2D* UBaseTween::AppendTweenScaleWidgetTo(class UWidget*& TweenTarget, const struct FVector2D& To, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "AppendTweenScaleWidgetTo");

	Params::BaseTween_AppendTweenScaleWidgetTo Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.AppendTweenSceneComponentFollowSpline
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USplineComponent*                 Spline                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ApplyRotation                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ApplyScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    UseConstantSpeed                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloat* UBaseTween::AppendTweenSceneComponentFollowSpline(class USceneComponent*& TweenTarget, class USplineComponent* Spline, float Duration, bool ApplyRotation, bool ApplyScale, bool UseConstantSpeed, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "AppendTweenSceneComponentFollowSpline");

	Params::BaseTween_AppendTweenSceneComponentFollowSpline Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.Spline = Spline;
	Parms.Duration = Duration;
	Parms.ApplyRotation = ApplyRotation;
	Parms.ApplyScale = ApplyScale;
	Parms.UseConstantSpeed = UseConstantSpeed;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.AppendTweenShearWidgetTo
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UWidget*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2D*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector2D* UBaseTween::AppendTweenShearWidgetTo(class UWidget*& TweenTarget, const struct FVector2D& To, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "AppendTweenShearWidgetTo");

	Params::BaseTween_AppendTweenShearWidgetTo Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.AppendTweenWidgetAngleTo
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UWidget*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloat* UBaseTween::AppendTweenWidgetAngleTo(class UWidget*& TweenTarget, float To, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "AppendTweenWidgetAngleTo");

	Params::BaseTween_AppendTweenWidgetAngleTo Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.To = To;
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.AppendTweenWidgetOpacityTo
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UWidget*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloat* UBaseTween::AppendTweenWidgetOpacityTo(class UWidget*& TweenTarget, float To, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "AppendTweenWidgetOpacityTo");

	Params::BaseTween_AppendTweenWidgetOpacityTo Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.To = To;
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.DeleteTween
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    FireEndEvent                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBaseTween::DeleteTween(bool FireEndEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "DeleteTween");

	Params::BaseTween_DeleteTween Parms{};

	Parms.FireEndEvent = FireEndEvent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TweenMaker.BaseTween.JoinTweenActorFollowSpline
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USplineComponent*                 Spline                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ApplyRotation                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ApplyScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    UseConstantSpeed                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloat* UBaseTween::JoinTweenActorFollowSpline(class AActor*& TweenTarget, class USplineComponent* Spline, float Duration, bool ApplyRotation, bool ApplyScale, bool UseConstantSpeed, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "JoinTweenActorFollowSpline");

	Params::BaseTween_JoinTweenActorFollowSpline Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.Spline = Spline;
	Parms.Duration = Duration;
	Parms.ApplyRotation = ApplyRotation;
	Parms.ApplyScale = ApplyScale;
	Parms.UseConstantSpeed = UseConstantSpeed;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.JoinTweenCustomFloat
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   From                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloat* UBaseTween::JoinTweenCustomFloat(class UObject*& TweenTarget, float From, float To, float Duration, ETweenEaseType EaseType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "JoinTweenCustomFloat");

	Params::BaseTween_JoinTweenCustomFloat Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.From = From;
	Parms.To = To;
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.JoinTweenCustomVector
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          From                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector* UBaseTween::JoinTweenCustomVector(class UObject*& TweenTarget, const struct FVector& From, const struct FVector& To, float Duration, ETweenEaseType EaseType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "JoinTweenCustomVector");

	Params::BaseTween_JoinTweenCustomVector Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.From = std::move(From);
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.JoinTweenCustomVector2D
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        From                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2D*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector2D* UBaseTween::JoinTweenCustomVector2D(class UObject*& TweenTarget, const struct FVector2D& From, const struct FVector2D& To, float Duration, ETweenEaseType EaseType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "JoinTweenCustomVector2D");

	Params::BaseTween_JoinTweenCustomVector2D Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.From = std::move(From);
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.JoinTweenMaterialFloatFromTo
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UMaterialInstanceDynamic*         TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   From                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloat* UBaseTween::JoinTweenMaterialFloatFromTo(class UMaterialInstanceDynamic*& TweenTarget, class FName ParameterName, float From, float To, float Duration, ETweenEaseType EaseType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "JoinTweenMaterialFloatFromTo");

	Params::BaseTween_JoinTweenMaterialFloatFromTo Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.ParameterName = ParameterName;
	Parms.From = From;
	Parms.To = To;
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.JoinTweenMaterialFloatTo
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UMaterialInstanceDynamic*         TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloat* UBaseTween::JoinTweenMaterialFloatTo(class UMaterialInstanceDynamic*& TweenTarget, class FName ParameterName, float To, float Duration, ETweenEaseType EaseType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "JoinTweenMaterialFloatTo");

	Params::BaseTween_JoinTweenMaterialFloatTo Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.ParameterName = ParameterName;
	Parms.To = To;
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.JoinTweenMaterialVectorFromTo
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UMaterialInstanceDynamic*         TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     From                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenLinearColor*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenLinearColor* UBaseTween::JoinTweenMaterialVectorFromTo(class UMaterialInstanceDynamic*& TweenTarget, class FName ParameterName, const struct FLinearColor& From, const struct FLinearColor& To, float Duration, ETweenEaseType EaseType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "JoinTweenMaterialVectorFromTo");

	Params::BaseTween_JoinTweenMaterialVectorFromTo Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.ParameterName = ParameterName;
	Parms.From = std::move(From);
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.JoinTweenMaterialVectorTo
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UMaterialInstanceDynamic*         TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenLinearColor*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenLinearColor* UBaseTween::JoinTweenMaterialVectorTo(class UMaterialInstanceDynamic*& TweenTarget, class FName ParameterName, const struct FLinearColor& To, float Duration, ETweenEaseType EaseType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "JoinTweenMaterialVectorTo");

	Params::BaseTween_JoinTweenMaterialVectorTo Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.ParameterName = ParameterName;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.JoinTweenMoveActorBy
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector* UBaseTween::JoinTweenMoveActorBy(class AActor*& TweenTarget, const struct FVector& bY, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "JoinTweenMoveActorBy");

	Params::BaseTween_JoinTweenMoveActorBy Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.JoinTweenMoveActorTo
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenSpace                             TweenSpace                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector* UBaseTween::JoinTweenMoveActorTo(class AActor*& TweenTarget, const struct FVector& To, float Duration, ETweenEaseType EaseType, ETweenSpace TweenSpace, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "JoinTweenMoveActorTo");

	Params::BaseTween_JoinTweenMoveActorTo Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.TweenSpace = TweenSpace;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.JoinTweenMoveSceneComponentBy
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector* UBaseTween::JoinTweenMoveSceneComponentBy(class USceneComponent*& TweenTarget, const struct FVector& bY, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "JoinTweenMoveSceneComponentBy");

	Params::BaseTween_JoinTweenMoveSceneComponentBy Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.JoinTweenMoveSceneComponentTo
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenSpace                             TweenSpace                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector* UBaseTween::JoinTweenMoveSceneComponentTo(class USceneComponent*& TweenTarget, const struct FVector& To, float Duration, ETweenEaseType EaseType, ETweenSpace TweenSpace, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "JoinTweenMoveSceneComponentTo");

	Params::BaseTween_JoinTweenMoveSceneComponentTo Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.TweenSpace = TweenSpace;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.JoinTweenMoveWidgetBy
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UWidget*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2D*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector2D* UBaseTween::JoinTweenMoveWidgetBy(class UWidget*& TweenTarget, const struct FVector2D& bY, float Duration, ETweenEaseType EaseType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "JoinTweenMoveWidgetBy");

	Params::BaseTween_JoinTweenMoveWidgetBy Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.JoinTweenMoveWidgetTo
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UWidget*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2D*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector2D* UBaseTween::JoinTweenMoveWidgetTo(class UWidget*& TweenTarget, const struct FVector2D& To, float Duration, ETweenEaseType EaseType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "JoinTweenMoveWidgetTo");

	Params::BaseTween_JoinTweenMoveWidgetTo Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.JoinTweenRotateActorAroundPoint
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          PivotPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartingAngle                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   EndingAngle                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Axis                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloat* UBaseTween::JoinTweenRotateActorAroundPoint(class AActor*& TweenTarget, const struct FVector& PivotPoint, float StartingAngle, float EndingAngle, float Radius, const struct FVector& Axis, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "JoinTweenRotateActorAroundPoint");

	Params::BaseTween_JoinTweenRotateActorAroundPoint Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.PivotPoint = std::move(PivotPoint);
	Parms.StartingAngle = StartingAngle;
	Parms.EndingAngle = EndingAngle;
	Parms.Radius = Radius;
	Parms.Axis = std::move(Axis);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.JoinTweenRotateActorAroundPointByOffset
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          PivotPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OffsetAngle                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenReferenceAxis                     ReferenceAxis                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloat* UBaseTween::JoinTweenRotateActorAroundPointByOffset(class AActor*& TweenTarget, const struct FVector& PivotPoint, float OffsetAngle, ETweenReferenceAxis ReferenceAxis, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "JoinTweenRotateActorAroundPointByOffset");

	Params::BaseTween_JoinTweenRotateActorAroundPointByOffset Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.PivotPoint = std::move(PivotPoint);
	Parms.OffsetAngle = OffsetAngle;
	Parms.ReferenceAxis = ReferenceAxis;
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.JoinTweenRotateActorBy
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenRotator*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenRotator* UBaseTween::JoinTweenRotateActorBy(class AActor*& TweenTarget, const struct FRotator& bY, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "JoinTweenRotateActorBy");

	Params::BaseTween_JoinTweenRotateActorBy Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.JoinTweenRotateActorTo
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenSpace                             TweenSpace                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenRotationMode                      RotationMode                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenRotator*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenRotator* UBaseTween::JoinTweenRotateActorTo(class AActor*& TweenTarget, const struct FRotator& To, float Duration, ETweenEaseType EaseType, ETweenSpace TweenSpace, ETweenRotationMode RotationMode, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "JoinTweenRotateActorTo");

	Params::BaseTween_JoinTweenRotateActorTo Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.TweenSpace = TweenSpace;
	Parms.RotationMode = RotationMode;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.JoinTweenRotateSceneComponentAroundPoint
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          PivotPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartingAngle                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   EndingAngle                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Axis                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloat* UBaseTween::JoinTweenRotateSceneComponentAroundPoint(class USceneComponent*& TweenTarget, const struct FVector& PivotPoint, float StartingAngle, float EndingAngle, float Radius, const struct FVector& Axis, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "JoinTweenRotateSceneComponentAroundPoint");

	Params::BaseTween_JoinTweenRotateSceneComponentAroundPoint Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.PivotPoint = std::move(PivotPoint);
	Parms.StartingAngle = StartingAngle;
	Parms.EndingAngle = EndingAngle;
	Parms.Radius = Radius;
	Parms.Axis = std::move(Axis);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.JoinTweenRotateSceneComponentAroundPointByOffset
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          PivotPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OffsetAngle                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenReferenceAxis                     ReferenceAxis                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloat* UBaseTween::JoinTweenRotateSceneComponentAroundPointByOffset(class USceneComponent*& TweenTarget, const struct FVector& PivotPoint, float OffsetAngle, ETweenReferenceAxis ReferenceAxis, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "JoinTweenRotateSceneComponentAroundPointByOffset");

	Params::BaseTween_JoinTweenRotateSceneComponentAroundPointByOffset Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.PivotPoint = std::move(PivotPoint);
	Parms.OffsetAngle = OffsetAngle;
	Parms.ReferenceAxis = ReferenceAxis;
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.JoinTweenRotateSceneComponentBy
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenRotator*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenRotator* UBaseTween::JoinTweenRotateSceneComponentBy(class USceneComponent*& TweenTarget, const struct FRotator& bY, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "JoinTweenRotateSceneComponentBy");

	Params::BaseTween_JoinTweenRotateSceneComponentBy Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.JoinTweenRotateSceneComponentTo
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenSpace                             TweenSpace                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenRotationMode                      RotationMode                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenRotator*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenRotator* UBaseTween::JoinTweenRotateSceneComponentTo(class USceneComponent*& TweenTarget, const struct FRotator& To, float Duration, ETweenEaseType EaseType, ETweenSpace TweenSpace, ETweenRotationMode RotationMode, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "JoinTweenRotateSceneComponentTo");

	Params::BaseTween_JoinTweenRotateSceneComponentTo Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.TweenSpace = TweenSpace;
	Parms.RotationMode = RotationMode;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.JoinTweenScaleActorBy
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector* UBaseTween::JoinTweenScaleActorBy(class AActor*& TweenTarget, const struct FVector& bY, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "JoinTweenScaleActorBy");

	Params::BaseTween_JoinTweenScaleActorBy Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.JoinTweenScaleActorTo
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenSpace                             TweenSpace                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector* UBaseTween::JoinTweenScaleActorTo(class AActor*& TweenTarget, const struct FVector& To, float Duration, ETweenEaseType EaseType, ETweenSpace TweenSpace, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "JoinTweenScaleActorTo");

	Params::BaseTween_JoinTweenScaleActorTo Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.TweenSpace = TweenSpace;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.JoinTweenScaleSceneComponentBy
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector* UBaseTween::JoinTweenScaleSceneComponentBy(class USceneComponent*& TweenTarget, const struct FVector& bY, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "JoinTweenScaleSceneComponentBy");

	Params::BaseTween_JoinTweenScaleSceneComponentBy Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.JoinTweenScaleSceneComponentTo
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenSpace                             TweenSpace                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector* UBaseTween::JoinTweenScaleSceneComponentTo(class USceneComponent*& TweenTarget, const struct FVector& To, float Duration, ETweenEaseType EaseType, ETweenSpace TweenSpace, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "JoinTweenScaleSceneComponentTo");

	Params::BaseTween_JoinTweenScaleSceneComponentTo Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.TweenSpace = TweenSpace;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.JoinTweenScaleWidgetBy
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UWidget*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2D*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector2D* UBaseTween::JoinTweenScaleWidgetBy(class UWidget*& TweenTarget, const struct FVector2D& bY, float Duration, ETweenEaseType EaseType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "JoinTweenScaleWidgetBy");

	Params::BaseTween_JoinTweenScaleWidgetBy Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.JoinTweenScaleWidgetTo
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UWidget*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2D*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector2D* UBaseTween::JoinTweenScaleWidgetTo(class UWidget*& TweenTarget, const struct FVector2D& To, float Duration, ETweenEaseType EaseType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "JoinTweenScaleWidgetTo");

	Params::BaseTween_JoinTweenScaleWidgetTo Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.JoinTweenSceneComponentFollowSpline
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USplineComponent*                 Spline                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ApplyRotation                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ApplyScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    UseConstantSpeed                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloat* UBaseTween::JoinTweenSceneComponentFollowSpline(class USceneComponent*& TweenTarget, class USplineComponent* Spline, float Duration, bool ApplyRotation, bool ApplyScale, bool UseConstantSpeed, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "JoinTweenSceneComponentFollowSpline");

	Params::BaseTween_JoinTweenSceneComponentFollowSpline Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.Spline = Spline;
	Parms.Duration = Duration;
	Parms.ApplyRotation = ApplyRotation;
	Parms.ApplyScale = ApplyScale;
	Parms.UseConstantSpeed = UseConstantSpeed;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.JoinTweenShearWidgetTo
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UWidget*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2D*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector2D* UBaseTween::JoinTweenShearWidgetTo(class UWidget*& TweenTarget, const struct FVector2D& bY, float Duration, ETweenEaseType EaseType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "JoinTweenShearWidgetTo");

	Params::BaseTween_JoinTweenShearWidgetTo Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.JoinTweenWidgetAngleTo
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UWidget*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloat* UBaseTween::JoinTweenWidgetAngleTo(class UWidget*& TweenTarget, float To, float Duration, ETweenEaseType EaseType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "JoinTweenWidgetAngleTo");

	Params::BaseTween_JoinTweenWidgetAngleTo Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.To = To;
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.JoinTweenWidgetOpacityTo
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UWidget*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloat* UBaseTween::JoinTweenWidgetOpacityTo(class UWidget*& TweenTarget, float To, float Duration, ETweenEaseType EaseType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "JoinTweenWidgetOpacityTo");

	Params::BaseTween_JoinTweenWidgetOpacityTo Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.To = To;
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.PauseTween
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    SkipTween                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBaseTween::PauseTween(bool SkipTween)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "PauseTween");

	Params::BaseTween_PauseTween Parms{};

	Parms.SkipTween = SkipTween;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TweenMaker.BaseTween.RestartTween
// (Final, Native, Public, BlueprintCallable)

void UBaseTween::RestartTween()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "RestartTween");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TweenMaker.BaseTween.ResumeTween
// (Final, Native, Public, BlueprintCallable)

void UBaseTween::ResumeTween()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "ResumeTween");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TweenMaker.BaseTween.SetCustomEasisng
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UCurveFloat*                      Curve                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBaseTween::SetCustomEasisng(class UCurveFloat* Curve)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "SetCustomEasisng");

	Params::BaseTween_SetCustomEasisng Parms{};

	Parms.Curve = Curve;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TweenMaker.BaseTween.SetDelay
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewDelay                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBaseTween::SetDelay(float NewDelay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "SetDelay");

	Params::BaseTween_SetDelay Parms{};

	Parms.NewDelay = NewDelay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TweenMaker.BaseTween.SetTimeScale
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewTimeScale                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBaseTween::SetTimeScale(float NewTimeScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "SetTimeScale");

	Params::BaseTween_SetTimeScale Parms{};

	Parms.NewTimeScale = NewTimeScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TweenMaker.BaseTween.SetTweenName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             TweenName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBaseTween::SetTweenName(class FName TweenName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "SetTweenName");

	Params::BaseTween_SetTweenName Parms{};

	Parms.TweenName = TweenName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TweenMaker.BaseTween.TogglePauseTween
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    SkipTween                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBaseTween::TogglePauseTween(bool SkipTween)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "TogglePauseTween");

	Params::BaseTween_TogglePauseTween Parms{};

	Parms.SkipTween = SkipTween;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TweenMaker.BaseTween.GetTimeScale
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBaseTween::GetTimeScale() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "GetTimeScale");

	Params::BaseTween_GetTimeScale Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.GetTweenContainer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTweenContainer*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenContainer* UBaseTween::GetTweenContainer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "GetTweenContainer");

	Params::BaseTween_GetTweenContainer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.GetTweenDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBaseTween::GetTweenDuration() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "GetTweenDuration");

	Params::BaseTween_GetTweenDuration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.GetTweenElapsedTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBaseTween::GetTweenElapsedTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "GetTweenElapsedTime");

	Params::BaseTween_GetTweenElapsedTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.GetTweenName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UBaseTween::GetTweenName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "GetTweenName");

	Params::BaseTween_GetTweenName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.GetTweenTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UBaseTween::GetTweenTarget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "GetTweenTarget");

	Params::BaseTween_GetTweenTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.IsTweening
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBaseTween::IsTweening() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "IsTweening");

	Params::BaseTween_IsTweening Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TweenMaker.BaseTween.IsTweenPaused
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBaseTween::IsTweenPaused() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseTween", "IsTweenPaused");

	Params::BaseTween_IsTweenPaused Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenContainer.DeleteTweenContainer
// (Final, Native, Public, BlueprintCallable)

void UTweenContainer::DeleteTweenContainer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TweenContainer", "DeleteTweenContainer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TweenMaker.TweenContainer.DeleteTweensInContainerByObject
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenGenericType                       TweensType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTweenContainer::DeleteTweensInContainerByObject(class UObject*& TweenTarget, ETweenGenericType TweensType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TweenContainer", "DeleteTweensInContainerByObject");

	Params::TweenContainer_DeleteTweensInContainerByObject Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.TweensType = TweensType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;
}


// Function TweenMaker.TweenContainer.PauseTweenContainer
// (Final, Native, Public, BlueprintCallable)

void UTweenContainer::PauseTweenContainer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TweenContainer", "PauseTweenContainer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TweenMaker.TweenContainer.RestartTweenContainer
// (Final, Native, Public, BlueprintCallable)

void UTweenContainer::RestartTweenContainer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TweenContainer", "RestartTweenContainer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TweenMaker.TweenContainer.ResumeTweenContainer
// (Final, Native, Public, BlueprintCallable)

void UTweenContainer::ResumeTweenContainer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TweenContainer", "ResumeTweenContainer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TweenMaker.TweenContainer.SetLoop
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTweenContainer::SetLoop(int32 NumLoops, ETweenLoopType LoopType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TweenContainer", "SetLoop");

	Params::TweenContainer_SetLoop Parms{};

	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TweenMaker.TweenContainer.SetPersistent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Persistent                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTweenContainer::SetPersistent(bool Persistent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TweenContainer", "SetPersistent");

	Params::TweenContainer_SetPersistent Parms{};

	Parms.Persistent = Persistent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TweenMaker.TweenContainer.SetTimeScale
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewTimeScale                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTweenContainer::SetTimeScale(float NewTimeScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TweenContainer", "SetTimeScale");

	Params::TweenContainer_SetTimeScale Parms{};

	Parms.NewTimeScale = NewTimeScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TweenMaker.TweenContainer.TogglePauseTweenContainer
// (Final, Native, Public, BlueprintCallable)

void UTweenContainer::TogglePauseTweenContainer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TweenContainer", "TogglePauseTweenContainer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TweenMaker.TweenContainer.HasEnded
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTweenContainer::HasEnded() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TweenContainer", "HasEnded");

	Params::TweenContainer_HasEnded Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenContainer.IsObjectTweeningInContainer
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenGenericType                       TweensType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBaseTween*                       TweenFound                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTweenContainer::IsObjectTweeningInContainer(class UObject*& TweenTarget, ETweenGenericType TweensType, class UBaseTween** TweenFound) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TweenContainer", "IsObjectTweeningInContainer");

	Params::TweenContainer_IsObjectTweeningInContainer Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.TweensType = TweensType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	if (TweenFound != nullptr)
		*TweenFound = Parms.TweenFound;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenContainer.IsPaused
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTweenContainer::IsPaused() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TweenContainer", "IsPaused");

	Params::TweenContainer_IsPaused Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenFloat.OnActorBeginOverlap
// (Final, Native, Private)
// Parameters:
// class AActor*                           PThisActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           POtherActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTweenFloat::OnActorBeginOverlap(class AActor* PThisActor, class AActor* POtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TweenFloat", "OnActorBeginOverlap");

	Params::TweenFloat_OnActorBeginOverlap Parms{};

	Parms.PThisActor = PThisActor;
	Parms.POtherActor = POtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TweenMaker.TweenFloat.OnActorHit
// (Final, Native, Private, HasOutParams, HasDefaults)
// Parameters:
// class AActor*                           PThisActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           POtherActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          PNormalImpulse                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       PHit                                                   (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UTweenFloat::OnActorHit(class AActor* PThisActor, class AActor* POtherActor, const struct FVector& PNormalImpulse, const struct FHitResult& PHit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TweenFloat", "OnActorHit");

	Params::TweenFloat_OnActorHit Parms{};

	Parms.PThisActor = PThisActor;
	Parms.POtherActor = POtherActor;
	Parms.PNormalImpulse = std::move(PNormalImpulse);
	Parms.PHit = std::move(PHit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TweenMaker.TweenFloat.OnPrimitiveComponentBeginOverlap
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              PThisComponent                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           POtherActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              POtherComp                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   POtherBodyIndex                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFromSweep                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       PSweepResult                                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UTweenFloat::OnPrimitiveComponentBeginOverlap(class UPrimitiveComponent* PThisComponent, class AActor* POtherActor, class UPrimitiveComponent* POtherComp, int32 POtherBodyIndex, bool bFromSweep, const struct FHitResult& PSweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TweenFloat", "OnPrimitiveComponentBeginOverlap");

	Params::TweenFloat_OnPrimitiveComponentBeginOverlap Parms{};

	Parms.PThisComponent = PThisComponent;
	Parms.POtherActor = POtherActor;
	Parms.POtherComp = POtherComp;
	Parms.POtherBodyIndex = POtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.PSweepResult = std::move(PSweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TweenMaker.TweenFloat.OnPrimitiveComponentHit
// (Final, Native, Private, HasOutParams, HasDefaults)
// Parameters:
// class UPrimitiveComponent*              PThisComponent                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           POtherActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              POtherComp                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          PNormalImpulse                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       PHitResult                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UTweenFloat::OnPrimitiveComponentHit(class UPrimitiveComponent* PThisComponent, class AActor* POtherActor, class UPrimitiveComponent* POtherComp, const struct FVector& PNormalImpulse, const struct FHitResult& PHitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TweenFloat", "OnPrimitiveComponentHit");

	Params::TweenFloat_OnPrimitiveComponentHit Parms{};

	Parms.PThisComponent = PThisComponent;
	Parms.POtherActor = POtherActor;
	Parms.POtherComp = POtherComp;
	Parms.PNormalImpulse = std::move(PNormalImpulse);
	Parms.PHitResult = std::move(PHitResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TweenMaker.TweenFloat.GetCurrentValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTweenFloat::GetCurrentValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TweenFloat", "GetCurrentValue");

	Params::TweenFloat_GetCurrentValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenFloatLatentFactory.BP_AppendLatentTweenActorFollowSpline
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USplineComponent*                 Spline                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ApplyRotation                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ApplyScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    UseConstantSpeed                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloatLatentFactory*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloatLatentFactory* UTweenFloatLatentFactory::BP_AppendLatentTweenActorFollowSpline(class UTweenContainer*& TweenContainer, class UTweenFloat*& OutTween, class AActor*& TweenTarget, class USplineComponent* Spline, float Duration, bool ApplyRotation, bool ApplyScale, bool UseConstantSpeed, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatLatentFactory", "BP_AppendLatentTweenActorFollowSpline");

	Params::TweenFloatLatentFactory_BP_AppendLatentTweenActorFollowSpline Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.OutTween = OutTween;
	Parms.TweenTarget = TweenTarget;
	Parms.Spline = Spline;
	Parms.Duration = Duration;
	Parms.ApplyRotation = ApplyRotation;
	Parms.ApplyScale = ApplyScale;
	Parms.UseConstantSpeed = UseConstantSpeed;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	OutTween = Parms.OutTween;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenFloatLatentFactory.BP_AppendLatentTweenCustomFloat
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   From                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloatLatentFactory*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloatLatentFactory* UTweenFloatLatentFactory::BP_AppendLatentTweenCustomFloat(class UTweenContainer*& TweenContainer, class UTweenFloat*& OutTween, class UObject*& TweenTarget, float From, float To, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatLatentFactory", "BP_AppendLatentTweenCustomFloat");

	Params::TweenFloatLatentFactory_BP_AppendLatentTweenCustomFloat Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.OutTween = OutTween;
	Parms.TweenTarget = TweenTarget;
	Parms.From = From;
	Parms.To = To;
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	OutTween = Parms.OutTween;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenFloatLatentFactory.BP_AppendLatentTweenMaterialFloatFromTo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInstanceDynamic*         TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   From                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloatLatentFactory*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloatLatentFactory* UTweenFloatLatentFactory::BP_AppendLatentTweenMaterialFloatFromTo(class UTweenContainer*& TweenContainer, class UTweenFloat*& OutTween, class UMaterialInstanceDynamic*& TweenTarget, class FName ParameterName, float From, float To, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatLatentFactory", "BP_AppendLatentTweenMaterialFloatFromTo");

	Params::TweenFloatLatentFactory_BP_AppendLatentTweenMaterialFloatFromTo Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.OutTween = OutTween;
	Parms.TweenTarget = TweenTarget;
	Parms.ParameterName = ParameterName;
	Parms.From = From;
	Parms.To = To;
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	OutTween = Parms.OutTween;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenFloatLatentFactory.BP_AppendLatentTweenMaterialFloatTo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInstanceDynamic*         TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloatLatentFactory*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloatLatentFactory* UTweenFloatLatentFactory::BP_AppendLatentTweenMaterialFloatTo(class UTweenContainer*& TweenContainer, class UTweenFloat*& OutTween, class UMaterialInstanceDynamic*& TweenTarget, class FName ParameterName, float To, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatLatentFactory", "BP_AppendLatentTweenMaterialFloatTo");

	Params::TweenFloatLatentFactory_BP_AppendLatentTweenMaterialFloatTo Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.OutTween = OutTween;
	Parms.TweenTarget = TweenTarget;
	Parms.ParameterName = ParameterName;
	Parms.To = To;
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	OutTween = Parms.OutTween;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenFloatLatentFactory.BP_AppendLatentTweenRotateActorAroundPoint
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          PivotPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartingAngle                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   EndingAngle                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Axis                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloatLatentFactory*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloatLatentFactory* UTweenFloatLatentFactory::BP_AppendLatentTweenRotateActorAroundPoint(class UTweenContainer*& TweenContainer, class UTweenFloat*& OutTween, class AActor*& TweenTarget, const struct FVector& PivotPoint, float StartingAngle, float EndingAngle, float Radius, const struct FVector& Axis, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatLatentFactory", "BP_AppendLatentTweenRotateActorAroundPoint");

	Params::TweenFloatLatentFactory_BP_AppendLatentTweenRotateActorAroundPoint Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.OutTween = OutTween;
	Parms.TweenTarget = TweenTarget;
	Parms.PivotPoint = std::move(PivotPoint);
	Parms.StartingAngle = StartingAngle;
	Parms.EndingAngle = EndingAngle;
	Parms.Radius = Radius;
	Parms.Axis = std::move(Axis);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	OutTween = Parms.OutTween;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenFloatLatentFactory.BP_AppendLatentTweenRotateActorAroundPointByOffset
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          PivotPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OffsetAngle                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenReferenceAxis                     ReferenceAxis                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloatLatentFactory*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloatLatentFactory* UTweenFloatLatentFactory::BP_AppendLatentTweenRotateActorAroundPointByOffset(class UTweenContainer*& TweenContainer, class UTweenFloat*& OutTween, class AActor*& TweenTarget, const struct FVector& PivotPoint, float OffsetAngle, ETweenReferenceAxis ReferenceAxis, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatLatentFactory", "BP_AppendLatentTweenRotateActorAroundPointByOffset");

	Params::TweenFloatLatentFactory_BP_AppendLatentTweenRotateActorAroundPointByOffset Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.OutTween = OutTween;
	Parms.TweenTarget = TweenTarget;
	Parms.PivotPoint = std::move(PivotPoint);
	Parms.OffsetAngle = OffsetAngle;
	Parms.ReferenceAxis = ReferenceAxis;
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	OutTween = Parms.OutTween;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenFloatLatentFactory.BP_AppendLatentTweenRotateSceneComponentAroundPoint
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          PivotPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartingAngle                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   EndingAngle                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Axis                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloatLatentFactory*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloatLatentFactory* UTweenFloatLatentFactory::BP_AppendLatentTweenRotateSceneComponentAroundPoint(class UTweenContainer*& TweenContainer, class UTweenFloat*& OutTween, class USceneComponent*& TweenTarget, const struct FVector& PivotPoint, float StartingAngle, float EndingAngle, float Radius, const struct FVector& Axis, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatLatentFactory", "BP_AppendLatentTweenRotateSceneComponentAroundPoint");

	Params::TweenFloatLatentFactory_BP_AppendLatentTweenRotateSceneComponentAroundPoint Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.OutTween = OutTween;
	Parms.TweenTarget = TweenTarget;
	Parms.PivotPoint = std::move(PivotPoint);
	Parms.StartingAngle = StartingAngle;
	Parms.EndingAngle = EndingAngle;
	Parms.Radius = Radius;
	Parms.Axis = std::move(Axis);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	OutTween = Parms.OutTween;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenFloatLatentFactory.BP_AppendLatentTweenRotateSceneComponentAroundPointByOffset
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          PivotPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OffsetAngle                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenReferenceAxis                     ReferenceAxis                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloatLatentFactory*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloatLatentFactory* UTweenFloatLatentFactory::BP_AppendLatentTweenRotateSceneComponentAroundPointByOffset(class UTweenContainer*& TweenContainer, class UTweenFloat*& OutTween, class USceneComponent*& TweenTarget, const struct FVector& PivotPoint, float OffsetAngle, ETweenReferenceAxis ReferenceAxis, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatLatentFactory", "BP_AppendLatentTweenRotateSceneComponentAroundPointByOffset");

	Params::TweenFloatLatentFactory_BP_AppendLatentTweenRotateSceneComponentAroundPointByOffset Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.OutTween = OutTween;
	Parms.TweenTarget = TweenTarget;
	Parms.PivotPoint = std::move(PivotPoint);
	Parms.OffsetAngle = OffsetAngle;
	Parms.ReferenceAxis = ReferenceAxis;
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	OutTween = Parms.OutTween;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenFloatLatentFactory.BP_AppendLatentTweenSceneComponentFollowSpline
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USplineComponent*                 Spline                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ApplyRotation                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ApplyScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    UseConstantSpeed                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloatLatentFactory*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloatLatentFactory* UTweenFloatLatentFactory::BP_AppendLatentTweenSceneComponentFollowSpline(class UTweenContainer*& TweenContainer, class UTweenFloat*& OutTween, class USceneComponent*& TweenTarget, class USplineComponent* Spline, float Duration, bool ApplyRotation, bool ApplyScale, bool UseConstantSpeed, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatLatentFactory", "BP_AppendLatentTweenSceneComponentFollowSpline");

	Params::TweenFloatLatentFactory_BP_AppendLatentTweenSceneComponentFollowSpline Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.OutTween = OutTween;
	Parms.TweenTarget = TweenTarget;
	Parms.Spline = Spline;
	Parms.Duration = Duration;
	Parms.ApplyRotation = ApplyRotation;
	Parms.ApplyScale = ApplyScale;
	Parms.UseConstantSpeed = UseConstantSpeed;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	OutTween = Parms.OutTween;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenFloatLatentFactory.BP_AppendLatentTweenWidgetAngleTo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloatLatentFactory*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloatLatentFactory* UTweenFloatLatentFactory::BP_AppendLatentTweenWidgetAngleTo(class UTweenContainer*& TweenContainer, class UTweenFloat*& OutTween, class UWidget*& TweenTarget, float To, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatLatentFactory", "BP_AppendLatentTweenWidgetAngleTo");

	Params::TweenFloatLatentFactory_BP_AppendLatentTweenWidgetAngleTo Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.OutTween = OutTween;
	Parms.TweenTarget = TweenTarget;
	Parms.To = To;
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	OutTween = Parms.OutTween;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenFloatLatentFactory.BP_AppendLatentTweenWidgetOpacityTo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloatLatentFactory*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloatLatentFactory* UTweenFloatLatentFactory::BP_AppendLatentTweenWidgetOpacityTo(class UTweenContainer*& TweenContainer, class UTweenFloat*& OutTween, class UWidget*& TweenTarget, float To, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatLatentFactory", "BP_AppendLatentTweenWidgetOpacityTo");

	Params::TweenFloatLatentFactory_BP_AppendLatentTweenWidgetOpacityTo Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.OutTween = OutTween;
	Parms.TweenTarget = TweenTarget;
	Parms.To = To;
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	OutTween = Parms.OutTween;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenFloatLatentFactory.BP_CreateLatentTweenActorFollowSpline
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UTweenManagerComponent*           TweenManager                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenContainer*                  OutTweenContainer                                      (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USplineComponent*                 Spline                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ApplyRotation                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ApplyScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    UseConstantSpeed                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloatLatentFactory*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloatLatentFactory* UTweenFloatLatentFactory::BP_CreateLatentTweenActorFollowSpline(class UTweenManagerComponent* TweenManager, class AActor*& TweenTarget, class UTweenContainer*& OutTweenContainer, class UTweenFloat*& OutTween, class USplineComponent* Spline, float Duration, bool ApplyRotation, bool ApplyScale, bool UseConstantSpeed, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatLatentFactory", "BP_CreateLatentTweenActorFollowSpline");

	Params::TweenFloatLatentFactory_BP_CreateLatentTweenActorFollowSpline Parms{};

	Parms.TweenManager = TweenManager;
	Parms.TweenTarget = TweenTarget;
	Parms.OutTweenContainer = OutTweenContainer;
	Parms.OutTween = OutTween;
	Parms.Spline = Spline;
	Parms.Duration = Duration;
	Parms.ApplyRotation = ApplyRotation;
	Parms.ApplyScale = ApplyScale;
	Parms.UseConstantSpeed = UseConstantSpeed;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;
	OutTweenContainer = Parms.OutTweenContainer;
	OutTween = Parms.OutTween;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenFloatLatentFactory.BP_CreateLatentTweenCustomFloat
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UTweenManagerComponent*           TweenManager                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenContainer*                  OutTweenContainer                                      (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   From                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloatLatentFactory*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloatLatentFactory* UTweenFloatLatentFactory::BP_CreateLatentTweenCustomFloat(class UTweenManagerComponent* TweenManager, class UObject*& TweenTarget, class UTweenContainer*& OutTweenContainer, class UTweenFloat*& OutTween, float From, float To, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatLatentFactory", "BP_CreateLatentTweenCustomFloat");

	Params::TweenFloatLatentFactory_BP_CreateLatentTweenCustomFloat Parms{};

	Parms.TweenManager = TweenManager;
	Parms.TweenTarget = TweenTarget;
	Parms.OutTweenContainer = OutTweenContainer;
	Parms.OutTween = OutTween;
	Parms.From = From;
	Parms.To = To;
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;
	OutTweenContainer = Parms.OutTweenContainer;
	OutTween = Parms.OutTween;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenFloatLatentFactory.BP_CreateLatentTweenMaterialFloatFromTo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UTweenManagerComponent*           TweenManager                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInstanceDynamic*         TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenContainer*                  OutTweenContainer                                      (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   From                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloatLatentFactory*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloatLatentFactory* UTweenFloatLatentFactory::BP_CreateLatentTweenMaterialFloatFromTo(class UTweenManagerComponent* TweenManager, class UMaterialInstanceDynamic*& TweenTarget, class UTweenContainer*& OutTweenContainer, class UTweenFloat*& OutTween, class FName ParameterName, float From, float To, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatLatentFactory", "BP_CreateLatentTweenMaterialFloatFromTo");

	Params::TweenFloatLatentFactory_BP_CreateLatentTweenMaterialFloatFromTo Parms{};

	Parms.TweenManager = TweenManager;
	Parms.TweenTarget = TweenTarget;
	Parms.OutTweenContainer = OutTweenContainer;
	Parms.OutTween = OutTween;
	Parms.ParameterName = ParameterName;
	Parms.From = From;
	Parms.To = To;
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;
	OutTweenContainer = Parms.OutTweenContainer;
	OutTween = Parms.OutTween;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenFloatLatentFactory.BP_CreateLatentTweenMaterialFloatTo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UTweenManagerComponent*           TweenManager                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInstanceDynamic*         TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenContainer*                  OutTweenContainer                                      (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloatLatentFactory*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloatLatentFactory* UTweenFloatLatentFactory::BP_CreateLatentTweenMaterialFloatTo(class UTweenManagerComponent* TweenManager, class UMaterialInstanceDynamic*& TweenTarget, class UTweenContainer*& OutTweenContainer, class UTweenFloat*& OutTween, class FName ParameterName, float To, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatLatentFactory", "BP_CreateLatentTweenMaterialFloatTo");

	Params::TweenFloatLatentFactory_BP_CreateLatentTweenMaterialFloatTo Parms{};

	Parms.TweenManager = TweenManager;
	Parms.TweenTarget = TweenTarget;
	Parms.OutTweenContainer = OutTweenContainer;
	Parms.OutTween = OutTween;
	Parms.ParameterName = ParameterName;
	Parms.To = To;
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;
	OutTweenContainer = Parms.OutTweenContainer;
	OutTween = Parms.OutTween;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenFloatLatentFactory.BP_CreateLatentTweenRotateActorAroundPoint
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenManagerComponent*           TweenManager                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenContainer*                  OutTweenContainer                                      (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          PivotPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartingAngle                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   EndingAngle                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Axis                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloatLatentFactory*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloatLatentFactory* UTweenFloatLatentFactory::BP_CreateLatentTweenRotateActorAroundPoint(class UTweenManagerComponent* TweenManager, class AActor*& TweenTarget, class UTweenContainer*& OutTweenContainer, class UTweenFloat*& OutTween, const struct FVector& PivotPoint, float StartingAngle, float EndingAngle, float Radius, const struct FVector& Axis, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatLatentFactory", "BP_CreateLatentTweenRotateActorAroundPoint");

	Params::TweenFloatLatentFactory_BP_CreateLatentTweenRotateActorAroundPoint Parms{};

	Parms.TweenManager = TweenManager;
	Parms.TweenTarget = TweenTarget;
	Parms.OutTweenContainer = OutTweenContainer;
	Parms.OutTween = OutTween;
	Parms.PivotPoint = std::move(PivotPoint);
	Parms.StartingAngle = StartingAngle;
	Parms.EndingAngle = EndingAngle;
	Parms.Radius = Radius;
	Parms.Axis = std::move(Axis);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;
	OutTweenContainer = Parms.OutTweenContainer;
	OutTween = Parms.OutTween;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenFloatLatentFactory.BP_CreateLatentTweenRotateActorAroundPointByOffset
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenManagerComponent*           TweenManager                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenContainer*                  OutTweenContainer                                      (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          PivotPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OffsetAngle                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenReferenceAxis                     ReferenceAxis                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloatLatentFactory*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloatLatentFactory* UTweenFloatLatentFactory::BP_CreateLatentTweenRotateActorAroundPointByOffset(class UTweenManagerComponent* TweenManager, class AActor*& TweenTarget, class UTweenContainer*& OutTweenContainer, class UTweenFloat*& OutTween, const struct FVector& PivotPoint, float OffsetAngle, ETweenReferenceAxis ReferenceAxis, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatLatentFactory", "BP_CreateLatentTweenRotateActorAroundPointByOffset");

	Params::TweenFloatLatentFactory_BP_CreateLatentTweenRotateActorAroundPointByOffset Parms{};

	Parms.TweenManager = TweenManager;
	Parms.TweenTarget = TweenTarget;
	Parms.OutTweenContainer = OutTweenContainer;
	Parms.OutTween = OutTween;
	Parms.PivotPoint = std::move(PivotPoint);
	Parms.OffsetAngle = OffsetAngle;
	Parms.ReferenceAxis = ReferenceAxis;
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;
	OutTweenContainer = Parms.OutTweenContainer;
	OutTween = Parms.OutTween;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenFloatLatentFactory.BP_CreateLatentTweenRotateSceneComponentAroundPoint
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenManagerComponent*           TweenManager                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenContainer*                  OutTweenContainer                                      (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          PivotPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartingAngle                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   EndingAngle                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Axis                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloatLatentFactory*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloatLatentFactory* UTweenFloatLatentFactory::BP_CreateLatentTweenRotateSceneComponentAroundPoint(class UTweenManagerComponent* TweenManager, class USceneComponent*& TweenTarget, class UTweenContainer*& OutTweenContainer, class UTweenFloat*& OutTween, const struct FVector& PivotPoint, float StartingAngle, float EndingAngle, float Radius, const struct FVector& Axis, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatLatentFactory", "BP_CreateLatentTweenRotateSceneComponentAroundPoint");

	Params::TweenFloatLatentFactory_BP_CreateLatentTweenRotateSceneComponentAroundPoint Parms{};

	Parms.TweenManager = TweenManager;
	Parms.TweenTarget = TweenTarget;
	Parms.OutTweenContainer = OutTweenContainer;
	Parms.OutTween = OutTween;
	Parms.PivotPoint = std::move(PivotPoint);
	Parms.StartingAngle = StartingAngle;
	Parms.EndingAngle = EndingAngle;
	Parms.Radius = Radius;
	Parms.Axis = std::move(Axis);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;
	OutTweenContainer = Parms.OutTweenContainer;
	OutTween = Parms.OutTween;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenFloatLatentFactory.BP_CreateLatentTweenRotateSceneComponentAroundPointByOffset
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenManagerComponent*           TweenManager                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenContainer*                  OutTweenContainer                                      (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          PivotPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OffsetAngle                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenReferenceAxis                     ReferenceAxis                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloatLatentFactory*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloatLatentFactory* UTweenFloatLatentFactory::BP_CreateLatentTweenRotateSceneComponentAroundPointByOffset(class UTweenManagerComponent* TweenManager, class USceneComponent*& TweenTarget, class UTweenContainer*& OutTweenContainer, class UTweenFloat*& OutTween, const struct FVector& PivotPoint, float OffsetAngle, ETweenReferenceAxis ReferenceAxis, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatLatentFactory", "BP_CreateLatentTweenRotateSceneComponentAroundPointByOffset");

	Params::TweenFloatLatentFactory_BP_CreateLatentTweenRotateSceneComponentAroundPointByOffset Parms{};

	Parms.TweenManager = TweenManager;
	Parms.TweenTarget = TweenTarget;
	Parms.OutTweenContainer = OutTweenContainer;
	Parms.OutTween = OutTween;
	Parms.PivotPoint = std::move(PivotPoint);
	Parms.OffsetAngle = OffsetAngle;
	Parms.ReferenceAxis = ReferenceAxis;
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;
	OutTweenContainer = Parms.OutTweenContainer;
	OutTween = Parms.OutTween;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenFloatLatentFactory.BP_CreateLatentTweenSceneComponentFollowSpline
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UTweenManagerComponent*           TweenManager                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenContainer*                  OutTweenContainer                                      (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USplineComponent*                 Spline                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ApplyRotation                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ApplyScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    UseConstantSpeed                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloatLatentFactory*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloatLatentFactory* UTweenFloatLatentFactory::BP_CreateLatentTweenSceneComponentFollowSpline(class UTweenManagerComponent* TweenManager, class USceneComponent*& TweenTarget, class UTweenContainer*& OutTweenContainer, class UTweenFloat*& OutTween, class USplineComponent* Spline, float Duration, bool ApplyRotation, bool ApplyScale, bool UseConstantSpeed, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatLatentFactory", "BP_CreateLatentTweenSceneComponentFollowSpline");

	Params::TweenFloatLatentFactory_BP_CreateLatentTweenSceneComponentFollowSpline Parms{};

	Parms.TweenManager = TweenManager;
	Parms.TweenTarget = TweenTarget;
	Parms.OutTweenContainer = OutTweenContainer;
	Parms.OutTween = OutTween;
	Parms.Spline = Spline;
	Parms.Duration = Duration;
	Parms.ApplyRotation = ApplyRotation;
	Parms.ApplyScale = ApplyScale;
	Parms.UseConstantSpeed = UseConstantSpeed;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;
	OutTweenContainer = Parms.OutTweenContainer;
	OutTween = Parms.OutTween;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenFloatLatentFactory.BP_CreateLatentTweenWidgetAngleTo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UTweenManagerComponent*           TweenManager                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenContainer*                  OutTweenContainer                                      (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloatLatentFactory*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloatLatentFactory* UTweenFloatLatentFactory::BP_CreateLatentTweenWidgetAngleTo(class UTweenManagerComponent* TweenManager, class UWidget*& TweenTarget, class UTweenContainer*& OutTweenContainer, class UTweenFloat*& OutTween, float To, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatLatentFactory", "BP_CreateLatentTweenWidgetAngleTo");

	Params::TweenFloatLatentFactory_BP_CreateLatentTweenWidgetAngleTo Parms{};

	Parms.TweenManager = TweenManager;
	Parms.TweenTarget = TweenTarget;
	Parms.OutTweenContainer = OutTweenContainer;
	Parms.OutTween = OutTween;
	Parms.To = To;
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;
	OutTweenContainer = Parms.OutTweenContainer;
	OutTween = Parms.OutTween;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenFloatLatentFactory.BP_CreateLatentTweenWidgetOpacityTo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UTweenManagerComponent*           TweenManager                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenContainer*                  OutTweenContainer                                      (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloatLatentFactory*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloatLatentFactory* UTweenFloatLatentFactory::BP_CreateLatentTweenWidgetOpacityTo(class UTweenManagerComponent* TweenManager, class UWidget*& TweenTarget, class UTweenContainer*& OutTweenContainer, class UTweenFloat*& OutTween, float To, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatLatentFactory", "BP_CreateLatentTweenWidgetOpacityTo");

	Params::TweenFloatLatentFactory_BP_CreateLatentTweenWidgetOpacityTo Parms{};

	Parms.TweenManager = TweenManager;
	Parms.TweenTarget = TweenTarget;
	Parms.OutTweenContainer = OutTweenContainer;
	Parms.OutTween = OutTween;
	Parms.To = To;
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;
	OutTweenContainer = Parms.OutTweenContainer;
	OutTween = Parms.OutTween;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenFloatLatentFactory.BP_JoinLatentTweenActorFollowSpline
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USplineComponent*                 Spline                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ApplyRotation                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ApplyScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    UseConstantSpeed                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloatLatentFactory*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloatLatentFactory* UTweenFloatLatentFactory::BP_JoinLatentTweenActorFollowSpline(class UTweenContainer*& TweenContainer, class UTweenFloat*& OutTween, class AActor*& TweenTarget, class USplineComponent* Spline, float Duration, bool ApplyRotation, bool ApplyScale, bool UseConstantSpeed, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatLatentFactory", "BP_JoinLatentTweenActorFollowSpline");

	Params::TweenFloatLatentFactory_BP_JoinLatentTweenActorFollowSpline Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.OutTween = OutTween;
	Parms.TweenTarget = TweenTarget;
	Parms.Spline = Spline;
	Parms.Duration = Duration;
	Parms.ApplyRotation = ApplyRotation;
	Parms.ApplyScale = ApplyScale;
	Parms.UseConstantSpeed = UseConstantSpeed;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	OutTween = Parms.OutTween;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenFloatLatentFactory.BP_JoinLatentTweenCustomFloat
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   From                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloatLatentFactory*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloatLatentFactory* UTweenFloatLatentFactory::BP_JoinLatentTweenCustomFloat(class UTweenContainer*& TweenContainer, class UTweenFloat*& OutTween, class UObject*& TweenTarget, float From, float To, float Duration, ETweenEaseType EaseType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatLatentFactory", "BP_JoinLatentTweenCustomFloat");

	Params::TweenFloatLatentFactory_BP_JoinLatentTweenCustomFloat Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.OutTween = OutTween;
	Parms.TweenTarget = TweenTarget;
	Parms.From = From;
	Parms.To = To;
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	OutTween = Parms.OutTween;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenFloatLatentFactory.BP_JoinLatentTweenMaterialFloatFromTo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInstanceDynamic*         TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   From                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloatLatentFactory*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloatLatentFactory* UTweenFloatLatentFactory::BP_JoinLatentTweenMaterialFloatFromTo(class UTweenContainer*& TweenContainer, class UTweenFloat*& OutTween, class UMaterialInstanceDynamic*& TweenTarget, class FName ParameterName, float From, float To, float Duration, ETweenEaseType EaseType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatLatentFactory", "BP_JoinLatentTweenMaterialFloatFromTo");

	Params::TweenFloatLatentFactory_BP_JoinLatentTweenMaterialFloatFromTo Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.OutTween = OutTween;
	Parms.TweenTarget = TweenTarget;
	Parms.ParameterName = ParameterName;
	Parms.From = From;
	Parms.To = To;
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	OutTween = Parms.OutTween;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenFloatLatentFactory.BP_JoinLatentTweenMaterialFloatTo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInstanceDynamic*         TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloatLatentFactory*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloatLatentFactory* UTweenFloatLatentFactory::BP_JoinLatentTweenMaterialFloatTo(class UTweenContainer*& TweenContainer, class UTweenFloat*& OutTween, class UMaterialInstanceDynamic*& TweenTarget, class FName ParameterName, float To, float Duration, ETweenEaseType EaseType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatLatentFactory", "BP_JoinLatentTweenMaterialFloatTo");

	Params::TweenFloatLatentFactory_BP_JoinLatentTweenMaterialFloatTo Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.OutTween = OutTween;
	Parms.TweenTarget = TweenTarget;
	Parms.ParameterName = ParameterName;
	Parms.To = To;
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	OutTween = Parms.OutTween;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenFloatLatentFactory.BP_JoinLatentTweenRotateActorAroundPoint
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          PivotPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartingAngle                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   EndingAngle                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Axis                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloatLatentFactory*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloatLatentFactory* UTweenFloatLatentFactory::BP_JoinLatentTweenRotateActorAroundPoint(class UTweenContainer*& TweenContainer, class UTweenFloat*& OutTween, class AActor*& TweenTarget, const struct FVector& PivotPoint, float StartingAngle, float EndingAngle, float Radius, const struct FVector& Axis, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatLatentFactory", "BP_JoinLatentTweenRotateActorAroundPoint");

	Params::TweenFloatLatentFactory_BP_JoinLatentTweenRotateActorAroundPoint Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.OutTween = OutTween;
	Parms.TweenTarget = TweenTarget;
	Parms.PivotPoint = std::move(PivotPoint);
	Parms.StartingAngle = StartingAngle;
	Parms.EndingAngle = EndingAngle;
	Parms.Radius = Radius;
	Parms.Axis = std::move(Axis);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	OutTween = Parms.OutTween;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenFloatLatentFactory.BP_JoinLatentTweenRotateActorAroundPointByOffset
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          PivotPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OffsetAngle                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenReferenceAxis                     ReferenceAxis                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloatLatentFactory*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloatLatentFactory* UTweenFloatLatentFactory::BP_JoinLatentTweenRotateActorAroundPointByOffset(class UTweenContainer*& TweenContainer, class UTweenFloat*& OutTween, class AActor*& TweenTarget, const struct FVector& PivotPoint, float OffsetAngle, ETweenReferenceAxis ReferenceAxis, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatLatentFactory", "BP_JoinLatentTweenRotateActorAroundPointByOffset");

	Params::TweenFloatLatentFactory_BP_JoinLatentTweenRotateActorAroundPointByOffset Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.OutTween = OutTween;
	Parms.TweenTarget = TweenTarget;
	Parms.PivotPoint = std::move(PivotPoint);
	Parms.OffsetAngle = OffsetAngle;
	Parms.ReferenceAxis = ReferenceAxis;
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	OutTween = Parms.OutTween;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenFloatLatentFactory.BP_JoinLatentTweenRotateSceneComponentAroundPoint
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          PivotPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartingAngle                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   EndingAngle                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Axis                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloatLatentFactory*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloatLatentFactory* UTweenFloatLatentFactory::BP_JoinLatentTweenRotateSceneComponentAroundPoint(class UTweenContainer*& TweenContainer, class UTweenFloat*& OutTween, class USceneComponent*& TweenTarget, const struct FVector& PivotPoint, float StartingAngle, float EndingAngle, float Radius, const struct FVector& Axis, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatLatentFactory", "BP_JoinLatentTweenRotateSceneComponentAroundPoint");

	Params::TweenFloatLatentFactory_BP_JoinLatentTweenRotateSceneComponentAroundPoint Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.OutTween = OutTween;
	Parms.TweenTarget = TweenTarget;
	Parms.PivotPoint = std::move(PivotPoint);
	Parms.StartingAngle = StartingAngle;
	Parms.EndingAngle = EndingAngle;
	Parms.Radius = Radius;
	Parms.Axis = std::move(Axis);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	OutTween = Parms.OutTween;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenFloatLatentFactory.BP_JoinLatentTweenRotateSceneComponentAroundPointByOffset
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          PivotPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OffsetAngle                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenReferenceAxis                     ReferenceAxis                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloatLatentFactory*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloatLatentFactory* UTweenFloatLatentFactory::BP_JoinLatentTweenRotateSceneComponentAroundPointByOffset(class UTweenContainer*& TweenContainer, class UTweenFloat*& OutTween, class USceneComponent*& TweenTarget, const struct FVector& PivotPoint, float OffsetAngle, ETweenReferenceAxis ReferenceAxis, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatLatentFactory", "BP_JoinLatentTweenRotateSceneComponentAroundPointByOffset");

	Params::TweenFloatLatentFactory_BP_JoinLatentTweenRotateSceneComponentAroundPointByOffset Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.OutTween = OutTween;
	Parms.TweenTarget = TweenTarget;
	Parms.PivotPoint = std::move(PivotPoint);
	Parms.OffsetAngle = OffsetAngle;
	Parms.ReferenceAxis = ReferenceAxis;
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	OutTween = Parms.OutTween;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenFloatLatentFactory.BP_JoinLatentTweenSceneComponentFollowSpline
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USplineComponent*                 Spline                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ApplyRotation                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ApplyScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    UseConstantSpeed                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloatLatentFactory*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloatLatentFactory* UTweenFloatLatentFactory::BP_JoinLatentTweenSceneComponentFollowSpline(class UTweenContainer*& TweenContainer, class UTweenFloat*& OutTween, class USceneComponent*& TweenTarget, class USplineComponent* Spline, float Duration, bool ApplyRotation, bool ApplyScale, bool UseConstantSpeed, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatLatentFactory", "BP_JoinLatentTweenSceneComponentFollowSpline");

	Params::TweenFloatLatentFactory_BP_JoinLatentTweenSceneComponentFollowSpline Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.OutTween = OutTween;
	Parms.TweenTarget = TweenTarget;
	Parms.Spline = Spline;
	Parms.Duration = Duration;
	Parms.ApplyRotation = ApplyRotation;
	Parms.ApplyScale = ApplyScale;
	Parms.UseConstantSpeed = UseConstantSpeed;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	OutTween = Parms.OutTween;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenFloatLatentFactory.BP_JoinLatentTweenWidgetAngleTo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloatLatentFactory*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloatLatentFactory* UTweenFloatLatentFactory::BP_JoinLatentTweenWidgetAngleTo(class UTweenContainer*& TweenContainer, class UTweenFloat*& OutTween, class UWidget*& TweenTarget, float To, float Duration, ETweenEaseType EaseType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatLatentFactory", "BP_JoinLatentTweenWidgetAngleTo");

	Params::TweenFloatLatentFactory_BP_JoinLatentTweenWidgetAngleTo Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.OutTween = OutTween;
	Parms.TweenTarget = TweenTarget;
	Parms.To = To;
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	OutTween = Parms.OutTween;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenFloatLatentFactory.BP_JoinLatentTweenWidgetOpacityTo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloatLatentFactory*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloatLatentFactory* UTweenFloatLatentFactory::BP_JoinLatentTweenWidgetOpacityTo(class UTweenContainer*& TweenContainer, class UTweenFloat*& OutTween, class UWidget*& TweenTarget, float To, float Duration, ETweenEaseType EaseType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatLatentFactory", "BP_JoinLatentTweenWidgetOpacityTo");

	Params::TweenFloatLatentFactory_BP_JoinLatentTweenWidgetOpacityTo Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.OutTween = OutTween;
	Parms.TweenTarget = TweenTarget;
	Parms.To = To;
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	OutTween = Parms.OutTween;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenFloatStandardFactory.BP_AppendTweenActorFollowSpline
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USplineComponent*                 Spline                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ApplyRotation                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ApplyScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    UseConstantSpeed                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloat* UTweenFloatStandardFactory::BP_AppendTweenActorFollowSpline(class UTweenContainer*& TweenContainer, class AActor*& TweenTarget, class USplineComponent* Spline, float Duration, bool ApplyRotation, bool ApplyScale, bool UseConstantSpeed, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatStandardFactory", "BP_AppendTweenActorFollowSpline");

	Params::TweenFloatStandardFactory_BP_AppendTweenActorFollowSpline Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.TweenTarget = TweenTarget;
	Parms.Spline = Spline;
	Parms.Duration = Duration;
	Parms.ApplyRotation = ApplyRotation;
	Parms.ApplyScale = ApplyScale;
	Parms.UseConstantSpeed = UseConstantSpeed;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenFloatStandardFactory.BP_AppendTweenCustomFloat
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   From                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloat* UTweenFloatStandardFactory::BP_AppendTweenCustomFloat(class UTweenContainer*& TweenContainer, class UObject*& TweenTarget, float From, float To, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatStandardFactory", "BP_AppendTweenCustomFloat");

	Params::TweenFloatStandardFactory_BP_AppendTweenCustomFloat Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.TweenTarget = TweenTarget;
	Parms.From = From;
	Parms.To = To;
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenFloatStandardFactory.BP_AppendTweenMaterialFloatFromTo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInstanceDynamic*         TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   From                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloat* UTweenFloatStandardFactory::BP_AppendTweenMaterialFloatFromTo(class UTweenContainer*& TweenContainer, class UMaterialInstanceDynamic*& TweenTarget, class FName ParameterName, float From, float To, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatStandardFactory", "BP_AppendTweenMaterialFloatFromTo");

	Params::TweenFloatStandardFactory_BP_AppendTweenMaterialFloatFromTo Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.TweenTarget = TweenTarget;
	Parms.ParameterName = ParameterName;
	Parms.From = From;
	Parms.To = To;
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenFloatStandardFactory.BP_AppendTweenMaterialFloatTo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInstanceDynamic*         TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloat* UTweenFloatStandardFactory::BP_AppendTweenMaterialFloatTo(class UTweenContainer*& TweenContainer, class UMaterialInstanceDynamic*& TweenTarget, class FName ParameterName, float To, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatStandardFactory", "BP_AppendTweenMaterialFloatTo");

	Params::TweenFloatStandardFactory_BP_AppendTweenMaterialFloatTo Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.TweenTarget = TweenTarget;
	Parms.ParameterName = ParameterName;
	Parms.To = To;
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenFloatStandardFactory.BP_AppendTweenRotateActorAroundPoint
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          PivotPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartingAngle                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   EndingAngle                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Axis                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloat* UTweenFloatStandardFactory::BP_AppendTweenRotateActorAroundPoint(class UTweenContainer*& TweenContainer, class AActor*& TweenTarget, const struct FVector& PivotPoint, float StartingAngle, float EndingAngle, float Radius, const struct FVector& Axis, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatStandardFactory", "BP_AppendTweenRotateActorAroundPoint");

	Params::TweenFloatStandardFactory_BP_AppendTweenRotateActorAroundPoint Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.TweenTarget = TweenTarget;
	Parms.PivotPoint = std::move(PivotPoint);
	Parms.StartingAngle = StartingAngle;
	Parms.EndingAngle = EndingAngle;
	Parms.Radius = Radius;
	Parms.Axis = std::move(Axis);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenFloatStandardFactory.BP_AppendTweenRotateActorAroundPointByOffset
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          PivotPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OffsetAngle                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenReferenceAxis                     ReferenceAxis                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloat* UTweenFloatStandardFactory::BP_AppendTweenRotateActorAroundPointByOffset(class UTweenContainer*& TweenContainer, class AActor*& TweenTarget, const struct FVector& PivotPoint, float OffsetAngle, ETweenReferenceAxis ReferenceAxis, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatStandardFactory", "BP_AppendTweenRotateActorAroundPointByOffset");

	Params::TweenFloatStandardFactory_BP_AppendTweenRotateActorAroundPointByOffset Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.TweenTarget = TweenTarget;
	Parms.PivotPoint = std::move(PivotPoint);
	Parms.OffsetAngle = OffsetAngle;
	Parms.ReferenceAxis = ReferenceAxis;
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenFloatStandardFactory.BP_AppendTweenRotateSceneComponentAroundPoint
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          PivotPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartingAngle                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   EndingAngle                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Axis                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloat* UTweenFloatStandardFactory::BP_AppendTweenRotateSceneComponentAroundPoint(class UTweenContainer*& TweenContainer, class USceneComponent*& TweenTarget, const struct FVector& PivotPoint, float StartingAngle, float EndingAngle, float Radius, const struct FVector& Axis, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatStandardFactory", "BP_AppendTweenRotateSceneComponentAroundPoint");

	Params::TweenFloatStandardFactory_BP_AppendTweenRotateSceneComponentAroundPoint Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.TweenTarget = TweenTarget;
	Parms.PivotPoint = std::move(PivotPoint);
	Parms.StartingAngle = StartingAngle;
	Parms.EndingAngle = EndingAngle;
	Parms.Radius = Radius;
	Parms.Axis = std::move(Axis);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenFloatStandardFactory.BP_AppendTweenRotateSceneComponentAroundPointByOffset
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          PivotPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OffsetAngle                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenReferenceAxis                     ReferenceAxis                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloat* UTweenFloatStandardFactory::BP_AppendTweenRotateSceneComponentAroundPointByOffset(class UTweenContainer*& TweenContainer, class USceneComponent*& TweenTarget, const struct FVector& PivotPoint, float OffsetAngle, ETweenReferenceAxis ReferenceAxis, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatStandardFactory", "BP_AppendTweenRotateSceneComponentAroundPointByOffset");

	Params::TweenFloatStandardFactory_BP_AppendTweenRotateSceneComponentAroundPointByOffset Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.TweenTarget = TweenTarget;
	Parms.PivotPoint = std::move(PivotPoint);
	Parms.OffsetAngle = OffsetAngle;
	Parms.ReferenceAxis = ReferenceAxis;
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenFloatStandardFactory.BP_AppendTweenSceneComponentFollowSpline
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USplineComponent*                 Spline                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ApplyRotation                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ApplyScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    UseConstantSpeed                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloat* UTweenFloatStandardFactory::BP_AppendTweenSceneComponentFollowSpline(class UTweenContainer*& TweenContainer, class USceneComponent*& TweenTarget, class USplineComponent* Spline, float Duration, bool ApplyRotation, bool ApplyScale, bool UseConstantSpeed, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatStandardFactory", "BP_AppendTweenSceneComponentFollowSpline");

	Params::TweenFloatStandardFactory_BP_AppendTweenSceneComponentFollowSpline Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.TweenTarget = TweenTarget;
	Parms.Spline = Spline;
	Parms.Duration = Duration;
	Parms.ApplyRotation = ApplyRotation;
	Parms.ApplyScale = ApplyScale;
	Parms.UseConstantSpeed = UseConstantSpeed;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenFloatStandardFactory.BP_AppendTweenWidgetAngleTo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloat* UTweenFloatStandardFactory::BP_AppendTweenWidgetAngleTo(class UTweenContainer*& TweenContainer, class UWidget*& TweenTarget, float To, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatStandardFactory", "BP_AppendTweenWidgetAngleTo");

	Params::TweenFloatStandardFactory_BP_AppendTweenWidgetAngleTo Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.TweenTarget = TweenTarget;
	Parms.To = To;
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenFloatStandardFactory.BP_AppendTweenWidgetOpacityTo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloat* UTweenFloatStandardFactory::BP_AppendTweenWidgetOpacityTo(class UTweenContainer*& TweenContainer, class UWidget*& TweenTarget, float To, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatStandardFactory", "BP_AppendTweenWidgetOpacityTo");

	Params::TweenFloatStandardFactory_BP_AppendTweenWidgetOpacityTo Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.TweenTarget = TweenTarget;
	Parms.To = To;
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenFloatStandardFactory.BP_CreateTweenActorFollowSpline
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UTweenManagerComponent*           TweenManager                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      Tween                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USplineComponent*                 Spline                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ApplyRotation                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ApplyScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    UseConstantSpeed                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTweenFloatStandardFactory::BP_CreateTweenActorFollowSpline(class UTweenManagerComponent* TweenManager, class AActor*& TweenTarget, class UTweenContainer** TweenContainer, class UTweenFloat** Tween, class USplineComponent* Spline, float Duration, bool ApplyRotation, bool ApplyScale, bool UseConstantSpeed, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatStandardFactory", "BP_CreateTweenActorFollowSpline");

	Params::TweenFloatStandardFactory_BP_CreateTweenActorFollowSpline Parms{};

	Parms.TweenManager = TweenManager;
	Parms.TweenTarget = TweenTarget;
	Parms.Spline = Spline;
	Parms.Duration = Duration;
	Parms.ApplyRotation = ApplyRotation;
	Parms.ApplyScale = ApplyScale;
	Parms.UseConstantSpeed = UseConstantSpeed;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	if (TweenContainer != nullptr)
		*TweenContainer = Parms.TweenContainer;

	if (Tween != nullptr)
		*Tween = Parms.Tween;
}


// Function TweenMaker.TweenFloatStandardFactory.BP_CreateTweenCustomFloat
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UTweenManagerComponent*           TweenManager                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      Tween                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   From                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTweenFloatStandardFactory::BP_CreateTweenCustomFloat(class UTweenManagerComponent* TweenManager, class UObject*& TweenTarget, class UTweenContainer** TweenContainer, class UTweenFloat** Tween, float From, float To, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatStandardFactory", "BP_CreateTweenCustomFloat");

	Params::TweenFloatStandardFactory_BP_CreateTweenCustomFloat Parms{};

	Parms.TweenManager = TweenManager;
	Parms.TweenTarget = TweenTarget;
	Parms.From = From;
	Parms.To = To;
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	if (TweenContainer != nullptr)
		*TweenContainer = Parms.TweenContainer;

	if (Tween != nullptr)
		*Tween = Parms.Tween;
}


// Function TweenMaker.TweenFloatStandardFactory.BP_CreateTweenMaterialFloatFromTo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UTweenManagerComponent*           TweenManager                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInstanceDynamic*         TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      Tween                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   From                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTweenFloatStandardFactory::BP_CreateTweenMaterialFloatFromTo(class UTweenManagerComponent* TweenManager, class UMaterialInstanceDynamic*& TweenTarget, class UTweenContainer** TweenContainer, class UTweenFloat** Tween, class FName ParameterName, float From, float To, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatStandardFactory", "BP_CreateTweenMaterialFloatFromTo");

	Params::TweenFloatStandardFactory_BP_CreateTweenMaterialFloatFromTo Parms{};

	Parms.TweenManager = TweenManager;
	Parms.TweenTarget = TweenTarget;
	Parms.ParameterName = ParameterName;
	Parms.From = From;
	Parms.To = To;
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	if (TweenContainer != nullptr)
		*TweenContainer = Parms.TweenContainer;

	if (Tween != nullptr)
		*Tween = Parms.Tween;
}


// Function TweenMaker.TweenFloatStandardFactory.BP_CreateTweenMaterialFloatTo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UTweenManagerComponent*           TweenManager                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInstanceDynamic*         TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      Tween                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTweenFloatStandardFactory::BP_CreateTweenMaterialFloatTo(class UTweenManagerComponent* TweenManager, class UMaterialInstanceDynamic*& TweenTarget, class UTweenContainer** TweenContainer, class UTweenFloat** Tween, class FName ParameterName, float To, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatStandardFactory", "BP_CreateTweenMaterialFloatTo");

	Params::TweenFloatStandardFactory_BP_CreateTweenMaterialFloatTo Parms{};

	Parms.TweenManager = TweenManager;
	Parms.TweenTarget = TweenTarget;
	Parms.ParameterName = ParameterName;
	Parms.To = To;
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	if (TweenContainer != nullptr)
		*TweenContainer = Parms.TweenContainer;

	if (Tween != nullptr)
		*Tween = Parms.Tween;
}


// Function TweenMaker.TweenFloatStandardFactory.BP_CreateTweenRotateActorAroundPoint
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenManagerComponent*           TweenManager                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      Tween                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          PivotPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartingAngle                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   EndingAngle                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Axis                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTweenFloatStandardFactory::BP_CreateTweenRotateActorAroundPoint(class UTweenManagerComponent* TweenManager, class AActor*& TweenTarget, class UTweenContainer** TweenContainer, class UTweenFloat** Tween, const struct FVector& PivotPoint, float StartingAngle, float EndingAngle, float Radius, const struct FVector& Axis, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatStandardFactory", "BP_CreateTweenRotateActorAroundPoint");

	Params::TweenFloatStandardFactory_BP_CreateTweenRotateActorAroundPoint Parms{};

	Parms.TweenManager = TweenManager;
	Parms.TweenTarget = TweenTarget;
	Parms.PivotPoint = std::move(PivotPoint);
	Parms.StartingAngle = StartingAngle;
	Parms.EndingAngle = EndingAngle;
	Parms.Radius = Radius;
	Parms.Axis = std::move(Axis);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	if (TweenContainer != nullptr)
		*TweenContainer = Parms.TweenContainer;

	if (Tween != nullptr)
		*Tween = Parms.Tween;
}


// Function TweenMaker.TweenFloatStandardFactory.BP_CreateTweenRotateActorAroundPointByOffset
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenManagerComponent*           TweenManager                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      Tween                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          PivotPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OffsetAngle                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenReferenceAxis                     ReferenceAxis                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTweenFloatStandardFactory::BP_CreateTweenRotateActorAroundPointByOffset(class UTweenManagerComponent* TweenManager, class AActor*& TweenTarget, class UTweenContainer** TweenContainer, class UTweenFloat** Tween, const struct FVector& PivotPoint, float OffsetAngle, ETweenReferenceAxis ReferenceAxis, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatStandardFactory", "BP_CreateTweenRotateActorAroundPointByOffset");

	Params::TweenFloatStandardFactory_BP_CreateTweenRotateActorAroundPointByOffset Parms{};

	Parms.TweenManager = TweenManager;
	Parms.TweenTarget = TweenTarget;
	Parms.PivotPoint = std::move(PivotPoint);
	Parms.OffsetAngle = OffsetAngle;
	Parms.ReferenceAxis = ReferenceAxis;
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	if (TweenContainer != nullptr)
		*TweenContainer = Parms.TweenContainer;

	if (Tween != nullptr)
		*Tween = Parms.Tween;
}


// Function TweenMaker.TweenFloatStandardFactory.BP_CreateTweenRotateSceneComponentAroundPoint
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenManagerComponent*           TweenManager                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      Tween                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          PivotPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartingAngle                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   EndingAngle                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Axis                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTweenFloatStandardFactory::BP_CreateTweenRotateSceneComponentAroundPoint(class UTweenManagerComponent* TweenManager, class USceneComponent*& TweenTarget, class UTweenContainer** TweenContainer, class UTweenFloat** Tween, const struct FVector& PivotPoint, float StartingAngle, float EndingAngle, float Radius, const struct FVector& Axis, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatStandardFactory", "BP_CreateTweenRotateSceneComponentAroundPoint");

	Params::TweenFloatStandardFactory_BP_CreateTweenRotateSceneComponentAroundPoint Parms{};

	Parms.TweenManager = TweenManager;
	Parms.TweenTarget = TweenTarget;
	Parms.PivotPoint = std::move(PivotPoint);
	Parms.StartingAngle = StartingAngle;
	Parms.EndingAngle = EndingAngle;
	Parms.Radius = Radius;
	Parms.Axis = std::move(Axis);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	if (TweenContainer != nullptr)
		*TweenContainer = Parms.TweenContainer;

	if (Tween != nullptr)
		*Tween = Parms.Tween;
}


// Function TweenMaker.TweenFloatStandardFactory.BP_CreateTweenRotateSceneComponentAroundPointByOffset
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenManagerComponent*           TweenManager                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      Tween                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          PivotPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OffsetAngle                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenReferenceAxis                     ReferenceAxis                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTweenFloatStandardFactory::BP_CreateTweenRotateSceneComponentAroundPointByOffset(class UTweenManagerComponent* TweenManager, class USceneComponent*& TweenTarget, class UTweenContainer** TweenContainer, class UTweenFloat** Tween, const struct FVector& PivotPoint, float OffsetAngle, ETweenReferenceAxis ReferenceAxis, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatStandardFactory", "BP_CreateTweenRotateSceneComponentAroundPointByOffset");

	Params::TweenFloatStandardFactory_BP_CreateTweenRotateSceneComponentAroundPointByOffset Parms{};

	Parms.TweenManager = TweenManager;
	Parms.TweenTarget = TweenTarget;
	Parms.PivotPoint = std::move(PivotPoint);
	Parms.OffsetAngle = OffsetAngle;
	Parms.ReferenceAxis = ReferenceAxis;
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	if (TweenContainer != nullptr)
		*TweenContainer = Parms.TweenContainer;

	if (Tween != nullptr)
		*Tween = Parms.Tween;
}


// Function TweenMaker.TweenFloatStandardFactory.BP_CreateTweenSceneComponentFollowSpline
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UTweenManagerComponent*           TweenManager                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      Tween                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USplineComponent*                 Spline                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ApplyRotation                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ApplyScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    UseConstantSpeed                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTweenFloatStandardFactory::BP_CreateTweenSceneComponentFollowSpline(class UTweenManagerComponent* TweenManager, class USceneComponent*& TweenTarget, class UTweenContainer** TweenContainer, class UTweenFloat** Tween, class USplineComponent* Spline, float Duration, bool ApplyRotation, bool ApplyScale, bool UseConstantSpeed, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatStandardFactory", "BP_CreateTweenSceneComponentFollowSpline");

	Params::TweenFloatStandardFactory_BP_CreateTweenSceneComponentFollowSpline Parms{};

	Parms.TweenManager = TweenManager;
	Parms.TweenTarget = TweenTarget;
	Parms.Spline = Spline;
	Parms.Duration = Duration;
	Parms.ApplyRotation = ApplyRotation;
	Parms.ApplyScale = ApplyScale;
	Parms.UseConstantSpeed = UseConstantSpeed;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	if (TweenContainer != nullptr)
		*TweenContainer = Parms.TweenContainer;

	if (Tween != nullptr)
		*Tween = Parms.Tween;
}


// Function TweenMaker.TweenFloatStandardFactory.BP_CreateTweenWidgetAngleTo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UTweenManagerComponent*           TweenManager                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      Tween                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTweenFloatStandardFactory::BP_CreateTweenWidgetAngleTo(class UTweenManagerComponent* TweenManager, class UWidget*& TweenTarget, class UTweenContainer** TweenContainer, class UTweenFloat** Tween, float To, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatStandardFactory", "BP_CreateTweenWidgetAngleTo");

	Params::TweenFloatStandardFactory_BP_CreateTweenWidgetAngleTo Parms{};

	Parms.TweenManager = TweenManager;
	Parms.TweenTarget = TweenTarget;
	Parms.To = To;
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	if (TweenContainer != nullptr)
		*TweenContainer = Parms.TweenContainer;

	if (Tween != nullptr)
		*Tween = Parms.Tween;
}


// Function TweenMaker.TweenFloatStandardFactory.BP_CreateTweenWidgetOpacityTo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UTweenManagerComponent*           TweenManager                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      Tween                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTweenFloatStandardFactory::BP_CreateTweenWidgetOpacityTo(class UTweenManagerComponent* TweenManager, class UWidget*& TweenTarget, class UTweenContainer** TweenContainer, class UTweenFloat** Tween, float To, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatStandardFactory", "BP_CreateTweenWidgetOpacityTo");

	Params::TweenFloatStandardFactory_BP_CreateTweenWidgetOpacityTo Parms{};

	Parms.TweenManager = TweenManager;
	Parms.TweenTarget = TweenTarget;
	Parms.To = To;
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	if (TweenContainer != nullptr)
		*TweenContainer = Parms.TweenContainer;

	if (Tween != nullptr)
		*Tween = Parms.Tween;
}


// Function TweenMaker.TweenFloatStandardFactory.BP_JoinTweenActorFollowSpline
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USplineComponent*                 Spline                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ApplyRotation                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ApplyScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    UseConstantSpeed                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloat* UTweenFloatStandardFactory::BP_JoinTweenActorFollowSpline(class UTweenContainer*& TweenContainer, class AActor*& TweenTarget, class USplineComponent* Spline, float Duration, bool ApplyRotation, bool ApplyScale, bool UseConstantSpeed, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatStandardFactory", "BP_JoinTweenActorFollowSpline");

	Params::TweenFloatStandardFactory_BP_JoinTweenActorFollowSpline Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.TweenTarget = TweenTarget;
	Parms.Spline = Spline;
	Parms.Duration = Duration;
	Parms.ApplyRotation = ApplyRotation;
	Parms.ApplyScale = ApplyScale;
	Parms.UseConstantSpeed = UseConstantSpeed;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenFloatStandardFactory.BP_JoinTweenCustomFloat
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   From                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloat* UTweenFloatStandardFactory::BP_JoinTweenCustomFloat(class UTweenContainer*& TweenContainer, class UObject*& TweenTarget, float From, float To, float Duration, ETweenEaseType EaseType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatStandardFactory", "BP_JoinTweenCustomFloat");

	Params::TweenFloatStandardFactory_BP_JoinTweenCustomFloat Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.TweenTarget = TweenTarget;
	Parms.From = From;
	Parms.To = To;
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenFloatStandardFactory.BP_JoinTweenMaterialFloatFromTo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInstanceDynamic*         TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   From                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloat* UTweenFloatStandardFactory::BP_JoinTweenMaterialFloatFromTo(class UTweenContainer*& TweenContainer, class UMaterialInstanceDynamic*& TweenTarget, class FName ParameterName, float From, float To, float Duration, ETweenEaseType EaseType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatStandardFactory", "BP_JoinTweenMaterialFloatFromTo");

	Params::TweenFloatStandardFactory_BP_JoinTweenMaterialFloatFromTo Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.TweenTarget = TweenTarget;
	Parms.ParameterName = ParameterName;
	Parms.From = From;
	Parms.To = To;
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenFloatStandardFactory.BP_JoinTweenMaterialFloatTo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInstanceDynamic*         TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloat* UTweenFloatStandardFactory::BP_JoinTweenMaterialFloatTo(class UTweenContainer*& TweenContainer, class UMaterialInstanceDynamic*& TweenTarget, class FName ParameterName, float To, float Duration, ETweenEaseType EaseType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatStandardFactory", "BP_JoinTweenMaterialFloatTo");

	Params::TweenFloatStandardFactory_BP_JoinTweenMaterialFloatTo Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.TweenTarget = TweenTarget;
	Parms.ParameterName = ParameterName;
	Parms.To = To;
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenFloatStandardFactory.BP_JoinTweenRotateActorAroundPoint
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          PivotPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartingAngle                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   EndingAngle                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Axis                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloat* UTweenFloatStandardFactory::BP_JoinTweenRotateActorAroundPoint(class UTweenContainer*& TweenContainer, class AActor*& TweenTarget, const struct FVector& PivotPoint, float StartingAngle, float EndingAngle, float Radius, const struct FVector& Axis, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatStandardFactory", "BP_JoinTweenRotateActorAroundPoint");

	Params::TweenFloatStandardFactory_BP_JoinTweenRotateActorAroundPoint Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.TweenTarget = TweenTarget;
	Parms.PivotPoint = std::move(PivotPoint);
	Parms.StartingAngle = StartingAngle;
	Parms.EndingAngle = EndingAngle;
	Parms.Radius = Radius;
	Parms.Axis = std::move(Axis);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenFloatStandardFactory.BP_JoinTweenRotateActorAroundPointByOffset
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          PivotPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OffsetAngle                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenReferenceAxis                     ReferenceAxis                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloat* UTweenFloatStandardFactory::BP_JoinTweenRotateActorAroundPointByOffset(class UTweenContainer*& TweenContainer, class AActor*& TweenTarget, const struct FVector& PivotPoint, float OffsetAngle, ETweenReferenceAxis ReferenceAxis, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatStandardFactory", "BP_JoinTweenRotateActorAroundPointByOffset");

	Params::TweenFloatStandardFactory_BP_JoinTweenRotateActorAroundPointByOffset Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.TweenTarget = TweenTarget;
	Parms.PivotPoint = std::move(PivotPoint);
	Parms.OffsetAngle = OffsetAngle;
	Parms.ReferenceAxis = ReferenceAxis;
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenFloatStandardFactory.BP_JoinTweenRotateSceneComponentAroundPoint
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          PivotPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartingAngle                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   EndingAngle                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Axis                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloat* UTweenFloatStandardFactory::BP_JoinTweenRotateSceneComponentAroundPoint(class UTweenContainer*& TweenContainer, class USceneComponent*& TweenTarget, const struct FVector& PivotPoint, float StartingAngle, float EndingAngle, float Radius, const struct FVector& Axis, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatStandardFactory", "BP_JoinTweenRotateSceneComponentAroundPoint");

	Params::TweenFloatStandardFactory_BP_JoinTweenRotateSceneComponentAroundPoint Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.TweenTarget = TweenTarget;
	Parms.PivotPoint = std::move(PivotPoint);
	Parms.StartingAngle = StartingAngle;
	Parms.EndingAngle = EndingAngle;
	Parms.Radius = Radius;
	Parms.Axis = std::move(Axis);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenFloatStandardFactory.BP_JoinTweenRotateSceneComponentAroundPointByOffset
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          PivotPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OffsetAngle                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenReferenceAxis                     ReferenceAxis                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloat* UTweenFloatStandardFactory::BP_JoinTweenRotateSceneComponentAroundPointByOffset(class UTweenContainer*& TweenContainer, class USceneComponent*& TweenTarget, const struct FVector& PivotPoint, float OffsetAngle, ETweenReferenceAxis ReferenceAxis, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatStandardFactory", "BP_JoinTweenRotateSceneComponentAroundPointByOffset");

	Params::TweenFloatStandardFactory_BP_JoinTweenRotateSceneComponentAroundPointByOffset Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.TweenTarget = TweenTarget;
	Parms.PivotPoint = std::move(PivotPoint);
	Parms.OffsetAngle = OffsetAngle;
	Parms.ReferenceAxis = ReferenceAxis;
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenFloatStandardFactory.BP_JoinTweenSceneComponentFollowSpline
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USplineComponent*                 Spline                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ApplyRotation                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ApplyScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    UseConstantSpeed                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloat* UTweenFloatStandardFactory::BP_JoinTweenSceneComponentFollowSpline(class UTweenContainer*& TweenContainer, class USceneComponent*& TweenTarget, class USplineComponent* Spline, float Duration, bool ApplyRotation, bool ApplyScale, bool UseConstantSpeed, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatStandardFactory", "BP_JoinTweenSceneComponentFollowSpline");

	Params::TweenFloatStandardFactory_BP_JoinTweenSceneComponentFollowSpline Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.TweenTarget = TweenTarget;
	Parms.Spline = Spline;
	Parms.Duration = Duration;
	Parms.ApplyRotation = ApplyRotation;
	Parms.ApplyScale = ApplyScale;
	Parms.UseConstantSpeed = UseConstantSpeed;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenFloatStandardFactory.BP_JoinTweenWidgetAngleTo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloat* UTweenFloatStandardFactory::BP_JoinTweenWidgetAngleTo(class UTweenContainer*& TweenContainer, class UWidget*& TweenTarget, float To, float Duration, ETweenEaseType EaseType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatStandardFactory", "BP_JoinTweenWidgetAngleTo");

	Params::TweenFloatStandardFactory_BP_JoinTweenWidgetAngleTo Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.TweenTarget = TweenTarget;
	Parms.To = To;
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenFloatStandardFactory.BP_JoinTweenWidgetOpacityTo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenFloat*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenFloat* UTweenFloatStandardFactory::BP_JoinTweenWidgetOpacityTo(class UTweenContainer*& TweenContainer, class UWidget*& TweenTarget, float To, float Duration, ETweenEaseType EaseType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenFloatStandardFactory", "BP_JoinTweenWidgetOpacityTo");

	Params::TweenFloatStandardFactory_BP_JoinTweenWidgetOpacityTo Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.TweenTarget = TweenTarget;
	Parms.To = To;
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenLinearColor.GetCurrentValue
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor UTweenLinearColor::GetCurrentValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TweenLinearColor", "GetCurrentValue");

	Params::TweenLinearColor_GetCurrentValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenLinearColorLatentFactory.BP_AppendLatentTweenMaterialVectorFromTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenLinearColor*                OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInstanceDynamic*         TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     From                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenLinearColorLatentFactory*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenLinearColorLatentFactory* UTweenLinearColorLatentFactory::BP_AppendLatentTweenMaterialVectorFromTo(class UTweenContainer*& TweenContainer, class UTweenLinearColor*& OutTween, class UMaterialInstanceDynamic*& TweenTarget, class FName ParameterName, const struct FLinearColor& From, const struct FLinearColor& To, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenLinearColorLatentFactory", "BP_AppendLatentTweenMaterialVectorFromTo");

	Params::TweenLinearColorLatentFactory_BP_AppendLatentTweenMaterialVectorFromTo Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.OutTween = OutTween;
	Parms.TweenTarget = TweenTarget;
	Parms.ParameterName = ParameterName;
	Parms.From = std::move(From);
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	OutTween = Parms.OutTween;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenLinearColorLatentFactory.BP_AppendLatentTweenMaterialVectorTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenLinearColor*                OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInstanceDynamic*         TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenLinearColorLatentFactory*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenLinearColorLatentFactory* UTweenLinearColorLatentFactory::BP_AppendLatentTweenMaterialVectorTo(class UTweenContainer*& TweenContainer, class UTweenLinearColor*& OutTween, class UMaterialInstanceDynamic*& TweenTarget, class FName ParameterName, const struct FLinearColor& To, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenLinearColorLatentFactory", "BP_AppendLatentTweenMaterialVectorTo");

	Params::TweenLinearColorLatentFactory_BP_AppendLatentTweenMaterialVectorTo Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.OutTween = OutTween;
	Parms.TweenTarget = TweenTarget;
	Parms.ParameterName = ParameterName;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	OutTween = Parms.OutTween;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenLinearColorLatentFactory.BP_CreateLatentTweenMaterialVectorFromTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenManagerComponent*           TweenManager                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInstanceDynamic*         TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenContainer*                  OutTweenContainer                                      (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenLinearColor*                OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     From                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenLinearColorLatentFactory*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenLinearColorLatentFactory* UTweenLinearColorLatentFactory::BP_CreateLatentTweenMaterialVectorFromTo(class UTweenManagerComponent* TweenManager, class UMaterialInstanceDynamic*& TweenTarget, class UTweenContainer*& OutTweenContainer, class UTweenLinearColor*& OutTween, class FName ParameterName, const struct FLinearColor& From, const struct FLinearColor& To, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenLinearColorLatentFactory", "BP_CreateLatentTweenMaterialVectorFromTo");

	Params::TweenLinearColorLatentFactory_BP_CreateLatentTweenMaterialVectorFromTo Parms{};

	Parms.TweenManager = TweenManager;
	Parms.TweenTarget = TweenTarget;
	Parms.OutTweenContainer = OutTweenContainer;
	Parms.OutTween = OutTween;
	Parms.ParameterName = ParameterName;
	Parms.From = std::move(From);
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;
	OutTweenContainer = Parms.OutTweenContainer;
	OutTween = Parms.OutTween;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenLinearColorLatentFactory.BP_CreateLatentTweenMaterialVectorTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenManagerComponent*           TweenManager                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInstanceDynamic*         TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenContainer*                  OutTweenContainer                                      (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenLinearColor*                OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenLinearColorLatentFactory*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenLinearColorLatentFactory* UTweenLinearColorLatentFactory::BP_CreateLatentTweenMaterialVectorTo(class UTweenManagerComponent* TweenManager, class UMaterialInstanceDynamic*& TweenTarget, class UTweenContainer*& OutTweenContainer, class UTweenLinearColor*& OutTween, class FName ParameterName, const struct FLinearColor& To, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenLinearColorLatentFactory", "BP_CreateLatentTweenMaterialVectorTo");

	Params::TweenLinearColorLatentFactory_BP_CreateLatentTweenMaterialVectorTo Parms{};

	Parms.TweenManager = TweenManager;
	Parms.TweenTarget = TweenTarget;
	Parms.OutTweenContainer = OutTweenContainer;
	Parms.OutTween = OutTween;
	Parms.ParameterName = ParameterName;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;
	OutTweenContainer = Parms.OutTweenContainer;
	OutTween = Parms.OutTween;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenLinearColorLatentFactory.BP_JoinLatentTweenMaterialVectorFromTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenLinearColor*                OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInstanceDynamic*         TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     From                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenLinearColorLatentFactory*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenLinearColorLatentFactory* UTweenLinearColorLatentFactory::BP_JoinLatentTweenMaterialVectorFromTo(class UTweenContainer*& TweenContainer, class UTweenLinearColor*& OutTween, class UMaterialInstanceDynamic*& TweenTarget, class FName ParameterName, const struct FLinearColor& From, const struct FLinearColor& To, float Duration, ETweenEaseType EaseType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenLinearColorLatentFactory", "BP_JoinLatentTweenMaterialVectorFromTo");

	Params::TweenLinearColorLatentFactory_BP_JoinLatentTweenMaterialVectorFromTo Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.OutTween = OutTween;
	Parms.TweenTarget = TweenTarget;
	Parms.ParameterName = ParameterName;
	Parms.From = std::move(From);
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	OutTween = Parms.OutTween;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenLinearColorLatentFactory.BP_JoinLatentTweenMaterialVectorTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenLinearColor*                OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInstanceDynamic*         TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenLinearColorLatentFactory*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenLinearColorLatentFactory* UTweenLinearColorLatentFactory::BP_JoinLatentTweenMaterialVectorTo(class UTweenContainer*& TweenContainer, class UTweenLinearColor*& OutTween, class UMaterialInstanceDynamic*& TweenTarget, class FName ParameterName, const struct FLinearColor& To, float Duration, ETweenEaseType EaseType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenLinearColorLatentFactory", "BP_JoinLatentTweenMaterialVectorTo");

	Params::TweenLinearColorLatentFactory_BP_JoinLatentTweenMaterialVectorTo Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.OutTween = OutTween;
	Parms.TweenTarget = TweenTarget;
	Parms.ParameterName = ParameterName;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	OutTween = Parms.OutTween;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenLinearColorStandardFactory.BP_AppendTweenMaterialVectorFromTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInstanceDynamic*         TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     From                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenLinearColor*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenLinearColor* UTweenLinearColorStandardFactory::BP_AppendTweenMaterialVectorFromTo(class UTweenContainer*& TweenContainer, class UMaterialInstanceDynamic*& TweenTarget, class FName ParameterName, const struct FLinearColor& From, const struct FLinearColor& To, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenLinearColorStandardFactory", "BP_AppendTweenMaterialVectorFromTo");

	Params::TweenLinearColorStandardFactory_BP_AppendTweenMaterialVectorFromTo Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.TweenTarget = TweenTarget;
	Parms.ParameterName = ParameterName;
	Parms.From = std::move(From);
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenLinearColorStandardFactory.BP_AppendTweenMaterialVectorTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInstanceDynamic*         TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenLinearColor*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenLinearColor* UTweenLinearColorStandardFactory::BP_AppendTweenMaterialVectorTo(class UTweenContainer*& TweenContainer, class UMaterialInstanceDynamic*& TweenTarget, class FName ParameterName, const struct FLinearColor& To, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenLinearColorStandardFactory", "BP_AppendTweenMaterialVectorTo");

	Params::TweenLinearColorStandardFactory_BP_AppendTweenMaterialVectorTo Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.TweenTarget = TweenTarget;
	Parms.ParameterName = ParameterName;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenLinearColorStandardFactory.BP_CreateTweenMaterialVectorFromTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenManagerComponent*           TweenManager                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInstanceDynamic*         TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenLinearColor*                Tween                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     From                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTweenLinearColorStandardFactory::BP_CreateTweenMaterialVectorFromTo(class UTweenManagerComponent* TweenManager, class UMaterialInstanceDynamic*& TweenTarget, class UTweenContainer** TweenContainer, class UTweenLinearColor** Tween, class FName ParameterName, const struct FLinearColor& From, const struct FLinearColor& To, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenLinearColorStandardFactory", "BP_CreateTweenMaterialVectorFromTo");

	Params::TweenLinearColorStandardFactory_BP_CreateTweenMaterialVectorFromTo Parms{};

	Parms.TweenManager = TweenManager;
	Parms.TweenTarget = TweenTarget;
	Parms.ParameterName = ParameterName;
	Parms.From = std::move(From);
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	if (TweenContainer != nullptr)
		*TweenContainer = Parms.TweenContainer;

	if (Tween != nullptr)
		*Tween = Parms.Tween;
}


// Function TweenMaker.TweenLinearColorStandardFactory.BP_CreateTweenMaterialVectorTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenManagerComponent*           TweenManager                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInstanceDynamic*         TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenLinearColor*                Tween                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTweenLinearColorStandardFactory::BP_CreateTweenMaterialVectorTo(class UTweenManagerComponent* TweenManager, class UMaterialInstanceDynamic*& TweenTarget, class UTweenContainer** TweenContainer, class UTweenLinearColor** Tween, class FName ParameterName, const struct FLinearColor& To, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenLinearColorStandardFactory", "BP_CreateTweenMaterialVectorTo");

	Params::TweenLinearColorStandardFactory_BP_CreateTweenMaterialVectorTo Parms{};

	Parms.TweenManager = TweenManager;
	Parms.TweenTarget = TweenTarget;
	Parms.ParameterName = ParameterName;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	if (TweenContainer != nullptr)
		*TweenContainer = Parms.TweenContainer;

	if (Tween != nullptr)
		*Tween = Parms.Tween;
}


// Function TweenMaker.TweenLinearColorStandardFactory.BP_JoinTweenMaterialVectorFromTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInstanceDynamic*         TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     From                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenLinearColor*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenLinearColor* UTweenLinearColorStandardFactory::BP_JoinTweenMaterialVectorFromTo(class UTweenContainer*& TweenContainer, class UMaterialInstanceDynamic*& TweenTarget, class FName ParameterName, const struct FLinearColor& From, const struct FLinearColor& To, float Duration, ETweenEaseType EaseType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenLinearColorStandardFactory", "BP_JoinTweenMaterialVectorFromTo");

	Params::TweenLinearColorStandardFactory_BP_JoinTweenMaterialVectorFromTo Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.TweenTarget = TweenTarget;
	Parms.ParameterName = ParameterName;
	Parms.From = std::move(From);
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenLinearColorStandardFactory.BP_JoinTweenMaterialVectorTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInstanceDynamic*         TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenLinearColor*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenLinearColor* UTweenLinearColorStandardFactory::BP_JoinTweenMaterialVectorTo(class UTweenContainer*& TweenContainer, class UMaterialInstanceDynamic*& TweenTarget, class FName ParameterName, const struct FLinearColor& To, float Duration, ETweenEaseType EaseType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenLinearColorStandardFactory", "BP_JoinTweenMaterialVectorTo");

	Params::TweenLinearColorStandardFactory_BP_JoinTweenMaterialVectorTo Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.TweenTarget = TweenTarget;
	Parms.ParameterName = ParameterName;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenManagerActor.BP_CreateTweenContainerStatic
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATweenManagerActor::BP_CreateTweenContainerStatic(class UTweenContainer** TweenContainer, int32 NumLoops, ETweenLoopType LoopType, float TimeScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenManagerActor", "BP_CreateTweenContainerStatic");

	Params::TweenManagerActor_BP_CreateTweenContainerStatic Parms{};

	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.TimeScale = TimeScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (TweenContainer != nullptr)
		*TweenContainer = Parms.TweenContainer;
}


// Function TweenMaker.TweenManagerActor.DeleteAllTweens
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ATweenManagerActor::DeleteAllTweens()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenManagerActor", "DeleteAllTweens");

	Params::TweenManagerActor_DeleteAllTweens Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenManagerActor.DeleteAllTweensByObject
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenGenericType                       TweensType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATweenManagerActor::DeleteAllTweensByObject(class UObject*& TweenTarget, ETweenGenericType TweensType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenManagerActor", "DeleteAllTweensByObject");

	Params::TweenManagerActor_DeleteAllTweensByObject Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.TweensType = TweensType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenManagerActor.FindTweenByName
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             TweenName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenGenericType                       TweenType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBaseTween*                       TweenFound                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATweenManagerActor::FindTweenByName(class FName TweenName, ETweenGenericType TweenType, class UBaseTween** TweenFound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenManagerActor", "FindTweenByName");

	Params::TweenManagerActor_FindTweenByName Parms{};

	Parms.TweenName = TweenName;
	Parms.TweenType = TweenType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (TweenFound != nullptr)
		*TweenFound = Parms.TweenFound;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenManagerActor.IsObjectTweening
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenGenericType                       TweensType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBaseTween*                       TweenFound                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATweenManagerActor::IsObjectTweening(class UObject*& TweenTarget, ETweenGenericType TweensType, class UBaseTween** TweenFound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenManagerActor", "IsObjectTweening");

	Params::TweenManagerActor_IsObjectTweening Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.TweensType = TweensType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	if (TweenFound != nullptr)
		*TweenFound = Parms.TweenFound;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenManagerComponent.BP_CreateTweenContainer
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTweenManagerComponent::BP_CreateTweenContainer(class UTweenContainer** TweenContainer, int32 NumLoops, ETweenLoopType LoopType, float TimeScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TweenManagerComponent", "BP_CreateTweenContainer");

	Params::TweenManagerComponent_BP_CreateTweenContainer Parms{};

	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.TimeScale = TimeScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (TweenContainer != nullptr)
		*TweenContainer = Parms.TweenContainer;
}


// Function TweenMaker.TweenManagerComponent.DeleteAllTweens
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTweenManagerComponent::DeleteAllTweens()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TweenManagerComponent", "DeleteAllTweens");

	Params::TweenManagerComponent_DeleteAllTweens Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenManagerComponent.DeleteAllTweensByObject
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenGenericType                       TweensType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTweenManagerComponent::DeleteAllTweensByObject(class UObject*& TweenTarget, ETweenGenericType TweensType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TweenManagerComponent", "DeleteAllTweensByObject");

	Params::TweenManagerComponent_DeleteAllTweensByObject Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.TweensType = TweensType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenManagerComponent.TweenDestroyed
// (Final, Native, Private)
// Parameters:
// class UBaseTween*                       PTween                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTweenManagerComponent::TweenDestroyed(class UBaseTween* PTween)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TweenManagerComponent", "TweenDestroyed");

	Params::TweenManagerComponent_TweenDestroyed Parms{};

	Parms.PTween = PTween;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TweenMaker.TweenManagerComponent.UpdateNameMap
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UBaseTween*                       PTween                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             PPreviousName                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             PNewName                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTweenManagerComponent::UpdateNameMap(class UBaseTween* PTween, const class FName& PPreviousName, const class FName& PNewName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TweenManagerComponent", "UpdateNameMap");

	Params::TweenManagerComponent_UpdateNameMap Parms{};

	Parms.PTween = PTween;
	Parms.PPreviousName = PPreviousName;
	Parms.PNewName = PNewName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TweenMaker.TweenManagerComponent.FindTweenByName
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             TweenName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenGenericType                       TweenType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBaseTween*                       TweenFound                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTweenManagerComponent::FindTweenByName(class FName TweenName, ETweenGenericType TweenType, class UBaseTween** TweenFound) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TweenManagerComponent", "FindTweenByName");

	Params::TweenManagerComponent_FindTweenByName Parms{};

	Parms.TweenName = TweenName;
	Parms.TweenType = TweenType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (TweenFound != nullptr)
		*TweenFound = Parms.TweenFound;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenManagerComponent.IsObjectTweening
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenGenericType                       TweensType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBaseTween*                       TweenFound                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTweenManagerComponent::IsObjectTweening(class UObject*& TweenTarget, ETweenGenericType TweensType, class UBaseTween** TweenFound) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TweenManagerComponent", "IsObjectTweening");

	Params::TweenManagerComponent_IsObjectTweening Parms{};

	Parms.TweenTarget = TweenTarget;
	Parms.TweensType = TweensType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	if (TweenFound != nullptr)
		*TweenFound = Parms.TweenFound;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenRotator.OnActorBeginOverlap
// (Final, Native, Private)
// Parameters:
// class AActor*                           PThisActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           POtherActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTweenRotator::OnActorBeginOverlap(class AActor* PThisActor, class AActor* POtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TweenRotator", "OnActorBeginOverlap");

	Params::TweenRotator_OnActorBeginOverlap Parms{};

	Parms.PThisActor = PThisActor;
	Parms.POtherActor = POtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TweenMaker.TweenRotator.OnActorHit
// (Final, Native, Private, HasOutParams, HasDefaults)
// Parameters:
// class AActor*                           PThisActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           POtherActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          PNormalImpulse                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       PHit                                                   (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UTweenRotator::OnActorHit(class AActor* PThisActor, class AActor* POtherActor, const struct FVector& PNormalImpulse, const struct FHitResult& PHit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TweenRotator", "OnActorHit");

	Params::TweenRotator_OnActorHit Parms{};

	Parms.PThisActor = PThisActor;
	Parms.POtherActor = POtherActor;
	Parms.PNormalImpulse = std::move(PNormalImpulse);
	Parms.PHit = std::move(PHit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TweenMaker.TweenRotator.OnPrimitiveComponentBeginOverlap
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              PThisComponent                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           POtherActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              POtherComp                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   POtherBodyIndex                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFromSweep                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       PSweepResult                                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UTweenRotator::OnPrimitiveComponentBeginOverlap(class UPrimitiveComponent* PThisComponent, class AActor* POtherActor, class UPrimitiveComponent* POtherComp, int32 POtherBodyIndex, bool bFromSweep, const struct FHitResult& PSweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TweenRotator", "OnPrimitiveComponentBeginOverlap");

	Params::TweenRotator_OnPrimitiveComponentBeginOverlap Parms{};

	Parms.PThisComponent = PThisComponent;
	Parms.POtherActor = POtherActor;
	Parms.POtherComp = POtherComp;
	Parms.POtherBodyIndex = POtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.PSweepResult = std::move(PSweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TweenMaker.TweenRotator.OnPrimitiveComponentHit
// (Final, Native, Private, HasOutParams, HasDefaults)
// Parameters:
// class UPrimitiveComponent*              PThisComponent                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           POtherActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              POtherComp                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          PNormalImpulse                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       PHitResult                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UTweenRotator::OnPrimitiveComponentHit(class UPrimitiveComponent* PThisComponent, class AActor* POtherActor, class UPrimitiveComponent* POtherComp, const struct FVector& PNormalImpulse, const struct FHitResult& PHitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TweenRotator", "OnPrimitiveComponentHit");

	Params::TweenRotator_OnPrimitiveComponentHit Parms{};

	Parms.PThisComponent = PThisComponent;
	Parms.POtherActor = POtherActor;
	Parms.POtherComp = POtherComp;
	Parms.PNormalImpulse = std::move(PNormalImpulse);
	Parms.PHitResult = std::move(PHitResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TweenMaker.TweenRotator.GetCurrentValue
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator UTweenRotator::GetCurrentValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TweenRotator", "GetCurrentValue");

	Params::TweenRotator_GetCurrentValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenRotatorLatentFactory.BP_AppendLatentTweenRotateActorBy
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenRotator*                    OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenRotatorLatentFactory*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenRotatorLatentFactory* UTweenRotatorLatentFactory::BP_AppendLatentTweenRotateActorBy(class UTweenContainer*& TweenContainer, class UTweenRotator*& OutTween, class AActor*& TweenTarget, const struct FRotator& bY, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenRotatorLatentFactory", "BP_AppendLatentTweenRotateActorBy");

	Params::TweenRotatorLatentFactory_BP_AppendLatentTweenRotateActorBy Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.OutTween = OutTween;
	Parms.TweenTarget = TweenTarget;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	OutTween = Parms.OutTween;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenRotatorLatentFactory.BP_AppendLatentTweenRotateActorTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenRotator*                    OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenSpace                             TweenSpace                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenRotationMode                      RotationMode                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenRotatorLatentFactory*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenRotatorLatentFactory* UTweenRotatorLatentFactory::BP_AppendLatentTweenRotateActorTo(class UTweenContainer*& TweenContainer, class UTweenRotator*& OutTween, class AActor*& TweenTarget, const struct FRotator& To, float Duration, ETweenEaseType EaseType, ETweenSpace TweenSpace, ETweenRotationMode RotationMode, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenRotatorLatentFactory", "BP_AppendLatentTweenRotateActorTo");

	Params::TweenRotatorLatentFactory_BP_AppendLatentTweenRotateActorTo Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.OutTween = OutTween;
	Parms.TweenTarget = TweenTarget;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.TweenSpace = TweenSpace;
	Parms.RotationMode = RotationMode;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	OutTween = Parms.OutTween;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenRotatorLatentFactory.BP_AppendLatentTweenRotateSceneComponentBy
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenRotator*                    OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenRotatorLatentFactory*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenRotatorLatentFactory* UTweenRotatorLatentFactory::BP_AppendLatentTweenRotateSceneComponentBy(class UTweenContainer*& TweenContainer, class UTweenRotator*& OutTween, class USceneComponent*& TweenTarget, const struct FRotator& bY, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenRotatorLatentFactory", "BP_AppendLatentTweenRotateSceneComponentBy");

	Params::TweenRotatorLatentFactory_BP_AppendLatentTweenRotateSceneComponentBy Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.OutTween = OutTween;
	Parms.TweenTarget = TweenTarget;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	OutTween = Parms.OutTween;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenRotatorLatentFactory.BP_AppendLatentTweenRotateSceneComponentTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenRotator*                    OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenSpace                             TweenSpace                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenRotationMode                      RotationMode                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenRotatorLatentFactory*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenRotatorLatentFactory* UTweenRotatorLatentFactory::BP_AppendLatentTweenRotateSceneComponentTo(class UTweenContainer*& TweenContainer, class UTweenRotator*& OutTween, class USceneComponent*& TweenTarget, const struct FRotator& To, float Duration, ETweenEaseType EaseType, ETweenSpace TweenSpace, ETweenRotationMode RotationMode, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenRotatorLatentFactory", "BP_AppendLatentTweenRotateSceneComponentTo");

	Params::TweenRotatorLatentFactory_BP_AppendLatentTweenRotateSceneComponentTo Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.OutTween = OutTween;
	Parms.TweenTarget = TweenTarget;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.TweenSpace = TweenSpace;
	Parms.RotationMode = RotationMode;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	OutTween = Parms.OutTween;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenRotatorLatentFactory.BP_CreateLatentTweenRotateActorBy
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenManagerComponent*           TweenManager                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenContainer*                  OutTweenContainer                                      (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenRotator*                    OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenRotatorLatentFactory*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenRotatorLatentFactory* UTweenRotatorLatentFactory::BP_CreateLatentTweenRotateActorBy(class UTweenManagerComponent* TweenManager, class AActor*& TweenTarget, class UTweenContainer*& OutTweenContainer, class UTweenRotator*& OutTween, const struct FRotator& bY, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenRotatorLatentFactory", "BP_CreateLatentTweenRotateActorBy");

	Params::TweenRotatorLatentFactory_BP_CreateLatentTweenRotateActorBy Parms{};

	Parms.TweenManager = TweenManager;
	Parms.TweenTarget = TweenTarget;
	Parms.OutTweenContainer = OutTweenContainer;
	Parms.OutTween = OutTween;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;
	OutTweenContainer = Parms.OutTweenContainer;
	OutTween = Parms.OutTween;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenRotatorLatentFactory.BP_CreateLatentTweenRotateActorTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenManagerComponent*           TweenManager                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenContainer*                  OutTweenContainer                                      (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenRotator*                    OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenSpace                             TweenSpace                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenRotationMode                      RotationMode                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenRotatorLatentFactory*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenRotatorLatentFactory* UTweenRotatorLatentFactory::BP_CreateLatentTweenRotateActorTo(class UTweenManagerComponent* TweenManager, class AActor*& TweenTarget, class UTweenContainer*& OutTweenContainer, class UTweenRotator*& OutTween, const struct FRotator& To, float Duration, ETweenEaseType EaseType, ETweenSpace TweenSpace, ETweenRotationMode RotationMode, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenRotatorLatentFactory", "BP_CreateLatentTweenRotateActorTo");

	Params::TweenRotatorLatentFactory_BP_CreateLatentTweenRotateActorTo Parms{};

	Parms.TweenManager = TweenManager;
	Parms.TweenTarget = TweenTarget;
	Parms.OutTweenContainer = OutTweenContainer;
	Parms.OutTween = OutTween;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.TweenSpace = TweenSpace;
	Parms.RotationMode = RotationMode;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;
	OutTweenContainer = Parms.OutTweenContainer;
	OutTween = Parms.OutTween;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenRotatorLatentFactory.BP_CreateLatentTweenRotateSceneComponentBy
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenManagerComponent*           TweenManager                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenContainer*                  OutTweenContainer                                      (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenRotator*                    OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenRotatorLatentFactory*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenRotatorLatentFactory* UTweenRotatorLatentFactory::BP_CreateLatentTweenRotateSceneComponentBy(class UTweenManagerComponent* TweenManager, class USceneComponent*& TweenTarget, class UTweenContainer*& OutTweenContainer, class UTweenRotator*& OutTween, const struct FRotator& bY, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenRotatorLatentFactory", "BP_CreateLatentTweenRotateSceneComponentBy");

	Params::TweenRotatorLatentFactory_BP_CreateLatentTweenRotateSceneComponentBy Parms{};

	Parms.TweenManager = TweenManager;
	Parms.TweenTarget = TweenTarget;
	Parms.OutTweenContainer = OutTweenContainer;
	Parms.OutTween = OutTween;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;
	OutTweenContainer = Parms.OutTweenContainer;
	OutTween = Parms.OutTween;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenRotatorLatentFactory.BP_CreateLatentTweenRotateSceneComponentTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenManagerComponent*           TweenManager                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenContainer*                  OutTweenContainer                                      (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenRotator*                    OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenSpace                             TweenSpace                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenRotationMode                      RotationMode                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenRotatorLatentFactory*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenRotatorLatentFactory* UTweenRotatorLatentFactory::BP_CreateLatentTweenRotateSceneComponentTo(class UTweenManagerComponent* TweenManager, class USceneComponent*& TweenTarget, class UTweenContainer*& OutTweenContainer, class UTweenRotator*& OutTween, const struct FRotator& To, float Duration, ETweenEaseType EaseType, ETweenSpace TweenSpace, ETweenRotationMode RotationMode, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenRotatorLatentFactory", "BP_CreateLatentTweenRotateSceneComponentTo");

	Params::TweenRotatorLatentFactory_BP_CreateLatentTweenRotateSceneComponentTo Parms{};

	Parms.TweenManager = TweenManager;
	Parms.TweenTarget = TweenTarget;
	Parms.OutTweenContainer = OutTweenContainer;
	Parms.OutTween = OutTween;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.TweenSpace = TweenSpace;
	Parms.RotationMode = RotationMode;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;
	OutTweenContainer = Parms.OutTweenContainer;
	OutTween = Parms.OutTween;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenRotatorLatentFactory.BP_JoinLatentTweenRotateActorBy
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenRotator*                    OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenRotatorLatentFactory*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenRotatorLatentFactory* UTweenRotatorLatentFactory::BP_JoinLatentTweenRotateActorBy(class UTweenContainer*& TweenContainer, class UTweenRotator*& OutTween, class AActor*& TweenTarget, const struct FRotator& bY, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenRotatorLatentFactory", "BP_JoinLatentTweenRotateActorBy");

	Params::TweenRotatorLatentFactory_BP_JoinLatentTweenRotateActorBy Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.OutTween = OutTween;
	Parms.TweenTarget = TweenTarget;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	OutTween = Parms.OutTween;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenRotatorLatentFactory.BP_JoinLatentTweenRotateActorTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenRotator*                    OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenSpace                             TweenSpace                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenRotationMode                      RotationMode                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenRotatorLatentFactory*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenRotatorLatentFactory* UTweenRotatorLatentFactory::BP_JoinLatentTweenRotateActorTo(class UTweenContainer*& TweenContainer, class UTweenRotator*& OutTween, class AActor*& TweenTarget, const struct FRotator& To, float Duration, ETweenEaseType EaseType, ETweenSpace TweenSpace, ETweenRotationMode RotationMode, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenRotatorLatentFactory", "BP_JoinLatentTweenRotateActorTo");

	Params::TweenRotatorLatentFactory_BP_JoinLatentTweenRotateActorTo Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.OutTween = OutTween;
	Parms.TweenTarget = TweenTarget;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.TweenSpace = TweenSpace;
	Parms.RotationMode = RotationMode;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	OutTween = Parms.OutTween;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenRotatorLatentFactory.BP_JoinLatentTweenRotateSceneComponentBy
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenRotator*                    OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenRotatorLatentFactory*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenRotatorLatentFactory* UTweenRotatorLatentFactory::BP_JoinLatentTweenRotateSceneComponentBy(class UTweenContainer*& TweenContainer, class UTweenRotator*& OutTween, class USceneComponent*& TweenTarget, const struct FRotator& bY, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenRotatorLatentFactory", "BP_JoinLatentTweenRotateSceneComponentBy");

	Params::TweenRotatorLatentFactory_BP_JoinLatentTweenRotateSceneComponentBy Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.OutTween = OutTween;
	Parms.TweenTarget = TweenTarget;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	OutTween = Parms.OutTween;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenRotatorLatentFactory.BP_JoinLatentTweenRotateSceneComponentTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenRotator*                    OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenSpace                             TweenSpace                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenRotationMode                      RotationMode                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenRotatorLatentFactory*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenRotatorLatentFactory* UTweenRotatorLatentFactory::BP_JoinLatentTweenRotateSceneComponentTo(class UTweenContainer*& TweenContainer, class UTweenRotator*& OutTween, class USceneComponent*& TweenTarget, const struct FRotator& To, float Duration, ETweenEaseType EaseType, ETweenSpace TweenSpace, ETweenRotationMode RotationMode, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenRotatorLatentFactory", "BP_JoinLatentTweenRotateSceneComponentTo");

	Params::TweenRotatorLatentFactory_BP_JoinLatentTweenRotateSceneComponentTo Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.OutTween = OutTween;
	Parms.TweenTarget = TweenTarget;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.TweenSpace = TweenSpace;
	Parms.RotationMode = RotationMode;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	OutTween = Parms.OutTween;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenRotatorStandardFactory.BP_AppendTweenRotateActorBy
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenRotator*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenRotator* UTweenRotatorStandardFactory::BP_AppendTweenRotateActorBy(class UTweenContainer*& TweenContainer, class AActor*& TweenTarget, const struct FRotator& bY, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenRotatorStandardFactory", "BP_AppendTweenRotateActorBy");

	Params::TweenRotatorStandardFactory_BP_AppendTweenRotateActorBy Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.TweenTarget = TweenTarget;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenRotatorStandardFactory.BP_AppendTweenRotateActorTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenSpace                             TweenSpace                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenRotationMode                      RotationMode                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenRotator*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenRotator* UTweenRotatorStandardFactory::BP_AppendTweenRotateActorTo(class UTweenContainer*& TweenContainer, class AActor*& TweenTarget, const struct FRotator& To, float Duration, ETweenEaseType EaseType, ETweenSpace TweenSpace, ETweenRotationMode RotationMode, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenRotatorStandardFactory", "BP_AppendTweenRotateActorTo");

	Params::TweenRotatorStandardFactory_BP_AppendTweenRotateActorTo Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.TweenTarget = TweenTarget;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.TweenSpace = TweenSpace;
	Parms.RotationMode = RotationMode;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenRotatorStandardFactory.BP_AppendTweenRotateSceneComponentBy
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenRotator*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenRotator* UTweenRotatorStandardFactory::BP_AppendTweenRotateSceneComponentBy(class UTweenContainer*& TweenContainer, class USceneComponent*& TweenTarget, const struct FRotator& bY, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenRotatorStandardFactory", "BP_AppendTweenRotateSceneComponentBy");

	Params::TweenRotatorStandardFactory_BP_AppendTweenRotateSceneComponentBy Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.TweenTarget = TweenTarget;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenRotatorStandardFactory.BP_AppendTweenRotateSceneComponentTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenSpace                             TweenSpace                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenRotationMode                      RotationMode                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenRotator*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenRotator* UTweenRotatorStandardFactory::BP_AppendTweenRotateSceneComponentTo(class UTweenContainer*& TweenContainer, class USceneComponent*& TweenTarget, const struct FRotator& To, float Duration, ETweenEaseType EaseType, ETweenSpace TweenSpace, ETweenRotationMode RotationMode, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenRotatorStandardFactory", "BP_AppendTweenRotateSceneComponentTo");

	Params::TweenRotatorStandardFactory_BP_AppendTweenRotateSceneComponentTo Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.TweenTarget = TweenTarget;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.TweenSpace = TweenSpace;
	Parms.RotationMode = RotationMode;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenRotatorStandardFactory.BP_CreateTweenRotateActorBy
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenManagerComponent*           TweenManager                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenRotator*                    Tween                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTweenRotatorStandardFactory::BP_CreateTweenRotateActorBy(class UTweenManagerComponent* TweenManager, class AActor*& TweenTarget, class UTweenContainer** TweenContainer, class UTweenRotator** Tween, const struct FRotator& bY, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenRotatorStandardFactory", "BP_CreateTweenRotateActorBy");

	Params::TweenRotatorStandardFactory_BP_CreateTweenRotateActorBy Parms{};

	Parms.TweenManager = TweenManager;
	Parms.TweenTarget = TweenTarget;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	if (TweenContainer != nullptr)
		*TweenContainer = Parms.TweenContainer;

	if (Tween != nullptr)
		*Tween = Parms.Tween;
}


// Function TweenMaker.TweenRotatorStandardFactory.BP_CreateTweenRotateActorTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenManagerComponent*           TweenManager                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenRotator*                    Tween                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenSpace                             TweenSpace                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenRotationMode                      RotationMode                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTweenRotatorStandardFactory::BP_CreateTweenRotateActorTo(class UTweenManagerComponent* TweenManager, class AActor*& TweenTarget, class UTweenContainer** TweenContainer, class UTweenRotator** Tween, const struct FRotator& To, float Duration, ETweenEaseType EaseType, ETweenSpace TweenSpace, ETweenRotationMode RotationMode, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenRotatorStandardFactory", "BP_CreateTweenRotateActorTo");

	Params::TweenRotatorStandardFactory_BP_CreateTweenRotateActorTo Parms{};

	Parms.TweenManager = TweenManager;
	Parms.TweenTarget = TweenTarget;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.TweenSpace = TweenSpace;
	Parms.RotationMode = RotationMode;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	if (TweenContainer != nullptr)
		*TweenContainer = Parms.TweenContainer;

	if (Tween != nullptr)
		*Tween = Parms.Tween;
}


// Function TweenMaker.TweenRotatorStandardFactory.BP_CreateTweenRotateSceneComponentBy
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenManagerComponent*           TweenManager                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenRotator*                    Tween                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTweenRotatorStandardFactory::BP_CreateTweenRotateSceneComponentBy(class UTweenManagerComponent* TweenManager, class USceneComponent*& TweenTarget, class UTweenContainer** TweenContainer, class UTweenRotator** Tween, const struct FRotator& bY, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenRotatorStandardFactory", "BP_CreateTweenRotateSceneComponentBy");

	Params::TweenRotatorStandardFactory_BP_CreateTweenRotateSceneComponentBy Parms{};

	Parms.TweenManager = TweenManager;
	Parms.TweenTarget = TweenTarget;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	if (TweenContainer != nullptr)
		*TweenContainer = Parms.TweenContainer;

	if (Tween != nullptr)
		*Tween = Parms.Tween;
}


// Function TweenMaker.TweenRotatorStandardFactory.BP_CreateTweenRotateSceneComponentTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenManagerComponent*           TweenManager                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenRotator*                    Tween                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenSpace                             TweenSpace                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenRotationMode                      RotationMode                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTweenRotatorStandardFactory::BP_CreateTweenRotateSceneComponentTo(class UTweenManagerComponent* TweenManager, class USceneComponent*& TweenTarget, class UTweenContainer** TweenContainer, class UTweenRotator** Tween, const struct FRotator& To, float Duration, ETweenEaseType EaseType, ETweenSpace TweenSpace, ETweenRotationMode RotationMode, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenRotatorStandardFactory", "BP_CreateTweenRotateSceneComponentTo");

	Params::TweenRotatorStandardFactory_BP_CreateTweenRotateSceneComponentTo Parms{};

	Parms.TweenManager = TweenManager;
	Parms.TweenTarget = TweenTarget;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.TweenSpace = TweenSpace;
	Parms.RotationMode = RotationMode;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	if (TweenContainer != nullptr)
		*TweenContainer = Parms.TweenContainer;

	if (Tween != nullptr)
		*Tween = Parms.Tween;
}


// Function TweenMaker.TweenRotatorStandardFactory.BP_JoinTweenRotateActorBy
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenRotator*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenRotator* UTweenRotatorStandardFactory::BP_JoinTweenRotateActorBy(class UTweenContainer*& TweenContainer, class AActor*& TweenTarget, const struct FRotator& bY, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenRotatorStandardFactory", "BP_JoinTweenRotateActorBy");

	Params::TweenRotatorStandardFactory_BP_JoinTweenRotateActorBy Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.TweenTarget = TweenTarget;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenRotatorStandardFactory.BP_JoinTweenRotateActorTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenSpace                             TweenSpace                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenRotationMode                      RotationMode                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenRotator*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenRotator* UTweenRotatorStandardFactory::BP_JoinTweenRotateActorTo(class UTweenContainer*& TweenContainer, class AActor*& TweenTarget, const struct FRotator& To, float Duration, ETweenEaseType EaseType, ETweenSpace TweenSpace, ETweenRotationMode RotationMode, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenRotatorStandardFactory", "BP_JoinTweenRotateActorTo");

	Params::TweenRotatorStandardFactory_BP_JoinTweenRotateActorTo Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.TweenTarget = TweenTarget;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.TweenSpace = TweenSpace;
	Parms.RotationMode = RotationMode;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenRotatorStandardFactory.BP_JoinTweenRotateSceneComponentBy
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenRotator*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenRotator* UTweenRotatorStandardFactory::BP_JoinTweenRotateSceneComponentBy(class UTweenContainer*& TweenContainer, class USceneComponent*& TweenTarget, const struct FRotator& bY, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenRotatorStandardFactory", "BP_JoinTweenRotateSceneComponentBy");

	Params::TweenRotatorStandardFactory_BP_JoinTweenRotateSceneComponentBy Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.TweenTarget = TweenTarget;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenRotatorStandardFactory.BP_JoinTweenRotateSceneComponentTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenSpace                             TweenSpace                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenRotationMode                      RotationMode                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenRotator*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenRotator* UTweenRotatorStandardFactory::BP_JoinTweenRotateSceneComponentTo(class UTweenContainer*& TweenContainer, class USceneComponent*& TweenTarget, const struct FRotator& To, float Duration, ETweenEaseType EaseType, ETweenSpace TweenSpace, ETweenRotationMode RotationMode, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenRotatorStandardFactory", "BP_JoinTweenRotateSceneComponentTo");

	Params::TweenRotatorStandardFactory_BP_JoinTweenRotateSceneComponentTo Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.TweenTarget = TweenTarget;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.TweenSpace = TweenSpace;
	Parms.RotationMode = RotationMode;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVector.OnActorBeginOverlap
// (Final, Native, Private)
// Parameters:
// class AActor*                           PThisActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           POtherActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTweenVector::OnActorBeginOverlap(class AActor* PThisActor, class AActor* POtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TweenVector", "OnActorBeginOverlap");

	Params::TweenVector_OnActorBeginOverlap Parms{};

	Parms.PThisActor = PThisActor;
	Parms.POtherActor = POtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TweenMaker.TweenVector.OnActorHit
// (Final, Native, Private, HasOutParams, HasDefaults)
// Parameters:
// class AActor*                           PThisActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           POtherActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          PNormalImpulse                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       PHit                                                   (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UTweenVector::OnActorHit(class AActor* PThisActor, class AActor* POtherActor, const struct FVector& PNormalImpulse, const struct FHitResult& PHit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TweenVector", "OnActorHit");

	Params::TweenVector_OnActorHit Parms{};

	Parms.PThisActor = PThisActor;
	Parms.POtherActor = POtherActor;
	Parms.PNormalImpulse = std::move(PNormalImpulse);
	Parms.PHit = std::move(PHit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TweenMaker.TweenVector.OnPrimitiveComponentBeginOverlap
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              PThisComponent                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           POtherActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              POtherComp                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   POtherBodyIndex                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFromSweep                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       PSweepResult                                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UTweenVector::OnPrimitiveComponentBeginOverlap(class UPrimitiveComponent* PThisComponent, class AActor* POtherActor, class UPrimitiveComponent* POtherComp, int32 POtherBodyIndex, bool bFromSweep, const struct FHitResult& PSweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TweenVector", "OnPrimitiveComponentBeginOverlap");

	Params::TweenVector_OnPrimitiveComponentBeginOverlap Parms{};

	Parms.PThisComponent = PThisComponent;
	Parms.POtherActor = POtherActor;
	Parms.POtherComp = POtherComp;
	Parms.POtherBodyIndex = POtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.PSweepResult = std::move(PSweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TweenMaker.TweenVector.OnPrimitiveComponentHit
// (Final, Native, Private, HasOutParams, HasDefaults)
// Parameters:
// class UPrimitiveComponent*              PThisComponent                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           POtherActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              POtherComp                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          PNormalImpulse                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       PHitResult                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UTweenVector::OnPrimitiveComponentHit(class UPrimitiveComponent* PThisComponent, class AActor* POtherActor, class UPrimitiveComponent* POtherComp, const struct FVector& PNormalImpulse, const struct FHitResult& PHitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TweenVector", "OnPrimitiveComponentHit");

	Params::TweenVector_OnPrimitiveComponentHit Parms{};

	Parms.PThisComponent = PThisComponent;
	Parms.POtherActor = POtherActor;
	Parms.POtherComp = POtherComp;
	Parms.PNormalImpulse = std::move(PNormalImpulse);
	Parms.PHitResult = std::move(PHitResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TweenMaker.TweenVector.GetCurrentValue
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UTweenVector::GetCurrentValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TweenVector", "GetCurrentValue");

	Params::TweenVector_GetCurrentValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVector2D.GetCurrentValue
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UTweenVector2D::GetCurrentValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TweenVector2D", "GetCurrentValue");

	Params::TweenVector2D_GetCurrentValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVector2DLatentFactory.BP_AppendLatentTweenCustomVector2D
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2D*                   OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        From                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2DLatentFactory*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector2DLatentFactory* UTweenVector2DLatentFactory::BP_AppendLatentTweenCustomVector2D(class UTweenContainer*& TweenContainer, class UTweenVector2D*& OutTween, class UObject*& TweenTarget, const struct FVector2D& From, const struct FVector2D& To, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVector2DLatentFactory", "BP_AppendLatentTweenCustomVector2D");

	Params::TweenVector2DLatentFactory_BP_AppendLatentTweenCustomVector2D Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.OutTween = OutTween;
	Parms.TweenTarget = TweenTarget;
	Parms.From = std::move(From);
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	OutTween = Parms.OutTween;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVector2DLatentFactory.BP_AppendLatentTweenMoveWidgetBy
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2D*                   OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2DLatentFactory*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector2DLatentFactory* UTweenVector2DLatentFactory::BP_AppendLatentTweenMoveWidgetBy(class UTweenContainer*& TweenContainer, class UTweenVector2D*& OutTween, class UWidget*& TweenTarget, const struct FVector2D& bY, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVector2DLatentFactory", "BP_AppendLatentTweenMoveWidgetBy");

	Params::TweenVector2DLatentFactory_BP_AppendLatentTweenMoveWidgetBy Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.OutTween = OutTween;
	Parms.TweenTarget = TweenTarget;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	OutTween = Parms.OutTween;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVector2DLatentFactory.BP_AppendLatentTweenMoveWidgetTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2D*                   OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2DLatentFactory*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector2DLatentFactory* UTweenVector2DLatentFactory::BP_AppendLatentTweenMoveWidgetTo(class UTweenContainer*& TweenContainer, class UTweenVector2D*& OutTween, class UWidget*& TweenTarget, const struct FVector2D& To, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVector2DLatentFactory", "BP_AppendLatentTweenMoveWidgetTo");

	Params::TweenVector2DLatentFactory_BP_AppendLatentTweenMoveWidgetTo Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.OutTween = OutTween;
	Parms.TweenTarget = TweenTarget;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	OutTween = Parms.OutTween;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVector2DLatentFactory.BP_AppendLatentTweenScaleWidgetBy
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2D*                   OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2DLatentFactory*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector2DLatentFactory* UTweenVector2DLatentFactory::BP_AppendLatentTweenScaleWidgetBy(class UTweenContainer*& TweenContainer, class UTweenVector2D*& OutTween, class UWidget*& TweenTarget, const struct FVector2D& bY, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVector2DLatentFactory", "BP_AppendLatentTweenScaleWidgetBy");

	Params::TweenVector2DLatentFactory_BP_AppendLatentTweenScaleWidgetBy Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.OutTween = OutTween;
	Parms.TweenTarget = TweenTarget;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	OutTween = Parms.OutTween;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVector2DLatentFactory.BP_AppendLatentTweenScaleWidgetTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2D*                   OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2DLatentFactory*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector2DLatentFactory* UTweenVector2DLatentFactory::BP_AppendLatentTweenScaleWidgetTo(class UTweenContainer*& TweenContainer, class UTweenVector2D*& OutTween, class UWidget*& TweenTarget, const struct FVector2D& To, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVector2DLatentFactory", "BP_AppendLatentTweenScaleWidgetTo");

	Params::TweenVector2DLatentFactory_BP_AppendLatentTweenScaleWidgetTo Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.OutTween = OutTween;
	Parms.TweenTarget = TweenTarget;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	OutTween = Parms.OutTween;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVector2DLatentFactory.BP_AppendLatentTweenShearWidgetTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2D*                   OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2DLatentFactory*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector2DLatentFactory* UTweenVector2DLatentFactory::BP_AppendLatentTweenShearWidgetTo(class UTweenContainer*& TweenContainer, class UTweenVector2D*& OutTween, class UWidget*& TweenTarget, const struct FVector2D& To, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVector2DLatentFactory", "BP_AppendLatentTweenShearWidgetTo");

	Params::TweenVector2DLatentFactory_BP_AppendLatentTweenShearWidgetTo Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.OutTween = OutTween;
	Parms.TweenTarget = TweenTarget;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	OutTween = Parms.OutTween;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVector2DLatentFactory.BP_CreateLatentTweenCustomVector2D
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenManagerComponent*           TweenManager                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenContainer*                  OutTweenContainer                                      (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2D*                   OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        From                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2DLatentFactory*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector2DLatentFactory* UTweenVector2DLatentFactory::BP_CreateLatentTweenCustomVector2D(class UTweenManagerComponent* TweenManager, class UObject*& TweenTarget, class UTweenContainer*& OutTweenContainer, class UTweenVector2D*& OutTween, const struct FVector2D& From, const struct FVector2D& To, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVector2DLatentFactory", "BP_CreateLatentTweenCustomVector2D");

	Params::TweenVector2DLatentFactory_BP_CreateLatentTweenCustomVector2D Parms{};

	Parms.TweenManager = TweenManager;
	Parms.TweenTarget = TweenTarget;
	Parms.OutTweenContainer = OutTweenContainer;
	Parms.OutTween = OutTween;
	Parms.From = std::move(From);
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;
	OutTweenContainer = Parms.OutTweenContainer;
	OutTween = Parms.OutTween;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVector2DLatentFactory.BP_CreateLatentTweenMoveWidgetBy
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenManagerComponent*           TweenManager                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenContainer*                  OutTweenContainer                                      (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2D*                   OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2DLatentFactory*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector2DLatentFactory* UTweenVector2DLatentFactory::BP_CreateLatentTweenMoveWidgetBy(class UTweenManagerComponent* TweenManager, class UWidget*& TweenTarget, class UTweenContainer*& OutTweenContainer, class UTweenVector2D*& OutTween, const struct FVector2D& bY, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVector2DLatentFactory", "BP_CreateLatentTweenMoveWidgetBy");

	Params::TweenVector2DLatentFactory_BP_CreateLatentTweenMoveWidgetBy Parms{};

	Parms.TweenManager = TweenManager;
	Parms.TweenTarget = TweenTarget;
	Parms.OutTweenContainer = OutTweenContainer;
	Parms.OutTween = OutTween;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;
	OutTweenContainer = Parms.OutTweenContainer;
	OutTween = Parms.OutTween;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVector2DLatentFactory.BP_CreateLatentTweenMoveWidgetTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenManagerComponent*           TweenManager                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenContainer*                  OutTweenContainer                                      (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2D*                   OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2DLatentFactory*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector2DLatentFactory* UTweenVector2DLatentFactory::BP_CreateLatentTweenMoveWidgetTo(class UTweenManagerComponent* TweenManager, class UWidget*& TweenTarget, class UTweenContainer*& OutTweenContainer, class UTweenVector2D*& OutTween, const struct FVector2D& To, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVector2DLatentFactory", "BP_CreateLatentTweenMoveWidgetTo");

	Params::TweenVector2DLatentFactory_BP_CreateLatentTweenMoveWidgetTo Parms{};

	Parms.TweenManager = TweenManager;
	Parms.TweenTarget = TweenTarget;
	Parms.OutTweenContainer = OutTweenContainer;
	Parms.OutTween = OutTween;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;
	OutTweenContainer = Parms.OutTweenContainer;
	OutTween = Parms.OutTween;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVector2DLatentFactory.BP_CreateLatentTweenScaleWidgetBy
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenManagerComponent*           TweenManager                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenContainer*                  OutTweenContainer                                      (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2D*                   OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2DLatentFactory*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector2DLatentFactory* UTweenVector2DLatentFactory::BP_CreateLatentTweenScaleWidgetBy(class UTweenManagerComponent* TweenManager, class UWidget*& TweenTarget, class UTweenContainer*& OutTweenContainer, class UTweenVector2D*& OutTween, const struct FVector2D& bY, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVector2DLatentFactory", "BP_CreateLatentTweenScaleWidgetBy");

	Params::TweenVector2DLatentFactory_BP_CreateLatentTweenScaleWidgetBy Parms{};

	Parms.TweenManager = TweenManager;
	Parms.TweenTarget = TweenTarget;
	Parms.OutTweenContainer = OutTweenContainer;
	Parms.OutTween = OutTween;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;
	OutTweenContainer = Parms.OutTweenContainer;
	OutTween = Parms.OutTween;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVector2DLatentFactory.BP_CreateLatentTweenScaleWidgetTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenManagerComponent*           TweenManager                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenContainer*                  OutTweenContainer                                      (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2D*                   OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2DLatentFactory*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector2DLatentFactory* UTweenVector2DLatentFactory::BP_CreateLatentTweenScaleWidgetTo(class UTweenManagerComponent* TweenManager, class UWidget*& TweenTarget, class UTweenContainer*& OutTweenContainer, class UTweenVector2D*& OutTween, const struct FVector2D& To, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVector2DLatentFactory", "BP_CreateLatentTweenScaleWidgetTo");

	Params::TweenVector2DLatentFactory_BP_CreateLatentTweenScaleWidgetTo Parms{};

	Parms.TweenManager = TweenManager;
	Parms.TweenTarget = TweenTarget;
	Parms.OutTweenContainer = OutTweenContainer;
	Parms.OutTween = OutTween;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;
	OutTweenContainer = Parms.OutTweenContainer;
	OutTween = Parms.OutTween;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVector2DLatentFactory.BP_CreateLatentTweenShearWidgetTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenManagerComponent*           TweenManager                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenContainer*                  OutTweenContainer                                      (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2D*                   OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2DLatentFactory*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector2DLatentFactory* UTweenVector2DLatentFactory::BP_CreateLatentTweenShearWidgetTo(class UTweenManagerComponent* TweenManager, class UWidget*& TweenTarget, class UTweenContainer*& OutTweenContainer, class UTweenVector2D*& OutTween, const struct FVector2D& To, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVector2DLatentFactory", "BP_CreateLatentTweenShearWidgetTo");

	Params::TweenVector2DLatentFactory_BP_CreateLatentTweenShearWidgetTo Parms{};

	Parms.TweenManager = TweenManager;
	Parms.TweenTarget = TweenTarget;
	Parms.OutTweenContainer = OutTweenContainer;
	Parms.OutTween = OutTween;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;
	OutTweenContainer = Parms.OutTweenContainer;
	OutTween = Parms.OutTween;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVector2DLatentFactory.BP_JoinLatentTweenCustomVector2D
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2D*                   OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        From                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2DLatentFactory*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector2DLatentFactory* UTweenVector2DLatentFactory::BP_JoinLatentTweenCustomVector2D(class UTweenContainer*& TweenContainer, class UTweenVector2D*& OutTween, class UObject*& TweenTarget, const struct FVector2D& From, const struct FVector2D& To, float Duration, ETweenEaseType EaseType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVector2DLatentFactory", "BP_JoinLatentTweenCustomVector2D");

	Params::TweenVector2DLatentFactory_BP_JoinLatentTweenCustomVector2D Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.OutTween = OutTween;
	Parms.TweenTarget = TweenTarget;
	Parms.From = std::move(From);
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	OutTween = Parms.OutTween;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVector2DLatentFactory.BP_JoinLatentTweenMoveWidgetBy
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2D*                   OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2DLatentFactory*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector2DLatentFactory* UTweenVector2DLatentFactory::BP_JoinLatentTweenMoveWidgetBy(class UTweenContainer*& TweenContainer, class UTweenVector2D*& OutTween, class UWidget*& TweenTarget, const struct FVector2D& bY, float Duration, ETweenEaseType EaseType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVector2DLatentFactory", "BP_JoinLatentTweenMoveWidgetBy");

	Params::TweenVector2DLatentFactory_BP_JoinLatentTweenMoveWidgetBy Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.OutTween = OutTween;
	Parms.TweenTarget = TweenTarget;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	OutTween = Parms.OutTween;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVector2DLatentFactory.BP_JoinLatentTweenMoveWidgetTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2D*                   OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2DLatentFactory*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector2DLatentFactory* UTweenVector2DLatentFactory::BP_JoinLatentTweenMoveWidgetTo(class UTweenContainer*& TweenContainer, class UTweenVector2D*& OutTween, class UWidget*& TweenTarget, const struct FVector2D& To, float Duration, ETweenEaseType EaseType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVector2DLatentFactory", "BP_JoinLatentTweenMoveWidgetTo");

	Params::TweenVector2DLatentFactory_BP_JoinLatentTweenMoveWidgetTo Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.OutTween = OutTween;
	Parms.TweenTarget = TweenTarget;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	OutTween = Parms.OutTween;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVector2DLatentFactory.BP_JoinLatentTweenScaleWidgetBy
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2D*                   OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2DLatentFactory*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector2DLatentFactory* UTweenVector2DLatentFactory::BP_JoinLatentTweenScaleWidgetBy(class UTweenContainer*& TweenContainer, class UTweenVector2D*& OutTween, class UWidget*& TweenTarget, const struct FVector2D& bY, float Duration, ETweenEaseType EaseType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVector2DLatentFactory", "BP_JoinLatentTweenScaleWidgetBy");

	Params::TweenVector2DLatentFactory_BP_JoinLatentTweenScaleWidgetBy Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.OutTween = OutTween;
	Parms.TweenTarget = TweenTarget;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	OutTween = Parms.OutTween;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVector2DLatentFactory.BP_JoinLatentTweenScaleWidgetTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2D*                   OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2DLatentFactory*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector2DLatentFactory* UTweenVector2DLatentFactory::BP_JoinLatentTweenScaleWidgetTo(class UTweenContainer*& TweenContainer, class UTweenVector2D*& OutTween, class UWidget*& TweenTarget, const struct FVector2D& To, float Duration, ETweenEaseType EaseType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVector2DLatentFactory", "BP_JoinLatentTweenScaleWidgetTo");

	Params::TweenVector2DLatentFactory_BP_JoinLatentTweenScaleWidgetTo Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.OutTween = OutTween;
	Parms.TweenTarget = TweenTarget;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	OutTween = Parms.OutTween;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVector2DLatentFactory.BP_JoinLatentTweenShearWidgetTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2D*                   OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2DLatentFactory*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector2DLatentFactory* UTweenVector2DLatentFactory::BP_JoinLatentTweenShearWidgetTo(class UTweenContainer*& TweenContainer, class UTweenVector2D*& OutTween, class UWidget*& TweenTarget, const struct FVector2D& To, float Duration, ETweenEaseType EaseType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVector2DLatentFactory", "BP_JoinLatentTweenShearWidgetTo");

	Params::TweenVector2DLatentFactory_BP_JoinLatentTweenShearWidgetTo Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.OutTween = OutTween;
	Parms.TweenTarget = TweenTarget;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	OutTween = Parms.OutTween;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVector2DStandardFactory.BP_AppendTweenCustomVector2D
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        From                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2D*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector2D* UTweenVector2DStandardFactory::BP_AppendTweenCustomVector2D(class UTweenContainer*& TweenContainer, class UObject*& TweenTarget, const struct FVector2D& From, const struct FVector2D& To, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVector2DStandardFactory", "BP_AppendTweenCustomVector2D");

	Params::TweenVector2DStandardFactory_BP_AppendTweenCustomVector2D Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.TweenTarget = TweenTarget;
	Parms.From = std::move(From);
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVector2DStandardFactory.BP_AppendTweenMoveWidgetBy
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2D*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector2D* UTweenVector2DStandardFactory::BP_AppendTweenMoveWidgetBy(class UTweenContainer*& TweenContainer, class UWidget*& TweenTarget, const struct FVector2D& bY, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVector2DStandardFactory", "BP_AppendTweenMoveWidgetBy");

	Params::TweenVector2DStandardFactory_BP_AppendTweenMoveWidgetBy Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.TweenTarget = TweenTarget;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVector2DStandardFactory.BP_AppendTweenMoveWidgetTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2D*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector2D* UTweenVector2DStandardFactory::BP_AppendTweenMoveWidgetTo(class UTweenContainer*& TweenContainer, class UWidget*& TweenTarget, const struct FVector2D& To, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVector2DStandardFactory", "BP_AppendTweenMoveWidgetTo");

	Params::TweenVector2DStandardFactory_BP_AppendTweenMoveWidgetTo Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.TweenTarget = TweenTarget;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVector2DStandardFactory.BP_AppendTweenScaleWidgetBy
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2D*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector2D* UTweenVector2DStandardFactory::BP_AppendTweenScaleWidgetBy(class UTweenContainer*& TweenContainer, class UWidget*& TweenTarget, const struct FVector2D& bY, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVector2DStandardFactory", "BP_AppendTweenScaleWidgetBy");

	Params::TweenVector2DStandardFactory_BP_AppendTweenScaleWidgetBy Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.TweenTarget = TweenTarget;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVector2DStandardFactory.BP_AppendTweenScaleWidgetTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2D*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector2D* UTweenVector2DStandardFactory::BP_AppendTweenScaleWidgetTo(class UTweenContainer*& TweenContainer, class UWidget*& TweenTarget, const struct FVector2D& To, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVector2DStandardFactory", "BP_AppendTweenScaleWidgetTo");

	Params::TweenVector2DStandardFactory_BP_AppendTweenScaleWidgetTo Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.TweenTarget = TweenTarget;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVector2DStandardFactory.BP_AppendTweenShearWidgetTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2D*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector2D* UTweenVector2DStandardFactory::BP_AppendTweenShearWidgetTo(class UTweenContainer*& TweenContainer, class UWidget*& TweenTarget, const struct FVector2D& To, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVector2DStandardFactory", "BP_AppendTweenShearWidgetTo");

	Params::TweenVector2DStandardFactory_BP_AppendTweenShearWidgetTo Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.TweenTarget = TweenTarget;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVector2DStandardFactory.BP_CreateTweenCustomVector2D
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenManagerComponent*           TweenManager                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2D*                   Tween                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        From                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTweenVector2DStandardFactory::BP_CreateTweenCustomVector2D(class UTweenManagerComponent* TweenManager, class UObject*& TweenTarget, class UTweenContainer** TweenContainer, class UTweenVector2D** Tween, const struct FVector2D& From, const struct FVector2D& To, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVector2DStandardFactory", "BP_CreateTweenCustomVector2D");

	Params::TweenVector2DStandardFactory_BP_CreateTweenCustomVector2D Parms{};

	Parms.TweenManager = TweenManager;
	Parms.TweenTarget = TweenTarget;
	Parms.From = std::move(From);
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	if (TweenContainer != nullptr)
		*TweenContainer = Parms.TweenContainer;

	if (Tween != nullptr)
		*Tween = Parms.Tween;
}


// Function TweenMaker.TweenVector2DStandardFactory.BP_CreateTweenMoveWidgetBy
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenManagerComponent*           TweenManager                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2D*                   Tween                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTweenVector2DStandardFactory::BP_CreateTweenMoveWidgetBy(class UTweenManagerComponent* TweenManager, class UWidget*& TweenTarget, class UTweenContainer** TweenContainer, class UTweenVector2D** Tween, const struct FVector2D& bY, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVector2DStandardFactory", "BP_CreateTweenMoveWidgetBy");

	Params::TweenVector2DStandardFactory_BP_CreateTweenMoveWidgetBy Parms{};

	Parms.TweenManager = TweenManager;
	Parms.TweenTarget = TweenTarget;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	if (TweenContainer != nullptr)
		*TweenContainer = Parms.TweenContainer;

	if (Tween != nullptr)
		*Tween = Parms.Tween;
}


// Function TweenMaker.TweenVector2DStandardFactory.BP_CreateTweenMoveWidgetTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenManagerComponent*           TweenManager                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2D*                   Tween                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTweenVector2DStandardFactory::BP_CreateTweenMoveWidgetTo(class UTweenManagerComponent* TweenManager, class UWidget*& TweenTarget, class UTweenContainer** TweenContainer, class UTweenVector2D** Tween, const struct FVector2D& To, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVector2DStandardFactory", "BP_CreateTweenMoveWidgetTo");

	Params::TweenVector2DStandardFactory_BP_CreateTweenMoveWidgetTo Parms{};

	Parms.TweenManager = TweenManager;
	Parms.TweenTarget = TweenTarget;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	if (TweenContainer != nullptr)
		*TweenContainer = Parms.TweenContainer;

	if (Tween != nullptr)
		*Tween = Parms.Tween;
}


// Function TweenMaker.TweenVector2DStandardFactory.BP_CreateTweenScaleWidgetBy
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenManagerComponent*           TweenManager                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2D*                   Tween                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTweenVector2DStandardFactory::BP_CreateTweenScaleWidgetBy(class UTweenManagerComponent* TweenManager, class UWidget*& TweenTarget, class UTweenContainer** TweenContainer, class UTweenVector2D** Tween, const struct FVector2D& bY, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVector2DStandardFactory", "BP_CreateTweenScaleWidgetBy");

	Params::TweenVector2DStandardFactory_BP_CreateTweenScaleWidgetBy Parms{};

	Parms.TweenManager = TweenManager;
	Parms.TweenTarget = TweenTarget;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	if (TweenContainer != nullptr)
		*TweenContainer = Parms.TweenContainer;

	if (Tween != nullptr)
		*Tween = Parms.Tween;
}


// Function TweenMaker.TweenVector2DStandardFactory.BP_CreateTweenScaleWidgetTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenManagerComponent*           TweenManager                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2D*                   Tween                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTweenVector2DStandardFactory::BP_CreateTweenScaleWidgetTo(class UTweenManagerComponent* TweenManager, class UWidget*& TweenTarget, class UTweenContainer** TweenContainer, class UTweenVector2D** Tween, const struct FVector2D& To, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVector2DStandardFactory", "BP_CreateTweenScaleWidgetTo");

	Params::TweenVector2DStandardFactory_BP_CreateTweenScaleWidgetTo Parms{};

	Parms.TweenManager = TweenManager;
	Parms.TweenTarget = TweenTarget;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	if (TweenContainer != nullptr)
		*TweenContainer = Parms.TweenContainer;

	if (Tween != nullptr)
		*Tween = Parms.Tween;
}


// Function TweenMaker.TweenVector2DStandardFactory.BP_CreateTweenShearWidgetTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenManagerComponent*           TweenManager                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2D*                   Tween                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTweenVector2DStandardFactory::BP_CreateTweenShearWidgetTo(class UTweenManagerComponent* TweenManager, class UWidget*& TweenTarget, class UTweenContainer** TweenContainer, class UTweenVector2D** Tween, const struct FVector2D& To, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVector2DStandardFactory", "BP_CreateTweenShearWidgetTo");

	Params::TweenVector2DStandardFactory_BP_CreateTweenShearWidgetTo Parms{};

	Parms.TweenManager = TweenManager;
	Parms.TweenTarget = TweenTarget;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	if (TweenContainer != nullptr)
		*TweenContainer = Parms.TweenContainer;

	if (Tween != nullptr)
		*Tween = Parms.Tween;
}


// Function TweenMaker.TweenVector2DStandardFactory.BP_JoinTweenCustomVector2D
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        From                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2D*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector2D* UTweenVector2DStandardFactory::BP_JoinTweenCustomVector2D(class UTweenContainer*& TweenContainer, class UObject*& TweenTarget, const struct FVector2D& From, const struct FVector2D& To, float Duration, ETweenEaseType EaseType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVector2DStandardFactory", "BP_JoinTweenCustomVector2D");

	Params::TweenVector2DStandardFactory_BP_JoinTweenCustomVector2D Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.TweenTarget = TweenTarget;
	Parms.From = std::move(From);
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVector2DStandardFactory.BP_JoinTweenMoveWidgetBy
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2D*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector2D* UTweenVector2DStandardFactory::BP_JoinTweenMoveWidgetBy(class UTweenContainer*& TweenContainer, class UWidget*& TweenTarget, const struct FVector2D& bY, float Duration, ETweenEaseType EaseType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVector2DStandardFactory", "BP_JoinTweenMoveWidgetBy");

	Params::TweenVector2DStandardFactory_BP_JoinTweenMoveWidgetBy Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.TweenTarget = TweenTarget;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVector2DStandardFactory.BP_JoinTweenMoveWidgetTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2D*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector2D* UTweenVector2DStandardFactory::BP_JoinTweenMoveWidgetTo(class UTweenContainer*& TweenContainer, class UWidget*& TweenTarget, const struct FVector2D& To, float Duration, ETweenEaseType EaseType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVector2DStandardFactory", "BP_JoinTweenMoveWidgetTo");

	Params::TweenVector2DStandardFactory_BP_JoinTweenMoveWidgetTo Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.TweenTarget = TweenTarget;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVector2DStandardFactory.BP_JoinTweenScaleWidgetBy
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2D*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector2D* UTweenVector2DStandardFactory::BP_JoinTweenScaleWidgetBy(class UTweenContainer*& TweenContainer, class UWidget*& TweenTarget, const struct FVector2D& bY, float Duration, ETweenEaseType EaseType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVector2DStandardFactory", "BP_JoinTweenScaleWidgetBy");

	Params::TweenVector2DStandardFactory_BP_JoinTweenScaleWidgetBy Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.TweenTarget = TweenTarget;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVector2DStandardFactory.BP_JoinTweenScaleWidgetTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2D*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector2D* UTweenVector2DStandardFactory::BP_JoinTweenScaleWidgetTo(class UTweenContainer*& TweenContainer, class UWidget*& TweenTarget, const struct FVector2D& To, float Duration, ETweenEaseType EaseType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVector2DStandardFactory", "BP_JoinTweenScaleWidgetTo");

	Params::TweenVector2DStandardFactory_BP_JoinTweenScaleWidgetTo Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.TweenTarget = TweenTarget;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVector2DStandardFactory.BP_JoinTweenShearWidgetTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector2D*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector2D* UTweenVector2DStandardFactory::BP_JoinTweenShearWidgetTo(class UTweenContainer*& TweenContainer, class UWidget*& TweenTarget, const struct FVector2D& To, float Duration, ETweenEaseType EaseType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVector2DStandardFactory", "BP_JoinTweenShearWidgetTo");

	Params::TweenVector2DStandardFactory_BP_JoinTweenShearWidgetTo Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.TweenTarget = TweenTarget;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVectorLatentFactory.BP_AppendLatentTweenCustomVector
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          From                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVectorLatentFactory*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVectorLatentFactory* UTweenVectorLatentFactory::BP_AppendLatentTweenCustomVector(class UTweenContainer*& TweenContainer, class UTweenVector*& OutTween, class UObject*& TweenTarget, const struct FVector& From, const struct FVector& To, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVectorLatentFactory", "BP_AppendLatentTweenCustomVector");

	Params::TweenVectorLatentFactory_BP_AppendLatentTweenCustomVector Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.OutTween = OutTween;
	Parms.TweenTarget = TweenTarget;
	Parms.From = std::move(From);
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	OutTween = Parms.OutTween;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVectorLatentFactory.BP_AppendLatentTweenMoveActorBy
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVectorLatentFactory*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVectorLatentFactory* UTweenVectorLatentFactory::BP_AppendLatentTweenMoveActorBy(class UTweenContainer*& TweenContainer, class UTweenVector*& OutTween, class AActor*& TweenTarget, const struct FVector& bY, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVectorLatentFactory", "BP_AppendLatentTweenMoveActorBy");

	Params::TweenVectorLatentFactory_BP_AppendLatentTweenMoveActorBy Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.OutTween = OutTween;
	Parms.TweenTarget = TweenTarget;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	OutTween = Parms.OutTween;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVectorLatentFactory.BP_AppendLatentTweenMoveActorTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenSpace                             TweenSpace                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVectorLatentFactory*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVectorLatentFactory* UTweenVectorLatentFactory::BP_AppendLatentTweenMoveActorTo(class UTweenContainer*& TweenContainer, class UTweenVector*& OutTween, class AActor*& TweenTarget, const struct FVector& To, float Duration, ETweenEaseType EaseType, ETweenSpace TweenSpace, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVectorLatentFactory", "BP_AppendLatentTweenMoveActorTo");

	Params::TweenVectorLatentFactory_BP_AppendLatentTweenMoveActorTo Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.OutTween = OutTween;
	Parms.TweenTarget = TweenTarget;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.TweenSpace = TweenSpace;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	OutTween = Parms.OutTween;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVectorLatentFactory.BP_AppendLatentTweenMoveSceneComponentBy
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVectorLatentFactory*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVectorLatentFactory* UTweenVectorLatentFactory::BP_AppendLatentTweenMoveSceneComponentBy(class UTweenContainer*& TweenContainer, class UTweenVector*& OutTween, class USceneComponent*& TweenTarget, const struct FVector& bY, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVectorLatentFactory", "BP_AppendLatentTweenMoveSceneComponentBy");

	Params::TweenVectorLatentFactory_BP_AppendLatentTweenMoveSceneComponentBy Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.OutTween = OutTween;
	Parms.TweenTarget = TweenTarget;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	OutTween = Parms.OutTween;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVectorLatentFactory.BP_AppendLatentTweenMoveSceneComponentTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenSpace                             TweenSpace                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVectorLatentFactory*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVectorLatentFactory* UTweenVectorLatentFactory::BP_AppendLatentTweenMoveSceneComponentTo(class UTweenContainer*& TweenContainer, class UTweenVector*& OutTween, class USceneComponent*& TweenTarget, const struct FVector& To, float Duration, ETweenEaseType EaseType, ETweenSpace TweenSpace, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVectorLatentFactory", "BP_AppendLatentTweenMoveSceneComponentTo");

	Params::TweenVectorLatentFactory_BP_AppendLatentTweenMoveSceneComponentTo Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.OutTween = OutTween;
	Parms.TweenTarget = TweenTarget;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.TweenSpace = TweenSpace;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	OutTween = Parms.OutTween;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVectorLatentFactory.BP_AppendLatentTweenScaleActorBy
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVectorLatentFactory*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVectorLatentFactory* UTweenVectorLatentFactory::BP_AppendLatentTweenScaleActorBy(class UTweenContainer*& TweenContainer, class UTweenVector*& OutTween, class AActor*& TweenTarget, const struct FVector& bY, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVectorLatentFactory", "BP_AppendLatentTweenScaleActorBy");

	Params::TweenVectorLatentFactory_BP_AppendLatentTweenScaleActorBy Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.OutTween = OutTween;
	Parms.TweenTarget = TweenTarget;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	OutTween = Parms.OutTween;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVectorLatentFactory.BP_AppendLatentTweenScaleActorTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenSpace                             TweenSpace                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVectorLatentFactory*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVectorLatentFactory* UTweenVectorLatentFactory::BP_AppendLatentTweenScaleActorTo(class UTweenContainer*& TweenContainer, class UTweenVector*& OutTween, class AActor*& TweenTarget, const struct FVector& To, float Duration, ETweenEaseType EaseType, ETweenSpace TweenSpace, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVectorLatentFactory", "BP_AppendLatentTweenScaleActorTo");

	Params::TweenVectorLatentFactory_BP_AppendLatentTweenScaleActorTo Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.OutTween = OutTween;
	Parms.TweenTarget = TweenTarget;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.TweenSpace = TweenSpace;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	OutTween = Parms.OutTween;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVectorLatentFactory.BP_AppendLatentTweenScaleSceneComponentBy
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVectorLatentFactory*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVectorLatentFactory* UTweenVectorLatentFactory::BP_AppendLatentTweenScaleSceneComponentBy(class UTweenContainer*& TweenContainer, class UTweenVector*& OutTween, class USceneComponent*& TweenTarget, const struct FVector& bY, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVectorLatentFactory", "BP_AppendLatentTweenScaleSceneComponentBy");

	Params::TweenVectorLatentFactory_BP_AppendLatentTweenScaleSceneComponentBy Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.OutTween = OutTween;
	Parms.TweenTarget = TweenTarget;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	OutTween = Parms.OutTween;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVectorLatentFactory.BP_AppendLatentTweenScaleSceneComponentTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenSpace                             TweenSpace                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVectorLatentFactory*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVectorLatentFactory* UTweenVectorLatentFactory::BP_AppendLatentTweenScaleSceneComponentTo(class UTweenContainer*& TweenContainer, class UTweenVector*& OutTween, class USceneComponent*& TweenTarget, const struct FVector& To, float Duration, ETweenEaseType EaseType, ETweenSpace TweenSpace, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVectorLatentFactory", "BP_AppendLatentTweenScaleSceneComponentTo");

	Params::TweenVectorLatentFactory_BP_AppendLatentTweenScaleSceneComponentTo Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.OutTween = OutTween;
	Parms.TweenTarget = TweenTarget;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.TweenSpace = TweenSpace;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	OutTween = Parms.OutTween;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVectorLatentFactory.BP_CreateLatentTweenCustomVector
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenManagerComponent*           TweenManager                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenContainer*                  OutTweenContainer                                      (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          From                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVectorLatentFactory*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVectorLatentFactory* UTweenVectorLatentFactory::BP_CreateLatentTweenCustomVector(class UTweenManagerComponent* TweenManager, class UObject*& TweenTarget, class UTweenContainer*& OutTweenContainer, class UTweenVector*& OutTween, const struct FVector& From, const struct FVector& To, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVectorLatentFactory", "BP_CreateLatentTweenCustomVector");

	Params::TweenVectorLatentFactory_BP_CreateLatentTweenCustomVector Parms{};

	Parms.TweenManager = TweenManager;
	Parms.TweenTarget = TweenTarget;
	Parms.OutTweenContainer = OutTweenContainer;
	Parms.OutTween = OutTween;
	Parms.From = std::move(From);
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;
	OutTweenContainer = Parms.OutTweenContainer;
	OutTween = Parms.OutTween;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVectorLatentFactory.BP_CreateLatentTweenMoveActorBy
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenManagerComponent*           TweenManager                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenContainer*                  OutTweenContainer                                      (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVectorLatentFactory*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVectorLatentFactory* UTweenVectorLatentFactory::BP_CreateLatentTweenMoveActorBy(class UTweenManagerComponent* TweenManager, class AActor*& TweenTarget, class UTweenContainer*& OutTweenContainer, class UTweenVector*& OutTween, const struct FVector& bY, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVectorLatentFactory", "BP_CreateLatentTweenMoveActorBy");

	Params::TweenVectorLatentFactory_BP_CreateLatentTweenMoveActorBy Parms{};

	Parms.TweenManager = TweenManager;
	Parms.TweenTarget = TweenTarget;
	Parms.OutTweenContainer = OutTweenContainer;
	Parms.OutTween = OutTween;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;
	OutTweenContainer = Parms.OutTweenContainer;
	OutTween = Parms.OutTween;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVectorLatentFactory.BP_CreateLatentTweenMoveActorTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenManagerComponent*           TweenManager                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenContainer*                  OutTweenContainer                                      (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenSpace                             TweenSpace                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVectorLatentFactory*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVectorLatentFactory* UTweenVectorLatentFactory::BP_CreateLatentTweenMoveActorTo(class UTweenManagerComponent* TweenManager, class AActor*& TweenTarget, class UTweenContainer*& OutTweenContainer, class UTweenVector*& OutTween, const struct FVector& To, float Duration, ETweenEaseType EaseType, ETweenSpace TweenSpace, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVectorLatentFactory", "BP_CreateLatentTweenMoveActorTo");

	Params::TweenVectorLatentFactory_BP_CreateLatentTweenMoveActorTo Parms{};

	Parms.TweenManager = TweenManager;
	Parms.TweenTarget = TweenTarget;
	Parms.OutTweenContainer = OutTweenContainer;
	Parms.OutTween = OutTween;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.TweenSpace = TweenSpace;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;
	OutTweenContainer = Parms.OutTweenContainer;
	OutTween = Parms.OutTween;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVectorLatentFactory.BP_CreateLatentTweenMoveSceneComponentBy
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenManagerComponent*           TweenManager                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenContainer*                  OutTweenContainer                                      (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVectorLatentFactory*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVectorLatentFactory* UTweenVectorLatentFactory::BP_CreateLatentTweenMoveSceneComponentBy(class UTweenManagerComponent* TweenManager, class USceneComponent*& TweenTarget, class UTweenContainer*& OutTweenContainer, class UTweenVector*& OutTween, const struct FVector& bY, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVectorLatentFactory", "BP_CreateLatentTweenMoveSceneComponentBy");

	Params::TweenVectorLatentFactory_BP_CreateLatentTweenMoveSceneComponentBy Parms{};

	Parms.TweenManager = TweenManager;
	Parms.TweenTarget = TweenTarget;
	Parms.OutTweenContainer = OutTweenContainer;
	Parms.OutTween = OutTween;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;
	OutTweenContainer = Parms.OutTweenContainer;
	OutTween = Parms.OutTween;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVectorLatentFactory.BP_CreateLatentTweenMoveSceneComponentTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenManagerComponent*           TweenManager                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenContainer*                  OutTweenContainer                                      (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenSpace                             TweenSpace                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVectorLatentFactory*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVectorLatentFactory* UTweenVectorLatentFactory::BP_CreateLatentTweenMoveSceneComponentTo(class UTweenManagerComponent* TweenManager, class USceneComponent*& TweenTarget, class UTweenContainer*& OutTweenContainer, class UTweenVector*& OutTween, const struct FVector& To, float Duration, ETweenEaseType EaseType, ETweenSpace TweenSpace, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVectorLatentFactory", "BP_CreateLatentTweenMoveSceneComponentTo");

	Params::TweenVectorLatentFactory_BP_CreateLatentTweenMoveSceneComponentTo Parms{};

	Parms.TweenManager = TweenManager;
	Parms.TweenTarget = TweenTarget;
	Parms.OutTweenContainer = OutTweenContainer;
	Parms.OutTween = OutTween;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.TweenSpace = TweenSpace;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;
	OutTweenContainer = Parms.OutTweenContainer;
	OutTween = Parms.OutTween;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVectorLatentFactory.BP_CreateLatentTweenScaleActorBy
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenManagerComponent*           TweenManager                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenContainer*                  OutTweenContainer                                      (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVectorLatentFactory*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVectorLatentFactory* UTweenVectorLatentFactory::BP_CreateLatentTweenScaleActorBy(class UTweenManagerComponent* TweenManager, class AActor*& TweenTarget, class UTweenContainer*& OutTweenContainer, class UTweenVector*& OutTween, const struct FVector& bY, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVectorLatentFactory", "BP_CreateLatentTweenScaleActorBy");

	Params::TweenVectorLatentFactory_BP_CreateLatentTweenScaleActorBy Parms{};

	Parms.TweenManager = TweenManager;
	Parms.TweenTarget = TweenTarget;
	Parms.OutTweenContainer = OutTweenContainer;
	Parms.OutTween = OutTween;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;
	OutTweenContainer = Parms.OutTweenContainer;
	OutTween = Parms.OutTween;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVectorLatentFactory.BP_CreateLatentTweenScaleActorTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenManagerComponent*           TweenManager                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TweenTarget                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenContainer*                  OutTweenContainer                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     OutTween                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenSpace                             TweenSpace                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVectorLatentFactory*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVectorLatentFactory* UTweenVectorLatentFactory::BP_CreateLatentTweenScaleActorTo(class UTweenManagerComponent* TweenManager, class AActor* TweenTarget, class UTweenContainer** OutTweenContainer, class UTweenVector** OutTween, const struct FVector& To, float Duration, ETweenEaseType EaseType, ETweenSpace TweenSpace, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVectorLatentFactory", "BP_CreateLatentTweenScaleActorTo");

	Params::TweenVectorLatentFactory_BP_CreateLatentTweenScaleActorTo Parms{};

	Parms.TweenManager = TweenManager;
	Parms.TweenTarget = TweenTarget;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.TweenSpace = TweenSpace;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTweenContainer != nullptr)
		*OutTweenContainer = Parms.OutTweenContainer;

	if (OutTween != nullptr)
		*OutTween = Parms.OutTween;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVectorLatentFactory.BP_CreateLatentTweenScaleSceneComponentBy
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenManagerComponent*           TweenManager                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenContainer*                  OutTweenContainer                                      (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVectorLatentFactory*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVectorLatentFactory* UTweenVectorLatentFactory::BP_CreateLatentTweenScaleSceneComponentBy(class UTweenManagerComponent* TweenManager, class USceneComponent*& TweenTarget, class UTweenContainer*& OutTweenContainer, class UTweenVector*& OutTween, const struct FVector& bY, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVectorLatentFactory", "BP_CreateLatentTweenScaleSceneComponentBy");

	Params::TweenVectorLatentFactory_BP_CreateLatentTweenScaleSceneComponentBy Parms{};

	Parms.TweenManager = TweenManager;
	Parms.TweenTarget = TweenTarget;
	Parms.OutTweenContainer = OutTweenContainer;
	Parms.OutTween = OutTween;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;
	OutTweenContainer = Parms.OutTweenContainer;
	OutTween = Parms.OutTween;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVectorLatentFactory.BP_CreateLatentTweenScaleSceneComponentTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenManagerComponent*           TweenManager                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenContainer*                  OutTweenContainer                                      (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenSpace                             TweenSpace                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVectorLatentFactory*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVectorLatentFactory* UTweenVectorLatentFactory::BP_CreateLatentTweenScaleSceneComponentTo(class UTweenManagerComponent* TweenManager, class USceneComponent*& TweenTarget, class UTweenContainer*& OutTweenContainer, class UTweenVector*& OutTween, const struct FVector& To, float Duration, ETweenEaseType EaseType, ETweenSpace TweenSpace, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVectorLatentFactory", "BP_CreateLatentTweenScaleSceneComponentTo");

	Params::TweenVectorLatentFactory_BP_CreateLatentTweenScaleSceneComponentTo Parms{};

	Parms.TweenManager = TweenManager;
	Parms.TweenTarget = TweenTarget;
	Parms.OutTweenContainer = OutTweenContainer;
	Parms.OutTween = OutTween;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.TweenSpace = TweenSpace;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;
	OutTweenContainer = Parms.OutTweenContainer;
	OutTween = Parms.OutTween;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVectorLatentFactory.BP_JoinLatentTweenCustomVector
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          From                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVectorLatentFactory*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVectorLatentFactory* UTweenVectorLatentFactory::BP_JoinLatentTweenCustomVector(class UTweenContainer*& TweenContainer, class UTweenVector*& OutTween, class UObject*& TweenTarget, const struct FVector& From, const struct FVector& To, float Duration, ETweenEaseType EaseType, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVectorLatentFactory", "BP_JoinLatentTweenCustomVector");

	Params::TweenVectorLatentFactory_BP_JoinLatentTweenCustomVector Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.OutTween = OutTween;
	Parms.TweenTarget = TweenTarget;
	Parms.From = std::move(From);
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	OutTween = Parms.OutTween;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVectorLatentFactory.BP_JoinLatentTweenMoveActorBy
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVectorLatentFactory*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVectorLatentFactory* UTweenVectorLatentFactory::BP_JoinLatentTweenMoveActorBy(class UTweenContainer*& TweenContainer, class UTweenVector*& OutTween, class AActor*& TweenTarget, const struct FVector& bY, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVectorLatentFactory", "BP_JoinLatentTweenMoveActorBy");

	Params::TweenVectorLatentFactory_BP_JoinLatentTweenMoveActorBy Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.OutTween = OutTween;
	Parms.TweenTarget = TweenTarget;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	OutTween = Parms.OutTween;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVectorLatentFactory.BP_JoinLatentTweenMoveActorTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenSpace                             TweenSpace                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVectorLatentFactory*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVectorLatentFactory* UTweenVectorLatentFactory::BP_JoinLatentTweenMoveActorTo(class UTweenContainer*& TweenContainer, class UTweenVector*& OutTween, class AActor*& TweenTarget, const struct FVector& To, float Duration, ETweenEaseType EaseType, ETweenSpace TweenSpace, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVectorLatentFactory", "BP_JoinLatentTweenMoveActorTo");

	Params::TweenVectorLatentFactory_BP_JoinLatentTweenMoveActorTo Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.OutTween = OutTween;
	Parms.TweenTarget = TweenTarget;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.TweenSpace = TweenSpace;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	OutTween = Parms.OutTween;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVectorLatentFactory.BP_JoinLatentTweenMoveSceneComponentBy
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVectorLatentFactory*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVectorLatentFactory* UTweenVectorLatentFactory::BP_JoinLatentTweenMoveSceneComponentBy(class UTweenContainer*& TweenContainer, class UTweenVector*& OutTween, class USceneComponent*& TweenTarget, const struct FVector& bY, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVectorLatentFactory", "BP_JoinLatentTweenMoveSceneComponentBy");

	Params::TweenVectorLatentFactory_BP_JoinLatentTweenMoveSceneComponentBy Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.OutTween = OutTween;
	Parms.TweenTarget = TweenTarget;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	OutTween = Parms.OutTween;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVectorLatentFactory.BP_JoinLatentTweenMoveSceneComponentTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenSpace                             TweenSpace                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVectorLatentFactory*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVectorLatentFactory* UTweenVectorLatentFactory::BP_JoinLatentTweenMoveSceneComponentTo(class UTweenContainer*& TweenContainer, class UTweenVector*& OutTween, class USceneComponent*& TweenTarget, const struct FVector& To, float Duration, ETweenEaseType EaseType, ETweenSpace TweenSpace, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVectorLatentFactory", "BP_JoinLatentTweenMoveSceneComponentTo");

	Params::TweenVectorLatentFactory_BP_JoinLatentTweenMoveSceneComponentTo Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.OutTween = OutTween;
	Parms.TweenTarget = TweenTarget;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.TweenSpace = TweenSpace;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	OutTween = Parms.OutTween;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVectorLatentFactory.BP_JoinLatentTweenScaleActorBy
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVectorLatentFactory*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVectorLatentFactory* UTweenVectorLatentFactory::BP_JoinLatentTweenScaleActorBy(class UTweenContainer*& TweenContainer, class UTweenVector*& OutTween, class AActor*& TweenTarget, const struct FVector& bY, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVectorLatentFactory", "BP_JoinLatentTweenScaleActorBy");

	Params::TweenVectorLatentFactory_BP_JoinLatentTweenScaleActorBy Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.OutTween = OutTween;
	Parms.TweenTarget = TweenTarget;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	OutTween = Parms.OutTween;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVectorLatentFactory.BP_JoinLatentTweenScaleActorTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenSpace                             TweenSpace                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVectorLatentFactory*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVectorLatentFactory* UTweenVectorLatentFactory::BP_JoinLatentTweenScaleActorTo(class UTweenContainer*& TweenContainer, class UTweenVector*& OutTween, class AActor*& TweenTarget, const struct FVector& To, float Duration, ETweenEaseType EaseType, ETweenSpace TweenSpace, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVectorLatentFactory", "BP_JoinLatentTweenScaleActorTo");

	Params::TweenVectorLatentFactory_BP_JoinLatentTweenScaleActorTo Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.OutTween = OutTween;
	Parms.TweenTarget = TweenTarget;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.TweenSpace = TweenSpace;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	OutTween = Parms.OutTween;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVectorLatentFactory.BP_JoinLatentTweenScaleSceneComponentBy
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVectorLatentFactory*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVectorLatentFactory* UTweenVectorLatentFactory::BP_JoinLatentTweenScaleSceneComponentBy(class UTweenContainer*& TweenContainer, class UTweenVector*& OutTween, class USceneComponent*& TweenTarget, const struct FVector& bY, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVectorLatentFactory", "BP_JoinLatentTweenScaleSceneComponentBy");

	Params::TweenVectorLatentFactory_BP_JoinLatentTweenScaleSceneComponentBy Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.OutTween = OutTween;
	Parms.TweenTarget = TweenTarget;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	OutTween = Parms.OutTween;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVectorLatentFactory.BP_JoinLatentTweenScaleSceneComponentTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     OutTween                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenSpace                             TweenSpace                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVectorLatentFactory*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVectorLatentFactory* UTweenVectorLatentFactory::BP_JoinLatentTweenScaleSceneComponentTo(class UTweenContainer*& TweenContainer, class UTweenVector*& OutTween, class USceneComponent*& TweenTarget, const struct FVector& To, float Duration, ETweenEaseType EaseType, ETweenSpace TweenSpace, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, float Delay, float TimeScale, bool TweenWhileGameIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVectorLatentFactory", "BP_JoinLatentTweenScaleSceneComponentTo");

	Params::TweenVectorLatentFactory_BP_JoinLatentTweenScaleSceneComponentTo Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.OutTween = OutTween;
	Parms.TweenTarget = TweenTarget;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.TweenSpace = TweenSpace;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	OutTween = Parms.OutTween;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVectorStandardFactory.BP_AppendTweenCustomVector
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          From                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector* UTweenVectorStandardFactory::BP_AppendTweenCustomVector(class UTweenContainer*& TweenContainer, class UObject*& TweenTarget, const struct FVector& From, const struct FVector& To, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVectorStandardFactory", "BP_AppendTweenCustomVector");

	Params::TweenVectorStandardFactory_BP_AppendTweenCustomVector Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.TweenTarget = TweenTarget;
	Parms.From = std::move(From);
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVectorStandardFactory.BP_AppendTweenMoveActorBy
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector* UTweenVectorStandardFactory::BP_AppendTweenMoveActorBy(class UTweenContainer*& TweenContainer, class AActor*& TweenTarget, const struct FVector& bY, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVectorStandardFactory", "BP_AppendTweenMoveActorBy");

	Params::TweenVectorStandardFactory_BP_AppendTweenMoveActorBy Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.TweenTarget = TweenTarget;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVectorStandardFactory.BP_AppendTweenMoveActorTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenSpace                             TweenSpace                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector* UTweenVectorStandardFactory::BP_AppendTweenMoveActorTo(class UTweenContainer*& TweenContainer, class AActor*& TweenTarget, const struct FVector& To, float Duration, ETweenEaseType EaseType, ETweenSpace TweenSpace, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVectorStandardFactory", "BP_AppendTweenMoveActorTo");

	Params::TweenVectorStandardFactory_BP_AppendTweenMoveActorTo Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.TweenTarget = TweenTarget;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.TweenSpace = TweenSpace;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVectorStandardFactory.BP_AppendTweenMoveSceneComponentBy
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector* UTweenVectorStandardFactory::BP_AppendTweenMoveSceneComponentBy(class UTweenContainer*& TweenContainer, class USceneComponent*& TweenTarget, const struct FVector& bY, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVectorStandardFactory", "BP_AppendTweenMoveSceneComponentBy");

	Params::TweenVectorStandardFactory_BP_AppendTweenMoveSceneComponentBy Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.TweenTarget = TweenTarget;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVectorStandardFactory.BP_AppendTweenMoveSceneComponentTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenSpace                             TweenSpace                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector* UTweenVectorStandardFactory::BP_AppendTweenMoveSceneComponentTo(class UTweenContainer*& TweenContainer, class USceneComponent*& TweenTarget, const struct FVector& To, float Duration, ETweenEaseType EaseType, ETweenSpace TweenSpace, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVectorStandardFactory", "BP_AppendTweenMoveSceneComponentTo");

	Params::TweenVectorStandardFactory_BP_AppendTweenMoveSceneComponentTo Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.TweenTarget = TweenTarget;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.TweenSpace = TweenSpace;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVectorStandardFactory.BP_AppendTweenScaleActorBy
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector* UTweenVectorStandardFactory::BP_AppendTweenScaleActorBy(class UTweenContainer*& TweenContainer, class AActor*& TweenTarget, const struct FVector& bY, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVectorStandardFactory", "BP_AppendTweenScaleActorBy");

	Params::TweenVectorStandardFactory_BP_AppendTweenScaleActorBy Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.TweenTarget = TweenTarget;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVectorStandardFactory.BP_AppendTweenScaleActorTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenSpace                             TweenSpace                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector* UTweenVectorStandardFactory::BP_AppendTweenScaleActorTo(class UTweenContainer*& TweenContainer, class AActor*& TweenTarget, const struct FVector& To, float Duration, ETweenEaseType EaseType, ETweenSpace TweenSpace, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVectorStandardFactory", "BP_AppendTweenScaleActorTo");

	Params::TweenVectorStandardFactory_BP_AppendTweenScaleActorTo Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.TweenTarget = TweenTarget;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.TweenSpace = TweenSpace;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVectorStandardFactory.BP_AppendTweenScaleSceneComponentBy
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector* UTweenVectorStandardFactory::BP_AppendTweenScaleSceneComponentBy(class UTweenContainer*& TweenContainer, class USceneComponent*& TweenTarget, const struct FVector& bY, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVectorStandardFactory", "BP_AppendTweenScaleSceneComponentBy");

	Params::TweenVectorStandardFactory_BP_AppendTweenScaleSceneComponentBy Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.TweenTarget = TweenTarget;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVectorStandardFactory.BP_AppendTweenScaleSceneComponentTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenSpace                             TweenSpace                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector* UTweenVectorStandardFactory::BP_AppendTweenScaleSceneComponentTo(class UTweenContainer*& TweenContainer, class USceneComponent*& TweenTarget, const struct FVector& To, float Duration, ETweenEaseType EaseType, ETweenSpace TweenSpace, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVectorStandardFactory", "BP_AppendTweenScaleSceneComponentTo");

	Params::TweenVectorStandardFactory_BP_AppendTweenScaleSceneComponentTo Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.TweenTarget = TweenTarget;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.TweenSpace = TweenSpace;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVectorStandardFactory.BP_CreateTweenCustomVector
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenManagerComponent*           TweenManager                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     Tween                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          From                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTweenVectorStandardFactory::BP_CreateTweenCustomVector(class UTweenManagerComponent* TweenManager, class UObject*& TweenTarget, class UTweenContainer** TweenContainer, class UTweenVector** Tween, const struct FVector& From, const struct FVector& To, float Duration, ETweenEaseType EaseType, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVectorStandardFactory", "BP_CreateTweenCustomVector");

	Params::TweenVectorStandardFactory_BP_CreateTweenCustomVector Parms{};

	Parms.TweenManager = TweenManager;
	Parms.TweenTarget = TweenTarget;
	Parms.From = std::move(From);
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	if (TweenContainer != nullptr)
		*TweenContainer = Parms.TweenContainer;

	if (Tween != nullptr)
		*Tween = Parms.Tween;
}


// Function TweenMaker.TweenVectorStandardFactory.BP_CreateTweenMoveActorBy
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenManagerComponent*           TweenManager                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     Tween                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTweenVectorStandardFactory::BP_CreateTweenMoveActorBy(class UTweenManagerComponent* TweenManager, class AActor*& TweenTarget, class UTweenContainer** TweenContainer, class UTweenVector** Tween, const struct FVector& bY, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVectorStandardFactory", "BP_CreateTweenMoveActorBy");

	Params::TweenVectorStandardFactory_BP_CreateTweenMoveActorBy Parms{};

	Parms.TweenManager = TweenManager;
	Parms.TweenTarget = TweenTarget;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	if (TweenContainer != nullptr)
		*TweenContainer = Parms.TweenContainer;

	if (Tween != nullptr)
		*Tween = Parms.Tween;
}


// Function TweenMaker.TweenVectorStandardFactory.BP_CreateTweenMoveActorTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenManagerComponent*           TweenManager                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     Tween                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenSpace                             TweenSpace                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTweenVectorStandardFactory::BP_CreateTweenMoveActorTo(class UTweenManagerComponent* TweenManager, class AActor*& TweenTarget, class UTweenContainer** TweenContainer, class UTweenVector** Tween, const struct FVector& To, float Duration, ETweenEaseType EaseType, ETweenSpace TweenSpace, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVectorStandardFactory", "BP_CreateTweenMoveActorTo");

	Params::TweenVectorStandardFactory_BP_CreateTweenMoveActorTo Parms{};

	Parms.TweenManager = TweenManager;
	Parms.TweenTarget = TweenTarget;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.TweenSpace = TweenSpace;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	if (TweenContainer != nullptr)
		*TweenContainer = Parms.TweenContainer;

	if (Tween != nullptr)
		*Tween = Parms.Tween;
}


// Function TweenMaker.TweenVectorStandardFactory.BP_CreateTweenMoveSceneComponentBy
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenManagerComponent*           TweenManager                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     Tween                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTweenVectorStandardFactory::BP_CreateTweenMoveSceneComponentBy(class UTweenManagerComponent* TweenManager, class USceneComponent*& TweenTarget, class UTweenContainer** TweenContainer, class UTweenVector** Tween, const struct FVector& bY, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVectorStandardFactory", "BP_CreateTweenMoveSceneComponentBy");

	Params::TweenVectorStandardFactory_BP_CreateTweenMoveSceneComponentBy Parms{};

	Parms.TweenManager = TweenManager;
	Parms.TweenTarget = TweenTarget;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	if (TweenContainer != nullptr)
		*TweenContainer = Parms.TweenContainer;

	if (Tween != nullptr)
		*Tween = Parms.Tween;
}


// Function TweenMaker.TweenVectorStandardFactory.BP_CreateTweenMoveSceneComponentTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenManagerComponent*           TweenManager                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     Tween                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenSpace                             TweenSpace                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTweenVectorStandardFactory::BP_CreateTweenMoveSceneComponentTo(class UTweenManagerComponent* TweenManager, class USceneComponent*& TweenTarget, class UTweenContainer** TweenContainer, class UTweenVector** Tween, const struct FVector& To, float Duration, ETweenEaseType EaseType, ETweenSpace TweenSpace, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVectorStandardFactory", "BP_CreateTweenMoveSceneComponentTo");

	Params::TweenVectorStandardFactory_BP_CreateTweenMoveSceneComponentTo Parms{};

	Parms.TweenManager = TweenManager;
	Parms.TweenTarget = TweenTarget;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.TweenSpace = TweenSpace;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	if (TweenContainer != nullptr)
		*TweenContainer = Parms.TweenContainer;

	if (Tween != nullptr)
		*Tween = Parms.Tween;
}


// Function TweenMaker.TweenVectorStandardFactory.BP_CreateTweenScaleActorBy
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenManagerComponent*           TweenManager                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     Tween                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTweenVectorStandardFactory::BP_CreateTweenScaleActorBy(class UTweenManagerComponent* TweenManager, class AActor*& TweenTarget, class UTweenContainer** TweenContainer, class UTweenVector** Tween, const struct FVector& bY, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVectorStandardFactory", "BP_CreateTweenScaleActorBy");

	Params::TweenVectorStandardFactory_BP_CreateTweenScaleActorBy Parms{};

	Parms.TweenManager = TweenManager;
	Parms.TweenTarget = TweenTarget;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	if (TweenContainer != nullptr)
		*TweenContainer = Parms.TweenContainer;

	if (Tween != nullptr)
		*Tween = Parms.Tween;
}


// Function TweenMaker.TweenVectorStandardFactory.BP_CreateTweenScaleActorTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenManagerComponent*           TweenManager                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     Tween                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenSpace                             TweenSpace                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTweenVectorStandardFactory::BP_CreateTweenScaleActorTo(class UTweenManagerComponent* TweenManager, class AActor*& TweenTarget, class UTweenContainer** TweenContainer, class UTweenVector** Tween, const struct FVector& To, float Duration, ETweenEaseType EaseType, ETweenSpace TweenSpace, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVectorStandardFactory", "BP_CreateTweenScaleActorTo");

	Params::TweenVectorStandardFactory_BP_CreateTweenScaleActorTo Parms{};

	Parms.TweenManager = TweenManager;
	Parms.TweenTarget = TweenTarget;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.TweenSpace = TweenSpace;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	if (TweenContainer != nullptr)
		*TweenContainer = Parms.TweenContainer;

	if (Tween != nullptr)
		*Tween = Parms.Tween;
}


// Function TweenMaker.TweenVectorStandardFactory.BP_CreateTweenScaleSceneComponentBy
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenManagerComponent*           TweenManager                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     Tween                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTweenVectorStandardFactory::BP_CreateTweenScaleSceneComponentBy(class UTweenManagerComponent* TweenManager, class USceneComponent*& TweenTarget, class UTweenContainer** TweenContainer, class UTweenVector** Tween, const struct FVector& bY, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVectorStandardFactory", "BP_CreateTweenScaleSceneComponentBy");

	Params::TweenVectorStandardFactory_BP_CreateTweenScaleSceneComponentBy Parms{};

	Parms.TweenManager = TweenManager;
	Parms.TweenTarget = TweenTarget;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	if (TweenContainer != nullptr)
		*TweenContainer = Parms.TweenContainer;

	if (Tween != nullptr)
		*Tween = Parms.Tween;
}


// Function TweenMaker.TweenVectorStandardFactory.BP_CreateTweenScaleSceneComponentTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenManagerComponent*           TweenManager                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     Tween                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenSpace                             TweenSpace                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoops                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTweenVectorStandardFactory::BP_CreateTweenScaleSceneComponentTo(class UTweenManagerComponent* TweenManager, class USceneComponent*& TweenTarget, class UTweenContainer** TweenContainer, class UTweenVector** Tween, const struct FVector& To, float Duration, ETweenEaseType EaseType, ETweenSpace TweenSpace, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, int32 NumLoops, ETweenLoopType LoopType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVectorStandardFactory", "BP_CreateTweenScaleSceneComponentTo");

	Params::TweenVectorStandardFactory_BP_CreateTweenScaleSceneComponentTo Parms{};

	Parms.TweenManager = TweenManager;
	Parms.TweenTarget = TweenTarget;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.TweenSpace = TweenSpace;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.NumLoops = NumLoops;
	Parms.LoopType = LoopType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenTarget = Parms.TweenTarget;

	if (TweenContainer != nullptr)
		*TweenContainer = Parms.TweenContainer;

	if (Tween != nullptr)
		*Tween = Parms.Tween;
}


// Function TweenMaker.TweenVectorStandardFactory.BP_JoinTweenCustomVector
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          From                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector* UTweenVectorStandardFactory::BP_JoinTweenCustomVector(class UTweenContainer*& TweenContainer, class UObject*& TweenTarget, const struct FVector& From, const struct FVector& To, float Duration, ETweenEaseType EaseType, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVectorStandardFactory", "BP_JoinTweenCustomVector");

	Params::TweenVectorStandardFactory_BP_JoinTweenCustomVector Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.TweenTarget = TweenTarget;
	Parms.From = std::move(From);
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVectorStandardFactory.BP_JoinTweenMoveActorBy
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector* UTweenVectorStandardFactory::BP_JoinTweenMoveActorBy(class UTweenContainer*& TweenContainer, class AActor*& TweenTarget, const struct FVector& bY, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVectorStandardFactory", "BP_JoinTweenMoveActorBy");

	Params::TweenVectorStandardFactory_BP_JoinTweenMoveActorBy Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.TweenTarget = TweenTarget;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVectorStandardFactory.BP_JoinTweenMoveActorTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenSpace                             TweenSpace                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector* UTweenVectorStandardFactory::BP_JoinTweenMoveActorTo(class UTweenContainer*& TweenContainer, class AActor*& TweenTarget, const struct FVector& To, float Duration, ETweenEaseType EaseType, ETweenSpace TweenSpace, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVectorStandardFactory", "BP_JoinTweenMoveActorTo");

	Params::TweenVectorStandardFactory_BP_JoinTweenMoveActorTo Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.TweenTarget = TweenTarget;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.TweenSpace = TweenSpace;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVectorStandardFactory.BP_JoinTweenMoveSceneComponentBy
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector* UTweenVectorStandardFactory::BP_JoinTweenMoveSceneComponentBy(class UTweenContainer*& TweenContainer, class USceneComponent*& TweenTarget, const struct FVector& bY, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVectorStandardFactory", "BP_JoinTweenMoveSceneComponentBy");

	Params::TweenVectorStandardFactory_BP_JoinTweenMoveSceneComponentBy Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.TweenTarget = TweenTarget;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVectorStandardFactory.BP_JoinTweenMoveSceneComponentTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenSpace                             TweenSpace                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector* UTweenVectorStandardFactory::BP_JoinTweenMoveSceneComponentTo(class UTweenContainer*& TweenContainer, class USceneComponent*& TweenTarget, const struct FVector& To, float Duration, ETweenEaseType EaseType, ETweenSpace TweenSpace, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVectorStandardFactory", "BP_JoinTweenMoveSceneComponentTo");

	Params::TweenVectorStandardFactory_BP_JoinTweenMoveSceneComponentTo Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.TweenTarget = TweenTarget;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.TweenSpace = TweenSpace;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVectorStandardFactory.BP_JoinTweenScaleActorBy
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector* UTweenVectorStandardFactory::BP_JoinTweenScaleActorBy(class UTweenContainer*& TweenContainer, class AActor*& TweenTarget, const struct FVector& bY, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVectorStandardFactory", "BP_JoinTweenScaleActorBy");

	Params::TweenVectorStandardFactory_BP_JoinTweenScaleActorBy Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.TweenTarget = TweenTarget;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVectorStandardFactory.BP_JoinTweenScaleActorTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TweenTarget                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenSpace                             TweenSpace                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector* UTweenVectorStandardFactory::BP_JoinTweenScaleActorTo(class UTweenContainer*& TweenContainer, class AActor*& TweenTarget, const struct FVector& To, float Duration, ETweenEaseType EaseType, ETweenSpace TweenSpace, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVectorStandardFactory", "BP_JoinTweenScaleActorTo");

	Params::TweenVectorStandardFactory_BP_JoinTweenScaleActorTo Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.TweenTarget = TweenTarget;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.TweenSpace = TweenSpace;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVectorStandardFactory.BP_JoinTweenScaleSceneComponentBy
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          bY                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector* UTweenVectorStandardFactory::BP_JoinTweenScaleSceneComponentBy(class UTweenContainer*& TweenContainer, class USceneComponent*& TweenTarget, const struct FVector& bY, float Duration, ETweenEaseType EaseType, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVectorStandardFactory", "BP_JoinTweenScaleSceneComponentBy");

	Params::TweenVectorStandardFactory_BP_JoinTweenScaleSceneComponentBy Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.TweenTarget = TweenTarget;
	Parms.bY = std::move(bY);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}


// Function TweenMaker.TweenVectorStandardFactory.BP_JoinTweenScaleSceneComponentTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UTweenContainer*                  TweenContainer                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  TweenTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenEaseType                          EaseType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenSpace                             TweenSpace                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnHit                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DeleteTweenOnOverlap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TweenWhileGameIsPaused                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenVector*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTweenVector* UTweenVectorStandardFactory::BP_JoinTweenScaleSceneComponentTo(class UTweenContainer*& TweenContainer, class USceneComponent*& TweenTarget, const struct FVector& To, float Duration, ETweenEaseType EaseType, ETweenSpace TweenSpace, bool DeleteTweenOnHit, bool DeleteTweenOnOverlap, float Delay, float TimeScale, bool TweenWhileGameIsPaused, int32 SequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TweenVectorStandardFactory", "BP_JoinTweenScaleSceneComponentTo");

	Params::TweenVectorStandardFactory_BP_JoinTweenScaleSceneComponentTo Parms{};

	Parms.TweenContainer = TweenContainer;
	Parms.TweenTarget = TweenTarget;
	Parms.To = std::move(To);
	Parms.Duration = Duration;
	Parms.EaseType = EaseType;
	Parms.TweenSpace = TweenSpace;
	Parms.DeleteTweenOnHit = DeleteTweenOnHit;
	Parms.DeleteTweenOnOverlap = DeleteTweenOnOverlap;
	Parms.Delay = Delay;
	Parms.TimeScale = TimeScale;
	Parms.TweenWhileGameIsPaused = TweenWhileGameIsPaused;
	Parms.SequenceIndex = SequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenContainer = Parms.TweenContainer;
	TweenTarget = Parms.TweenTarget;

	return Parms.ReturnValue;
}

}

