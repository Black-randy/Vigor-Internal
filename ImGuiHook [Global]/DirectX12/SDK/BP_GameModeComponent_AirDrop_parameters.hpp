#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GameModeComponent_AirDrop

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_GameModeComponent_AirDrop.BP_GameModeComponent_AirDrop_C.Air Drop Dropped__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_GameModeComponent_AirDrop_C_Air_Drop_Dropped__DelegateSignature final
{
public:
	class ABP_AirDropContainer_Base_C*            Dropped_Container;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameModeComponent_AirDrop_C_Air_Drop_Dropped__DelegateSignature) == 0x000008, "Wrong alignment on BP_GameModeComponent_AirDrop_C_Air_Drop_Dropped__DelegateSignature");
static_assert(sizeof(BP_GameModeComponent_AirDrop_C_Air_Drop_Dropped__DelegateSignature) == 0x000008, "Wrong size on BP_GameModeComponent_AirDrop_C_Air_Drop_Dropped__DelegateSignature");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Air_Drop_Dropped__DelegateSignature, Dropped_Container) == 0x000000, "Member 'BP_GameModeComponent_AirDrop_C_Air_Drop_Dropped__DelegateSignature::Dropped_Container' has a wrong offset!");

// Function BP_GameModeComponent_AirDrop.BP_GameModeComponent_AirDrop_C.Air Drop Touched Down__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_GameModeComponent_AirDrop_C_Air_Drop_Touched_Down__DelegateSignature final
{
public:
	class ABP_AirDropContainer_Base_C*            Container;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameModeComponent_AirDrop_C_Air_Drop_Touched_Down__DelegateSignature) == 0x000008, "Wrong alignment on BP_GameModeComponent_AirDrop_C_Air_Drop_Touched_Down__DelegateSignature");
static_assert(sizeof(BP_GameModeComponent_AirDrop_C_Air_Drop_Touched_Down__DelegateSignature) == 0x000008, "Wrong size on BP_GameModeComponent_AirDrop_C_Air_Drop_Touched_Down__DelegateSignature");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Air_Drop_Touched_Down__DelegateSignature, Container) == 0x000000, "Member 'BP_GameModeComponent_AirDrop_C_Air_Drop_Touched_Down__DelegateSignature::Container' has a wrong offset!");

// Function BP_GameModeComponent_AirDrop.BP_GameModeComponent_AirDrop_C.Air Drop Looted__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_GameModeComponent_AirDrop_C_Air_Drop_Looted__DelegateSignature final
{
public:
	class ABP_AirDropContainer_Base_C*            Looted_Container;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Item_Taken;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameModeComponent_AirDrop_C_Air_Drop_Looted__DelegateSignature) == 0x000008, "Wrong alignment on BP_GameModeComponent_AirDrop_C_Air_Drop_Looted__DelegateSignature");
static_assert(sizeof(BP_GameModeComponent_AirDrop_C_Air_Drop_Looted__DelegateSignature) == 0x000010, "Wrong size on BP_GameModeComponent_AirDrop_C_Air_Drop_Looted__DelegateSignature");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Air_Drop_Looted__DelegateSignature, Looted_Container) == 0x000000, "Member 'BP_GameModeComponent_AirDrop_C_Air_Drop_Looted__DelegateSignature::Looted_Container' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Air_Drop_Looted__DelegateSignature, Item_Taken) == 0x000008, "Member 'BP_GameModeComponent_AirDrop_C_Air_Drop_Looted__DelegateSignature::Item_Taken' has a wrong offset!");

// Function BP_GameModeComponent_AirDrop.BP_GameModeComponent_AirDrop_C.ExecuteUbergraph_BP_GameModeComponent_AirDrop
// 0x0010 (0x0010 - 0x0000)
struct BP_GameModeComponent_AirDrop_C_ExecuteUbergraph_BP_GameModeComponent_AirDrop final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AirDropContainer_Base_C*            K2Node_CustomEvent_Container;                      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameModeComponent_AirDrop_C_ExecuteUbergraph_BP_GameModeComponent_AirDrop) == 0x000008, "Wrong alignment on BP_GameModeComponent_AirDrop_C_ExecuteUbergraph_BP_GameModeComponent_AirDrop");
static_assert(sizeof(BP_GameModeComponent_AirDrop_C_ExecuteUbergraph_BP_GameModeComponent_AirDrop) == 0x000010, "Wrong size on BP_GameModeComponent_AirDrop_C_ExecuteUbergraph_BP_GameModeComponent_AirDrop");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_ExecuteUbergraph_BP_GameModeComponent_AirDrop, EntryPoint) == 0x000000, "Member 'BP_GameModeComponent_AirDrop_C_ExecuteUbergraph_BP_GameModeComponent_AirDrop::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_ExecuteUbergraph_BP_GameModeComponent_AirDrop, K2Node_CustomEvent_Container) == 0x000008, "Member 'BP_GameModeComponent_AirDrop_C_ExecuteUbergraph_BP_GameModeComponent_AirDrop::K2Node_CustomEvent_Container' has a wrong offset!");

// Function BP_GameModeComponent_AirDrop.BP_GameModeComponent_AirDrop_C.Container Touched Down
// 0x0008 (0x0008 - 0x0000)
struct BP_GameModeComponent_AirDrop_C_Container_Touched_Down final
{
public:
	class ABP_AirDropContainer_Base_C*            Container;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameModeComponent_AirDrop_C_Container_Touched_Down) == 0x000008, "Wrong alignment on BP_GameModeComponent_AirDrop_C_Container_Touched_Down");
static_assert(sizeof(BP_GameModeComponent_AirDrop_C_Container_Touched_Down) == 0x000008, "Wrong size on BP_GameModeComponent_AirDrop_C_Container_Touched_Down");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Container_Touched_Down, Container) == 0x000000, "Member 'BP_GameModeComponent_AirDrop_C_Container_Touched_Down::Container' has a wrong offset!");

// Function BP_GameModeComponent_AirDrop.BP_GameModeComponent_AirDrop_C.Drop a Container
// 0x00B0 (0x00B0 - 0x0000)
struct BP_GameModeComponent_AirDrop_C_Drop_a_Container final
{
public:
	class UClass*                                 Container_Type;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UClass*>                         Loot;                                              // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                Location;                                          // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Altitude;                                          // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation_On_Land;                                  // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AirDropContainer_Base_C*            New_Container;                                     // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AirDropContainer_Base_C*            CallFunc_FinishSpawningActor_ReturnValue;          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameModeComponent_AirDrop_C_Drop_a_Container) == 0x000010, "Wrong alignment on BP_GameModeComponent_AirDrop_C_Drop_a_Container");
static_assert(sizeof(BP_GameModeComponent_AirDrop_C_Drop_a_Container) == 0x0000B0, "Wrong size on BP_GameModeComponent_AirDrop_C_Drop_a_Container");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Drop_a_Container, Container_Type) == 0x000000, "Member 'BP_GameModeComponent_AirDrop_C_Drop_a_Container::Container_Type' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Drop_a_Container, Loot) == 0x000008, "Member 'BP_GameModeComponent_AirDrop_C_Drop_a_Container::Loot' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Drop_a_Container, Location) == 0x000018, "Member 'BP_GameModeComponent_AirDrop_C_Drop_a_Container::Location' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Drop_a_Container, Altitude) == 0x000024, "Member 'BP_GameModeComponent_AirDrop_C_Drop_a_Container::Altitude' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Drop_a_Container, Rotation_On_Land) == 0x000028, "Member 'BP_GameModeComponent_AirDrop_C_Drop_a_Container::Rotation_On_Land' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Drop_a_Container, New_Container) == 0x000038, "Member 'BP_GameModeComponent_AirDrop_C_Drop_a_Container::New_Container' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Drop_a_Container, CallFunc_MakeVector_ReturnValue) == 0x000040, "Member 'BP_GameModeComponent_AirDrop_C_Drop_a_Container::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Drop_a_Container, CallFunc_BreakRotator_Roll) == 0x00004C, "Member 'BP_GameModeComponent_AirDrop_C_Drop_a_Container::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Drop_a_Container, CallFunc_BreakRotator_Pitch) == 0x000050, "Member 'BP_GameModeComponent_AirDrop_C_Drop_a_Container::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Drop_a_Container, CallFunc_BreakRotator_Yaw) == 0x000054, "Member 'BP_GameModeComponent_AirDrop_C_Drop_a_Container::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Drop_a_Container, CallFunc_Add_VectorVector_ReturnValue) == 0x000058, "Member 'BP_GameModeComponent_AirDrop_C_Drop_a_Container::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Drop_a_Container, CallFunc_MakeRotator_ReturnValue) == 0x000064, "Member 'BP_GameModeComponent_AirDrop_C_Drop_a_Container::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Drop_a_Container, CallFunc_MakeTransform_ReturnValue) == 0x000070, "Member 'BP_GameModeComponent_AirDrop_C_Drop_a_Container::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Drop_a_Container, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000A0, "Member 'BP_GameModeComponent_AirDrop_C_Drop_a_Container::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Drop_a_Container, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000A8, "Member 'BP_GameModeComponent_AirDrop_C_Drop_a_Container::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function BP_GameModeComponent_AirDrop.BP_GameModeComponent_AirDrop_C.Compute Drop Zone Area Marker Location
// 0x0360 (0x0360 - 0x0000)
struct BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location final
{
public:
	class AActor*                                 Drop_Zone_Actor;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Marker_Draw_Radius;                                // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Marker_Error_Radius;                               // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Marker_Location;                                   // 0x0010(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                AvaregeRandomPoint;                                // 0x001C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        ProposedErrorPoints;                               // 0x0028(0x0010)(Edit, BlueprintVisible)
	struct FVector                                ProposedRandomPoint;                               // 0x0038(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NearestButOneIndex;                                // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NearestIndex;                                      // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NearestDistance;                                   // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_LevelBorderForMarkerArea_C*         ConvexBorderSpline;                                // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Drop_Zone;                                         // 0x0058(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NearestPoint;                                      // 0x0064(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Marker;                                            // 0x0070(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxAttempts;                                       // 0x007C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Attempts;                                          // 0x0080(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AirDropLocation_C*                  AirDropLocationActor;                              // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_InvisibleWall_Spline_C*>     MapBoundaries;                                     // 0x0090(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	struct FVector                                Direction;                                         // 0x00A0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AirDropLocation_C*                  K2Node_DynamicCast_AsBP_Air_Drop_Location;         // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_FindLocationClosestToWorldLocation_ReturnValue; // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x016C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x018C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorInt_ReturnValue;             // 0x0198(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x01A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B9[0x3];                                      // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C1[0x3];                                      // 0x01C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomUnitVector_ReturnValue;             // 0x01C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x01D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x01EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_LevelBorderForMarkerArea_C*> CallFunc_GetAllActorsOfClass_OutActors;            // 0x01F8(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0208(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_214[0x4];                                      // 0x0214(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_LevelBorderForMarkerArea_C*         CallFunc_Array_Get_Item_1;                         // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0220(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22D[0x3];                                      // 0x022D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0230(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloat_ReturnValue;                  // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x024C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24D[0x3];                                      // 0x024D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0254(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x0260(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x026C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_4;           // 0x0278(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_284[0x4];                                      // 0x0284(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_InvisibleWall_Spline_C*>     CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x0288(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_4;       // 0x0298(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x02A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_3;      // 0x02B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_2;                     // 0x02BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_1;                      // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_InvisibleWall_Spline_C*             CallFunc_Array_Get_Item_2;                         // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_FindLocationClosestToWorldLocation_ReturnValue_1; // 0x02E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F1[0x3];                                      // 0x02F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_4;                          // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_4;                          // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_4;                          // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_4;                 // 0x0300(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_5;                 // 0x030C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_4;      // 0x0318(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomUnitVector_ReturnValue_1;           // 0x0324(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_2;                      // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_5;                          // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_5;                          // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_5;                          // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_341[0x3];                                      // 0x0341(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_6;                 // 0x0344(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_3;                     // 0x0350(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location) == 0x000008, "Wrong alignment on BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location");
static_assert(sizeof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location) == 0x000360, "Wrong size on BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, Drop_Zone_Actor) == 0x000000, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::Drop_Zone_Actor' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, Marker_Draw_Radius) == 0x000008, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::Marker_Draw_Radius' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, Marker_Error_Radius) == 0x00000C, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::Marker_Error_Radius' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, Marker_Location) == 0x000010, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::Marker_Location' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, AvaregeRandomPoint) == 0x00001C, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::AvaregeRandomPoint' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, ProposedErrorPoints) == 0x000028, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::ProposedErrorPoints' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, ProposedRandomPoint) == 0x000038, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::ProposedRandomPoint' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, NearestButOneIndex) == 0x000044, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::NearestButOneIndex' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, NearestIndex) == 0x000048, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::NearestIndex' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, NearestDistance) == 0x00004C, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::NearestDistance' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, ConvexBorderSpline) == 0x000050, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::ConvexBorderSpline' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, Drop_Zone) == 0x000058, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::Drop_Zone' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, NearestPoint) == 0x000064, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::NearestPoint' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, Marker) == 0x000070, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::Marker' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, MaxAttempts) == 0x00007C, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::MaxAttempts' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, Attempts) == 0x000080, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::Attempts' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, AirDropLocationActor) == 0x000088, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::AirDropLocationActor' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, MapBoundaries) == 0x000090, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::MapBoundaries' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, Direction) == 0x0000A0, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::Direction' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, K2Node_DynamicCast_AsBP_Air_Drop_Location) == 0x0000B0, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::K2Node_DynamicCast_AsBP_Air_Drop_Location' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, K2Node_DynamicCast_bSuccess) == 0x0000B8, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000BC, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, Temp_int_Variable) == 0x0000C8, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, Temp_int_Array_Index_Variable) == 0x0000CC, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, Temp_int_Loop_Counter_Variable) == 0x0000D0, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_Add_IntInt_ReturnValue) == 0x0000D4, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, Temp_int_Array_Index_Variable_1) == 0x0000D8, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_Array_Length_ReturnValue) == 0x0000DC, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000E0, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000E4, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_BreakVector_X) == 0x0000F0, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_BreakVector_Y) == 0x0000F4, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_BreakVector_Z) == 0x0000F8, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_MakeVector_ReturnValue) == 0x0000FC, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_BreakVector_X_1) == 0x000108, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_BreakVector_Y_1) == 0x00010C, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_BreakVector_Z_1) == 0x000110, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_FindLocationClosestToWorldLocation_ReturnValue) == 0x000114, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_FindLocationClosestToWorldLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_MakeVector_ReturnValue_1) == 0x000120, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_BreakVector_X_2) == 0x00012C, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_BreakVector_Y_2) == 0x000130, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_BreakVector_Z_2) == 0x000134, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_MakeVector_ReturnValue_2) == 0x000138, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_Array_Get_Item) == 0x000144, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000150, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x00015C, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_VSize_ReturnValue) == 0x000168, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_Normal_ReturnValue) == 0x00016C, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_Array_Length_ReturnValue_1) == 0x000178, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00017C, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_Array_Length_ReturnValue_2) == 0x000188, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_Add_VectorVector_ReturnValue) == 0x00018C, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_Divide_VectorInt_ReturnValue) == 0x000198, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_Divide_VectorInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0001A4, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_Array_Add_ReturnValue) == 0x0001B0, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_FMin_ReturnValue) == 0x0001B4, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0001B8, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001BC, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0001C0, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_RandomFloatInRange_ReturnValue) == 0x0001C4, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_RandomUnitVector_ReturnValue) == 0x0001C8, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_RandomUnitVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x0001D4, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_BreakVector_X_3) == 0x0001E0, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_BreakVector_Y_3) == 0x0001E4, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_BreakVector_Z_3) == 0x0001E8, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_MakeVector_ReturnValue_3) == 0x0001EC, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_GetAllActorsOfClass_OutActors) == 0x0001F8, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_Normal_ReturnValue_1) == 0x000208, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_Array_Get_Item_1) == 0x000218, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000220, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_IsValid_ReturnValue) == 0x00022C, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000230, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_RandomFloat_ReturnValue) == 0x00023C, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_RandomFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, Temp_int_Loop_Counter_Variable_1) == 0x000240, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000244, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_FClamp_ReturnValue) == 0x000248, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_Less_IntInt_ReturnValue) == 0x00024C, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_Add_IntInt_ReturnValue_2) == 0x000250, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000254, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x000260, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_Add_VectorVector_ReturnValue_3) == 0x00026C, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_Add_VectorVector_ReturnValue_4) == 0x000278, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_Add_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x000288, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_Multiply_VectorFloat_ReturnValue_4) == 0x000298, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_Multiply_VectorFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x0002A4, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_Subtract_VectorVector_ReturnValue_3) == 0x0002B0, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_Subtract_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_Normal_ReturnValue_2) == 0x0002BC, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_Normal_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_VSize_ReturnValue_1) == 0x0002C8, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_Dot_VectorVector_ReturnValue) == 0x0002CC, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0002D0, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_Array_Get_Item_2) == 0x0002D8, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_Array_Length_ReturnValue_3) == 0x0002E0, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_FindLocationClosestToWorldLocation_ReturnValue_1) == 0x0002E4, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_FindLocationClosestToWorldLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_Less_IntInt_ReturnValue_1) == 0x0002F0, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_BreakVector_X_4) == 0x0002F4, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_BreakVector_Y_4) == 0x0002F8, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_BreakVector_Z_4) == 0x0002FC, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_MakeVector_ReturnValue_4) == 0x000300, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_MakeVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_MakeVector_ReturnValue_5) == 0x00030C, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_MakeVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_Subtract_VectorVector_ReturnValue_4) == 0x000318, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_Subtract_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_RandomUnitVector_ReturnValue_1) == 0x000324, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_RandomUnitVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_VSize_ReturnValue_2) == 0x000330, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_VSize_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_BreakVector_X_5) == 0x000334, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_BreakVector_Y_5) == 0x000338, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_BreakVector_Z_5) == 0x00033C, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000340, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_MakeVector_ReturnValue_6) == 0x000344, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_MakeVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location, CallFunc_Normal_ReturnValue_3) == 0x000350, "Member 'BP_GameModeComponent_AirDrop_C_Compute_Drop_Zone_Area_Marker_Location::CallFunc_Normal_ReturnValue_3' has a wrong offset!");

}

