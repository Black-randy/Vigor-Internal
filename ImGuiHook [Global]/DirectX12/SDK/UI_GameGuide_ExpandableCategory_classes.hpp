#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_GameGuide_ExpandableCategory

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UI_GameGuide_ListItem_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_GameGuide_ExpandableCategory.UI_GameGuide_ExpandableCategory_C
// 0x00A0 (0x03D0 - 0x0330)
class UUI_GameGuide_ExpandableCategory_C final : public UUI_GameGuide_ListItem_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_UI_GameGuide_ExpandableCategory_C;  // 0x0330(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       ExpandIcon;                                        // 0x0338(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 ExpanderIcon;                                      // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UExpandableArea*                        Guide_Category_ExpandableArea;                     // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameButton*                           Guide_CategoryButton;                              // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           Guide_CategoryItems;                               // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_FlameMarqueeBlockText_C*            Guide_CategoryName;                                // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FName                                   DataTableRowName;                                  // 0x0368(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	TArray<struct FDataTableRowHandle>            ChildItems;                                        // 0x0370(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ExposeOnSpawn)
	TSet<class FName>                             PathToRoot;                                        // 0x0380(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_UI_GameGuide_ExpandableCategory(int32 EntryPoint);
	void BndEvt__UI_GameGuide_ExpandableCategory_Guide_CategoryButton_K2Node_ComponentBoundEvent_3_OnButtonClickedEvent__DelegateSignature(class UButton* Sender);
	void BndEvt__UI_GameGuide_ExpandableCategory_Guide_CategoryButton_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature(class UButton* Sender);
	void BndEvt__UI_GameGuide_ExpandableCategory_Guide_CategoryButton_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature(class UButton* Sender);
	void BndEvt__Guide_CategoryButton_K2Node_ComponentBoundEvent_0_OnButtonPressedEvent__DelegateSignature(class UButton* Sender);
	void PreConstruct(bool IsDesignTime);
	void Construct();
	struct FEventReply OnFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent);
	class UWidget* GuideListNavigation_Down(EUINavigation Navigation_0);
	class UWidget* GuideListNavigation_Up(EUINavigation Navigation_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_GameGuide_ExpandableCategory_C">();
	}
	static class UUI_GameGuide_ExpandableCategory_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_GameGuide_ExpandableCategory_C>();
	}
};
static_assert(alignof(UUI_GameGuide_ExpandableCategory_C) == 0x000008, "Wrong alignment on UUI_GameGuide_ExpandableCategory_C");
static_assert(sizeof(UUI_GameGuide_ExpandableCategory_C) == 0x0003D0, "Wrong size on UUI_GameGuide_ExpandableCategory_C");
static_assert(offsetof(UUI_GameGuide_ExpandableCategory_C, UberGraphFrame_UI_GameGuide_ExpandableCategory_C) == 0x000330, "Member 'UUI_GameGuide_ExpandableCategory_C::UberGraphFrame_UI_GameGuide_ExpandableCategory_C' has a wrong offset!");
static_assert(offsetof(UUI_GameGuide_ExpandableCategory_C, ExpandIcon) == 0x000338, "Member 'UUI_GameGuide_ExpandableCategory_C::ExpandIcon' has a wrong offset!");
static_assert(offsetof(UUI_GameGuide_ExpandableCategory_C, ExpanderIcon) == 0x000340, "Member 'UUI_GameGuide_ExpandableCategory_C::ExpanderIcon' has a wrong offset!");
static_assert(offsetof(UUI_GameGuide_ExpandableCategory_C, Guide_Category_ExpandableArea) == 0x000348, "Member 'UUI_GameGuide_ExpandableCategory_C::Guide_Category_ExpandableArea' has a wrong offset!");
static_assert(offsetof(UUI_GameGuide_ExpandableCategory_C, Guide_CategoryButton) == 0x000350, "Member 'UUI_GameGuide_ExpandableCategory_C::Guide_CategoryButton' has a wrong offset!");
static_assert(offsetof(UUI_GameGuide_ExpandableCategory_C, Guide_CategoryItems) == 0x000358, "Member 'UUI_GameGuide_ExpandableCategory_C::Guide_CategoryItems' has a wrong offset!");
static_assert(offsetof(UUI_GameGuide_ExpandableCategory_C, Guide_CategoryName) == 0x000360, "Member 'UUI_GameGuide_ExpandableCategory_C::Guide_CategoryName' has a wrong offset!");
static_assert(offsetof(UUI_GameGuide_ExpandableCategory_C, DataTableRowName) == 0x000368, "Member 'UUI_GameGuide_ExpandableCategory_C::DataTableRowName' has a wrong offset!");
static_assert(offsetof(UUI_GameGuide_ExpandableCategory_C, ChildItems) == 0x000370, "Member 'UUI_GameGuide_ExpandableCategory_C::ChildItems' has a wrong offset!");
static_assert(offsetof(UUI_GameGuide_ExpandableCategory_C, PathToRoot) == 0x000380, "Member 'UUI_GameGuide_ExpandableCategory_C::PathToRoot' has a wrong offset!");

}

