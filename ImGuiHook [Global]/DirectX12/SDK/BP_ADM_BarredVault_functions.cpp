#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ADM_BarredVault

#include "Basic.hpp"

#include "BP_ADM_BarredVault_classes.hpp"
#include "BP_ADM_BarredVault_parameters.hpp"


namespace SDK
{

// Function BP_ADM_BarredVault.BP_ADM_BarredVault_C.ExecuteUbergraph_BP_ADM_BarredVault
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ADM_BarredVault_C::ExecuteUbergraph_BP_ADM_BarredVault(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ADM_BarredVault_C", "ExecuteUbergraph_BP_ADM_BarredVault");

	Params::BP_ADM_BarredVault_C_ExecuteUbergraph_BP_ADM_BarredVault Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ADM_BarredVault.BP_ADM_BarredVault_C.PlayLootedAnimation
// (BlueprintCallable, BlueprintEvent)

void ABP_ADM_BarredVault_C::PlayLootedAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ADM_BarredVault_C", "PlayLootedAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ADM_BarredVault.BP_ADM_BarredVault_C.PlayUnlockedAnimation
// (BlueprintCallable, BlueprintEvent)

void ABP_ADM_BarredVault_C::PlayUnlockedAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ADM_BarredVault_C", "PlayUnlockedAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ADM_BarredVault.BP_ADM_BarredVault_C.Server Interaction Start
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Character_C*                  Interacting_Character                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ADM_BarredVault_C::Server_Interaction_Start(class ABP_Character_C* Interacting_Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ADM_BarredVault_C", "Server Interaction Start");

	Params::BP_ADM_BarredVault_C_Server_Interaction_Start Parms{};

	Parms.Interacting_Character = Interacting_Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ADM_BarredVault.BP_ADM_BarredVault_C.State Changed
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_Lootable_State                        Old_State                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_Lootable_State                        New_State                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ADM_BarredVault_C::State_Changed(E_Lootable_State Old_State, E_Lootable_State New_State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ADM_BarredVault_C", "State Changed");

	Params::BP_ADM_BarredVault_C_State_Changed Parms{};

	Parms.Old_State = Old_State;
	Parms.New_State = New_State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ADM_BarredVault.BP_ADM_BarredVault_C.BndEvt__OverlapVolumeEncounterHint_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_ADM_BarredVault_C::BndEvt__OverlapVolumeEncounterHint_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ADM_BarredVault_C", "BndEvt__OverlapVolumeEncounterHint_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");

	Params::BP_ADM_BarredVault_C_BndEvt__OverlapVolumeEncounterHint_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ADM_BarredVault.BP_ADM_BarredVault_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ADM_BarredVault_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ADM_BarredVault_C", "ReceiveTick");

	Params::BP_ADM_BarredVault_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ADM_BarredVault.BP_ADM_BarredVault_C.Loot
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_ADM_BarredVault_C::Loot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ADM_BarredVault_C", "Loot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ADM_BarredVault.BP_ADM_BarredVault_C.Unlock
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_ADM_BarredVault_C::Unlock()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ADM_BarredVault_C", "Unlock");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ADM_BarredVault.BP_ADM_BarredVault_C.Start Unlocking
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_ADM_BarredVault_C::Start_Unlocking()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ADM_BarredVault_C", "Start Unlocking");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ADM_BarredVault.BP_ADM_BarredVault_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ADM_BarredVault_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ADM_BarredVault_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ADM_BarredVault.BP_ADM_BarredVault_C.Initialize Doors and Windows
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_ADM_BarredVaultLocation_C*    Vault_Location                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ADM_BarredVault_C::Initialize_Doors_and_Windows(class ABP_ADM_BarredVaultLocation_C* Vault_Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ADM_BarredVault_C", "Initialize Doors and Windows");

	Params::BP_ADM_BarredVault_C_Initialize_Doors_and_Windows Parms{};

	Parms.Vault_Location = Vault_Location;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ADM_BarredVault.BP_ADM_BarredVault_C.PlayUnlockingSound
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ADM_BarredVault_C::PlayUnlockingSound(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ADM_BarredVault_C", "PlayUnlockingSound");

	Params::BP_ADM_BarredVault_C_PlayUnlockingSound Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ADM_BarredVault.BP_ADM_BarredVault_C.Determine State Based On Current Circumstances
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_Lootable_State                        Appropriate_State                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ADM_BarredVault_C::Determine_State_Based_On_Current_Circumstances(E_Lootable_State* Appropriate_State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ADM_BarredVault_C", "Determine State Based On Current Circumstances");

	Params::BP_ADM_BarredVault_C_Determine_State_Based_On_Current_Circumstances Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Appropriate_State != nullptr)
		*Appropriate_State = Parms.Appropriate_State;
}


// Function BP_ADM_BarredVault.BP_ADM_BarredVault_C.Set Status
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ADM_BarredVault_State                 Status_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ADM_BarredVault_C::Set_Status(E_ADM_BarredVault_State Status_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ADM_BarredVault_C", "Set Status");

	Params::BP_ADM_BarredVault_C_Set_Status Parms{};

	Parms.Status_0 = Status_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ADM_BarredVault.BP_ADM_BarredVault_C.GetValidDoor
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ADoor*                            Door                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ADoor*                            ValidDoor                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ADM_BarredVault_C::GetValidDoor(class ADoor* Door, class ADoor** ValidDoor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ADM_BarredVault_C", "GetValidDoor");

	Params::BP_ADM_BarredVault_C_GetValidDoor Parms{};

	Parms.Door = Door;

	UObject::ProcessEvent(Func, &Parms);

	if (ValidDoor != nullptr)
		*ValidDoor = Parms.ValidDoor;
}


// Function BP_ADM_BarredVault.BP_ADM_BarredVault_C.GetValidWindow
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AWindow*                          Window                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AWindow*                          ValidWindow                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ADM_BarredVault_C::GetValidWindow(class AWindow* Window, class AWindow** ValidWindow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ADM_BarredVault_C", "GetValidWindow");

	Params::BP_ADM_BarredVault_C_GetValidWindow Parms{};

	Parms.Window = Window;

	UObject::ProcessEvent(Func, &Parms);

	if (ValidWindow != nullptr)
		*ValidWindow = Parms.ValidWindow;
}


// Function BP_ADM_BarredVault.BP_ADM_BarredVault_C.On Rep State
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    New_State_Is_Valid                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_ADM_BarredVault_C::On_Rep_State(bool* New_State_Is_Valid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ADM_BarredVault_C", "On Rep State");

	Params::BP_ADM_BarredVault_C_On_Rep_State Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (New_State_Is_Valid != nullptr)
		*New_State_Is_Valid = Parms.New_State_Is_Valid;
}

}

