#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_BattlePass

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Flame_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "E_BattlePassSystem_State_structs.hpp"
#include "E_BattlePassUIStates_structs.hpp"
#include "SlateCore_structs.hpp"
#include "S_BattlePassLevelRewardFull_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function UI_BattlePass.UI_BattlePass_C.ExecuteUbergraph_UI_BattlePass
// 0x05B8 (0x05B8 - 0x0000)
struct UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(int32 PlayerIndex, EInputMode InputMode)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFlameWidget*                           K2Node_CustomEvent_FlameWidget_1;                  // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Get_Season_Name_Active_Season_Name;       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Season_Active_ReturnValue;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Get_Season_Max_Level_Max_Level;           // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Level_Level;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetZOrder_ReturnValue;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x004C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameMode_Shelter_C*                 K2Node_DynamicCast_AsBP_Game_Mode_Shelter;         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_Season_Active_ReturnValue_1;           // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_WasPremiumJustBought;           // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ConsiderOpeningLevelUpScreen_LevelUpScreenOpened; // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77[0x1];                                       // 0x0077(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UFlameWidget*                           CallFunc_ConsiderOpeningLevelUpScreen_LevelUpScreen; // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0084(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0094(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   CallFunc_Get_Season_Name_Active_Season_Name_1;     // 0x00A4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFlameWidget*                           K2Node_CustomEvent_Flame_Widget_1;                 // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Season_Max_Level_Max_Level_1;         // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Level_in_Season_Level;                // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UFlameWidget* FlameWidget)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x00C0(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ConsiderOpeningRewardsScreen_Rewards_Screen_Opened; // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void(bool Success)>                 K2Node_CreateDelegate_OutputDelegate_6;            // 0x00DC(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_7;            // 0x00F0(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UFlameWidget* FlameWidget)> K2Node_CreateDelegate_OutputDelegate_8;            // 0x0100(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UFlameWidget* FlameWidget)> K2Node_CreateDelegate_OutputDelegate_9;            // 0x0114(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_125[0x3];                                      // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFlameWidget*                           K2Node_CustomEvent_FlameWidget;                    // 0x0128(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UFlameWidget* FlameWidget)> K2Node_CreateDelegate_OutputDelegate_10;           // 0x0130(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class AItem>                      CallFunc_GetItemType_ReturnValue;                  // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Success;                        // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_152[0x2];                                      // 0x0152(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Get_Season_Name_Active_Season_Name_2;     // 0x0154(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Premium_Status_Premium_Active;        // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_Season_Active_ReturnValue_2;           // 0x015D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15E[0x2];                                      // 0x015E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_BattlePassBuyPremium_C*             CallFunc_Create_ReturnValue;                       // 0x0170(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetZOrder_ReturnValue_1;                  // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Get_Season_Name_Active_Season_Name_3;     // 0x017C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Season_Premium_Products_AreProductsValid; // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_185[0x3];                                      // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBattlePassSeasonProducts>      CallFunc_Get_Season_Premium_Products_PremiumBattlePassProducts; // 0x0188(0x0010)(ReferenceParm)
	TDelegate<void(bool WasPremiumPurchaseSuccesful)> K2Node_CreateDelegate_OutputDelegate_11;           // 0x0198(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_CustomEvent_WasPremiumPurchaseSuccesful;    // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A9[0x3];                                      // 0x01A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool WasPremiumPurchaseSuccesful)> K2Node_CreateDelegate_OutputDelegate_12;           // 0x01AC(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x01BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BE[0x2];                                      // 0x01BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Get_Season_Name_Active_Season_Name_4;     // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_13;           // 0x01C8(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Send_Battle_Pass_Buy_Premium_Closed_Event_ReturnValue; // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetTileFocus_FocusWasSet;                 // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DA[0x2];                                      // 0x01DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Get_Season_Name_Active_Season_Name_5;     // 0x01DC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BattlePassSystem_State                      CallFunc_Get_State_State;                          // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BattlePassUIStates                          Temp_byte_Variable;                                // 0x01E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E7[0x1];                                      // 0x01E7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_1;            // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetZOrder_ReturnValue_2;                  // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F4[0x4];                                      // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_Onboarding_BattlePass_A_C*          CallFunc_Create_ReturnValue_1;                     // 0x01F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerController*                 CallFunc_GetFlameController_ReturnValue;           // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_Onboarding_BattlePassIntroduction_C* CallFunc_Create_ReturnValue_2;                     // 0x0208(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFlameWidget*                           K2Node_CustomEvent_Flame_Widget;                   // 0x0210(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_219[0x7];                                      // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0220(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetSize_ReturnValue;                      // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetUserControllerId_ReturnValue;          // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23C[0x4];                                      // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue; // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24C[0x4];                                      // 0x024C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_BattlePass_MultiLevelPurchase_C*    CallFunc_Create_ReturnValue_3;                     // 0x0250(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetZOrder_ReturnValue_3;                  // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Levels;                         // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BattlePassUIStates                          Temp_byte_Variable_1;                              // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0269(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26A[0x2];                                      // 0x026A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(float AxisValue)>              K2Node_CreateDelegate_OutputDelegate_14;           // 0x026C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsPlatformGroupDesktop_ReturnValue;       // 0x027C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_27D[0x3];                                      // 0x027D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UButton*                                K2Node_ComponentBoundEvent_Sender_8;               // 0x0280(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UButton*                                K2Node_ComponentBoundEvent_Sender_7;               // 0x0288(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlatformGroupDesktop_ReturnValue_1;     // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_291[0x7];                                      // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUI_CustomCursor_C*>             CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0298(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlatformGroupDesktop_ReturnValue_2;     // 0x02AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2AD[0x3];                                      // 0x02AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUI_CustomCursor_C*>             CallFunc_GetAllWidgetsOfClass_FoundWidgets_1;      // 0x02B0(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C4[0x4];                                      // 0x02C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UButton*                                K2Node_ComponentBoundEvent_Sender_6;               // 0x02C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UButton*                                K2Node_ComponentBoundEvent_Sender_5;               // 0x02D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UButton*                                K2Node_ComponentBoundEvent_Sender_4;               // 0x02D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UButton*                                K2Node_ComponentBoundEvent_Sender_3;               // 0x02E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetZOrder_ReturnValue_4;                  // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EC[0x4];                                      // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_2;            // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_IdleWidget_C*                       CallFunc_Create_ReturnValue_4;                     // 0x02F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x0301(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_302[0x6];                                      // 0x0302(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Event_InWidget;                             // 0x0308(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_311[0x7];                                      // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetParentUserWidget_ReturnValue;          // 0x0318(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_ItemGridSlotBattlePass_C*           K2Node_DynamicCast_AsUI_Item_Grid_Slot_Battle_Pass; // 0x0320(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_Season_Active_ReturnValue_3;           // 0x0329(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BattlePassUIStates                          K2Node_Select_Default;                             // 0x032A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32B[0x1];                                      // 0x032B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x032C(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0364(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_3;            // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInputAnalogStickState_StickX;          // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInputAnalogStickState_StickY;          // 0x0374(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x037C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37D[0x3];                                      // 0x037D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x038C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_13;                   // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_391[0x3];                                      // 0x0391(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x0394(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_14;                   // 0x039C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39D[0x3];                                      // 0x039D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A4[0x4];                                      // 0x03A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_CustomCursor_C*                     CallFunc_Array_Get_Item;                           // 0x03A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B1[0x7];                                      // 0x03B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePassSystem*                      CallFunc_GetBattlePassSystem_ReturnValue;          // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_BattlePassSystem_C*                 K2Node_DynamicCast_AsBP_Battle_Pass_System;        // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D1[0x3];                                      // 0x03D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInputMouseDelta_DeltaX;                // 0x03D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInputMouseDelta_DeltaY;                // 0x03D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x03DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_6;        // 0x03E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_7;        // 0x03EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_8;        // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F4[0x4];                                      // 0x03F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_CustomCursor_C*                     CallFunc_Array_Get_Item_1;                         // 0x03F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlatformGroupDesktop_ReturnValue_3;     // 0x0401(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_402[0x2];                                      // 0x0402(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_3;                               // 0x0404(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0408(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_1;      // 0x040C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_40D[0x3];                                      // 0x040D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UButton*                                K2Node_ComponentBoundEvent_Sender_2;               // 0x0410(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlatformGroupDesktop_ReturnValue_4;     // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_419[0x7];                                      // 0x0419(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UButton*                                K2Node_ComponentBoundEvent_Sender_1;               // 0x0420(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UButton*                                K2Node_ComponentBoundEvent_Sender;                 // 0x0428(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlatformGroupDesktop_ReturnValue_5;     // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_431[0x7];                                      // 0x0431(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFlameGameInstance*                     CallFunc_GetFlameGameInstance_ReturnValue;         // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputMode                                    CallFunc_GetLastInputMode_ReturnValue;             // 0x0440(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0441(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_15;                   // 0x0442(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_443[0x1];                                      // 0x0443(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UFlameWidget* FlameWidget)> K2Node_CreateDelegate_OutputDelegate_15;           // 0x0444(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_454[0x4];                                      // 0x0454(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class AItem>                      CallFunc_GetItemType_ReturnValue_1;                // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_CanClassRotate_ReturnValue;               // 0x0460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlatformGroupDesktop_ReturnValue_6;     // 0x0461(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_16;                   // 0x0462(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlatformGroupDesktop_ReturnValue_7;     // 0x0463(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_464[0x4];                                      // 0x0464(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_4;            // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasUserFocus_ReturnValue;                 // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0471(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_472[0x2];                                      // 0x0472(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Get_Season_Name_Active_Season_Name_6;     // 0x0474(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_17;                   // 0x047C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_47D[0x3];                                      // 0x047D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Get_Season_Max_Level_Max_Level_2;         // 0x0480(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Level_in_Season_Level_1;              // 0x0484(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_489[0x3];                                      // 0x0489(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Divide_IntInt_ReturnValue_1;              // 0x048C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0490(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0494(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0498(0x0028)()
	class UUI_BattlePassTile_C*                   K2Node_Select_Default_1;                           // 0x04C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetTileFocus_FocusWasSet_1;               // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetTileEmpty_IsTileEmpty;                 // 0x04C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CA[0x6];                                      // 0x04CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x04D0(0x0028)()
	class UFlameGameInstance*                     CallFunc_GetFlameGameInstance_ReturnValue_1;       // 0x04F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputMode                                    CallFunc_GetLastInputMode_ReturnValue_1;           // 0x0500(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputMode                                    CallFunc_GetLastInputMode_ReturnValue_2;           // 0x0501(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0502(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0503(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void(bool WasPremiumPurchaseSuccesful)> K2Node_CreateDelegate_OutputDelegate_16;           // 0x0504(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool Success)>                 K2Node_CreateDelegate_OutputDelegate_17;           // 0x0514(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_524[0x4];                                      // 0x0524(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFlameGameInstance*                     CallFunc_GetFlameGameInstance_ReturnValue_2;       // 0x0528(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_PlayerIndex;                    // 0x0530(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputMode                                    K2Node_CustomEvent_InputMode;                      // 0x0534(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputMode                                    CallFunc_GetLastInputMode_ReturnValue_3;           // 0x0535(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_536[0x2];                                      // 0x0536(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UFlameWidget* FlameWidget)> K2Node_CreateDelegate_OutputDelegate_18;           // 0x0538(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_18;                   // 0x0548(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_19;                   // 0x0549(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_20;                   // 0x054A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetTileFocus_FocusWasSet_2;               // 0x054B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_54C[0x4];                                      // 0x054C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_5;            // 0x0550(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EMessageBoxAction Result)>     Temp_delegate_Variable;                            // 0x0558(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	class UShelterMainTabControl*                 CallFunc_GetShelterUI_ReturnValue;                 // 0x0568(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMessageBoxWidget*                      CallFunc_ShowMessageBox_ReturnValue;               // 0x0570(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UUI_Onboarding_BattlePass_A_C*>  CallFunc_GetAllWidgetsOfClass_FoundWidgets_2;      // 0x0578(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0588(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_589[0x3];                                      // 0x0589(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x058C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0590(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_591[0x7];                                      // 0x0591(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUI_ShelterMainTab_C*>           CallFunc_GetAllWidgetsOfClass_FoundWidgets_3;      // 0x0598(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UUI_ShelterMainTab_C*                   CallFunc_Array_Get_Item_2;                         // 0x05A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x05B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x05B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass) == 0x000008, "Wrong alignment on UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass");
static_assert(sizeof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass) == 0x0005B8, "Wrong size on UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, EntryPoint) == 0x000000, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, K2Node_CustomEvent_FlameWidget_1) == 0x000028, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::K2Node_CustomEvent_FlameWidget_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_Get_Season_Name_Active_Season_Name) == 0x000030, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_Get_Season_Name_Active_Season_Name' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_Is_Season_Active_ReturnValue) == 0x000038, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_Is_Season_Active_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_Get_Season_Max_Level_Max_Level) == 0x00003C, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_Get_Season_Max_Level_Max_Level' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_Get_Level_Level) == 0x000040, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_Get_Level_Level' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_BooleanAND_ReturnValue) == 0x000045, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_GetZOrder_ReturnValue) == 0x000048, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_GetZOrder_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, K2Node_CreateDelegate_OutputDelegate_2) == 0x00004C, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_GetGameMode_ReturnValue) == 0x000060, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, K2Node_DynamicCast_AsBP_Game_Mode_Shelter) == 0x000068, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::K2Node_DynamicCast_AsBP_Game_Mode_Shelter' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_IsValid_ReturnValue_1) == 0x000071, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_IsValid_ReturnValue_2) == 0x000072, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_Is_Season_Active_ReturnValue_1) == 0x000073, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_Is_Season_Active_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_BooleanAND_ReturnValue_1) == 0x000074, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, K2Node_CustomEvent_WasPremiumJustBought) == 0x000075, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::K2Node_CustomEvent_WasPremiumJustBought' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_ConsiderOpeningLevelUpScreen_LevelUpScreenOpened) == 0x000076, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_ConsiderOpeningLevelUpScreen_LevelUpScreenOpened' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_ConsiderOpeningLevelUpScreen_LevelUpScreen) == 0x000078, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_ConsiderOpeningLevelUpScreen_LevelUpScreen' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, Temp_int_Variable) == 0x000080, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, K2Node_CreateDelegate_OutputDelegate_3) == 0x000084, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, K2Node_CreateDelegate_OutputDelegate_4) == 0x000094, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_Get_Season_Name_Active_Season_Name_1) == 0x0000A4, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_Get_Season_Name_Active_Season_Name_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, K2Node_CustomEvent_Flame_Widget_1) == 0x0000B0, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::K2Node_CustomEvent_Flame_Widget_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_Get_Season_Max_Level_Max_Level_1) == 0x0000B8, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_Get_Season_Max_Level_Max_Level_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_Get_Level_in_Season_Level) == 0x0000BC, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_Get_Level_in_Season_Level' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, K2Node_CreateDelegate_OutputDelegate_5) == 0x0000C0, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_Divide_IntInt_ReturnValue) == 0x0000D0, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_Add_IntInt_ReturnValue) == 0x0000D4, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000D8, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_ConsiderOpeningRewardsScreen_Rewards_Screen_Opened) == 0x0000D9, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_ConsiderOpeningRewardsScreen_Rewards_Screen_Opened' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_IsValid_ReturnValue_3) == 0x0000DA, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_IsValid_ReturnValue_4) == 0x0000DB, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, K2Node_CreateDelegate_OutputDelegate_6) == 0x0000DC, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_IsValid_ReturnValue_5) == 0x0000EC, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, K2Node_CreateDelegate_OutputDelegate_7) == 0x0000F0, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, K2Node_CreateDelegate_OutputDelegate_8) == 0x000100, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_IsValid_ReturnValue_6) == 0x000110, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, K2Node_CreateDelegate_OutputDelegate_9) == 0x000114, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_IsValid_ReturnValue_7) == 0x000124, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, K2Node_CustomEvent_FlameWidget) == 0x000128, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::K2Node_CustomEvent_FlameWidget' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, K2Node_CreateDelegate_OutputDelegate_10) == 0x000130, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_IsValid_ReturnValue_8) == 0x000140, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_GetItemType_ReturnValue) == 0x000148, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_GetItemType_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_ClassIsChildOf_ReturnValue) == 0x000150, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, K2Node_CustomEvent_Success) == 0x000151, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::K2Node_CustomEvent_Success' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_Get_Season_Name_Active_Season_Name_2) == 0x000154, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_Get_Season_Name_Active_Season_Name_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_Get_Premium_Status_Premium_Active) == 0x00015C, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_Get_Premium_Status_Premium_Active' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_Is_Season_Active_ReturnValue_2) == 0x00015D, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_Is_Season_Active_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_GetOwningPlayer_ReturnValue) == 0x000160, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_BooleanAND_ReturnValue_2) == 0x000168, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_Create_ReturnValue) == 0x000170, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_GetZOrder_ReturnValue_1) == 0x000178, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_GetZOrder_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_Get_Season_Name_Active_Season_Name_3) == 0x00017C, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_Get_Season_Name_Active_Season_Name_3' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_Get_Season_Premium_Products_AreProductsValid) == 0x000184, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_Get_Season_Premium_Products_AreProductsValid' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_Get_Season_Premium_Products_PremiumBattlePassProducts) == 0x000188, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_Get_Season_Premium_Products_PremiumBattlePassProducts' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, K2Node_CreateDelegate_OutputDelegate_11) == 0x000198, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, K2Node_CustomEvent_WasPremiumPurchaseSuccesful) == 0x0001A8, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::K2Node_CustomEvent_WasPremiumPurchaseSuccesful' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, K2Node_CreateDelegate_OutputDelegate_12) == 0x0001AC, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_IsValid_ReturnValue_9) == 0x0001BC, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_IsValid_ReturnValue_10) == 0x0001BD, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_Get_Season_Name_Active_Season_Name_4) == 0x0001C0, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_Get_Season_Name_Active_Season_Name_4' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, K2Node_CreateDelegate_OutputDelegate_13) == 0x0001C8, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_Send_Battle_Pass_Buy_Premium_Closed_Event_ReturnValue) == 0x0001D8, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_Send_Battle_Pass_Buy_Premium_Closed_Event_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_SetTileFocus_FocusWasSet) == 0x0001D9, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_SetTileFocus_FocusWasSet' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_Get_Season_Name_Active_Season_Name_5) == 0x0001DC, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_Get_Season_Name_Active_Season_Name_5' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_Get_State_State) == 0x0001E4, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_Get_State_State' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, Temp_byte_Variable) == 0x0001E5, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001E6, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_GetOwningPlayer_ReturnValue_1) == 0x0001E8, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_GetOwningPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_GetZOrder_ReturnValue_2) == 0x0001F0, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_GetZOrder_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_Create_ReturnValue_1) == 0x0001F8, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_GetFlameController_ReturnValue) == 0x000200, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_GetFlameController_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_Create_ReturnValue_2) == 0x000208, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_Create_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, K2Node_CustomEvent_Flame_Widget) == 0x000210, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::K2Node_CustomEvent_Flame_Widget' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, K2Node_Event_IsDesignTime) == 0x000218, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000220, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_GetSize_ReturnValue) == 0x000228, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_GetSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_GetUserControllerId_ReturnValue) == 0x000230, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_GetUserControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_BreakVector2D_X) == 0x000234, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_BreakVector2D_Y) == 0x000238, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue) == 0x000240, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_Add_FloatFloat_ReturnValue) == 0x000248, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_Create_ReturnValue_3) == 0x000250, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_Create_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_MakeVector2D_ReturnValue) == 0x000258, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_GetZOrder_ReturnValue_3) == 0x000260, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_GetZOrder_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, K2Node_CustomEvent_Levels) == 0x000264, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::K2Node_CustomEvent_Levels' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, Temp_byte_Variable_1) == 0x000268, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_Greater_IntInt_ReturnValue) == 0x000269, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, K2Node_CreateDelegate_OutputDelegate_14) == 0x00026C, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::K2Node_CreateDelegate_OutputDelegate_14' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_IsPlatformGroupDesktop_ReturnValue) == 0x00027C, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_IsPlatformGroupDesktop_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, K2Node_ComponentBoundEvent_Sender_8) == 0x000280, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::K2Node_ComponentBoundEvent_Sender_8' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, K2Node_ComponentBoundEvent_Sender_7) == 0x000288, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::K2Node_ComponentBoundEvent_Sender_7' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_IsPlatformGroupDesktop_ReturnValue_1) == 0x000290, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_IsPlatformGroupDesktop_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000298, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_Array_Length_ReturnValue) == 0x0002A8, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_IsPlatformGroupDesktop_ReturnValue_2) == 0x0002AC, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_IsPlatformGroupDesktop_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_GetAllWidgetsOfClass_FoundWidgets_1) == 0x0002B0, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_GetAllWidgetsOfClass_FoundWidgets_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_Array_Length_ReturnValue_1) == 0x0002C0, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, K2Node_ComponentBoundEvent_Sender_6) == 0x0002C8, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::K2Node_ComponentBoundEvent_Sender_6' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, K2Node_ComponentBoundEvent_Sender_5) == 0x0002D0, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::K2Node_ComponentBoundEvent_Sender_5' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, K2Node_ComponentBoundEvent_Sender_4) == 0x0002D8, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::K2Node_ComponentBoundEvent_Sender_4' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, K2Node_ComponentBoundEvent_Sender_3) == 0x0002E0, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::K2Node_ComponentBoundEvent_Sender_3' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_GetZOrder_ReturnValue_4) == 0x0002E8, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_GetZOrder_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_GetOwningPlayer_ReturnValue_2) == 0x0002F0, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_GetOwningPlayer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_Create_ReturnValue_4) == 0x0002F8, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_Create_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, Temp_bool_Variable) == 0x000300, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_IsValid_ReturnValue_11) == 0x000301, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, K2Node_Event_InWidget) == 0x000308, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::K2Node_Event_InWidget' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000310, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_GetParentUserWidget_ReturnValue) == 0x000318, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_GetParentUserWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, K2Node_DynamicCast_AsUI_Item_Grid_Slot_Battle_Pass) == 0x000320, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::K2Node_DynamicCast_AsUI_Item_Grid_Slot_Battle_Pass' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, K2Node_DynamicCast_bSuccess_1) == 0x000328, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_Is_Season_Active_ReturnValue_3) == 0x000329, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_Is_Season_Active_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, K2Node_Select_Default) == 0x00032A, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, K2Node_Event_MyGeometry) == 0x00032C, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, K2Node_Event_InDeltaTime) == 0x000364, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_GetOwningPlayer_ReturnValue_3) == 0x000368, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_GetOwningPlayer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_GetInputAnalogStickState_StickX) == 0x000370, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_GetInputAnalogStickState_StickX' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_GetInputAnalogStickState_StickY) == 0x000374, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_GetInputAnalogStickState_StickY' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000378, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_IsValid_ReturnValue_12) == 0x00037C, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000380, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000384, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000388, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x00038C, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_IsValid_ReturnValue_13) == 0x000390, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_IsValid_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x000394, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, Temp_int_Variable_1) == 0x000398, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_IsValid_ReturnValue_14) == 0x00039C, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_IsValid_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_Add_IntInt_ReturnValue_1) == 0x0003A0, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_Array_Get_Item) == 0x0003A8, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_Less_IntInt_ReturnValue_2) == 0x0003B0, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_GetBattlePassSystem_ReturnValue) == 0x0003B8, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_GetBattlePassSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_GetPlayerController_ReturnValue) == 0x0003C0, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, K2Node_DynamicCast_AsBP_Battle_Pass_System) == 0x0003C8, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::K2Node_DynamicCast_AsBP_Battle_Pass_System' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, K2Node_DynamicCast_bSuccess_2) == 0x0003D0, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_GetInputMouseDelta_DeltaX) == 0x0003D4, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_GetInputMouseDelta_DeltaX' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_GetInputMouseDelta_DeltaY) == 0x0003D8, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_GetInputMouseDelta_DeltaY' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_MakeLiteralFloat_ReturnValue) == 0x0003DC, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, Temp_int_Variable_2) == 0x0003E0, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_Multiply_FloatFloat_ReturnValue_6) == 0x0003E4, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_Multiply_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_Add_IntInt_ReturnValue_2) == 0x0003E8, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_Multiply_FloatFloat_ReturnValue_7) == 0x0003EC, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_Multiply_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_Multiply_FloatFloat_ReturnValue_8) == 0x0003F0, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_Multiply_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_Array_Get_Item_1) == 0x0003F8, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_Less_IntInt_ReturnValue_3) == 0x000400, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_IsPlatformGroupDesktop_ReturnValue_3) == 0x000401, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_IsPlatformGroupDesktop_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, Temp_int_Variable_3) == 0x000404, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_Add_IntInt_ReturnValue_3) == 0x000408, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_NotEqual_ObjectObject_ReturnValue_1) == 0x00040C, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_NotEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, K2Node_ComponentBoundEvent_Sender_2) == 0x000410, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::K2Node_ComponentBoundEvent_Sender_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_IsPlatformGroupDesktop_ReturnValue_4) == 0x000418, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_IsPlatformGroupDesktop_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, K2Node_ComponentBoundEvent_Sender_1) == 0x000420, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::K2Node_ComponentBoundEvent_Sender_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, K2Node_ComponentBoundEvent_Sender) == 0x000428, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::K2Node_ComponentBoundEvent_Sender' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_IsPlatformGroupDesktop_ReturnValue_5) == 0x000430, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_IsPlatformGroupDesktop_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_GetFlameGameInstance_ReturnValue) == 0x000438, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_GetFlameGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_GetLastInputMode_ReturnValue) == 0x000440, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_GetLastInputMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000441, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_IsValid_ReturnValue_15) == 0x000442, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_IsValid_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, K2Node_CreateDelegate_OutputDelegate_15) == 0x000444, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::K2Node_CreateDelegate_OutputDelegate_15' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_GetItemType_ReturnValue_1) == 0x000458, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_GetItemType_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_CanClassRotate_ReturnValue) == 0x000460, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_CanClassRotate_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_IsPlatformGroupDesktop_ReturnValue_6) == 0x000461, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_IsPlatformGroupDesktop_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_IsValid_ReturnValue_16) == 0x000462, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_IsValid_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_IsPlatformGroupDesktop_ReturnValue_7) == 0x000463, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_IsPlatformGroupDesktop_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_GetOwningPlayer_ReturnValue_4) == 0x000468, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_GetOwningPlayer_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_HasUserFocus_ReturnValue) == 0x000470, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_HasUserFocus_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_Not_PreBool_ReturnValue) == 0x000471, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_Get_Season_Name_Active_Season_Name_6) == 0x000474, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_Get_Season_Name_Active_Season_Name_6' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_IsValid_ReturnValue_17) == 0x00047C, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_IsValid_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_Get_Season_Max_Level_Max_Level_2) == 0x000480, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_Get_Season_Max_Level_Max_Level_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_Get_Level_in_Season_Level_1) == 0x000484, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_Get_Level_in_Season_Level_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_Less_IntInt_ReturnValue_4) == 0x000488, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_Divide_IntInt_ReturnValue_1) == 0x00048C, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_Divide_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_Multiply_IntInt_ReturnValue) == 0x000490, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_Subtract_IntInt_ReturnValue) == 0x000494, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, K2Node_MakeStruct_SlateColor) == 0x000498, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, K2Node_Select_Default_1) == 0x0004C0, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_SetTileFocus_FocusWasSet_1) == 0x0004C8, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_SetTileFocus_FocusWasSet_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_GetTileEmpty_IsTileEmpty) == 0x0004C9, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_GetTileEmpty_IsTileEmpty' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, K2Node_MakeStruct_SlateColor_1) == 0x0004D0, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_GetFlameGameInstance_ReturnValue_1) == 0x0004F8, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_GetFlameGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_GetLastInputMode_ReturnValue_1) == 0x000500, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_GetLastInputMode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_GetLastInputMode_ReturnValue_2) == 0x000501, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_GetLastInputMode_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000502, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000503, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, K2Node_CreateDelegate_OutputDelegate_16) == 0x000504, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::K2Node_CreateDelegate_OutputDelegate_16' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, K2Node_CreateDelegate_OutputDelegate_17) == 0x000514, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::K2Node_CreateDelegate_OutputDelegate_17' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_GetFlameGameInstance_ReturnValue_2) == 0x000528, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_GetFlameGameInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, K2Node_CustomEvent_PlayerIndex) == 0x000530, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::K2Node_CustomEvent_PlayerIndex' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, K2Node_CustomEvent_InputMode) == 0x000534, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::K2Node_CustomEvent_InputMode' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_GetLastInputMode_ReturnValue_3) == 0x000535, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_GetLastInputMode_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, K2Node_CreateDelegate_OutputDelegate_18) == 0x000538, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::K2Node_CreateDelegate_OutputDelegate_18' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_IsValid_ReturnValue_18) == 0x000548, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_IsValid_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_IsValid_ReturnValue_19) == 0x000549, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_IsValid_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_IsValid_ReturnValue_20) == 0x00054A, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_IsValid_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_SetTileFocus_FocusWasSet_2) == 0x00054B, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_SetTileFocus_FocusWasSet_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_GetOwningPlayer_ReturnValue_5) == 0x000550, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_GetOwningPlayer_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, Temp_delegate_Variable) == 0x000558, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_GetShelterUI_ReturnValue) == 0x000568, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_GetShelterUI_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_ShowMessageBox_ReturnValue) == 0x000570, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_ShowMessageBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_GetAllWidgetsOfClass_FoundWidgets_2) == 0x000578, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_GetAllWidgetsOfClass_FoundWidgets_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_Not_PreBool_ReturnValue_1) == 0x000588, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_Array_Length_ReturnValue_2) == 0x00058C, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000590, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_GetAllWidgetsOfClass_FoundWidgets_3) == 0x000598, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_GetAllWidgetsOfClass_FoundWidgets_3' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_Array_Get_Item_2) == 0x0005A8, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_Array_Length_ReturnValue_3) == 0x0005B0, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass, CallFunc_Less_IntInt_ReturnValue_5) == 0x0005B4, "Member 'UI_BattlePass_C_ExecuteUbergraph_UI_BattlePass::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");

// Function UI_BattlePass.UI_BattlePass_C.InputModeChanged
// 0x0008 (0x0008 - 0x0000)
struct UI_BattlePass_C_InputModeChanged final
{
public:
	int32                                         PlayerIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputMode                                    InputMode;                                         // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattlePass_C_InputModeChanged) == 0x000004, "Wrong alignment on UI_BattlePass_C_InputModeChanged");
static_assert(sizeof(UI_BattlePass_C_InputModeChanged) == 0x000008, "Wrong size on UI_BattlePass_C_InputModeChanged");
static_assert(offsetof(UI_BattlePass_C_InputModeChanged, PlayerIndex) == 0x000000, "Member 'UI_BattlePass_C_InputModeChanged::PlayerIndex' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_InputModeChanged, InputMode) == 0x000004, "Member 'UI_BattlePass_C_InputModeChanged::InputMode' has a wrong offset!");

// Function UI_BattlePass.UI_BattlePass_C.BndEvt__ButtonUpgradeToPremiumWindows_K2Node_ComponentBoundEvent_9_OnButtonClickedEvent__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct UI_BattlePass_C_BndEvt__ButtonUpgradeToPremiumWindows_K2Node_ComponentBoundEvent_9_OnButtonClickedEvent__DelegateSignature final
{
public:
	class UButton*                                Sender;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattlePass_C_BndEvt__ButtonUpgradeToPremiumWindows_K2Node_ComponentBoundEvent_9_OnButtonClickedEvent__DelegateSignature) == 0x000008, "Wrong alignment on UI_BattlePass_C_BndEvt__ButtonUpgradeToPremiumWindows_K2Node_ComponentBoundEvent_9_OnButtonClickedEvent__DelegateSignature");
static_assert(sizeof(UI_BattlePass_C_BndEvt__ButtonUpgradeToPremiumWindows_K2Node_ComponentBoundEvent_9_OnButtonClickedEvent__DelegateSignature) == 0x000008, "Wrong size on UI_BattlePass_C_BndEvt__ButtonUpgradeToPremiumWindows_K2Node_ComponentBoundEvent_9_OnButtonClickedEvent__DelegateSignature");
static_assert(offsetof(UI_BattlePass_C_BndEvt__ButtonUpgradeToPremiumWindows_K2Node_ComponentBoundEvent_9_OnButtonClickedEvent__DelegateSignature, Sender) == 0x000000, "Member 'UI_BattlePass_C_BndEvt__ButtonUpgradeToPremiumWindows_K2Node_ComponentBoundEvent_9_OnButtonClickedEvent__DelegateSignature::Sender' has a wrong offset!");

// Function UI_BattlePass.UI_BattlePass_C.BndEvt__ScrollRightButton_K2Node_ComponentBoundEvent_8_OnButtonClickedEvent__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct UI_BattlePass_C_BndEvt__ScrollRightButton_K2Node_ComponentBoundEvent_8_OnButtonClickedEvent__DelegateSignature final
{
public:
	class UButton*                                Sender;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattlePass_C_BndEvt__ScrollRightButton_K2Node_ComponentBoundEvent_8_OnButtonClickedEvent__DelegateSignature) == 0x000008, "Wrong alignment on UI_BattlePass_C_BndEvt__ScrollRightButton_K2Node_ComponentBoundEvent_8_OnButtonClickedEvent__DelegateSignature");
static_assert(sizeof(UI_BattlePass_C_BndEvt__ScrollRightButton_K2Node_ComponentBoundEvent_8_OnButtonClickedEvent__DelegateSignature) == 0x000008, "Wrong size on UI_BattlePass_C_BndEvt__ScrollRightButton_K2Node_ComponentBoundEvent_8_OnButtonClickedEvent__DelegateSignature");
static_assert(offsetof(UI_BattlePass_C_BndEvt__ScrollRightButton_K2Node_ComponentBoundEvent_8_OnButtonClickedEvent__DelegateSignature, Sender) == 0x000000, "Member 'UI_BattlePass_C_BndEvt__ScrollRightButton_K2Node_ComponentBoundEvent_8_OnButtonClickedEvent__DelegateSignature::Sender' has a wrong offset!");

// Function UI_BattlePass.UI_BattlePass_C.BndEvt__ScrollLeftButton_K2Node_ComponentBoundEvent_7_OnButtonClickedEvent__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct UI_BattlePass_C_BndEvt__ScrollLeftButton_K2Node_ComponentBoundEvent_7_OnButtonClickedEvent__DelegateSignature final
{
public:
	class UButton*                                Sender;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattlePass_C_BndEvt__ScrollLeftButton_K2Node_ComponentBoundEvent_7_OnButtonClickedEvent__DelegateSignature) == 0x000008, "Wrong alignment on UI_BattlePass_C_BndEvt__ScrollLeftButton_K2Node_ComponentBoundEvent_7_OnButtonClickedEvent__DelegateSignature");
static_assert(sizeof(UI_BattlePass_C_BndEvt__ScrollLeftButton_K2Node_ComponentBoundEvent_7_OnButtonClickedEvent__DelegateSignature) == 0x000008, "Wrong size on UI_BattlePass_C_BndEvt__ScrollLeftButton_K2Node_ComponentBoundEvent_7_OnButtonClickedEvent__DelegateSignature");
static_assert(offsetof(UI_BattlePass_C_BndEvt__ScrollLeftButton_K2Node_ComponentBoundEvent_7_OnButtonClickedEvent__DelegateSignature, Sender) == 0x000000, "Member 'UI_BattlePass_C_BndEvt__ScrollLeftButton_K2Node_ComponentBoundEvent_7_OnButtonClickedEvent__DelegateSignature::Sender' has a wrong offset!");

// Function UI_BattlePass.UI_BattlePass_C.Tick
// 0x003C (0x003C - 0x0000)
struct UI_BattlePass_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattlePass_C_Tick) == 0x000004, "Wrong alignment on UI_BattlePass_C_Tick");
static_assert(sizeof(UI_BattlePass_C_Tick) == 0x00003C, "Wrong size on UI_BattlePass_C_Tick");
static_assert(offsetof(UI_BattlePass_C_Tick, MyGeometry) == 0x000000, "Member 'UI_BattlePass_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_Tick, InDeltaTime) == 0x000038, "Member 'UI_BattlePass_C_Tick::InDeltaTime' has a wrong offset!");

// Function UI_BattlePass.UI_BattlePass_C.OnChildFocusReceived
// 0x0008 (0x0008 - 0x0000)
struct UI_BattlePass_C_OnChildFocusReceived final
{
public:
	class UWidget*                                InWidget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattlePass_C_OnChildFocusReceived) == 0x000008, "Wrong alignment on UI_BattlePass_C_OnChildFocusReceived");
static_assert(sizeof(UI_BattlePass_C_OnChildFocusReceived) == 0x000008, "Wrong size on UI_BattlePass_C_OnChildFocusReceived");
static_assert(offsetof(UI_BattlePass_C_OnChildFocusReceived, InWidget) == 0x000000, "Member 'UI_BattlePass_C_OnChildFocusReceived::InWidget' has a wrong offset!");

// Function UI_BattlePass.UI_BattlePass_C.BndEvt__UI_BattlePass_ScrollRightButton_K2Node_ComponentBoundEvent_15_OnButtonHoverEvent__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct UI_BattlePass_C_BndEvt__UI_BattlePass_ScrollRightButton_K2Node_ComponentBoundEvent_15_OnButtonHoverEvent__DelegateSignature final
{
public:
	class UButton*                                Sender;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattlePass_C_BndEvt__UI_BattlePass_ScrollRightButton_K2Node_ComponentBoundEvent_15_OnButtonHoverEvent__DelegateSignature) == 0x000008, "Wrong alignment on UI_BattlePass_C_BndEvt__UI_BattlePass_ScrollRightButton_K2Node_ComponentBoundEvent_15_OnButtonHoverEvent__DelegateSignature");
static_assert(sizeof(UI_BattlePass_C_BndEvt__UI_BattlePass_ScrollRightButton_K2Node_ComponentBoundEvent_15_OnButtonHoverEvent__DelegateSignature) == 0x000008, "Wrong size on UI_BattlePass_C_BndEvt__UI_BattlePass_ScrollRightButton_K2Node_ComponentBoundEvent_15_OnButtonHoverEvent__DelegateSignature");
static_assert(offsetof(UI_BattlePass_C_BndEvt__UI_BattlePass_ScrollRightButton_K2Node_ComponentBoundEvent_15_OnButtonHoverEvent__DelegateSignature, Sender) == 0x000000, "Member 'UI_BattlePass_C_BndEvt__UI_BattlePass_ScrollRightButton_K2Node_ComponentBoundEvent_15_OnButtonHoverEvent__DelegateSignature::Sender' has a wrong offset!");

// Function UI_BattlePass.UI_BattlePass_C.BndEvt__UI_BattlePass_ScrollRightButton_K2Node_ComponentBoundEvent_14_OnButtonHoverEvent__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct UI_BattlePass_C_BndEvt__UI_BattlePass_ScrollRightButton_K2Node_ComponentBoundEvent_14_OnButtonHoverEvent__DelegateSignature final
{
public:
	class UButton*                                Sender;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattlePass_C_BndEvt__UI_BattlePass_ScrollRightButton_K2Node_ComponentBoundEvent_14_OnButtonHoverEvent__DelegateSignature) == 0x000008, "Wrong alignment on UI_BattlePass_C_BndEvt__UI_BattlePass_ScrollRightButton_K2Node_ComponentBoundEvent_14_OnButtonHoverEvent__DelegateSignature");
static_assert(sizeof(UI_BattlePass_C_BndEvt__UI_BattlePass_ScrollRightButton_K2Node_ComponentBoundEvent_14_OnButtonHoverEvent__DelegateSignature) == 0x000008, "Wrong size on UI_BattlePass_C_BndEvt__UI_BattlePass_ScrollRightButton_K2Node_ComponentBoundEvent_14_OnButtonHoverEvent__DelegateSignature");
static_assert(offsetof(UI_BattlePass_C_BndEvt__UI_BattlePass_ScrollRightButton_K2Node_ComponentBoundEvent_14_OnButtonHoverEvent__DelegateSignature, Sender) == 0x000000, "Member 'UI_BattlePass_C_BndEvt__UI_BattlePass_ScrollRightButton_K2Node_ComponentBoundEvent_14_OnButtonHoverEvent__DelegateSignature::Sender' has a wrong offset!");

// Function UI_BattlePass.UI_BattlePass_C.BndEvt__UI_BattlePass_ScrollLeftButton_K2Node_ComponentBoundEvent_13_OnButtonHoverEvent__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct UI_BattlePass_C_BndEvt__UI_BattlePass_ScrollLeftButton_K2Node_ComponentBoundEvent_13_OnButtonHoverEvent__DelegateSignature final
{
public:
	class UButton*                                Sender;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattlePass_C_BndEvt__UI_BattlePass_ScrollLeftButton_K2Node_ComponentBoundEvent_13_OnButtonHoverEvent__DelegateSignature) == 0x000008, "Wrong alignment on UI_BattlePass_C_BndEvt__UI_BattlePass_ScrollLeftButton_K2Node_ComponentBoundEvent_13_OnButtonHoverEvent__DelegateSignature");
static_assert(sizeof(UI_BattlePass_C_BndEvt__UI_BattlePass_ScrollLeftButton_K2Node_ComponentBoundEvent_13_OnButtonHoverEvent__DelegateSignature) == 0x000008, "Wrong size on UI_BattlePass_C_BndEvt__UI_BattlePass_ScrollLeftButton_K2Node_ComponentBoundEvent_13_OnButtonHoverEvent__DelegateSignature");
static_assert(offsetof(UI_BattlePass_C_BndEvt__UI_BattlePass_ScrollLeftButton_K2Node_ComponentBoundEvent_13_OnButtonHoverEvent__DelegateSignature, Sender) == 0x000000, "Member 'UI_BattlePass_C_BndEvt__UI_BattlePass_ScrollLeftButton_K2Node_ComponentBoundEvent_13_OnButtonHoverEvent__DelegateSignature::Sender' has a wrong offset!");

// Function UI_BattlePass.UI_BattlePass_C.BndEvt__UI_BattlePass_ScrollLeftButton_K2Node_ComponentBoundEvent_12_OnButtonHoverEvent__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct UI_BattlePass_C_BndEvt__UI_BattlePass_ScrollLeftButton_K2Node_ComponentBoundEvent_12_OnButtonHoverEvent__DelegateSignature final
{
public:
	class UButton*                                Sender;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattlePass_C_BndEvt__UI_BattlePass_ScrollLeftButton_K2Node_ComponentBoundEvent_12_OnButtonHoverEvent__DelegateSignature) == 0x000008, "Wrong alignment on UI_BattlePass_C_BndEvt__UI_BattlePass_ScrollLeftButton_K2Node_ComponentBoundEvent_12_OnButtonHoverEvent__DelegateSignature");
static_assert(sizeof(UI_BattlePass_C_BndEvt__UI_BattlePass_ScrollLeftButton_K2Node_ComponentBoundEvent_12_OnButtonHoverEvent__DelegateSignature) == 0x000008, "Wrong size on UI_BattlePass_C_BndEvt__UI_BattlePass_ScrollLeftButton_K2Node_ComponentBoundEvent_12_OnButtonHoverEvent__DelegateSignature");
static_assert(offsetof(UI_BattlePass_C_BndEvt__UI_BattlePass_ScrollLeftButton_K2Node_ComponentBoundEvent_12_OnButtonHoverEvent__DelegateSignature, Sender) == 0x000000, "Member 'UI_BattlePass_C_BndEvt__UI_BattlePass_ScrollLeftButton_K2Node_ComponentBoundEvent_12_OnButtonHoverEvent__DelegateSignature::Sender' has a wrong offset!");

// Function UI_BattlePass.UI_BattlePass_C.BndEvt__UI_BattlePass_ButtonUpgradeToPremiumWindows_K2Node_ComponentBoundEvent_11_OnButtonHoverEvent__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct UI_BattlePass_C_BndEvt__UI_BattlePass_ButtonUpgradeToPremiumWindows_K2Node_ComponentBoundEvent_11_OnButtonHoverEvent__DelegateSignature final
{
public:
	class UButton*                                Sender;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattlePass_C_BndEvt__UI_BattlePass_ButtonUpgradeToPremiumWindows_K2Node_ComponentBoundEvent_11_OnButtonHoverEvent__DelegateSignature) == 0x000008, "Wrong alignment on UI_BattlePass_C_BndEvt__UI_BattlePass_ButtonUpgradeToPremiumWindows_K2Node_ComponentBoundEvent_11_OnButtonHoverEvent__DelegateSignature");
static_assert(sizeof(UI_BattlePass_C_BndEvt__UI_BattlePass_ButtonUpgradeToPremiumWindows_K2Node_ComponentBoundEvent_11_OnButtonHoverEvent__DelegateSignature) == 0x000008, "Wrong size on UI_BattlePass_C_BndEvt__UI_BattlePass_ButtonUpgradeToPremiumWindows_K2Node_ComponentBoundEvent_11_OnButtonHoverEvent__DelegateSignature");
static_assert(offsetof(UI_BattlePass_C_BndEvt__UI_BattlePass_ButtonUpgradeToPremiumWindows_K2Node_ComponentBoundEvent_11_OnButtonHoverEvent__DelegateSignature, Sender) == 0x000000, "Member 'UI_BattlePass_C_BndEvt__UI_BattlePass_ButtonUpgradeToPremiumWindows_K2Node_ComponentBoundEvent_11_OnButtonHoverEvent__DelegateSignature::Sender' has a wrong offset!");

// Function UI_BattlePass.UI_BattlePass_C.BndEvt__UI_BattlePass_ButtonUpgradeToPremiumWindows_K2Node_ComponentBoundEvent_10_OnButtonHoverEvent__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct UI_BattlePass_C_BndEvt__UI_BattlePass_ButtonUpgradeToPremiumWindows_K2Node_ComponentBoundEvent_10_OnButtonHoverEvent__DelegateSignature final
{
public:
	class UButton*                                Sender;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattlePass_C_BndEvt__UI_BattlePass_ButtonUpgradeToPremiumWindows_K2Node_ComponentBoundEvent_10_OnButtonHoverEvent__DelegateSignature) == 0x000008, "Wrong alignment on UI_BattlePass_C_BndEvt__UI_BattlePass_ButtonUpgradeToPremiumWindows_K2Node_ComponentBoundEvent_10_OnButtonHoverEvent__DelegateSignature");
static_assert(sizeof(UI_BattlePass_C_BndEvt__UI_BattlePass_ButtonUpgradeToPremiumWindows_K2Node_ComponentBoundEvent_10_OnButtonHoverEvent__DelegateSignature) == 0x000008, "Wrong size on UI_BattlePass_C_BndEvt__UI_BattlePass_ButtonUpgradeToPremiumWindows_K2Node_ComponentBoundEvent_10_OnButtonHoverEvent__DelegateSignature");
static_assert(offsetof(UI_BattlePass_C_BndEvt__UI_BattlePass_ButtonUpgradeToPremiumWindows_K2Node_ComponentBoundEvent_10_OnButtonHoverEvent__DelegateSignature, Sender) == 0x000000, "Member 'UI_BattlePass_C_BndEvt__UI_BattlePass_ButtonUpgradeToPremiumWindows_K2Node_ComponentBoundEvent_10_OnButtonHoverEvent__DelegateSignature::Sender' has a wrong offset!");

// Function UI_BattlePass.UI_BattlePass_C.RequestLevelsPurchase
// 0x0004 (0x0004 - 0x0000)
struct UI_BattlePass_C_RequestLevelsPurchase final
{
public:
	int32                                         Levels;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattlePass_C_RequestLevelsPurchase) == 0x000004, "Wrong alignment on UI_BattlePass_C_RequestLevelsPurchase");
static_assert(sizeof(UI_BattlePass_C_RequestLevelsPurchase) == 0x000004, "Wrong size on UI_BattlePass_C_RequestLevelsPurchase");
static_assert(offsetof(UI_BattlePass_C_RequestLevelsPurchase, Levels) == 0x000000, "Member 'UI_BattlePass_C_RequestLevelsPurchase::Levels' has a wrong offset!");

// Function UI_BattlePass.UI_BattlePass_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_BattlePass_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_BattlePass_C_PreConstruct) == 0x000001, "Wrong alignment on UI_BattlePass_C_PreConstruct");
static_assert(sizeof(UI_BattlePass_C_PreConstruct) == 0x000001, "Wrong size on UI_BattlePass_C_PreConstruct");
static_assert(offsetof(UI_BattlePass_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_BattlePass_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_BattlePass.UI_BattlePass_C.ShowOnboarding
// 0x0008 (0x0008 - 0x0000)
struct UI_BattlePass_C_ShowOnboarding final
{
public:
	class UFlameWidget*                           Flame_Widget;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattlePass_C_ShowOnboarding) == 0x000008, "Wrong alignment on UI_BattlePass_C_ShowOnboarding");
static_assert(sizeof(UI_BattlePass_C_ShowOnboarding) == 0x000008, "Wrong size on UI_BattlePass_C_ShowOnboarding");
static_assert(offsetof(UI_BattlePass_C_ShowOnboarding, Flame_Widget) == 0x000000, "Member 'UI_BattlePass_C_ShowOnboarding::Flame_Widget' has a wrong offset!");

// Function UI_BattlePass.UI_BattlePass_C.Event_BattlePassBuyPremiumClosed
// 0x0001 (0x0001 - 0x0000)
struct UI_BattlePass_C_Event_BattlePassBuyPremiumClosed final
{
public:
	bool                                          WasPremiumPurchaseSuccesful;                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_BattlePass_C_Event_BattlePassBuyPremiumClosed) == 0x000001, "Wrong alignment on UI_BattlePass_C_Event_BattlePassBuyPremiumClosed");
static_assert(sizeof(UI_BattlePass_C_Event_BattlePassBuyPremiumClosed) == 0x000001, "Wrong size on UI_BattlePass_C_Event_BattlePassBuyPremiumClosed");
static_assert(offsetof(UI_BattlePass_C_Event_BattlePassBuyPremiumClosed, WasPremiumPurchaseSuccesful) == 0x000000, "Member 'UI_BattlePass_C_Event_BattlePassBuyPremiumClosed::WasPremiumPurchaseSuccesful' has a wrong offset!");

// Function UI_BattlePass.UI_BattlePass_C.Event Level Purchase Result
// 0x0001 (0x0001 - 0x0000)
struct UI_BattlePass_C_Event_Level_Purchase_Result final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_BattlePass_C_Event_Level_Purchase_Result) == 0x000001, "Wrong alignment on UI_BattlePass_C_Event_Level_Purchase_Result");
static_assert(sizeof(UI_BattlePass_C_Event_Level_Purchase_Result) == 0x000001, "Wrong size on UI_BattlePass_C_Event_Level_Purchase_Result");
static_assert(offsetof(UI_BattlePass_C_Event_Level_Purchase_Result, Success) == 0x000000, "Member 'UI_BattlePass_C_Event_Level_Purchase_Result::Success' has a wrong offset!");

// Function UI_BattlePass.UI_BattlePass_C.Event_AboutBattlePassClosed
// 0x0008 (0x0008 - 0x0000)
struct UI_BattlePass_C_Event_AboutBattlePassClosed final
{
public:
	class UFlameWidget*                           FlameWidget;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattlePass_C_Event_AboutBattlePassClosed) == 0x000008, "Wrong alignment on UI_BattlePass_C_Event_AboutBattlePassClosed");
static_assert(sizeof(UI_BattlePass_C_Event_AboutBattlePassClosed) == 0x000008, "Wrong size on UI_BattlePass_C_Event_AboutBattlePassClosed");
static_assert(offsetof(UI_BattlePass_C_Event_AboutBattlePassClosed, FlameWidget) == 0x000000, "Member 'UI_BattlePass_C_Event_AboutBattlePassClosed::FlameWidget' has a wrong offset!");

// Function UI_BattlePass.UI_BattlePass_C.EventLevelUpClosed
// 0x0008 (0x0008 - 0x0000)
struct UI_BattlePass_C_EventLevelUpClosed final
{
public:
	class UFlameWidget*                           Flame_Widget;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattlePass_C_EventLevelUpClosed) == 0x000008, "Wrong alignment on UI_BattlePass_C_EventLevelUpClosed");
static_assert(sizeof(UI_BattlePass_C_EventLevelUpClosed) == 0x000008, "Wrong size on UI_BattlePass_C_EventLevelUpClosed");
static_assert(offsetof(UI_BattlePass_C_EventLevelUpClosed, Flame_Widget) == 0x000000, "Member 'UI_BattlePass_C_EventLevelUpClosed::Flame_Widget' has a wrong offset!");

// Function UI_BattlePass.UI_BattlePass_C.CheckUnclaimedRewards
// 0x0001 (0x0001 - 0x0000)
struct UI_BattlePass_C_CheckUnclaimedRewards final
{
public:
	bool                                          WasPremiumJustBought;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_BattlePass_C_CheckUnclaimedRewards) == 0x000001, "Wrong alignment on UI_BattlePass_C_CheckUnclaimedRewards");
static_assert(sizeof(UI_BattlePass_C_CheckUnclaimedRewards) == 0x000001, "Wrong size on UI_BattlePass_C_CheckUnclaimedRewards");
static_assert(offsetof(UI_BattlePass_C_CheckUnclaimedRewards, WasPremiumJustBought) == 0x000000, "Member 'UI_BattlePass_C_CheckUnclaimedRewards::WasPremiumJustBought' has a wrong offset!");

// Function UI_BattlePass.UI_BattlePass_C.Restart Screen on Widget Closure
// 0x0008 (0x0008 - 0x0000)
struct UI_BattlePass_C_Restart_Screen_on_Widget_Closure final
{
public:
	class UFlameWidget*                           FlameWidget;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattlePass_C_Restart_Screen_on_Widget_Closure) == 0x000008, "Wrong alignment on UI_BattlePass_C_Restart_Screen_on_Widget_Closure");
static_assert(sizeof(UI_BattlePass_C_Restart_Screen_on_Widget_Closure) == 0x000008, "Wrong size on UI_BattlePass_C_Restart_Screen_on_Widget_Closure");
static_assert(offsetof(UI_BattlePass_C_Restart_Screen_on_Widget_Closure, FlameWidget) == 0x000000, "Member 'UI_BattlePass_C_Restart_Screen_on_Widget_Closure::FlameWidget' has a wrong offset!");

// Function UI_BattlePass.UI_BattlePass_C.FillTiles
// 0x02A0 (0x02A0 - 0x0000)
struct UI_BattlePass_C_FillTiles final
{
public:
	int32                                         PageNumIn;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBattlePassLevel>               LevelRewards;                                      // 0x0008(0x0010)(Edit, BlueprintVisible)
	int32                                         ItemIndex;                                         // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TileIndex;                                         // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Get_Season_Name_Active_Season_Name;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Get_Season_Name_Active_Season_Name_1;     // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Get_Season_Name_Active_Season_Name_2;     // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_BattlePassLevelRewardFull>   CallFunc_Compile_Rewards_in_Level_Range_Rewards;   // 0x0040(0x0010)(ReferenceParm)
	int32                                         CallFunc_Get_Season_Max_Level_Max_Level;           // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0058(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_BattlePassLevelRewardFull>   CallFunc_Compile_Rewards_in_Level_Range_Rewards_1; // 0x00A0(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Get_Season_Name_Active_Season_Name_3;     // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Level_in_Season_Level;                // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Get_Season_Name_Active_Season_Name_4;     // 0x00BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Level_in_Season_Level_1;              // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Get_Season_Name_Active_Season_Name_5;     // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Level_in_Season_Level_2;              // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Get_Season_Name_Active_Season_Name_6;     // 0x00D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Premium_Status_Premium_Active;        // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DF[0x1];                                       // 0x00DF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 CallFunc_Array_Get_Item;                           // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EE[0x2];                                       // 0x00EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x0105(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0106(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0107(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_BattlePassTile_C*                   CallFunc_Array_Get_Item_1;                         // 0x0108(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0118(0x0018)()
	int32                                         Temp_int_Variable_1;                               // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFlameTextBlock*                        CallFunc_Array_Get_Item_2;                         // 0x0138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x3];                                      // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_1;            // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0158(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x01A0(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x01E8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0200(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0240(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0250(0x0018)()
	bool                                          Temp_bool_Variable;                                // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_269[0x7];                                      // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0270(0x0018)()
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_289[0x7];                                      // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_BattlePassTile_C*                   CallFunc_Array_Get_Item_3;                         // 0x0290(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetTileEmpty_IsTileEmpty;                 // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0299(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_BattlePass_C_FillTiles) == 0x000008, "Wrong alignment on UI_BattlePass_C_FillTiles");
static_assert(sizeof(UI_BattlePass_C_FillTiles) == 0x0002A0, "Wrong size on UI_BattlePass_C_FillTiles");
static_assert(offsetof(UI_BattlePass_C_FillTiles, PageNumIn) == 0x000000, "Member 'UI_BattlePass_C_FillTiles::PageNumIn' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FillTiles, LevelRewards) == 0x000008, "Member 'UI_BattlePass_C_FillTiles::LevelRewards' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FillTiles, ItemIndex) == 0x000018, "Member 'UI_BattlePass_C_FillTiles::ItemIndex' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FillTiles, TileIndex) == 0x00001C, "Member 'UI_BattlePass_C_FillTiles::TileIndex' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FillTiles, CallFunc_Get_Season_Name_Active_Season_Name) == 0x000020, "Member 'UI_BattlePass_C_FillTiles::CallFunc_Get_Season_Name_Active_Season_Name' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FillTiles, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'UI_BattlePass_C_FillTiles::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FillTiles, CallFunc_Get_Season_Name_Active_Season_Name_1) == 0x00002C, "Member 'UI_BattlePass_C_FillTiles::CallFunc_Get_Season_Name_Active_Season_Name_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FillTiles, CallFunc_Get_Season_Name_Active_Season_Name_2) == 0x000034, "Member 'UI_BattlePass_C_FillTiles::CallFunc_Get_Season_Name_Active_Season_Name_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FillTiles, CallFunc_Compile_Rewards_in_Level_Range_Rewards) == 0x000040, "Member 'UI_BattlePass_C_FillTiles::CallFunc_Compile_Rewards_in_Level_Range_Rewards' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FillTiles, CallFunc_Get_Season_Max_Level_Max_Level) == 0x000050, "Member 'UI_BattlePass_C_FillTiles::CallFunc_Get_Season_Max_Level_Max_Level' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FillTiles, K2Node_MakeStruct_FormatArgumentData) == 0x000058, "Member 'UI_BattlePass_C_FillTiles::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FillTiles, CallFunc_Add_IntInt_ReturnValue_1) == 0x000098, "Member 'UI_BattlePass_C_FillTiles::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FillTiles, CallFunc_Compile_Rewards_in_Level_Range_Rewards_1) == 0x0000A0, "Member 'UI_BattlePass_C_FillTiles::CallFunc_Compile_Rewards_in_Level_Range_Rewards_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FillTiles, CallFunc_Get_Season_Name_Active_Season_Name_3) == 0x0000B0, "Member 'UI_BattlePass_C_FillTiles::CallFunc_Get_Season_Name_Active_Season_Name_3' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FillTiles, CallFunc_Get_Level_in_Season_Level) == 0x0000B8, "Member 'UI_BattlePass_C_FillTiles::CallFunc_Get_Level_in_Season_Level' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FillTiles, CallFunc_Get_Season_Name_Active_Season_Name_4) == 0x0000BC, "Member 'UI_BattlePass_C_FillTiles::CallFunc_Get_Season_Name_Active_Season_Name_4' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FillTiles, CallFunc_Get_Level_in_Season_Level_1) == 0x0000C4, "Member 'UI_BattlePass_C_FillTiles::CallFunc_Get_Level_in_Season_Level_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FillTiles, CallFunc_Get_Season_Name_Active_Season_Name_5) == 0x0000C8, "Member 'UI_BattlePass_C_FillTiles::CallFunc_Get_Season_Name_Active_Season_Name_5' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FillTiles, CallFunc_Get_Level_in_Season_Level_2) == 0x0000D0, "Member 'UI_BattlePass_C_FillTiles::CallFunc_Get_Level_in_Season_Level_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FillTiles, CallFunc_Get_Season_Name_Active_Season_Name_6) == 0x0000D4, "Member 'UI_BattlePass_C_FillTiles::CallFunc_Get_Season_Name_Active_Season_Name_6' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FillTiles, CallFunc_Get_Premium_Status_Premium_Active) == 0x0000DC, "Member 'UI_BattlePass_C_FillTiles::CallFunc_Get_Premium_Status_Premium_Active' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FillTiles, CallFunc_Not_PreBool_ReturnValue) == 0x0000DD, "Member 'UI_BattlePass_C_FillTiles::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FillTiles, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000DE, "Member 'UI_BattlePass_C_FillTiles::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FillTiles, CallFunc_Array_Get_Item) == 0x0000E0, "Member 'UI_BattlePass_C_FillTiles::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FillTiles, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000E8, "Member 'UI_BattlePass_C_FillTiles::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FillTiles, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000EC, "Member 'UI_BattlePass_C_FillTiles::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FillTiles, CallFunc_IsValid_ReturnValue) == 0x0000ED, "Member 'UI_BattlePass_C_FillTiles::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FillTiles, Temp_int_Variable) == 0x0000F0, "Member 'UI_BattlePass_C_FillTiles::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FillTiles, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000F4, "Member 'UI_BattlePass_C_FillTiles::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FillTiles, Temp_byte_Variable) == 0x0000F8, "Member 'UI_BattlePass_C_FillTiles::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FillTiles, CallFunc_Add_IntInt_ReturnValue_4) == 0x0000FC, "Member 'UI_BattlePass_C_FillTiles::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FillTiles, CallFunc_Add_IntInt_ReturnValue_5) == 0x000100, "Member 'UI_BattlePass_C_FillTiles::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FillTiles, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000104, "Member 'UI_BattlePass_C_FillTiles::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FillTiles, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x000105, "Member 'UI_BattlePass_C_FillTiles::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FillTiles, CallFunc_BooleanAND_ReturnValue) == 0x000106, "Member 'UI_BattlePass_C_FillTiles::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FillTiles, Temp_byte_Variable_1) == 0x000107, "Member 'UI_BattlePass_C_FillTiles::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FillTiles, CallFunc_Array_Get_Item_1) == 0x000108, "Member 'UI_BattlePass_C_FillTiles::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FillTiles, CallFunc_IsValid_ReturnValue_1) == 0x000110, "Member 'UI_BattlePass_C_FillTiles::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FillTiles, CallFunc_Add_IntInt_ReturnValue_6) == 0x000114, "Member 'UI_BattlePass_C_FillTiles::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FillTiles, CallFunc_Conv_IntToText_ReturnValue) == 0x000118, "Member 'UI_BattlePass_C_FillTiles::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FillTiles, Temp_int_Variable_1) == 0x000130, "Member 'UI_BattlePass_C_FillTiles::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FillTiles, CallFunc_Array_Get_Item_2) == 0x000138, "Member 'UI_BattlePass_C_FillTiles::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FillTiles, CallFunc_IsValid_ReturnValue_2) == 0x000140, "Member 'UI_BattlePass_C_FillTiles::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FillTiles, CallFunc_Add_IntInt_ReturnValue_7) == 0x000144, "Member 'UI_BattlePass_C_FillTiles::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FillTiles, CallFunc_Subtract_IntInt_ReturnValue) == 0x000148, "Member 'UI_BattlePass_C_FillTiles::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FillTiles, CallFunc_Multiply_IntInt_ReturnValue) == 0x00014C, "Member 'UI_BattlePass_C_FillTiles::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FillTiles, CallFunc_Multiply_IntInt_ReturnValue_1) == 0x000150, "Member 'UI_BattlePass_C_FillTiles::CallFunc_Multiply_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FillTiles, K2Node_MakeStruct_FormatArgumentData_1) == 0x000158, "Member 'UI_BattlePass_C_FillTiles::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FillTiles, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000198, "Member 'UI_BattlePass_C_FillTiles::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FillTiles, CallFunc_Add_IntInt_ReturnValue_8) == 0x00019C, "Member 'UI_BattlePass_C_FillTiles::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FillTiles, K2Node_MakeStruct_FormatArgumentData_2) == 0x0001A0, "Member 'UI_BattlePass_C_FillTiles::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FillTiles, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x0001E0, "Member 'UI_BattlePass_C_FillTiles::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FillTiles, CallFunc_MakeLiteralText_ReturnValue) == 0x0001E8, "Member 'UI_BattlePass_C_FillTiles::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FillTiles, K2Node_MakeStruct_FormatArgumentData_3) == 0x000200, "Member 'UI_BattlePass_C_FillTiles::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FillTiles, K2Node_MakeArray_Array) == 0x000240, "Member 'UI_BattlePass_C_FillTiles::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FillTiles, CallFunc_Format_ReturnValue) == 0x000250, "Member 'UI_BattlePass_C_FillTiles::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FillTiles, Temp_bool_Variable) == 0x000268, "Member 'UI_BattlePass_C_FillTiles::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FillTiles, CallFunc_TextToUpper_ReturnValue) == 0x000270, "Member 'UI_BattlePass_C_FillTiles::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FillTiles, K2Node_Select_Default) == 0x000288, "Member 'UI_BattlePass_C_FillTiles::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FillTiles, CallFunc_Array_Get_Item_3) == 0x000290, "Member 'UI_BattlePass_C_FillTiles::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FillTiles, CallFunc_GetTileEmpty_IsTileEmpty) == 0x000298, "Member 'UI_BattlePass_C_FillTiles::CallFunc_GetTileEmpty_IsTileEmpty' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FillTiles, CallFunc_IsValid_ReturnValue_3) == 0x000299, "Member 'UI_BattlePass_C_FillTiles::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

// Function UI_BattlePass.UI_BattlePass_C.UpdateItemInfo
// 0x0430 (0x0430 - 0x0000)
struct UI_BattlePass_C_UpdateItemInfo final
{
public:
	class UWidget*                                WidgetIn;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_BattlePassTile_C*                   BattlePassTile;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_ItemGridSlotBattlePass_C*           ItemSlot;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AItem*                                  ItemDefaultObject;                                 // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_ItemGridSlotBattlePass_C*           K2Node_DynamicCast_AsUI_Item_Grid_Slot_Battle_Pass; // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetTileLocked_IsTileLocked;               // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetParentUserWidget_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_BattlePassTile_C*                   K2Node_DynamicCast_AsUI_Battle_Pass_Tile;          // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInvetoryItemDescriptor                CallFunc_GetItemDescriptor_ReturnValue;            // 0x0050(0x0030)(ConstParm, NoDestructor, ContainsInstancedReference)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0088(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00C8(0x0010)(ReferenceParm)
	class UClass*                                 K2Node_ClassDynamicCast_AsCurrency_Battle_Pass_XPBooster; // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E3[0x1];                                       // 0x00E3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTileRequiredLevel_TileRequiredLevel;   // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Level_Level;                          // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00F0(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0138(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0148(0x0018)()
	int32                                         CallFunc_GetTileRequiredLevel_TileRequiredLevel_1; // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Level_Level_1;                        // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0168(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x01B0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x01C0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x01D8(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0218(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0230(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x0270(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0280(0x0018)()
	class FText                                   CallFunc_GetDescription_ReturnValue;               // 0x0298(0x0018)()
	class FText                                   CallFunc_GetCategoryName_ReturnValue;              // 0x02B0(0x0018)()
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C9[0x7];                                      // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x02D0(0x0040)(HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_311[0x7];                                      // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FItemRarity                            CallFunc_GetItemRarity_ReturnValue;                // 0x0318(0x0028)(ConstParm)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0340(0x0028)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x0368(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_4;                          // 0x03A8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_3;                     // 0x03B8(0x0018)()
	class FText                                   CallFunc_GetItemName_ReturnValue;                  // 0x03D0(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_4;                     // 0x03E8(0x0018)()
	class FText                                   K2Node_Select_Default_1;                           // 0x0400(0x0018)()
	TSubclassOf<class AItem>                      CallFunc_GetItemType_ReturnValue;                  // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_421[0x7];                                      // 0x0421(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AItem*                                  CallFunc_GetClassDefaultObject_ReturnValue;        // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattlePass_C_UpdateItemInfo) == 0x000008, "Wrong alignment on UI_BattlePass_C_UpdateItemInfo");
static_assert(sizeof(UI_BattlePass_C_UpdateItemInfo) == 0x000430, "Wrong size on UI_BattlePass_C_UpdateItemInfo");
static_assert(offsetof(UI_BattlePass_C_UpdateItemInfo, WidgetIn) == 0x000000, "Member 'UI_BattlePass_C_UpdateItemInfo::WidgetIn' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateItemInfo, BattlePassTile) == 0x000008, "Member 'UI_BattlePass_C_UpdateItemInfo::BattlePassTile' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateItemInfo, ItemSlot) == 0x000010, "Member 'UI_BattlePass_C_UpdateItemInfo::ItemSlot' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateItemInfo, ItemDefaultObject) == 0x000018, "Member 'UI_BattlePass_C_UpdateItemInfo::ItemDefaultObject' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateItemInfo, Temp_bool_Variable) == 0x000020, "Member 'UI_BattlePass_C_UpdateItemInfo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateItemInfo, K2Node_DynamicCast_AsUI_Item_Grid_Slot_Battle_Pass) == 0x000028, "Member 'UI_BattlePass_C_UpdateItemInfo::K2Node_DynamicCast_AsUI_Item_Grid_Slot_Battle_Pass' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateItemInfo, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'UI_BattlePass_C_UpdateItemInfo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateItemInfo, CallFunc_GetTileLocked_IsTileLocked) == 0x000031, "Member 'UI_BattlePass_C_UpdateItemInfo::CallFunc_GetTileLocked_IsTileLocked' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateItemInfo, CallFunc_GetParentUserWidget_ReturnValue) == 0x000038, "Member 'UI_BattlePass_C_UpdateItemInfo::CallFunc_GetParentUserWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateItemInfo, K2Node_DynamicCast_AsUI_Battle_Pass_Tile) == 0x000040, "Member 'UI_BattlePass_C_UpdateItemInfo::K2Node_DynamicCast_AsUI_Battle_Pass_Tile' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateItemInfo, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'UI_BattlePass_C_UpdateItemInfo::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateItemInfo, CallFunc_GetItemDescriptor_ReturnValue) == 0x000050, "Member 'UI_BattlePass_C_UpdateItemInfo::CallFunc_GetItemDescriptor_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateItemInfo, Temp_byte_Variable) == 0x000080, "Member 'UI_BattlePass_C_UpdateItemInfo::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateItemInfo, K2Node_MakeStruct_FormatArgumentData) == 0x000088, "Member 'UI_BattlePass_C_UpdateItemInfo::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateItemInfo, K2Node_MakeArray_Array) == 0x0000C8, "Member 'UI_BattlePass_C_UpdateItemInfo::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateItemInfo, K2Node_ClassDynamicCast_AsCurrency_Battle_Pass_XPBooster) == 0x0000D8, "Member 'UI_BattlePass_C_UpdateItemInfo::K2Node_ClassDynamicCast_AsCurrency_Battle_Pass_XPBooster' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateItemInfo, K2Node_ClassDynamicCast_bSuccess) == 0x0000E0, "Member 'UI_BattlePass_C_UpdateItemInfo::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateItemInfo, Temp_byte_Variable_1) == 0x0000E1, "Member 'UI_BattlePass_C_UpdateItemInfo::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateItemInfo, Temp_bool_Variable_1) == 0x0000E2, "Member 'UI_BattlePass_C_UpdateItemInfo::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateItemInfo, CallFunc_GetTileRequiredLevel_TileRequiredLevel) == 0x0000E4, "Member 'UI_BattlePass_C_UpdateItemInfo::CallFunc_GetTileRequiredLevel_TileRequiredLevel' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateItemInfo, CallFunc_Get_Level_Level) == 0x0000E8, "Member 'UI_BattlePass_C_UpdateItemInfo::CallFunc_Get_Level_Level' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateItemInfo, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000F0, "Member 'UI_BattlePass_C_UpdateItemInfo::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateItemInfo, CallFunc_Less_IntInt_ReturnValue) == 0x000130, "Member 'UI_BattlePass_C_UpdateItemInfo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateItemInfo, K2Node_MakeArray_Array_1) == 0x000138, "Member 'UI_BattlePass_C_UpdateItemInfo::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateItemInfo, CallFunc_Format_ReturnValue) == 0x000148, "Member 'UI_BattlePass_C_UpdateItemInfo::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateItemInfo, CallFunc_GetTileRequiredLevel_TileRequiredLevel_1) == 0x000160, "Member 'UI_BattlePass_C_UpdateItemInfo::CallFunc_GetTileRequiredLevel_TileRequiredLevel_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateItemInfo, CallFunc_Get_Level_Level_1) == 0x000164, "Member 'UI_BattlePass_C_UpdateItemInfo::CallFunc_Get_Level_Level_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateItemInfo, K2Node_MakeStruct_FormatArgumentData_2) == 0x000168, "Member 'UI_BattlePass_C_UpdateItemInfo::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateItemInfo, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001A8, "Member 'UI_BattlePass_C_UpdateItemInfo::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateItemInfo, K2Node_MakeArray_Array_2) == 0x0001B0, "Member 'UI_BattlePass_C_UpdateItemInfo::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateItemInfo, CallFunc_Format_ReturnValue_1) == 0x0001C0, "Member 'UI_BattlePass_C_UpdateItemInfo::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateItemInfo, K2Node_MakeStruct_FormatArgumentData_3) == 0x0001D8, "Member 'UI_BattlePass_C_UpdateItemInfo::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateItemInfo, CallFunc_MakeLiteralText_ReturnValue) == 0x000218, "Member 'UI_BattlePass_C_UpdateItemInfo::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateItemInfo, K2Node_MakeStruct_FormatArgumentData_4) == 0x000230, "Member 'UI_BattlePass_C_UpdateItemInfo::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateItemInfo, K2Node_MakeArray_Array_3) == 0x000270, "Member 'UI_BattlePass_C_UpdateItemInfo::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateItemInfo, CallFunc_Format_ReturnValue_2) == 0x000280, "Member 'UI_BattlePass_C_UpdateItemInfo::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateItemInfo, CallFunc_GetDescription_ReturnValue) == 0x000298, "Member 'UI_BattlePass_C_UpdateItemInfo::CallFunc_GetDescription_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateItemInfo, CallFunc_GetCategoryName_ReturnValue) == 0x0002B0, "Member 'UI_BattlePass_C_UpdateItemInfo::CallFunc_GetCategoryName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateItemInfo, CallFunc_TextIsEmpty_ReturnValue) == 0x0002C8, "Member 'UI_BattlePass_C_UpdateItemInfo::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateItemInfo, K2Node_MakeStruct_FormatArgumentData_5) == 0x0002D0, "Member 'UI_BattlePass_C_UpdateItemInfo::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateItemInfo, K2Node_Select_Default) == 0x000310, "Member 'UI_BattlePass_C_UpdateItemInfo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateItemInfo, CallFunc_GetItemRarity_ReturnValue) == 0x000318, "Member 'UI_BattlePass_C_UpdateItemInfo::CallFunc_GetItemRarity_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateItemInfo, K2Node_MakeStruct_SlateColor) == 0x000340, "Member 'UI_BattlePass_C_UpdateItemInfo::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateItemInfo, K2Node_MakeStruct_FormatArgumentData_6) == 0x000368, "Member 'UI_BattlePass_C_UpdateItemInfo::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateItemInfo, K2Node_MakeArray_Array_4) == 0x0003A8, "Member 'UI_BattlePass_C_UpdateItemInfo::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateItemInfo, CallFunc_Format_ReturnValue_3) == 0x0003B8, "Member 'UI_BattlePass_C_UpdateItemInfo::CallFunc_Format_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateItemInfo, CallFunc_GetItemName_ReturnValue) == 0x0003D0, "Member 'UI_BattlePass_C_UpdateItemInfo::CallFunc_GetItemName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateItemInfo, CallFunc_Format_ReturnValue_4) == 0x0003E8, "Member 'UI_BattlePass_C_UpdateItemInfo::CallFunc_Format_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateItemInfo, K2Node_Select_Default_1) == 0x000400, "Member 'UI_BattlePass_C_UpdateItemInfo::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateItemInfo, CallFunc_GetItemType_ReturnValue) == 0x000418, "Member 'UI_BattlePass_C_UpdateItemInfo::CallFunc_GetItemType_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateItemInfo, CallFunc_IsValidClass_ReturnValue) == 0x000420, "Member 'UI_BattlePass_C_UpdateItemInfo::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateItemInfo, CallFunc_GetClassDefaultObject_ReturnValue) == 0x000428, "Member 'UI_BattlePass_C_UpdateItemInfo::CallFunc_GetClassDefaultObject_ReturnValue' has a wrong offset!");

// Function UI_BattlePass.UI_BattlePass_C.SwitchWidgetsVisibility
// 0x0002 (0x0002 - 0x0000)
struct UI_BattlePass_C_SwitchWidgetsVisibility final
{
public:
	E_BattlePassUIStates                          Battle_Pass_UI_State;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_BattlePass_C_SwitchWidgetsVisibility) == 0x000001, "Wrong alignment on UI_BattlePass_C_SwitchWidgetsVisibility");
static_assert(sizeof(UI_BattlePass_C_SwitchWidgetsVisibility) == 0x000002, "Wrong size on UI_BattlePass_C_SwitchWidgetsVisibility");
static_assert(offsetof(UI_BattlePass_C_SwitchWidgetsVisibility, Battle_Pass_UI_State) == 0x000000, "Member 'UI_BattlePass_C_SwitchWidgetsVisibility::Battle_Pass_UI_State' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_SwitchWidgetsVisibility, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'UI_BattlePass_C_SwitchWidgetsVisibility::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function UI_BattlePass.UI_BattlePass_C.UpdateSeasonInfo
// 0x0590 (0x0590 - 0x0000)
struct UI_BattlePass_C_UpdateSeasonInfo final
{
public:
	int32                                         PriceAfterDiscount;                                // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SeasonMaxLevel;                                    // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPremiumActive;                                   // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameStoreProductInfo                  ProductWithLowestPrice;                            // 0x0010(0x0050)(Edit, BlueprintVisible)
	int32                                         DiscountPercent;                                   // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PriceWithoutDiscount;                              // 0x0064(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FinalPrice;                                        // 0x0068(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OwnedHardCurrency;                                 // 0x006C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0070(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0098(0x0028)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x00C0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00D8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0118(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Get_Season_Name_Active_Season_Name;       // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0130(0x0018)()
	int32                                         CallFunc_Get_Season_Max_Level_Max_Level;           // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Get_Season_Name_Active_Season_Name_1;     // 0x014C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Premium_Status_Premium_Active;        // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_155[0x3];                                      // 0x0155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0158(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Get_Season_Name_Active_Season_Name_2;     // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x0170(0x0028)()
	struct FGameStoreProductInfo                  CallFunc_Get_Season_Premium_Product_with_Lowest_Price_PremiumProduct; // 0x0198(0x0050)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x01F0(0x0018)()
	int32                                         CallFunc_GetFinalPremiumPrice_FinalPrice;          // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20D[0x3];                                      // 0x020D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_2;             // 0x0218(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerState*                      K2Node_DynamicCast_AsHuman_Player_State;           // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_242[0x6];                                      // 0x0242(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AStash*                                 CallFunc_GetStash_ReturnValue;                     // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetHardCurrency_ReturnValue;              // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0254(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_255[0x3];                                      // 0x0255(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Get_Season_Name_Active_Season_Name_3;     // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Level_Level;                          // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Level_Purchase_Price_Level_Purchase_Price; // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0269(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26A[0x6];                                      // 0x026A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_3;             // 0x0270(0x0018)()
	int32                                         CallFunc_Get_XP_Booster_XP_Booster;                // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28C[0x4];                                      // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0290(0x0040)(HasGetValueTypeHash)
	class FName                                   CallFunc_Get_Season_Name_Active_Season_Name_4;     // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x02D8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Get_Level_in_Season_Level;                // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EC[0x4];                                      // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x02F0(0x0018)()
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0309(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x030A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30B[0x1];                                      // 0x030B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Get_Current_Season_Number_Number;         // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0310(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0350(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Get_Season_Name_Active_Season_Name_5;     // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0368(0x0018)()
	class FText                                   CallFunc_Get_Season_Title_Title;                   // 0x0380(0x0018)()
	class FName                                   CallFunc_Get_Season_Name_Active_Season_Name_6;     // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Get_Season_Name_Active_Season_Name_7;     // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Level_in_Season_Level_1;              // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_XP_For_Next_Level_Level;              // 0x03AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x03B0(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x03F0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x0430(0x0010)(ReferenceParm)
	int32                                         CallFunc_Get_XP_Within_Level_Level;                // 0x0440(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_444[0x4];                                      // 0x0444(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_3;                     // 0x0448(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0460(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_4;                          // 0x04A0(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Get_Season_Name_Active_Season_Name_8;     // 0x04B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_4;                     // 0x04B8(0x0018)()
	int32                                         CallFunc_Get_XP_For_Next_Level_Level_1;            // 0x04D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D4[0x4];                                      // 0x04D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x04D8(0x0040)(HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0518(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51C[0x4];                                      // 0x051C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_5;                          // 0x0520(0x0010)(ReferenceParm)
	int32                                         CallFunc_Get_XP_Within_Level_Level_1;              // 0x0530(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_534[0x4];                                      // 0x0534(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_5;                     // 0x0538(0x0018)()
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0550(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0554(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_1;                   // 0x0558(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_3;                    // 0x0568(0x0028)()
};
static_assert(alignof(UI_BattlePass_C_UpdateSeasonInfo) == 0x000008, "Wrong alignment on UI_BattlePass_C_UpdateSeasonInfo");
static_assert(sizeof(UI_BattlePass_C_UpdateSeasonInfo) == 0x000590, "Wrong size on UI_BattlePass_C_UpdateSeasonInfo");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, PriceAfterDiscount) == 0x000000, "Member 'UI_BattlePass_C_UpdateSeasonInfo::PriceAfterDiscount' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, SeasonMaxLevel) == 0x000004, "Member 'UI_BattlePass_C_UpdateSeasonInfo::SeasonMaxLevel' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, IsPremiumActive) == 0x000008, "Member 'UI_BattlePass_C_UpdateSeasonInfo::IsPremiumActive' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, ProductWithLowestPrice) == 0x000010, "Member 'UI_BattlePass_C_UpdateSeasonInfo::ProductWithLowestPrice' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, DiscountPercent) == 0x000060, "Member 'UI_BattlePass_C_UpdateSeasonInfo::DiscountPercent' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, PriceWithoutDiscount) == 0x000064, "Member 'UI_BattlePass_C_UpdateSeasonInfo::PriceWithoutDiscount' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, FinalPrice) == 0x000068, "Member 'UI_BattlePass_C_UpdateSeasonInfo::FinalPrice' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, OwnedHardCurrency) == 0x00006C, "Member 'UI_BattlePass_C_UpdateSeasonInfo::OwnedHardCurrency' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, K2Node_MakeStruct_SlateColor) == 0x000070, "Member 'UI_BattlePass_C_UpdateSeasonInfo::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, K2Node_MakeStruct_SlateColor_1) == 0x000098, "Member 'UI_BattlePass_C_UpdateSeasonInfo::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, CallFunc_Conv_IntToText_ReturnValue) == 0x0000C0, "Member 'UI_BattlePass_C_UpdateSeasonInfo::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, K2Node_MakeStruct_FormatArgumentData) == 0x0000D8, "Member 'UI_BattlePass_C_UpdateSeasonInfo::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, K2Node_MakeArray_Array) == 0x000118, "Member 'UI_BattlePass_C_UpdateSeasonInfo::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, CallFunc_Get_Season_Name_Active_Season_Name) == 0x000128, "Member 'UI_BattlePass_C_UpdateSeasonInfo::CallFunc_Get_Season_Name_Active_Season_Name' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, CallFunc_Format_ReturnValue) == 0x000130, "Member 'UI_BattlePass_C_UpdateSeasonInfo::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, CallFunc_Get_Season_Max_Level_Max_Level) == 0x000148, "Member 'UI_BattlePass_C_UpdateSeasonInfo::CallFunc_Get_Season_Max_Level_Max_Level' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, CallFunc_Get_Season_Name_Active_Season_Name_1) == 0x00014C, "Member 'UI_BattlePass_C_UpdateSeasonInfo::CallFunc_Get_Season_Name_Active_Season_Name_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, CallFunc_Get_Premium_Status_Premium_Active) == 0x000154, "Member 'UI_BattlePass_C_UpdateSeasonInfo::CallFunc_Get_Premium_Status_Premium_Active' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, K2Node_MakeStruct_LinearColor) == 0x000158, "Member 'UI_BattlePass_C_UpdateSeasonInfo::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, CallFunc_Get_Season_Name_Active_Season_Name_2) == 0x000168, "Member 'UI_BattlePass_C_UpdateSeasonInfo::CallFunc_Get_Season_Name_Active_Season_Name_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, K2Node_MakeStruct_SlateColor_2) == 0x000170, "Member 'UI_BattlePass_C_UpdateSeasonInfo::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, CallFunc_Get_Season_Premium_Product_with_Lowest_Price_PremiumProduct) == 0x000198, "Member 'UI_BattlePass_C_UpdateSeasonInfo::CallFunc_Get_Season_Premium_Product_with_Lowest_Price_PremiumProduct' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, CallFunc_Greater_IntInt_ReturnValue) == 0x0001E8, "Member 'UI_BattlePass_C_UpdateSeasonInfo::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, CallFunc_Conv_IntToText_ReturnValue_1) == 0x0001F0, "Member 'UI_BattlePass_C_UpdateSeasonInfo::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, CallFunc_GetFinalPremiumPrice_FinalPrice) == 0x000208, "Member 'UI_BattlePass_C_UpdateSeasonInfo::CallFunc_GetFinalPremiumPrice_FinalPrice' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00020C, "Member 'UI_BattlePass_C_UpdateSeasonInfo::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, CallFunc_GetOwningPlayer_ReturnValue) == 0x000210, "Member 'UI_BattlePass_C_UpdateSeasonInfo::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, CallFunc_Conv_IntToText_ReturnValue_2) == 0x000218, "Member 'UI_BattlePass_C_UpdateSeasonInfo::CallFunc_Conv_IntToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, CallFunc_IsValid_ReturnValue) == 0x000230, "Member 'UI_BattlePass_C_UpdateSeasonInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, K2Node_DynamicCast_AsHuman_Player_State) == 0x000238, "Member 'UI_BattlePass_C_UpdateSeasonInfo::K2Node_DynamicCast_AsHuman_Player_State' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, K2Node_DynamicCast_bSuccess) == 0x000240, "Member 'UI_BattlePass_C_UpdateSeasonInfo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000241, "Member 'UI_BattlePass_C_UpdateSeasonInfo::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, CallFunc_GetStash_ReturnValue) == 0x000248, "Member 'UI_BattlePass_C_UpdateSeasonInfo::CallFunc_GetStash_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, CallFunc_GetHardCurrency_ReturnValue) == 0x000250, "Member 'UI_BattlePass_C_UpdateSeasonInfo::CallFunc_GetHardCurrency_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, CallFunc_IsValid_ReturnValue_1) == 0x000254, "Member 'UI_BattlePass_C_UpdateSeasonInfo::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, CallFunc_Get_Season_Name_Active_Season_Name_3) == 0x000258, "Member 'UI_BattlePass_C_UpdateSeasonInfo::CallFunc_Get_Season_Name_Active_Season_Name_3' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, CallFunc_Get_Level_Level) == 0x000260, "Member 'UI_BattlePass_C_UpdateSeasonInfo::CallFunc_Get_Level_Level' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, CallFunc_Get_Level_Purchase_Price_Level_Purchase_Price) == 0x000264, "Member 'UI_BattlePass_C_UpdateSeasonInfo::CallFunc_Get_Level_Purchase_Price_Level_Purchase_Price' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, CallFunc_Less_IntInt_ReturnValue) == 0x000268, "Member 'UI_BattlePass_C_UpdateSeasonInfo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000269, "Member 'UI_BattlePass_C_UpdateSeasonInfo::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, CallFunc_Conv_IntToText_ReturnValue_3) == 0x000270, "Member 'UI_BattlePass_C_UpdateSeasonInfo::CallFunc_Conv_IntToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, CallFunc_Get_XP_Booster_XP_Booster) == 0x000288, "Member 'UI_BattlePass_C_UpdateSeasonInfo::CallFunc_Get_XP_Booster_XP_Booster' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, K2Node_MakeStruct_FormatArgumentData_1) == 0x000290, "Member 'UI_BattlePass_C_UpdateSeasonInfo::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, CallFunc_Get_Season_Name_Active_Season_Name_4) == 0x0002D0, "Member 'UI_BattlePass_C_UpdateSeasonInfo::CallFunc_Get_Season_Name_Active_Season_Name_4' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, K2Node_MakeArray_Array_1) == 0x0002D8, "Member 'UI_BattlePass_C_UpdateSeasonInfo::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, CallFunc_Get_Level_in_Season_Level) == 0x0002E8, "Member 'UI_BattlePass_C_UpdateSeasonInfo::CallFunc_Get_Level_in_Season_Level' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, CallFunc_Format_ReturnValue_1) == 0x0002F0, "Member 'UI_BattlePass_C_UpdateSeasonInfo::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, CallFunc_Less_IntInt_ReturnValue_1) == 0x000308, "Member 'UI_BattlePass_C_UpdateSeasonInfo::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000309, "Member 'UI_BattlePass_C_UpdateSeasonInfo::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, CallFunc_BooleanAND_ReturnValue) == 0x00030A, "Member 'UI_BattlePass_C_UpdateSeasonInfo::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, CallFunc_Get_Current_Season_Number_Number) == 0x00030C, "Member 'UI_BattlePass_C_UpdateSeasonInfo::CallFunc_Get_Current_Season_Number_Number' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, K2Node_MakeStruct_FormatArgumentData_2) == 0x000310, "Member 'UI_BattlePass_C_UpdateSeasonInfo::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, K2Node_MakeArray_Array_2) == 0x000350, "Member 'UI_BattlePass_C_UpdateSeasonInfo::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, CallFunc_Get_Season_Name_Active_Season_Name_5) == 0x000360, "Member 'UI_BattlePass_C_UpdateSeasonInfo::CallFunc_Get_Season_Name_Active_Season_Name_5' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, CallFunc_Format_ReturnValue_2) == 0x000368, "Member 'UI_BattlePass_C_UpdateSeasonInfo::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, CallFunc_Get_Season_Title_Title) == 0x000380, "Member 'UI_BattlePass_C_UpdateSeasonInfo::CallFunc_Get_Season_Title_Title' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, CallFunc_Get_Season_Name_Active_Season_Name_6) == 0x000398, "Member 'UI_BattlePass_C_UpdateSeasonInfo::CallFunc_Get_Season_Name_Active_Season_Name_6' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, CallFunc_Get_Season_Name_Active_Season_Name_7) == 0x0003A0, "Member 'UI_BattlePass_C_UpdateSeasonInfo::CallFunc_Get_Season_Name_Active_Season_Name_7' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, CallFunc_Get_Level_in_Season_Level_1) == 0x0003A8, "Member 'UI_BattlePass_C_UpdateSeasonInfo::CallFunc_Get_Level_in_Season_Level_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, CallFunc_Get_XP_For_Next_Level_Level) == 0x0003AC, "Member 'UI_BattlePass_C_UpdateSeasonInfo::CallFunc_Get_XP_For_Next_Level_Level' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, K2Node_MakeStruct_FormatArgumentData_3) == 0x0003B0, "Member 'UI_BattlePass_C_UpdateSeasonInfo::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, K2Node_MakeStruct_FormatArgumentData_4) == 0x0003F0, "Member 'UI_BattlePass_C_UpdateSeasonInfo::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, K2Node_MakeArray_Array_3) == 0x000430, "Member 'UI_BattlePass_C_UpdateSeasonInfo::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, CallFunc_Get_XP_Within_Level_Level) == 0x000440, "Member 'UI_BattlePass_C_UpdateSeasonInfo::CallFunc_Get_XP_Within_Level_Level' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, CallFunc_Format_ReturnValue_3) == 0x000448, "Member 'UI_BattlePass_C_UpdateSeasonInfo::CallFunc_Format_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, K2Node_MakeStruct_FormatArgumentData_5) == 0x000460, "Member 'UI_BattlePass_C_UpdateSeasonInfo::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, K2Node_MakeArray_Array_4) == 0x0004A0, "Member 'UI_BattlePass_C_UpdateSeasonInfo::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, CallFunc_Get_Season_Name_Active_Season_Name_8) == 0x0004B0, "Member 'UI_BattlePass_C_UpdateSeasonInfo::CallFunc_Get_Season_Name_Active_Season_Name_8' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, CallFunc_Format_ReturnValue_4) == 0x0004B8, "Member 'UI_BattlePass_C_UpdateSeasonInfo::CallFunc_Format_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, CallFunc_Get_XP_For_Next_Level_Level_1) == 0x0004D0, "Member 'UI_BattlePass_C_UpdateSeasonInfo::CallFunc_Get_XP_For_Next_Level_Level_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, K2Node_MakeStruct_FormatArgumentData_6) == 0x0004D8, "Member 'UI_BattlePass_C_UpdateSeasonInfo::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000518, "Member 'UI_BattlePass_C_UpdateSeasonInfo::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, K2Node_MakeArray_Array_5) == 0x000520, "Member 'UI_BattlePass_C_UpdateSeasonInfo::K2Node_MakeArray_Array_5' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, CallFunc_Get_XP_Within_Level_Level_1) == 0x000530, "Member 'UI_BattlePass_C_UpdateSeasonInfo::CallFunc_Get_XP_Within_Level_Level_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, CallFunc_Format_ReturnValue_5) == 0x000538, "Member 'UI_BattlePass_C_UpdateSeasonInfo::CallFunc_Format_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000550, "Member 'UI_BattlePass_C_UpdateSeasonInfo::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000554, "Member 'UI_BattlePass_C_UpdateSeasonInfo::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, K2Node_MakeStruct_LinearColor_1) == 0x000558, "Member 'UI_BattlePass_C_UpdateSeasonInfo::K2Node_MakeStruct_LinearColor_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateSeasonInfo, K2Node_MakeStruct_SlateColor_3) == 0x000568, "Member 'UI_BattlePass_C_UpdateSeasonInfo::K2Node_MakeStruct_SlateColor_3' has a wrong offset!");

// Function UI_BattlePass.UI_BattlePass_C.Initialize Variables
// 0x0078 (0x0078 - 0x0000)
struct UI_BattlePass_C_Initialize_Variables final
{
public:
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UImage*>                         K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class ABP_ShelterUI_C*>                CallFunc_GetAllActorsOfClass_OutActors;            // 0x0018(0x0010)(ReferenceParm)
	TArray<class UUI_BattlePassTile_C*>           K2Node_MakeArray_Array_1;                          // 0x0028(0x0010)(ReferenceParm, ContainsInstancedReference)
	class ABP_ShelterUI_C*                        CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UFlameTextBlock*>                K2Node_MakeArray_Array_2;                          // 0x0058(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UUI_BattlePassTile_C*>           K2Node_MakeArray_Array_3;                          // 0x0068(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(UI_BattlePass_C_Initialize_Variables) == 0x000008, "Wrong alignment on UI_BattlePass_C_Initialize_Variables");
static_assert(sizeof(UI_BattlePass_C_Initialize_Variables) == 0x000078, "Wrong size on UI_BattlePass_C_Initialize_Variables");
static_assert(offsetof(UI_BattlePass_C_Initialize_Variables, Temp_bool_True_if_break_was_hit_Variable) == 0x000000, "Member 'UI_BattlePass_C_Initialize_Variables::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_Initialize_Variables, Temp_int_Array_Index_Variable) == 0x000004, "Member 'UI_BattlePass_C_Initialize_Variables::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_Initialize_Variables, K2Node_MakeArray_Array) == 0x000008, "Member 'UI_BattlePass_C_Initialize_Variables::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_Initialize_Variables, CallFunc_GetAllActorsOfClass_OutActors) == 0x000018, "Member 'UI_BattlePass_C_Initialize_Variables::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_Initialize_Variables, K2Node_MakeArray_Array_1) == 0x000028, "Member 'UI_BattlePass_C_Initialize_Variables::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_Initialize_Variables, CallFunc_Array_Get_Item) == 0x000038, "Member 'UI_BattlePass_C_Initialize_Variables::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_Initialize_Variables, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'UI_BattlePass_C_Initialize_Variables::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_Initialize_Variables, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'UI_BattlePass_C_Initialize_Variables::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_Initialize_Variables, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'UI_BattlePass_C_Initialize_Variables::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_Initialize_Variables, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'UI_BattlePass_C_Initialize_Variables::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_Initialize_Variables, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'UI_BattlePass_C_Initialize_Variables::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_Initialize_Variables, K2Node_MakeArray_Array_2) == 0x000058, "Member 'UI_BattlePass_C_Initialize_Variables::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_Initialize_Variables, K2Node_MakeArray_Array_3) == 0x000068, "Member 'UI_BattlePass_C_Initialize_Variables::K2Node_MakeArray_Array_3' has a wrong offset!");

// Function UI_BattlePass.UI_BattlePass_C.ToPreviousPage
// 0x0020 (0x0020 - 0x0000)
struct UI_BattlePass_C_ToPreviousPage final
{
public:
	bool                                          CallFunc_SetTileFocus_FocusWasSet;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetTileEmpty_IsTileEmpty;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetTileFocus_FocusWasSet_1;               // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Get_Season_Name_Active_Season_Name;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Season_Max_Level_Max_Level;           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattlePass_C_ToPreviousPage) == 0x000004, "Wrong alignment on UI_BattlePass_C_ToPreviousPage");
static_assert(sizeof(UI_BattlePass_C_ToPreviousPage) == 0x000020, "Wrong size on UI_BattlePass_C_ToPreviousPage");
static_assert(offsetof(UI_BattlePass_C_ToPreviousPage, CallFunc_SetTileFocus_FocusWasSet) == 0x000000, "Member 'UI_BattlePass_C_ToPreviousPage::CallFunc_SetTileFocus_FocusWasSet' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ToPreviousPage, CallFunc_GetTileEmpty_IsTileEmpty) == 0x000001, "Member 'UI_BattlePass_C_ToPreviousPage::CallFunc_GetTileEmpty_IsTileEmpty' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ToPreviousPage, CallFunc_SetTileFocus_FocusWasSet_1) == 0x000002, "Member 'UI_BattlePass_C_ToPreviousPage::CallFunc_SetTileFocus_FocusWasSet_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ToPreviousPage, Temp_int_Variable) == 0x000004, "Member 'UI_BattlePass_C_ToPreviousPage::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ToPreviousPage, CallFunc_Get_Season_Name_Active_Season_Name) == 0x000008, "Member 'UI_BattlePass_C_ToPreviousPage::CallFunc_Get_Season_Name_Active_Season_Name' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ToPreviousPage, CallFunc_Get_Season_Max_Level_Max_Level) == 0x000010, "Member 'UI_BattlePass_C_ToPreviousPage::CallFunc_Get_Season_Max_Level_Max_Level' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ToPreviousPage, CallFunc_Divide_IntInt_ReturnValue) == 0x000014, "Member 'UI_BattlePass_C_ToPreviousPage::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ToPreviousPage, CallFunc_Greater_IntInt_ReturnValue) == 0x000018, "Member 'UI_BattlePass_C_ToPreviousPage::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ToPreviousPage, CallFunc_Subtract_IntInt_ReturnValue) == 0x00001C, "Member 'UI_BattlePass_C_ToPreviousPage::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

// Function UI_BattlePass.UI_BattlePass_C.To Next Page
// 0x0024 (0x0024 - 0x0000)
struct UI_BattlePass_C_To_Next_Page final
{
public:
	bool                                          CallFunc_SetTileFocus_FocusWasSet;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetTileEmpty_IsTileEmpty;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Get_Season_Name_Active_Season_Name;       // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Season_Max_Level_Max_Level;           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetTileFocus_FocusWasSet_1;               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattlePass_C_To_Next_Page) == 0x000004, "Wrong alignment on UI_BattlePass_C_To_Next_Page");
static_assert(sizeof(UI_BattlePass_C_To_Next_Page) == 0x000024, "Wrong size on UI_BattlePass_C_To_Next_Page");
static_assert(offsetof(UI_BattlePass_C_To_Next_Page, CallFunc_SetTileFocus_FocusWasSet) == 0x000000, "Member 'UI_BattlePass_C_To_Next_Page::CallFunc_SetTileFocus_FocusWasSet' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_To_Next_Page, CallFunc_GetTileEmpty_IsTileEmpty) == 0x000001, "Member 'UI_BattlePass_C_To_Next_Page::CallFunc_GetTileEmpty_IsTileEmpty' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_To_Next_Page, CallFunc_Get_Season_Name_Active_Season_Name) == 0x000004, "Member 'UI_BattlePass_C_To_Next_Page::CallFunc_Get_Season_Name_Active_Season_Name' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_To_Next_Page, CallFunc_Get_Season_Max_Level_Max_Level) == 0x00000C, "Member 'UI_BattlePass_C_To_Next_Page::CallFunc_Get_Season_Max_Level_Max_Level' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_To_Next_Page, CallFunc_Divide_IntInt_ReturnValue) == 0x000010, "Member 'UI_BattlePass_C_To_Next_Page::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_To_Next_Page, CallFunc_SetTileFocus_FocusWasSet_1) == 0x000014, "Member 'UI_BattlePass_C_To_Next_Page::CallFunc_SetTileFocus_FocusWasSet_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_To_Next_Page, Temp_int_Variable) == 0x000018, "Member 'UI_BattlePass_C_To_Next_Page::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_To_Next_Page, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'UI_BattlePass_C_To_Next_Page::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_To_Next_Page, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'UI_BattlePass_C_To_Next_Page::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function UI_BattlePass.UI_BattlePass_C.DoCustomTileNavigation
// 0x00F8 (0x00F8 - 0x0000)
struct UI_BattlePass_C_DoCustomTileNavigation final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WasTileFound;                                      // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CurrentTileIndex;                                  // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBox*                         SlotsHZBox;                                        // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FBattlePassLevelReward>         RewardsArray;                                      // 0x0020(0x0010)(Edit, BlueprintVisible)
	bool                                          IsPremiumTile;                                     // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUI_BattlePassTile_C*>           TilesArray;                                        // 0x0038(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	bool                                          IsDirectionLeft;                                   // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_BattlePassTile_C*                   CurrentTile;                                       // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LastIndex;                                         // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FirstIndex;                                        // 0x005C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LevelIndex;                                        // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_FindNearestFocusableTile_WasTileFoundOut; // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_66[0x2];                                       // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FindNearestFocusableTile_LevelIndexOut;   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Get_Season_Name_Active_Season_Name;       // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Season_Max_Level_Max_Level;           // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Get_Season_Name_Active_Season_Name_1;     // 0x007C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Season_Max_Level_Max_Level_1;         // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_4;            // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue_1;                 // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C2[0x6];                                       // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetParentUserWidget_ReturnValue;          // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_BattlePassTile_C*                   K2Node_DynamicCast_AsUI_Battle_Pass_Tile;          // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_FindNearestFocusableTile_WasTileFoundOut_1; // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DB[0x1];                                       // 0x00DB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FindNearestFocusableTile_LevelIndexOut_1; // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_BattlePassTile_C*                   CallFunc_Array_Get_Item;                           // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTileRequiredLevel_TileRequiredLevel;   // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_5;            // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattlePass_C_DoCustomTileNavigation) == 0x000008, "Wrong alignment on UI_BattlePass_C_DoCustomTileNavigation");
static_assert(sizeof(UI_BattlePass_C_DoCustomTileNavigation) == 0x0000F8, "Wrong size on UI_BattlePass_C_DoCustomTileNavigation");
static_assert(offsetof(UI_BattlePass_C_DoCustomTileNavigation, Navigation_0) == 0x000000, "Member 'UI_BattlePass_C_DoCustomTileNavigation::Navigation_0' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_DoCustomTileNavigation, ReturnValue) == 0x000008, "Member 'UI_BattlePass_C_DoCustomTileNavigation::ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_DoCustomTileNavigation, WasTileFound) == 0x000010, "Member 'UI_BattlePass_C_DoCustomTileNavigation::WasTileFound' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_DoCustomTileNavigation, CurrentTileIndex) == 0x000014, "Member 'UI_BattlePass_C_DoCustomTileNavigation::CurrentTileIndex' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_DoCustomTileNavigation, SlotsHZBox) == 0x000018, "Member 'UI_BattlePass_C_DoCustomTileNavigation::SlotsHZBox' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_DoCustomTileNavigation, RewardsArray) == 0x000020, "Member 'UI_BattlePass_C_DoCustomTileNavigation::RewardsArray' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_DoCustomTileNavigation, IsPremiumTile) == 0x000030, "Member 'UI_BattlePass_C_DoCustomTileNavigation::IsPremiumTile' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_DoCustomTileNavigation, TilesArray) == 0x000038, "Member 'UI_BattlePass_C_DoCustomTileNavigation::TilesArray' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_DoCustomTileNavigation, IsDirectionLeft) == 0x000048, "Member 'UI_BattlePass_C_DoCustomTileNavigation::IsDirectionLeft' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_DoCustomTileNavigation, CurrentTile) == 0x000050, "Member 'UI_BattlePass_C_DoCustomTileNavigation::CurrentTile' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_DoCustomTileNavigation, LastIndex) == 0x000058, "Member 'UI_BattlePass_C_DoCustomTileNavigation::LastIndex' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_DoCustomTileNavigation, FirstIndex) == 0x00005C, "Member 'UI_BattlePass_C_DoCustomTileNavigation::FirstIndex' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_DoCustomTileNavigation, LevelIndex) == 0x000060, "Member 'UI_BattlePass_C_DoCustomTileNavigation::LevelIndex' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_DoCustomTileNavigation, K2Node_SwitchEnum_CmpSuccess) == 0x000064, "Member 'UI_BattlePass_C_DoCustomTileNavigation::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_DoCustomTileNavigation, CallFunc_FindNearestFocusableTile_WasTileFoundOut) == 0x000065, "Member 'UI_BattlePass_C_DoCustomTileNavigation::CallFunc_FindNearestFocusableTile_WasTileFoundOut' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_DoCustomTileNavigation, CallFunc_FindNearestFocusableTile_LevelIndexOut) == 0x000068, "Member 'UI_BattlePass_C_DoCustomTileNavigation::CallFunc_FindNearestFocusableTile_LevelIndexOut' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_DoCustomTileNavigation, CallFunc_Get_Season_Name_Active_Season_Name) == 0x00006C, "Member 'UI_BattlePass_C_DoCustomTileNavigation::CallFunc_Get_Season_Name_Active_Season_Name' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_DoCustomTileNavigation, CallFunc_Get_Season_Max_Level_Max_Level) == 0x000074, "Member 'UI_BattlePass_C_DoCustomTileNavigation::CallFunc_Get_Season_Max_Level_Max_Level' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_DoCustomTileNavigation, CallFunc_Subtract_IntInt_ReturnValue) == 0x000078, "Member 'UI_BattlePass_C_DoCustomTileNavigation::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_DoCustomTileNavigation, CallFunc_Get_Season_Name_Active_Season_Name_1) == 0x00007C, "Member 'UI_BattlePass_C_DoCustomTileNavigation::CallFunc_Get_Season_Name_Active_Season_Name_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_DoCustomTileNavigation, CallFunc_Get_Season_Max_Level_Max_Level_1) == 0x000084, "Member 'UI_BattlePass_C_DoCustomTileNavigation::CallFunc_Get_Season_Max_Level_Max_Level_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_DoCustomTileNavigation, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000088, "Member 'UI_BattlePass_C_DoCustomTileNavigation::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_DoCustomTileNavigation, CallFunc_Divide_IntInt_ReturnValue) == 0x00008C, "Member 'UI_BattlePass_C_DoCustomTileNavigation::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_DoCustomTileNavigation, CallFunc_Add_IntInt_ReturnValue) == 0x000090, "Member 'UI_BattlePass_C_DoCustomTileNavigation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_DoCustomTileNavigation, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000094, "Member 'UI_BattlePass_C_DoCustomTileNavigation::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_DoCustomTileNavigation, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000098, "Member 'UI_BattlePass_C_DoCustomTileNavigation::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_DoCustomTileNavigation, CallFunc_Add_IntInt_ReturnValue_1) == 0x00009C, "Member 'UI_BattlePass_C_DoCustomTileNavigation::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_DoCustomTileNavigation, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x0000A0, "Member 'UI_BattlePass_C_DoCustomTileNavigation::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_DoCustomTileNavigation, CallFunc_GetChildrenCount_ReturnValue) == 0x0000A4, "Member 'UI_BattlePass_C_DoCustomTileNavigation::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_DoCustomTileNavigation, CallFunc_Subtract_IntInt_ReturnValue_4) == 0x0000A8, "Member 'UI_BattlePass_C_DoCustomTileNavigation::CallFunc_Subtract_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_DoCustomTileNavigation, CallFunc_GetChildAt_ReturnValue) == 0x0000B0, "Member 'UI_BattlePass_C_DoCustomTileNavigation::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_DoCustomTileNavigation, CallFunc_GetChildAt_ReturnValue_1) == 0x0000B8, "Member 'UI_BattlePass_C_DoCustomTileNavigation::CallFunc_GetChildAt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_DoCustomTileNavigation, CallFunc_IsValid_ReturnValue) == 0x0000C0, "Member 'UI_BattlePass_C_DoCustomTileNavigation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_DoCustomTileNavigation, CallFunc_IsValid_ReturnValue_1) == 0x0000C1, "Member 'UI_BattlePass_C_DoCustomTileNavigation::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_DoCustomTileNavigation, CallFunc_GetParentUserWidget_ReturnValue) == 0x0000C8, "Member 'UI_BattlePass_C_DoCustomTileNavigation::CallFunc_GetParentUserWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_DoCustomTileNavigation, K2Node_DynamicCast_AsUI_Battle_Pass_Tile) == 0x0000D0, "Member 'UI_BattlePass_C_DoCustomTileNavigation::K2Node_DynamicCast_AsUI_Battle_Pass_Tile' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_DoCustomTileNavigation, K2Node_DynamicCast_bSuccess) == 0x0000D8, "Member 'UI_BattlePass_C_DoCustomTileNavigation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_DoCustomTileNavigation, CallFunc_Greater_IntInt_ReturnValue) == 0x0000D9, "Member 'UI_BattlePass_C_DoCustomTileNavigation::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_DoCustomTileNavigation, CallFunc_FindNearestFocusableTile_WasTileFoundOut_1) == 0x0000DA, "Member 'UI_BattlePass_C_DoCustomTileNavigation::CallFunc_FindNearestFocusableTile_WasTileFoundOut_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_DoCustomTileNavigation, CallFunc_FindNearestFocusableTile_LevelIndexOut_1) == 0x0000DC, "Member 'UI_BattlePass_C_DoCustomTileNavigation::CallFunc_FindNearestFocusableTile_LevelIndexOut_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_DoCustomTileNavigation, CallFunc_Percent_IntInt_ReturnValue) == 0x0000E0, "Member 'UI_BattlePass_C_DoCustomTileNavigation::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_DoCustomTileNavigation, CallFunc_Array_Get_Item) == 0x0000E8, "Member 'UI_BattlePass_C_DoCustomTileNavigation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_DoCustomTileNavigation, CallFunc_GetTileRequiredLevel_TileRequiredLevel) == 0x0000F0, "Member 'UI_BattlePass_C_DoCustomTileNavigation::CallFunc_GetTileRequiredLevel_TileRequiredLevel' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_DoCustomTileNavigation, CallFunc_Subtract_IntInt_ReturnValue_5) == 0x0000F4, "Member 'UI_BattlePass_C_DoCustomTileNavigation::CallFunc_Subtract_IntInt_ReturnValue_5' has a wrong offset!");

// Function UI_BattlePass.UI_BattlePass_C.GetBattlePassInformation
// 0x0238 (0x0238 - 0x0000)
struct UI_BattlePass_C_GetBattlePassInformation final
{
public:
	class FText                                   Result;                                            // 0x0000(0x0018)(Parm, OutParm)
	TArray<class FText>                           Events;                                            // 0x0018(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Join_Text_Array_ReturnValue;              // 0x0030(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0048(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0088(0x0040)(HasGetValueTypeHash)
	class UDataTable*                             CallFunc_DataProviderFindTableByAssetTable_ReturnValue; // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00D0(0x0010)(ReferenceParm)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x00E0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00F0(0x0018)()
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0110(0x0040)(HasGetValueTypeHash)
	struct FGameplayEvent                         CallFunc_GetDataTableRowFromName_OutRow;           // 0x0150(0x0030)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0188(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0198(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x01B0(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x01F8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0208(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22D[0x3];                                      // 0x022D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattlePass_C_GetBattlePassInformation) == 0x000008, "Wrong alignment on UI_BattlePass_C_GetBattlePassInformation");
static_assert(sizeof(UI_BattlePass_C_GetBattlePassInformation) == 0x000238, "Wrong size on UI_BattlePass_C_GetBattlePassInformation");
static_assert(offsetof(UI_BattlePass_C_GetBattlePassInformation, Result) == 0x000000, "Member 'UI_BattlePass_C_GetBattlePassInformation::Result' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_GetBattlePassInformation, Events) == 0x000018, "Member 'UI_BattlePass_C_GetBattlePassInformation::Events' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_GetBattlePassInformation, Temp_int_Array_Index_Variable) == 0x000028, "Member 'UI_BattlePass_C_GetBattlePassInformation::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_GetBattlePassInformation, CallFunc_Join_Text_Array_ReturnValue) == 0x000030, "Member 'UI_BattlePass_C_GetBattlePassInformation::CallFunc_Join_Text_Array_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_GetBattlePassInformation, K2Node_MakeStruct_FormatArgumentData) == 0x000048, "Member 'UI_BattlePass_C_GetBattlePassInformation::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_GetBattlePassInformation, K2Node_MakeStruct_FormatArgumentData_1) == 0x000088, "Member 'UI_BattlePass_C_GetBattlePassInformation::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_GetBattlePassInformation, CallFunc_DataProviderFindTableByAssetTable_ReturnValue) == 0x0000C8, "Member 'UI_BattlePass_C_GetBattlePassInformation::CallFunc_DataProviderFindTableByAssetTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_GetBattlePassInformation, K2Node_MakeArray_Array) == 0x0000D0, "Member 'UI_BattlePass_C_GetBattlePassInformation::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_GetBattlePassInformation, CallFunc_GetDataTableRowNames_OutRowNames) == 0x0000E0, "Member 'UI_BattlePass_C_GetBattlePassInformation::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_GetBattlePassInformation, CallFunc_Format_ReturnValue) == 0x0000F0, "Member 'UI_BattlePass_C_GetBattlePassInformation::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_GetBattlePassInformation, CallFunc_Array_Get_Item) == 0x000108, "Member 'UI_BattlePass_C_GetBattlePassInformation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_GetBattlePassInformation, K2Node_MakeStruct_FormatArgumentData_2) == 0x000110, "Member 'UI_BattlePass_C_GetBattlePassInformation::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_GetBattlePassInformation, CallFunc_GetDataTableRowFromName_OutRow) == 0x000150, "Member 'UI_BattlePass_C_GetBattlePassInformation::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_GetBattlePassInformation, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000180, "Member 'UI_BattlePass_C_GetBattlePassInformation::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_GetBattlePassInformation, K2Node_MakeArray_Array_1) == 0x000188, "Member 'UI_BattlePass_C_GetBattlePassInformation::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_GetBattlePassInformation, CallFunc_Format_ReturnValue_1) == 0x000198, "Member 'UI_BattlePass_C_GetBattlePassInformation::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_GetBattlePassInformation, K2Node_MakeStruct_FormatArgumentData_3) == 0x0001B0, "Member 'UI_BattlePass_C_GetBattlePassInformation::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_GetBattlePassInformation, CallFunc_Greater_IntInt_ReturnValue) == 0x0001F0, "Member 'UI_BattlePass_C_GetBattlePassInformation::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_GetBattlePassInformation, K2Node_MakeArray_Array_2) == 0x0001F8, "Member 'UI_BattlePass_C_GetBattlePassInformation::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_GetBattlePassInformation, CallFunc_Format_ReturnValue_2) == 0x000208, "Member 'UI_BattlePass_C_GetBattlePassInformation::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_GetBattlePassInformation, CallFunc_Array_Length_ReturnValue) == 0x000220, "Member 'UI_BattlePass_C_GetBattlePassInformation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_GetBattlePassInformation, CallFunc_Array_Add_ReturnValue) == 0x000224, "Member 'UI_BattlePass_C_GetBattlePassInformation::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_GetBattlePassInformation, Temp_int_Loop_Counter_Variable) == 0x000228, "Member 'UI_BattlePass_C_GetBattlePassInformation::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_GetBattlePassInformation, CallFunc_Less_IntInt_ReturnValue) == 0x00022C, "Member 'UI_BattlePass_C_GetBattlePassInformation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_GetBattlePassInformation, CallFunc_Add_IntInt_ReturnValue) == 0x000230, "Member 'UI_BattlePass_C_GetBattlePassInformation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function UI_BattlePass.UI_BattlePass_C.FindNearestFocusableTile
// 0x0070 (0x0070 - 0x0000)
struct UI_BattlePass_C_FindNearestFocusableTile final
{
public:
	class UBP_BattlePassSystem_C*                 BattlePassSystemIn;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCurrentPremiumTileIn;                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsDirectionLeftIn;                                 // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         FirstIndexIn;                                      // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LastIndexIn;                                       // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WasTileFoundOut;                                   // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LevelIndexOut;                                     // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WasTileFound;                                      // 0x001C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBattlePassLevelReward>         RewardsArray;                                      // 0x0020(0x0010)(Edit, BlueprintVisible)
	int32                                         LevelIndex;                                        // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Get_Season_Name_Active_Season_Name;       // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_BattlePassLevelRewardFull>   CallFunc_Compile_Rewards_in_Level_Range_Rewards;   // 0x0048(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_66[0x2];                                       // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattlePass_C_FindNearestFocusableTile) == 0x000008, "Wrong alignment on UI_BattlePass_C_FindNearestFocusableTile");
static_assert(sizeof(UI_BattlePass_C_FindNearestFocusableTile) == 0x000070, "Wrong size on UI_BattlePass_C_FindNearestFocusableTile");
static_assert(offsetof(UI_BattlePass_C_FindNearestFocusableTile, BattlePassSystemIn) == 0x000000, "Member 'UI_BattlePass_C_FindNearestFocusableTile::BattlePassSystemIn' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FindNearestFocusableTile, IsCurrentPremiumTileIn) == 0x000008, "Member 'UI_BattlePass_C_FindNearestFocusableTile::IsCurrentPremiumTileIn' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FindNearestFocusableTile, IsDirectionLeftIn) == 0x000009, "Member 'UI_BattlePass_C_FindNearestFocusableTile::IsDirectionLeftIn' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FindNearestFocusableTile, FirstIndexIn) == 0x00000C, "Member 'UI_BattlePass_C_FindNearestFocusableTile::FirstIndexIn' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FindNearestFocusableTile, LastIndexIn) == 0x000010, "Member 'UI_BattlePass_C_FindNearestFocusableTile::LastIndexIn' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FindNearestFocusableTile, WasTileFoundOut) == 0x000014, "Member 'UI_BattlePass_C_FindNearestFocusableTile::WasTileFoundOut' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FindNearestFocusableTile, LevelIndexOut) == 0x000018, "Member 'UI_BattlePass_C_FindNearestFocusableTile::LevelIndexOut' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FindNearestFocusableTile, WasTileFound) == 0x00001C, "Member 'UI_BattlePass_C_FindNearestFocusableTile::WasTileFound' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FindNearestFocusableTile, RewardsArray) == 0x000020, "Member 'UI_BattlePass_C_FindNearestFocusableTile::RewardsArray' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FindNearestFocusableTile, LevelIndex) == 0x000030, "Member 'UI_BattlePass_C_FindNearestFocusableTile::LevelIndex' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FindNearestFocusableTile, Temp_bool_Variable) == 0x000034, "Member 'UI_BattlePass_C_FindNearestFocusableTile::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FindNearestFocusableTile, CallFunc_Not_PreBool_ReturnValue) == 0x000035, "Member 'UI_BattlePass_C_FindNearestFocusableTile::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FindNearestFocusableTile, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'UI_BattlePass_C_FindNearestFocusableTile::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FindNearestFocusableTile, CallFunc_Get_Season_Name_Active_Season_Name) == 0x00003C, "Member 'UI_BattlePass_C_FindNearestFocusableTile::CallFunc_Get_Season_Name_Active_Season_Name' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FindNearestFocusableTile, CallFunc_Compile_Rewards_in_Level_Range_Rewards) == 0x000048, "Member 'UI_BattlePass_C_FindNearestFocusableTile::CallFunc_Compile_Rewards_in_Level_Range_Rewards' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FindNearestFocusableTile, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'UI_BattlePass_C_FindNearestFocusableTile::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FindNearestFocusableTile, CallFunc_Greater_IntInt_ReturnValue) == 0x00005C, "Member 'UI_BattlePass_C_FindNearestFocusableTile::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FindNearestFocusableTile, CallFunc_Not_PreBool_ReturnValue_1) == 0x00005D, "Member 'UI_BattlePass_C_FindNearestFocusableTile::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FindNearestFocusableTile, Temp_int_Variable) == 0x000060, "Member 'UI_BattlePass_C_FindNearestFocusableTile::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FindNearestFocusableTile, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000064, "Member 'UI_BattlePass_C_FindNearestFocusableTile::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FindNearestFocusableTile, CallFunc_BooleanAND_ReturnValue) == 0x000065, "Member 'UI_BattlePass_C_FindNearestFocusableTile::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FindNearestFocusableTile, CallFunc_Subtract_IntInt_ReturnValue) == 0x000068, "Member 'UI_BattlePass_C_FindNearestFocusableTile::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_FindNearestFocusableTile, CallFunc_Add_IntInt_ReturnValue_1) == 0x00006C, "Member 'UI_BattlePass_C_FindNearestFocusableTile::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function UI_BattlePass.UI_BattlePass_C.ConsiderOpeningRewardsScreen
// 0x0188 (0x0188 - 0x0000)
struct UI_BattlePass_C_ConsiderOpeningRewardsScreen final
{
public:
	bool                                          Rewards_Screen_Opened;                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_BattlePassLevelRewardFull>   Locked_Premium_Rewards;                            // 0x0008(0x0010)(Edit, BlueprintVisible)
	class FName                                   Current_Season_Name;                               // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Premium_Status;                                    // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Some_Unclaimed_Premium_Levels;                     // 0x0021(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Some_Unclaimed_Free_Levels;                        // 0x0022(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Season_Is_Active;                                  // 0x0023(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_BattlePassLevelRewardFull>   Unclaimed_Premium_Rewards;                         // 0x0028(0x0010)(Edit, BlueprintVisible)
	TArray<struct FS_BattlePassLevelRewardFull>   Unclaimed_Free_Rewards;                            // 0x0038(0x0010)(Edit, BlueprintVisible)
	TArray<class FName>                           Unclaimed_Seasons;                                 // 0x0048(0x0010)(Edit, BlueprintVisible)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_BattlePassRewards_C*                CallFunc_Create_ReturnValue;                       // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_1;            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_BattlePassLevelRewardFull>   CallFunc_Get_Locked_Rewards_Locked_Rewards;        // 0x0078(0x0010)(ReferenceParm)
	class UUI_BattlePassRewards_C*                CallFunc_Create_ReturnValue_1;                     // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLevelUp_IsLevelUp;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0098(0x0010)(ReferenceParm)
	bool                                          Temp_bool_Variable;                                // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_2;            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_BattlePassRewards_C*                CallFunc_Create_ReturnValue_2;                     // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C6[0x2];                                       // 0x00C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_BattlePassLevelRewardFull>   K2Node_Select_Default;                             // 0x00C8(0x0010)(ReferenceParm)
	TArray<struct FS_BattlePassLevelRewardFull>   CallFunc_Get_Locked_Rewards_Locked_Rewards_1;      // 0x00D8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x00F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_3;            // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_BattlePassRewards_C*                CallFunc_Create_ReturnValue_3;                     // 0x0108(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UFlameWidget* FlameWidget)> K2Node_CreateDelegate_OutputDelegate;              // 0x0114(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UFlameWidget* FlameWidget)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0124(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Get_Unclaimed_Levels_in_Season_Free_Levels; // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Unclaimed_Levels_in_Season_Premium_Levels; // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_4;             // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_5;             // 0x013D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13E[0x2];                                      // 0x013E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetZOrder_ReturnValue;                    // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_Get_Unclaimed_Rewards_Seasons;            // 0x0148(0x0010)(ReferenceParm)
	TArray<struct FS_BattlePassLevelRewardFull>   CallFunc_Get_Unclaimed_Rewards_Free_Rewards;       // 0x0158(0x0010)(ReferenceParm)
	TArray<struct FS_BattlePassLevelRewardFull>   CallFunc_Get_Unclaimed_Rewards_Premium_Rewards;    // 0x0168(0x0010)(ReferenceParm)
	bool                                          CallFunc_Is_Season_Active_ReturnValue;             // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_179[0x3];                                      // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Get_Season_Name_Active_Season_Name;       // 0x017C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattlePass_C_ConsiderOpeningRewardsScreen) == 0x000008, "Wrong alignment on UI_BattlePass_C_ConsiderOpeningRewardsScreen");
static_assert(sizeof(UI_BattlePass_C_ConsiderOpeningRewardsScreen) == 0x000188, "Wrong size on UI_BattlePass_C_ConsiderOpeningRewardsScreen");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningRewardsScreen, Rewards_Screen_Opened) == 0x000000, "Member 'UI_BattlePass_C_ConsiderOpeningRewardsScreen::Rewards_Screen_Opened' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningRewardsScreen, Locked_Premium_Rewards) == 0x000008, "Member 'UI_BattlePass_C_ConsiderOpeningRewardsScreen::Locked_Premium_Rewards' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningRewardsScreen, Current_Season_Name) == 0x000018, "Member 'UI_BattlePass_C_ConsiderOpeningRewardsScreen::Current_Season_Name' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningRewardsScreen, Premium_Status) == 0x000020, "Member 'UI_BattlePass_C_ConsiderOpeningRewardsScreen::Premium_Status' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningRewardsScreen, Some_Unclaimed_Premium_Levels) == 0x000021, "Member 'UI_BattlePass_C_ConsiderOpeningRewardsScreen::Some_Unclaimed_Premium_Levels' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningRewardsScreen, Some_Unclaimed_Free_Levels) == 0x000022, "Member 'UI_BattlePass_C_ConsiderOpeningRewardsScreen::Some_Unclaimed_Free_Levels' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningRewardsScreen, Season_Is_Active) == 0x000023, "Member 'UI_BattlePass_C_ConsiderOpeningRewardsScreen::Season_Is_Active' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningRewardsScreen, Unclaimed_Premium_Rewards) == 0x000028, "Member 'UI_BattlePass_C_ConsiderOpeningRewardsScreen::Unclaimed_Premium_Rewards' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningRewardsScreen, Unclaimed_Free_Rewards) == 0x000038, "Member 'UI_BattlePass_C_ConsiderOpeningRewardsScreen::Unclaimed_Free_Rewards' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningRewardsScreen, Unclaimed_Seasons) == 0x000048, "Member 'UI_BattlePass_C_ConsiderOpeningRewardsScreen::Unclaimed_Seasons' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningRewardsScreen, CallFunc_GetOwningPlayer_ReturnValue) == 0x000058, "Member 'UI_BattlePass_C_ConsiderOpeningRewardsScreen::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningRewardsScreen, CallFunc_Create_ReturnValue) == 0x000060, "Member 'UI_BattlePass_C_ConsiderOpeningRewardsScreen::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningRewardsScreen, CallFunc_Array_Contains_ReturnValue) == 0x000068, "Member 'UI_BattlePass_C_ConsiderOpeningRewardsScreen::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningRewardsScreen, CallFunc_GetOwningPlayer_ReturnValue_1) == 0x000070, "Member 'UI_BattlePass_C_ConsiderOpeningRewardsScreen::CallFunc_GetOwningPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningRewardsScreen, CallFunc_Get_Locked_Rewards_Locked_Rewards) == 0x000078, "Member 'UI_BattlePass_C_ConsiderOpeningRewardsScreen::CallFunc_Get_Locked_Rewards_Locked_Rewards' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningRewardsScreen, CallFunc_Create_ReturnValue_1) == 0x000088, "Member 'UI_BattlePass_C_ConsiderOpeningRewardsScreen::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningRewardsScreen, CallFunc_IsLevelUp_IsLevelUp) == 0x000090, "Member 'UI_BattlePass_C_ConsiderOpeningRewardsScreen::CallFunc_IsLevelUp_IsLevelUp' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningRewardsScreen, K2Node_MakeArray_Array) == 0x000098, "Member 'UI_BattlePass_C_ConsiderOpeningRewardsScreen::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningRewardsScreen, Temp_bool_Variable) == 0x0000A8, "Member 'UI_BattlePass_C_ConsiderOpeningRewardsScreen::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningRewardsScreen, CallFunc_GetOwningPlayer_ReturnValue_2) == 0x0000B0, "Member 'UI_BattlePass_C_ConsiderOpeningRewardsScreen::CallFunc_GetOwningPlayer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningRewardsScreen, CallFunc_Create_ReturnValue_2) == 0x0000B8, "Member 'UI_BattlePass_C_ConsiderOpeningRewardsScreen::CallFunc_Create_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningRewardsScreen, CallFunc_Array_Length_ReturnValue) == 0x0000C0, "Member 'UI_BattlePass_C_ConsiderOpeningRewardsScreen::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningRewardsScreen, CallFunc_Greater_IntInt_ReturnValue) == 0x0000C4, "Member 'UI_BattlePass_C_ConsiderOpeningRewardsScreen::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningRewardsScreen, CallFunc_Not_PreBool_ReturnValue) == 0x0000C5, "Member 'UI_BattlePass_C_ConsiderOpeningRewardsScreen::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningRewardsScreen, K2Node_Select_Default) == 0x0000C8, "Member 'UI_BattlePass_C_ConsiderOpeningRewardsScreen::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningRewardsScreen, CallFunc_Get_Locked_Rewards_Locked_Rewards_1) == 0x0000D8, "Member 'UI_BattlePass_C_ConsiderOpeningRewardsScreen::CallFunc_Get_Locked_Rewards_Locked_Rewards_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningRewardsScreen, CallFunc_Array_Length_ReturnValue_1) == 0x0000E8, "Member 'UI_BattlePass_C_ConsiderOpeningRewardsScreen::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningRewardsScreen, CallFunc_Array_Length_ReturnValue_2) == 0x0000EC, "Member 'UI_BattlePass_C_ConsiderOpeningRewardsScreen::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningRewardsScreen, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0000F0, "Member 'UI_BattlePass_C_ConsiderOpeningRewardsScreen::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningRewardsScreen, CallFunc_Greater_IntInt_ReturnValue_2) == 0x0000F1, "Member 'UI_BattlePass_C_ConsiderOpeningRewardsScreen::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningRewardsScreen, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000F2, "Member 'UI_BattlePass_C_ConsiderOpeningRewardsScreen::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningRewardsScreen, CallFunc_Not_PreBool_ReturnValue_2) == 0x0000F3, "Member 'UI_BattlePass_C_ConsiderOpeningRewardsScreen::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningRewardsScreen, CallFunc_Array_Length_ReturnValue_3) == 0x0000F4, "Member 'UI_BattlePass_C_ConsiderOpeningRewardsScreen::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningRewardsScreen, CallFunc_GetOwningPlayer_ReturnValue_3) == 0x0000F8, "Member 'UI_BattlePass_C_ConsiderOpeningRewardsScreen::CallFunc_GetOwningPlayer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningRewardsScreen, CallFunc_Greater_IntInt_ReturnValue_3) == 0x000100, "Member 'UI_BattlePass_C_ConsiderOpeningRewardsScreen::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningRewardsScreen, CallFunc_Create_ReturnValue_3) == 0x000108, "Member 'UI_BattlePass_C_ConsiderOpeningRewardsScreen::CallFunc_Create_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningRewardsScreen, CallFunc_Not_PreBool_ReturnValue_3) == 0x000110, "Member 'UI_BattlePass_C_ConsiderOpeningRewardsScreen::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningRewardsScreen, K2Node_CreateDelegate_OutputDelegate) == 0x000114, "Member 'UI_BattlePass_C_ConsiderOpeningRewardsScreen::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningRewardsScreen, K2Node_CreateDelegate_OutputDelegate_1) == 0x000124, "Member 'UI_BattlePass_C_ConsiderOpeningRewardsScreen::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningRewardsScreen, CallFunc_Get_Unclaimed_Levels_in_Season_Free_Levels) == 0x000134, "Member 'UI_BattlePass_C_ConsiderOpeningRewardsScreen::CallFunc_Get_Unclaimed_Levels_in_Season_Free_Levels' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningRewardsScreen, CallFunc_Get_Unclaimed_Levels_in_Season_Premium_Levels) == 0x000138, "Member 'UI_BattlePass_C_ConsiderOpeningRewardsScreen::CallFunc_Get_Unclaimed_Levels_in_Season_Premium_Levels' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningRewardsScreen, CallFunc_Greater_IntInt_ReturnValue_4) == 0x00013C, "Member 'UI_BattlePass_C_ConsiderOpeningRewardsScreen::CallFunc_Greater_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningRewardsScreen, CallFunc_Greater_IntInt_ReturnValue_5) == 0x00013D, "Member 'UI_BattlePass_C_ConsiderOpeningRewardsScreen::CallFunc_Greater_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningRewardsScreen, CallFunc_GetZOrder_ReturnValue) == 0x000140, "Member 'UI_BattlePass_C_ConsiderOpeningRewardsScreen::CallFunc_GetZOrder_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningRewardsScreen, CallFunc_Get_Unclaimed_Rewards_Seasons) == 0x000148, "Member 'UI_BattlePass_C_ConsiderOpeningRewardsScreen::CallFunc_Get_Unclaimed_Rewards_Seasons' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningRewardsScreen, CallFunc_Get_Unclaimed_Rewards_Free_Rewards) == 0x000158, "Member 'UI_BattlePass_C_ConsiderOpeningRewardsScreen::CallFunc_Get_Unclaimed_Rewards_Free_Rewards' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningRewardsScreen, CallFunc_Get_Unclaimed_Rewards_Premium_Rewards) == 0x000168, "Member 'UI_BattlePass_C_ConsiderOpeningRewardsScreen::CallFunc_Get_Unclaimed_Rewards_Premium_Rewards' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningRewardsScreen, CallFunc_Is_Season_Active_ReturnValue) == 0x000178, "Member 'UI_BattlePass_C_ConsiderOpeningRewardsScreen::CallFunc_Is_Season_Active_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningRewardsScreen, CallFunc_Get_Season_Name_Active_Season_Name) == 0x00017C, "Member 'UI_BattlePass_C_ConsiderOpeningRewardsScreen::CallFunc_Get_Season_Name_Active_Season_Name' has a wrong offset!");

// Function UI_BattlePass.UI_BattlePass_C.ConsiderOpeningLevelUpScreen
// 0x00B8 (0x00B8 - 0x0000)
struct UI_BattlePass_C_ConsiderOpeningLevelUpScreen final
{
public:
	bool                                          WasPremiumJustBought;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LevelUpScreenOpened;                               // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFlameWidget*                           LevelUpScreen;                                     // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           Unclaimed_Seasons;                                 // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_GetZOrder_ReturnValue;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Get_Season_Name_Active_Season_Name;       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_BattlePassLevelUp_C*                CallFunc_Create_ReturnValue;                       // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Level_in_Season_Level;                // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Premium_Status_Premium_Active;        // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_Get_Unclaimed_Rewards_Seasons;            // 0x0048(0x0010)(ReferenceParm)
	TArray<struct FS_BattlePassLevelRewardFull>   CallFunc_Get_Unclaimed_Rewards_Free_Rewards;       // 0x0058(0x0010)(ReferenceParm)
	TArray<struct FS_BattlePassLevelRewardFull>   CallFunc_Get_Unclaimed_Rewards_Premium_Rewards;    // 0x0068(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0083(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLevelUp_IsLevelUp;                      // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86[0x2];                                       // 0x0086(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetZOrder_ReturnValue_1;                  // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Get_Season_Name_Active_Season_Name_1;     // 0x008C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_1;            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Level_in_Season_Level_1;              // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_BattlePassLevelUp_C*                CallFunc_Create_ReturnValue_1;                     // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Premium_Status_Premium_Active_1;      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_BattlePass_C_ConsiderOpeningLevelUpScreen) == 0x000008, "Wrong alignment on UI_BattlePass_C_ConsiderOpeningLevelUpScreen");
static_assert(sizeof(UI_BattlePass_C_ConsiderOpeningLevelUpScreen) == 0x0000B8, "Wrong size on UI_BattlePass_C_ConsiderOpeningLevelUpScreen");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningLevelUpScreen, WasPremiumJustBought) == 0x000000, "Member 'UI_BattlePass_C_ConsiderOpeningLevelUpScreen::WasPremiumJustBought' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningLevelUpScreen, LevelUpScreenOpened) == 0x000001, "Member 'UI_BattlePass_C_ConsiderOpeningLevelUpScreen::LevelUpScreenOpened' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningLevelUpScreen, LevelUpScreen) == 0x000008, "Member 'UI_BattlePass_C_ConsiderOpeningLevelUpScreen::LevelUpScreen' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningLevelUpScreen, Unclaimed_Seasons) == 0x000010, "Member 'UI_BattlePass_C_ConsiderOpeningLevelUpScreen::Unclaimed_Seasons' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningLevelUpScreen, CallFunc_GetZOrder_ReturnValue) == 0x000020, "Member 'UI_BattlePass_C_ConsiderOpeningLevelUpScreen::CallFunc_GetZOrder_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningLevelUpScreen, CallFunc_GetOwningPlayer_ReturnValue) == 0x000028, "Member 'UI_BattlePass_C_ConsiderOpeningLevelUpScreen::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningLevelUpScreen, CallFunc_Get_Season_Name_Active_Season_Name) == 0x000030, "Member 'UI_BattlePass_C_ConsiderOpeningLevelUpScreen::CallFunc_Get_Season_Name_Active_Season_Name' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningLevelUpScreen, CallFunc_Create_ReturnValue) == 0x000038, "Member 'UI_BattlePass_C_ConsiderOpeningLevelUpScreen::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningLevelUpScreen, CallFunc_Get_Level_in_Season_Level) == 0x000040, "Member 'UI_BattlePass_C_ConsiderOpeningLevelUpScreen::CallFunc_Get_Level_in_Season_Level' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningLevelUpScreen, CallFunc_Get_Premium_Status_Premium_Active) == 0x000044, "Member 'UI_BattlePass_C_ConsiderOpeningLevelUpScreen::CallFunc_Get_Premium_Status_Premium_Active' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningLevelUpScreen, CallFunc_Get_Unclaimed_Rewards_Seasons) == 0x000048, "Member 'UI_BattlePass_C_ConsiderOpeningLevelUpScreen::CallFunc_Get_Unclaimed_Rewards_Seasons' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningLevelUpScreen, CallFunc_Get_Unclaimed_Rewards_Free_Rewards) == 0x000058, "Member 'UI_BattlePass_C_ConsiderOpeningLevelUpScreen::CallFunc_Get_Unclaimed_Rewards_Free_Rewards' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningLevelUpScreen, CallFunc_Get_Unclaimed_Rewards_Premium_Rewards) == 0x000068, "Member 'UI_BattlePass_C_ConsiderOpeningLevelUpScreen::CallFunc_Get_Unclaimed_Rewards_Premium_Rewards' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningLevelUpScreen, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'UI_BattlePass_C_ConsiderOpeningLevelUpScreen::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningLevelUpScreen, CallFunc_Array_Length_ReturnValue_1) == 0x00007C, "Member 'UI_BattlePass_C_ConsiderOpeningLevelUpScreen::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningLevelUpScreen, CallFunc_Greater_IntInt_ReturnValue) == 0x000080, "Member 'UI_BattlePass_C_ConsiderOpeningLevelUpScreen::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningLevelUpScreen, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000081, "Member 'UI_BattlePass_C_ConsiderOpeningLevelUpScreen::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningLevelUpScreen, CallFunc_Not_PreBool_ReturnValue) == 0x000082, "Member 'UI_BattlePass_C_ConsiderOpeningLevelUpScreen::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningLevelUpScreen, CallFunc_Not_PreBool_ReturnValue_1) == 0x000083, "Member 'UI_BattlePass_C_ConsiderOpeningLevelUpScreen::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningLevelUpScreen, CallFunc_IsLevelUp_IsLevelUp) == 0x000084, "Member 'UI_BattlePass_C_ConsiderOpeningLevelUpScreen::CallFunc_IsLevelUp_IsLevelUp' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningLevelUpScreen, CallFunc_BooleanAND_ReturnValue) == 0x000085, "Member 'UI_BattlePass_C_ConsiderOpeningLevelUpScreen::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningLevelUpScreen, CallFunc_GetZOrder_ReturnValue_1) == 0x000088, "Member 'UI_BattlePass_C_ConsiderOpeningLevelUpScreen::CallFunc_GetZOrder_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningLevelUpScreen, CallFunc_Get_Season_Name_Active_Season_Name_1) == 0x00008C, "Member 'UI_BattlePass_C_ConsiderOpeningLevelUpScreen::CallFunc_Get_Season_Name_Active_Season_Name_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningLevelUpScreen, CallFunc_GetOwningPlayer_ReturnValue_1) == 0x000098, "Member 'UI_BattlePass_C_ConsiderOpeningLevelUpScreen::CallFunc_GetOwningPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningLevelUpScreen, CallFunc_Get_Level_in_Season_Level_1) == 0x0000A0, "Member 'UI_BattlePass_C_ConsiderOpeningLevelUpScreen::CallFunc_Get_Level_in_Season_Level_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningLevelUpScreen, CallFunc_Create_ReturnValue_1) == 0x0000A8, "Member 'UI_BattlePass_C_ConsiderOpeningLevelUpScreen::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ConsiderOpeningLevelUpScreen, CallFunc_Get_Premium_Status_Premium_Active_1) == 0x0000B0, "Member 'UI_BattlePass_C_ConsiderOpeningLevelUpScreen::CallFunc_Get_Premium_Status_Premium_Active_1' has a wrong offset!");

// Function UI_BattlePass.UI_BattlePass_C.ScrollItemDescription
// 0x0070 (0x0070 - 0x0000)
struct UI_BattlePass_C_ScrollItemDescription final
{
public:
	float                                         Axis_value;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x0010(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue;                 // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScrollOffset_ReturnValue;              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattlePass_C_ScrollItemDescription) == 0x000004, "Wrong alignment on UI_BattlePass_C_ScrollItemDescription");
static_assert(sizeof(UI_BattlePass_C_ScrollItemDescription) == 0x000070, "Wrong size on UI_BattlePass_C_ScrollItemDescription");
static_assert(offsetof(UI_BattlePass_C_ScrollItemDescription, Axis_value) == 0x000000, "Member 'UI_BattlePass_C_ScrollItemDescription::Axis_value' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ScrollItemDescription, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000004, "Member 'UI_BattlePass_C_ScrollItemDescription::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ScrollItemDescription, CallFunc_GetDesiredSize_ReturnValue) == 0x000008, "Member 'UI_BattlePass_C_ScrollItemDescription::CallFunc_GetDesiredSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ScrollItemDescription, CallFunc_GetCachedGeometry_ReturnValue) == 0x000010, "Member 'UI_BattlePass_C_ScrollItemDescription::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ScrollItemDescription, CallFunc_BreakVector2D_X) == 0x000048, "Member 'UI_BattlePass_C_ScrollItemDescription::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ScrollItemDescription, CallFunc_BreakVector2D_Y) == 0x00004C, "Member 'UI_BattlePass_C_ScrollItemDescription::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ScrollItemDescription, CallFunc_GetLocalSize_ReturnValue) == 0x000050, "Member 'UI_BattlePass_C_ScrollItemDescription::CallFunc_GetLocalSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ScrollItemDescription, CallFunc_GetScrollOffset_ReturnValue) == 0x000058, "Member 'UI_BattlePass_C_ScrollItemDescription::CallFunc_GetScrollOffset_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ScrollItemDescription, CallFunc_BreakVector2D_X_1) == 0x00005C, "Member 'UI_BattlePass_C_ScrollItemDescription::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ScrollItemDescription, CallFunc_BreakVector2D_Y_1) == 0x000060, "Member 'UI_BattlePass_C_ScrollItemDescription::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ScrollItemDescription, CallFunc_Add_FloatFloat_ReturnValue) == 0x000064, "Member 'UI_BattlePass_C_ScrollItemDescription::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ScrollItemDescription, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000068, "Member 'UI_BattlePass_C_ScrollItemDescription::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_ScrollItemDescription, CallFunc_FClamp_ReturnValue) == 0x00006C, "Member 'UI_BattlePass_C_ScrollItemDescription::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function UI_BattlePass.UI_BattlePass_C.UpdateLevelIcons
// 0x0002 (0x0002 - 0x0000)
struct UI_BattlePass_C_UpdateLevelIcons final
{
public:
	EInputMode                                    InputMode;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_BattlePass_C_UpdateLevelIcons) == 0x000001, "Wrong alignment on UI_BattlePass_C_UpdateLevelIcons");
static_assert(sizeof(UI_BattlePass_C_UpdateLevelIcons) == 0x000002, "Wrong size on UI_BattlePass_C_UpdateLevelIcons");
static_assert(offsetof(UI_BattlePass_C_UpdateLevelIcons, InputMode) == 0x000000, "Member 'UI_BattlePass_C_UpdateLevelIcons::InputMode' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_UpdateLevelIcons, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'UI_BattlePass_C_UpdateLevelIcons::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function UI_BattlePass.UI_BattlePass_C.IsLevelUp
// 0x0060 (0x0060 - 0x0000)
struct UI_BattlePass_C_IsLevelUp final
{
public:
	bool                                          IsLevelUp_0;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Get_Season_Name_Active_Season_Name;       // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_Get_Unclaimed_Rewards_Seasons;            // 0x0010(0x0010)(ReferenceParm)
	TArray<struct FS_BattlePassLevelRewardFull>   CallFunc_Get_Unclaimed_Rewards_Free_Rewards;       // 0x0020(0x0010)(ReferenceParm)
	TArray<struct FS_BattlePassLevelRewardFull>   CallFunc_Get_Unclaimed_Rewards_Premium_Rewards;    // 0x0030(0x0010)(ReferenceParm)
	int32                                         CallFunc_Get_Unclaimed_Levels_in_Season_Free_Levels; // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Unclaimed_Levels_in_Season_Premium_Levels; // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F[0x1];                                       // 0x004F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Get_Season_Name_Active_Season_Name_1;     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Premium_Status_Premium_Active;        // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_BattlePass_C_IsLevelUp) == 0x000008, "Wrong alignment on UI_BattlePass_C_IsLevelUp");
static_assert(sizeof(UI_BattlePass_C_IsLevelUp) == 0x000060, "Wrong size on UI_BattlePass_C_IsLevelUp");
static_assert(offsetof(UI_BattlePass_C_IsLevelUp, IsLevelUp_0) == 0x000000, "Member 'UI_BattlePass_C_IsLevelUp::IsLevelUp_0' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_IsLevelUp, CallFunc_Get_Season_Name_Active_Season_Name) == 0x000004, "Member 'UI_BattlePass_C_IsLevelUp::CallFunc_Get_Season_Name_Active_Season_Name' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_IsLevelUp, CallFunc_Get_Unclaimed_Rewards_Seasons) == 0x000010, "Member 'UI_BattlePass_C_IsLevelUp::CallFunc_Get_Unclaimed_Rewards_Seasons' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_IsLevelUp, CallFunc_Get_Unclaimed_Rewards_Free_Rewards) == 0x000020, "Member 'UI_BattlePass_C_IsLevelUp::CallFunc_Get_Unclaimed_Rewards_Free_Rewards' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_IsLevelUp, CallFunc_Get_Unclaimed_Rewards_Premium_Rewards) == 0x000030, "Member 'UI_BattlePass_C_IsLevelUp::CallFunc_Get_Unclaimed_Rewards_Premium_Rewards' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_IsLevelUp, CallFunc_Get_Unclaimed_Levels_in_Season_Free_Levels) == 0x000040, "Member 'UI_BattlePass_C_IsLevelUp::CallFunc_Get_Unclaimed_Levels_in_Season_Free_Levels' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_IsLevelUp, CallFunc_Get_Unclaimed_Levels_in_Season_Premium_Levels) == 0x000044, "Member 'UI_BattlePass_C_IsLevelUp::CallFunc_Get_Unclaimed_Levels_in_Season_Premium_Levels' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_IsLevelUp, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'UI_BattlePass_C_IsLevelUp::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_IsLevelUp, CallFunc_Greater_IntInt_ReturnValue) == 0x00004C, "Member 'UI_BattlePass_C_IsLevelUp::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_IsLevelUp, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00004D, "Member 'UI_BattlePass_C_IsLevelUp::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_IsLevelUp, CallFunc_Not_PreBool_ReturnValue) == 0x00004E, "Member 'UI_BattlePass_C_IsLevelUp::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_IsLevelUp, CallFunc_Get_Season_Name_Active_Season_Name_1) == 0x000050, "Member 'UI_BattlePass_C_IsLevelUp::CallFunc_Get_Season_Name_Active_Season_Name_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_IsLevelUp, CallFunc_Get_Premium_Status_Premium_Active) == 0x000058, "Member 'UI_BattlePass_C_IsLevelUp::CallFunc_Get_Premium_Status_Premium_Active' has a wrong offset!");

// Function UI_BattlePass.UI_BattlePass_C.GetFinalPremiumPrice
// 0x0014 (0x0014 - 0x0000)
struct UI_BattlePass_C_GetFinalPremiumPrice final
{
public:
	int32                                         Price;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DiscountPercent;                                   // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PriceAfterDiscount;                                // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FinalPrice;                                        // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_BattlePass_C_GetFinalPremiumPrice) == 0x000004, "Wrong alignment on UI_BattlePass_C_GetFinalPremiumPrice");
static_assert(sizeof(UI_BattlePass_C_GetFinalPremiumPrice) == 0x000014, "Wrong size on UI_BattlePass_C_GetFinalPremiumPrice");
static_assert(offsetof(UI_BattlePass_C_GetFinalPremiumPrice, Price) == 0x000000, "Member 'UI_BattlePass_C_GetFinalPremiumPrice::Price' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_GetFinalPremiumPrice, DiscountPercent) == 0x000004, "Member 'UI_BattlePass_C_GetFinalPremiumPrice::DiscountPercent' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_GetFinalPremiumPrice, PriceAfterDiscount) == 0x000008, "Member 'UI_BattlePass_C_GetFinalPremiumPrice::PriceAfterDiscount' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_GetFinalPremiumPrice, FinalPrice) == 0x00000C, "Member 'UI_BattlePass_C_GetFinalPremiumPrice::FinalPrice' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_GetFinalPremiumPrice, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000010, "Member 'UI_BattlePass_C_GetFinalPremiumPrice::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_GetFinalPremiumPrice, CallFunc_Greater_IntInt_ReturnValue) == 0x000011, "Member 'UI_BattlePass_C_GetFinalPremiumPrice::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function UI_BattlePass.UI_BattlePass_C.GetWidgetToFocus
// 0x0018 (0x0018 - 0x0000)
struct UI_BattlePass_C_GetWidgetToFocus final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetTileEmpty_IsTileEmpty;                 // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Select_Default;                             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattlePass_C_GetWidgetToFocus) == 0x000008, "Wrong alignment on UI_BattlePass_C_GetWidgetToFocus");
static_assert(sizeof(UI_BattlePass_C_GetWidgetToFocus) == 0x000018, "Wrong size on UI_BattlePass_C_GetWidgetToFocus");
static_assert(offsetof(UI_BattlePass_C_GetWidgetToFocus, ReturnValue) == 0x000000, "Member 'UI_BattlePass_C_GetWidgetToFocus::ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_GetWidgetToFocus, Temp_bool_Variable) == 0x000008, "Member 'UI_BattlePass_C_GetWidgetToFocus::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_GetWidgetToFocus, CallFunc_GetTileEmpty_IsTileEmpty) == 0x000009, "Member 'UI_BattlePass_C_GetWidgetToFocus::CallFunc_GetTileEmpty_IsTileEmpty' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_C_GetWidgetToFocus, K2Node_Select_Default) == 0x000010, "Member 'UI_BattlePass_C_GetWidgetToFocus::K2Node_Select_Default' has a wrong offset!");

}

