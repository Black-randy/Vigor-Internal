#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GMComponent_ADM_CommStations

#include "Basic.hpp"

#include "ECommStationAction_structs.hpp"
#include "Engine_structs.hpp"
#include "BP_GMComponent_ADM_Base_classes.hpp"
#include "PhysicsCore_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_GMComponent_ADM_CommStations.BP_GMComponent_ADM_CommStations_C
// 0x0128 (0x0260 - 0x0138)
class UBP_GMComponent_ADM_CommStations_C final : public UBP_GMComponent_ADM_Base_C
{
public:
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_GMComponent_ADM_CommStations_C;  // 0x0138(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	int32                                         Comm_Stations_Count;                               // 0x0140(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_ADM_CommStation_Location_C*> Comm_Station_Locations;                            // 0x0148(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class ABP_ADM_CommStation_C*>          Comm_Stations;                                     // 0x0158(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	int32                                         Air_Drop_Locations_Count;                          // 0x0168(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_AirDropLocation_C*>          Air_Drop_Locations;                                // 0x0170(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class ABP_AirDropLocation_C*                  Current_Air_Drop_Location;                         // 0x0180(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Air_Drop_Called_In;                                // 0x0188(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x3];                                      // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Air_Drop_Delay;                                    // 0x018C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Air_Drop_Timer;                                    // 0x0190(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         ChangeLocationSubtrahend;                          // 0x0198(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           LocationBrowserTimer;                              // 0x01A0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          LocationBrowsingPossible;                          // 0x01A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_ADM_CommStation_Location_C*> AllCommStationLocations;                           // 0x01B0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class ABP_ADM_CommStation_C*>          All_CommStations;                                  // 0x01C0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class UBP_PCComponent_ADM_CommStations_C*> Browsing_Players;                                  // 0x01D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TMap<class UClass*, int32>                    Items_To_Reinforce_Airdrop_With;                   // 0x01E0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         New_Airdrop_Interaction_Time;                      // 0x0230(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_234[0x4];                                      // 0x0234(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<ECommStationAction>                    Available_Actions;                                 // 0x0238(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         Used_Actions;                                      // 0x0248(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Max_Used_Actions;                                  // 0x024C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CommStation_Interaction_Disability_Time;           // 0x0250(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AirdropBoobyTrapped;                               // 0x0254(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          AirdropQuickReleased;                              // 0x0255(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_256[0x2];                                      // 0x0256(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Airdrop_Booby_Trap_Owner_Id;                       // 0x0258(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Get_Decoy_Airdrop_Location(class ABP_AirDropContainer_Base_C* Container, bool* Location_Found, struct FVector* Location, float* _Altitude);
	void BoobyTrap_Airdrop_Perform(class ABP_AirDropContainer_Base_C* Container);
	void BoobyTrap_Airdrop_Assign(class ABP_PlayerState_C* PlayerState);
	void Oversized();
	void Decoy_Perform(class ABP_AirDropContainer_Base_C* Container);
	void Decoy_Assign();
	void Radioactive();
	void On_Action_Selected(class UBP_PCComponent_ADM_CommStations_C* PC_Component, ECommStationAction Action, class ABP_ADM_CommStation_C* Comm_Station);
	void Stealth();
	void Quick_Release_Perform(class ABP_AirDropContainer_Base_C* Container);
	void Quick_Release_Assign();
	void Reinforce_Airdrop();
	void Player_Closing_Location_Browser(class ABP_ADM_CommStation_C* Originating_Comm_Station, class UBP_PCComponent_ADM_CommStations_C* Player);
	void Air_Drop_Location_Chosen(class ABP_ADM_CommStation_C* Originating_Comm_Station, class ABP_AirDropLocation_C* Chosen_Drop_Location, class UBP_PCComponent_ADM_CommStations_C* Player);
	void On_Interaction(class ABP_ADM_CommStation_C* Comm_Station, class AHumanCharacter* Character);
	void Find_Current_Air_Drop_Location(class ABP_AirDropLocation_C** Output);
	void Disable_Location_Browsing();
	void Initialize_Bindings(bool* Success);
	void Spawn_or_Find_Airdrop_Locations(bool* Success);
	void Player_Opened_Debug_UI(class ABP_PlayerController_AirDropModular_C* Player_Controller);
	void Comm_Station_Debug(class AHumanCharacter* Interacting_Character);
	void Spawn_All_Possible_comm_Stations_Debug();
	void Initialize_Component();
	void Comm_Station_Interaction(class ABP_ADM_CommStation_C* Comm_Station, class AHumanCharacter* Interacting_Character);
	void Air_Drop_Timer_Set(const struct FTimerHandle& AirDropTimer, int32 AirDropDelay);
	void Air_Drop_Container_Spawned(class ABP_AirDropContainer_Base_C* Container);
	void Drop_Zone_Determined(class ABP_AirDropLocation_C* Drop_Zone_Actor);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void Minute_To_Airdrop_Left();
	void ExecuteUbergraph_BP_GMComponent_ADM_CommStations(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_GMComponent_ADM_CommStations_C">();
	}
	static class UBP_GMComponent_ADM_CommStations_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_GMComponent_ADM_CommStations_C>();
	}
};
static_assert(alignof(UBP_GMComponent_ADM_CommStations_C) == 0x000008, "Wrong alignment on UBP_GMComponent_ADM_CommStations_C");
static_assert(sizeof(UBP_GMComponent_ADM_CommStations_C) == 0x000260, "Wrong size on UBP_GMComponent_ADM_CommStations_C");
static_assert(offsetof(UBP_GMComponent_ADM_CommStations_C, UberGraphFrame_BP_GMComponent_ADM_CommStations_C) == 0x000138, "Member 'UBP_GMComponent_ADM_CommStations_C::UberGraphFrame_BP_GMComponent_ADM_CommStations_C' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_CommStations_C, Comm_Stations_Count) == 0x000140, "Member 'UBP_GMComponent_ADM_CommStations_C::Comm_Stations_Count' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_CommStations_C, Comm_Station_Locations) == 0x000148, "Member 'UBP_GMComponent_ADM_CommStations_C::Comm_Station_Locations' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_CommStations_C, Comm_Stations) == 0x000158, "Member 'UBP_GMComponent_ADM_CommStations_C::Comm_Stations' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_CommStations_C, Air_Drop_Locations_Count) == 0x000168, "Member 'UBP_GMComponent_ADM_CommStations_C::Air_Drop_Locations_Count' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_CommStations_C, Air_Drop_Locations) == 0x000170, "Member 'UBP_GMComponent_ADM_CommStations_C::Air_Drop_Locations' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_CommStations_C, Current_Air_Drop_Location) == 0x000180, "Member 'UBP_GMComponent_ADM_CommStations_C::Current_Air_Drop_Location' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_CommStations_C, Air_Drop_Called_In) == 0x000188, "Member 'UBP_GMComponent_ADM_CommStations_C::Air_Drop_Called_In' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_CommStations_C, Air_Drop_Delay) == 0x00018C, "Member 'UBP_GMComponent_ADM_CommStations_C::Air_Drop_Delay' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_CommStations_C, Air_Drop_Timer) == 0x000190, "Member 'UBP_GMComponent_ADM_CommStations_C::Air_Drop_Timer' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_CommStations_C, ChangeLocationSubtrahend) == 0x000198, "Member 'UBP_GMComponent_ADM_CommStations_C::ChangeLocationSubtrahend' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_CommStations_C, LocationBrowserTimer) == 0x0001A0, "Member 'UBP_GMComponent_ADM_CommStations_C::LocationBrowserTimer' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_CommStations_C, LocationBrowsingPossible) == 0x0001A8, "Member 'UBP_GMComponent_ADM_CommStations_C::LocationBrowsingPossible' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_CommStations_C, AllCommStationLocations) == 0x0001B0, "Member 'UBP_GMComponent_ADM_CommStations_C::AllCommStationLocations' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_CommStations_C, All_CommStations) == 0x0001C0, "Member 'UBP_GMComponent_ADM_CommStations_C::All_CommStations' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_CommStations_C, Browsing_Players) == 0x0001D0, "Member 'UBP_GMComponent_ADM_CommStations_C::Browsing_Players' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_CommStations_C, Items_To_Reinforce_Airdrop_With) == 0x0001E0, "Member 'UBP_GMComponent_ADM_CommStations_C::Items_To_Reinforce_Airdrop_With' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_CommStations_C, New_Airdrop_Interaction_Time) == 0x000230, "Member 'UBP_GMComponent_ADM_CommStations_C::New_Airdrop_Interaction_Time' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_CommStations_C, Available_Actions) == 0x000238, "Member 'UBP_GMComponent_ADM_CommStations_C::Available_Actions' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_CommStations_C, Used_Actions) == 0x000248, "Member 'UBP_GMComponent_ADM_CommStations_C::Used_Actions' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_CommStations_C, Max_Used_Actions) == 0x00024C, "Member 'UBP_GMComponent_ADM_CommStations_C::Max_Used_Actions' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_CommStations_C, CommStation_Interaction_Disability_Time) == 0x000250, "Member 'UBP_GMComponent_ADM_CommStations_C::CommStation_Interaction_Disability_Time' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_CommStations_C, AirdropBoobyTrapped) == 0x000254, "Member 'UBP_GMComponent_ADM_CommStations_C::AirdropBoobyTrapped' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_CommStations_C, AirdropQuickReleased) == 0x000255, "Member 'UBP_GMComponent_ADM_CommStations_C::AirdropQuickReleased' has a wrong offset!");
static_assert(offsetof(UBP_GMComponent_ADM_CommStations_C, Airdrop_Booby_Trap_Owner_Id) == 0x000258, "Member 'UBP_GMComponent_ADM_CommStations_C::Airdrop_Booby_Trap_Owner_Id' has a wrong offset!");

}

