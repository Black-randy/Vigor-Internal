#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ShootingRangeRules

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_ShootingRangeRules.BP_ShootingRangeRules_C.ExecuteUbergraph_BP_ShootingRangeRules
// 0x0168 (0x0168 - 0x0000)
struct BP_ShootingRangeRules_C_ExecuteUbergraph_BP_ShootingRangeRules final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0060(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_1;                // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_ShelterOnboardingComponent_C*       CallFunc_GetComponentByClass_ReturnValue;          // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_ShootingChallenges_GMComponent_C*   CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0108(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_112[0x6];                                      // 0x0112(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ShootingChallenges_GMComponent_C*   CallFunc_GetComponentByClass_ReturnValue_2;        // 0x0118(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Actor;                          // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_CustomEvent_EndPlayReason;                  // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetUserControllerId_ReturnValue;          // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue; // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerCharacter*                  CallFunc_GetHumanCharacter_ReturnValue;            // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x3];                                      // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* Actor, EEndPlayReason EndPlayReason)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0154(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_ShootingRangeRules_C_ExecuteUbergraph_BP_ShootingRangeRules) == 0x000008, "Wrong alignment on BP_ShootingRangeRules_C_ExecuteUbergraph_BP_ShootingRangeRules");
static_assert(sizeof(BP_ShootingRangeRules_C_ExecuteUbergraph_BP_ShootingRangeRules) == 0x000168, "Wrong size on BP_ShootingRangeRules_C_ExecuteUbergraph_BP_ShootingRangeRules");
static_assert(offsetof(BP_ShootingRangeRules_C_ExecuteUbergraph_BP_ShootingRangeRules, EntryPoint) == 0x000000, "Member 'BP_ShootingRangeRules_C_ExecuteUbergraph_BP_ShootingRangeRules::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeRules_C_ExecuteUbergraph_BP_ShootingRangeRules, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_ShootingRangeRules_C_ExecuteUbergraph_BP_ShootingRangeRules::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeRules_C_ExecuteUbergraph_BP_ShootingRangeRules, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'BP_ShootingRangeRules_C_ExecuteUbergraph_BP_ShootingRangeRules::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeRules_C_ExecuteUbergraph_BP_ShootingRangeRules, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000020, "Member 'BP_ShootingRangeRules_C_ExecuteUbergraph_BP_ShootingRangeRules::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeRules_C_ExecuteUbergraph_BP_ShootingRangeRules, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000028, "Member 'BP_ShootingRangeRules_C_ExecuteUbergraph_BP_ShootingRangeRules::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeRules_C_ExecuteUbergraph_BP_ShootingRangeRules, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000030, "Member 'BP_ShootingRangeRules_C_ExecuteUbergraph_BP_ShootingRangeRules::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeRules_C_ExecuteUbergraph_BP_ShootingRangeRules, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000038, "Member 'BP_ShootingRangeRules_C_ExecuteUbergraph_BP_ShootingRangeRules::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeRules_C_ExecuteUbergraph_BP_ShootingRangeRules, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000040, "Member 'BP_ShootingRangeRules_C_ExecuteUbergraph_BP_ShootingRangeRules::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeRules_C_ExecuteUbergraph_BP_ShootingRangeRules, K2Node_ComponentBoundEvent_OtherActor) == 0x000048, "Member 'BP_ShootingRangeRules_C_ExecuteUbergraph_BP_ShootingRangeRules::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeRules_C_ExecuteUbergraph_BP_ShootingRangeRules, K2Node_ComponentBoundEvent_OtherComp) == 0x000050, "Member 'BP_ShootingRangeRules_C_ExecuteUbergraph_BP_ShootingRangeRules::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeRules_C_ExecuteUbergraph_BP_ShootingRangeRules, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000058, "Member 'BP_ShootingRangeRules_C_ExecuteUbergraph_BP_ShootingRangeRules::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeRules_C_ExecuteUbergraph_BP_ShootingRangeRules, K2Node_ComponentBoundEvent_bFromSweep) == 0x00005C, "Member 'BP_ShootingRangeRules_C_ExecuteUbergraph_BP_ShootingRangeRules::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeRules_C_ExecuteUbergraph_BP_ShootingRangeRules, K2Node_ComponentBoundEvent_SweepResult) == 0x000060, "Member 'BP_ShootingRangeRules_C_ExecuteUbergraph_BP_ShootingRangeRules::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeRules_C_ExecuteUbergraph_BP_ShootingRangeRules, CallFunc_GetGameMode_ReturnValue) == 0x0000F0, "Member 'BP_ShootingRangeRules_C_ExecuteUbergraph_BP_ShootingRangeRules::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeRules_C_ExecuteUbergraph_BP_ShootingRangeRules, CallFunc_GetGameMode_ReturnValue_1) == 0x0000F8, "Member 'BP_ShootingRangeRules_C_ExecuteUbergraph_BP_ShootingRangeRules::CallFunc_GetGameMode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeRules_C_ExecuteUbergraph_BP_ShootingRangeRules, CallFunc_GetComponentByClass_ReturnValue) == 0x000100, "Member 'BP_ShootingRangeRules_C_ExecuteUbergraph_BP_ShootingRangeRules::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeRules_C_ExecuteUbergraph_BP_ShootingRangeRules, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000108, "Member 'BP_ShootingRangeRules_C_ExecuteUbergraph_BP_ShootingRangeRules::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeRules_C_ExecuteUbergraph_BP_ShootingRangeRules, CallFunc_IsValid_ReturnValue) == 0x000110, "Member 'BP_ShootingRangeRules_C_ExecuteUbergraph_BP_ShootingRangeRules::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeRules_C_ExecuteUbergraph_BP_ShootingRangeRules, CallFunc_IsValid_ReturnValue_1) == 0x000111, "Member 'BP_ShootingRangeRules_C_ExecuteUbergraph_BP_ShootingRangeRules::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeRules_C_ExecuteUbergraph_BP_ShootingRangeRules, CallFunc_GetComponentByClass_ReturnValue_2) == 0x000118, "Member 'BP_ShootingRangeRules_C_ExecuteUbergraph_BP_ShootingRangeRules::CallFunc_GetComponentByClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeRules_C_ExecuteUbergraph_BP_ShootingRangeRules, CallFunc_IsValid_ReturnValue_2) == 0x000120, "Member 'BP_ShootingRangeRules_C_ExecuteUbergraph_BP_ShootingRangeRules::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeRules_C_ExecuteUbergraph_BP_ShootingRangeRules, K2Node_CustomEvent_Actor) == 0x000128, "Member 'BP_ShootingRangeRules_C_ExecuteUbergraph_BP_ShootingRangeRules::K2Node_CustomEvent_Actor' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeRules_C_ExecuteUbergraph_BP_ShootingRangeRules, K2Node_CustomEvent_EndPlayReason) == 0x000130, "Member 'BP_ShootingRangeRules_C_ExecuteUbergraph_BP_ShootingRangeRules::K2Node_CustomEvent_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeRules_C_ExecuteUbergraph_BP_ShootingRangeRules, CallFunc_GetUserControllerId_ReturnValue) == 0x000134, "Member 'BP_ShootingRangeRules_C_ExecuteUbergraph_BP_ShootingRangeRules::CallFunc_GetUserControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeRules_C_ExecuteUbergraph_BP_ShootingRangeRules, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue) == 0x000138, "Member 'BP_ShootingRangeRules_C_ExecuteUbergraph_BP_ShootingRangeRules::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeRules_C_ExecuteUbergraph_BP_ShootingRangeRules, CallFunc_IsValid_ReturnValue_3) == 0x000140, "Member 'BP_ShootingRangeRules_C_ExecuteUbergraph_BP_ShootingRangeRules::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeRules_C_ExecuteUbergraph_BP_ShootingRangeRules, CallFunc_GetHumanCharacter_ReturnValue) == 0x000148, "Member 'BP_ShootingRangeRules_C_ExecuteUbergraph_BP_ShootingRangeRules::CallFunc_GetHumanCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeRules_C_ExecuteUbergraph_BP_ShootingRangeRules, CallFunc_IsValid_ReturnValue_4) == 0x000150, "Member 'BP_ShootingRangeRules_C_ExecuteUbergraph_BP_ShootingRangeRules::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeRules_C_ExecuteUbergraph_BP_ShootingRangeRules, K2Node_CreateDelegate_OutputDelegate_1) == 0x000154, "Member 'BP_ShootingRangeRules_C_ExecuteUbergraph_BP_ShootingRangeRules::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function BP_ShootingRangeRules.BP_ShootingRangeRules_C.Character Destroyed
// 0x0010 (0x0010 - 0x0000)
struct BP_ShootingRangeRules_C_Character_Destroyed final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                EndPlayReason;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ShootingRangeRules_C_Character_Destroyed) == 0x000008, "Wrong alignment on BP_ShootingRangeRules_C_Character_Destroyed");
static_assert(sizeof(BP_ShootingRangeRules_C_Character_Destroyed) == 0x000010, "Wrong size on BP_ShootingRangeRules_C_Character_Destroyed");
static_assert(offsetof(BP_ShootingRangeRules_C_Character_Destroyed, Actor) == 0x000000, "Member 'BP_ShootingRangeRules_C_Character_Destroyed::Actor' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeRules_C_Character_Destroyed, EndPlayReason) == 0x000008, "Member 'BP_ShootingRangeRules_C_Character_Destroyed::EndPlayReason' has a wrong offset!");

// Function BP_ShootingRangeRules.BP_ShootingRangeRules_C.BndEvt__ShootingRangeVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct BP_ShootingRangeRules_C_BndEvt__ShootingRangeVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_ShootingRangeRules_C_BndEvt__ShootingRangeVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_ShootingRangeRules_C_BndEvt__ShootingRangeVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_ShootingRangeRules_C_BndEvt__ShootingRangeVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000B0, "Wrong size on BP_ShootingRangeRules_C_BndEvt__ShootingRangeVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_ShootingRangeRules_C_BndEvt__ShootingRangeVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_ShootingRangeRules_C_BndEvt__ShootingRangeVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeRules_C_BndEvt__ShootingRangeVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_ShootingRangeRules_C_BndEvt__ShootingRangeVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeRules_C_BndEvt__ShootingRangeVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_ShootingRangeRules_C_BndEvt__ShootingRangeVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeRules_C_BndEvt__ShootingRangeVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_ShootingRangeRules_C_BndEvt__ShootingRangeVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeRules_C_BndEvt__ShootingRangeVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_ShootingRangeRules_C_BndEvt__ShootingRangeVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeRules_C_BndEvt__ShootingRangeVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_ShootingRangeRules_C_BndEvt__ShootingRangeVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_ShootingRangeRules.BP_ShootingRangeRules_C.BndEvt__ShootingRangeVolume_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_ShootingRangeRules_C_BndEvt__ShootingRangeVolume_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ShootingRangeRules_C_BndEvt__ShootingRangeVolume_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_ShootingRangeRules_C_BndEvt__ShootingRangeVolume_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_ShootingRangeRules_C_BndEvt__ShootingRangeVolume_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_ShootingRangeRules_C_BndEvt__ShootingRangeVolume_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_ShootingRangeRules_C_BndEvt__ShootingRangeVolume_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_ShootingRangeRules_C_BndEvt__ShootingRangeVolume_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeRules_C_BndEvt__ShootingRangeVolume_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_ShootingRangeRules_C_BndEvt__ShootingRangeVolume_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeRules_C_BndEvt__ShootingRangeVolume_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_ShootingRangeRules_C_BndEvt__ShootingRangeVolume_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeRules_C_BndEvt__ShootingRangeVolume_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_ShootingRangeRules_C_BndEvt__ShootingRangeVolume_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

}

