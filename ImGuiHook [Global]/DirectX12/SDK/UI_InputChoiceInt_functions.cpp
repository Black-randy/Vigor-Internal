#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_InputChoiceInt

#include "Basic.hpp"

#include "UI_InputChoiceInt_classes.hpp"
#include "UI_InputChoiceInt_parameters.hpp"


namespace SDK
{

// Function UI_InputChoiceInt.UI_InputChoiceInt_C.ExecuteUbergraph_UI_InputChoiceInt
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_InputChoiceInt_C::ExecuteUbergraph_UI_InputChoiceInt(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_InputChoiceInt_C", "ExecuteUbergraph_UI_InputChoiceInt");

	Params::UI_InputChoiceInt_C_ExecuteUbergraph_UI_InputChoiceInt Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_InputChoiceInt.UI_InputChoiceInt_C.IconChanged
// (BlueprintCallable, BlueprintEvent)

void UUI_InputChoiceInt_C::IconChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_InputChoiceInt_C", "IconChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_InputChoiceInt.UI_InputChoiceInt_C.InputModeChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EInputMode                              InputMode                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_InputChoiceInt_C::InputModeChanged(int32 PlayerIndex, EInputMode InputMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_InputChoiceInt_C", "InputModeChanged");

	Params::UI_InputChoiceInt_C_InputModeChanged Parms{};

	Parms.PlayerIndex = PlayerIndex;
	Parms.InputMode = InputMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_InputChoiceInt.UI_InputChoiceInt_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_InputChoiceInt_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_InputChoiceInt_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_InputChoiceInt.UI_InputChoiceInt_C.OnActionPressed
// (Event, Protected, BlueprintEvent)

void UUI_InputChoiceInt_C::OnActionPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_InputChoiceInt_C", "OnActionPressed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_InputChoiceInt.UI_InputChoiceInt_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_InputChoiceInt_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_InputChoiceInt_C", "PreConstruct");

	Params::UI_InputChoiceInt_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_InputChoiceInt.UI_InputChoiceInt_C.Add Value Widget
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_InputChoiceInt_C::Add_Value_Widget(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_InputChoiceInt_C", "Add Value Widget");

	Params::UI_InputChoiceInt_C_Add_Value_Widget Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_InputChoiceInt.UI_InputChoiceInt_C.Add Separator Widget
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUI_InputChoiceInt_C::Add_Separator_Widget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_InputChoiceInt_C", "Add Separator Widget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_InputChoiceInt.UI_InputChoiceInt_C.GetSelectedValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Count                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_InputChoiceInt_C::GetSelectedValue(int32* Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_InputChoiceInt_C", "GetSelectedValue");

	Params::UI_InputChoiceInt_C_GetSelectedValue Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Count != nullptr)
		*Count = Parms.Count;
}


// Function UI_InputChoiceInt.UI_InputChoiceInt_C.CreateTextWidget
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             TextValue                                              (BlueprintVisible, BlueprintReadOnly, Parm)
// class UFlameTextBlock*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UFlameTextBlock* UUI_InputChoiceInt_C::CreateTextWidget(const class FText& TextValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_InputChoiceInt_C", "CreateTextWidget");

	Params::UI_InputChoiceInt_C_CreateTextWidget Parms{};

	Parms.TextValue = std::move(TextValue);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UI_InputChoiceInt.UI_InputChoiceInt_C.ChangeVisuals
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Should_select                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_InputChoiceInt_C::ChangeVisuals(int32 Index_0, bool Should_select)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_InputChoiceInt_C", "ChangeVisuals");

	Params::UI_InputChoiceInt_C_ChangeVisuals Parms{};

	Parms.Index_0 = Index_0;
	Parms.Should_select = Should_select;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_InputChoiceInt.UI_InputChoiceInt_C.Select specific index
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_to_select                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_InputChoiceInt_C::Select_specific_index(int32 Index_to_select)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_InputChoiceInt_C", "Select specific index");

	Params::UI_InputChoiceInt_C_Select_specific_index Parms{};

	Parms.Index_to_select = Index_to_select;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_InputChoiceInt.UI_InputChoiceInt_C.Create new selectable value
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Value_to_add                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_InputChoiceInt_C::Create_new_selectable_value(int32 Value_to_add)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_InputChoiceInt_C", "Create new selectable value");

	Params::UI_InputChoiceInt_C_Create_new_selectable_value Parms{};

	Parms.Value_to_add = Value_to_add;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_InputChoiceInt.UI_InputChoiceInt_C.SetWindowsIcon
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUI_InputChoiceInt_C::SetWindowsIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_InputChoiceInt_C", "SetWindowsIcon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_InputChoiceInt.UI_InputChoiceInt_C.GetSelectedIndex
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 UUI_InputChoiceInt_C::GetSelectedIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_InputChoiceInt_C", "GetSelectedIndex");

	Params::UI_InputChoiceInt_C_GetSelectedIndex Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

