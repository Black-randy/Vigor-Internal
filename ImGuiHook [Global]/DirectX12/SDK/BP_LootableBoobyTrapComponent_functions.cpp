#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LootableBoobyTrapComponent

#include "Basic.hpp"

#include "BP_LootableBoobyTrapComponent_classes.hpp"
#include "BP_LootableBoobyTrapComponent_parameters.hpp"


namespace SDK
{

// Function BP_LootableBoobyTrapComponent.BP_LootableBoobyTrapComponent_C.ExecuteUbergraph_BP_LootableBoobyTrapComponent
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_LootableBoobyTrapComponent_C::ExecuteUbergraph_BP_LootableBoobyTrapComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootableBoobyTrapComponent_C", "ExecuteUbergraph_BP_LootableBoobyTrapComponent");

	Params::BP_LootableBoobyTrapComponent_C_ExecuteUbergraph_BP_LootableBoobyTrapComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LootableBoobyTrapComponent.BP_LootableBoobyTrapComponent_C.SetBoobyTrapTimerTick
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   LoopTime                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_LootableBoobyTrapComponent_C::SetBoobyTrapTimerTick(float LoopTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootableBoobyTrapComponent_C", "SetBoobyTrapTimerTick");

	Params::BP_LootableBoobyTrapComponent_C_SetBoobyTrapTimerTick Parms{};

	Parms.LoopTime = LoopTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LootableBoobyTrapComponent.BP_LootableBoobyTrapComponent_C.InitParentBobyTrapTool
// (BlueprintCallable, BlueprintEvent)

void UBP_LootableBoobyTrapComponent_C::InitParentBobyTrapTool()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootableBoobyTrapComponent_C", "InitParentBobyTrapTool");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LootableBoobyTrapComponent.BP_LootableBoobyTrapComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_LootableBoobyTrapComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootableBoobyTrapComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LootableBoobyTrapComponent.BP_LootableBoobyTrapComponent_C.MulticastExplodeTrapEffect
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void UBP_LootableBoobyTrapComponent_C::MulticastExplodeTrapEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootableBoobyTrapComponent_C", "MulticastExplodeTrapEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LootableBoobyTrapComponent.BP_LootableBoobyTrapComponent_C.Player Exited Defusal
// (BlueprintCallable, BlueprintEvent)

void UBP_LootableBoobyTrapComponent_C::Player_Exited_Defusal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootableBoobyTrapComponent_C", "Player Exited Defusal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LootableBoobyTrapComponent.BP_LootableBoobyTrapComponent_C.AddPressedButton
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_PC_BoobyTrapComponent_C*      PC_BoobyTrap_Component                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EInputIcon                              PressedButton                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_LootableBoobyTrapComponent_C::AddPressedButton(class UBP_PC_BoobyTrapComponent_C* PC_BoobyTrap_Component, EInputIcon PressedButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootableBoobyTrapComponent_C", "AddPressedButton");

	Params::BP_LootableBoobyTrapComponent_C_AddPressedButton Parms{};

	Parms.PC_BoobyTrap_Component = PC_BoobyTrap_Component;
	Parms.PressedButton = PressedButton;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LootableBoobyTrapComponent.BP_LootableBoobyTrapComponent_C.MulticastExplodeTrap
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Character_C*                  Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_PlayerState_C*                Player_State                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Player_ID                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_LootableBoobyTrapComponent_C::MulticastExplodeTrap(class ABP_Character_C* Character, class ABP_PlayerState_C* Player_State, int32 Player_ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootableBoobyTrapComponent_C", "MulticastExplodeTrap");

	Params::BP_LootableBoobyTrapComponent_C_MulticastExplodeTrap Parms{};

	Parms.Character = Character;
	Parms.Player_State = Player_State;
	Parms.Player_ID = Player_ID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LootableBoobyTrapComponent.BP_LootableBoobyTrapComponent_C.BoobyTrapTimerTick
// (BlueprintCallable, BlueprintEvent)

void UBP_LootableBoobyTrapComponent_C::BoobyTrapTimerTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootableBoobyTrapComponent_C", "BoobyTrapTimerTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LootableBoobyTrapComponent.BP_LootableBoobyTrapComponent_C.Interacted
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Lootable_Base_C*              Lootable_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_Character_C*                  Interacting_Character_0                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_LootableBoobyTrapComponent_C::Interacted(class ABP_Lootable_Base_C* Lootable_0, class ABP_Character_C* Interacting_Character_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootableBoobyTrapComponent_C", "Interacted");

	Params::BP_LootableBoobyTrapComponent_C_Interacted Parms{};

	Parms.Lootable_0 = Lootable_0;
	Parms.Interacting_Character_0 = Interacting_Character_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LootableBoobyTrapComponent.BP_LootableBoobyTrapComponent_C.OnLoaded_964CC95C4F04BAC79E8EDAAC2BEF5685
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_LootableBoobyTrapComponent_C::OnLoaded_964CC95C4F04BAC79E8EDAAC2BEF5685(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootableBoobyTrapComponent_C", "OnLoaded_964CC95C4F04BAC79E8EDAAC2BEF5685");

	Params::BP_LootableBoobyTrapComponent_C_OnLoaded_964CC95C4F04BAC79E8EDAAC2BEF5685 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LootableBoobyTrapComponent.BP_LootableBoobyTrapComponent_C.InitTrapSequence
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_LootableBoobyTrapComponent_C::InitTrapSequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootableBoobyTrapComponent_C", "InitTrapSequence");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LootableBoobyTrapComponent.BP_LootableBoobyTrapComponent_C.Create Explode Trap Effect
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_LootableBoobyTrapComponent_C::Create_Explode_Trap_Effect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootableBoobyTrapComponent_C", "Create Explode Trap Effect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LootableBoobyTrapComponent.BP_LootableBoobyTrapComponent_C.CompareButtons
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<EInputIcon>                      Required_Buttons_In                                    (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<EInputIcon>                      Pressed_Buttons_In                                     (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    ButtonsEqualOut                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_LootableBoobyTrapComponent_C::CompareButtons(TArray<EInputIcon>& Required_Buttons_In, TArray<EInputIcon>& Pressed_Buttons_In, bool* ButtonsEqualOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootableBoobyTrapComponent_C", "CompareButtons");

	Params::BP_LootableBoobyTrapComponent_C_CompareButtons Parms{};

	Parms.Required_Buttons_In = std::move(Required_Buttons_In);
	Parms.Pressed_Buttons_In = std::move(Pressed_Buttons_In);

	UObject::ProcessEvent(Func, &Parms);

	Required_Buttons_In = std::move(Parms.Required_Buttons_In);
	Pressed_Buttons_In = std::move(Parms.Pressed_Buttons_In);

	if (ButtonsEqualOut != nullptr)
		*ButtonsEqualOut = Parms.ButtonsEqualOut;
}


// Function BP_LootableBoobyTrapComponent.BP_LootableBoobyTrapComponent_C.Is Some Of Pressed Wrong
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<EInputIcon>                      Required_Buttons_In                                    (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<EInputIcon>                      Pressed_Buttons_In                                     (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    Some_Are_Wrong                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_LootableBoobyTrapComponent_C::Is_Some_Of_Pressed_Wrong(TArray<EInputIcon>& Required_Buttons_In, TArray<EInputIcon>& Pressed_Buttons_In, bool* Some_Are_Wrong)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootableBoobyTrapComponent_C", "Is Some Of Pressed Wrong");

	Params::BP_LootableBoobyTrapComponent_C_Is_Some_Of_Pressed_Wrong Parms{};

	Parms.Required_Buttons_In = std::move(Required_Buttons_In);
	Parms.Pressed_Buttons_In = std::move(Pressed_Buttons_In);

	UObject::ProcessEvent(Func, &Parms);

	Required_Buttons_In = std::move(Parms.Required_Buttons_In);
	Pressed_Buttons_In = std::move(Parms.Pressed_Buttons_In);

	if (Some_Are_Wrong != nullptr)
		*Some_Are_Wrong = Parms.Some_Are_Wrong;
}


// Function BP_LootableBoobyTrapComponent.BP_LootableBoobyTrapComponent_C.Defuse Trap
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_LootableBoobyTrapComponent_C::Defuse_Trap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootableBoobyTrapComponent_C", "Defuse Trap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LootableBoobyTrapComponent.BP_LootableBoobyTrapComponent_C.Explode Trap
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_LootableBoobyTrapComponent_C::Explode_Trap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootableBoobyTrapComponent_C", "Explode Trap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LootableBoobyTrapComponent.BP_LootableBoobyTrapComponent_C.Save Item From Explosion?
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UClass*                           Item_class                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Save_it                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_LootableBoobyTrapComponent_C::Save_Item_From_Explosion_(class UClass* Item_class, bool* Save_it)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootableBoobyTrapComponent_C", "Save Item From Explosion?");

	Params::BP_LootableBoobyTrapComponent_C_Save_Item_From_Explosion_ Parms{};

	Parms.Item_class = Item_class;

	UObject::ProcessEvent(Func, &Parms);

	if (Save_it != nullptr)
		*Save_it = Parms.Save_it;
}


// Function BP_LootableBoobyTrapComponent.BP_LootableBoobyTrapComponent_C.Get Count of Traps Needed To Kill Character
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ABP_Character_C*                  Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Count                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_LootableBoobyTrapComponent_C::Get_Count_of_Traps_Needed_To_Kill_Character(class ABP_Character_C* Character, int32* Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootableBoobyTrapComponent_C", "Get Count of Traps Needed To Kill Character");

	Params::BP_LootableBoobyTrapComponent_C_Get_Count_of_Traps_Needed_To_Kill_Character Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);

	if (Count != nullptr)
		*Count = Parms.Count;
}

}

