#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_GestureListItem

#include "Basic.hpp"

#include "Flame_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function UI_GestureListItem.UI_GestureListItem_C.ExecuteUbergraph_UI_GestureListItem
// 0x0248 (0x0248 - 0x0000)
struct UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 K2Node_DynamicCast_AsHuman_Player_Controller;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanCharacter*                        K2Node_CustomEvent_Sender;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryCustomizationComponent*       K2Node_CustomEvent_Inventory;                      // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanCharacter*                        K2Node_DynamicCast_AsHuman_Character;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UButton*                                K2Node_ComponentBoundEvent_Sender;                 // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AHumanCharacter* Sender, class UInventoryCustomizationComponent* Inventory)> K2Node_CreateDelegate_OutputDelegate;              // 0x005C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCustomizationInfo                     CallFunc_GetCustomizationInfo_ReturnValue;         // 0x0070(0x0038)()
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue_1;               // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue_2;               // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AB[0x5];                                       // 0x00AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UButton*                                K2Node_ComponentBoundEvent_Sender_1;               // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x00B8(0x0038)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x00F0(0x0070)(ConstParm)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0160(0x0028)()
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x0188(0x0070)(ConstParm)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x01F8(0x0028)()
	class UUserWidget*                            CallFunc_GetParentUserWidget_ReturnValue;          // 0x0220(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlatformGroupDesktop_ReturnValue;       // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_Gestures_C*                         K2Node_DynamicCast_AsUI_Gestures;                  // 0x0230(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x023A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23B[0x5];                                      // 0x023B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UButton*                                K2Node_ComponentBoundEvent_Sender_2;               // 0x0240(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem) == 0x000008, "Wrong alignment on UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem");
static_assert(sizeof(UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem) == 0x000248, "Wrong size on UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem");
static_assert(offsetof(UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem, EntryPoint) == 0x000000, "Member 'UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem, K2Node_DynamicCast_AsHuman_Player_Controller) == 0x000018, "Member 'UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem::K2Node_DynamicCast_AsHuman_Player_Controller' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000028, "Member 'UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem, K2Node_CustomEvent_Sender) == 0x000030, "Member 'UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem::K2Node_CustomEvent_Sender' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem, K2Node_CustomEvent_Inventory) == 0x000038, "Member 'UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem::K2Node_CustomEvent_Inventory' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem, K2Node_DynamicCast_AsHuman_Character) == 0x000040, "Member 'UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem::K2Node_DynamicCast_AsHuman_Character' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem, K2Node_ComponentBoundEvent_Sender) == 0x000050, "Member 'UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem::K2Node_ComponentBoundEvent_Sender' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem, CallFunc_IsValidClass_ReturnValue) == 0x000058, "Member 'UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem, K2Node_CreateDelegate_OutputDelegate) == 0x00005C, "Member 'UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem, CallFunc_GetCustomizationInfo_ReturnValue) == 0x000070, "Member 'UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem::CallFunc_GetCustomizationInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem, CallFunc_Array_Contains_ReturnValue) == 0x0000A8, "Member 'UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem, CallFunc_IsValidClass_ReturnValue_1) == 0x0000A9, "Member 'UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem::CallFunc_IsValidClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem, CallFunc_IsValidClass_ReturnValue_2) == 0x0000AA, "Member 'UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem::CallFunc_IsValidClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem, K2Node_ComponentBoundEvent_Sender_1) == 0x0000B0, "Member 'UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem::K2Node_ComponentBoundEvent_Sender_1' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem, K2Node_Event_MyGeometry) == 0x0000B8, "Member 'UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem, K2Node_Event_MouseEvent_1) == 0x0000F0, "Member 'UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem, K2Node_MakeStruct_SlateColor) == 0x000160, "Member 'UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem, K2Node_Event_MouseEvent) == 0x000188, "Member 'UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem, K2Node_MakeStruct_SlateColor_1) == 0x0001F8, "Member 'UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem, CallFunc_GetParentUserWidget_ReturnValue) == 0x000220, "Member 'UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem::CallFunc_GetParentUserWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem, CallFunc_IsPlatformGroupDesktop_ReturnValue) == 0x000228, "Member 'UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem::CallFunc_IsPlatformGroupDesktop_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem, K2Node_DynamicCast_AsUI_Gestures) == 0x000230, "Member 'UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem::K2Node_DynamicCast_AsUI_Gestures' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem, K2Node_DynamicCast_bSuccess_2) == 0x000238, "Member 'UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem, CallFunc_BooleanAND_ReturnValue) == 0x000239, "Member 'UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00023A, "Member 'UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem, K2Node_ComponentBoundEvent_Sender_2) == 0x000240, "Member 'UI_GestureListItem_C_ExecuteUbergraph_UI_GestureListItem::K2Node_ComponentBoundEvent_Sender_2' has a wrong offset!");

// Function UI_GestureListItem.UI_GestureListItem_C.OnMouseLeave
// 0x0070 (0x0070 - 0x0000)
struct UI_GestureListItem_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(UI_GestureListItem_C_OnMouseLeave) == 0x000008, "Wrong alignment on UI_GestureListItem_C_OnMouseLeave");
static_assert(sizeof(UI_GestureListItem_C_OnMouseLeave) == 0x000070, "Wrong size on UI_GestureListItem_C_OnMouseLeave");
static_assert(offsetof(UI_GestureListItem_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'UI_GestureListItem_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function UI_GestureListItem.UI_GestureListItem_C.OnMouseEnter
// 0x00A8 (0x00A8 - 0x0000)
struct UI_GestureListItem_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(UI_GestureListItem_C_OnMouseEnter) == 0x000008, "Wrong alignment on UI_GestureListItem_C_OnMouseEnter");
static_assert(sizeof(UI_GestureListItem_C_OnMouseEnter) == 0x0000A8, "Wrong size on UI_GestureListItem_C_OnMouseEnter");
static_assert(offsetof(UI_GestureListItem_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'UI_GestureListItem_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'UI_GestureListItem_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function UI_GestureListItem.UI_GestureListItem_C.BndEvt__Button_K2Node_ComponentBoundEvent_1_OnButtonFocusEvent__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct UI_GestureListItem_C_BndEvt__Button_K2Node_ComponentBoundEvent_1_OnButtonFocusEvent__DelegateSignature final
{
public:
	class UButton*                                Sender;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GestureListItem_C_BndEvt__Button_K2Node_ComponentBoundEvent_1_OnButtonFocusEvent__DelegateSignature) == 0x000008, "Wrong alignment on UI_GestureListItem_C_BndEvt__Button_K2Node_ComponentBoundEvent_1_OnButtonFocusEvent__DelegateSignature");
static_assert(sizeof(UI_GestureListItem_C_BndEvt__Button_K2Node_ComponentBoundEvent_1_OnButtonFocusEvent__DelegateSignature) == 0x000008, "Wrong size on UI_GestureListItem_C_BndEvt__Button_K2Node_ComponentBoundEvent_1_OnButtonFocusEvent__DelegateSignature");
static_assert(offsetof(UI_GestureListItem_C_BndEvt__Button_K2Node_ComponentBoundEvent_1_OnButtonFocusEvent__DelegateSignature, Sender) == 0x000000, "Member 'UI_GestureListItem_C_BndEvt__Button_K2Node_ComponentBoundEvent_1_OnButtonFocusEvent__DelegateSignature::Sender' has a wrong offset!");

// Function UI_GestureListItem.UI_GestureListItem_C.OnCustomizationLoaded
// 0x0010 (0x0010 - 0x0000)
struct UI_GestureListItem_C_OnCustomizationLoaded final
{
public:
	class AHumanCharacter*                        Sender;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryCustomizationComponent*       Inventory;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GestureListItem_C_OnCustomizationLoaded) == 0x000008, "Wrong alignment on UI_GestureListItem_C_OnCustomizationLoaded");
static_assert(sizeof(UI_GestureListItem_C_OnCustomizationLoaded) == 0x000010, "Wrong size on UI_GestureListItem_C_OnCustomizationLoaded");
static_assert(offsetof(UI_GestureListItem_C_OnCustomizationLoaded, Sender) == 0x000000, "Member 'UI_GestureListItem_C_OnCustomizationLoaded::Sender' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_OnCustomizationLoaded, Inventory) == 0x000008, "Member 'UI_GestureListItem_C_OnCustomizationLoaded::Inventory' has a wrong offset!");

// Function UI_GestureListItem.UI_GestureListItem_C.BndEvt__Button_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct UI_GestureListItem_C_BndEvt__Button_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature final
{
public:
	class UButton*                                Sender;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GestureListItem_C_BndEvt__Button_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature) == 0x000008, "Wrong alignment on UI_GestureListItem_C_BndEvt__Button_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature");
static_assert(sizeof(UI_GestureListItem_C_BndEvt__Button_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature) == 0x000008, "Wrong size on UI_GestureListItem_C_BndEvt__Button_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature");
static_assert(offsetof(UI_GestureListItem_C_BndEvt__Button_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature, Sender) == 0x000000, "Member 'UI_GestureListItem_C_BndEvt__Button_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature::Sender' has a wrong offset!");

// Function UI_GestureListItem.UI_GestureListItem_C.BndEvt__Button_K2Node_ComponentBoundEvent_70_OnButtonFocusEvent__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct UI_GestureListItem_C_BndEvt__Button_K2Node_ComponentBoundEvent_70_OnButtonFocusEvent__DelegateSignature final
{
public:
	class UButton*                                Sender;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GestureListItem_C_BndEvt__Button_K2Node_ComponentBoundEvent_70_OnButtonFocusEvent__DelegateSignature) == 0x000008, "Wrong alignment on UI_GestureListItem_C_BndEvt__Button_K2Node_ComponentBoundEvent_70_OnButtonFocusEvent__DelegateSignature");
static_assert(sizeof(UI_GestureListItem_C_BndEvt__Button_K2Node_ComponentBoundEvent_70_OnButtonFocusEvent__DelegateSignature) == 0x000008, "Wrong size on UI_GestureListItem_C_BndEvt__Button_K2Node_ComponentBoundEvent_70_OnButtonFocusEvent__DelegateSignature");
static_assert(offsetof(UI_GestureListItem_C_BndEvt__Button_K2Node_ComponentBoundEvent_70_OnButtonFocusEvent__DelegateSignature, Sender) == 0x000000, "Member 'UI_GestureListItem_C_BndEvt__Button_K2Node_ComponentBoundEvent_70_OnButtonFocusEvent__DelegateSignature::Sender' has a wrong offset!");

// Function UI_GestureListItem.UI_GestureListItem_C.UpdateVisual
// 0x0080 (0x0080 - 0x0000)
struct UI_GestureListItem_C_UpdateVisual final
{
public:
	class FText                                   Name_0;                                            // 0x0000(0x0018)(Edit, BlueprintVisible)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAssignedToAnySlot_IsAssigned;           // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipped_IsEquipped;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27[0x1];                                       // 0x0027(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class ACustomizationGestureVariant*           CallFunc_GetClassDefaultObject_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue_1;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FItemRarity                            CallFunc_GetItemRarity_ReturnValue;                // 0x0038(0x0028)(ConstParm)
	class UTexture2D*                             CallFunc_GetIcon_ReturnValue;                      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetItemName_ReturnValue;                  // 0x0068(0x0018)()
};
static_assert(alignof(UI_GestureListItem_C_UpdateVisual) == 0x000008, "Wrong alignment on UI_GestureListItem_C_UpdateVisual");
static_assert(sizeof(UI_GestureListItem_C_UpdateVisual) == 0x000080, "Wrong size on UI_GestureListItem_C_UpdateVisual");
static_assert(offsetof(UI_GestureListItem_C_UpdateVisual, Name_0) == 0x000000, "Member 'UI_GestureListItem_C_UpdateVisual::Name_0' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_UpdateVisual, Temp_bool_Variable) == 0x000018, "Member 'UI_GestureListItem_C_UpdateVisual::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_UpdateVisual, Temp_byte_Variable) == 0x000019, "Member 'UI_GestureListItem_C_UpdateVisual::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_UpdateVisual, Temp_byte_Variable_1) == 0x00001A, "Member 'UI_GestureListItem_C_UpdateVisual::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_UpdateVisual, Temp_bool_Variable_1) == 0x00001B, "Member 'UI_GestureListItem_C_UpdateVisual::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_UpdateVisual, Temp_byte_Variable_2) == 0x00001C, "Member 'UI_GestureListItem_C_UpdateVisual::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_UpdateVisual, Temp_byte_Variable_3) == 0x00001D, "Member 'UI_GestureListItem_C_UpdateVisual::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_UpdateVisual, Temp_byte_Variable_4) == 0x00001E, "Member 'UI_GestureListItem_C_UpdateVisual::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_UpdateVisual, CallFunc_IsAssignedToAnySlot_IsAssigned) == 0x00001F, "Member 'UI_GestureListItem_C_UpdateVisual::CallFunc_IsAssignedToAnySlot_IsAssigned' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_UpdateVisual, Temp_byte_Variable_5) == 0x000020, "Member 'UI_GestureListItem_C_UpdateVisual::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_UpdateVisual, CallFunc_IsEquipped_IsEquipped) == 0x000021, "Member 'UI_GestureListItem_C_UpdateVisual::CallFunc_IsEquipped_IsEquipped' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_UpdateVisual, K2Node_Select_Default) == 0x000022, "Member 'UI_GestureListItem_C_UpdateVisual::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_UpdateVisual, CallFunc_IsValidClass_ReturnValue) == 0x000023, "Member 'UI_GestureListItem_C_UpdateVisual::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_UpdateVisual, Temp_bool_Variable_2) == 0x000024, "Member 'UI_GestureListItem_C_UpdateVisual::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_UpdateVisual, K2Node_Select_Default_1) == 0x000025, "Member 'UI_GestureListItem_C_UpdateVisual::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_UpdateVisual, K2Node_Select_Default_2) == 0x000026, "Member 'UI_GestureListItem_C_UpdateVisual::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_UpdateVisual, CallFunc_GetClassDefaultObject_ReturnValue) == 0x000028, "Member 'UI_GestureListItem_C_UpdateVisual::CallFunc_GetClassDefaultObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_UpdateVisual, CallFunc_IsValidClass_ReturnValue_1) == 0x000030, "Member 'UI_GestureListItem_C_UpdateVisual::CallFunc_IsValidClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_UpdateVisual, CallFunc_GetItemRarity_ReturnValue) == 0x000038, "Member 'UI_GestureListItem_C_UpdateVisual::CallFunc_GetItemRarity_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_UpdateVisual, CallFunc_GetIcon_ReturnValue) == 0x000060, "Member 'UI_GestureListItem_C_UpdateVisual::CallFunc_GetIcon_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_UpdateVisual, CallFunc_GetItemName_ReturnValue) == 0x000068, "Member 'UI_GestureListItem_C_UpdateVisual::CallFunc_GetItemName_ReturnValue' has a wrong offset!");

// Function UI_GestureListItem.UI_GestureListItem_C.IsEquipped
// 0x0038 (0x0038 - 0x0000)
struct UI_GestureListItem_C_IsEquipped final
{
public:
	bool                                          IsEquipped_0;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerController*                 K2Node_DynamicCast_AsHuman_Player_Controller;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCustomizationPair                     CallFunc_GetCustomizationInSlot_ReturnValue;       // 0x0020(0x0010)(NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_GestureListItem_C_IsEquipped) == 0x000008, "Wrong alignment on UI_GestureListItem_C_IsEquipped");
static_assert(sizeof(UI_GestureListItem_C_IsEquipped) == 0x000038, "Wrong size on UI_GestureListItem_C_IsEquipped");
static_assert(offsetof(UI_GestureListItem_C_IsEquipped, IsEquipped_0) == 0x000000, "Member 'UI_GestureListItem_C_IsEquipped::IsEquipped_0' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_IsEquipped, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'UI_GestureListItem_C_IsEquipped::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_IsEquipped, K2Node_DynamicCast_AsHuman_Player_Controller) == 0x000010, "Member 'UI_GestureListItem_C_IsEquipped::K2Node_DynamicCast_AsHuman_Player_Controller' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_IsEquipped, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'UI_GestureListItem_C_IsEquipped::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_IsEquipped, CallFunc_GetCustomizationInSlot_ReturnValue) == 0x000020, "Member 'UI_GestureListItem_C_IsEquipped::CallFunc_GetCustomizationInSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_IsEquipped, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000030, "Member 'UI_GestureListItem_C_IsEquipped::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");

// Function UI_GestureListItem.UI_GestureListItem_C.IsAssignedToAnySlot
// 0x0080 (0x0080 - 0x0000)
struct UI_GestureListItem_C_IsAssignedToAnySlot final
{
public:
	class UClass*                                 InGestureVariant;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAssigned;                                        // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 HumanPlayerController;                             // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UClass*>                         GestureSlots;                                      // 0x0018(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UClass*>                         K2Node_MakeArray_Array;                            // 0x0038(0x0010)(ReferenceParm)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerController*                 K2Node_DynamicCast_AsHuman_Player_Controller;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCustomizationPair                     CallFunc_GetCustomizationInSlot_ReturnValue;       // 0x0068(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_GestureListItem_C_IsAssignedToAnySlot) == 0x000008, "Wrong alignment on UI_GestureListItem_C_IsAssignedToAnySlot");
static_assert(sizeof(UI_GestureListItem_C_IsAssignedToAnySlot) == 0x000080, "Wrong size on UI_GestureListItem_C_IsAssignedToAnySlot");
static_assert(offsetof(UI_GestureListItem_C_IsAssignedToAnySlot, InGestureVariant) == 0x000000, "Member 'UI_GestureListItem_C_IsAssignedToAnySlot::InGestureVariant' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_IsAssignedToAnySlot, IsAssigned) == 0x000008, "Member 'UI_GestureListItem_C_IsAssignedToAnySlot::IsAssigned' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_IsAssignedToAnySlot, HumanPlayerController) == 0x000010, "Member 'UI_GestureListItem_C_IsAssignedToAnySlot::HumanPlayerController' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_IsAssignedToAnySlot, GestureSlots) == 0x000018, "Member 'UI_GestureListItem_C_IsAssignedToAnySlot::GestureSlots' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_IsAssignedToAnySlot, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'UI_GestureListItem_C_IsAssignedToAnySlot::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_IsAssignedToAnySlot, CallFunc_IsValidClass_ReturnValue) == 0x00002C, "Member 'UI_GestureListItem_C_IsAssignedToAnySlot::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_IsAssignedToAnySlot, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'UI_GestureListItem_C_IsAssignedToAnySlot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_IsAssignedToAnySlot, Temp_int_Array_Index_Variable) == 0x000034, "Member 'UI_GestureListItem_C_IsAssignedToAnySlot::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_IsAssignedToAnySlot, K2Node_MakeArray_Array) == 0x000038, "Member 'UI_GestureListItem_C_IsAssignedToAnySlot::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_IsAssignedToAnySlot, CallFunc_GetOwningPlayer_ReturnValue) == 0x000048, "Member 'UI_GestureListItem_C_IsAssignedToAnySlot::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_IsAssignedToAnySlot, K2Node_DynamicCast_AsHuman_Player_Controller) == 0x000050, "Member 'UI_GestureListItem_C_IsAssignedToAnySlot::K2Node_DynamicCast_AsHuman_Player_Controller' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_IsAssignedToAnySlot, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'UI_GestureListItem_C_IsAssignedToAnySlot::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_IsAssignedToAnySlot, CallFunc_Array_Get_Item) == 0x000060, "Member 'UI_GestureListItem_C_IsAssignedToAnySlot::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_IsAssignedToAnySlot, CallFunc_GetCustomizationInSlot_ReturnValue) == 0x000068, "Member 'UI_GestureListItem_C_IsAssignedToAnySlot::CallFunc_GetCustomizationInSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_IsAssignedToAnySlot, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'UI_GestureListItem_C_IsAssignedToAnySlot::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_IsAssignedToAnySlot, CallFunc_Less_IntInt_ReturnValue) == 0x00007C, "Member 'UI_GestureListItem_C_IsAssignedToAnySlot::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GestureListItem_C_IsAssignedToAnySlot, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x00007D, "Member 'UI_GestureListItem_C_IsAssignedToAnySlot::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");

}

