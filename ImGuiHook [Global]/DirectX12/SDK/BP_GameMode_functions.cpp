#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GameMode

#include "Basic.hpp"

#include "BP_GameMode_classes.hpp"
#include "BP_GameMode_parameters.hpp"


namespace SDK
{

// Function BP_GameMode.BP_GameMode_C.ExecuteUbergraph_BP_GameMode
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_C::ExecuteUbergraph_BP_GameMode(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_C", "ExecuteUbergraph_BP_GameMode");

	Params::BP_GameMode_C_ExecuteUbergraph_BP_GameMode Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode.BP_GameMode_C.CancelMatch
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_MatchInfoComponent_C*         MatchInfoComponent                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_C::CancelMatch(class UBP_MatchInfoComponent_C* MatchInfoComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_C", "CancelMatch");

	Params::BP_GameMode_C_CancelMatch Parms{};

	Parms.MatchInfoComponent = MatchInfoComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode.BP_GameMode_C.PlayerSendToShelter
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHumanPlayerController*           Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_C::PlayerSendToShelter(class AHumanPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_C", "PlayerSendToShelter");

	Params::BP_GameMode_C_PlayerSendToShelter Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode.BP_GameMode_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_GameMode_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameMode.BP_GameMode_C.Debug_Multicast_SetClientAnalyticsTime
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PeriodTime                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_C::Debug_Multicast_SetClientAnalyticsTime(int32 PeriodTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_C", "Debug_Multicast_SetClientAnalyticsTime");

	Params::BP_GameMode_C_Debug_Multicast_SetClientAnalyticsTime Parms{};

	Parms.PeriodTime = PeriodTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameMode.BP_GameMode_C.Get Game Mode Description
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             Game_Mode_Description                                  (Parm, OutParm)

void ABP_GameMode_C::Get_Game_Mode_Description(class FText* Game_Mode_Description)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_C", "Get Game Mode Description");

	Params::BP_GameMode_C_Get_Game_Mode_Description Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Game_Mode_Description != nullptr)
		*Game_Mode_Description = std::move(Parms.Game_Mode_Description);
}


// Function BP_GameMode.BP_GameMode_C.Set Game Mode Description
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             New_Game_Mode_Description                              (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    Duplicated_to_Game_State                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_GameMode_C::Set_Game_Mode_Description(const class FText& New_Game_Mode_Description, bool* Duplicated_to_Game_State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_C", "Set Game Mode Description");

	Params::BP_GameMode_C_Set_Game_Mode_Description Parms{};

	Parms.New_Game_Mode_Description = std::move(New_Game_Mode_Description);

	UObject::ProcessEvent(Func, &Parms);

	if (Duplicated_to_Game_State != nullptr)
		*Duplicated_to_Game_State = Parms.Duplicated_to_Game_State;
}


// Function BP_GameMode.BP_GameMode_C.Reset Onboarding Save Object
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_Shelter_SaveGame_C*           Save_Game                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_C::Reset_Onboarding_Save_Object(class UBP_Shelter_SaveGame_C** Save_Game)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_C", "Reset Onboarding Save Object");

	Params::BP_GameMode_C_Reset_Onboarding_Save_Object Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Save_Game != nullptr)
		*Save_Game = Parms.Save_Game;
}


// Function BP_GameMode.BP_GameMode_C.GetShelterSaveFile
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Valid                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UBP_PersistentShelter_SaveGame_C* SaveFile                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameMode_C::GetShelterSaveFile(bool* Valid, class UBP_PersistentShelter_SaveGame_C** SaveFile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_C", "GetShelterSaveFile");

	Params::BP_GameMode_C_GetShelterSaveFile Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Valid != nullptr)
		*Valid = Parms.Valid;

	if (SaveFile != nullptr)
		*SaveFile = Parms.SaveFile;
}


// Function BP_GameMode.BP_GameMode_C.Get Default Game Mode Description
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class FText                             Game_Mode_Description                                  (Parm, OutParm)

void ABP_GameMode_C::Get_Default_Game_Mode_Description(class FText* Game_Mode_Description) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameMode_C", "Get Default Game Mode Description");

	Params::BP_GameMode_C_Get_Default_Game_Mode_Description Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Game_Mode_Description != nullptr)
		*Game_Mode_Description = std::move(Parms.Game_Mode_Description);
}

}

