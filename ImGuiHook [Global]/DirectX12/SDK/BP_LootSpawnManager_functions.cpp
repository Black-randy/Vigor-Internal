#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LootSpawnManager

#include "Basic.hpp"

#include "BP_LootSpawnManager_classes.hpp"
#include "BP_LootSpawnManager_parameters.hpp"


namespace SDK
{

// Function BP_LootSpawnManager.BP_LootSpawnManager_C.ExecuteUbergraph_BP_LootSpawnManager
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LootSpawnManager_C::ExecuteUbergraph_BP_LootSpawnManager(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootSpawnManager_C", "ExecuteUbergraph_BP_LootSpawnManager");

	Params::BP_LootSpawnManager_C_ExecuteUbergraph_BP_LootSpawnManager Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LootSpawnManager.BP_LootSpawnManager_C.Calculate Loot Capacity in Level
// (BlueprintCallable, BlueprintEvent)

void ABP_LootSpawnManager_C::Calculate_Loot_Capacity_in_Level()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootSpawnManager_C", "Calculate Loot Capacity in Level");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LootSpawnManager.BP_LootSpawnManager_C.GetLootCapacityInActorsInLevel
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Actor_Type                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TMap<class UClass*, int32>              Loot_Amounts                                           (Parm, OutParm)

void ABP_LootSpawnManager_C::GetLootCapacityInActorsInLevel(class UClass* Actor_Type, TMap<class UClass*, int32>* Loot_Amounts)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootSpawnManager_C", "GetLootCapacityInActorsInLevel");

	Params::BP_LootSpawnManager_C_GetLootCapacityInActorsInLevel Parms{};

	Parms.Actor_Type = Actor_Type;

	UObject::ProcessEvent(Func, &Parms);

	if (Loot_Amounts != nullptr)
		*Loot_Amounts = std::move(Parms.Loot_Amounts);
}

}

