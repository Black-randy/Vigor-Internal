#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_InputChoiceInt

#include "Basic.hpp"

#include "Flame_structs.hpp"
#include "Flame_classes.hpp"
#include "Engine_structs.hpp"
#include "FlameUI_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_InputChoiceInt.UI_InputChoiceInt_C
// 0x0050 (0x04B0 - 0x0460)
class UUI_InputChoiceInt_C final : public UInputChoiceWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0460(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UHorizontalBox*                         HorizontalBoxAmounts;                              // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<int32>                                 Initial_amounts;                                   // 0x0470(0x0010)(Edit, BlueprintVisible, ExposeOnSpawn)
	int32                                         SelectedAmountIndex;                               // 0x0480(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_484[0x4];                                      // 0x0484(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UFlameTextBlock*>                Value_widgets;                                     // 0x0488(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<int32>                                 Amounts;                                           // 0x0498(0x0010)(Edit, BlueprintVisible, ExposeOnSpawn)
	class USoundBase*                             On_amount_switched_sound;                          // 0x04A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_UI_InputChoiceInt(int32 EntryPoint);
	void IconChanged();
	void InputModeChanged(int32 PlayerIndex, EInputMode InputMode);
	void Construct();
	void OnActionPressed();
	void PreConstruct(bool IsDesignTime);
	void Add_Value_Widget(int32 Value);
	void Add_Separator_Widget();
	void GetSelectedValue(int32* Count);
	class UFlameTextBlock* CreateTextWidget(const class FText& TextValue);
	void ChangeVisuals(int32 Index_0, bool Should_select);
	void Select_specific_index(int32 Index_to_select);
	void Create_new_selectable_value(int32 Value_to_add);
	void SetWindowsIcon();

	int32 GetSelectedIndex() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_InputChoiceInt_C">();
	}
	static class UUI_InputChoiceInt_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_InputChoiceInt_C>();
	}
};
static_assert(alignof(UUI_InputChoiceInt_C) == 0x000008, "Wrong alignment on UUI_InputChoiceInt_C");
static_assert(sizeof(UUI_InputChoiceInt_C) == 0x0004B0, "Wrong size on UUI_InputChoiceInt_C");
static_assert(offsetof(UUI_InputChoiceInt_C, UberGraphFrame) == 0x000460, "Member 'UUI_InputChoiceInt_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_InputChoiceInt_C, HorizontalBoxAmounts) == 0x000468, "Member 'UUI_InputChoiceInt_C::HorizontalBoxAmounts' has a wrong offset!");
static_assert(offsetof(UUI_InputChoiceInt_C, Initial_amounts) == 0x000470, "Member 'UUI_InputChoiceInt_C::Initial_amounts' has a wrong offset!");
static_assert(offsetof(UUI_InputChoiceInt_C, SelectedAmountIndex) == 0x000480, "Member 'UUI_InputChoiceInt_C::SelectedAmountIndex' has a wrong offset!");
static_assert(offsetof(UUI_InputChoiceInt_C, Value_widgets) == 0x000488, "Member 'UUI_InputChoiceInt_C::Value_widgets' has a wrong offset!");
static_assert(offsetof(UUI_InputChoiceInt_C, Amounts) == 0x000498, "Member 'UUI_InputChoiceInt_C::Amounts' has a wrong offset!");
static_assert(offsetof(UUI_InputChoiceInt_C, On_amount_switched_sound) == 0x0004A8, "Member 'UUI_InputChoiceInt_C::On_amount_switched_sound' has a wrong offset!");

}

