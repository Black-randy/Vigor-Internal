#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerState_Shelter

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_PlayerState_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PlayerState_Shelter.BP_PlayerState_Shelter_C
// 0x0010 (0x06A8 - 0x0698)
class ABP_PlayerState_Shelter_C final : public ABP_PlayerState_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_PlayerState_Shelter_C;           // 0x0698(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ABP_TitlesManager_C*                    Titles_Manager;                                    // 0x06A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_PlayerState_Shelter(int32 EntryPoint);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void On_Cloud_Stash_Inventory_Loaded(class AStash* Sender, class UStashComponent* Inventory);
	void Check_for_Achievements();
	void On_Cloud_Wardrobe_Loaded(class UShelterCustomizationComponent* Wardrobe);
	void On_Improvement_Upgrade_Finished(const class UShelterCraftingList* ParentShelter, class UClass* FinishedImprovementClass, const struct FCloudImprovementInfo& AdditionalInfo);
	void On_Shelter_Level_Changed(int32 NewLevel);
	void On_Cloud_Shelter_Improvements_Loaded();
	void ReceiveBeginPlay();
	void Check_Every_Weapon_Type_Plan_Achievement();
	void Count_Bools(TArray<bool>& Values, int32* Count, int32* Total);
	void Check_All_Improvements_Achievement();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PlayerState_Shelter_C">();
	}
	static class ABP_PlayerState_Shelter_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_PlayerState_Shelter_C>();
	}
};
static_assert(alignof(ABP_PlayerState_Shelter_C) == 0x000008, "Wrong alignment on ABP_PlayerState_Shelter_C");
static_assert(sizeof(ABP_PlayerState_Shelter_C) == 0x0006A8, "Wrong size on ABP_PlayerState_Shelter_C");
static_assert(offsetof(ABP_PlayerState_Shelter_C, UberGraphFrame_BP_PlayerState_Shelter_C) == 0x000698, "Member 'ABP_PlayerState_Shelter_C::UberGraphFrame_BP_PlayerState_Shelter_C' has a wrong offset!");
static_assert(offsetof(ABP_PlayerState_Shelter_C, Titles_Manager) == 0x0006A0, "Member 'ABP_PlayerState_Shelter_C::Titles_Manager' has a wrong offset!");

}

