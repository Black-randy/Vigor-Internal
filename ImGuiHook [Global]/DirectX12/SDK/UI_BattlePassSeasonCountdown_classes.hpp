#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_BattlePassSeasonCountdown

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Flame_classes.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_BattlePassSeasonCountdown.UI_BattlePassSeasonCountdown_C
// 0x0058 (0x0310 - 0x02B8)
class UUI_BattlePassSeasonCountdown_C final : public UFlameWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Image_105;                                         // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           Progress_1;                                        // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           Progress_2;                                        // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           Progress_3;                                        // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameTextBlock*                        SeasonState;                                       // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameTextBlock*                        SeasonState_InLine;                                // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FTimespan                              SeasonDuration;                                    // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              TimeUntilEnd;                                      // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              TimeFromStart;                                     // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         SeasonStage;                                       // 0x0308(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInline;                                          // 0x030C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_UI_BattlePassSeasonCountdown(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void Construct();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_BattlePassSeasonCountdown_C">();
	}
	static class UUI_BattlePassSeasonCountdown_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_BattlePassSeasonCountdown_C>();
	}
};
static_assert(alignof(UUI_BattlePassSeasonCountdown_C) == 0x000008, "Wrong alignment on UUI_BattlePassSeasonCountdown_C");
static_assert(sizeof(UUI_BattlePassSeasonCountdown_C) == 0x000310, "Wrong size on UUI_BattlePassSeasonCountdown_C");
static_assert(offsetof(UUI_BattlePassSeasonCountdown_C, UberGraphFrame) == 0x0002B8, "Member 'UUI_BattlePassSeasonCountdown_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_BattlePassSeasonCountdown_C, Image_105) == 0x0002C0, "Member 'UUI_BattlePassSeasonCountdown_C::Image_105' has a wrong offset!");
static_assert(offsetof(UUI_BattlePassSeasonCountdown_C, Progress_1) == 0x0002C8, "Member 'UUI_BattlePassSeasonCountdown_C::Progress_1' has a wrong offset!");
static_assert(offsetof(UUI_BattlePassSeasonCountdown_C, Progress_2) == 0x0002D0, "Member 'UUI_BattlePassSeasonCountdown_C::Progress_2' has a wrong offset!");
static_assert(offsetof(UUI_BattlePassSeasonCountdown_C, Progress_3) == 0x0002D8, "Member 'UUI_BattlePassSeasonCountdown_C::Progress_3' has a wrong offset!");
static_assert(offsetof(UUI_BattlePassSeasonCountdown_C, SeasonState) == 0x0002E0, "Member 'UUI_BattlePassSeasonCountdown_C::SeasonState' has a wrong offset!");
static_assert(offsetof(UUI_BattlePassSeasonCountdown_C, SeasonState_InLine) == 0x0002E8, "Member 'UUI_BattlePassSeasonCountdown_C::SeasonState_InLine' has a wrong offset!");
static_assert(offsetof(UUI_BattlePassSeasonCountdown_C, SeasonDuration) == 0x0002F0, "Member 'UUI_BattlePassSeasonCountdown_C::SeasonDuration' has a wrong offset!");
static_assert(offsetof(UUI_BattlePassSeasonCountdown_C, TimeUntilEnd) == 0x0002F8, "Member 'UUI_BattlePassSeasonCountdown_C::TimeUntilEnd' has a wrong offset!");
static_assert(offsetof(UUI_BattlePassSeasonCountdown_C, TimeFromStart) == 0x000300, "Member 'UUI_BattlePassSeasonCountdown_C::TimeFromStart' has a wrong offset!");
static_assert(offsetof(UUI_BattlePassSeasonCountdown_C, SeasonStage) == 0x000308, "Member 'UUI_BattlePassSeasonCountdown_C::SeasonStage' has a wrong offset!");
static_assert(offsetof(UUI_BattlePassSeasonCountdown_C, IsInline) == 0x00030C, "Member 'UUI_BattlePassSeasonCountdown_C::IsInline' has a wrong offset!");

}

