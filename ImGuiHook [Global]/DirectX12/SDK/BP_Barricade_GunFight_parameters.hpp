#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Barricade_GunFight

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_Barricade_GunFight.BP_Barricade_GunFight_C.ExecuteUbergraph_BP_Barricade_GunFight
// 0x000C (0x000C - 0x0000)
struct BP_Barricade_GunFight_C_ExecuteUbergraph_BP_Barricade_GunFight final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionEnabled                             Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Is_Active;                      // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionEnabled                             K2Node_Select_Default;                             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Barricade_GunFight_C_ExecuteUbergraph_BP_Barricade_GunFight) == 0x000004, "Wrong alignment on BP_Barricade_GunFight_C_ExecuteUbergraph_BP_Barricade_GunFight");
static_assert(sizeof(BP_Barricade_GunFight_C_ExecuteUbergraph_BP_Barricade_GunFight) == 0x00000C, "Wrong size on BP_Barricade_GunFight_C_ExecuteUbergraph_BP_Barricade_GunFight");
static_assert(offsetof(BP_Barricade_GunFight_C_ExecuteUbergraph_BP_Barricade_GunFight, EntryPoint) == 0x000000, "Member 'BP_Barricade_GunFight_C_ExecuteUbergraph_BP_Barricade_GunFight::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Barricade_GunFight_C_ExecuteUbergraph_BP_Barricade_GunFight, Temp_bool_Variable) == 0x000004, "Member 'BP_Barricade_GunFight_C_ExecuteUbergraph_BP_Barricade_GunFight::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Barricade_GunFight_C_ExecuteUbergraph_BP_Barricade_GunFight, Temp_byte_Variable) == 0x000005, "Member 'BP_Barricade_GunFight_C_ExecuteUbergraph_BP_Barricade_GunFight::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Barricade_GunFight_C_ExecuteUbergraph_BP_Barricade_GunFight, Temp_byte_Variable_1) == 0x000006, "Member 'BP_Barricade_GunFight_C_ExecuteUbergraph_BP_Barricade_GunFight::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Barricade_GunFight_C_ExecuteUbergraph_BP_Barricade_GunFight, K2Node_CustomEvent_Is_Active) == 0x000007, "Member 'BP_Barricade_GunFight_C_ExecuteUbergraph_BP_Barricade_GunFight::K2Node_CustomEvent_Is_Active' has a wrong offset!");
static_assert(offsetof(BP_Barricade_GunFight_C_ExecuteUbergraph_BP_Barricade_GunFight, K2Node_Select_Default) == 0x000008, "Member 'BP_Barricade_GunFight_C_ExecuteUbergraph_BP_Barricade_GunFight::K2Node_Select_Default' has a wrong offset!");

// Function BP_Barricade_GunFight.BP_Barricade_GunFight_C.Set Barrier Active
// 0x0001 (0x0001 - 0x0000)
struct BP_Barricade_GunFight_C_Set_Barrier_Active final
{
public:
	bool                                          Is_active;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Barricade_GunFight_C_Set_Barrier_Active) == 0x000001, "Wrong alignment on BP_Barricade_GunFight_C_Set_Barrier_Active");
static_assert(sizeof(BP_Barricade_GunFight_C_Set_Barrier_Active) == 0x000001, "Wrong size on BP_Barricade_GunFight_C_Set_Barrier_Active");
static_assert(offsetof(BP_Barricade_GunFight_C_Set_Barrier_Active, Is_active) == 0x000000, "Member 'BP_Barricade_GunFight_C_Set_Barrier_Active::Is_active' has a wrong offset!");

}

