#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Raid_ObjectiveSpawnPosition

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Raid_ObjectiveSpawnPosition.BP_Raid_ObjectiveSpawnPosition_C
// 0x0038 (0x0258 - 0x0220)
class ABP_Raid_ObjectiveSpawnPosition_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          ObjectiveSpotZone;                                 // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ABP_RaidObjective_C*                    Objective;                                         // 0x0240(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBoxComponent*>                  SpotZones;                                         // 0x0248(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)

public:
	void ExecuteUbergraph_BP_Raid_ObjectiveSpawnPosition(int32 EntryPoint);
	void Deactivate_All_SpotZones();
	void SpotZoneOverlapped(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void Activate_All_SpotZones();
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void Is_Player_Attacker(class APlayerState* PlayerState, bool* Is_Attacker);
	void Get_All_Spot_Zones();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Raid_ObjectiveSpawnPosition_C">();
	}
	static class ABP_Raid_ObjectiveSpawnPosition_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Raid_ObjectiveSpawnPosition_C>();
	}
};
static_assert(alignof(ABP_Raid_ObjectiveSpawnPosition_C) == 0x000008, "Wrong alignment on ABP_Raid_ObjectiveSpawnPosition_C");
static_assert(sizeof(ABP_Raid_ObjectiveSpawnPosition_C) == 0x000258, "Wrong size on ABP_Raid_ObjectiveSpawnPosition_C");
static_assert(offsetof(ABP_Raid_ObjectiveSpawnPosition_C, UberGraphFrame) == 0x000220, "Member 'ABP_Raid_ObjectiveSpawnPosition_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Raid_ObjectiveSpawnPosition_C, ObjectiveSpotZone) == 0x000228, "Member 'ABP_Raid_ObjectiveSpawnPosition_C::ObjectiveSpotZone' has a wrong offset!");
static_assert(offsetof(ABP_Raid_ObjectiveSpawnPosition_C, StaticMesh) == 0x000230, "Member 'ABP_Raid_ObjectiveSpawnPosition_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_Raid_ObjectiveSpawnPosition_C, DefaultSceneRoot) == 0x000238, "Member 'ABP_Raid_ObjectiveSpawnPosition_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Raid_ObjectiveSpawnPosition_C, Objective) == 0x000240, "Member 'ABP_Raid_ObjectiveSpawnPosition_C::Objective' has a wrong offset!");
static_assert(offsetof(ABP_Raid_ObjectiveSpawnPosition_C, SpotZones) == 0x000248, "Member 'ABP_Raid_ObjectiveSpawnPosition_C::SpotZones' has a wrong offset!");

}

