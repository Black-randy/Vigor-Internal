#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable

#include "Basic.hpp"

#include "Flame_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable.BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C.ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable
// 0x0110 (0x0110 - 0x0000)
struct BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable;                               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameState_GunFight_C*               K2Node_DynamicCast_AsBP_Game_State_Gun_Fight;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_Select_Default_1;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEventSystem*                           CallFunc_GetEventSystem_ReturnValue;               // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_EventSystem_C>    K2Node_DynamicCast_AsBPI_Event_System;             // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Get_Maximum_Progress_Maximum_Progress;    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_EventSystem_C*                      CallFunc_Get_BP_event_system_Event_system;         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A[0x2];                                       // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_PlayerID;                       // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Damage;                         // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDamageType                                   K2Node_CustomEvent_DamageType;                     // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_CustomEvent_DamagingItem;                   // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93[0x1];                                       // 0x0093(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Maximum_Progress_Maximum_Progress_1;  // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UEventSystem*                           CallFunc_GetEventSystem_ReturnValue_1;             // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EventSystem_C>    K2Node_DynamicCast_AsBPI_Event_System_1;           // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_EventSystem_C*                      CallFunc_Get_BP_event_system_Event_system_1;       // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D2[0x2];                                       // 0x00D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_2;                           // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 PlayerId, float Damage, EDamageType DamageType, class UClass* DamagingItem)> K2Node_CreateDelegate_OutputDelegate;              // 0x00D8(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Get_Maximum_Progress_Maximum_Progress_2;  // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeSeconds_ReturnValue;               // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 PlayerId, float Damage, EDamageType DamageType, class UClass* DamagingItem)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x00F4(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0105(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_106[0x2];                                      // 0x0106(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable) == 0x000008, "Wrong alignment on BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable");
static_assert(sizeof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable) == 0x000110, "Wrong size on BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable, EntryPoint) == 0x000000, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable, Temp_class_Variable) == 0x000008, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable, CallFunc_IsValidClass_ReturnValue) == 0x000010, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable, Temp_bool_Variable) == 0x000011, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable, Temp_int_Variable) == 0x000014, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable, Temp_bool_Variable_1) == 0x000018, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable, Temp_int_Variable_1) == 0x00001C, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable, Temp_int_Variable_2) == 0x000020, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000024, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000025, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable, K2Node_Select_Default) == 0x000028, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable, CallFunc_GetGameState_ReturnValue) == 0x000030, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable, K2Node_DynamicCast_AsBP_Game_State_Gun_Fight) == 0x000038, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable::K2Node_DynamicCast_AsBP_Game_State_Gun_Fight' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable, K2Node_Select_Default_1) == 0x000048, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable, CallFunc_GetEventSystem_ReturnValue) == 0x000050, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable::CallFunc_GetEventSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable, K2Node_DynamicCast_AsBPI_Event_System) == 0x000058, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable::K2Node_DynamicCast_AsBPI_Event_System' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable, CallFunc_Get_Maximum_Progress_Maximum_Progress) == 0x00006C, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable::CallFunc_Get_Maximum_Progress_Maximum_Progress' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable, CallFunc_Get_BP_event_system_Event_system) == 0x000070, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable::CallFunc_Get_BP_event_system_Event_system' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable, CallFunc_IsValid_ReturnValue) == 0x000079, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable, K2Node_CustomEvent_PlayerID) == 0x00007C, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable::K2Node_CustomEvent_PlayerID' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable, K2Node_CustomEvent_Damage) == 0x000080, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable::K2Node_CustomEvent_Damage' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable, K2Node_CustomEvent_DamageType) == 0x000084, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable::K2Node_CustomEvent_DamageType' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable, K2Node_CustomEvent_DamagingItem) == 0x000088, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable::K2Node_CustomEvent_DamagingItem' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable, CallFunc_ClassIsChildOf_ReturnValue) == 0x000090, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000091, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable, CallFunc_BooleanOR_ReturnValue) == 0x000092, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable, CallFunc_Add_IntInt_ReturnValue) == 0x000094, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable, CallFunc_Get_Maximum_Progress_Maximum_Progress_1) == 0x000098, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable::CallFunc_Get_Maximum_Progress_Maximum_Progress_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable, CallFunc_GetEventSystem_ReturnValue_1) == 0x0000A0, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable::CallFunc_GetEventSystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable, CallFunc_Min_ReturnValue) == 0x0000A8, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable, K2Node_DynamicCast_AsBPI_Event_System_1) == 0x0000B0, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable::K2Node_DynamicCast_AsBPI_Event_System_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable, K2Node_DynamicCast_bSuccess_2) == 0x0000C0, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable, CallFunc_Get_BP_event_system_Event_system_1) == 0x0000C8, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable::CallFunc_Get_BP_event_system_Event_system_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable, Temp_bool_Variable_2) == 0x0000D0, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable, CallFunc_IsValid_ReturnValue_1) == 0x0000D1, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable, K2Node_Select_Default_2) == 0x0000D4, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable, K2Node_CreateDelegate_OutputDelegate) == 0x0000D8, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable, CallFunc_Get_Maximum_Progress_Maximum_Progress_2) == 0x0000E8, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable::CallFunc_Get_Maximum_Progress_Maximum_Progress_2' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable, CallFunc_GetTimeSeconds_ReturnValue) == 0x0000EC, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000F0, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000F4, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000104, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000105, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable, CallFunc_Add_IntInt_ReturnValue_1) == 0x000108, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable.BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C.PlayerDealtDamageEvent
// 0x0018 (0x0018 - 0x0000)
struct BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_PlayerDealtDamageEvent final
{
public:
	int32                                         PlayerId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDamageType                                   DamageType;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 DamagingItem_0;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_PlayerDealtDamageEvent) == 0x000008, "Wrong alignment on BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_PlayerDealtDamageEvent");
static_assert(sizeof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_PlayerDealtDamageEvent) == 0x000018, "Wrong size on BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_PlayerDealtDamageEvent");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_PlayerDealtDamageEvent, PlayerId) == 0x000000, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_PlayerDealtDamageEvent::PlayerId' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_PlayerDealtDamageEvent, Damage) == 0x000004, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_PlayerDealtDamageEvent::Damage' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_PlayerDealtDamageEvent, DamageType) == 0x000008, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_PlayerDealtDamageEvent::DamageType' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_PlayerDealtDamageEvent, DamagingItem_0) == 0x000010, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_PlayerDealtDamageEvent::DamagingItem_0' has a wrong offset!");

// Function BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable.BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C.Get Maximum Progress
// 0x0004 (0x0004 - 0x0000)
struct BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_Get_Maximum_Progress final
{
public:
	int32                                         Maximum_Progress;                                  // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_Get_Maximum_Progress) == 0x000004, "Wrong alignment on BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_Get_Maximum_Progress");
static_assert(sizeof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_Get_Maximum_Progress) == 0x000004, "Wrong size on BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_Get_Maximum_Progress");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_Get_Maximum_Progress, Maximum_Progress) == 0x000000, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_Get_Maximum_Progress::Maximum_Progress' has a wrong offset!");

// Function BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable.BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C.Get Condition Text
// 0x0180 (0x0180 - 0x0000)
struct BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_Get_Condition_Text final
{
public:
	class FText                                   Condition_Text;                                    // 0x0000(0x0018)(Parm, OutParm)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AItem*                                  CallFunc_GetClassDefaultObject_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetItemName_ReturnValue;                  // 0x0028(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0040(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0080(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Get_Condition_Text_Condition_Text;        // 0x00C0(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00D8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00E8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0100(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0140(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Get_Condition_Text_Condition_Text_1;      // 0x0150(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0168(0x0018)()
};
static_assert(alignof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_Get_Condition_Text) == 0x000008, "Wrong alignment on BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_Get_Condition_Text");
static_assert(sizeof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_Get_Condition_Text) == 0x000180, "Wrong size on BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_Get_Condition_Text");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_Get_Condition_Text, Condition_Text) == 0x000000, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_Get_Condition_Text::Condition_Text' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_Get_Condition_Text, CallFunc_IsValidClass_ReturnValue) == 0x000018, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_Get_Condition_Text::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_Get_Condition_Text, CallFunc_GetClassDefaultObject_ReturnValue) == 0x000020, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_Get_Condition_Text::CallFunc_GetClassDefaultObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_Get_Condition_Text, CallFunc_GetItemName_ReturnValue) == 0x000028, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_Get_Condition_Text::CallFunc_GetItemName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_Get_Condition_Text, K2Node_MakeStruct_FormatArgumentData) == 0x000040, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_Get_Condition_Text::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_Get_Condition_Text, K2Node_MakeStruct_FormatArgumentData_1) == 0x000080, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_Get_Condition_Text::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_Get_Condition_Text, CallFunc_Get_Condition_Text_Condition_Text) == 0x0000C0, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_Get_Condition_Text::CallFunc_Get_Condition_Text_Condition_Text' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_Get_Condition_Text, K2Node_MakeArray_Array) == 0x0000D8, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_Get_Condition_Text::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_Get_Condition_Text, CallFunc_Format_ReturnValue) == 0x0000E8, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_Get_Condition_Text::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_Get_Condition_Text, K2Node_MakeStruct_FormatArgumentData_2) == 0x000100, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_Get_Condition_Text::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_Get_Condition_Text, K2Node_MakeArray_Array_1) == 0x000140, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_Get_Condition_Text::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_Get_Condition_Text, CallFunc_Get_Condition_Text_Condition_Text_1) == 0x000150, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_Get_Condition_Text::CallFunc_Get_Condition_Text_Condition_Text_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_Get_Condition_Text, CallFunc_Format_ReturnValue_1) == 0x000168, "Member 'BP_ChallengeCondition_Gunfight_MultiHitUsingConsumable_C_Get_Condition_Text::CallFunc_Format_ReturnValue_1' has a wrong offset!");

}

