#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: bp_ProSplineActor

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "S_SmartSpline_Segment_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass bp_ProSplineActor.bp_ProSplineActor_C
// 0x00D0 (0x02F0 - 0x0220)
class Abp_ProSplineActor_C final : public AActor
{
public:
	class UBillboardComponent*                    Billboard;                                         // 0x0220(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       Spline;                                            // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            SplineMesh;                                        // 0x0230(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            SplineMeshEndCap;                                  // 0x0238(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumberOfSplinePoints;                              // 0x0240(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SegmentLength;                                     // 0x0244(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_SmartSpline_Segment>         SegmentsArray;                                     // 0x0248(0x0010)(Edit, BlueprintVisible)
	float                                         StartDistance;                                     // 0x0258(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EndDistance;                                       // 0x025C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Spline_MeshStartCap;                               // 0x0260(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineMeshComponent*                   CurrentSplineMeshComponent;                        // 0x0268(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SplineLenght;                                      // 0x0270(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentPintIndex;                                  // 0x0274(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CurrentPointLocation;                              // 0x0278(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CurrentPointTangent;                               // 0x0284(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NextPointLocation;                                 // 0x0290(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NextPointTangent;                                  // 0x029C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FirstPointLocation;                                // 0x02A8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               FirstPointTangent;                                 // 0x02B4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                LastPointLocation;                                 // 0x02C0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               LastPointTangent;                                  // 0x02CC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UStaticMesh*                            ExtraPointMesh;                                    // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SegmentOffset;                                     // 0x02E0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableCollision;                                   // 0x02EC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	ECollisionEnabled                             CollisionType;                                     // 0x02ED(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"bp_ProSplineActor_C">();
	}
	static class Abp_ProSplineActor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<Abp_ProSplineActor_C>();
	}
};
static_assert(alignof(Abp_ProSplineActor_C) == 0x000008, "Wrong alignment on Abp_ProSplineActor_C");
static_assert(sizeof(Abp_ProSplineActor_C) == 0x0002F0, "Wrong size on Abp_ProSplineActor_C");
static_assert(offsetof(Abp_ProSplineActor_C, Billboard) == 0x000220, "Member 'Abp_ProSplineActor_C::Billboard' has a wrong offset!");
static_assert(offsetof(Abp_ProSplineActor_C, Spline) == 0x000228, "Member 'Abp_ProSplineActor_C::Spline' has a wrong offset!");
static_assert(offsetof(Abp_ProSplineActor_C, SplineMesh) == 0x000230, "Member 'Abp_ProSplineActor_C::SplineMesh' has a wrong offset!");
static_assert(offsetof(Abp_ProSplineActor_C, SplineMeshEndCap) == 0x000238, "Member 'Abp_ProSplineActor_C::SplineMeshEndCap' has a wrong offset!");
static_assert(offsetof(Abp_ProSplineActor_C, NumberOfSplinePoints) == 0x000240, "Member 'Abp_ProSplineActor_C::NumberOfSplinePoints' has a wrong offset!");
static_assert(offsetof(Abp_ProSplineActor_C, SegmentLength) == 0x000244, "Member 'Abp_ProSplineActor_C::SegmentLength' has a wrong offset!");
static_assert(offsetof(Abp_ProSplineActor_C, SegmentsArray) == 0x000248, "Member 'Abp_ProSplineActor_C::SegmentsArray' has a wrong offset!");
static_assert(offsetof(Abp_ProSplineActor_C, StartDistance) == 0x000258, "Member 'Abp_ProSplineActor_C::StartDistance' has a wrong offset!");
static_assert(offsetof(Abp_ProSplineActor_C, EndDistance) == 0x00025C, "Member 'Abp_ProSplineActor_C::EndDistance' has a wrong offset!");
static_assert(offsetof(Abp_ProSplineActor_C, Spline_MeshStartCap) == 0x000260, "Member 'Abp_ProSplineActor_C::Spline_MeshStartCap' has a wrong offset!");
static_assert(offsetof(Abp_ProSplineActor_C, CurrentSplineMeshComponent) == 0x000268, "Member 'Abp_ProSplineActor_C::CurrentSplineMeshComponent' has a wrong offset!");
static_assert(offsetof(Abp_ProSplineActor_C, SplineLenght) == 0x000270, "Member 'Abp_ProSplineActor_C::SplineLenght' has a wrong offset!");
static_assert(offsetof(Abp_ProSplineActor_C, CurrentPintIndex) == 0x000274, "Member 'Abp_ProSplineActor_C::CurrentPintIndex' has a wrong offset!");
static_assert(offsetof(Abp_ProSplineActor_C, CurrentPointLocation) == 0x000278, "Member 'Abp_ProSplineActor_C::CurrentPointLocation' has a wrong offset!");
static_assert(offsetof(Abp_ProSplineActor_C, CurrentPointTangent) == 0x000284, "Member 'Abp_ProSplineActor_C::CurrentPointTangent' has a wrong offset!");
static_assert(offsetof(Abp_ProSplineActor_C, NextPointLocation) == 0x000290, "Member 'Abp_ProSplineActor_C::NextPointLocation' has a wrong offset!");
static_assert(offsetof(Abp_ProSplineActor_C, NextPointTangent) == 0x00029C, "Member 'Abp_ProSplineActor_C::NextPointTangent' has a wrong offset!");
static_assert(offsetof(Abp_ProSplineActor_C, FirstPointLocation) == 0x0002A8, "Member 'Abp_ProSplineActor_C::FirstPointLocation' has a wrong offset!");
static_assert(offsetof(Abp_ProSplineActor_C, FirstPointTangent) == 0x0002B4, "Member 'Abp_ProSplineActor_C::FirstPointTangent' has a wrong offset!");
static_assert(offsetof(Abp_ProSplineActor_C, LastPointLocation) == 0x0002C0, "Member 'Abp_ProSplineActor_C::LastPointLocation' has a wrong offset!");
static_assert(offsetof(Abp_ProSplineActor_C, LastPointTangent) == 0x0002CC, "Member 'Abp_ProSplineActor_C::LastPointTangent' has a wrong offset!");
static_assert(offsetof(Abp_ProSplineActor_C, ExtraPointMesh) == 0x0002D8, "Member 'Abp_ProSplineActor_C::ExtraPointMesh' has a wrong offset!");
static_assert(offsetof(Abp_ProSplineActor_C, SegmentOffset) == 0x0002E0, "Member 'Abp_ProSplineActor_C::SegmentOffset' has a wrong offset!");
static_assert(offsetof(Abp_ProSplineActor_C, EnableCollision) == 0x0002EC, "Member 'Abp_ProSplineActor_C::EnableCollision' has a wrong offset!");
static_assert(offsetof(Abp_ProSplineActor_C, CollisionType) == 0x0002ED, "Member 'Abp_ProSplineActor_C::CollisionType' has a wrong offset!");

}

