#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VegetationAffector_Player

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FlameUI_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "PhysicsCore_structs.hpp"


namespace SDK::Params
{

// Function BP_VegetationAffector_Player.BP_VegetationAffector_Player_C.ExecuteUbergraph_BP_VegetationAffector_Player
// 0x0028 (0x0028 - 0x0000)
struct BP_VegetationAffector_Player_C_ExecuteUbergraph_BP_VegetationAffector_Player final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_wildcard_Old_Check_Value_Variable;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_wildcard_Temporary_Old_Value_Variable;        // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFlamePlatform                                CallFunc_GetCurrentPlatform_ReturnValue;           // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F[0x1];                                        // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<bool>                                  K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VegetationAffector_Player_C_ExecuteUbergraph_BP_VegetationAffector_Player) == 0x000008, "Wrong alignment on BP_VegetationAffector_Player_C_ExecuteUbergraph_BP_VegetationAffector_Player");
static_assert(sizeof(BP_VegetationAffector_Player_C_ExecuteUbergraph_BP_VegetationAffector_Player) == 0x000028, "Wrong size on BP_VegetationAffector_Player_C_ExecuteUbergraph_BP_VegetationAffector_Player");
static_assert(offsetof(BP_VegetationAffector_Player_C_ExecuteUbergraph_BP_VegetationAffector_Player, EntryPoint) == 0x000000, "Member 'BP_VegetationAffector_Player_C_ExecuteUbergraph_BP_VegetationAffector_Player::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_ExecuteUbergraph_BP_VegetationAffector_Player, Temp_wildcard_Old_Check_Value_Variable) == 0x000004, "Member 'BP_VegetationAffector_Player_C_ExecuteUbergraph_BP_VegetationAffector_Player::Temp_wildcard_Old_Check_Value_Variable' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_ExecuteUbergraph_BP_VegetationAffector_Player, CallFunc_IsDedicatedServer_ReturnValue) == 0x000005, "Member 'BP_VegetationAffector_Player_C_ExecuteUbergraph_BP_VegetationAffector_Player::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_ExecuteUbergraph_BP_VegetationAffector_Player, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'BP_VegetationAffector_Player_C_ExecuteUbergraph_BP_VegetationAffector_Player::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_ExecuteUbergraph_BP_VegetationAffector_Player, Temp_wildcard_Temporary_Old_Value_Variable) == 0x00000C, "Member 'BP_VegetationAffector_Player_C_ExecuteUbergraph_BP_VegetationAffector_Player::Temp_wildcard_Temporary_Old_Value_Variable' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_ExecuteUbergraph_BP_VegetationAffector_Player, CallFunc_GetCurrentPlatform_ReturnValue) == 0x00000D, "Member 'BP_VegetationAffector_Player_C_ExecuteUbergraph_BP_VegetationAffector_Player::CallFunc_GetCurrentPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_ExecuteUbergraph_BP_VegetationAffector_Player, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000E, "Member 'BP_VegetationAffector_Player_C_ExecuteUbergraph_BP_VegetationAffector_Player::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_ExecuteUbergraph_BP_VegetationAffector_Player, K2Node_MakeArray_Array) == 0x000010, "Member 'BP_VegetationAffector_Player_C_ExecuteUbergraph_BP_VegetationAffector_Player::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_ExecuteUbergraph_BP_VegetationAffector_Player, CallFunc_Array_Find_ReturnValue) == 0x000020, "Member 'BP_VegetationAffector_Player_C_ExecuteUbergraph_BP_VegetationAffector_Player::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_ExecuteUbergraph_BP_VegetationAffector_Player, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000024, "Member 'BP_VegetationAffector_Player_C_ExecuteUbergraph_BP_VegetationAffector_Player::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_ExecuteUbergraph_BP_VegetationAffector_Player, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x000025, "Member 'BP_VegetationAffector_Player_C_ExecuteUbergraph_BP_VegetationAffector_Player::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");

// Function BP_VegetationAffector_Player.BP_VegetationAffector_Player_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_VegetationAffector_Player_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VegetationAffector_Player_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_VegetationAffector_Player_C_ReceiveTick");
static_assert(sizeof(BP_VegetationAffector_Player_C_ReceiveTick) == 0x000004, "Wrong size on BP_VegetationAffector_Player_C_ReceiveTick");
static_assert(offsetof(BP_VegetationAffector_Player_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_VegetationAffector_Player_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_VegetationAffector_Player.BP_VegetationAffector_Player_C.CheckSurfaces
// 0x0070 (0x0070 - 0x0000)
struct BP_VegetationAffector_Player_C_CheckSurfaces final
{
public:
	class AActor*                                 Hit_actor;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   TagForGrassActivation;                             // 0x000C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AStaticMeshActor*                       K2Node_DynamicCast_AsStatic_Mesh_Actor;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACompositeSplineMeshActor*              K2Node_DynamicCast_AsComposite_Spline_Mesh_Actor;  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActorHasTag_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Contains_ReturnValue_1;                   // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B[0x5];                                       // 0x004B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ALandscapeProxy*                        K2Node_DynamicCast_AsLandscape_Proxy;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ALandscape*                             K2Node_DynamicCast_AsLandscape;                    // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VegetationAffector_Player_C_CheckSurfaces) == 0x000008, "Wrong alignment on BP_VegetationAffector_Player_C_CheckSurfaces");
static_assert(sizeof(BP_VegetationAffector_Player_C_CheckSurfaces) == 0x000070, "Wrong size on BP_VegetationAffector_Player_C_CheckSurfaces");
static_assert(offsetof(BP_VegetationAffector_Player_C_CheckSurfaces, Hit_actor) == 0x000000, "Member 'BP_VegetationAffector_Player_C_CheckSurfaces::Hit_actor' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_CheckSurfaces, Success) == 0x000008, "Member 'BP_VegetationAffector_Player_C_CheckSurfaces::Success' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_CheckSurfaces, TagForGrassActivation) == 0x00000C, "Member 'BP_VegetationAffector_Player_C_CheckSurfaces::TagForGrassActivation' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_CheckSurfaces, K2Node_DynamicCast_AsStatic_Mesh_Actor) == 0x000018, "Member 'BP_VegetationAffector_Player_C_CheckSurfaces::K2Node_DynamicCast_AsStatic_Mesh_Actor' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_CheckSurfaces, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_VegetationAffector_Player_C_CheckSurfaces::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_CheckSurfaces, K2Node_DynamicCast_AsComposite_Spline_Mesh_Actor) == 0x000028, "Member 'BP_VegetationAffector_Player_C_CheckSurfaces::K2Node_DynamicCast_AsComposite_Spline_Mesh_Actor' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_CheckSurfaces, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_VegetationAffector_Player_C_CheckSurfaces::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_CheckSurfaces, CallFunc_GetObjectName_ReturnValue) == 0x000038, "Member 'BP_VegetationAffector_Player_C_CheckSurfaces::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_CheckSurfaces, CallFunc_ActorHasTag_ReturnValue) == 0x000048, "Member 'BP_VegetationAffector_Player_C_CheckSurfaces::CallFunc_ActorHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_CheckSurfaces, CallFunc_Contains_ReturnValue) == 0x000049, "Member 'BP_VegetationAffector_Player_C_CheckSurfaces::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_CheckSurfaces, CallFunc_Contains_ReturnValue_1) == 0x00004A, "Member 'BP_VegetationAffector_Player_C_CheckSurfaces::CallFunc_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_CheckSurfaces, K2Node_DynamicCast_AsLandscape_Proxy) == 0x000050, "Member 'BP_VegetationAffector_Player_C_CheckSurfaces::K2Node_DynamicCast_AsLandscape_Proxy' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_CheckSurfaces, K2Node_DynamicCast_bSuccess_2) == 0x000058, "Member 'BP_VegetationAffector_Player_C_CheckSurfaces::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_CheckSurfaces, CallFunc_BooleanOR_ReturnValue) == 0x000059, "Member 'BP_VegetationAffector_Player_C_CheckSurfaces::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_CheckSurfaces, K2Node_DynamicCast_AsLandscape) == 0x000060, "Member 'BP_VegetationAffector_Player_C_CheckSurfaces::K2Node_DynamicCast_AsLandscape' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_CheckSurfaces, K2Node_DynamicCast_bSuccess_3) == 0x000068, "Member 'BP_VegetationAffector_Player_C_CheckSurfaces::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_CheckSurfaces, CallFunc_BooleanOR_ReturnValue_1) == 0x000069, "Member 'BP_VegetationAffector_Player_C_CheckSurfaces::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function BP_VegetationAffector_Player.BP_VegetationAffector_Player_C.Simulate
// 0x0001 (0x0001 - 0x0000)
struct BP_VegetationAffector_Player_C_Simulate final
{
public:
	bool                                          CallFunc_IsInContactWithLand_Result;               // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VegetationAffector_Player_C_Simulate) == 0x000001, "Wrong alignment on BP_VegetationAffector_Player_C_Simulate");
static_assert(sizeof(BP_VegetationAffector_Player_C_Simulate) == 0x000001, "Wrong size on BP_VegetationAffector_Player_C_Simulate");
static_assert(offsetof(BP_VegetationAffector_Player_C_Simulate, CallFunc_IsInContactWithLand_Result) == 0x000000, "Member 'BP_VegetationAffector_Player_C_Simulate::CallFunc_IsInContactWithLand_Result' has a wrong offset!");

// Function BP_VegetationAffector_Player.BP_VegetationAffector_Player_C.InitMovementComponent
// 0x0038 (0x0038 - 0x0000)
struct BP_VegetationAffector_Player_C_InitMovementComponent final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPawnMovementComponent*                 CallFunc_GetMovementComponent_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            K2Node_DynamicCast_AsCharacter_Movement_Component; // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VegetationAffector_Player_C_InitMovementComponent) == 0x000008, "Wrong alignment on BP_VegetationAffector_Player_C_InitMovementComponent");
static_assert(sizeof(BP_VegetationAffector_Player_C_InitMovementComponent) == 0x000038, "Wrong size on BP_VegetationAffector_Player_C_InitMovementComponent");
static_assert(offsetof(BP_VegetationAffector_Player_C_InitMovementComponent, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'BP_VegetationAffector_Player_C_InitMovementComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_InitMovementComponent, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_VegetationAffector_Player_C_InitMovementComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_InitMovementComponent, K2Node_DynamicCast_AsCharacter) == 0x000010, "Member 'BP_VegetationAffector_Player_C_InitMovementComponent::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_InitMovementComponent, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_VegetationAffector_Player_C_InitMovementComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_InitMovementComponent, CallFunc_GetMovementComponent_ReturnValue) == 0x000020, "Member 'BP_VegetationAffector_Player_C_InitMovementComponent::CallFunc_GetMovementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_InitMovementComponent, K2Node_DynamicCast_AsCharacter_Movement_Component) == 0x000028, "Member 'BP_VegetationAffector_Player_C_InitMovementComponent::K2Node_DynamicCast_AsCharacter_Movement_Component' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_InitMovementComponent, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_VegetationAffector_Player_C_InitMovementComponent::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_VegetationAffector_Player.BP_VegetationAffector_Player_C.IsInContactWithLand
// 0x0290 (0x0290 - 0x0000)
struct BP_VegetationAffector_Player_C_IsInContactWithLand final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         HitDistance;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 HitActor;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsVegetationAffected;                              // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0xC];                                       // 0x0034(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X;                            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0088(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x00A0(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         CallFunc_ComponentOverlapActors_OutActors;         // 0x00B0(0x0010)(ReferenceParm)
	bool                                          CallFunc_ComponentOverlapActors_ReturnValue;       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckSurfaces_Success;                    // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C2[0x2];                                       // 0x00C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x00E0(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x016D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x016E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16F[0x1];                                      // 0x016F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0178(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0190(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              CallFunc_BreakHitResult_ShapeSurfaceType;          // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C1[0x3];                                      // 0x01C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01C4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0204(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0205(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_206[0x2];                                      // 0x0206(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0210(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x021C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0228(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0234(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0250(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              CallFunc_BreakHitResult_ShapeSurfaceType_1;        // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_259[0x3];                                      // 0x0259(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x025C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x0270(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x027C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VegetationAffector_Player_C_IsInContactWithLand) == 0x000010, "Wrong alignment on BP_VegetationAffector_Player_C_IsInContactWithLand");
static_assert(sizeof(BP_VegetationAffector_Player_C_IsInContactWithLand) == 0x000290, "Wrong size on BP_VegetationAffector_Player_C_IsInContactWithLand");
static_assert(offsetof(BP_VegetationAffector_Player_C_IsInContactWithLand, Result) == 0x000000, "Member 'BP_VegetationAffector_Player_C_IsInContactWithLand::Result' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_IsInContactWithLand, HitDistance) == 0x000004, "Member 'BP_VegetationAffector_Player_C_IsInContactWithLand::HitDistance' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_IsInContactWithLand, HitActor) == 0x000008, "Member 'BP_VegetationAffector_Player_C_IsInContactWithLand::HitActor' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_IsInContactWithLand, IsVegetationAffected) == 0x000010, "Member 'BP_VegetationAffector_Player_C_IsInContactWithLand::IsVegetationAffected' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_IsInContactWithLand, K2Node_MakeArray_Array) == 0x000018, "Member 'BP_VegetationAffector_Player_C_IsInContactWithLand::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_IsInContactWithLand, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000028, "Member 'BP_VegetationAffector_Player_C_IsInContactWithLand::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_IsInContactWithLand, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000040, "Member 'BP_VegetationAffector_Player_C_IsInContactWithLand::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_IsInContactWithLand, CallFunc_BreakVector_X) == 0x000070, "Member 'BP_VegetationAffector_Player_C_IsInContactWithLand::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_IsInContactWithLand, CallFunc_BreakVector_Y) == 0x000074, "Member 'BP_VegetationAffector_Player_C_IsInContactWithLand::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_IsInContactWithLand, CallFunc_BreakVector_Z) == 0x000078, "Member 'BP_VegetationAffector_Player_C_IsInContactWithLand::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_IsInContactWithLand, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x00007C, "Member 'BP_VegetationAffector_Player_C_IsInContactWithLand::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_IsInContactWithLand, Temp_object_Variable) == 0x000088, "Member 'BP_VegetationAffector_Player_C_IsInContactWithLand::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_IsInContactWithLand, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000098, "Member 'BP_VegetationAffector_Player_C_IsInContactWithLand::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_IsInContactWithLand, Temp_object_Variable_1) == 0x0000A0, "Member 'BP_VegetationAffector_Player_C_IsInContactWithLand::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_IsInContactWithLand, CallFunc_ComponentOverlapActors_OutActors) == 0x0000B0, "Member 'BP_VegetationAffector_Player_C_IsInContactWithLand::CallFunc_ComponentOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_IsInContactWithLand, CallFunc_ComponentOverlapActors_ReturnValue) == 0x0000C0, "Member 'BP_VegetationAffector_Player_C_IsInContactWithLand::CallFunc_ComponentOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_IsInContactWithLand, CallFunc_CheckSurfaces_Success) == 0x0000C1, "Member 'BP_VegetationAffector_Player_C_IsInContactWithLand::CallFunc_CheckSurfaces_Success' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_IsInContactWithLand, CallFunc_MakeVector_ReturnValue) == 0x0000C4, "Member 'BP_VegetationAffector_Player_C_IsInContactWithLand::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_IsInContactWithLand, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000D0, "Member 'BP_VegetationAffector_Player_C_IsInContactWithLand::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_IsInContactWithLand, CallFunc_IsValid_ReturnValue) == 0x0000DC, "Member 'BP_VegetationAffector_Player_C_IsInContactWithLand::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_IsInContactWithLand, CallFunc_LineTraceSingle_OutHit) == 0x0000E0, "Member 'BP_VegetationAffector_Player_C_IsInContactWithLand::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_IsInContactWithLand, CallFunc_LineTraceSingle_ReturnValue) == 0x00016C, "Member 'BP_VegetationAffector_Player_C_IsInContactWithLand::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_IsInContactWithLand, CallFunc_BreakHitResult_bBlockingHit) == 0x00016D, "Member 'BP_VegetationAffector_Player_C_IsInContactWithLand::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_IsInContactWithLand, CallFunc_BreakHitResult_bInitialOverlap) == 0x00016E, "Member 'BP_VegetationAffector_Player_C_IsInContactWithLand::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_IsInContactWithLand, CallFunc_BreakHitResult_Time) == 0x000170, "Member 'BP_VegetationAffector_Player_C_IsInContactWithLand::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_IsInContactWithLand, CallFunc_BreakHitResult_Distance) == 0x000174, "Member 'BP_VegetationAffector_Player_C_IsInContactWithLand::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_IsInContactWithLand, CallFunc_BreakHitResult_Location) == 0x000178, "Member 'BP_VegetationAffector_Player_C_IsInContactWithLand::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_IsInContactWithLand, CallFunc_BreakHitResult_ImpactPoint) == 0x000184, "Member 'BP_VegetationAffector_Player_C_IsInContactWithLand::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_IsInContactWithLand, CallFunc_BreakHitResult_Normal) == 0x000190, "Member 'BP_VegetationAffector_Player_C_IsInContactWithLand::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_IsInContactWithLand, CallFunc_BreakHitResult_ImpactNormal) == 0x00019C, "Member 'BP_VegetationAffector_Player_C_IsInContactWithLand::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_IsInContactWithLand, CallFunc_BreakHitResult_PhysMat) == 0x0001A8, "Member 'BP_VegetationAffector_Player_C_IsInContactWithLand::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_IsInContactWithLand, CallFunc_BreakHitResult_HitActor) == 0x0001B0, "Member 'BP_VegetationAffector_Player_C_IsInContactWithLand::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_IsInContactWithLand, CallFunc_BreakHitResult_HitComponent) == 0x0001B8, "Member 'BP_VegetationAffector_Player_C_IsInContactWithLand::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_IsInContactWithLand, CallFunc_BreakHitResult_ShapeSurfaceType) == 0x0001C0, "Member 'BP_VegetationAffector_Player_C_IsInContactWithLand::CallFunc_BreakHitResult_ShapeSurfaceType' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_IsInContactWithLand, CallFunc_BreakHitResult_HitBoneName) == 0x0001C4, "Member 'BP_VegetationAffector_Player_C_IsInContactWithLand::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_IsInContactWithLand, CallFunc_BreakHitResult_HitItem) == 0x0001CC, "Member 'BP_VegetationAffector_Player_C_IsInContactWithLand::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_IsInContactWithLand, CallFunc_BreakHitResult_ElementIndex) == 0x0001D0, "Member 'BP_VegetationAffector_Player_C_IsInContactWithLand::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_IsInContactWithLand, CallFunc_BreakHitResult_FaceIndex) == 0x0001D4, "Member 'BP_VegetationAffector_Player_C_IsInContactWithLand::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_IsInContactWithLand, CallFunc_BreakHitResult_TraceStart) == 0x0001D8, "Member 'BP_VegetationAffector_Player_C_IsInContactWithLand::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_IsInContactWithLand, CallFunc_BreakHitResult_TraceEnd) == 0x0001E4, "Member 'BP_VegetationAffector_Player_C_IsInContactWithLand::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_IsInContactWithLand, CallFunc_BreakVector_X_1) == 0x0001F0, "Member 'BP_VegetationAffector_Player_C_IsInContactWithLand::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_IsInContactWithLand, CallFunc_BreakVector_Y_1) == 0x0001F4, "Member 'BP_VegetationAffector_Player_C_IsInContactWithLand::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_IsInContactWithLand, CallFunc_BreakVector_Z_1) == 0x0001F8, "Member 'BP_VegetationAffector_Player_C_IsInContactWithLand::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_IsInContactWithLand, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0001FC, "Member 'BP_VegetationAffector_Player_C_IsInContactWithLand::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_IsInContactWithLand, CallFunc_Abs_ReturnValue) == 0x000200, "Member 'BP_VegetationAffector_Player_C_IsInContactWithLand::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_IsInContactWithLand, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000204, "Member 'BP_VegetationAffector_Player_C_IsInContactWithLand::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_IsInContactWithLand, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000205, "Member 'BP_VegetationAffector_Player_C_IsInContactWithLand::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_IsInContactWithLand, CallFunc_BreakHitResult_Time_1) == 0x000208, "Member 'BP_VegetationAffector_Player_C_IsInContactWithLand::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_IsInContactWithLand, CallFunc_BreakHitResult_Distance_1) == 0x00020C, "Member 'BP_VegetationAffector_Player_C_IsInContactWithLand::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_IsInContactWithLand, CallFunc_BreakHitResult_Location_1) == 0x000210, "Member 'BP_VegetationAffector_Player_C_IsInContactWithLand::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_IsInContactWithLand, CallFunc_BreakHitResult_ImpactPoint_1) == 0x00021C, "Member 'BP_VegetationAffector_Player_C_IsInContactWithLand::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_IsInContactWithLand, CallFunc_BreakHitResult_Normal_1) == 0x000228, "Member 'BP_VegetationAffector_Player_C_IsInContactWithLand::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_IsInContactWithLand, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000234, "Member 'BP_VegetationAffector_Player_C_IsInContactWithLand::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_IsInContactWithLand, CallFunc_BreakHitResult_PhysMat_1) == 0x000240, "Member 'BP_VegetationAffector_Player_C_IsInContactWithLand::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_IsInContactWithLand, CallFunc_BreakHitResult_HitActor_1) == 0x000248, "Member 'BP_VegetationAffector_Player_C_IsInContactWithLand::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_IsInContactWithLand, CallFunc_BreakHitResult_HitComponent_1) == 0x000250, "Member 'BP_VegetationAffector_Player_C_IsInContactWithLand::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_IsInContactWithLand, CallFunc_BreakHitResult_ShapeSurfaceType_1) == 0x000258, "Member 'BP_VegetationAffector_Player_C_IsInContactWithLand::CallFunc_BreakHitResult_ShapeSurfaceType_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_IsInContactWithLand, CallFunc_BreakHitResult_HitBoneName_1) == 0x00025C, "Member 'BP_VegetationAffector_Player_C_IsInContactWithLand::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_IsInContactWithLand, CallFunc_BreakHitResult_HitItem_1) == 0x000264, "Member 'BP_VegetationAffector_Player_C_IsInContactWithLand::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_IsInContactWithLand, CallFunc_BreakHitResult_ElementIndex_1) == 0x000268, "Member 'BP_VegetationAffector_Player_C_IsInContactWithLand::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_IsInContactWithLand, CallFunc_BreakHitResult_FaceIndex_1) == 0x00026C, "Member 'BP_VegetationAffector_Player_C_IsInContactWithLand::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_IsInContactWithLand, CallFunc_BreakHitResult_TraceStart_1) == 0x000270, "Member 'BP_VegetationAffector_Player_C_IsInContactWithLand::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_IsInContactWithLand, CallFunc_BreakHitResult_TraceEnd_1) == 0x00027C, "Member 'BP_VegetationAffector_Player_C_IsInContactWithLand::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationAffector_Player_C_IsInContactWithLand, CallFunc_IsValid_ReturnValue_1) == 0x000288, "Member 'BP_VegetationAffector_Player_C_IsInContactWithLand::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

}

