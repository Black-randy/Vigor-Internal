#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ShelterUI

#include "Basic.hpp"

#include "FlameUI_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Flame_classes.hpp"
#include "EItemPreviewContext_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ShelterUI.BP_ShelterUI_C
// 0x01E0 (0x0400 - 0x0220)
class ABP_ShelterUI_C final : public AShelterUIBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_ItemTransform_ShelterUI_C*          BP_ItemTransform_ShelterUI;                        // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_Rarity_Upgrade;                                  // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Glow;                                              // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight2;                                        // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Box;                                               // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Center_Bar;                                        // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   UIBackgroundRoot;                                  // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   TopBar;                                            // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_FlareCone;                                      // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight1;                                        // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_ItemRarityHighlight;                            // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   PlaneUIBackground;                                 // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   WallFloor;                                         // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   WallFront;                                         // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   WallCeiling;                                       // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   WallBack;                                          // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   WallLeft;                                          // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   WallRight;                                         // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight;                                         // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       Camera;                                            // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Root;                                              // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         HighlightRotationLerp_Lerp_14310C184B5B4C7169CB2CB44EB6BED3; // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            HighlightRotationLerp__Direction_14310C184B5B4C7169CB2CB44EB6BED3; // 0x02D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D5[0x3];                                      // 0x02D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     HighlightRotationLerp;                             // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CosmeticsShopLerp_Lerp_205FFCDF4A7E40E438BC4AABD77A6A8A; // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            CosmeticsShopLerp__Direction_205FFCDF4A7E40E438BC4AABD77A6A8A; // 0x02E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E5[0x3];                                      // 0x02E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     CosmeticsShopLerp;                                 // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WardrobeLerp_Lerp_93CAF9F44E549C142D1D179F70991ADD; // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            WardrobeLerp__Direction_93CAF9F44E549C142D1D179F70991ADD; // 0x02F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F5[0x3];                                      // 0x02F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     WardrobeLerp;                                      // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ItemPreview_C*                      ItemPreview;                                       // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_308[0x8];                                      // 0x0308(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             DesiredCamera;                                     // 0x0310(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FTransform                             OldCamera;                                         // 0x0340(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               DesiredRotation;                                   // 0x0370(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               OldRotation;                                       // 0x037C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          RotateMannequine;                                  // 0x0388(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_389[0x3];                                      // 0x0389(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ActiveZoomIndex;                                   // 0x038C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FTransform>                     ZoomTransforms;                                    // 0x0390(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          ForceContextChange;                                // 0x03A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	EItemPreviewContext                           Context;                                           // 0x03A1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanItemRotate;                                     // 0x03A2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          CanItemAutorotate;                                 // 0x03A3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A4[0x4];                                      // 0x03A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 ActorPreview;                                      // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_WeaponSkinPreviewScene_C*           SkinPreviewActor;                                  // 0x03B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PremiumPackPreviewScene_Base_C*     PremiumPackPreviewActor;                           // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CraftingPlanPreviewScene_C*         CraftPlanPreviewActor;                             // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SeasonalChallengesReward_PreviewActor_C* SeasonalChallengesPreviewActor;                    // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BoosterTickets_PreviewScene_C*      BoosterTicketsPreviewActor;                        // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             FakeSoftPreviewLocalArray;                         // 0x03D8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class ABP_WeatherManager_C*                   WeatherManager;                                    // 0x03E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bNextCameraChangeToBeInstant;                      // 0x03F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F1[0x3];                                      // 0x03F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               TargetHighlightedOutfitRotation;                   // 0x03F4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_ShelterUI(int32 EntryPoint);
	void AnimateZoomTransformCosmeticsShopMouseWheel(int32 Increment1);
	void AnimateZoomTransformMouseWheel(int32 Increment1);
	void StartHighlightRotationFromStart();
	void ReverseHighlightedRotationLoop();
	void StopHighlighterRotationLoop(bool ResetRotation, float NewTime);
	void StartHighlightedRotationLoop(bool FromStart, const struct FRotator& StartRotation);
	void AnimatePremiumPackCamera(const struct FTransform& DesiredCameraTransform);
	void StopShelterUICameraLerp(bool bResetDesiredCameraTransform);
	void AnimateZoomTransformCosmeticsShop();
	void AnimateSkinPreviewCameraTransform(const struct FTransform& DesiredCameraTransform);
	void StopWardrobeLerp();
	void K2_OnEndViewTarget(class APlayerController* PC);
	void K2_OnBecomeViewTarget(class APlayerController* PC);
	void ShowFakeSoftItem(class UClass* Item_Behaviour, EItemPreviewContext Context_0, TSoftObjectPtr<class UStaticMesh> Static_Mesh, const TArray<TSoftObjectPtr<class UMaterialInterface>>& Override_Materials, int32 Rarity);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void RestartAutorotationTimer_0();
	void ClearAutorotationTimer(float Delay);
	void RestartAutorotationTimer(float DelayBeforeRestart);
	void OnAutorotationTimer();
	void ReceiveBeginPlay();
	void ResetPreview();
	void AnimateZoomTransform();
	void AnimateWardrobeTransform(class UClass* CustomizationClass, bool RotateMannequine_0);
	void OnLoaded_303A9E7341428F48F05BE78AC5514D72(class UObject* Loaded);
	void OnLoaded_303A9E7341428F48F05BE78AF16CE9A1(class UObject* Loaded);
	void OnLoaded_303A9E7341428F48F05BE78A14DD241C(class UObject* Loaded);
	void OnLoaded_303A9E7341428F48F05BE78AFFAEEB25(class UObject* Loaded);
	void HighlightRotationLerp__UpdateFunc();
	void HighlightRotationLerp__FinishedFunc();
	void CosmeticsShopLerp__UpdateFunc();
	void CosmeticsShopLerp__FinishedFunc();
	void WardrobeLerp__UpdateFunc();
	void WardrobeLerp__FinishedFunc();
	void ShowMe();
	void RotateMannequin(float Rotation);
	void ShowItem(class UClass* Item, EItemPreviewContext Context_0, bool bDoNotResetTransform, int32 Optional_PreviewParam);
	void RotateItem(float Roll, float Yaw);
	void HidePreview();
	void ResetItemRotation();
	void TransformItemPreview(class UClass* ItemClass, EItemPreviewContext Context_0, int32 Rarity, bool bDoNotResetTransform, int32 Optional_PreviewParam);
	bool CanClassRotate(class UClass* ItemClass);
	void CameraRotationPerScreen(const struct FTransform& Input, EItemPreviewContext Context_0, struct FTransform* Output);
	bool CanClassAutorotate(class UClass* ItemClass);
	void HandleRarity(int32 Rarity);
	void UpdateUIBackgroundSafezoneFit();
	void ShowFakeItem(class UClass* Item_Behaviour, EItemPreviewContext Context_0, class UStaticMesh* Static_Mesh, const TArray<class UMaterialInterface*>& Override_Materials, int32 Rarity);
	void ShowActor(class UClass* Actor_Class, EItemPreviewContext Context_0, int32 Rarity, const struct FS_ItemTransformSetting& Transform_Setting, bool Custom_Lighting, class AActor** Actor);
	void TransformActorPreview(EItemPreviewContext Context_0, int32 Rarity, const struct FS_ItemTransformSetting& Transform_Setting);
	void DestroyActorPreview();
	void GetRotationSettings(class UClass* ItemClass, bool* Can_Rotate, bool* Can_Autorotate, bool* Has_Custom_Interval, float* Manual_Rotation_Min, float* Manual_Rotation_Max);
	void SpawnSkinPreviewActor(bool bShouldDestroyBeforeSpawn, class ABP_WeaponSkinPreviewScene_C** SpawnPreviewActor);
	void ShowSkinPreviewActor(class UClass* Weapon, class UClass* WeaponSkin);
	void DestroySkinPreviewActor();
	void SetHiddenSkinPreviewActor(bool bHidden_0);
	void UpdateSkinPreviewActor(class UClass* Weapon, class UClass* WeaponSkinClass);
	void TransformSkinPreviewActor(EItemPreviewContext Context_0, int32 Rarity, const struct FS_ItemTransformSetting& Transform_Setting, const struct FVector& ZoomOffset);
	void HideSkinPreviewWeapon();
	void ResetPreviewCosmeticsShop();
	void RotateSkinPreviewWeapon(float Yaw);
	void SpawnPremiumPackPreviewActor(class UClass* PremiumPack, bool bShouldDestroyBeforeSpawn, class ABP_PremiumPackPreviewScene_Base_C** SpawnedPreviewActor);
	void DestroyPremiumPackPreviewActor();
	void TransformPremiumPackPreviewActor(EItemPreviewContext Context_0, int32 Rarity, const struct FS_ItemTransformSetting& Transform_Setting, const struct FVector& ZoomOffset);
	void Spawn_Challenges_Special_RewardActor(class ABP_SeasonalChallengesReward_PreviewActor_C** SpawnedActor);
	void DestroyChallengesSpecialRewardActor();
	void SpawnCraftingPlanPreviewActor(bool bShouldDestroyBeforeSpawn, class ABP_CraftingPlanPreviewScene_C** SpawnPreviewActor);
	void ShowCraftPlanPreviewActor(class UClass* Item_to_Craft, class UClass* CraftingPlan);
	void DestroyCraftPlanPreviewActor();
	void SetHiddenCraftPlanPreviewActor(bool bHidden_0);
	void Update_Craft_Plan_Preview_Actor(class UClass* ItemToCraft, class UClass* CraftPlan);
	void SpawnBoosterTicketsPreviewActor(bool bShouldDestroyBeforeSpawn, class ABP_BoosterTickets_PreviewScene_C** SpawnPreviewActor);
	void ShowBoosterTicketsPreviewActor(class UClass* TicketBundle, class UClass* BaseTicket);
	void DestroyBoosterTicketsPreviewActor();
	void SetHiddenBoosterTicketsPreviewActor(bool bHidden_0);
	void UpdateBoosterTicketsPreview_Actor(class UClass* TicketBundle, class UClass* BaseTicket);
	class AMannequin* GetItemPreviews();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ShelterUI_C">();
	}
	static class ABP_ShelterUI_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ShelterUI_C>();
	}
};
static_assert(alignof(ABP_ShelterUI_C) == 0x000010, "Wrong alignment on ABP_ShelterUI_C");
static_assert(sizeof(ABP_ShelterUI_C) == 0x000400, "Wrong size on ABP_ShelterUI_C");
static_assert(offsetof(ABP_ShelterUI_C, UberGraphFrame) == 0x000220, "Member 'ABP_ShelterUI_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ShelterUI_C, BP_ItemTransform_ShelterUI) == 0x000228, "Member 'ABP_ShelterUI_C::BP_ItemTransform_ShelterUI' has a wrong offset!");
static_assert(offsetof(ABP_ShelterUI_C, P_Rarity_Upgrade) == 0x000230, "Member 'ABP_ShelterUI_C::P_Rarity_Upgrade' has a wrong offset!");
static_assert(offsetof(ABP_ShelterUI_C, Glow) == 0x000238, "Member 'ABP_ShelterUI_C::Glow' has a wrong offset!");
static_assert(offsetof(ABP_ShelterUI_C, SpotLight2) == 0x000240, "Member 'ABP_ShelterUI_C::SpotLight2' has a wrong offset!");
static_assert(offsetof(ABP_ShelterUI_C, Box) == 0x000248, "Member 'ABP_ShelterUI_C::Box' has a wrong offset!");
static_assert(offsetof(ABP_ShelterUI_C, Center_Bar) == 0x000250, "Member 'ABP_ShelterUI_C::Center_Bar' has a wrong offset!");
static_assert(offsetof(ABP_ShelterUI_C, UIBackgroundRoot) == 0x000258, "Member 'ABP_ShelterUI_C::UIBackgroundRoot' has a wrong offset!");
static_assert(offsetof(ABP_ShelterUI_C, TopBar) == 0x000260, "Member 'ABP_ShelterUI_C::TopBar' has a wrong offset!");
static_assert(offsetof(ABP_ShelterUI_C, SM_FlareCone) == 0x000268, "Member 'ABP_ShelterUI_C::SM_FlareCone' has a wrong offset!");
static_assert(offsetof(ABP_ShelterUI_C, SpotLight1) == 0x000270, "Member 'ABP_ShelterUI_C::SpotLight1' has a wrong offset!");
static_assert(offsetof(ABP_ShelterUI_C, PS_ItemRarityHighlight) == 0x000278, "Member 'ABP_ShelterUI_C::PS_ItemRarityHighlight' has a wrong offset!");
static_assert(offsetof(ABP_ShelterUI_C, PlaneUIBackground) == 0x000280, "Member 'ABP_ShelterUI_C::PlaneUIBackground' has a wrong offset!");
static_assert(offsetof(ABP_ShelterUI_C, WallFloor) == 0x000288, "Member 'ABP_ShelterUI_C::WallFloor' has a wrong offset!");
static_assert(offsetof(ABP_ShelterUI_C, WallFront) == 0x000290, "Member 'ABP_ShelterUI_C::WallFront' has a wrong offset!");
static_assert(offsetof(ABP_ShelterUI_C, WallCeiling) == 0x000298, "Member 'ABP_ShelterUI_C::WallCeiling' has a wrong offset!");
static_assert(offsetof(ABP_ShelterUI_C, WallBack) == 0x0002A0, "Member 'ABP_ShelterUI_C::WallBack' has a wrong offset!");
static_assert(offsetof(ABP_ShelterUI_C, WallLeft) == 0x0002A8, "Member 'ABP_ShelterUI_C::WallLeft' has a wrong offset!");
static_assert(offsetof(ABP_ShelterUI_C, WallRight) == 0x0002B0, "Member 'ABP_ShelterUI_C::WallRight' has a wrong offset!");
static_assert(offsetof(ABP_ShelterUI_C, SpotLight) == 0x0002B8, "Member 'ABP_ShelterUI_C::SpotLight' has a wrong offset!");
static_assert(offsetof(ABP_ShelterUI_C, Camera) == 0x0002C0, "Member 'ABP_ShelterUI_C::Camera' has a wrong offset!");
static_assert(offsetof(ABP_ShelterUI_C, Root) == 0x0002C8, "Member 'ABP_ShelterUI_C::Root' has a wrong offset!");
static_assert(offsetof(ABP_ShelterUI_C, HighlightRotationLerp_Lerp_14310C184B5B4C7169CB2CB44EB6BED3) == 0x0002D0, "Member 'ABP_ShelterUI_C::HighlightRotationLerp_Lerp_14310C184B5B4C7169CB2CB44EB6BED3' has a wrong offset!");
static_assert(offsetof(ABP_ShelterUI_C, HighlightRotationLerp__Direction_14310C184B5B4C7169CB2CB44EB6BED3) == 0x0002D4, "Member 'ABP_ShelterUI_C::HighlightRotationLerp__Direction_14310C184B5B4C7169CB2CB44EB6BED3' has a wrong offset!");
static_assert(offsetof(ABP_ShelterUI_C, HighlightRotationLerp) == 0x0002D8, "Member 'ABP_ShelterUI_C::HighlightRotationLerp' has a wrong offset!");
static_assert(offsetof(ABP_ShelterUI_C, CosmeticsShopLerp_Lerp_205FFCDF4A7E40E438BC4AABD77A6A8A) == 0x0002E0, "Member 'ABP_ShelterUI_C::CosmeticsShopLerp_Lerp_205FFCDF4A7E40E438BC4AABD77A6A8A' has a wrong offset!");
static_assert(offsetof(ABP_ShelterUI_C, CosmeticsShopLerp__Direction_205FFCDF4A7E40E438BC4AABD77A6A8A) == 0x0002E4, "Member 'ABP_ShelterUI_C::CosmeticsShopLerp__Direction_205FFCDF4A7E40E438BC4AABD77A6A8A' has a wrong offset!");
static_assert(offsetof(ABP_ShelterUI_C, CosmeticsShopLerp) == 0x0002E8, "Member 'ABP_ShelterUI_C::CosmeticsShopLerp' has a wrong offset!");
static_assert(offsetof(ABP_ShelterUI_C, WardrobeLerp_Lerp_93CAF9F44E549C142D1D179F70991ADD) == 0x0002F0, "Member 'ABP_ShelterUI_C::WardrobeLerp_Lerp_93CAF9F44E549C142D1D179F70991ADD' has a wrong offset!");
static_assert(offsetof(ABP_ShelterUI_C, WardrobeLerp__Direction_93CAF9F44E549C142D1D179F70991ADD) == 0x0002F4, "Member 'ABP_ShelterUI_C::WardrobeLerp__Direction_93CAF9F44E549C142D1D179F70991ADD' has a wrong offset!");
static_assert(offsetof(ABP_ShelterUI_C, WardrobeLerp) == 0x0002F8, "Member 'ABP_ShelterUI_C::WardrobeLerp' has a wrong offset!");
static_assert(offsetof(ABP_ShelterUI_C, ItemPreview) == 0x000300, "Member 'ABP_ShelterUI_C::ItemPreview' has a wrong offset!");
static_assert(offsetof(ABP_ShelterUI_C, DesiredCamera) == 0x000310, "Member 'ABP_ShelterUI_C::DesiredCamera' has a wrong offset!");
static_assert(offsetof(ABP_ShelterUI_C, OldCamera) == 0x000340, "Member 'ABP_ShelterUI_C::OldCamera' has a wrong offset!");
static_assert(offsetof(ABP_ShelterUI_C, DesiredRotation) == 0x000370, "Member 'ABP_ShelterUI_C::DesiredRotation' has a wrong offset!");
static_assert(offsetof(ABP_ShelterUI_C, OldRotation) == 0x00037C, "Member 'ABP_ShelterUI_C::OldRotation' has a wrong offset!");
static_assert(offsetof(ABP_ShelterUI_C, RotateMannequine) == 0x000388, "Member 'ABP_ShelterUI_C::RotateMannequine' has a wrong offset!");
static_assert(offsetof(ABP_ShelterUI_C, ActiveZoomIndex) == 0x00038C, "Member 'ABP_ShelterUI_C::ActiveZoomIndex' has a wrong offset!");
static_assert(offsetof(ABP_ShelterUI_C, ZoomTransforms) == 0x000390, "Member 'ABP_ShelterUI_C::ZoomTransforms' has a wrong offset!");
static_assert(offsetof(ABP_ShelterUI_C, ForceContextChange) == 0x0003A0, "Member 'ABP_ShelterUI_C::ForceContextChange' has a wrong offset!");
static_assert(offsetof(ABP_ShelterUI_C, Context) == 0x0003A1, "Member 'ABP_ShelterUI_C::Context' has a wrong offset!");
static_assert(offsetof(ABP_ShelterUI_C, CanItemRotate) == 0x0003A2, "Member 'ABP_ShelterUI_C::CanItemRotate' has a wrong offset!");
static_assert(offsetof(ABP_ShelterUI_C, CanItemAutorotate) == 0x0003A3, "Member 'ABP_ShelterUI_C::CanItemAutorotate' has a wrong offset!");
static_assert(offsetof(ABP_ShelterUI_C, ActorPreview) == 0x0003A8, "Member 'ABP_ShelterUI_C::ActorPreview' has a wrong offset!");
static_assert(offsetof(ABP_ShelterUI_C, SkinPreviewActor) == 0x0003B0, "Member 'ABP_ShelterUI_C::SkinPreviewActor' has a wrong offset!");
static_assert(offsetof(ABP_ShelterUI_C, PremiumPackPreviewActor) == 0x0003B8, "Member 'ABP_ShelterUI_C::PremiumPackPreviewActor' has a wrong offset!");
static_assert(offsetof(ABP_ShelterUI_C, CraftPlanPreviewActor) == 0x0003C0, "Member 'ABP_ShelterUI_C::CraftPlanPreviewActor' has a wrong offset!");
static_assert(offsetof(ABP_ShelterUI_C, SeasonalChallengesPreviewActor) == 0x0003C8, "Member 'ABP_ShelterUI_C::SeasonalChallengesPreviewActor' has a wrong offset!");
static_assert(offsetof(ABP_ShelterUI_C, BoosterTicketsPreviewActor) == 0x0003D0, "Member 'ABP_ShelterUI_C::BoosterTicketsPreviewActor' has a wrong offset!");
static_assert(offsetof(ABP_ShelterUI_C, FakeSoftPreviewLocalArray) == 0x0003D8, "Member 'ABP_ShelterUI_C::FakeSoftPreviewLocalArray' has a wrong offset!");
static_assert(offsetof(ABP_ShelterUI_C, WeatherManager) == 0x0003E8, "Member 'ABP_ShelterUI_C::WeatherManager' has a wrong offset!");
static_assert(offsetof(ABP_ShelterUI_C, bNextCameraChangeToBeInstant) == 0x0003F0, "Member 'ABP_ShelterUI_C::bNextCameraChangeToBeInstant' has a wrong offset!");
static_assert(offsetof(ABP_ShelterUI_C, TargetHighlightedOutfitRotation) == 0x0003F4, "Member 'ABP_ShelterUI_C::TargetHighlightedOutfitRotation' has a wrong offset!");

}

