#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerState

#include "Basic.hpp"

#include "Flame_structs.hpp"
#include "F_TitleRank_structs.hpp"
#include "S_MatchPlayerInfo_structs.hpp"
#include "EBooster_structs.hpp"
#include "F_TitleList_structs.hpp"


namespace SDK::Params
{

// Function BP_PlayerState.BP_PlayerState_C.OwningCharacterReplicated__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerState_C_OwningCharacterReplicated__DelegateSignature final
{
public:
	class ABP_PlayerState_C*                      PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_C_OwningCharacterReplicated__DelegateSignature) == 0x000008, "Wrong alignment on BP_PlayerState_C_OwningCharacterReplicated__DelegateSignature");
static_assert(sizeof(BP_PlayerState_C_OwningCharacterReplicated__DelegateSignature) == 0x000008, "Wrong size on BP_PlayerState_C_OwningCharacterReplicated__DelegateSignature");
static_assert(offsetof(BP_PlayerState_C_OwningCharacterReplicated__DelegateSignature, PlayerState) == 0x000000, "Member 'BP_PlayerState_C_OwningCharacterReplicated__DelegateSignature::PlayerState' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.ExecuteUbergraph_BP_PlayerState
// 0x0520 (0x0520 - 0x0000)
struct BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E[0x2];                                       // 0x006E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UShelterCustomizationComponent* Wardrobe)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0070(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_2;        // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9E[0x2];                                       // 0x009E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Target_that_got_hit;            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_CustomEvent_Grenade_class_1;                // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEventSystem*                           CallFunc_GetEventSystem_ReturnValue;               // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_InvalidCloudRequest_ReturnValue;          // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EventSystem_C>    K2Node_DynamicCast_AsBPI_Event_System;             // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Amount_of_non_friendly_hits;    // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_CustomEvent_Grenade_class;                  // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_EventSystem_C*                      CallFunc_Get_BP_event_system_Event_system;         // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEventSystem*                           CallFunc_GetEventSystem_ReturnValue_1;             // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_EventSystem_C>    K2Node_DynamicCast_AsBPI_Event_System_1;           // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_EventSystem_C*                      CallFunc_Get_BP_event_system_Event_system_1;       // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable;                              // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USaveGame*                              Temp_object_Variable_1;                            // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_TrackedResource_SaveGame_C*         K2Node_DynamicCast_AsBP_Tracked_Resource_Save_Game; // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AStash*                                 CallFunc_GetStash_ReturnValue;                     // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UShelterCustomizationComponent*         CallFunc_GetWardrobe_ReturnValue;                  // 0x0138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_143[0x5];                                      // 0x0143(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UShelterCustomizationComponent*         K2Node_CustomEvent_Wardrobe;                       // 0x0148(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AStash*                                 K2Node_CustomEvent_Sender;                         // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStashComponent*                        K2Node_CustomEvent_Inventory;                      // 0x0158(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USaveGame*                              K2Node_CustomEvent_SaveGame;                       // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class USaveGame* SaveGame)>    K2Node_CreateDelegate_OutputDelegate_3;            // 0x0170(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_C*                 K2Node_DynamicCast_AsBP_Player_Controller;         // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1[0x3];                                      // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetUserCounter_ReturnValue;               // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USaveGame*                              K2Node_CustomEvent_SaveGame_1;                     // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetCloudRequestResultLevel_ReturnValue;   // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C2[0x6];                                      // 0x01C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCloudRequestResult                    K2Node_CustomEvent_RequestResult;                  // 0x01C8(0x0058)(ConstParm)
	class AHumanPlayerController*                 K2Node_CustomEvent_Player;                         // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCloudUserCounterValue                 K2Node_CustomEvent_CounterValue;                   // 0x0228(0x000C)(ConstParm, NoDestructor)
	int32                                         CallFunc_Break_Cloud_Title_ID_Title_ID;            // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Break_Cloud_Title_ID_Rank_Index;          // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x023C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23D[0x3];                                      // 0x023D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class USaveGame* SaveGame)>    K2Node_CreateDelegate_OutputDelegate_4;            // 0x0244(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable;                              // 0x0258(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x026C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26D[0x3];                                      // 0x026D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue_1;                 // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_2;                         // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0282(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_283[0x1];                                      // 0x0283(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_289[0x7];                                      // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_SlotName;                       // 0x0290(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_UserIndex;                      // 0x02A0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& SlotName, int32 UserIndex)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x02A4(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Array_Get_Item_3;                         // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Break_Cloud_Title_ID_Title_ID_1;          // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Break_Cloud_Title_ID_Rank_Index_1;        // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x02C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x02C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C6[0x2];                                      // 0x02C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x02C8(0x0010)(ReferenceParm)
	class FString                                 K2Node_CustomEvent_SlotName_1;                     // 0x02D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_UserIndex_1;                    // 0x02E8(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_4;                         // 0x02EC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F4[0x4];                                      // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FF_TitleList                           CallFunc_GetDataTableRowFromName_OutRow;           // 0x02F8(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_341[0x3];                                      // 0x0341(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_349[0x7];                                      // 0x0349(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_359[0x7];                                      // 0x0359(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_369[0x7];                                      // 0x0369(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Select_Default;                             // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_379[0x7];                                      // 0x0379(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D_1;                 // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0389(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38A[0x6];                                      // 0x038A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_UserId;                         // 0x0390(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& Userid)>  K2Node_CreateDelegate_OutputDelegate_6;            // 0x03A8(0x0010)(ZeroConstructor, NoDestructor)
	class ABP_PlayerController_C*                 K2Node_DynamicCast_AsBP_Player_Controller_1;       // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCloudUserIdSet_ReturnValue;             // 0x03C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C2[0x2];                                      // 0x03C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_7;            // 0x03C4(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(const class FString& SlotName, int32 UserIndex)> K2Node_CreateDelegate_OutputDelegate_8;            // 0x03D4(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x03E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x03EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x03F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x03F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F3[0x1];                                      // 0x03F3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_9;            // 0x03F4(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_10;           // 0x0404(0x0010)(ZeroConstructor, NoDestructor)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0414(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0419(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41A[0x6];                                      // 0x041A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames_1;       // 0x0420(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item_5;                         // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x0438(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43C[0x4];                                      // 0x043C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FF_TitleList                           CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0440(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_7;                // 0x0489(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_48A[0x2];                                      // 0x048A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x048C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x0490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_491[0x3];                                      // 0x0491(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Make_Cloud_Title_ID_Cloud_Title_ID;       // 0x0494(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_499[0x3];                                      // 0x0499(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_3;                               // 0x049C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FCloudRequestResult& RequestResult, class AHumanPlayerController* Player, struct FCloudUserCounterValue& CounterValue)> K2Node_CreateDelegate_OutputDelegate_11;           // 0x04A0(0x0010)(ZeroConstructor, NoDestructor)
	TArray<int32>                                 K2Node_CustomEvent_OwnedBoosters;                  // 0x04B0(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x04C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C4[0x4];                                      // 0x04C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_CustomEvent_ShelterSlot;                    // 0x04C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerController*                 K2Node_CustomEvent_HumanPlayerController;          // 0x04D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AStash* Sender, class UStashComponent* Inventory)> K2Node_CreateDelegate_OutputDelegate_12;           // 0x04D8(0x0010)(ZeroConstructor, NoDestructor)
	class UBP_TrackedResource_SaveGame_C*         CallFunc_CreateSaveGameObject_ReturnValue;         // 0x04E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetUserControllerId_ReturnValue;          // 0x04F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetUserControllerId_ReturnValue_1;        // 0x04F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFlameGameInstance*                     CallFunc_GetFlameGameInstance_ReturnValue;         // 0x04F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFlameGameInstance*                     CallFunc_GetFlameGameInstance_ReturnValue_1;       // 0x0500(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFlameGameSave*                         CallFunc_SaveGameToSlotByPlatform_ReturnValue;     // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFlameGameLoad*                         CallFunc_LoadGameFromSlotByPlatform_ReturnValue;   // 0x0510(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0518(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0519(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState) == 0x000008, "Wrong alignment on BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState");
static_assert(sizeof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState) == 0x000520, "Wrong size on BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, EntryPoint) == 0x000000, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_IsServer_ReturnValue) == 0x000004, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, Temp_bool_True_if_break_was_hit_Variable) == 0x000018, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_CreateDelegate_OutputDelegate_1) == 0x000028, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_IsDedicatedServer_ReturnValue) == 0x000038, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, Temp_int_Array_Index_Variable_1) == 0x00003C, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, Temp_int_Loop_Counter_Variable_1) == 0x000040, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_Add_IntInt_ReturnValue_1) == 0x000044, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, Temp_int_Array_Index_Variable_2) == 0x000048, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, Temp_int_Loop_Counter_Variable_2) == 0x00004C, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_Add_IntInt_ReturnValue_2) == 0x000050, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, Temp_bool_True_if_break_was_hit_Variable_1) == 0x000054, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, Temp_int_Array_Index_Variable_3) == 0x000058, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, Temp_int_Loop_Counter_Variable_3) == 0x00005C, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, Temp_int_Loop_Counter_Variable_4) == 0x000060, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_Add_IntInt_ReturnValue_3) == 0x000064, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_Add_IntInt_ReturnValue_4) == 0x000068, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, Temp_bool_Variable) == 0x00006C, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, Temp_bool_Variable_1) == 0x00006D, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_CreateDelegate_OutputDelegate_2) == 0x000070, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, Temp_int_Array_Index_Variable_4) == 0x000080, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, Temp_int_Loop_Counter_Variable_5) == 0x000084, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_Add_IntInt_ReturnValue_5) == 0x000088, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, Temp_bool_True_if_break_was_hit_Variable_2) == 0x00008C, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::Temp_bool_True_if_break_was_hit_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, Temp_int_Array_Index_Variable_5) == 0x000090, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_Array_Get_Item) == 0x000094, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_Less_IntInt_ReturnValue) == 0x00009C, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_Less_IntInt_ReturnValue_1) == 0x00009D, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_CustomEvent_Target_that_got_hit) == 0x0000A0, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_CustomEvent_Target_that_got_hit' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_CustomEvent_Grenade_class_1) == 0x0000A8, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_CustomEvent_Grenade_class_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_GetEventSystem_ReturnValue) == 0x0000B0, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_GetEventSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_InvalidCloudRequest_ReturnValue) == 0x0000B8, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_InvalidCloudRequest_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_DynamicCast_AsBPI_Event_System) == 0x0000C0, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_DynamicCast_AsBPI_Event_System' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_DynamicCast_bSuccess) == 0x0000D0, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_CustomEvent_Amount_of_non_friendly_hits) == 0x0000D4, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_CustomEvent_Amount_of_non_friendly_hits' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_CustomEvent_Grenade_class) == 0x0000D8, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_CustomEvent_Grenade_class' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_Get_BP_event_system_Event_system) == 0x0000E0, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_Get_BP_event_system_Event_system' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_GetEventSystem_ReturnValue_1) == 0x0000E8, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_GetEventSystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_DynamicCast_AsBPI_Event_System_1) == 0x0000F0, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_DynamicCast_AsBPI_Event_System_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_DynamicCast_bSuccess_1) == 0x000100, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_Get_BP_event_system_Event_system_1) == 0x000108, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_Get_BP_event_system_Event_system_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, Temp_object_Variable) == 0x000110, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, Temp_object_Variable_1) == 0x000118, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_DynamicCast_AsBP_Tracked_Resource_Save_Game) == 0x000120, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_DynamicCast_AsBP_Tracked_Resource_Save_Game' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_DynamicCast_bSuccess_2) == 0x000128, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_GetStash_ReturnValue) == 0x000130, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_GetStash_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_GetWardrobe_ReturnValue) == 0x000138, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_GetWardrobe_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_IsValid_ReturnValue) == 0x000140, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_IsValid_ReturnValue_1) == 0x000141, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_IsValid_ReturnValue_2) == 0x000142, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_CustomEvent_Wardrobe) == 0x000148, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_CustomEvent_Wardrobe' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_CustomEvent_Sender) == 0x000150, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_CustomEvent_Sender' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_CustomEvent_Inventory) == 0x000158, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_CustomEvent_Inventory' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_CustomEvent_SaveGame) == 0x000160, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_CustomEvent_SaveGame' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_Array_Get_Item_1) == 0x000168, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_CreateDelegate_OutputDelegate_3) == 0x000170, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_Array_Length_ReturnValue_1) == 0x000180, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_GetOwner_ReturnValue) == 0x000188, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_Less_IntInt_ReturnValue_2) == 0x000190, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_DynamicCast_AsBP_Player_Controller) == 0x000198, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_DynamicCast_AsBP_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_DynamicCast_bSuccess_3) == 0x0001A0, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_CustomEvent_Loaded) == 0x0001A8, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_IsValid_ReturnValue_3) == 0x0001B0, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_GetUserCounter_ReturnValue) == 0x0001B4, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_GetUserCounter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_CustomEvent_SaveGame_1) == 0x0001B8, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_CustomEvent_SaveGame_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_SetCloudRequestResultLevel_ReturnValue) == 0x0001C0, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_SetCloudRequestResultLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0001C1, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_CustomEvent_RequestResult) == 0x0001C8, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_CustomEvent_RequestResult' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_CustomEvent_Player) == 0x000220, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_CustomEvent_Player' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_CustomEvent_CounterValue) == 0x000228, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_CustomEvent_CounterValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_Break_Cloud_Title_ID_Title_ID) == 0x000234, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_Break_Cloud_Title_ID_Title_ID' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_Break_Cloud_Title_ID_Rank_Index) == 0x000238, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_Break_Cloud_Title_ID_Rank_Index' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00023C, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, Temp_int_Variable) == 0x000240, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_CreateDelegate_OutputDelegate_4) == 0x000244, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_Array_Add_ReturnValue) == 0x000254, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, Temp_string_Variable) == 0x000258, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_Array_Find_ReturnValue) == 0x000268, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00026C, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_Array_Find_ReturnValue_1) == 0x000270, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_Array_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, Temp_int_Variable_1) == 0x000274, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_Array_Length_ReturnValue_2) == 0x000278, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_Array_Get_Item_2) == 0x00027C, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_Greater_IntInt_ReturnValue) == 0x000280, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_Less_IntInt_ReturnValue_3) == 0x000281, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_Not_PreBool_ReturnValue) == 0x000282, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_Array_Length_ReturnValue_3) == 0x000284, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_Less_IntInt_ReturnValue_4) == 0x000288, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_CustomEvent_SlotName) == 0x000290, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_CustomEvent_SlotName' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_CustomEvent_UserIndex) == 0x0002A0, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_CustomEvent_UserIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_CreateDelegate_OutputDelegate_5) == 0x0002A4, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_Array_Get_Item_3) == 0x0002B4, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_Array_Length_ReturnValue_4) == 0x0002B8, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_Break_Cloud_Title_ID_Title_ID_1) == 0x0002BC, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_Break_Cloud_Title_ID_Title_ID_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_Break_Cloud_Title_ID_Rank_Index_1) == 0x0002C0, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_Break_Cloud_Title_ID_Rank_Index_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_Less_IntInt_ReturnValue_5) == 0x0002C4, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0002C5, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_GetDataTableRowNames_OutRowNames) == 0x0002C8, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_CustomEvent_SlotName_1) == 0x0002D8, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_CustomEvent_SlotName_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_CustomEvent_UserIndex_1) == 0x0002E8, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_CustomEvent_UserIndex_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_Array_Get_Item_4) == 0x0002EC, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_GetDataTableRowFromName_OutRow) == 0x0002F8, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000340, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_Array_Length_ReturnValue_5) == 0x000344, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_Less_IntInt_ReturnValue_6) == 0x000348, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000350, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000358, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_DynamicCast_AsTexture_2D) == 0x000360, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_DynamicCast_bSuccess_4) == 0x000368, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_Select_Default) == 0x000370, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_IsValid_ReturnValue_4) == 0x000378, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_DynamicCast_AsTexture_2D_1) == 0x000380, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_DynamicCast_AsTexture_2D_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_DynamicCast_bSuccess_5) == 0x000388, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000389, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_CustomEvent_UserId) == 0x000390, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_CustomEvent_UserId' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_GetOwner_ReturnValue_1) == 0x0003A0, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_CreateDelegate_OutputDelegate_6) == 0x0003A8, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_DynamicCast_AsBP_Player_Controller_1) == 0x0003B8, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_DynamicCast_AsBP_Player_Controller_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_DynamicCast_bSuccess_6) == 0x0003C0, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_IsCloudUserIdSet_ReturnValue) == 0x0003C1, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_IsCloudUserIdSet_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_CreateDelegate_OutputDelegate_7) == 0x0003C4, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_CreateDelegate_OutputDelegate_8) == 0x0003D4, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_Subtract_IntInt_ReturnValue) == 0x0003E4, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_Add_IntInt_ReturnValue_6) == 0x0003E8, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, Temp_int_Variable_2) == 0x0003EC, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0003F0, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_BooleanAND_ReturnValue) == 0x0003F1, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x0003F2, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_CreateDelegate_OutputDelegate_9) == 0x0003F4, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_CreateDelegate_OutputDelegate_10) == 0x000404, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_Event_DeltaSeconds) == 0x000414, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_IsValid_ReturnValue_5) == 0x000418, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_IsLocallyControlled_ReturnValue) == 0x000419, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_GetDataTableRowNames_OutRowNames_1) == 0x000420, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_GetDataTableRowNames_OutRowNames_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_Array_Get_Item_5) == 0x000430, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_Array_Length_ReturnValue_6) == 0x000438, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000440, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000488, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_Less_IntInt_ReturnValue_7) == 0x000489, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_Less_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_Array_LastIndex_ReturnValue) == 0x00048C, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x000490, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_Make_Cloud_Title_ID_Cloud_Title_ID) == 0x000494, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_Make_Cloud_Title_ID_Cloud_Title_ID' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000498, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, Temp_int_Variable_3) == 0x00049C, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_CreateDelegate_OutputDelegate_11) == 0x0004A0, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_CustomEvent_OwnedBoosters) == 0x0004B0, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_CustomEvent_OwnedBoosters' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_Array_Add_ReturnValue_1) == 0x0004C0, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_CustomEvent_ShelterSlot) == 0x0004C8, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_CustomEvent_ShelterSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_CustomEvent_HumanPlayerController) == 0x0004D0, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_CustomEvent_HumanPlayerController' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_CreateDelegate_OutputDelegate_12) == 0x0004D8, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_CreateSaveGameObject_ReturnValue) == 0x0004E8, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_CreateSaveGameObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_GetUserControllerId_ReturnValue) == 0x0004F0, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_GetUserControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_GetUserControllerId_ReturnValue_1) == 0x0004F4, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_GetUserControllerId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_GetFlameGameInstance_ReturnValue) == 0x0004F8, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_GetFlameGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_GetFlameGameInstance_ReturnValue_1) == 0x000500, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_GetFlameGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_SaveGameToSlotByPlatform_ReturnValue) == 0x000508, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_SaveGameToSlotByPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_LoadGameFromSlotByPlatform_ReturnValue) == 0x000510, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_LoadGameFromSlotByPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_IsValid_ReturnValue_6) == 0x000518, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_IsValid_ReturnValue_7) == 0x000519, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.StartTrackedResources
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerState_C_StartTrackedResources final
{
public:
	class UClass*                                 ShelterSlot;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerController*                 HumanPlayerController;                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_C_StartTrackedResources) == 0x000008, "Wrong alignment on BP_PlayerState_C_StartTrackedResources");
static_assert(sizeof(BP_PlayerState_C_StartTrackedResources) == 0x000010, "Wrong size on BP_PlayerState_C_StartTrackedResources");
static_assert(offsetof(BP_PlayerState_C_StartTrackedResources, ShelterSlot) == 0x000000, "Member 'BP_PlayerState_C_StartTrackedResources::ShelterSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_StartTrackedResources, HumanPlayerController) == 0x000008, "Member 'BP_PlayerState_C_StartTrackedResources::HumanPlayerController' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.PRIVATE_RepNotifyOwnedBoosters
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerState_C_PRIVATE_RepNotifyOwnedBoosters final
{
public:
	TArray<int32>                                 OwnedBoosters_0;                                   // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_PlayerState_C_PRIVATE_RepNotifyOwnedBoosters) == 0x000008, "Wrong alignment on BP_PlayerState_C_PRIVATE_RepNotifyOwnedBoosters");
static_assert(sizeof(BP_PlayerState_C_PRIVATE_RepNotifyOwnedBoosters) == 0x000010, "Wrong size on BP_PlayerState_C_PRIVATE_RepNotifyOwnedBoosters");
static_assert(offsetof(BP_PlayerState_C_PRIVATE_RepNotifyOwnedBoosters, OwnedBoosters_0) == 0x000000, "Member 'BP_PlayerState_C_PRIVATE_RepNotifyOwnedBoosters::OwnedBoosters_0' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerState_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_PlayerState_C_ReceiveTick");
static_assert(sizeof(BP_PlayerState_C_ReceiveTick) == 0x000004, "Wrong size on BP_PlayerState_C_ReceiveTick");
static_assert(offsetof(BP_PlayerState_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_PlayerState_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.Download Player Title Counters
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerState_C_Download_Player_Title_Counters final
{
public:
	class FString                                 Userid;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_C_Download_Player_Title_Counters) == 0x000008, "Wrong alignment on BP_PlayerState_C_Download_Player_Title_Counters");
static_assert(sizeof(BP_PlayerState_C_Download_Player_Title_Counters) == 0x000010, "Wrong size on BP_PlayerState_C_Download_Player_Title_Counters");
static_assert(offsetof(BP_PlayerState_C_Download_Player_Title_Counters, Userid) == 0x000000, "Member 'BP_PlayerState_C_Download_Player_Title_Counters::Userid' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.Player Title Received
// 0x0070 (0x0070 - 0x0000)
struct BP_PlayerState_C_Player_Title_Received final
{
public:
	struct FCloudRequestResult                    RequestResult;                                     // 0x0000(0x0058)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class AHumanPlayerController*                 Player;                                            // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCloudUserCounterValue                 CounterValue;                                      // 0x0060(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(BP_PlayerState_C_Player_Title_Received) == 0x000008, "Wrong alignment on BP_PlayerState_C_Player_Title_Received");
static_assert(sizeof(BP_PlayerState_C_Player_Title_Received) == 0x000070, "Wrong size on BP_PlayerState_C_Player_Title_Received");
static_assert(offsetof(BP_PlayerState_C_Player_Title_Received, RequestResult) == 0x000000, "Member 'BP_PlayerState_C_Player_Title_Received::RequestResult' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Player_Title_Received, Player) == 0x000058, "Member 'BP_PlayerState_C_Player_Title_Received::Player' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Player_Title_Received, CounterValue) == 0x000060, "Member 'BP_PlayerState_C_Player_Title_Received::CounterValue' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.On Cloud Stash Inventory Loaded
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerState_C_On_Cloud_Stash_Inventory_Loaded final
{
public:
	class AStash*                                 Sender;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStashComponent*                        Inventory;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_C_On_Cloud_Stash_Inventory_Loaded) == 0x000008, "Wrong alignment on BP_PlayerState_C_On_Cloud_Stash_Inventory_Loaded");
static_assert(sizeof(BP_PlayerState_C_On_Cloud_Stash_Inventory_Loaded) == 0x000010, "Wrong size on BP_PlayerState_C_On_Cloud_Stash_Inventory_Loaded");
static_assert(offsetof(BP_PlayerState_C_On_Cloud_Stash_Inventory_Loaded, Sender) == 0x000000, "Member 'BP_PlayerState_C_On_Cloud_Stash_Inventory_Loaded::Sender' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_On_Cloud_Stash_Inventory_Loaded, Inventory) == 0x000008, "Member 'BP_PlayerState_C_On_Cloud_Stash_Inventory_Loaded::Inventory' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.On Cloud Wardrobe Loaded
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerState_C_On_Cloud_Wardrobe_Loaded final
{
public:
	class UShelterCustomizationComponent*         Wardrobe;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_C_On_Cloud_Wardrobe_Loaded) == 0x000008, "Wrong alignment on BP_PlayerState_C_On_Cloud_Wardrobe_Loaded");
static_assert(sizeof(BP_PlayerState_C_On_Cloud_Wardrobe_Loaded) == 0x000008, "Wrong size on BP_PlayerState_C_On_Cloud_Wardrobe_Loaded");
static_assert(offsetof(BP_PlayerState_C_On_Cloud_Wardrobe_Loaded, Wardrobe) == 0x000000, "Member 'BP_PlayerState_C_On_Cloud_Wardrobe_Loaded::Wardrobe' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.Player triggered multi hit grenade component
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerState_C_Player_triggered_multi_hit_grenade_component final
{
public:
	int32                                         Amount_of_nonMinusfriendly_hits;                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Grenade_class;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_C_Player_triggered_multi_hit_grenade_component) == 0x000008, "Wrong alignment on BP_PlayerState_C_Player_triggered_multi_hit_grenade_component");
static_assert(sizeof(BP_PlayerState_C_Player_triggered_multi_hit_grenade_component) == 0x000010, "Wrong size on BP_PlayerState_C_Player_triggered_multi_hit_grenade_component");
static_assert(offsetof(BP_PlayerState_C_Player_triggered_multi_hit_grenade_component, Amount_of_nonMinusfriendly_hits) == 0x000000, "Member 'BP_PlayerState_C_Player_triggered_multi_hit_grenade_component::Amount_of_nonMinusfriendly_hits' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Player_triggered_multi_hit_grenade_component, Grenade_class) == 0x000008, "Member 'BP_PlayerState_C_Player_triggered_multi_hit_grenade_component::Grenade_class' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.Player triggered grenade hit component
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerState_C_Player_triggered_grenade_hit_component final
{
public:
	class AActor*                                 Target_that_got_hit;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Grenade_class;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_C_Player_triggered_grenade_hit_component) == 0x000008, "Wrong alignment on BP_PlayerState_C_Player_triggered_grenade_hit_component");
static_assert(sizeof(BP_PlayerState_C_Player_triggered_grenade_hit_component) == 0x000010, "Wrong size on BP_PlayerState_C_Player_triggered_grenade_hit_component");
static_assert(offsetof(BP_PlayerState_C_Player_triggered_grenade_hit_component, Target_that_got_hit) == 0x000000, "Member 'BP_PlayerState_C_Player_triggered_grenade_hit_component::Target_that_got_hit' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Player_triggered_grenade_hit_component, Grenade_class) == 0x000008, "Member 'BP_PlayerState_C_Player_triggered_grenade_hit_component::Grenade_class' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.OnLoadSucceed_DC924D44428C3959F043209199139366
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerState_C_OnLoadSucceed_DC924D44428C3959F043209199139366 final
{
public:
	class USaveGame*                              SaveGame;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_C_OnLoadSucceed_DC924D44428C3959F043209199139366) == 0x000008, "Wrong alignment on BP_PlayerState_C_OnLoadSucceed_DC924D44428C3959F043209199139366");
static_assert(sizeof(BP_PlayerState_C_OnLoadSucceed_DC924D44428C3959F043209199139366) == 0x000008, "Wrong size on BP_PlayerState_C_OnLoadSucceed_DC924D44428C3959F043209199139366");
static_assert(offsetof(BP_PlayerState_C_OnLoadSucceed_DC924D44428C3959F043209199139366, SaveGame) == 0x000000, "Member 'BP_PlayerState_C_OnLoadSucceed_DC924D44428C3959F043209199139366::SaveGame' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.OnLoadFailed_DC924D44428C3959F043209199139366
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerState_C_OnLoadFailed_DC924D44428C3959F043209199139366 final
{
public:
	class USaveGame*                              SaveGame;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_C_OnLoadFailed_DC924D44428C3959F043209199139366) == 0x000008, "Wrong alignment on BP_PlayerState_C_OnLoadFailed_DC924D44428C3959F043209199139366");
static_assert(sizeof(BP_PlayerState_C_OnLoadFailed_DC924D44428C3959F043209199139366) == 0x000008, "Wrong size on BP_PlayerState_C_OnLoadFailed_DC924D44428C3959F043209199139366");
static_assert(offsetof(BP_PlayerState_C_OnLoadFailed_DC924D44428C3959F043209199139366, SaveGame) == 0x000000, "Member 'BP_PlayerState_C_OnLoadFailed_DC924D44428C3959F043209199139366::SaveGame' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.OnSaveSucceed_87E82E1947ED2FD3ABC463BB9DC8F1F5
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerState_C_OnSaveSucceed_87E82E1947ED2FD3ABC463BB9DC8F1F5 final
{
public:
	class FString                                 SlotName;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         UserIndex;                                         // 0x0010(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_C_OnSaveSucceed_87E82E1947ED2FD3ABC463BB9DC8F1F5) == 0x000008, "Wrong alignment on BP_PlayerState_C_OnSaveSucceed_87E82E1947ED2FD3ABC463BB9DC8F1F5");
static_assert(sizeof(BP_PlayerState_C_OnSaveSucceed_87E82E1947ED2FD3ABC463BB9DC8F1F5) == 0x000018, "Wrong size on BP_PlayerState_C_OnSaveSucceed_87E82E1947ED2FD3ABC463BB9DC8F1F5");
static_assert(offsetof(BP_PlayerState_C_OnSaveSucceed_87E82E1947ED2FD3ABC463BB9DC8F1F5, SlotName) == 0x000000, "Member 'BP_PlayerState_C_OnSaveSucceed_87E82E1947ED2FD3ABC463BB9DC8F1F5::SlotName' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_OnSaveSucceed_87E82E1947ED2FD3ABC463BB9DC8F1F5, UserIndex) == 0x000010, "Member 'BP_PlayerState_C_OnSaveSucceed_87E82E1947ED2FD3ABC463BB9DC8F1F5::UserIndex' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.OnSaveFailed_87E82E1947ED2FD3ABC463BB9DC8F1F5
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerState_C_OnSaveFailed_87E82E1947ED2FD3ABC463BB9DC8F1F5 final
{
public:
	class FString                                 SlotName;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         UserIndex;                                         // 0x0010(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_C_OnSaveFailed_87E82E1947ED2FD3ABC463BB9DC8F1F5) == 0x000008, "Wrong alignment on BP_PlayerState_C_OnSaveFailed_87E82E1947ED2FD3ABC463BB9DC8F1F5");
static_assert(sizeof(BP_PlayerState_C_OnSaveFailed_87E82E1947ED2FD3ABC463BB9DC8F1F5) == 0x000018, "Wrong size on BP_PlayerState_C_OnSaveFailed_87E82E1947ED2FD3ABC463BB9DC8F1F5");
static_assert(offsetof(BP_PlayerState_C_OnSaveFailed_87E82E1947ED2FD3ABC463BB9DC8F1F5, SlotName) == 0x000000, "Member 'BP_PlayerState_C_OnSaveFailed_87E82E1947ED2FD3ABC463BB9DC8F1F5::SlotName' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_OnSaveFailed_87E82E1947ED2FD3ABC463BB9DC8F1F5, UserIndex) == 0x000010, "Member 'BP_PlayerState_C_OnSaveFailed_87E82E1947ED2FD3ABC463BB9DC8F1F5::UserIndex' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.OnLoaded_303A9E7341428F48F05BE78A0F43A6DF
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerState_C_OnLoaded_303A9E7341428F48F05BE78A0F43A6DF final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_C_OnLoaded_303A9E7341428F48F05BE78A0F43A6DF) == 0x000008, "Wrong alignment on BP_PlayerState_C_OnLoaded_303A9E7341428F48F05BE78A0F43A6DF");
static_assert(sizeof(BP_PlayerState_C_OnLoaded_303A9E7341428F48F05BE78A0F43A6DF) == 0x000008, "Wrong size on BP_PlayerState_C_OnLoaded_303A9E7341428F48F05BE78A0F43A6DF");
static_assert(offsetof(BP_PlayerState_C_OnLoaded_303A9E7341428F48F05BE78A0F43A6DF, Loaded) == 0x000000, "Member 'BP_PlayerState_C_OnLoaded_303A9E7341428F48F05BE78A0F43A6DF::Loaded' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.UserConstructionScript
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerState_C_UserConstructionScript final
{
public:
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_C_UserConstructionScript) == 0x000004, "Wrong alignment on BP_PlayerState_C_UserConstructionScript");
static_assert(sizeof(BP_PlayerState_C_UserConstructionScript) == 0x000004, "Wrong size on BP_PlayerState_C_UserConstructionScript");
static_assert(offsetof(BP_PlayerState_C_UserConstructionScript, CallFunc_MakeLiteralInt_ReturnValue) == 0x000000, "Member 'BP_PlayerState_C_UserConstructionScript::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.FindTeammates
// 0x0068 (0x0068 - 0x0000)
struct BP_PlayerState_C_FindTeammates final
{
public:
	TArray<class ABP_PlayerState_C*>              TeammatesPlayerStates;                             // 0x0000(0x0010)(Parm, OutParm)
	TArray<class ABP_PlayerState_C*>              RetVal;                                            // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInGroup_ReturnValue;                    // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_C*                      K2Node_DynamicCast_AsBP_Player_State;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInTheSameGroup_ReturnValue;             // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerState_C_FindTeammates) == 0x000008, "Wrong alignment on BP_PlayerState_C_FindTeammates");
static_assert(sizeof(BP_PlayerState_C_FindTeammates) == 0x000068, "Wrong size on BP_PlayerState_C_FindTeammates");
static_assert(offsetof(BP_PlayerState_C_FindTeammates, TeammatesPlayerStates) == 0x000000, "Member 'BP_PlayerState_C_FindTeammates::TeammatesPlayerStates' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_FindTeammates, RetVal) == 0x000010, "Member 'BP_PlayerState_C_FindTeammates::RetVal' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_FindTeammates, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_PlayerState_C_FindTeammates::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_FindTeammates, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_PlayerState_C_FindTeammates::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_FindTeammates, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_PlayerState_C_FindTeammates::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_FindTeammates, CallFunc_IsInGroup_ReturnValue) == 0x00002C, "Member 'BP_PlayerState_C_FindTeammates::CallFunc_IsInGroup_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_FindTeammates, CallFunc_GetGameState_ReturnValue) == 0x000030, "Member 'BP_PlayerState_C_FindTeammates::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_FindTeammates, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_PlayerState_C_FindTeammates::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_FindTeammates, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_PlayerState_C_FindTeammates::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_FindTeammates, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'BP_PlayerState_C_FindTeammates::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_FindTeammates, K2Node_DynamicCast_AsBP_Player_State) == 0x000050, "Member 'BP_PlayerState_C_FindTeammates::K2Node_DynamicCast_AsBP_Player_State' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_FindTeammates, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_PlayerState_C_FindTeammates::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_FindTeammates, CallFunc_Array_Add_ReturnValue) == 0x00005C, "Member 'BP_PlayerState_C_FindTeammates::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_FindTeammates, CallFunc_IsInTheSameGroup_ReturnValue) == 0x000060, "Member 'BP_PlayerState_C_FindTeammates::CallFunc_IsInTheSameGroup_ReturnValue' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.IsInGroup
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerState_C_IsInGroup final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue_1;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerState_C_IsInGroup) == 0x000001, "Wrong alignment on BP_PlayerState_C_IsInGroup");
static_assert(sizeof(BP_PlayerState_C_IsInGroup) == 0x000004, "Wrong size on BP_PlayerState_C_IsInGroup");
static_assert(offsetof(BP_PlayerState_C_IsInGroup, ReturnValue) == 0x000000, "Member 'BP_PlayerState_C_IsInGroup::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_IsInGroup, CallFunc_NotEqual_StrStr_ReturnValue) == 0x000001, "Member 'BP_PlayerState_C_IsInGroup::CallFunc_NotEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_IsInGroup, CallFunc_NotEqual_StrStr_ReturnValue_1) == 0x000002, "Member 'BP_PlayerState_C_IsInGroup::CallFunc_NotEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_IsInGroup, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'BP_PlayerState_C_IsInGroup::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.IsInTheSameGroup
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerState_C_IsInTheSameGroup final
{
public:
	class APlayerState*                           PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_C*                      K2Node_DynamicCast_AsBP_Player_State;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInGroup_ReturnValue;                    // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerState_C_IsInTheSameGroup) == 0x000008, "Wrong alignment on BP_PlayerState_C_IsInTheSameGroup");
static_assert(sizeof(BP_PlayerState_C_IsInTheSameGroup) == 0x000020, "Wrong size on BP_PlayerState_C_IsInTheSameGroup");
static_assert(offsetof(BP_PlayerState_C_IsInTheSameGroup, PlayerState) == 0x000000, "Member 'BP_PlayerState_C_IsInTheSameGroup::PlayerState' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_IsInTheSameGroup, ReturnValue) == 0x000008, "Member 'BP_PlayerState_C_IsInTheSameGroup::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_IsInTheSameGroup, K2Node_DynamicCast_AsBP_Player_State) == 0x000010, "Member 'BP_PlayerState_C_IsInTheSameGroup::K2Node_DynamicCast_AsBP_Player_State' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_IsInTheSameGroup, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_PlayerState_C_IsInTheSameGroup::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_IsInTheSameGroup, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000019, "Member 'BP_PlayerState_C_IsInTheSameGroup::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_IsInTheSameGroup, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x00001A, "Member 'BP_PlayerState_C_IsInTheSameGroup::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_IsInTheSameGroup, CallFunc_IsInGroup_ReturnValue) == 0x00001B, "Member 'BP_PlayerState_C_IsInTheSameGroup::CallFunc_IsInGroup_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_IsInTheSameGroup, CallFunc_BooleanAND_ReturnValue) == 0x00001C, "Member 'BP_PlayerState_C_IsInTheSameGroup::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.GetOrderInGroup
// 0x0070 (0x0070 - 0x0000)
struct BP_PlayerState_C_GetOrderInGroup final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_PlayerState_C*>              TeamStates;                                        // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_C*                      K2Node_DynamicCast_AsBP_Player_State;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInTheSameGroup_ReturnValue;             // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInGroup_ReturnValue;                    // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* ObjectA, class UObject* ObjectB, bool* Result)> K2Node_CreateDelegate_OutputDelegate;              // 0x005C(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_PlayerState_C_GetOrderInGroup) == 0x000008, "Wrong alignment on BP_PlayerState_C_GetOrderInGroup");
static_assert(sizeof(BP_PlayerState_C_GetOrderInGroup) == 0x000070, "Wrong size on BP_PlayerState_C_GetOrderInGroup");
static_assert(offsetof(BP_PlayerState_C_GetOrderInGroup, Index_0) == 0x000000, "Member 'BP_PlayerState_C_GetOrderInGroup::Index_0' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_GetOrderInGroup, TeamStates) == 0x000008, "Member 'BP_PlayerState_C_GetOrderInGroup::TeamStates' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_GetOrderInGroup, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_PlayerState_C_GetOrderInGroup::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_GetOrderInGroup, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_PlayerState_C_GetOrderInGroup::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_GetOrderInGroup, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_PlayerState_C_GetOrderInGroup::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_GetOrderInGroup, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000024, "Member 'BP_PlayerState_C_GetOrderInGroup::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_GetOrderInGroup, CallFunc_Array_Find_ReturnValue) == 0x000028, "Member 'BP_PlayerState_C_GetOrderInGroup::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_GetOrderInGroup, CallFunc_Array_AddUnique_ReturnValue) == 0x00002C, "Member 'BP_PlayerState_C_GetOrderInGroup::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_GetOrderInGroup, CallFunc_GetGameState_ReturnValue) == 0x000030, "Member 'BP_PlayerState_C_GetOrderInGroup::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_GetOrderInGroup, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_PlayerState_C_GetOrderInGroup::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_GetOrderInGroup, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_PlayerState_C_GetOrderInGroup::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_GetOrderInGroup, K2Node_DynamicCast_AsBP_Player_State) == 0x000048, "Member 'BP_PlayerState_C_GetOrderInGroup::K2Node_DynamicCast_AsBP_Player_State' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_GetOrderInGroup, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_PlayerState_C_GetOrderInGroup::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_GetOrderInGroup, CallFunc_Less_IntInt_ReturnValue) == 0x000051, "Member 'BP_PlayerState_C_GetOrderInGroup::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_GetOrderInGroup, CallFunc_Array_Add_ReturnValue) == 0x000054, "Member 'BP_PlayerState_C_GetOrderInGroup::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_GetOrderInGroup, CallFunc_IsInTheSameGroup_ReturnValue) == 0x000058, "Member 'BP_PlayerState_C_GetOrderInGroup::CallFunc_IsInTheSameGroup_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_GetOrderInGroup, CallFunc_IsInGroup_ReturnValue) == 0x000059, "Member 'BP_PlayerState_C_GetOrderInGroup::CallFunc_IsInGroup_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_GetOrderInGroup, K2Node_CreateDelegate_OutputDelegate) == 0x00005C, "Member 'BP_PlayerState_C_GetOrderInGroup::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.SortPlayerStates
// 0x0038 (0x0038 - 0x0000)
struct BP_PlayerState_C_SortPlayerStates final
{
public:
	class UObject*                                ObjectA;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                ObjectB;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           K2Node_DynamicCast_AsPlayer_State;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           K2Node_DynamicCast_AsPlayer_State_1;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerState_C_SortPlayerStates) == 0x000008, "Wrong alignment on BP_PlayerState_C_SortPlayerStates");
static_assert(sizeof(BP_PlayerState_C_SortPlayerStates) == 0x000038, "Wrong size on BP_PlayerState_C_SortPlayerStates");
static_assert(offsetof(BP_PlayerState_C_SortPlayerStates, ObjectA) == 0x000000, "Member 'BP_PlayerState_C_SortPlayerStates::ObjectA' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_SortPlayerStates, ObjectB) == 0x000008, "Member 'BP_PlayerState_C_SortPlayerStates::ObjectB' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_SortPlayerStates, Return) == 0x000010, "Member 'BP_PlayerState_C_SortPlayerStates::Return' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_SortPlayerStates, K2Node_DynamicCast_AsPlayer_State) == 0x000018, "Member 'BP_PlayerState_C_SortPlayerStates::K2Node_DynamicCast_AsPlayer_State' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_SortPlayerStates, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_PlayerState_C_SortPlayerStates::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_SortPlayerStates, K2Node_DynamicCast_AsPlayer_State_1) == 0x000028, "Member 'BP_PlayerState_C_SortPlayerStates::K2Node_DynamicCast_AsPlayer_State_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_SortPlayerStates, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_PlayerState_C_SortPlayerStates::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_SortPlayerStates, CallFunc_Less_IntInt_ReturnValue) == 0x000031, "Member 'BP_PlayerState_C_SortPlayerStates::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.UpdateTrackedResources
// 0x00D8 (0x00D8 - 0x0000)
struct BP_PlayerState_C_UpdateTrackedResources final
{
public:
	class AHumanPlayerController*                 Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AStash*                                 CallFunc_GetStash_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetTrackedResourcesStatus_IsValid;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetTrackedResourcesStatus_ShelterSlot;    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class UClass*, int32>                    CallFunc_GetTrackedResourcesStatus_NeededResources; // 0x0020(0x0050)()
	TMap<class UClass*, int32>                    CallFunc_GetTrackedResourcesStatus_OwnedResources; // 0x0070(0x0050)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMaxImprovementLevel_ReturnValue;       // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FShelterSlotInfo                       CallFunc_GetImprovementSlotState_ReturnValue;      // 0x00C8(0x000C)(NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerState_C_UpdateTrackedResources) == 0x000008, "Wrong alignment on BP_PlayerState_C_UpdateTrackedResources");
static_assert(sizeof(BP_PlayerState_C_UpdateTrackedResources) == 0x0000D8, "Wrong size on BP_PlayerState_C_UpdateTrackedResources");
static_assert(offsetof(BP_PlayerState_C_UpdateTrackedResources, Controller) == 0x000000, "Member 'BP_PlayerState_C_UpdateTrackedResources::Controller' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_UpdateTrackedResources, CallFunc_GetStash_ReturnValue) == 0x000008, "Member 'BP_PlayerState_C_UpdateTrackedResources::CallFunc_GetStash_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_UpdateTrackedResources, CallFunc_GetTrackedResourcesStatus_IsValid) == 0x000010, "Member 'BP_PlayerState_C_UpdateTrackedResources::CallFunc_GetTrackedResourcesStatus_IsValid' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_UpdateTrackedResources, CallFunc_GetTrackedResourcesStatus_ShelterSlot) == 0x000018, "Member 'BP_PlayerState_C_UpdateTrackedResources::CallFunc_GetTrackedResourcesStatus_ShelterSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_UpdateTrackedResources, CallFunc_GetTrackedResourcesStatus_NeededResources) == 0x000020, "Member 'BP_PlayerState_C_UpdateTrackedResources::CallFunc_GetTrackedResourcesStatus_NeededResources' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_UpdateTrackedResources, CallFunc_GetTrackedResourcesStatus_OwnedResources) == 0x000070, "Member 'BP_PlayerState_C_UpdateTrackedResources::CallFunc_GetTrackedResourcesStatus_OwnedResources' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_UpdateTrackedResources, CallFunc_IsValid_ReturnValue) == 0x0000C0, "Member 'BP_PlayerState_C_UpdateTrackedResources::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_UpdateTrackedResources, CallFunc_GetMaxImprovementLevel_ReturnValue) == 0x0000C4, "Member 'BP_PlayerState_C_UpdateTrackedResources::CallFunc_GetMaxImprovementLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_UpdateTrackedResources, CallFunc_GetImprovementSlotState_ReturnValue) == 0x0000C8, "Member 'BP_PlayerState_C_UpdateTrackedResources::CallFunc_GetImprovementSlotState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_UpdateTrackedResources, CallFunc_Less_IntInt_ReturnValue) == 0x0000D4, "Member 'BP_PlayerState_C_UpdateTrackedResources::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.StopTrackedResources
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerState_C_StopTrackedResources final
{
public:
	class UFlameGameInstance*                     CallFunc_GetFlameGameInstance_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetUserControllerId_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SafeSyncDeleteGameFromSlot_ReturnValue;   // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerState_C_StopTrackedResources) == 0x000008, "Wrong alignment on BP_PlayerState_C_StopTrackedResources");
static_assert(sizeof(BP_PlayerState_C_StopTrackedResources) == 0x000010, "Wrong size on BP_PlayerState_C_StopTrackedResources");
static_assert(offsetof(BP_PlayerState_C_StopTrackedResources, CallFunc_GetFlameGameInstance_ReturnValue) == 0x000000, "Member 'BP_PlayerState_C_StopTrackedResources::CallFunc_GetFlameGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_StopTrackedResources, CallFunc_GetUserControllerId_ReturnValue) == 0x000008, "Member 'BP_PlayerState_C_StopTrackedResources::CallFunc_GetUserControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_StopTrackedResources, CallFunc_SafeSyncDeleteGameFromSlot_ReturnValue) == 0x00000C, "Member 'BP_PlayerState_C_StopTrackedResources::CallFunc_SafeSyncDeleteGameFromSlot_ReturnValue' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.GetTrackedResourcesStatus
// 0x00B8 (0x00B8 - 0x0000)
struct BP_PlayerState_C_GetTrackedResourcesStatus final
{
public:
	bool                                          IsValid;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 ShelterSlot;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class UClass*, int32>                    NeededResources;                                   // 0x0010(0x0050)(Parm, OutParm)
	TMap<class UClass*, int32>                    OwnedResources;                                    // 0x0060(0x0050)(Parm, OutParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerState_C_GetTrackedResourcesStatus) == 0x000008, "Wrong alignment on BP_PlayerState_C_GetTrackedResourcesStatus");
static_assert(sizeof(BP_PlayerState_C_GetTrackedResourcesStatus) == 0x0000B8, "Wrong size on BP_PlayerState_C_GetTrackedResourcesStatus");
static_assert(offsetof(BP_PlayerState_C_GetTrackedResourcesStatus, IsValid) == 0x000000, "Member 'BP_PlayerState_C_GetTrackedResourcesStatus::IsValid' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_GetTrackedResourcesStatus, ShelterSlot) == 0x000008, "Member 'BP_PlayerState_C_GetTrackedResourcesStatus::ShelterSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_GetTrackedResourcesStatus, NeededResources) == 0x000010, "Member 'BP_PlayerState_C_GetTrackedResourcesStatus::NeededResources' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_GetTrackedResourcesStatus, OwnedResources) == 0x000060, "Member 'BP_PlayerState_C_GetTrackedResourcesStatus::OwnedResources' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_GetTrackedResourcesStatus, CallFunc_IsValid_ReturnValue) == 0x0000B0, "Member 'BP_PlayerState_C_GetTrackedResourcesStatus::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.OnRep_Title Slot Content
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerState_C_OnRep_Title_Slot_Content final
{
public:
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_C_OnRep_Title_Slot_Content) == 0x000004, "Wrong alignment on BP_PlayerState_C_OnRep_Title_Slot_Content");
static_assert(sizeof(BP_PlayerState_C_OnRep_Title_Slot_Content) == 0x000020, "Wrong size on BP_PlayerState_C_OnRep_Title_Slot_Content");
static_assert(offsetof(BP_PlayerState_C_OnRep_Title_Slot_Content, Temp_bool_True_if_break_was_hit_Variable) == 0x000000, "Member 'BP_PlayerState_C_OnRep_Title_Slot_Content::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_OnRep_Title_Slot_Content, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_PlayerState_C_OnRep_Title_Slot_Content::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_OnRep_Title_Slot_Content, CallFunc_Array_Get_Item) == 0x000008, "Member 'BP_PlayerState_C_OnRep_Title_Slot_Content::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_OnRep_Title_Slot_Content, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BP_PlayerState_C_OnRep_Title_Slot_Content::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_OnRep_Title_Slot_Content, CallFunc_Less_IntInt_ReturnValue) == 0x000010, "Member 'BP_PlayerState_C_OnRep_Title_Slot_Content::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_OnRep_Title_Slot_Content, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_PlayerState_C_OnRep_Title_Slot_Content::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_OnRep_Title_Slot_Content, CallFunc_Less_IntInt_ReturnValue_1) == 0x000018, "Member 'BP_PlayerState_C_OnRep_Title_Slot_Content::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_OnRep_Title_Slot_Content, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_PlayerState_C_OnRep_Title_Slot_Content::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.Are Titles Loaded
// 0x0003 (0x0003 - 0x0000)
struct BP_PlayerState_C_Are_Titles_Loaded final
{
public:
	bool                                          Titles_Loaded_0;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerState_C_Are_Titles_Loaded) == 0x000001, "Wrong alignment on BP_PlayerState_C_Are_Titles_Loaded");
static_assert(sizeof(BP_PlayerState_C_Are_Titles_Loaded) == 0x000003, "Wrong size on BP_PlayerState_C_Are_Titles_Loaded");
static_assert(offsetof(BP_PlayerState_C_Are_Titles_Loaded, Titles_Loaded_0) == 0x000000, "Member 'BP_PlayerState_C_Are_Titles_Loaded::Titles_Loaded_0' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Are_Titles_Loaded, CallFunc_IsDedicatedServer_ReturnValue) == 0x000001, "Member 'BP_PlayerState_C_Are_Titles_Loaded::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Are_Titles_Loaded, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'BP_PlayerState_C_Are_Titles_Loaded::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.Get Title Slots
// 0x00C0 (0x00C0 - 0x0000)
struct BP_PlayerState_C_Get_Title_Slots final
{
public:
	TMap<class FName, int32>                      Title_Slots;                                       // 0x0000(0x0050)(Parm, OutParm)
	TMap<class FName, int32>                      Content;                                           // 0x0050(0x0050)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerState_C_Get_Title_Slots) == 0x000008, "Wrong alignment on BP_PlayerState_C_Get_Title_Slots");
static_assert(sizeof(BP_PlayerState_C_Get_Title_Slots) == 0x0000C0, "Wrong size on BP_PlayerState_C_Get_Title_Slots");
static_assert(offsetof(BP_PlayerState_C_Get_Title_Slots, Title_Slots) == 0x000000, "Member 'BP_PlayerState_C_Get_Title_Slots::Title_Slots' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Title_Slots, Content) == 0x000050, "Member 'BP_PlayerState_C_Get_Title_Slots::Content' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Title_Slots, Temp_int_Array_Index_Variable) == 0x0000A0, "Member 'BP_PlayerState_C_Get_Title_Slots::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Title_Slots, Temp_int_Loop_Counter_Variable) == 0x0000A4, "Member 'BP_PlayerState_C_Get_Title_Slots::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Title_Slots, CallFunc_Add_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_PlayerState_C_Get_Title_Slots::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Title_Slots, CallFunc_Array_Get_Item) == 0x0000AC, "Member 'BP_PlayerState_C_Get_Title_Slots::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Title_Slots, CallFunc_Array_Get_Item_1) == 0x0000B0, "Member 'BP_PlayerState_C_Get_Title_Slots::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Title_Slots, CallFunc_Array_Length_ReturnValue) == 0x0000B8, "Member 'BP_PlayerState_C_Get_Title_Slots::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Title_Slots, CallFunc_Less_IntInt_ReturnValue) == 0x0000BC, "Member 'BP_PlayerState_C_Get_Title_Slots::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.Set Title to Slot
// 0x0050 (0x0050 - 0x0000)
struct BP_PlayerState_C_Set_Title_to_Slot final
{
public:
	class FName                                   Slot_Name;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Title_ID;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Rank_Index;                                        // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Slot_Index;                                        // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_InvalidCloudRequest_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Make_Cloud_Title_ID_Cloud_Title_ID;       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCloudUserCounterUpdate                K2Node_MakeStruct_CloudUserCounterUpdate;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_C*                 K2Node_DynamicCast_AsBP_Player_Controller;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EGameScenario                                 CallFunc_GetGameScenario_ReturnValue;              // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_UpdateUserCounter_ReturnValue;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_C_Set_Title_to_Slot) == 0x000008, "Wrong alignment on BP_PlayerState_C_Set_Title_to_Slot");
static_assert(sizeof(BP_PlayerState_C_Set_Title_to_Slot) == 0x000050, "Wrong size on BP_PlayerState_C_Set_Title_to_Slot");
static_assert(offsetof(BP_PlayerState_C_Set_Title_to_Slot, Slot_Name) == 0x000000, "Member 'BP_PlayerState_C_Set_Title_to_Slot::Slot_Name' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Set_Title_to_Slot, Title_ID) == 0x000008, "Member 'BP_PlayerState_C_Set_Title_to_Slot::Title_ID' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Set_Title_to_Slot, Rank_Index) == 0x00000C, "Member 'BP_PlayerState_C_Set_Title_to_Slot::Rank_Index' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Set_Title_to_Slot, Success) == 0x000010, "Member 'BP_PlayerState_C_Set_Title_to_Slot::Success' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Set_Title_to_Slot, Slot_Index) == 0x000014, "Member 'BP_PlayerState_C_Set_Title_to_Slot::Slot_Index' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Set_Title_to_Slot, CallFunc_IsServer_ReturnValue) == 0x000018, "Member 'BP_PlayerState_C_Set_Title_to_Slot::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Set_Title_to_Slot, CallFunc_InvalidCloudRequest_ReturnValue) == 0x00001C, "Member 'BP_PlayerState_C_Set_Title_to_Slot::CallFunc_InvalidCloudRequest_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Set_Title_to_Slot, CallFunc_Make_Cloud_Title_ID_Cloud_Title_ID) == 0x000020, "Member 'BP_PlayerState_C_Set_Title_to_Slot::CallFunc_Make_Cloud_Title_ID_Cloud_Title_ID' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Set_Title_to_Slot, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000024, "Member 'BP_PlayerState_C_Set_Title_to_Slot::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Set_Title_to_Slot, K2Node_MakeStruct_CloudUserCounterUpdate) == 0x000028, "Member 'BP_PlayerState_C_Set_Title_to_Slot::K2Node_MakeStruct_CloudUserCounterUpdate' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Set_Title_to_Slot, CallFunc_GetOwner_ReturnValue) == 0x000030, "Member 'BP_PlayerState_C_Set_Title_to_Slot::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Set_Title_to_Slot, K2Node_DynamicCast_AsBP_Player_Controller) == 0x000038, "Member 'BP_PlayerState_C_Set_Title_to_Slot::K2Node_DynamicCast_AsBP_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Set_Title_to_Slot, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_PlayerState_C_Set_Title_to_Slot::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Set_Title_to_Slot, CallFunc_GetGameScenario_ReturnValue) == 0x000041, "Member 'BP_PlayerState_C_Set_Title_to_Slot::CallFunc_GetGameScenario_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Set_Title_to_Slot, CallFunc_IsValid_ReturnValue) == 0x000042, "Member 'BP_PlayerState_C_Set_Title_to_Slot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Set_Title_to_Slot, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000043, "Member 'BP_PlayerState_C_Set_Title_to_Slot::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Set_Title_to_Slot, CallFunc_UpdateUserCounter_ReturnValue) == 0x000044, "Member 'BP_PlayerState_C_Set_Title_to_Slot::CallFunc_UpdateUserCounter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Set_Title_to_Slot, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000048, "Member 'BP_PlayerState_C_Set_Title_to_Slot::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Set_Title_to_Slot, CallFunc_Array_Find_ReturnValue) == 0x00004C, "Member 'BP_PlayerState_C_Set_Title_to_Slot::CallFunc_Array_Find_ReturnValue' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.Break Cloud Title ID
// 0x0014 (0x0014 - 0x0000)
struct BP_PlayerState_C_Break_Cloud_Title_ID final
{
public:
	int32                                         Cloud_Title_ID;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Title_ID;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Rank_Index;                                        // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_C_Break_Cloud_Title_ID) == 0x000004, "Wrong alignment on BP_PlayerState_C_Break_Cloud_Title_ID");
static_assert(sizeof(BP_PlayerState_C_Break_Cloud_Title_ID) == 0x000014, "Wrong size on BP_PlayerState_C_Break_Cloud_Title_ID");
static_assert(offsetof(BP_PlayerState_C_Break_Cloud_Title_ID, Cloud_Title_ID) == 0x000000, "Member 'BP_PlayerState_C_Break_Cloud_Title_ID::Cloud_Title_ID' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Break_Cloud_Title_ID, Title_ID) == 0x000004, "Member 'BP_PlayerState_C_Break_Cloud_Title_ID::Title_ID' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Break_Cloud_Title_ID, Rank_Index) == 0x000008, "Member 'BP_PlayerState_C_Break_Cloud_Title_ID::Rank_Index' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Break_Cloud_Title_ID, CallFunc_Divide_IntInt_ReturnValue) == 0x00000C, "Member 'BP_PlayerState_C_Break_Cloud_Title_ID::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Break_Cloud_Title_ID, CallFunc_Percent_IntInt_ReturnValue) == 0x000010, "Member 'BP_PlayerState_C_Break_Cloud_Title_ID::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.Make Cloud Title ID
// 0x0014 (0x0014 - 0x0000)
struct BP_PlayerState_C_Make_Cloud_Title_ID final
{
public:
	int32                                         Title_ID;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Rank_Index;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Cloud_Title_ID;                                    // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_C_Make_Cloud_Title_ID) == 0x000004, "Wrong alignment on BP_PlayerState_C_Make_Cloud_Title_ID");
static_assert(sizeof(BP_PlayerState_C_Make_Cloud_Title_ID) == 0x000014, "Wrong size on BP_PlayerState_C_Make_Cloud_Title_ID");
static_assert(offsetof(BP_PlayerState_C_Make_Cloud_Title_ID, Title_ID) == 0x000000, "Member 'BP_PlayerState_C_Make_Cloud_Title_ID::Title_ID' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Make_Cloud_Title_ID, Rank_Index) == 0x000004, "Member 'BP_PlayerState_C_Make_Cloud_Title_ID::Rank_Index' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Make_Cloud_Title_ID, Cloud_Title_ID) == 0x000008, "Member 'BP_PlayerState_C_Make_Cloud_Title_ID::Cloud_Title_ID' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Make_Cloud_Title_ID, CallFunc_Multiply_IntInt_ReturnValue) == 0x00000C, "Member 'BP_PlayerState_C_Make_Cloud_Title_ID::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Make_Cloud_Title_ID, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_PlayerState_C_Make_Cloud_Title_ID::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.Get Table Row Name from Title ID
// 0x0098 (0x0098 - 0x0000)
struct BP_PlayerState_C_Get_Table_Row_Name_from_Title_ID final
{
public:
	int32                                         Title_ID;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Row_Name;                                          // 0x0004(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Found_Row_Name;                                    // 0x000C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0028(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FF_TitleList                           CallFunc_GetDataTableRowFromName_OutRow;           // 0x0048(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerState_C_Get_Table_Row_Name_from_Title_ID) == 0x000008, "Wrong alignment on BP_PlayerState_C_Get_Table_Row_Name_from_Title_ID");
static_assert(sizeof(BP_PlayerState_C_Get_Table_Row_Name_from_Title_ID) == 0x000098, "Wrong size on BP_PlayerState_C_Get_Table_Row_Name_from_Title_ID");
static_assert(offsetof(BP_PlayerState_C_Get_Table_Row_Name_from_Title_ID, Title_ID) == 0x000000, "Member 'BP_PlayerState_C_Get_Table_Row_Name_from_Title_ID::Title_ID' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Table_Row_Name_from_Title_ID, Row_Name) == 0x000004, "Member 'BP_PlayerState_C_Get_Table_Row_Name_from_Title_ID::Row_Name' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Table_Row_Name_from_Title_ID, Found_Row_Name) == 0x00000C, "Member 'BP_PlayerState_C_Get_Table_Row_Name_from_Title_ID::Found_Row_Name' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Table_Row_Name_from_Title_ID, Temp_bool_True_if_break_was_hit_Variable) == 0x000014, "Member 'BP_PlayerState_C_Get_Table_Row_Name_from_Title_ID::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Table_Row_Name_from_Title_ID, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_PlayerState_C_Get_Table_Row_Name_from_Title_ID::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Table_Row_Name_from_Title_ID, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_PlayerState_C_Get_Table_Row_Name_from_Title_ID::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Table_Row_Name_from_Title_ID, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_PlayerState_C_Get_Table_Row_Name_from_Title_ID::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Table_Row_Name_from_Title_ID, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000028, "Member 'BP_PlayerState_C_Get_Table_Row_Name_from_Title_ID::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Table_Row_Name_from_Title_ID, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_PlayerState_C_Get_Table_Row_Name_from_Title_ID::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Table_Row_Name_from_Title_ID, CallFunc_Array_Get_Item) == 0x00003C, "Member 'BP_PlayerState_C_Get_Table_Row_Name_from_Title_ID::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Table_Row_Name_from_Title_ID, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'BP_PlayerState_C_Get_Table_Row_Name_from_Title_ID::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Table_Row_Name_from_Title_ID, CallFunc_GetDataTableRowFromName_OutRow) == 0x000048, "Member 'BP_PlayerState_C_Get_Table_Row_Name_from_Title_ID::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Table_Row_Name_from_Title_ID, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000090, "Member 'BP_PlayerState_C_Get_Table_Row_Name_from_Title_ID::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Table_Row_Name_from_Title_ID, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000091, "Member 'BP_PlayerState_C_Get_Table_Row_Name_from_Title_ID::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.Get Titles Status Log
// 0x0350 (0x0350 - 0x0000)
struct BP_PlayerState_C_Get_Titles_Status_Log final
{
public:
	class FString                                 Log;                                               // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         Rows;                                              // 0x0010(0x0010)(Edit, BlueprintVisible)
	TArray<class FString>                         Requests;                                          // 0x0020(0x0010)(Edit, BlueprintVisible)
	TArray<class FString>                         Content;                                           // 0x0030(0x0010)(Edit, BlueprintVisible)
	TArray<class FString>                         Names;                                             // 0x0040(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue_1;          // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_JoinStringArray_ReturnValue;              // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_JoinStringArray_ReturnValue_1;            // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_JoinStringArray_ReturnValue_2;            // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_125[0x3];                                      // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item_2;                         // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x3];                                      // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item_3;                         // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x3];                                      // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_4;                         // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x3];                                      // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_JoinStringArray_ReturnValue_3;            // 0x0198(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue_2;          // 0x01A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x01B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x01C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x01D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x01E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x01F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue_3;          // 0x0208(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0218(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0228(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue_4;          // 0x0238(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0248(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Are_Titles_Loaded_Titles_Loaded;          // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x0260(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue_5;          // 0x0270(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x0280(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x0290(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_10;             // 0x02A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_11;             // 0x02B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_12;             // 0x02C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_13;             // 0x02D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_14;             // 0x02E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_15;             // 0x02F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_16;             // 0x0300(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_17;             // 0x0310(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_18;             // 0x0320(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_19;             // 0x0330(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_20;             // 0x0340(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_C_Get_Titles_Status_Log) == 0x000008, "Wrong alignment on BP_PlayerState_C_Get_Titles_Status_Log");
static_assert(sizeof(BP_PlayerState_C_Get_Titles_Status_Log) == 0x000350, "Wrong size on BP_PlayerState_C_Get_Titles_Status_Log");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, Log) == 0x000000, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::Log' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, Rows) == 0x000010, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::Rows' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, Requests) == 0x000020, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::Requests' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, Content) == 0x000030, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::Content' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, Names) == 0x000040, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::Names' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, Temp_int_Array_Index_Variable) == 0x000058, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, Temp_int_Loop_Counter_Variable_1) == 0x00005C, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, CallFunc_Add_IntInt_ReturnValue_1) == 0x000060, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, Temp_int_Array_Index_Variable_1) == 0x000064, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, Temp_int_Loop_Counter_Variable_2) == 0x00006C, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, CallFunc_Add_IntInt_ReturnValue_2) == 0x000070, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, Temp_int_Array_Index_Variable_2) == 0x000074, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, Temp_bool_Variable) == 0x000078, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, CallFunc_Conv_BoolToString_ReturnValue) == 0x000080, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, Temp_int_Loop_Counter_Variable_3) == 0x000090, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, Temp_int_Loop_Counter_Variable_4) == 0x000094, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, CallFunc_Less_IntInt_ReturnValue) == 0x000098, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, CallFunc_Add_IntInt_ReturnValue_3) == 0x00009C, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, CallFunc_Add_IntInt_ReturnValue_4) == 0x0000A0, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, Temp_int_Array_Index_Variable_3) == 0x0000A4, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, Temp_int_Array_Index_Variable_4) == 0x0000A8, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, CallFunc_Array_Get_Item) == 0x0000AC, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000B0, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, CallFunc_Conv_BoolToString_ReturnValue_1) == 0x0000B8, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::CallFunc_Conv_BoolToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, CallFunc_Array_Get_Item_1) == 0x0000C8, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, CallFunc_Array_Length_ReturnValue_1) == 0x0000D0, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, CallFunc_Conv_NameToString_ReturnValue) == 0x0000D8, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000E8, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, CallFunc_JoinStringArray_ReturnValue) == 0x0000F0, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::CallFunc_JoinStringArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, CallFunc_JoinStringArray_ReturnValue_1) == 0x000100, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::CallFunc_JoinStringArray_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, CallFunc_JoinStringArray_ReturnValue_2) == 0x000110, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::CallFunc_JoinStringArray_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, CallFunc_Array_Add_ReturnValue) == 0x000120, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, Temp_bool_True_if_break_was_hit_Variable) == 0x000124, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, CallFunc_Array_Get_Item_2) == 0x000128, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, CallFunc_Conv_IntToString_ReturnValue) == 0x000130, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, CallFunc_Array_Add_ReturnValue_1) == 0x000140, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, CallFunc_Array_Length_ReturnValue_2) == 0x000144, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, CallFunc_Less_IntInt_ReturnValue_3) == 0x000148, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, CallFunc_Array_Get_Item_3) == 0x00014C, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, CallFunc_Array_Length_ReturnValue_3) == 0x000150, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000158, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, CallFunc_Less_IntInt_ReturnValue_4) == 0x000168, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, CallFunc_Array_Add_ReturnValue_2) == 0x00016C, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, CallFunc_Array_Get_Item_4) == 0x000170, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, CallFunc_Array_Length_ReturnValue_4) == 0x000178, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, CallFunc_Conv_NameToString_ReturnValue_1) == 0x000180, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, CallFunc_Less_IntInt_ReturnValue_5) == 0x000190, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, CallFunc_Array_Add_ReturnValue_3) == 0x000194, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, CallFunc_JoinStringArray_ReturnValue_3) == 0x000198, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::CallFunc_JoinStringArray_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, CallFunc_Conv_BoolToString_ReturnValue_2) == 0x0001A8, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::CallFunc_Conv_BoolToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, CallFunc_Concat_StrStr_ReturnValue) == 0x0001B8, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0001C8, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, CallFunc_Conv_IntToString_ReturnValue_2) == 0x0001D8, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0001E8, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0001F8, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, CallFunc_Conv_BoolToString_ReturnValue_3) == 0x000208, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::CallFunc_Conv_BoolToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000218, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000228, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, CallFunc_Conv_BoolToString_ReturnValue_4) == 0x000238, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::CallFunc_Conv_BoolToString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000248, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, CallFunc_Are_Titles_Loaded_Titles_Loaded) == 0x000258, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::CallFunc_Are_Titles_Loaded_Titles_Loaded' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, CallFunc_Concat_StrStr_ReturnValue_7) == 0x000260, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, CallFunc_Conv_BoolToString_ReturnValue_5) == 0x000270, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::CallFunc_Conv_BoolToString_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, CallFunc_Concat_StrStr_ReturnValue_8) == 0x000280, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, CallFunc_Concat_StrStr_ReturnValue_9) == 0x000290, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, CallFunc_Concat_StrStr_ReturnValue_10) == 0x0002A0, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::CallFunc_Concat_StrStr_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, CallFunc_Concat_StrStr_ReturnValue_11) == 0x0002B0, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::CallFunc_Concat_StrStr_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, CallFunc_Concat_StrStr_ReturnValue_12) == 0x0002C0, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::CallFunc_Concat_StrStr_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, CallFunc_Concat_StrStr_ReturnValue_13) == 0x0002D0, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::CallFunc_Concat_StrStr_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, CallFunc_Concat_StrStr_ReturnValue_14) == 0x0002E0, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::CallFunc_Concat_StrStr_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, CallFunc_Concat_StrStr_ReturnValue_15) == 0x0002F0, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::CallFunc_Concat_StrStr_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, CallFunc_Concat_StrStr_ReturnValue_16) == 0x000300, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::CallFunc_Concat_StrStr_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, CallFunc_Concat_StrStr_ReturnValue_17) == 0x000310, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::CallFunc_Concat_StrStr_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, CallFunc_Concat_StrStr_ReturnValue_18) == 0x000320, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::CallFunc_Concat_StrStr_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, CallFunc_Concat_StrStr_ReturnValue_19) == 0x000330, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::CallFunc_Concat_StrStr_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Titles_Status_Log, CallFunc_Concat_StrStr_ReturnValue_20) == 0x000340, "Member 'BP_PlayerState_C_Get_Titles_Status_Log::CallFunc_Concat_StrStr_ReturnValue_20' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.Get Rank Info of Titles in Slots
// 0x0258 (0x0258 - 0x0000)
struct BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots final
{
public:
	TArray<struct FF_TitleRank>                   Rank_Infos;                                        // 0x0000(0x0010)(Parm, OutParm)
	TArray<struct FF_TitleRank>                   Infos;                                             // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0040(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FF_TitleList                           CallFunc_GetDataTableRowFromName_OutRow;           // 0x0060(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AB[0x1];                                       // 0x00AB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Break_Cloud_Title_ID_Title_ID;            // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Break_Cloud_Title_ID_Rank_Index;          // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FF_TitleRank                           CallFunc_Array_Get_Item_2;                         // 0x00D0(0x00B8)(HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x3];                                      // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_194[0x4];                                      // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FF_TitleRank                           K2Node_SetFieldsInStruct_StructOut;                // 0x0198(0x00B8)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots) == 0x000008, "Wrong alignment on BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots");
static_assert(sizeof(BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots) == 0x000258, "Wrong size on BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots");
static_assert(offsetof(BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots, Rank_Infos) == 0x000000, "Member 'BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots::Rank_Infos' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots, Infos) == 0x000010, "Member 'BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots::Infos' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots, Temp_bool_True_if_break_was_hit_Variable) == 0x000028, "Member 'BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots, Temp_int_Array_Index_Variable_1) == 0x000030, "Member 'BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots, Temp_bool_Variable) == 0x000034, "Member 'BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots, Temp_int_Loop_Counter_Variable_1) == 0x000038, "Member 'BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000040, "Member 'BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots, CallFunc_GetDataTableRowFromName_OutRow) == 0x000060, "Member 'BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000A8, "Member 'BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots, CallFunc_Less_IntInt_ReturnValue) == 0x0000A9, "Member 'BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0000AA, "Member 'BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots, CallFunc_Array_LastIndex_ReturnValue) == 0x0000AC, "Member 'BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000B0, "Member 'BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots, CallFunc_Array_Length_ReturnValue_1) == 0x0000B4, "Member 'BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots, CallFunc_Array_Get_Item_1) == 0x0000B8, "Member 'BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000BC, "Member 'BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots, CallFunc_Break_Cloud_Title_ID_Title_ID) == 0x0000C0, "Member 'BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots::CallFunc_Break_Cloud_Title_ID_Title_ID' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots, CallFunc_Break_Cloud_Title_ID_Rank_Index) == 0x0000C4, "Member 'BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots::CallFunc_Break_Cloud_Title_ID_Rank_Index' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots, CallFunc_Min_ReturnValue) == 0x0000C8, "Member 'BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000CC, "Member 'BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots, CallFunc_Array_Get_Item_2) == 0x0000D0, "Member 'BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots, CallFunc_Greater_IntInt_ReturnValue) == 0x000188, "Member 'BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots, CallFunc_Divide_IntInt_ReturnValue) == 0x00018C, "Member 'BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots, K2Node_Select_Default) == 0x000190, "Member 'BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots, K2Node_SetFieldsInStruct_StructOut) == 0x000198, "Member 'BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots, CallFunc_Array_Add_ReturnValue) == 0x000250, "Member 'BP_PlayerState_C_Get_Rank_Info_of_Titles_in_Slots::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.Get Rank Info from Cloud Title ID
// 0x02C8 (0x02C8 - 0x0000)
struct BP_PlayerState_C_Get_Rank_Info_from_Cloud_Title_ID final
{
public:
	int32                                         Cloud_Title_ID;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Valid_Output;                                      // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FF_TitleRank                           Rank_Info;                                         // 0x0008(0x00B8)(Parm, OutParm, HasGetValueTypeHash)
	struct FF_TitleRank                           Info;                                              // 0x00C0(0x00B8)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Break_Cloud_Title_ID_Title_ID;            // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Break_Cloud_Title_ID_Rank_Index;          // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_185[0x3];                                      // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0198(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x01AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B5[0x3];                                      // 0x01B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FF_TitleList                           CallFunc_GetDataTableRowFromName_OutRow;           // 0x01B8(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_202[0x2];                                      // 0x0202(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20C[0x4];                                      // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FF_TitleRank                           CallFunc_Array_Get_Item_1;                         // 0x0210(0x00B8)(HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_C_Get_Rank_Info_from_Cloud_Title_ID) == 0x000008, "Wrong alignment on BP_PlayerState_C_Get_Rank_Info_from_Cloud_Title_ID");
static_assert(sizeof(BP_PlayerState_C_Get_Rank_Info_from_Cloud_Title_ID) == 0x0002C8, "Wrong size on BP_PlayerState_C_Get_Rank_Info_from_Cloud_Title_ID");
static_assert(offsetof(BP_PlayerState_C_Get_Rank_Info_from_Cloud_Title_ID, Cloud_Title_ID) == 0x000000, "Member 'BP_PlayerState_C_Get_Rank_Info_from_Cloud_Title_ID::Cloud_Title_ID' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Rank_Info_from_Cloud_Title_ID, Valid_Output) == 0x000004, "Member 'BP_PlayerState_C_Get_Rank_Info_from_Cloud_Title_ID::Valid_Output' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Rank_Info_from_Cloud_Title_ID, Rank_Info) == 0x000008, "Member 'BP_PlayerState_C_Get_Rank_Info_from_Cloud_Title_ID::Rank_Info' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Rank_Info_from_Cloud_Title_ID, Info) == 0x0000C0, "Member 'BP_PlayerState_C_Get_Rank_Info_from_Cloud_Title_ID::Info' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Rank_Info_from_Cloud_Title_ID, Temp_int_Array_Index_Variable) == 0x000178, "Member 'BP_PlayerState_C_Get_Rank_Info_from_Cloud_Title_ID::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Rank_Info_from_Cloud_Title_ID, CallFunc_Break_Cloud_Title_ID_Title_ID) == 0x00017C, "Member 'BP_PlayerState_C_Get_Rank_Info_from_Cloud_Title_ID::CallFunc_Break_Cloud_Title_ID_Title_ID' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Rank_Info_from_Cloud_Title_ID, CallFunc_Break_Cloud_Title_ID_Rank_Index) == 0x000180, "Member 'BP_PlayerState_C_Get_Rank_Info_from_Cloud_Title_ID::CallFunc_Break_Cloud_Title_ID_Rank_Index' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Rank_Info_from_Cloud_Title_ID, CallFunc_Greater_IntInt_ReturnValue) == 0x000184, "Member 'BP_PlayerState_C_Get_Rank_Info_from_Cloud_Title_ID::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Rank_Info_from_Cloud_Title_ID, Temp_int_Loop_Counter_Variable) == 0x000188, "Member 'BP_PlayerState_C_Get_Rank_Info_from_Cloud_Title_ID::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Rank_Info_from_Cloud_Title_ID, CallFunc_Add_IntInt_ReturnValue) == 0x00018C, "Member 'BP_PlayerState_C_Get_Rank_Info_from_Cloud_Title_ID::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Rank_Info_from_Cloud_Title_ID, Temp_bool_True_if_break_was_hit_Variable) == 0x000190, "Member 'BP_PlayerState_C_Get_Rank_Info_from_Cloud_Title_ID::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Rank_Info_from_Cloud_Title_ID, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000198, "Member 'BP_PlayerState_C_Get_Rank_Info_from_Cloud_Title_ID::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Rank_Info_from_Cloud_Title_ID, CallFunc_Array_Length_ReturnValue) == 0x0001A8, "Member 'BP_PlayerState_C_Get_Rank_Info_from_Cloud_Title_ID::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Rank_Info_from_Cloud_Title_ID, CallFunc_Array_Get_Item) == 0x0001AC, "Member 'BP_PlayerState_C_Get_Rank_Info_from_Cloud_Title_ID::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Rank_Info_from_Cloud_Title_ID, CallFunc_Less_IntInt_ReturnValue) == 0x0001B4, "Member 'BP_PlayerState_C_Get_Rank_Info_from_Cloud_Title_ID::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Rank_Info_from_Cloud_Title_ID, CallFunc_GetDataTableRowFromName_OutRow) == 0x0001B8, "Member 'BP_PlayerState_C_Get_Rank_Info_from_Cloud_Title_ID::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Rank_Info_from_Cloud_Title_ID, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000200, "Member 'BP_PlayerState_C_Get_Rank_Info_from_Cloud_Title_ID::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Rank_Info_from_Cloud_Title_ID, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000201, "Member 'BP_PlayerState_C_Get_Rank_Info_from_Cloud_Title_ID::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Rank_Info_from_Cloud_Title_ID, CallFunc_Array_LastIndex_ReturnValue) == 0x000204, "Member 'BP_PlayerState_C_Get_Rank_Info_from_Cloud_Title_ID::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Rank_Info_from_Cloud_Title_ID, CallFunc_Min_ReturnValue) == 0x000208, "Member 'BP_PlayerState_C_Get_Rank_Info_from_Cloud_Title_ID::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Rank_Info_from_Cloud_Title_ID, CallFunc_Array_Get_Item_1) == 0x000210, "Member 'BP_PlayerState_C_Get_Rank_Info_from_Cloud_Title_ID::CallFunc_Array_Get_Item_1' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.Make Titles Debug Message
// 0x0168 (0x0168 - 0x0000)
struct BP_PlayerState_C_Make_Titles_Debug_Message final
{
public:
	class FString                                 Custom_Message;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Message;                                           // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Get_Titles_Status_Log_Log;                // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue;          // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_10;             // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_11;             // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_12;             // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_13;             // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_14;             // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_C_Make_Titles_Debug_Message) == 0x000008, "Wrong alignment on BP_PlayerState_C_Make_Titles_Debug_Message");
static_assert(sizeof(BP_PlayerState_C_Make_Titles_Debug_Message) == 0x000168, "Wrong size on BP_PlayerState_C_Make_Titles_Debug_Message");
static_assert(offsetof(BP_PlayerState_C_Make_Titles_Debug_Message, Custom_Message) == 0x000000, "Member 'BP_PlayerState_C_Make_Titles_Debug_Message::Custom_Message' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Make_Titles_Debug_Message, Message) == 0x000010, "Member 'BP_PlayerState_C_Make_Titles_Debug_Message::Message' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Make_Titles_Debug_Message, CallFunc_Concat_StrStr_ReturnValue) == 0x000020, "Member 'BP_PlayerState_C_Make_Titles_Debug_Message::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Make_Titles_Debug_Message, CallFunc_GetPlayerName_ReturnValue) == 0x000030, "Member 'BP_PlayerState_C_Make_Titles_Debug_Message::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Make_Titles_Debug_Message, CallFunc_Get_Titles_Status_Log_Log) == 0x000040, "Member 'BP_PlayerState_C_Make_Titles_Debug_Message::CallFunc_Get_Titles_Status_Log_Log' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Make_Titles_Debug_Message, CallFunc_IsDedicatedServer_ReturnValue) == 0x000050, "Member 'BP_PlayerState_C_Make_Titles_Debug_Message::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Make_Titles_Debug_Message, CallFunc_GetDisplayName_ReturnValue) == 0x000058, "Member 'BP_PlayerState_C_Make_Titles_Debug_Message::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Make_Titles_Debug_Message, CallFunc_Conv_BoolToString_ReturnValue) == 0x000068, "Member 'BP_PlayerState_C_Make_Titles_Debug_Message::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Make_Titles_Debug_Message, CallFunc_GetCurrentLevelName_ReturnValue) == 0x000078, "Member 'BP_PlayerState_C_Make_Titles_Debug_Message::CallFunc_GetCurrentLevelName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Make_Titles_Debug_Message, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000088, "Member 'BP_PlayerState_C_Make_Titles_Debug_Message::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Make_Titles_Debug_Message, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000098, "Member 'BP_PlayerState_C_Make_Titles_Debug_Message::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Make_Titles_Debug_Message, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000A8, "Member 'BP_PlayerState_C_Make_Titles_Debug_Message::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Make_Titles_Debug_Message, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0000B8, "Member 'BP_PlayerState_C_Make_Titles_Debug_Message::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Make_Titles_Debug_Message, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0000C8, "Member 'BP_PlayerState_C_Make_Titles_Debug_Message::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Make_Titles_Debug_Message, CallFunc_Concat_StrStr_ReturnValue_6) == 0x0000D8, "Member 'BP_PlayerState_C_Make_Titles_Debug_Message::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Make_Titles_Debug_Message, CallFunc_Concat_StrStr_ReturnValue_7) == 0x0000E8, "Member 'BP_PlayerState_C_Make_Titles_Debug_Message::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Make_Titles_Debug_Message, CallFunc_Concat_StrStr_ReturnValue_8) == 0x0000F8, "Member 'BP_PlayerState_C_Make_Titles_Debug_Message::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Make_Titles_Debug_Message, CallFunc_Concat_StrStr_ReturnValue_9) == 0x000108, "Member 'BP_PlayerState_C_Make_Titles_Debug_Message::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Make_Titles_Debug_Message, CallFunc_Concat_StrStr_ReturnValue_10) == 0x000118, "Member 'BP_PlayerState_C_Make_Titles_Debug_Message::CallFunc_Concat_StrStr_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Make_Titles_Debug_Message, CallFunc_Concat_StrStr_ReturnValue_11) == 0x000128, "Member 'BP_PlayerState_C_Make_Titles_Debug_Message::CallFunc_Concat_StrStr_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Make_Titles_Debug_Message, CallFunc_Concat_StrStr_ReturnValue_12) == 0x000138, "Member 'BP_PlayerState_C_Make_Titles_Debug_Message::CallFunc_Concat_StrStr_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Make_Titles_Debug_Message, CallFunc_Concat_StrStr_ReturnValue_13) == 0x000148, "Member 'BP_PlayerState_C_Make_Titles_Debug_Message::CallFunc_Concat_StrStr_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Make_Titles_Debug_Message, CallFunc_Concat_StrStr_ReturnValue_14) == 0x000158, "Member 'BP_PlayerState_C_Make_Titles_Debug_Message::CallFunc_Concat_StrStr_ReturnValue_14' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.Print Titles Debug Message
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerState_C_Print_Titles_Debug_Message final
{
public:
	class FString                                 Custom_Message;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Make_Titles_Debug_Message_Message;        // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_C_Print_Titles_Debug_Message) == 0x000008, "Wrong alignment on BP_PlayerState_C_Print_Titles_Debug_Message");
static_assert(sizeof(BP_PlayerState_C_Print_Titles_Debug_Message) == 0x000020, "Wrong size on BP_PlayerState_C_Print_Titles_Debug_Message");
static_assert(offsetof(BP_PlayerState_C_Print_Titles_Debug_Message, Custom_Message) == 0x000000, "Member 'BP_PlayerState_C_Print_Titles_Debug_Message::Custom_Message' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Print_Titles_Debug_Message, CallFunc_Make_Titles_Debug_Message_Message) == 0x000010, "Member 'BP_PlayerState_C_Print_Titles_Debug_Message::CallFunc_Make_Titles_Debug_Message_Message' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.Check Badge Validity
// 0x0160 (0x0160 - 0x0000)
struct BP_PlayerState_C_Check_Badge_Validity final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x001E(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x001F(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0020(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FF_TitleList                           CallFunc_GetDataTableRowFromName_OutRow;           // 0x0040(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Break_Cloud_Title_ID_Title_ID;            // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Break_Cloud_Title_ID_Rank_Index;          // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DA[0x6];                                       // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerState_C_Check_Badge_Validity) == 0x000008, "Wrong alignment on BP_PlayerState_C_Check_Badge_Validity");
static_assert(sizeof(BP_PlayerState_C_Check_Badge_Validity) == 0x000160, "Wrong size on BP_PlayerState_C_Check_Badge_Validity");
static_assert(offsetof(BP_PlayerState_C_Check_Badge_Validity, Temp_bool_Variable) == 0x000000, "Member 'BP_PlayerState_C_Check_Badge_Validity::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Check_Badge_Validity, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_PlayerState_C_Check_Badge_Validity::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Check_Badge_Validity, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_PlayerState_C_Check_Badge_Validity::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Check_Badge_Validity, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_PlayerState_C_Check_Badge_Validity::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Check_Badge_Validity, Temp_int_Loop_Counter_Variable_1) == 0x000010, "Member 'BP_PlayerState_C_Check_Badge_Validity::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Check_Badge_Validity, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'BP_PlayerState_C_Check_Badge_Validity::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Check_Badge_Validity, Temp_int_Array_Index_Variable_1) == 0x000018, "Member 'BP_PlayerState_C_Check_Badge_Validity::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Check_Badge_Validity, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00001C, "Member 'BP_PlayerState_C_Check_Badge_Validity::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Check_Badge_Validity, Temp_bool_True_if_break_was_hit_Variable) == 0x00001D, "Member 'BP_PlayerState_C_Check_Badge_Validity::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Check_Badge_Validity, Temp_bool_Variable_1) == 0x00001E, "Member 'BP_PlayerState_C_Check_Badge_Validity::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Check_Badge_Validity, Temp_bool_Variable_2) == 0x00001F, "Member 'BP_PlayerState_C_Check_Badge_Validity::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Check_Badge_Validity, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000020, "Member 'BP_PlayerState_C_Check_Badge_Validity::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Check_Badge_Validity, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_PlayerState_C_Check_Badge_Validity::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Check_Badge_Validity, CallFunc_Array_Get_Item_1) == 0x000038, "Member 'BP_PlayerState_C_Check_Badge_Validity::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Check_Badge_Validity, CallFunc_GetDataTableRowFromName_OutRow) == 0x000040, "Member 'BP_PlayerState_C_Check_Badge_Validity::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Check_Badge_Validity, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000088, "Member 'BP_PlayerState_C_Check_Badge_Validity::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Check_Badge_Validity, CallFunc_Conv_IntToString_ReturnValue) == 0x000090, "Member 'BP_PlayerState_C_Check_Badge_Validity::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Check_Badge_Validity, CallFunc_Concat_StrStr_ReturnValue) == 0x0000A0, "Member 'BP_PlayerState_C_Check_Badge_Validity::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Check_Badge_Validity, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000B0, "Member 'BP_PlayerState_C_Check_Badge_Validity::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Check_Badge_Validity, CallFunc_Conv_IntToString_ReturnValue_1) == 0x0000C0, "Member 'BP_PlayerState_C_Check_Badge_Validity::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Check_Badge_Validity, CallFunc_Break_Cloud_Title_ID_Title_ID) == 0x0000D0, "Member 'BP_PlayerState_C_Check_Badge_Validity::CallFunc_Break_Cloud_Title_ID_Title_ID' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Check_Badge_Validity, CallFunc_Break_Cloud_Title_ID_Rank_Index) == 0x0000D4, "Member 'BP_PlayerState_C_Check_Badge_Validity::CallFunc_Break_Cloud_Title_ID_Rank_Index' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Check_Badge_Validity, CallFunc_Greater_IntInt_ReturnValue) == 0x0000D8, "Member 'BP_PlayerState_C_Check_Badge_Validity::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Check_Badge_Validity, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000D9, "Member 'BP_PlayerState_C_Check_Badge_Validity::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Check_Badge_Validity, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x0000E0, "Member 'BP_PlayerState_C_Check_Badge_Validity::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Check_Badge_Validity, K2Node_DynamicCast_AsTexture_2D) == 0x0000E8, "Member 'BP_PlayerState_C_Check_Badge_Validity::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Check_Badge_Validity, K2Node_DynamicCast_bSuccess) == 0x0000F0, "Member 'BP_PlayerState_C_Check_Badge_Validity::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Check_Badge_Validity, CallFunc_Array_Length_ReturnValue) == 0x0000F4, "Member 'BP_PlayerState_C_Check_Badge_Validity::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Check_Badge_Validity, CallFunc_GetDisplayName_ReturnValue) == 0x0000F8, "Member 'BP_PlayerState_C_Check_Badge_Validity::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Check_Badge_Validity, CallFunc_Less_IntInt_ReturnValue) == 0x000108, "Member 'BP_PlayerState_C_Check_Badge_Validity::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Check_Badge_Validity, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000110, "Member 'BP_PlayerState_C_Check_Badge_Validity::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Check_Badge_Validity, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000120, "Member 'BP_PlayerState_C_Check_Badge_Validity::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Check_Badge_Validity, CallFunc_IsValid_ReturnValue) == 0x000130, "Member 'BP_PlayerState_C_Check_Badge_Validity::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Check_Badge_Validity, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000138, "Member 'BP_PlayerState_C_Check_Badge_Validity::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Check_Badge_Validity, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000148, "Member 'BP_PlayerState_C_Check_Badge_Validity::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Check_Badge_Validity, CallFunc_Array_Length_ReturnValue_1) == 0x000158, "Member 'BP_PlayerState_C_Check_Badge_Validity::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Check_Badge_Validity, CallFunc_Less_IntInt_ReturnValue_1) == 0x00015C, "Member 'BP_PlayerState_C_Check_Badge_Validity::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.LockBoosters
// 0x0088 (0x0088 - 0x0000)
struct BP_PlayerState_C_LockBoosters final
{
public:
	TMap<EBooster, int32>                         Boosters;                                          // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	TArray<EBooster>                              CallFunc_Map_Keys_Keys;                            // 0x0050(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBooster                                      CallFunc_Array_Get_Item;                           // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value;                           // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_C_LockBoosters) == 0x000008, "Wrong alignment on BP_PlayerState_C_LockBoosters");
static_assert(sizeof(BP_PlayerState_C_LockBoosters) == 0x000088, "Wrong size on BP_PlayerState_C_LockBoosters");
static_assert(offsetof(BP_PlayerState_C_LockBoosters, Boosters) == 0x000000, "Member 'BP_PlayerState_C_LockBoosters::Boosters' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_LockBoosters, CallFunc_Map_Keys_Keys) == 0x000050, "Member 'BP_PlayerState_C_LockBoosters::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_LockBoosters, Temp_int_Array_Index_Variable) == 0x000060, "Member 'BP_PlayerState_C_LockBoosters::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_LockBoosters, CallFunc_Array_Length_ReturnValue) == 0x000064, "Member 'BP_PlayerState_C_LockBoosters::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_LockBoosters, CallFunc_Array_Get_Item) == 0x000068, "Member 'BP_PlayerState_C_LockBoosters::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_LockBoosters, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00006C, "Member 'BP_PlayerState_C_LockBoosters::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_LockBoosters, CallFunc_Map_Find_Value) == 0x000070, "Member 'BP_PlayerState_C_LockBoosters::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_LockBoosters, CallFunc_Map_Find_ReturnValue) == 0x000074, "Member 'BP_PlayerState_C_LockBoosters::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_LockBoosters, Temp_int_Loop_Counter_Variable) == 0x000078, "Member 'BP_PlayerState_C_LockBoosters::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_LockBoosters, CallFunc_Less_IntInt_ReturnValue) == 0x00007C, "Member 'BP_PlayerState_C_LockBoosters::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_LockBoosters, CallFunc_Add_IntInt_ReturnValue) == 0x000080, "Member 'BP_PlayerState_C_LockBoosters::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.SetHasBooster
// 0x000C (0x000C - 0x0000)
struct BP_PlayerState_C_SetHasBooster final
{
public:
	EBooster                                      Booster;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Amount;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_C_SetHasBooster) == 0x000004, "Wrong alignment on BP_PlayerState_C_SetHasBooster");
static_assert(sizeof(BP_PlayerState_C_SetHasBooster) == 0x00000C, "Wrong size on BP_PlayerState_C_SetHasBooster");
static_assert(offsetof(BP_PlayerState_C_SetHasBooster, Booster) == 0x000000, "Member 'BP_PlayerState_C_SetHasBooster::Booster' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_SetHasBooster, Amount) == 0x000004, "Member 'BP_PlayerState_C_SetHasBooster::Amount' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_SetHasBooster, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000008, "Member 'BP_PlayerState_C_SetHasBooster::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.Set Last Death Killer
// 0x0060 (0x0060 - 0x0000)
struct BP_PlayerState_C_Set_Last_Death_Killer final
{
public:
	class AHumanCharacter*                        Killer_Human_Character;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_C*                      K2Node_DynamicCast_AsBP_Player_State;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameState_Script_C*                 K2Node_DynamicCast_AsBP_Game_State_Script;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerState_C*                      K2Node_DynamicCast_AsBP_Player_State_1;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerState_C_Set_Last_Death_Killer) == 0x000008, "Wrong alignment on BP_PlayerState_C_Set_Last_Death_Killer");
static_assert(sizeof(BP_PlayerState_C_Set_Last_Death_Killer) == 0x000060, "Wrong size on BP_PlayerState_C_Set_Last_Death_Killer");
static_assert(offsetof(BP_PlayerState_C_Set_Last_Death_Killer, Killer_Human_Character) == 0x000000, "Member 'BP_PlayerState_C_Set_Last_Death_Killer::Killer_Human_Character' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Set_Last_Death_Killer, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_PlayerState_C_Set_Last_Death_Killer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Set_Last_Death_Killer, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'BP_PlayerState_C_Set_Last_Death_Killer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Set_Last_Death_Killer, K2Node_DynamicCast_AsBP_Player_State) == 0x000010, "Member 'BP_PlayerState_C_Set_Last_Death_Killer::K2Node_DynamicCast_AsBP_Player_State' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Set_Last_Death_Killer, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_PlayerState_C_Set_Last_Death_Killer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Set_Last_Death_Killer, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000019, "Member 'BP_PlayerState_C_Set_Last_Death_Killer::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Set_Last_Death_Killer, Temp_bool_True_if_break_was_hit_Variable) == 0x00001A, "Member 'BP_PlayerState_C_Set_Last_Death_Killer::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Set_Last_Death_Killer, CallFunc_Not_PreBool_ReturnValue) == 0x00001B, "Member 'BP_PlayerState_C_Set_Last_Death_Killer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Set_Last_Death_Killer, CallFunc_GetGameState_ReturnValue) == 0x000020, "Member 'BP_PlayerState_C_Set_Last_Death_Killer::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Set_Last_Death_Killer, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BP_PlayerState_C_Set_Last_Death_Killer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Set_Last_Death_Killer, K2Node_DynamicCast_AsBP_Game_State_Script) == 0x000030, "Member 'BP_PlayerState_C_Set_Last_Death_Killer::K2Node_DynamicCast_AsBP_Game_State_Script' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Set_Last_Death_Killer, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_PlayerState_C_Set_Last_Death_Killer::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Set_Last_Death_Killer, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_PlayerState_C_Set_Last_Death_Killer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Set_Last_Death_Killer, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_PlayerState_C_Set_Last_Death_Killer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Set_Last_Death_Killer, K2Node_DynamicCast_AsBP_Player_State_1) == 0x000048, "Member 'BP_PlayerState_C_Set_Last_Death_Killer::K2Node_DynamicCast_AsBP_Player_State_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Set_Last_Death_Killer, K2Node_DynamicCast_bSuccess_2) == 0x000050, "Member 'BP_PlayerState_C_Set_Last_Death_Killer::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Set_Last_Death_Killer, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000051, "Member 'BP_PlayerState_C_Set_Last_Death_Killer::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Set_Last_Death_Killer, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'BP_PlayerState_C_Set_Last_Death_Killer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Set_Last_Death_Killer, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'BP_PlayerState_C_Set_Last_Death_Killer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Set_Last_Death_Killer, CallFunc_BooleanAND_ReturnValue) == 0x000059, "Member 'BP_PlayerState_C_Set_Last_Death_Killer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Set_Last_Death_Killer, CallFunc_IsValid_ReturnValue_1) == 0x00005A, "Member 'BP_PlayerState_C_Set_Last_Death_Killer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Set_Last_Death_Killer, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00005B, "Member 'BP_PlayerState_C_Set_Last_Death_Killer::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Set_Last_Death_Killer, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00005C, "Member 'BP_PlayerState_C_Set_Last_Death_Killer::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.Get Killer Match Player Info
// 0x0168 (0x0168 - 0x0000)
struct BP_PlayerState_C_Get_Killer_Match_Player_Info final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_MatchPlayerInfo                     Match_Player_Info;                                 // 0x0008(0x00A0)(Parm, OutParm, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameState_Matches_C*                K2Node_DynamicCast_AsBP_Game_State_Matches;        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_MatchPlayerInfo                     CallFunc_Map_Find_Value;                           // 0x00C0(0x00A0)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerState_C_Get_Killer_Match_Player_Info) == 0x000008, "Wrong alignment on BP_PlayerState_C_Get_Killer_Match_Player_Info");
static_assert(sizeof(BP_PlayerState_C_Get_Killer_Match_Player_Info) == 0x000168, "Wrong size on BP_PlayerState_C_Get_Killer_Match_Player_Info");
static_assert(offsetof(BP_PlayerState_C_Get_Killer_Match_Player_Info, Success) == 0x000000, "Member 'BP_PlayerState_C_Get_Killer_Match_Player_Info::Success' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Killer_Match_Player_Info, Match_Player_Info) == 0x000008, "Member 'BP_PlayerState_C_Get_Killer_Match_Player_Info::Match_Player_Info' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Killer_Match_Player_Info, CallFunc_GetGameState_ReturnValue) == 0x0000A8, "Member 'BP_PlayerState_C_Get_Killer_Match_Player_Info::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Killer_Match_Player_Info, K2Node_DynamicCast_AsBP_Game_State_Matches) == 0x0000B0, "Member 'BP_PlayerState_C_Get_Killer_Match_Player_Info::K2Node_DynamicCast_AsBP_Game_State_Matches' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Killer_Match_Player_Info, K2Node_DynamicCast_bSuccess) == 0x0000B8, "Member 'BP_PlayerState_C_Get_Killer_Match_Player_Info::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Killer_Match_Player_Info, CallFunc_Map_Find_Value) == 0x0000C0, "Member 'BP_PlayerState_C_Get_Killer_Match_Player_Info::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Get_Killer_Match_Player_Info, CallFunc_Map_Find_ReturnValue) == 0x000160, "Member 'BP_PlayerState_C_Get_Killer_Match_Player_Info::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.PlayerResult_Analytics_AttachRelevantData
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerState_C_PlayerResult_Analytics_AttachRelevantData final
{
public:
	class UJsonObject*                            JsonObject;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJsonObject*                            JsonObjectOut;                                     // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_C_PlayerResult_Analytics_AttachRelevantData) == 0x000008, "Wrong alignment on BP_PlayerState_C_PlayerResult_Analytics_AttachRelevantData");
static_assert(sizeof(BP_PlayerState_C_PlayerResult_Analytics_AttachRelevantData) == 0x000010, "Wrong size on BP_PlayerState_C_PlayerResult_Analytics_AttachRelevantData");
static_assert(offsetof(BP_PlayerState_C_PlayerResult_Analytics_AttachRelevantData, JsonObject) == 0x000000, "Member 'BP_PlayerState_C_PlayerResult_Analytics_AttachRelevantData::JsonObject' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_PlayerResult_Analytics_AttachRelevantData, JsonObjectOut) == 0x000008, "Member 'BP_PlayerState_C_PlayerResult_Analytics_AttachRelevantData::JsonObjectOut' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.GetBoosterCount
// 0x0014 (0x0014 - 0x0000)
struct BP_PlayerState_C_GetBoosterCount final
{
public:
	EBooster                                      Booster;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Count;                                             // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item;                           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_C_GetBoosterCount) == 0x000004, "Wrong alignment on BP_PlayerState_C_GetBoosterCount");
static_assert(sizeof(BP_PlayerState_C_GetBoosterCount) == 0x000014, "Wrong size on BP_PlayerState_C_GetBoosterCount");
static_assert(offsetof(BP_PlayerState_C_GetBoosterCount, Booster) == 0x000000, "Member 'BP_PlayerState_C_GetBoosterCount::Booster' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_GetBoosterCount, Count) == 0x000004, "Member 'BP_PlayerState_C_GetBoosterCount::Count' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_GetBoosterCount, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000008, "Member 'BP_PlayerState_C_GetBoosterCount::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_GetBoosterCount, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00000C, "Member 'BP_PlayerState_C_GetBoosterCount::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_GetBoosterCount, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_PlayerState_C_GetBoosterCount::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.HasBoosterInsurance
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerState_C_HasBoosterInsurance final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetBoosterCount_Count;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBoosterCount_Count_1;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerState_C_HasBoosterInsurance) == 0x000004, "Wrong alignment on BP_PlayerState_C_HasBoosterInsurance");
static_assert(sizeof(BP_PlayerState_C_HasBoosterInsurance) == 0x000010, "Wrong size on BP_PlayerState_C_HasBoosterInsurance");
static_assert(offsetof(BP_PlayerState_C_HasBoosterInsurance, ReturnValue) == 0x000000, "Member 'BP_PlayerState_C_HasBoosterInsurance::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_HasBoosterInsurance, CallFunc_GetBoosterCount_Count) == 0x000004, "Member 'BP_PlayerState_C_HasBoosterInsurance::CallFunc_GetBoosterCount_Count' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_HasBoosterInsurance, CallFunc_GetBoosterCount_Count_1) == 0x000008, "Member 'BP_PlayerState_C_HasBoosterInsurance::CallFunc_GetBoosterCount_Count_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_HasBoosterInsurance, CallFunc_Greater_IntInt_ReturnValue) == 0x00000C, "Member 'BP_PlayerState_C_HasBoosterInsurance::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_HasBoosterInsurance, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00000D, "Member 'BP_PlayerState_C_HasBoosterInsurance::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_HasBoosterInsurance, CallFunc_BooleanOR_ReturnValue) == 0x00000E, "Member 'BP_PlayerState_C_HasBoosterInsurance::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.HasBoosterCrate
// 0x000C (0x000C - 0x0000)
struct BP_PlayerState_C_HasBoosterCrate final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetBoosterCount_Count;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerState_C_HasBoosterCrate) == 0x000004, "Wrong alignment on BP_PlayerState_C_HasBoosterCrate");
static_assert(sizeof(BP_PlayerState_C_HasBoosterCrate) == 0x00000C, "Wrong size on BP_PlayerState_C_HasBoosterCrate");
static_assert(offsetof(BP_PlayerState_C_HasBoosterCrate, ReturnValue) == 0x000000, "Member 'BP_PlayerState_C_HasBoosterCrate::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_HasBoosterCrate, CallFunc_GetBoosterCount_Count) == 0x000004, "Member 'BP_PlayerState_C_HasBoosterCrate::CallFunc_GetBoosterCount_Count' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_HasBoosterCrate, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'BP_PlayerState_C_HasBoosterCrate::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.HasBoosterLoot
// 0x000C (0x000C - 0x0000)
struct BP_PlayerState_C_HasBoosterLoot final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetBoosterCount_Count;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerState_C_HasBoosterLoot) == 0x000004, "Wrong alignment on BP_PlayerState_C_HasBoosterLoot");
static_assert(sizeof(BP_PlayerState_C_HasBoosterLoot) == 0x00000C, "Wrong size on BP_PlayerState_C_HasBoosterLoot");
static_assert(offsetof(BP_PlayerState_C_HasBoosterLoot, ReturnValue) == 0x000000, "Member 'BP_PlayerState_C_HasBoosterLoot::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_HasBoosterLoot, CallFunc_GetBoosterCount_Count) == 0x000004, "Member 'BP_PlayerState_C_HasBoosterLoot::CallFunc_GetBoosterCount_Count' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_HasBoosterLoot, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'BP_PlayerState_C_HasBoosterLoot::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.GetReadyInLobby
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerState_C_GetReadyInLobby final
{
public:
	bool                                          IsReadyInLobby_0;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerState_C_GetReadyInLobby) == 0x000001, "Wrong alignment on BP_PlayerState_C_GetReadyInLobby");
static_assert(sizeof(BP_PlayerState_C_GetReadyInLobby) == 0x000001, "Wrong size on BP_PlayerState_C_GetReadyInLobby");
static_assert(offsetof(BP_PlayerState_C_GetReadyInLobby, IsReadyInLobby_0) == 0x000000, "Member 'BP_PlayerState_C_GetReadyInLobby::IsReadyInLobby_0' has a wrong offset!");

}

