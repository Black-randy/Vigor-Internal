#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_BattlePassBuyPremiumTile

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Flame_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function UI_BattlePassBuyPremiumTile.UI_BattlePassBuyPremiumTile_C.ExecuteUbergraph_UI_BattlePassBuyPremiumTile
// 0x00A0 (0x00A0 - 0x0000)
struct UI_BattlePassBuyPremiumTile_C_ExecuteUbergraph_UI_BattlePassBuyPremiumTile final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UButton*                                K2Node_ComponentBoundEvent_Sender_2;               // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFocusEvent                            K2Node_Event_InFocusEvent;                         // 0x0028(0x0008)(NoDestructor)
	class UButton*                                K2Node_ComponentBoundEvent_Sender_1;               // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UButton*                                K2Node_ComponentBoundEvent_Sender;                 // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlatformGroupDesktop_ReturnValue;       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUI_CustomCursor_C*>             CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0048(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UUI_CustomCursor_C*                     CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlatformGroupDesktop_ReturnValue_1;     // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_66[0x2];                                       // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUI_CustomCursor_C*>             CallFunc_GetAllWidgetsOfClass_FoundWidgets_1;      // 0x0068(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UUI_CustomCursor_C*                     CallFunc_Array_Get_Item_1;                         // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_BattlePassBuyPremiumTile_C_ExecuteUbergraph_UI_BattlePassBuyPremiumTile) == 0x000008, "Wrong alignment on UI_BattlePassBuyPremiumTile_C_ExecuteUbergraph_UI_BattlePassBuyPremiumTile");
static_assert(sizeof(UI_BattlePassBuyPremiumTile_C_ExecuteUbergraph_UI_BattlePassBuyPremiumTile) == 0x0000A0, "Wrong size on UI_BattlePassBuyPremiumTile_C_ExecuteUbergraph_UI_BattlePassBuyPremiumTile");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_ExecuteUbergraph_UI_BattlePassBuyPremiumTile, EntryPoint) == 0x000000, "Member 'UI_BattlePassBuyPremiumTile_C_ExecuteUbergraph_UI_BattlePassBuyPremiumTile::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_ExecuteUbergraph_UI_BattlePassBuyPremiumTile, Temp_int_Variable) == 0x000004, "Member 'UI_BattlePassBuyPremiumTile_C_ExecuteUbergraph_UI_BattlePassBuyPremiumTile::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_ExecuteUbergraph_UI_BattlePassBuyPremiumTile, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'UI_BattlePassBuyPremiumTile_C_ExecuteUbergraph_UI_BattlePassBuyPremiumTile::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_ExecuteUbergraph_UI_BattlePassBuyPremiumTile, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'UI_BattlePassBuyPremiumTile_C_ExecuteUbergraph_UI_BattlePassBuyPremiumTile::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_ExecuteUbergraph_UI_BattlePassBuyPremiumTile, Temp_int_Variable_1) == 0x000010, "Member 'UI_BattlePassBuyPremiumTile_C_ExecuteUbergraph_UI_BattlePassBuyPremiumTile::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_ExecuteUbergraph_UI_BattlePassBuyPremiumTile, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'UI_BattlePassBuyPremiumTile_C_ExecuteUbergraph_UI_BattlePassBuyPremiumTile::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_ExecuteUbergraph_UI_BattlePassBuyPremiumTile, K2Node_ComponentBoundEvent_Sender_2) == 0x000018, "Member 'UI_BattlePassBuyPremiumTile_C_ExecuteUbergraph_UI_BattlePassBuyPremiumTile::K2Node_ComponentBoundEvent_Sender_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_ExecuteUbergraph_UI_BattlePassBuyPremiumTile, CallFunc_PlayAnimation_ReturnValue) == 0x000020, "Member 'UI_BattlePassBuyPremiumTile_C_ExecuteUbergraph_UI_BattlePassBuyPremiumTile::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_ExecuteUbergraph_UI_BattlePassBuyPremiumTile, K2Node_Event_InFocusEvent) == 0x000028, "Member 'UI_BattlePassBuyPremiumTile_C_ExecuteUbergraph_UI_BattlePassBuyPremiumTile::K2Node_Event_InFocusEvent' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_ExecuteUbergraph_UI_BattlePassBuyPremiumTile, K2Node_ComponentBoundEvent_Sender_1) == 0x000030, "Member 'UI_BattlePassBuyPremiumTile_C_ExecuteUbergraph_UI_BattlePassBuyPremiumTile::K2Node_ComponentBoundEvent_Sender_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_ExecuteUbergraph_UI_BattlePassBuyPremiumTile, K2Node_ComponentBoundEvent_Sender) == 0x000038, "Member 'UI_BattlePassBuyPremiumTile_C_ExecuteUbergraph_UI_BattlePassBuyPremiumTile::K2Node_ComponentBoundEvent_Sender' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_ExecuteUbergraph_UI_BattlePassBuyPremiumTile, CallFunc_IsPlatformGroupDesktop_ReturnValue) == 0x000040, "Member 'UI_BattlePassBuyPremiumTile_C_ExecuteUbergraph_UI_BattlePassBuyPremiumTile::CallFunc_IsPlatformGroupDesktop_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_ExecuteUbergraph_UI_BattlePassBuyPremiumTile, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000048, "Member 'UI_BattlePassBuyPremiumTile_C_ExecuteUbergraph_UI_BattlePassBuyPremiumTile::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_ExecuteUbergraph_UI_BattlePassBuyPremiumTile, CallFunc_Array_Get_Item) == 0x000058, "Member 'UI_BattlePassBuyPremiumTile_C_ExecuteUbergraph_UI_BattlePassBuyPremiumTile::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_ExecuteUbergraph_UI_BattlePassBuyPremiumTile, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'UI_BattlePassBuyPremiumTile_C_ExecuteUbergraph_UI_BattlePassBuyPremiumTile::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_ExecuteUbergraph_UI_BattlePassBuyPremiumTile, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'UI_BattlePassBuyPremiumTile_C_ExecuteUbergraph_UI_BattlePassBuyPremiumTile::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_ExecuteUbergraph_UI_BattlePassBuyPremiumTile, CallFunc_IsPlatformGroupDesktop_ReturnValue_1) == 0x000065, "Member 'UI_BattlePassBuyPremiumTile_C_ExecuteUbergraph_UI_BattlePassBuyPremiumTile::CallFunc_IsPlatformGroupDesktop_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_ExecuteUbergraph_UI_BattlePassBuyPremiumTile, CallFunc_GetAllWidgetsOfClass_FoundWidgets_1) == 0x000068, "Member 'UI_BattlePassBuyPremiumTile_C_ExecuteUbergraph_UI_BattlePassBuyPremiumTile::CallFunc_GetAllWidgetsOfClass_FoundWidgets_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_ExecuteUbergraph_UI_BattlePassBuyPremiumTile, CallFunc_Array_Get_Item_1) == 0x000078, "Member 'UI_BattlePassBuyPremiumTile_C_ExecuteUbergraph_UI_BattlePassBuyPremiumTile::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_ExecuteUbergraph_UI_BattlePassBuyPremiumTile, CallFunc_Array_Length_ReturnValue_1) == 0x000080, "Member 'UI_BattlePassBuyPremiumTile_C_ExecuteUbergraph_UI_BattlePassBuyPremiumTile::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_ExecuteUbergraph_UI_BattlePassBuyPremiumTile, CallFunc_Less_IntInt_ReturnValue_1) == 0x000084, "Member 'UI_BattlePassBuyPremiumTile_C_ExecuteUbergraph_UI_BattlePassBuyPremiumTile::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_ExecuteUbergraph_UI_BattlePassBuyPremiumTile, CallFunc_PlayAnimation_ReturnValue_1) == 0x000088, "Member 'UI_BattlePassBuyPremiumTile_C_ExecuteUbergraph_UI_BattlePassBuyPremiumTile::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_ExecuteUbergraph_UI_BattlePassBuyPremiumTile, CallFunc_PlayAnimation_ReturnValue_2) == 0x000090, "Member 'UI_BattlePassBuyPremiumTile_C_ExecuteUbergraph_UI_BattlePassBuyPremiumTile::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_ExecuteUbergraph_UI_BattlePassBuyPremiumTile, CallFunc_Not_PreBool_ReturnValue_1) == 0x000098, "Member 'UI_BattlePassBuyPremiumTile_C_ExecuteUbergraph_UI_BattlePassBuyPremiumTile::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");

// Function UI_BattlePassBuyPremiumTile.UI_BattlePassBuyPremiumTile_C.BndEvt__UI_BattlePassBuyPremiumTile_SelectButton_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct UI_BattlePassBuyPremiumTile_C_BndEvt__UI_BattlePassBuyPremiumTile_SelectButton_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature final
{
public:
	class UButton*                                Sender;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattlePassBuyPremiumTile_C_BndEvt__UI_BattlePassBuyPremiumTile_SelectButton_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature) == 0x000008, "Wrong alignment on UI_BattlePassBuyPremiumTile_C_BndEvt__UI_BattlePassBuyPremiumTile_SelectButton_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature");
static_assert(sizeof(UI_BattlePassBuyPremiumTile_C_BndEvt__UI_BattlePassBuyPremiumTile_SelectButton_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature) == 0x000008, "Wrong size on UI_BattlePassBuyPremiumTile_C_BndEvt__UI_BattlePassBuyPremiumTile_SelectButton_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_BndEvt__UI_BattlePassBuyPremiumTile_SelectButton_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature, Sender) == 0x000000, "Member 'UI_BattlePassBuyPremiumTile_C_BndEvt__UI_BattlePassBuyPremiumTile_SelectButton_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature::Sender' has a wrong offset!");

// Function UI_BattlePassBuyPremiumTile.UI_BattlePassBuyPremiumTile_C.BndEvt__UI_BattlePassBuyPremiumTile_SelectButton_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct UI_BattlePassBuyPremiumTile_C_BndEvt__UI_BattlePassBuyPremiumTile_SelectButton_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature final
{
public:
	class UButton*                                Sender;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattlePassBuyPremiumTile_C_BndEvt__UI_BattlePassBuyPremiumTile_SelectButton_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature) == 0x000008, "Wrong alignment on UI_BattlePassBuyPremiumTile_C_BndEvt__UI_BattlePassBuyPremiumTile_SelectButton_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature");
static_assert(sizeof(UI_BattlePassBuyPremiumTile_C_BndEvt__UI_BattlePassBuyPremiumTile_SelectButton_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature) == 0x000008, "Wrong size on UI_BattlePassBuyPremiumTile_C_BndEvt__UI_BattlePassBuyPremiumTile_SelectButton_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_BndEvt__UI_BattlePassBuyPremiumTile_SelectButton_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature, Sender) == 0x000000, "Member 'UI_BattlePassBuyPremiumTile_C_BndEvt__UI_BattlePassBuyPremiumTile_SelectButton_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature::Sender' has a wrong offset!");

// Function UI_BattlePassBuyPremiumTile.UI_BattlePassBuyPremiumTile_C.OnFocusLost
// 0x0008 (0x0008 - 0x0000)
struct UI_BattlePassBuyPremiumTile_C_OnFocusLost final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(UI_BattlePassBuyPremiumTile_C_OnFocusLost) == 0x000004, "Wrong alignment on UI_BattlePassBuyPremiumTile_C_OnFocusLost");
static_assert(sizeof(UI_BattlePassBuyPremiumTile_C_OnFocusLost) == 0x000008, "Wrong size on UI_BattlePassBuyPremiumTile_C_OnFocusLost");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_OnFocusLost, InFocusEvent) == 0x000000, "Member 'UI_BattlePassBuyPremiumTile_C_OnFocusLost::InFocusEvent' has a wrong offset!");

// Function UI_BattlePassBuyPremiumTile.UI_BattlePassBuyPremiumTile_C.BndEvt__UI_BattlePassBuyPremiumTile_FlameButton_47_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct UI_BattlePassBuyPremiumTile_C_BndEvt__UI_BattlePassBuyPremiumTile_FlameButton_47_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature final
{
public:
	class UButton*                                Sender;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattlePassBuyPremiumTile_C_BndEvt__UI_BattlePassBuyPremiumTile_FlameButton_47_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature) == 0x000008, "Wrong alignment on UI_BattlePassBuyPremiumTile_C_BndEvt__UI_BattlePassBuyPremiumTile_FlameButton_47_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature");
static_assert(sizeof(UI_BattlePassBuyPremiumTile_C_BndEvt__UI_BattlePassBuyPremiumTile_FlameButton_47_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature) == 0x000008, "Wrong size on UI_BattlePassBuyPremiumTile_C_BndEvt__UI_BattlePassBuyPremiumTile_FlameButton_47_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_BndEvt__UI_BattlePassBuyPremiumTile_FlameButton_47_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature, Sender) == 0x000000, "Member 'UI_BattlePassBuyPremiumTile_C_BndEvt__UI_BattlePassBuyPremiumTile_FlameButton_47_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature::Sender' has a wrong offset!");

// Function UI_BattlePassBuyPremiumTile.UI_BattlePassBuyPremiumTile_C.OnFocusReceived
// 0x01B8 (0x01B8 - 0x0000)
struct UI_BattlePassBuyPremiumTile_C_OnFocusReceived final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FFocusEvent                            InFocusEvent;                                      // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_OnFocusReceived_ReturnValue;              // 0x00F8(0x00B8)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattlePassBuyPremiumTile_C_OnFocusReceived) == 0x000008, "Wrong alignment on UI_BattlePassBuyPremiumTile_C_OnFocusReceived");
static_assert(sizeof(UI_BattlePassBuyPremiumTile_C_OnFocusReceived) == 0x0001B8, "Wrong size on UI_BattlePassBuyPremiumTile_C_OnFocusReceived");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_OnFocusReceived, MyGeometry) == 0x000000, "Member 'UI_BattlePassBuyPremiumTile_C_OnFocusReceived::MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_OnFocusReceived, InFocusEvent) == 0x000038, "Member 'UI_BattlePassBuyPremiumTile_C_OnFocusReceived::InFocusEvent' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_OnFocusReceived, ReturnValue) == 0x000040, "Member 'UI_BattlePassBuyPremiumTile_C_OnFocusReceived::ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_OnFocusReceived, CallFunc_OnFocusReceived_ReturnValue) == 0x0000F8, "Member 'UI_BattlePassBuyPremiumTile_C_OnFocusReceived::CallFunc_OnFocusReceived_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_OnFocusReceived, CallFunc_PlayAnimation_ReturnValue) == 0x0001B0, "Member 'UI_BattlePassBuyPremiumTile_C_OnFocusReceived::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function UI_BattlePassBuyPremiumTile.UI_BattlePassBuyPremiumTile_C.AssignProductToTile
// 0x0168 (0x0168 - 0x0000)
struct UI_BattlePassBuyPremiumTile_C_AssignProductToTile final
{
public:
	struct FBattlePassSeasonProducts              BattlePassSeasonProducts;                          // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         PriceAfterDiscount;                                // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             ProductImageTexture;                               // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OwnedHardCurrency;                                 // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PriceWithoutDiscount;                              // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DiscountPercent;                                   // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameStoreProducts*                     CallFunc_GetGameStoreProductsManager_ReturnValue;  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetGameStoreProductInfoById_ProductFound; // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameStoreProductInfo                  CallFunc_GetGameStoreProductInfoById_ReturnValue;  // 0x0050(0x0050)(ConstParm)
	bool                                          CallFunc_IsBattlePassProductValid_IsProductValid;  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_IsBattlePassProductValid_NumberOfBoughtLevels; // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x00A8(0x0028)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x00D0(0x0018)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x00E8(0x0028)()
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerState*                      K2Node_DynamicCast_AsHuman_Player_State;           // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AStash*                                 CallFunc_GetStash_ReturnValue;                     // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetHardCurrency_ReturnValue;              // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13D[0x3];                                      // 0x013D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0140(0x0018)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetFinalPremiumPrice_FinalPrice;          // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_BattlePassBuyPremiumTile_C_AssignProductToTile) == 0x000008, "Wrong alignment on UI_BattlePassBuyPremiumTile_C_AssignProductToTile");
static_assert(sizeof(UI_BattlePassBuyPremiumTile_C_AssignProductToTile) == 0x000168, "Wrong size on UI_BattlePassBuyPremiumTile_C_AssignProductToTile");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_AssignProductToTile, BattlePassSeasonProducts) == 0x000000, "Member 'UI_BattlePassBuyPremiumTile_C_AssignProductToTile::BattlePassSeasonProducts' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_AssignProductToTile, PriceAfterDiscount) == 0x000020, "Member 'UI_BattlePassBuyPremiumTile_C_AssignProductToTile::PriceAfterDiscount' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_AssignProductToTile, ProductImageTexture) == 0x000028, "Member 'UI_BattlePassBuyPremiumTile_C_AssignProductToTile::ProductImageTexture' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_AssignProductToTile, OwnedHardCurrency) == 0x000030, "Member 'UI_BattlePassBuyPremiumTile_C_AssignProductToTile::OwnedHardCurrency' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_AssignProductToTile, PriceWithoutDiscount) == 0x000034, "Member 'UI_BattlePassBuyPremiumTile_C_AssignProductToTile::PriceWithoutDiscount' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_AssignProductToTile, DiscountPercent) == 0x000038, "Member 'UI_BattlePassBuyPremiumTile_C_AssignProductToTile::DiscountPercent' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_AssignProductToTile, CallFunc_GetGameStoreProductsManager_ReturnValue) == 0x000040, "Member 'UI_BattlePassBuyPremiumTile_C_AssignProductToTile::CallFunc_GetGameStoreProductsManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_AssignProductToTile, CallFunc_GetGameStoreProductInfoById_ProductFound) == 0x000048, "Member 'UI_BattlePassBuyPremiumTile_C_AssignProductToTile::CallFunc_GetGameStoreProductInfoById_ProductFound' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_AssignProductToTile, CallFunc_GetGameStoreProductInfoById_ReturnValue) == 0x000050, "Member 'UI_BattlePassBuyPremiumTile_C_AssignProductToTile::CallFunc_GetGameStoreProductInfoById_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_AssignProductToTile, CallFunc_IsBattlePassProductValid_IsProductValid) == 0x0000A0, "Member 'UI_BattlePassBuyPremiumTile_C_AssignProductToTile::CallFunc_IsBattlePassProductValid_IsProductValid' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_AssignProductToTile, CallFunc_IsBattlePassProductValid_NumberOfBoughtLevels) == 0x0000A4, "Member 'UI_BattlePassBuyPremiumTile_C_AssignProductToTile::CallFunc_IsBattlePassProductValid_NumberOfBoughtLevels' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_AssignProductToTile, K2Node_MakeStruct_SlateColor) == 0x0000A8, "Member 'UI_BattlePassBuyPremiumTile_C_AssignProductToTile::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_AssignProductToTile, CallFunc_Conv_IntToText_ReturnValue) == 0x0000D0, "Member 'UI_BattlePassBuyPremiumTile_C_AssignProductToTile::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_AssignProductToTile, K2Node_MakeStruct_SlateColor_1) == 0x0000E8, "Member 'UI_BattlePassBuyPremiumTile_C_AssignProductToTile::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_AssignProductToTile, CallFunc_GetOwningPlayer_ReturnValue) == 0x000110, "Member 'UI_BattlePassBuyPremiumTile_C_AssignProductToTile::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_AssignProductToTile, CallFunc_IsValid_ReturnValue) == 0x000118, "Member 'UI_BattlePassBuyPremiumTile_C_AssignProductToTile::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_AssignProductToTile, K2Node_DynamicCast_AsHuman_Player_State) == 0x000120, "Member 'UI_BattlePassBuyPremiumTile_C_AssignProductToTile::K2Node_DynamicCast_AsHuman_Player_State' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_AssignProductToTile, K2Node_DynamicCast_bSuccess) == 0x000128, "Member 'UI_BattlePassBuyPremiumTile_C_AssignProductToTile::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_AssignProductToTile, CallFunc_GetStash_ReturnValue) == 0x000130, "Member 'UI_BattlePassBuyPremiumTile_C_AssignProductToTile::CallFunc_GetStash_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_AssignProductToTile, CallFunc_GetHardCurrency_ReturnValue) == 0x000138, "Member 'UI_BattlePassBuyPremiumTile_C_AssignProductToTile::CallFunc_GetHardCurrency_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_AssignProductToTile, CallFunc_IsValid_ReturnValue_1) == 0x00013C, "Member 'UI_BattlePassBuyPremiumTile_C_AssignProductToTile::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_AssignProductToTile, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000140, "Member 'UI_BattlePassBuyPremiumTile_C_AssignProductToTile::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_AssignProductToTile, CallFunc_Greater_IntInt_ReturnValue) == 0x000158, "Member 'UI_BattlePassBuyPremiumTile_C_AssignProductToTile::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_AssignProductToTile, CallFunc_GetFinalPremiumPrice_FinalPrice) == 0x00015C, "Member 'UI_BattlePassBuyPremiumTile_C_AssignProductToTile::CallFunc_GetFinalPremiumPrice_FinalPrice' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_AssignProductToTile, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000160, "Member 'UI_BattlePassBuyPremiumTile_C_AssignProductToTile::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function UI_BattlePassBuyPremiumTile.UI_BattlePassBuyPremiumTile_C.SetProductText
// 0x0090 (0x0090 - 0x0000)
struct UI_BattlePassBuyPremiumTile_C_SetProductText final
{
public:
	class FText                                   ProductText;                                       // 0x0000(0x0018)(Edit, BlueprintVisible)
	int32                                         CallFunc_GetNumberOfBoughtLevels_NumberOfBoughtLevels; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0060(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0070(0x0018)()
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_BattlePassBuyPremiumTile_C_SetProductText) == 0x000008, "Wrong alignment on UI_BattlePassBuyPremiumTile_C_SetProductText");
static_assert(sizeof(UI_BattlePassBuyPremiumTile_C_SetProductText) == 0x000090, "Wrong size on UI_BattlePassBuyPremiumTile_C_SetProductText");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_SetProductText, ProductText) == 0x000000, "Member 'UI_BattlePassBuyPremiumTile_C_SetProductText::ProductText' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_SetProductText, CallFunc_GetNumberOfBoughtLevels_NumberOfBoughtLevels) == 0x000018, "Member 'UI_BattlePassBuyPremiumTile_C_SetProductText::CallFunc_GetNumberOfBoughtLevels_NumberOfBoughtLevels' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_SetProductText, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'UI_BattlePassBuyPremiumTile_C_SetProductText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_SetProductText, K2Node_MakeArray_Array) == 0x000060, "Member 'UI_BattlePassBuyPremiumTile_C_SetProductText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_SetProductText, CallFunc_Format_ReturnValue) == 0x000070, "Member 'UI_BattlePassBuyPremiumTile_C_SetProductText::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_SetProductText, K2Node_SwitchInteger_CmpSuccess) == 0x000088, "Member 'UI_BattlePassBuyPremiumTile_C_SetProductText::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function UI_BattlePassBuyPremiumTile.UI_BattlePassBuyPremiumTile_C.SetProductPurchaseability
// 0x0040 (0x0040 - 0x0000)
struct UI_BattlePassBuyPremiumTile_C_SetProductPurchaseability final
{
public:
	int32                                         NumOfBoughtLevelsIn;                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SeasonMaxLevel;                                    // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentBattlePassLevel;                            // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePassSystem*                      CallFunc_GetBattlePassSystem_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_BattlePassSystem_C*                 K2Node_DynamicCast_AsBP_Battle_Pass_System;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Get_Level_Level;                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Get_Season_Name_Active_Season_Name;       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Season_Max_Level_Max_Level;           // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattlePassBuyPremiumTile_C_SetProductPurchaseability) == 0x000008, "Wrong alignment on UI_BattlePassBuyPremiumTile_C_SetProductPurchaseability");
static_assert(sizeof(UI_BattlePassBuyPremiumTile_C_SetProductPurchaseability) == 0x000040, "Wrong size on UI_BattlePassBuyPremiumTile_C_SetProductPurchaseability");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_SetProductPurchaseability, NumOfBoughtLevelsIn) == 0x000000, "Member 'UI_BattlePassBuyPremiumTile_C_SetProductPurchaseability::NumOfBoughtLevelsIn' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_SetProductPurchaseability, SeasonMaxLevel) == 0x000004, "Member 'UI_BattlePassBuyPremiumTile_C_SetProductPurchaseability::SeasonMaxLevel' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_SetProductPurchaseability, CurrentBattlePassLevel) == 0x000008, "Member 'UI_BattlePassBuyPremiumTile_C_SetProductPurchaseability::CurrentBattlePassLevel' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_SetProductPurchaseability, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'UI_BattlePassBuyPremiumTile_C_SetProductPurchaseability::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_SetProductPurchaseability, CallFunc_Add_IntInt_ReturnValue_1) == 0x000010, "Member 'UI_BattlePassBuyPremiumTile_C_SetProductPurchaseability::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_SetProductPurchaseability, CallFunc_Less_IntInt_ReturnValue) == 0x000014, "Member 'UI_BattlePassBuyPremiumTile_C_SetProductPurchaseability::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_SetProductPurchaseability, CallFunc_GetBattlePassSystem_ReturnValue) == 0x000018, "Member 'UI_BattlePassBuyPremiumTile_C_SetProductPurchaseability::CallFunc_GetBattlePassSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_SetProductPurchaseability, K2Node_DynamicCast_AsBP_Battle_Pass_System) == 0x000020, "Member 'UI_BattlePassBuyPremiumTile_C_SetProductPurchaseability::K2Node_DynamicCast_AsBP_Battle_Pass_System' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_SetProductPurchaseability, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'UI_BattlePassBuyPremiumTile_C_SetProductPurchaseability::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_SetProductPurchaseability, CallFunc_Get_Level_Level) == 0x00002C, "Member 'UI_BattlePassBuyPremiumTile_C_SetProductPurchaseability::CallFunc_Get_Level_Level' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_SetProductPurchaseability, CallFunc_Get_Season_Name_Active_Season_Name) == 0x000030, "Member 'UI_BattlePassBuyPremiumTile_C_SetProductPurchaseability::CallFunc_Get_Season_Name_Active_Season_Name' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_SetProductPurchaseability, CallFunc_Get_Season_Max_Level_Max_Level) == 0x000038, "Member 'UI_BattlePassBuyPremiumTile_C_SetProductPurchaseability::CallFunc_Get_Season_Max_Level_Max_Level' has a wrong offset!");

// Function UI_BattlePassBuyPremiumTile.UI_BattlePassBuyPremiumTile_C.GetFinalPremiumPrice
// 0x0014 (0x0014 - 0x0000)
struct UI_BattlePassBuyPremiumTile_C_GetFinalPremiumPrice final
{
public:
	int32                                         Price;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DiscountPercent;                                   // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PriceAfterDiscount;                                // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FinalPrice_0;                                      // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_BattlePassBuyPremiumTile_C_GetFinalPremiumPrice) == 0x000004, "Wrong alignment on UI_BattlePassBuyPremiumTile_C_GetFinalPremiumPrice");
static_assert(sizeof(UI_BattlePassBuyPremiumTile_C_GetFinalPremiumPrice) == 0x000014, "Wrong size on UI_BattlePassBuyPremiumTile_C_GetFinalPremiumPrice");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_GetFinalPremiumPrice, Price) == 0x000000, "Member 'UI_BattlePassBuyPremiumTile_C_GetFinalPremiumPrice::Price' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_GetFinalPremiumPrice, DiscountPercent) == 0x000004, "Member 'UI_BattlePassBuyPremiumTile_C_GetFinalPremiumPrice::DiscountPercent' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_GetFinalPremiumPrice, PriceAfterDiscount) == 0x000008, "Member 'UI_BattlePassBuyPremiumTile_C_GetFinalPremiumPrice::PriceAfterDiscount' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_GetFinalPremiumPrice, FinalPrice_0) == 0x00000C, "Member 'UI_BattlePassBuyPremiumTile_C_GetFinalPremiumPrice::FinalPrice_0' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_GetFinalPremiumPrice, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000010, "Member 'UI_BattlePassBuyPremiumTile_C_GetFinalPremiumPrice::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_GetFinalPremiumPrice, CallFunc_Greater_IntInt_ReturnValue) == 0x000011, "Member 'UI_BattlePassBuyPremiumTile_C_GetFinalPremiumPrice::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function UI_BattlePassBuyPremiumTile.UI_BattlePassBuyPremiumTile_C.Get Current Premium Product Price
// 0x0004 (0x0004 - 0x0000)
struct UI_BattlePassBuyPremiumTile_C_Get_Current_Premium_Product_Price final
{
public:
	int32                                         CurrentPremiumProductPrice;                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattlePassBuyPremiumTile_C_Get_Current_Premium_Product_Price) == 0x000004, "Wrong alignment on UI_BattlePassBuyPremiumTile_C_Get_Current_Premium_Product_Price");
static_assert(sizeof(UI_BattlePassBuyPremiumTile_C_Get_Current_Premium_Product_Price) == 0x000004, "Wrong size on UI_BattlePassBuyPremiumTile_C_Get_Current_Premium_Product_Price");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_Get_Current_Premium_Product_Price, CurrentPremiumProductPrice) == 0x000000, "Member 'UI_BattlePassBuyPremiumTile_C_Get_Current_Premium_Product_Price::CurrentPremiumProductPrice' has a wrong offset!");

// Function UI_BattlePassBuyPremiumTile.UI_BattlePassBuyPremiumTile_C.GetPremiumBattlePassProductID
// 0x0010 (0x0010 - 0x0000)
struct UI_BattlePassBuyPremiumTile_C_GetPremiumBattlePassProductID final
{
public:
	class FString                                 PremiumBattlePassProductID_0;                      // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattlePassBuyPremiumTile_C_GetPremiumBattlePassProductID) == 0x000008, "Wrong alignment on UI_BattlePassBuyPremiumTile_C_GetPremiumBattlePassProductID");
static_assert(sizeof(UI_BattlePassBuyPremiumTile_C_GetPremiumBattlePassProductID) == 0x000010, "Wrong size on UI_BattlePassBuyPremiumTile_C_GetPremiumBattlePassProductID");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_GetPremiumBattlePassProductID, PremiumBattlePassProductID_0) == 0x000000, "Member 'UI_BattlePassBuyPremiumTile_C_GetPremiumBattlePassProductID::PremiumBattlePassProductID_0' has a wrong offset!");

// Function UI_BattlePassBuyPremiumTile.UI_BattlePassBuyPremiumTile_C.IsBattlePassProductValid
// 0x0118 (0x0118 - 0x0000)
struct UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid final
{
public:
	struct FGameStoreProductInfo                  PremiumBattlePassProductIn;                        // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          IsProductValid;                                    // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NumberOfBoughtLevels_0;                            // 0x0054(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentItemBaseAmount;                             // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CurrentItemClass;                                  // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_BattlePassSystem_C*                 BattlePassSystem;                                  // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 LevelToken;                                        // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 PremiumToken;                                      // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LevelItemCount;                                    // 0x0080(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PremiumItemCount;                                  // 0x0084(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Get_Current_Season_Level_Token_LevelToken; // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_Get_Current_Season_Premium_Token_PremiumToken; // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue_1;               // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue_1;      // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePassSystem*                      CallFunc_GetBattlePassSystem_ReturnValue;          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_BattlePassSystem_C*                 K2Node_DynamicCast_AsBP_Battle_Pass_System;        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BA[0x6];                                       // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameStoreBundleInfo                   CallFunc_Array_Get_Item;                           // 0x00C0(0x0028)()
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EA[0x6];                                       // 0x00EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameStoreItemInfo                     CallFunc_Array_Get_Item_1;                         // 0x00F0(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue_2;               // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_105[0x3];                                      // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid) == 0x000008, "Wrong alignment on UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid");
static_assert(sizeof(UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid) == 0x000118, "Wrong size on UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid, PremiumBattlePassProductIn) == 0x000000, "Member 'UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid::PremiumBattlePassProductIn' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid, IsProductValid) == 0x000050, "Member 'UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid::IsProductValid' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid, NumberOfBoughtLevels_0) == 0x000054, "Member 'UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid::NumberOfBoughtLevels_0' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid, CurrentItemBaseAmount) == 0x000058, "Member 'UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid::CurrentItemBaseAmount' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid, CurrentItemClass) == 0x000060, "Member 'UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid::CurrentItemClass' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid, BattlePassSystem) == 0x000068, "Member 'UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid::BattlePassSystem' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid, LevelToken) == 0x000070, "Member 'UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid::LevelToken' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid, PremiumToken) == 0x000078, "Member 'UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid::PremiumToken' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid, LevelItemCount) == 0x000080, "Member 'UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid::LevelItemCount' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid, PremiumItemCount) == 0x000084, "Member 'UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid::PremiumItemCount' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid, Temp_int_Array_Index_Variable) == 0x000088, "Member 'UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid, CallFunc_Get_Current_Season_Level_Token_LevelToken) == 0x000090, "Member 'UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid::CallFunc_Get_Current_Season_Level_Token_LevelToken' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid, CallFunc_Get_Current_Season_Premium_Token_PremiumToken) == 0x000098, "Member 'UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid::CallFunc_Get_Current_Season_Premium_Token_PremiumToken' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid, CallFunc_IsValidClass_ReturnValue) == 0x0000A0, "Member 'UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid, CallFunc_IsValidClass_ReturnValue_1) == 0x0000A1, "Member 'UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid::CallFunc_IsValidClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000A2, "Member 'UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x0000A3, "Member 'UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid, CallFunc_EqualEqual_ClassClass_ReturnValue_1) == 0x0000A4, "Member 'UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid::CallFunc_EqualEqual_ClassClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid, CallFunc_GetBattlePassSystem_ReturnValue) == 0x0000A8, "Member 'UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid::CallFunc_GetBattlePassSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid, K2Node_DynamicCast_AsBP_Battle_Pass_System) == 0x0000B0, "Member 'UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid::K2Node_DynamicCast_AsBP_Battle_Pass_System' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid, K2Node_DynamicCast_bSuccess) == 0x0000B8, "Member 'UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000B9, "Member 'UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid, CallFunc_Array_Get_Item) == 0x0000C0, "Member 'UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000E8, "Member 'UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid, CallFunc_BooleanAND_ReturnValue) == 0x0000E9, "Member 'UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid, CallFunc_Array_Get_Item_1) == 0x0000F0, "Member 'UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid, CallFunc_Array_Length_ReturnValue) == 0x000100, "Member 'UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid, CallFunc_IsValidClass_ReturnValue_2) == 0x000104, "Member 'UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid::CallFunc_IsValidClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid, Temp_int_Loop_Counter_Variable) == 0x000108, "Member 'UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid, CallFunc_Less_IntInt_ReturnValue) == 0x00010C, "Member 'UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid, CallFunc_Add_IntInt_ReturnValue) == 0x000110, "Member 'UI_BattlePassBuyPremiumTile_C_IsBattlePassProductValid::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function UI_BattlePassBuyPremiumTile.UI_BattlePassBuyPremiumTile_C.GetNumberOfBoughtLevels
// 0x0004 (0x0004 - 0x0000)
struct UI_BattlePassBuyPremiumTile_C_GetNumberOfBoughtLevels final
{
public:
	int32                                         NumberOfBoughtLevels_0;                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattlePassBuyPremiumTile_C_GetNumberOfBoughtLevels) == 0x000004, "Wrong alignment on UI_BattlePassBuyPremiumTile_C_GetNumberOfBoughtLevels");
static_assert(sizeof(UI_BattlePassBuyPremiumTile_C_GetNumberOfBoughtLevels) == 0x000004, "Wrong size on UI_BattlePassBuyPremiumTile_C_GetNumberOfBoughtLevels");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_GetNumberOfBoughtLevels, NumberOfBoughtLevels_0) == 0x000000, "Member 'UI_BattlePassBuyPremiumTile_C_GetNumberOfBoughtLevels::NumberOfBoughtLevels_0' has a wrong offset!");

// Function UI_BattlePassBuyPremiumTile.UI_BattlePassBuyPremiumTile_C.GetIsProductPurchasable
// 0x0001 (0x0001 - 0x0000)
struct UI_BattlePassBuyPremiumTile_C_GetIsProductPurchasable final
{
public:
	bool                                          IsProductPurchasable_0;                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_BattlePassBuyPremiumTile_C_GetIsProductPurchasable) == 0x000001, "Wrong alignment on UI_BattlePassBuyPremiumTile_C_GetIsProductPurchasable");
static_assert(sizeof(UI_BattlePassBuyPremiumTile_C_GetIsProductPurchasable) == 0x000001, "Wrong size on UI_BattlePassBuyPremiumTile_C_GetIsProductPurchasable");
static_assert(offsetof(UI_BattlePassBuyPremiumTile_C_GetIsProductPurchasable, IsProductPurchasable_0) == 0x000000, "Member 'UI_BattlePassBuyPremiumTile_C_GetIsProductPurchasable::IsProductPurchasable_0' has a wrong offset!");

}

