#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VegetationModifierComponent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "PhysicsCore_structs.hpp"


namespace SDK::Params
{

// Function BP_VegetationModifierComponent.BP_VegetationModifierComponent_C.ExecuteUbergraph_BP_VegetationModifierComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_VegetationModifierComponent_C_ExecuteUbergraph_BP_VegetationModifierComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VegetationModifierComponent_C_ExecuteUbergraph_BP_VegetationModifierComponent) == 0x000004, "Wrong alignment on BP_VegetationModifierComponent_C_ExecuteUbergraph_BP_VegetationModifierComponent");
static_assert(sizeof(BP_VegetationModifierComponent_C_ExecuteUbergraph_BP_VegetationModifierComponent) == 0x000008, "Wrong size on BP_VegetationModifierComponent_C_ExecuteUbergraph_BP_VegetationModifierComponent");
static_assert(offsetof(BP_VegetationModifierComponent_C_ExecuteUbergraph_BP_VegetationModifierComponent, EntryPoint) == 0x000000, "Member 'BP_VegetationModifierComponent_C_ExecuteUbergraph_BP_VegetationModifierComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_ExecuteUbergraph_BP_VegetationModifierComponent, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_VegetationModifierComponent_C_ExecuteUbergraph_BP_VegetationModifierComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");

// Function BP_VegetationModifierComponent.BP_VegetationModifierComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_VegetationModifierComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VegetationModifierComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_VegetationModifierComponent_C_ReceiveTick");
static_assert(sizeof(BP_VegetationModifierComponent_C_ReceiveTick) == 0x000004, "Wrong size on BP_VegetationModifierComponent_C_ReceiveTick");
static_assert(offsetof(BP_VegetationModifierComponent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_VegetationModifierComponent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_VegetationModifierComponent.BP_VegetationModifierComponent_C.FindVegetationModifyActors
// 0x0038 (0x0038 - 0x0000)
struct BP_VegetationModifierComponent_C_FindVegetationModifyActors final
{
public:
	TArray<class ABP_VegetationModify_Bend_C*>    CallFunc_GetAllActorsOfClass_OutActors;            // 0x0000(0x0010)(ReferenceParm)
	TArray<class ABP_VegetationModify_Flatten_C*> CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x0010(0x0010)(ReferenceParm)
	class ABP_VegetationModify_Bend_C*            CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_VegetationModify_Flatten_C*         CallFunc_Array_Get_Item_1;                         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VegetationModifierComponent_C_FindVegetationModifyActors) == 0x000008, "Wrong alignment on BP_VegetationModifierComponent_C_FindVegetationModifyActors");
static_assert(sizeof(BP_VegetationModifierComponent_C_FindVegetationModifyActors) == 0x000038, "Wrong size on BP_VegetationModifierComponent_C_FindVegetationModifyActors");
static_assert(offsetof(BP_VegetationModifierComponent_C_FindVegetationModifyActors, CallFunc_GetAllActorsOfClass_OutActors) == 0x000000, "Member 'BP_VegetationModifierComponent_C_FindVegetationModifyActors::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_FindVegetationModifyActors, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x000010, "Member 'BP_VegetationModifierComponent_C_FindVegetationModifyActors::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_FindVegetationModifyActors, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_VegetationModifierComponent_C_FindVegetationModifyActors::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_FindVegetationModifyActors, CallFunc_Array_Get_Item_1) == 0x000028, "Member 'BP_VegetationModifierComponent_C_FindVegetationModifyActors::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_FindVegetationModifyActors, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000030, "Member 'BP_VegetationModifierComponent_C_FindVegetationModifyActors::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_FindVegetationModifyActors, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000031, "Member 'BP_VegetationModifierComponent_C_FindVegetationModifyActors::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");

// Function BP_VegetationModifierComponent.BP_VegetationModifierComponent_C.Simulate
// 0x0074 (0x0074 - 0x0000)
struct BP_VegetationModifierComponent_C_Simulate final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                WorldPosition;                                     // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BendRadiusOffset;                                  // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BendPositionOffset;                                // 0x0014(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetModifierWorldPosition_NewParam;        // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E[0x2];                                       // 0x006E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VegetationModifierComponent_C_Simulate) == 0x000004, "Wrong alignment on BP_VegetationModifierComponent_C_Simulate");
static_assert(sizeof(BP_VegetationModifierComponent_C_Simulate) == 0x000074, "Wrong size on BP_VegetationModifierComponent_C_Simulate");
static_assert(offsetof(BP_VegetationModifierComponent_C_Simulate, DeltaSeconds) == 0x000000, "Member 'BP_VegetationModifierComponent_C_Simulate::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_Simulate, WorldPosition) == 0x000004, "Member 'BP_VegetationModifierComponent_C_Simulate::WorldPosition' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_Simulate, BendRadiusOffset) == 0x000010, "Member 'BP_VegetationModifierComponent_C_Simulate::BendRadiusOffset' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_Simulate, BendPositionOffset) == 0x000014, "Member 'BP_VegetationModifierComponent_C_Simulate::BendPositionOffset' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_Simulate, CallFunc_GetModifierWorldPosition_NewParam) == 0x000020, "Member 'BP_VegetationModifierComponent_C_Simulate::CallFunc_GetModifierWorldPosition_NewParam' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_Simulate, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00002C, "Member 'BP_VegetationModifierComponent_C_Simulate::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_Simulate, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000030, "Member 'BP_VegetationModifierComponent_C_Simulate::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_Simulate, CallFunc_VSize_ReturnValue) == 0x000034, "Member 'BP_VegetationModifierComponent_C_Simulate::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_Simulate, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_VegetationModifierComponent_C_Simulate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_Simulate, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00003C, "Member 'BP_VegetationModifierComponent_C_Simulate::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_Simulate, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000040, "Member 'BP_VegetationModifierComponent_C_Simulate::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_Simulate, CallFunc_FMin_ReturnValue) == 0x000044, "Member 'BP_VegetationModifierComponent_C_Simulate::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_Simulate, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000048, "Member 'BP_VegetationModifierComponent_C_Simulate::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_Simulate, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00004C, "Member 'BP_VegetationModifierComponent_C_Simulate::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_Simulate, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000050, "Member 'BP_VegetationModifierComponent_C_Simulate::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_Simulate, CallFunc_Add_VectorVector_ReturnValue) == 0x00005C, "Member 'BP_VegetationModifierComponent_C_Simulate::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_Simulate, CallFunc_Add_FloatFloat_ReturnValue) == 0x000068, "Member 'BP_VegetationModifierComponent_C_Simulate::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_Simulate, CallFunc_BooleanAND_ReturnValue) == 0x00006C, "Member 'BP_VegetationModifierComponent_C_Simulate::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_Simulate, CallFunc_BooleanAND_ReturnValue_1) == 0x00006D, "Member 'BP_VegetationModifierComponent_C_Simulate::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_Simulate, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000070, "Member 'BP_VegetationModifierComponent_C_Simulate::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_VegetationModifierComponent.BP_VegetationModifierComponent_C.InitCurCheckTime
// 0x0008 (0x0008 - 0x0000)
struct BP_VegetationModifierComponent_C_InitCurCheckTime final
{
public:
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VegetationModifierComponent_C_InitCurCheckTime) == 0x000004, "Wrong alignment on BP_VegetationModifierComponent_C_InitCurCheckTime");
static_assert(sizeof(BP_VegetationModifierComponent_C_InitCurCheckTime) == 0x000008, "Wrong size on BP_VegetationModifierComponent_C_InitCurCheckTime");
static_assert(offsetof(BP_VegetationModifierComponent_C_InitCurCheckTime, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000000, "Member 'BP_VegetationModifierComponent_C_InitCurCheckTime::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_InitCurCheckTime, CallFunc_RandomFloatInRange_ReturnValue) == 0x000004, "Member 'BP_VegetationModifierComponent_C_InitCurCheckTime::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");

// Function BP_VegetationModifierComponent.BP_VegetationModifierComponent_C.CheckShouldAdd
// 0x0240 (0x0240 - 0x0000)
struct BP_VegetationModifierComponent_C_CheckShouldAdd final
{
public:
	struct FVector                                WorldPosition;                                     // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CheckBend;                                         // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CheckFlatten;                                      // 0x000D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         HitDistance;                                       // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 HitActor;                                          // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0038(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ALandscapeProxy*                        K2Node_DynamicCast_AsLandscape_Proxy;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ALandscape*                             K2Node_DynamicCast_AsLandscape;                    // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x008C(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11B[0x1];                                      // 0x011B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0168(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              CallFunc_BreakHitResult_ShapeSurfaceType;          // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x3];                                      // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0174(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0194(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A2[0x2];                                      // 0x01A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x01B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x01C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x01D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC[0x4];                                      // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x01F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              CallFunc_BreakHitResult_ShapeSurfaceType_1;        // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F9[0x3];                                      // 0x01F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x01FC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x0210(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x021C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_235[0x3];                                      // 0x0235(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VegetationModifierComponent_C_CheckShouldAdd) == 0x000008, "Wrong alignment on BP_VegetationModifierComponent_C_CheckShouldAdd");
static_assert(sizeof(BP_VegetationModifierComponent_C_CheckShouldAdd) == 0x000240, "Wrong size on BP_VegetationModifierComponent_C_CheckShouldAdd");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, WorldPosition) == 0x000000, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::WorldPosition' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, CheckBend) == 0x00000C, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::CheckBend' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, CheckFlatten) == 0x00000D, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::CheckFlatten' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, HitDistance) == 0x000010, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::HitDistance' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, HitActor) == 0x000018, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::HitActor' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, CallFunc_Add_VectorVector_ReturnValue) == 0x000020, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, CallFunc_BreakVector_X) == 0x00002C, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, CallFunc_BreakVector_Y) == 0x000030, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, CallFunc_BreakVector_Z) == 0x000034, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, Temp_object_Variable) == 0x000038, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, CallFunc_IsValid_ReturnValue_1) == 0x000049, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, K2Node_DynamicCast_AsLandscape_Proxy) == 0x000050, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::K2Node_DynamicCast_AsLandscape_Proxy' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, K2Node_DynamicCast_AsLandscape) == 0x000060, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::K2Node_DynamicCast_AsLandscape' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, CallFunc_IsValid_ReturnValue_2) == 0x000069, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00006A, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x00006B, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, CallFunc_FMax_ReturnValue) == 0x00006C, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, CallFunc_BooleanOR_ReturnValue) == 0x000070, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, CallFunc_MakeVector_ReturnValue) == 0x000074, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000080, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, CallFunc_LineTraceSingle_OutHit) == 0x00008C, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, CallFunc_LineTraceSingle_ReturnValue) == 0x000118, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, CallFunc_BreakHitResult_bBlockingHit) == 0x000119, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, CallFunc_BreakHitResult_bInitialOverlap) == 0x00011A, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, CallFunc_BreakHitResult_Time) == 0x00011C, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, CallFunc_BreakHitResult_Distance) == 0x000120, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, CallFunc_BreakHitResult_Location) == 0x000124, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, CallFunc_BreakHitResult_ImpactPoint) == 0x000130, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, CallFunc_BreakHitResult_Normal) == 0x00013C, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, CallFunc_BreakHitResult_ImpactNormal) == 0x000148, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, CallFunc_BreakHitResult_PhysMat) == 0x000158, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, CallFunc_BreakHitResult_HitActor) == 0x000160, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, CallFunc_BreakHitResult_HitComponent) == 0x000168, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, CallFunc_BreakHitResult_ShapeSurfaceType) == 0x000170, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::CallFunc_BreakHitResult_ShapeSurfaceType' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, CallFunc_BreakHitResult_HitBoneName) == 0x000174, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, CallFunc_BreakHitResult_HitItem) == 0x00017C, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, CallFunc_BreakHitResult_ElementIndex) == 0x000180, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, CallFunc_BreakHitResult_FaceIndex) == 0x000184, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, CallFunc_BreakHitResult_TraceStart) == 0x000188, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, CallFunc_BreakHitResult_TraceEnd) == 0x000194, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, CallFunc_BreakHitResult_bBlockingHit_1) == 0x0001A0, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x0001A1, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, CallFunc_BreakHitResult_Time_1) == 0x0001A4, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, CallFunc_BreakHitResult_Distance_1) == 0x0001A8, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, CallFunc_BreakHitResult_Location_1) == 0x0001AC, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, CallFunc_BreakHitResult_ImpactPoint_1) == 0x0001B8, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, CallFunc_BreakHitResult_Normal_1) == 0x0001C4, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, CallFunc_BreakHitResult_ImpactNormal_1) == 0x0001D0, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, CallFunc_BreakHitResult_PhysMat_1) == 0x0001E0, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, CallFunc_BreakHitResult_HitActor_1) == 0x0001E8, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, CallFunc_BreakHitResult_HitComponent_1) == 0x0001F0, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, CallFunc_BreakHitResult_ShapeSurfaceType_1) == 0x0001F8, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::CallFunc_BreakHitResult_ShapeSurfaceType_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, CallFunc_BreakHitResult_HitBoneName_1) == 0x0001FC, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, CallFunc_BreakHitResult_HitItem_1) == 0x000204, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, CallFunc_BreakHitResult_ElementIndex_1) == 0x000208, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, CallFunc_BreakHitResult_FaceIndex_1) == 0x00020C, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, CallFunc_BreakHitResult_TraceStart_1) == 0x000210, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, CallFunc_BreakHitResult_TraceEnd_1) == 0x00021C, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, CallFunc_BreakVector_X_1) == 0x000228, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, CallFunc_BreakVector_Y_1) == 0x00022C, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, CallFunc_BreakVector_Z_1) == 0x000230, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, CallFunc_IsValid_ReturnValue_3) == 0x000234, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000238, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_CheckShouldAdd, CallFunc_Abs_ReturnValue) == 0x00023C, "Member 'BP_VegetationModifierComponent_C_CheckShouldAdd::CallFunc_Abs_ReturnValue' has a wrong offset!");

// Function BP_VegetationModifierComponent.BP_VegetationModifierComponent_C.InitCharacterMovementComponent
// 0x0038 (0x0038 - 0x0000)
struct BP_VegetationModifierComponent_C_InitCharacterMovementComponent final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPawnMovementComponent*                 CallFunc_GetMovementComponent_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            K2Node_DynamicCast_AsCharacter_Movement_Component; // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VegetationModifierComponent_C_InitCharacterMovementComponent) == 0x000008, "Wrong alignment on BP_VegetationModifierComponent_C_InitCharacterMovementComponent");
static_assert(sizeof(BP_VegetationModifierComponent_C_InitCharacterMovementComponent) == 0x000038, "Wrong size on BP_VegetationModifierComponent_C_InitCharacterMovementComponent");
static_assert(offsetof(BP_VegetationModifierComponent_C_InitCharacterMovementComponent, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'BP_VegetationModifierComponent_C_InitCharacterMovementComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_InitCharacterMovementComponent, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_VegetationModifierComponent_C_InitCharacterMovementComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_InitCharacterMovementComponent, K2Node_DynamicCast_AsCharacter) == 0x000010, "Member 'BP_VegetationModifierComponent_C_InitCharacterMovementComponent::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_InitCharacterMovementComponent, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_VegetationModifierComponent_C_InitCharacterMovementComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_InitCharacterMovementComponent, CallFunc_GetMovementComponent_ReturnValue) == 0x000020, "Member 'BP_VegetationModifierComponent_C_InitCharacterMovementComponent::CallFunc_GetMovementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_InitCharacterMovementComponent, K2Node_DynamicCast_AsCharacter_Movement_Component) == 0x000028, "Member 'BP_VegetationModifierComponent_C_InitCharacterMovementComponent::K2Node_DynamicCast_AsCharacter_Movement_Component' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_InitCharacterMovementComponent, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_VegetationModifierComponent_C_InitCharacterMovementComponent::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_VegetationModifierComponent.BP_VegetationModifierComponent_C.AddFlattenModifier
// 0x0014 (0x0014 - 0x0000)
struct BP_VegetationModifierComponent_C_AddFlattenModifier final
{
public:
	struct FVector                                WorldPosition;                                     // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius;                                            // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VegetationModifierComponent_C_AddFlattenModifier) == 0x000004, "Wrong alignment on BP_VegetationModifierComponent_C_AddFlattenModifier");
static_assert(sizeof(BP_VegetationModifierComponent_C_AddFlattenModifier) == 0x000014, "Wrong size on BP_VegetationModifierComponent_C_AddFlattenModifier");
static_assert(offsetof(BP_VegetationModifierComponent_C_AddFlattenModifier, WorldPosition) == 0x000000, "Member 'BP_VegetationModifierComponent_C_AddFlattenModifier::WorldPosition' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_AddFlattenModifier, Radius) == 0x00000C, "Member 'BP_VegetationModifierComponent_C_AddFlattenModifier::Radius' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_AddFlattenModifier, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_VegetationModifierComponent_C_AddFlattenModifier::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_VegetationModifierComponent.BP_VegetationModifierComponent_C.AddBendModifier
// 0x0014 (0x0014 - 0x0000)
struct BP_VegetationModifierComponent_C_AddBendModifier final
{
public:
	struct FVector                                WorldPosition;                                     // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius;                                            // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VegetationModifierComponent_C_AddBendModifier) == 0x000004, "Wrong alignment on BP_VegetationModifierComponent_C_AddBendModifier");
static_assert(sizeof(BP_VegetationModifierComponent_C_AddBendModifier) == 0x000014, "Wrong size on BP_VegetationModifierComponent_C_AddBendModifier");
static_assert(offsetof(BP_VegetationModifierComponent_C_AddBendModifier, WorldPosition) == 0x000000, "Member 'BP_VegetationModifierComponent_C_AddBendModifier::WorldPosition' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_AddBendModifier, Radius) == 0x00000C, "Member 'BP_VegetationModifierComponent_C_AddBendModifier::Radius' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_AddBendModifier, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_VegetationModifierComponent_C_AddBendModifier::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_VegetationModifierComponent.BP_VegetationModifierComponent_C.DebugPrint
// 0x0028 (0x0028 - 0x0000)
struct BP_VegetationModifierComponent_C_DebugPrint final
{
public:
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VegetationModifierComponent_C_DebugPrint) == 0x000008, "Wrong alignment on BP_VegetationModifierComponent_C_DebugPrint");
static_assert(sizeof(BP_VegetationModifierComponent_C_DebugPrint) == 0x000028, "Wrong size on BP_VegetationModifierComponent_C_DebugPrint");
static_assert(offsetof(BP_VegetationModifierComponent_C_DebugPrint, CallFunc_GetPlayerPawn_ReturnValue) == 0x000000, "Member 'BP_VegetationModifierComponent_C_DebugPrint::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_DebugPrint, CallFunc_Conv_FloatToString_ReturnValue) == 0x000008, "Member 'BP_VegetationModifierComponent_C_DebugPrint::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_DebugPrint, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'BP_VegetationModifierComponent_C_DebugPrint::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_DebugPrint, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000020, "Member 'BP_VegetationModifierComponent_C_DebugPrint::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_VegetationModifierComponent.BP_VegetationModifierComponent_C.GetModifierWorldPosition
// 0x0030 (0x0030 - 0x0000)
struct BP_VegetationModifierComponent_C_GetModifierWorldPosition final
{
public:
	struct FVector                                NewParam;                                          // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VegetationModifierComponent_C_GetModifierWorldPosition) == 0x000008, "Wrong alignment on BP_VegetationModifierComponent_C_GetModifierWorldPosition");
static_assert(sizeof(BP_VegetationModifierComponent_C_GetModifierWorldPosition) == 0x000030, "Wrong size on BP_VegetationModifierComponent_C_GetModifierWorldPosition");
static_assert(offsetof(BP_VegetationModifierComponent_C_GetModifierWorldPosition, NewParam) == 0x000000, "Member 'BP_VegetationModifierComponent_C_GetModifierWorldPosition::NewParam' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_GetModifierWorldPosition, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00000C, "Member 'BP_VegetationModifierComponent_C_GetModifierWorldPosition::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_GetModifierWorldPosition, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'BP_VegetationModifierComponent_C_GetModifierWorldPosition::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_GetModifierWorldPosition, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'BP_VegetationModifierComponent_C_GetModifierWorldPosition::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VegetationModifierComponent_C_GetModifierWorldPosition, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'BP_VegetationModifierComponent_C_GetModifierWorldPosition::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

