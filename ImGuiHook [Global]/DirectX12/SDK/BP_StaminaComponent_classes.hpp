#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_StaminaComponent

#include "Basic.hpp"

#include "Flame_structs.hpp"
#include "Flame_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_StaminaComponent.BP_StaminaComponent_C
// 0x0088 (0x0290 - 0x0208)
class UBP_StaminaComponent_C final : public UStaminaBreathingComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0208(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UPostProcessComponent*                  PostProcessComponent;                              // 0x0210(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Character_C*                        OwningCharacter;                                   // 0x0218(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPostProcessComponent*                  ExhaustedPostProcess;                              // 0x0220(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               BreathPS;                                          // 0x0228(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnHoldBreathStarted;                               // 0x0230(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnHoldBreathEnded;                                 // 0x0240(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UCurveFloat*                            StaminaCurve;                                      // 0x0250(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            HearthbeatRateCurve;                               // 0x0258(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        HearthbeatAudioComponent;                          // 0x0260(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Timer_CheckStamina;                                // 0x0268(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Analytics_Seconds_At_0_Stamina;                    // 0x0270(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<int32>                                 Analytics_Seconds_Under25_Stamina;                 // 0x0280(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void OnHoldBreathStarted__DelegateSignature();
	void OnHoldBreathEnded__DelegateSignature();
	void ExecuteUbergraph_BP_StaminaComponent(int32 EntryPoint);
	void ClearStaminaAnalytics();
	void Analytics_Mark_Stamina();
	void Stop_StaminaCheckTimer();
	void StaminaCheck_Loop();
	void StartTracking_Stamina(bool CheckImmediately);
	void OnStaminaStartedRegenerating();
	void OnDepleteStamina();
	void OnEffectRemoved(class FName EffectName);
	void OnBreatheCough(const struct FBreathProperties& BreathProperties);
	void OnBreatheOut(const struct FBreathProperties& BreathProperties);
	void OnBreatheIn(const struct FBreathProperties& BreathProperties);
	void OnHoldBreathEnd(const struct FBreathProperties& BreathProperties, bool bForced);
	void OnHoldBreathStart(const struct FBreathProperties& BreathProperties);
	void OnDeath();
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void UpdateStaminaPostprocess();
	void UpdateExhaustionPostprocess();
	void PrintDebugInfo();
	void SetHearthbeatRate(float Value, bool Enabled);
	void GetTimeStampAdjustedAnalytics(float LastTimeStamp, TArray<int32>* Seconds_At0_Stamina, TArray<int32>* Seconds_Under25_Stamina);

	EBreathType GetBreathType(EBreathType PreviousBreathType, const struct FBreathProperties& PreviousBreathProperties) const;
	struct FBreathProperties GetBreathProperties(float DeltaTime, EBreathType NewBreathType, EBreathType PreviousBreathType, const struct FBreathProperties& PreviousBreathProperties) const;
	float GetBreathSoundVolume(EBreathType BreathType, const struct FBreathProperties& BreathProperties, bool Is1PersonView) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_StaminaComponent_C">();
	}
	static class UBP_StaminaComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_StaminaComponent_C>();
	}
};
static_assert(alignof(UBP_StaminaComponent_C) == 0x000008, "Wrong alignment on UBP_StaminaComponent_C");
static_assert(sizeof(UBP_StaminaComponent_C) == 0x000290, "Wrong size on UBP_StaminaComponent_C");
static_assert(offsetof(UBP_StaminaComponent_C, UberGraphFrame) == 0x000208, "Member 'UBP_StaminaComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_StaminaComponent_C, PostProcessComponent) == 0x000210, "Member 'UBP_StaminaComponent_C::PostProcessComponent' has a wrong offset!");
static_assert(offsetof(UBP_StaminaComponent_C, OwningCharacter) == 0x000218, "Member 'UBP_StaminaComponent_C::OwningCharacter' has a wrong offset!");
static_assert(offsetof(UBP_StaminaComponent_C, ExhaustedPostProcess) == 0x000220, "Member 'UBP_StaminaComponent_C::ExhaustedPostProcess' has a wrong offset!");
static_assert(offsetof(UBP_StaminaComponent_C, BreathPS) == 0x000228, "Member 'UBP_StaminaComponent_C::BreathPS' has a wrong offset!");
static_assert(offsetof(UBP_StaminaComponent_C, OnHoldBreathStarted) == 0x000230, "Member 'UBP_StaminaComponent_C::OnHoldBreathStarted' has a wrong offset!");
static_assert(offsetof(UBP_StaminaComponent_C, OnHoldBreathEnded) == 0x000240, "Member 'UBP_StaminaComponent_C::OnHoldBreathEnded' has a wrong offset!");
static_assert(offsetof(UBP_StaminaComponent_C, StaminaCurve) == 0x000250, "Member 'UBP_StaminaComponent_C::StaminaCurve' has a wrong offset!");
static_assert(offsetof(UBP_StaminaComponent_C, HearthbeatRateCurve) == 0x000258, "Member 'UBP_StaminaComponent_C::HearthbeatRateCurve' has a wrong offset!");
static_assert(offsetof(UBP_StaminaComponent_C, HearthbeatAudioComponent) == 0x000260, "Member 'UBP_StaminaComponent_C::HearthbeatAudioComponent' has a wrong offset!");
static_assert(offsetof(UBP_StaminaComponent_C, Timer_CheckStamina) == 0x000268, "Member 'UBP_StaminaComponent_C::Timer_CheckStamina' has a wrong offset!");
static_assert(offsetof(UBP_StaminaComponent_C, Analytics_Seconds_At_0_Stamina) == 0x000270, "Member 'UBP_StaminaComponent_C::Analytics_Seconds_At_0_Stamina' has a wrong offset!");
static_assert(offsetof(UBP_StaminaComponent_C, Analytics_Seconds_Under25_Stamina) == 0x000280, "Member 'UBP_StaminaComponent_C::Analytics_Seconds_Under25_Stamina' has a wrong offset!");

}

