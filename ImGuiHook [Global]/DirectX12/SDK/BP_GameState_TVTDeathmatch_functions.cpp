#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GameState_TVTDeathmatch

#include "Basic.hpp"

#include "BP_GameState_TVTDeathmatch_classes.hpp"
#include "BP_GameState_TVTDeathmatch_parameters.hpp"


namespace SDK
{

// Function BP_GameState_TVTDeathmatch.BP_GameState_TVTDeathmatch_C.ExecuteUbergraph_BP_GameState_TVTDeathmatch
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameState_TVTDeathmatch_C::ExecuteUbergraph_BP_GameState_TVTDeathmatch(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameState_TVTDeathmatch_C", "ExecuteUbergraph_BP_GameState_TVTDeathmatch");

	Params::BP_GameState_TVTDeathmatch_C_ExecuteUbergraph_BP_GameState_TVTDeathmatch Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameState_TVTDeathmatch.BP_GameState_TVTDeathmatch_C.Clear UI
// (BlueprintCallable, BlueprintEvent)

void ABP_GameState_TVTDeathmatch_C::Clear_UI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameState_TVTDeathmatch_C", "Clear UI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameState_TVTDeathmatch.BP_GameState_TVTDeathmatch_C.Handle Match Phase
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// E_TeamsMatchPhase                       Match_Phase_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameState_TVTDeathmatch_C::Handle_Match_Phase(E_TeamsMatchPhase Match_Phase_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameState_TVTDeathmatch_C", "Handle Match Phase");

	Params::BP_GameState_TVTDeathmatch_C_Handle_Match_Phase Parms{};

	Parms.Match_Phase_0 = Match_Phase_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameState_TVTDeathmatch.BP_GameState_TVTDeathmatch_C.Replicate Match Start Wait Time
// (BlueprintCallable, BlueprintEvent)

void ABP_GameState_TVTDeathmatch_C::Replicate_Match_Start_Wait_Time()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameState_TVTDeathmatch_C", "Replicate Match Start Wait Time");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameState_TVTDeathmatch.BP_GameState_TVTDeathmatch_C.Add Inactive Player Statistic
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FStruct_TVTDeathmatchStatistics  Player_Statistic                                       (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_GameState_TVTDeathmatch_C::Add_Inactive_Player_Statistic(const struct FStruct_TVTDeathmatchStatistics& Player_Statistic)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameState_TVTDeathmatch_C", "Add Inactive Player Statistic");

	Params::BP_GameState_TVTDeathmatch_C_Add_Inactive_Player_Statistic Parms{};

	Parms.Player_Statistic = std::move(Player_Statistic);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameState_TVTDeathmatch.BP_GameState_TVTDeathmatch_C.Player Scored 7 Kill Streak
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PlayerController_C*           Player_Controller                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Player_name                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// EFlamePlatform                          PlayerPlatform                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameState_TVTDeathmatch_C::Player_Scored_7_Kill_Streak(class ABP_PlayerController_C* Player_Controller, const class FString& Player_name, EFlamePlatform PlayerPlatform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameState_TVTDeathmatch_C", "Player Scored 7 Kill Streak");

	Params::BP_GameState_TVTDeathmatch_C_Player_Scored_7_Kill_Streak Parms{};

	Parms.Player_Controller = Player_Controller;
	Parms.Player_name = std::move(Player_name);
	Parms.PlayerPlatform = PlayerPlatform;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameState_TVTDeathmatch.BP_GameState_TVTDeathmatch_C.Last Man Standing Started
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_GameState_TVTDeathmatch_C::Last_Man_Standing_Started()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameState_TVTDeathmatch_C", "Last Man Standing Started");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameState_TVTDeathmatch.BP_GameState_TVTDeathmatch_C.Player Scored 3 Kill Streak
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PlayerController_C*           Player_Controller                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Player_name                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// EFlamePlatform                          PlayerPlatform                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameState_TVTDeathmatch_C::Player_Scored_3_Kill_Streak(class ABP_PlayerController_C* Player_Controller, const class FString& Player_name, EFlamePlatform PlayerPlatform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameState_TVTDeathmatch_C", "Player Scored 3 Kill Streak");

	Params::BP_GameState_TVTDeathmatch_C_Player_Scored_3_Kill_Streak Parms{};

	Parms.Player_Controller = Player_Controller;
	Parms.Player_name = std::move(Player_name);
	Parms.PlayerPlatform = PlayerPlatform;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameState_TVTDeathmatch.BP_GameState_TVTDeathmatch_C.Player Scored 5 Kill Streak
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PlayerController_C*           Player_Controller                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Player_name                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// EFlamePlatform                          PlayerPlatform                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameState_TVTDeathmatch_C::Player_Scored_5_Kill_Streak(class ABP_PlayerController_C* Player_Controller, const class FString& Player_name, EFlamePlatform PlayerPlatform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameState_TVTDeathmatch_C", "Player Scored 5 Kill Streak");

	Params::BP_GameState_TVTDeathmatch_C_Player_Scored_5_Kill_Streak Parms{};

	Parms.Player_Controller = Player_Controller;
	Parms.Player_name = std::move(Player_name);
	Parms.PlayerPlatform = PlayerPlatform;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameState_TVTDeathmatch.BP_GameState_TVTDeathmatch_C.Notify Player Statistics Changed
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_GameState_TVTDeathmatch_C::Notify_Player_Statistics_Changed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameState_TVTDeathmatch_C", "Notify Player Statistics Changed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameState_TVTDeathmatch.BP_GameState_TVTDeathmatch_C.Players Update Time Remaining
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Remaining_Time                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameState_TVTDeathmatch_C::Players_Update_Time_Remaining(int32 Remaining_Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameState_TVTDeathmatch_C", "Players Update Time Remaining");

	Params::BP_GameState_TVTDeathmatch_C_Players_Update_Time_Remaining Parms{};

	Parms.Remaining_Time = Remaining_Time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameState_TVTDeathmatch.BP_GameState_TVTDeathmatch_C.Set Match Remaining Time
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Remaining_Time                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameState_TVTDeathmatch_C::Set_Match_Remaining_Time(int32 Remaining_Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameState_TVTDeathmatch_C", "Set Match Remaining Time");

	Params::BP_GameState_TVTDeathmatch_C_Set_Match_Remaining_Time Parms{};

	Parms.Remaining_Time = Remaining_Time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameState_TVTDeathmatch.BP_GameState_TVTDeathmatch_C.Last Ten Seconds In Match
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_GameState_TVTDeathmatch_C::Last_Ten_Seconds_In_Match()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameState_TVTDeathmatch_C", "Last Ten Seconds In Match");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameState_TVTDeathmatch.BP_GameState_TVTDeathmatch_C.Last Minute In Match
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_GameState_TVTDeathmatch_C::Last_Minute_In_Match()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameState_TVTDeathmatch_C", "Last Minute In Match");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameState_TVTDeathmatch.BP_GameState_TVTDeathmatch_C.Last Five Minutes In Match
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_GameState_TVTDeathmatch_C::Last_Five_Minutes_In_Match()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameState_TVTDeathmatch_C", "Last Five Minutes In Match");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameState_TVTDeathmatch.BP_GameState_TVTDeathmatch_C.Show Kill Feed
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FStruct_TVTDeathmatch_KillFeed   KillFeed                                               (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_GameState_TVTDeathmatch_C::Show_Kill_Feed(const struct FStruct_TVTDeathmatch_KillFeed& KillFeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameState_TVTDeathmatch_C", "Show Kill Feed");

	Params::BP_GameState_TVTDeathmatch_C_Show_Kill_Feed Parms{};

	Parms.KillFeed = std::move(KillFeed);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameState_TVTDeathmatch.BP_GameState_TVTDeathmatch_C.Check Remaining Time Sound Cues
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_GameState_TVTDeathmatch_C::Check_Remaining_Time_Sound_Cues()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameState_TVTDeathmatch_C", "Check Remaining Time Sound Cues");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameState_TVTDeathmatch.BP_GameState_TVTDeathmatch_C.Get Winning Player Statistics
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FStruct_TVTDeathmatchStatistics>Winning_Player_Statistics                              (Parm, OutParm)

void ABP_GameState_TVTDeathmatch_C::Get_Winning_Player_Statistics(TArray<struct FStruct_TVTDeathmatchStatistics>* Winning_Player_Statistics)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameState_TVTDeathmatch_C", "Get Winning Player Statistics");

	Params::BP_GameState_TVTDeathmatch_C_Get_Winning_Player_Statistics Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Winning_Player_Statistics != nullptr)
		*Winning_Player_Statistics = std::move(Parms.Winning_Player_Statistics);
}


// Function BP_GameState_TVTDeathmatch.BP_GameState_TVTDeathmatch_C.Get Sorted Statistics
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FStruct_TVTDeathmatchStatistics>Statistics                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<struct FStruct_TVTDeathmatchStatistics>Sorted_Statistics                                      (Parm, OutParm)

void ABP_GameState_TVTDeathmatch_C::Get_Sorted_Statistics(TArray<struct FStruct_TVTDeathmatchStatistics>& Statistics, TArray<struct FStruct_TVTDeathmatchStatistics>* Sorted_Statistics)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameState_TVTDeathmatch_C", "Get Sorted Statistics");

	Params::BP_GameState_TVTDeathmatch_C_Get_Sorted_Statistics Parms{};

	Parms.Statistics = std::move(Statistics);

	UObject::ProcessEvent(Func, &Parms);

	Statistics = std::move(Parms.Statistics);

	if (Sorted_Statistics != nullptr)
		*Sorted_Statistics = std::move(Parms.Sorted_Statistics);
}


// Function BP_GameState_TVTDeathmatch.BP_GameState_TVTDeathmatch_C.Get Statistics
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<struct FStruct_TVTDeathmatchStatistics>Statistics                                             (Parm, OutParm)

void ABP_GameState_TVTDeathmatch_C::Get_Statistics(TArray<struct FStruct_TVTDeathmatchStatistics>* Statistics)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameState_TVTDeathmatch_C", "Get Statistics");

	Params::BP_GameState_TVTDeathmatch_C_Get_Statistics Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Statistics != nullptr)
		*Statistics = std::move(Parms.Statistics);
}


// Function BP_GameState_TVTDeathmatch.BP_GameState_TVTDeathmatch_C.Find Winner Screen
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_GameState_TVTDeathmatch_C::Find_Winner_Screen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameState_TVTDeathmatch_C", "Find Winner Screen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameState_TVTDeathmatch.BP_GameState_TVTDeathmatch_C.Display Winner Screen
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_GameState_TVTDeathmatch_C::Display_Winner_Screen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameState_TVTDeathmatch_C", "Display Winner Screen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameState_TVTDeathmatch.BP_GameState_TVTDeathmatch_C.GetScoreboardTabs
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FStruct_ScoreboardTab>    Tabs                                                   (Parm, OutParm)

void ABP_GameState_TVTDeathmatch_C::GetScoreboardTabs(TArray<struct FStruct_ScoreboardTab>* Tabs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameState_TVTDeathmatch_C", "GetScoreboardTabs");

	Params::BP_GameState_TVTDeathmatch_C_GetScoreboardTabs Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Tabs != nullptr)
		*Tabs = std::move(Parms.Tabs);
}


// Function BP_GameState_TVTDeathmatch.BP_GameState_TVTDeathmatch_C.IsLocalPlayerWinning
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsWinning                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_GameState_TVTDeathmatch_C::IsLocalPlayerWinning(bool* IsWinning)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameState_TVTDeathmatch_C", "IsLocalPlayerWinning");

	Params::BP_GameState_TVTDeathmatch_C_IsLocalPlayerWinning Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsWinning != nullptr)
		*IsWinning = Parms.IsWinning;
}


// Function BP_GameState_TVTDeathmatch.BP_GameState_TVTDeathmatch_C.Get Unique Net ID From Player ID
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Player_ID                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FUniqueNetIdRepl                 Net_id                                                 (Parm, OutParm, HasGetValueTypeHash)

void ABP_GameState_TVTDeathmatch_C::Get_Unique_Net_ID_From_Player_ID(int32 Player_ID, struct FUniqueNetIdRepl* Net_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameState_TVTDeathmatch_C", "Get Unique Net ID From Player ID");

	Params::BP_GameState_TVTDeathmatch_C_Get_Unique_Net_ID_From_Player_ID Parms{};

	Parms.Player_ID = Player_ID;

	UObject::ProcessEvent(Func, &Parms);

	if (Net_id != nullptr)
		*Net_id = std::move(Parms.Net_id);
}


// Function BP_GameState_TVTDeathmatch.BP_GameState_TVTDeathmatch_C.BuildCustomMessage
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   KillCount                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Message                                                (Parm, OutParm)

void ABP_GameState_TVTDeathmatch_C::BuildCustomMessage(int32 KillCount, class FText* Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameState_TVTDeathmatch_C", "BuildCustomMessage");

	Params::BP_GameState_TVTDeathmatch_C_BuildCustomMessage Parms{};

	Parms.KillCount = KillCount;

	UObject::ProcessEvent(Func, &Parms);

	if (Message != nullptr)
		*Message = std::move(Parms.Message);
}


// Function BP_GameState_TVTDeathmatch.BP_GameState_TVTDeathmatch_C.GetGameModeStringName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           StringName                                             (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void ABP_GameState_TVTDeathmatch_C::GetGameModeStringName(class FString* StringName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameState_TVTDeathmatch_C", "GetGameModeStringName");

	Params::BP_GameState_TVTDeathmatch_C_GetGameModeStringName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (StringName != nullptr)
		*StringName = std::move(Parms.StringName);
}


// Function BP_GameState_TVTDeathmatch.BP_GameState_TVTDeathmatch_C.Get Weight Based Random Items
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FCloudMatchLootboxItem>   Items                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// int32                                   ItemSpawnCount                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FCloudItemInfo>           PickedItems                                            (Parm, OutParm)

void ABP_GameState_TVTDeathmatch_C::Get_Weight_Based_Random_Items(TArray<struct FCloudMatchLootboxItem>& Items, int32 ItemSpawnCount, TArray<struct FCloudItemInfo>* PickedItems)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameState_TVTDeathmatch_C", "Get Weight Based Random Items");

	Params::BP_GameState_TVTDeathmatch_C_Get_Weight_Based_Random_Items Parms{};

	Parms.Items = std::move(Items);
	Parms.ItemSpawnCount = ItemSpawnCount;

	UObject::ProcessEvent(Func, &Parms);

	Items = std::move(Parms.Items);

	if (PickedItems != nullptr)
		*PickedItems = std::move(Parms.PickedItems);
}


// Function BP_GameState_TVTDeathmatch.BP_GameState_TVTDeathmatch_C.Get Weight Based Random Item
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<struct FCloudMatchLootboxItem>   Items                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FCloudMatchLootboxItem           PickedItem                                             (Parm, OutParm)

void ABP_GameState_TVTDeathmatch_C::Get_Weight_Based_Random_Item(TArray<struct FCloudMatchLootboxItem>& Items, struct FCloudMatchLootboxItem* PickedItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameState_TVTDeathmatch_C", "Get Weight Based Random Item");

	Params::BP_GameState_TVTDeathmatch_C_Get_Weight_Based_Random_Item Parms{};

	Parms.Items = std::move(Items);

	UObject::ProcessEvent(Func, &Parms);

	Items = std::move(Parms.Items);

	if (PickedItem != nullptr)
		*PickedItem = std::move(Parms.PickedItem);
}


// Function BP_GameState_TVTDeathmatch.BP_GameState_TVTDeathmatch_C.Get Cloud Lootbox Definition by Type
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// ECloudMatchLootboxType                  Box_Type                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Found                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FCloudMatchLootbox               LootboxDefinition                                      (Parm, OutParm)

void ABP_GameState_TVTDeathmatch_C::Get_Cloud_Lootbox_Definition_by_Type(ECloudMatchLootboxType Box_Type, bool* Found, struct FCloudMatchLootbox* LootboxDefinition) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameState_TVTDeathmatch_C", "Get Cloud Lootbox Definition by Type");

	Params::BP_GameState_TVTDeathmatch_C_Get_Cloud_Lootbox_Definition_by_Type Parms{};

	Parms.Box_Type = Box_Type;

	UObject::ProcessEvent(Func, &Parms);

	if (Found != nullptr)
		*Found = Parms.Found;

	if (LootboxDefinition != nullptr)
		*LootboxDefinition = std::move(Parms.LootboxDefinition);
}

}

