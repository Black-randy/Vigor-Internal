#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Paginator

#include "Basic.hpp"

#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_Paginator.UI_Paginator_C
// 0x0028 (0x0288 - 0x0260)
class UUI_Paginator_C final : public UUserWidget
{
public:
	class UHorizontalBox*                         Paginator;                                         // 0x0260(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_PaginatorMarker_C*                  TEST_UI_PaginatorMarker;                           // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_PaginatorMarker_C*                  TEST_UI_PaginatorMarker_101;                       // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_PaginatorMarker_C*                  TEST_UI_PaginatorMarker_206;                       // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         Number_of_Pages;                                   // 0x0280(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Active_Page_Index;                                 // 0x0284(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Set_Number_of_Pages(int32 Number_of_Pages_0);
	void Next_Page();
	void Previous_Page();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_Paginator_C">();
	}
	static class UUI_Paginator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_Paginator_C>();
	}
};
static_assert(alignof(UUI_Paginator_C) == 0x000008, "Wrong alignment on UUI_Paginator_C");
static_assert(sizeof(UUI_Paginator_C) == 0x000288, "Wrong size on UUI_Paginator_C");
static_assert(offsetof(UUI_Paginator_C, Paginator) == 0x000260, "Member 'UUI_Paginator_C::Paginator' has a wrong offset!");
static_assert(offsetof(UUI_Paginator_C, TEST_UI_PaginatorMarker) == 0x000268, "Member 'UUI_Paginator_C::TEST_UI_PaginatorMarker' has a wrong offset!");
static_assert(offsetof(UUI_Paginator_C, TEST_UI_PaginatorMarker_101) == 0x000270, "Member 'UUI_Paginator_C::TEST_UI_PaginatorMarker_101' has a wrong offset!");
static_assert(offsetof(UUI_Paginator_C, TEST_UI_PaginatorMarker_206) == 0x000278, "Member 'UUI_Paginator_C::TEST_UI_PaginatorMarker_206' has a wrong offset!");
static_assert(offsetof(UUI_Paginator_C, Number_of_Pages) == 0x000280, "Member 'UUI_Paginator_C::Number_of_Pages' has a wrong offset!");
static_assert(offsetof(UUI_Paginator_C, Active_Page_Index) == 0x000284, "Member 'UUI_Paginator_C::Active_Page_Index' has a wrong offset!");

}

