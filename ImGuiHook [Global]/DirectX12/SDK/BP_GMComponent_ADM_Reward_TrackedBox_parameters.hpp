#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GMComponent_ADM_Reward_TrackedBox

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_GMComponent_ADM_Reward_TrackedBox.BP_GMComponent_ADM_Reward_TrackedBox_C.ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox
// 0x00B8 (0x00B8 - 0x0000)
struct BP_GMComponent_ADM_Reward_TrackedBox_C_ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Active;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Handle_Valid_and_Timer_Exists_Return_Value; // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Handle_Valid_and_Timer_Exists_Return_Value_1; // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_Game_Mode_Is_Running;                 // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F[0x1];                                        // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AirDropContainer_Base_C*            K2Node_CustomEvent_Looted_Container;               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_CustomEvent_Item_Taken;                     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0050(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ABP_AirDropContainer_Base_C* Looted_Container, class UClass* Item_Taken)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0060(0x0010)(ZeroConstructor, NoDestructor)
	class ABP_GameMode_AirDropModular_C*          K2Node_DynamicCast_AsBP_Game_Mode_Air_Drop_Modular; // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerGroupsManager_C*              K2Node_DynamicCast_AsBP_Player_Groups_Manager;     // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Get_Largest_Group_Size_Size;              // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_1;                // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameMode_AirDropModular_C*          K2Node_DynamicCast_AsBP_Game_Mode_Air_Drop_Modular_1; // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AA[0x2];                                       // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GMComponent_ADM_Reward_TrackedBox_C_ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox) == 0x000008, "Wrong alignment on BP_GMComponent_ADM_Reward_TrackedBox_C_ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox");
static_assert(sizeof(BP_GMComponent_ADM_Reward_TrackedBox_C_ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox) == 0x0000B8, "Wrong size on BP_GMComponent_ADM_Reward_TrackedBox_C_ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox, EntryPoint) == 0x000000, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox, K2Node_CustomEvent_Active) == 0x000004, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox::K2Node_CustomEvent_Active' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000008, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox, CallFunc_Handle_Valid_and_Timer_Exists_Return_Value) == 0x00000C, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox::CallFunc_Handle_Valid_and_Timer_Exists_Return_Value' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox, CallFunc_Handle_Valid_and_Timer_Exists_Return_Value_1) == 0x00000D, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox::CallFunc_Handle_Valid_and_Timer_Exists_Return_Value_1' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox, K2Node_Event_Game_Mode_Is_Running) == 0x00000E, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox::K2Node_Event_Game_Mode_Is_Running' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000020, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox, K2Node_CreateDelegate_OutputDelegate_1) == 0x000028, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000038, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox, K2Node_CustomEvent_Looted_Container) == 0x000040, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox::K2Node_CustomEvent_Looted_Container' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox, K2Node_CustomEvent_Item_Taken) == 0x000048, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox::K2Node_CustomEvent_Item_Taken' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000050, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox, CallFunc_GetGameMode_ReturnValue) == 0x000058, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox, K2Node_CreateDelegate_OutputDelegate_2) == 0x000060, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox, K2Node_DynamicCast_AsBP_Game_Mode_Air_Drop_Modular) == 0x000070, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox::K2Node_DynamicCast_AsBP_Game_Mode_Air_Drop_Modular' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox, CallFunc_Array_Add_ReturnValue) == 0x00007C, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox, K2Node_DynamicCast_AsBP_Player_Groups_Manager) == 0x000080, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox::K2Node_DynamicCast_AsBP_Player_Groups_Manager' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox, K2Node_DynamicCast_bSuccess_1) == 0x000088, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox, CallFunc_Get_Largest_Group_Size_Size) == 0x00008C, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox::CallFunc_Get_Largest_Group_Size_Size' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox, CallFunc_GetGameMode_ReturnValue_1) == 0x000090, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox::CallFunc_GetGameMode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox, Temp_int_Variable) == 0x000098, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox, K2Node_DynamicCast_AsBP_Game_Mode_Air_Drop_Modular_1) == 0x0000A0, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox::K2Node_DynamicCast_AsBP_Game_Mode_Air_Drop_Modular_1' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox, K2Node_DynamicCast_bSuccess_2) == 0x0000A8, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000A9, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox, CallFunc_Add_IntInt_ReturnValue) == 0x0000AC, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox, CallFunc_Array_Add_ReturnValue_1) == 0x0000B0, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_ExecuteUbergraph_BP_GMComponent_ADM_Reward_TrackedBox::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BP_GMComponent_ADM_Reward_TrackedBox.BP_GMComponent_ADM_Reward_TrackedBox_C.Toggle comm station stealth buff
// 0x0001 (0x0001 - 0x0000)
struct BP_GMComponent_ADM_Reward_TrackedBox_C_Toggle_comm_station_stealth_buff final
{
public:
	bool                                          Active;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GMComponent_ADM_Reward_TrackedBox_C_Toggle_comm_station_stealth_buff) == 0x000001, "Wrong alignment on BP_GMComponent_ADM_Reward_TrackedBox_C_Toggle_comm_station_stealth_buff");
static_assert(sizeof(BP_GMComponent_ADM_Reward_TrackedBox_C_Toggle_comm_station_stealth_buff) == 0x000001, "Wrong size on BP_GMComponent_ADM_Reward_TrackedBox_C_Toggle_comm_station_stealth_buff");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Toggle_comm_station_stealth_buff, Active) == 0x000000, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Toggle_comm_station_stealth_buff::Active' has a wrong offset!");

// Function BP_GMComponent_ADM_Reward_TrackedBox.BP_GMComponent_ADM_Reward_TrackedBox_C.Start Tracking
// 0x0010 (0x0010 - 0x0000)
struct BP_GMComponent_ADM_Reward_TrackedBox_C_Start_Tracking final
{
public:
	class ABP_AirDropContainer_Base_C*            Looted_Container;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Item_Taken;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GMComponent_ADM_Reward_TrackedBox_C_Start_Tracking) == 0x000008, "Wrong alignment on BP_GMComponent_ADM_Reward_TrackedBox_C_Start_Tracking");
static_assert(sizeof(BP_GMComponent_ADM_Reward_TrackedBox_C_Start_Tracking) == 0x000010, "Wrong size on BP_GMComponent_ADM_Reward_TrackedBox_C_Start_Tracking");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Start_Tracking, Looted_Container) == 0x000000, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Start_Tracking::Looted_Container' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Start_Tracking, Item_Taken) == 0x000008, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Start_Tracking::Item_Taken' has a wrong offset!");

// Function BP_GMComponent_ADM_Reward_TrackedBox.BP_GMComponent_ADM_Reward_TrackedBox_C.Game Mode Toggled
// 0x0001 (0x0001 - 0x0000)
struct BP_GMComponent_ADM_Reward_TrackedBox_C_Game_Mode_Toggled final
{
public:
	bool                                          Game_Mode_Is_Running;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GMComponent_ADM_Reward_TrackedBox_C_Game_Mode_Toggled) == 0x000001, "Wrong alignment on BP_GMComponent_ADM_Reward_TrackedBox_C_Game_Mode_Toggled");
static_assert(sizeof(BP_GMComponent_ADM_Reward_TrackedBox_C_Game_Mode_Toggled) == 0x000001, "Wrong size on BP_GMComponent_ADM_Reward_TrackedBox_C_Game_Mode_Toggled");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Game_Mode_Toggled, Game_Mode_Is_Running) == 0x000000, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Game_Mode_Toggled::Game_Mode_Is_Running' has a wrong offset!");

// Function BP_GMComponent_ADM_Reward_TrackedBox.BP_GMComponent_ADM_Reward_TrackedBox_C.Ping Carriers
// 0x0158 (0x0158 - 0x0000)
struct BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers final
{
public:
	TArray<struct FVector>                        Corpse_Locations;                                  // 0x0000(0x0010)(Edit, BlueprintVisible)
	TArray<struct FVector>                        Carrier_s_Locations;                               // 0x0010(0x0010)(Edit, BlueprintVisible)
	TArray<class UBP_PCComponent_ADM_C*>          Carrier_s_Components;                              // 0x0020(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item_1;                         // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PCComponent_ADM_C*                  CallFunc_Array_Get_Item_2;                         // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_AirDropModular_C*  CallFunc_Get_Player_Controller_Player_Controller;  // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_PhysicsCorpseLoot_C*>        CallFunc_GetAllActorsOfClass_OutActors;            // 0x00B0(0x0010)(ReferenceParm)
	class ABP_PhysicsCorpseLoot_C*                CallFunc_Array_Get_Item_3;                         // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_PCComponent_ADM_C*                  CallFunc_Array_Get_Item_4;                         // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CountOfResource_ReturnValue;              // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PCComponent_ADM_Reward_TrackedBox_C* K2Node_DynamicCast_AsBP_PCComponent_ADM_Reward_Tracked_Box; // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FB[0x1];                                       // 0x00FB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_PCComponent_ADM_C*                  CallFunc_Array_Get_Item_5;                         // 0x0108(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_AirDropModular_C*  CallFunc_Get_Player_Controller_Player_Controller_1; // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanCharacter*                        K2Node_DynamicCast_AsHuman_Character;              // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItemsGrid*                             CallFunc_GetBackpack_ReturnValue;                  // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CountOfResource_ReturnValue_1;            // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers) == 0x000008, "Wrong alignment on BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers");
static_assert(sizeof(BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers) == 0x000158, "Wrong size on BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers, Corpse_Locations) == 0x000000, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers::Corpse_Locations' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers, Carrier_s_Locations) == 0x000010, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers::Carrier_s_Locations' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers, Carrier_s_Components) == 0x000020, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers::Carrier_s_Components' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers, Temp_int_Array_Index_Variable) == 0x000034, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers, Temp_int_Loop_Counter_Variable_1) == 0x00003C, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers, CallFunc_Add_IntInt_ReturnValue_1) == 0x000040, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers, Temp_int_Array_Index_Variable_1) == 0x000044, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers, Temp_int_Loop_Counter_Variable_2) == 0x000048, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers, Temp_int_Loop_Counter_Variable_3) == 0x00004C, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers, CallFunc_Add_IntInt_ReturnValue_2) == 0x000050, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers, CallFunc_Add_IntInt_ReturnValue_3) == 0x000054, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers, Temp_int_Array_Index_Variable_2) == 0x000058, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers, Temp_int_Array_Index_Variable_3) == 0x00005C, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers, CallFunc_Array_Get_Item) == 0x000060, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers, CallFunc_Array_Get_Item_1) == 0x00006C, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers, Temp_int_Loop_Counter_Variable_4) == 0x00007C, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers, CallFunc_Add_IntInt_ReturnValue_4) == 0x000084, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers, Temp_int_Array_Index_Variable_4) == 0x000088, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers, CallFunc_Array_Get_Item_2) == 0x000090, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers, CallFunc_Array_Length_ReturnValue_1) == 0x000098, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers, CallFunc_Get_Player_Controller_Player_Controller) == 0x0000A0, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers::CallFunc_Get_Player_Controller_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000A8, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers, CallFunc_GetAllActorsOfClass_OutActors) == 0x0000B0, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers, CallFunc_Array_Get_Item_3) == 0x0000C0, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers, CallFunc_Array_Length_ReturnValue_2) == 0x0000C8, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000CC, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000D8, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers, CallFunc_Array_Add_ReturnValue) == 0x0000DC, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers, CallFunc_Array_Get_Item_4) == 0x0000E0, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers, CallFunc_CountOfResource_ReturnValue) == 0x0000E8, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers::CallFunc_CountOfResource_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers, K2Node_DynamicCast_AsBP_PCComponent_ADM_Reward_Tracked_Box) == 0x0000F0, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers::K2Node_DynamicCast_AsBP_PCComponent_ADM_Reward_Tracked_Box' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers, K2Node_DynamicCast_bSuccess) == 0x0000F8, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers, CallFunc_Greater_IntInt_ReturnValue) == 0x0000F9, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x0000FA, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers, CallFunc_Array_Length_ReturnValue_3) == 0x0000FC, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers, CallFunc_Less_IntInt_ReturnValue_3) == 0x000100, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers, CallFunc_Array_Length_ReturnValue_4) == 0x000104, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers, CallFunc_Array_Get_Item_5) == 0x000108, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers, CallFunc_Less_IntInt_ReturnValue_4) == 0x000110, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers, CallFunc_Array_Add_ReturnValue_1) == 0x000114, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers, CallFunc_Get_Player_Controller_Player_Controller_1) == 0x000118, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers::CallFunc_Get_Player_Controller_Player_Controller_1' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers, CallFunc_K2_GetPawn_ReturnValue) == 0x000120, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers, K2Node_DynamicCast_AsHuman_Character) == 0x000128, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers::K2Node_DynamicCast_AsHuman_Character' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers, K2Node_DynamicCast_bSuccess_1) == 0x000130, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000134, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers, CallFunc_GetBackpack_ReturnValue) == 0x000140, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers::CallFunc_GetBackpack_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers, CallFunc_Array_Add_ReturnValue_2) == 0x000148, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers, CallFunc_CountOfResource_ReturnValue_1) == 0x00014C, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers::CallFunc_CountOfResource_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000150, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Ping_Carriers::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_GMComponent_ADM_Reward_TrackedBox.BP_GMComponent_ADM_Reward_TrackedBox_C.Create PCComponent for Player Controller
// 0x0028 (0x0028 - 0x0000)
struct BP_GMComponent_ADM_Reward_TrackedBox_C_Create_PCComponent_for_Player_Controller final
{
public:
	class ABP_PlayerController_AirDropModular_C*  Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_PCComponent_ADM_C*                  Player_Controller_Component;                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_PCComponent_ADM_C*                  CallFunc_Create_PCComponent_for_Player_Controller_Player_Controller_Component; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_PCComponent_ADM_Reward_TrackedBox_C* K2Node_DynamicCast_AsBP_PCComponent_ADM_Reward_Tracked_Box; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GMComponent_ADM_Reward_TrackedBox_C_Create_PCComponent_for_Player_Controller) == 0x000008, "Wrong alignment on BP_GMComponent_ADM_Reward_TrackedBox_C_Create_PCComponent_for_Player_Controller");
static_assert(sizeof(BP_GMComponent_ADM_Reward_TrackedBox_C_Create_PCComponent_for_Player_Controller) == 0x000028, "Wrong size on BP_GMComponent_ADM_Reward_TrackedBox_C_Create_PCComponent_for_Player_Controller");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Create_PCComponent_for_Player_Controller, Controller) == 0x000000, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Create_PCComponent_for_Player_Controller::Controller' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Create_PCComponent_for_Player_Controller, Player_Controller_Component) == 0x000008, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Create_PCComponent_for_Player_Controller::Player_Controller_Component' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Create_PCComponent_for_Player_Controller, CallFunc_Create_PCComponent_for_Player_Controller_Player_Controller_Component) == 0x000010, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Create_PCComponent_for_Player_Controller::CallFunc_Create_PCComponent_for_Player_Controller_Player_Controller_Component' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Create_PCComponent_for_Player_Controller, K2Node_DynamicCast_AsBP_PCComponent_ADM_Reward_Tracked_Box) == 0x000018, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Create_PCComponent_for_Player_Controller::K2Node_DynamicCast_AsBP_PCComponent_ADM_Reward_Tracked_Box' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Create_PCComponent_for_Player_Controller, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Create_PCComponent_for_Player_Controller::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_GMComponent_ADM_Reward_TrackedBox.BP_GMComponent_ADM_Reward_TrackedBox_C.Is Player Winner
// 0x0038 (0x0038 - 0x0000)
struct BP_GMComponent_ADM_Reward_TrackedBox_C_Is_Player_Winner final
{
public:
	class ABP_PlayerController_AirDropModular_C*  Player_Controller;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Player_Is_Winner;                                  // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Output_is_Valid;                                   // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanCharacter*                        K2Node_DynamicCast_AsHuman_Character;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemsGrid*                             CallFunc_GetBackpack_ReturnValue;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CountOfResource_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GMComponent_ADM_Reward_TrackedBox_C_Is_Player_Winner) == 0x000008, "Wrong alignment on BP_GMComponent_ADM_Reward_TrackedBox_C_Is_Player_Winner");
static_assert(sizeof(BP_GMComponent_ADM_Reward_TrackedBox_C_Is_Player_Winner) == 0x000038, "Wrong size on BP_GMComponent_ADM_Reward_TrackedBox_C_Is_Player_Winner");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Is_Player_Winner, Player_Controller) == 0x000000, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Is_Player_Winner::Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Is_Player_Winner, Player_Is_Winner) == 0x000008, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Is_Player_Winner::Player_Is_Winner' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Is_Player_Winner, Output_is_Valid) == 0x000009, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Is_Player_Winner::Output_is_Valid' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Is_Player_Winner, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Is_Player_Winner::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Is_Player_Winner, K2Node_DynamicCast_AsHuman_Character) == 0x000018, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Is_Player_Winner::K2Node_DynamicCast_AsHuman_Character' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Is_Player_Winner, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Is_Player_Winner::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Is_Player_Winner, CallFunc_GetBackpack_ReturnValue) == 0x000028, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Is_Player_Winner::CallFunc_GetBackpack_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Is_Player_Winner, CallFunc_CountOfResource_ReturnValue) == 0x000030, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Is_Player_Winner::CallFunc_CountOfResource_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Is_Player_Winner, CallFunc_Greater_IntInt_ReturnValue) == 0x000034, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Is_Player_Winner::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_GMComponent_ADM_Reward_TrackedBox.BP_GMComponent_ADM_Reward_TrackedBox_C.Initialize Bindings
// 0x0038 (0x0038 - 0x0000)
struct BP_GMComponent_ADM_Reward_TrackedBox_C_Initialize_Bindings final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class ABP_AirDropContainer_Base_C* Looted_Container, class UClass* Item_Taken)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Initialize_Bindings_Success;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameMode_AirDropModular_C*          K2Node_DynamicCast_AsBP_Game_Mode_Air_Drop_Modular; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GMComponent_ADM_Reward_TrackedBox_C_Initialize_Bindings) == 0x000008, "Wrong alignment on BP_GMComponent_ADM_Reward_TrackedBox_C_Initialize_Bindings");
static_assert(sizeof(BP_GMComponent_ADM_Reward_TrackedBox_C_Initialize_Bindings) == 0x000038, "Wrong size on BP_GMComponent_ADM_Reward_TrackedBox_C_Initialize_Bindings");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Initialize_Bindings, Success) == 0x000000, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Initialize_Bindings::Success' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Initialize_Bindings, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Initialize_Bindings::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Initialize_Bindings, CallFunc_GetGameMode_ReturnValue) == 0x000018, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Initialize_Bindings::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Initialize_Bindings, CallFunc_Initialize_Bindings_Success) == 0x000020, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Initialize_Bindings::CallFunc_Initialize_Bindings_Success' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Initialize_Bindings, K2Node_DynamicCast_AsBP_Game_Mode_Air_Drop_Modular) == 0x000028, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Initialize_Bindings::K2Node_DynamicCast_AsBP_Game_Mode_Air_Drop_Modular' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Initialize_Bindings, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Initialize_Bindings::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_GMComponent_ADM_Reward_TrackedBox.BP_GMComponent_ADM_Reward_TrackedBox_C.Get Rewards For Player
// 0x0068 (0x0068 - 0x0000)
struct BP_GMComponent_ADM_Reward_TrackedBox_C_Get_Rewards_For_Player final
{
public:
	class ABP_PlayerController_AirDropModular_C*  Player_Controller;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         Rewards;                                           // 0x0008(0x0010)(Parm, OutParm)
	TArray<class FString>                         Accumulated_Rewards;                               // 0x0018(0x0010)(Edit, BlueprintVisible)
	class FString                                 Temp_string_Variable;                              // 0x0028(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Character_Matches_C*                K2Node_DynamicCast_AsBP_Character_Matches;         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemsGrid*                             CallFunc_GetBackpack_ReturnValue;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CountOfResource_ReturnValue;              // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GMComponent_ADM_Reward_TrackedBox_C_Get_Rewards_For_Player) == 0x000008, "Wrong alignment on BP_GMComponent_ADM_Reward_TrackedBox_C_Get_Rewards_For_Player");
static_assert(sizeof(BP_GMComponent_ADM_Reward_TrackedBox_C_Get_Rewards_For_Player) == 0x000068, "Wrong size on BP_GMComponent_ADM_Reward_TrackedBox_C_Get_Rewards_For_Player");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Get_Rewards_For_Player, Player_Controller) == 0x000000, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Get_Rewards_For_Player::Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Get_Rewards_For_Player, Rewards) == 0x000008, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Get_Rewards_For_Player::Rewards' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Get_Rewards_For_Player, Accumulated_Rewards) == 0x000018, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Get_Rewards_For_Player::Accumulated_Rewards' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Get_Rewards_For_Player, Temp_string_Variable) == 0x000028, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Get_Rewards_For_Player::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Get_Rewards_For_Player, CallFunc_K2_GetPawn_ReturnValue) == 0x000038, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Get_Rewards_For_Player::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Get_Rewards_For_Player, K2Node_DynamicCast_AsBP_Character_Matches) == 0x000040, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Get_Rewards_For_Player::K2Node_DynamicCast_AsBP_Character_Matches' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Get_Rewards_For_Player, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Get_Rewards_For_Player::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Get_Rewards_For_Player, CallFunc_GetBackpack_ReturnValue) == 0x000050, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Get_Rewards_For_Player::CallFunc_GetBackpack_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Get_Rewards_For_Player, CallFunc_Array_Add_ReturnValue) == 0x000058, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Get_Rewards_For_Player::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Get_Rewards_For_Player, CallFunc_CountOfResource_ReturnValue) == 0x00005C, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Get_Rewards_For_Player::CallFunc_CountOfResource_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMComponent_ADM_Reward_TrackedBox_C_Get_Rewards_For_Player, CallFunc_Greater_IntInt_ReturnValue) == 0x000060, "Member 'BP_GMComponent_ADM_Reward_TrackedBox_C_Get_Rewards_For_Player::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

}

