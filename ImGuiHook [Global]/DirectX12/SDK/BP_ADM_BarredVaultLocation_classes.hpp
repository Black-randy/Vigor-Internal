#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ADM_BarredVaultLocation

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_ADM_ActorLocation_Base_classes.hpp"
#include "F_ADM_BarredDoor_structs.hpp"
#include "F_ADM_BarredWindow_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ADM_BarredVaultLocation.BP_ADM_BarredVaultLocation_C
// 0x0030 (0x0268 - 0x0238)
class ABP_ADM_BarredVaultLocation_C final : public ABP_ADM_ActorLocation_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0238(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USkeletalMeshComponent*                 SM_Safe_01_V1;                                     // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FF_ADM_BarredDoor>              Door_References;                                   // 0x0248(0x0010)(Edit, BlueprintVisible)
	TArray<struct FF_ADM_BarredWindow>            Window_References;                                 // 0x0258(0x0010)(Edit, BlueprintVisible)

public:
	void ExecuteUbergraph_BP_ADM_BarredVaultLocation(int32 EntryPoint);
	void ReceiveBeginPlay();
	void Show_Linked_Assets();
	void Hide_Links();
	void PostRebuildBuildings(const TMap<class FName, float>& Data);
	void PreRebuildBuildings(class UEditorRebuildDataStorage* Data);
	void Refresh_References_in_All();
	void UserConstructionScript();
	void Update_Door_References();
	void Update_Window_References();
	void Draw_Debug_Lines();
	void UpdateAll();

	void GetRebuildReferencedTags(TSet<class FName>& OutNames) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ADM_BarredVaultLocation_C">();
	}
	static class ABP_ADM_BarredVaultLocation_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ADM_BarredVaultLocation_C>();
	}
};
static_assert(alignof(ABP_ADM_BarredVaultLocation_C) == 0x000008, "Wrong alignment on ABP_ADM_BarredVaultLocation_C");
static_assert(sizeof(ABP_ADM_BarredVaultLocation_C) == 0x000268, "Wrong size on ABP_ADM_BarredVaultLocation_C");
static_assert(offsetof(ABP_ADM_BarredVaultLocation_C, UberGraphFrame) == 0x000238, "Member 'ABP_ADM_BarredVaultLocation_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ADM_BarredVaultLocation_C, SM_Safe_01_V1) == 0x000240, "Member 'ABP_ADM_BarredVaultLocation_C::SM_Safe_01_V1' has a wrong offset!");
static_assert(offsetof(ABP_ADM_BarredVaultLocation_C, Door_References) == 0x000248, "Member 'ABP_ADM_BarredVaultLocation_C::Door_References' has a wrong offset!");
static_assert(offsetof(ABP_ADM_BarredVaultLocation_C, Window_References) == 0x000258, "Member 'ABP_ADM_BarredVaultLocation_C::Window_References' has a wrong offset!");

}

