#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_ConsumableUsage

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function UI_ConsumableUsage.UI_ConsumableUsage_C.ExecuteUbergraph_UI_ConsumableUsage
// 0x0040 (0x0040 - 0x0000)
struct UI_ConsumableUsage_C_ExecuteUbergraph_UI_ConsumableUsage final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ConsumableUsage_C_ExecuteUbergraph_UI_ConsumableUsage) == 0x000004, "Wrong alignment on UI_ConsumableUsage_C_ExecuteUbergraph_UI_ConsumableUsage");
static_assert(sizeof(UI_ConsumableUsage_C_ExecuteUbergraph_UI_ConsumableUsage) == 0x000040, "Wrong size on UI_ConsumableUsage_C_ExecuteUbergraph_UI_ConsumableUsage");
static_assert(offsetof(UI_ConsumableUsage_C_ExecuteUbergraph_UI_ConsumableUsage, EntryPoint) == 0x000000, "Member 'UI_ConsumableUsage_C_ExecuteUbergraph_UI_ConsumableUsage::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_ConsumableUsage_C_ExecuteUbergraph_UI_ConsumableUsage, K2Node_Event_MyGeometry) == 0x000004, "Member 'UI_ConsumableUsage_C_ExecuteUbergraph_UI_ConsumableUsage::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_ConsumableUsage_C_ExecuteUbergraph_UI_ConsumableUsage, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'UI_ConsumableUsage_C_ExecuteUbergraph_UI_ConsumableUsage::K2Node_Event_InDeltaTime' has a wrong offset!");

// Function UI_ConsumableUsage.UI_ConsumableUsage_C.Tick
// 0x003C (0x003C - 0x0000)
struct UI_ConsumableUsage_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ConsumableUsage_C_Tick) == 0x000004, "Wrong alignment on UI_ConsumableUsage_C_Tick");
static_assert(sizeof(UI_ConsumableUsage_C_Tick) == 0x00003C, "Wrong size on UI_ConsumableUsage_C_Tick");
static_assert(offsetof(UI_ConsumableUsage_C_Tick, MyGeometry) == 0x000000, "Member 'UI_ConsumableUsage_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_ConsumableUsage_C_Tick, InDeltaTime) == 0x000038, "Member 'UI_ConsumableUsage_C_Tick::InDeltaTime' has a wrong offset!");

// Function UI_ConsumableUsage.UI_ConsumableUsage_C.SetHoldProgress
// 0x0040 (0x0040 - 0x0000)
struct UI_ConsumableUsage_C_SetHoldProgress final
{
public:
	bool                                          CanBeUsed_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Progress;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0018(0x0028)()
};
static_assert(alignof(UI_ConsumableUsage_C_SetHoldProgress) == 0x000008, "Wrong alignment on UI_ConsumableUsage_C_SetHoldProgress");
static_assert(sizeof(UI_ConsumableUsage_C_SetHoldProgress) == 0x000040, "Wrong size on UI_ConsumableUsage_C_SetHoldProgress");
static_assert(offsetof(UI_ConsumableUsage_C_SetHoldProgress, CanBeUsed_0) == 0x000000, "Member 'UI_ConsumableUsage_C_SetHoldProgress::CanBeUsed_0' has a wrong offset!");
static_assert(offsetof(UI_ConsumableUsage_C_SetHoldProgress, Progress) == 0x000004, "Member 'UI_ConsumableUsage_C_SetHoldProgress::Progress' has a wrong offset!");
static_assert(offsetof(UI_ConsumableUsage_C_SetHoldProgress, CallFunc_SelectColor_ReturnValue) == 0x000008, "Member 'UI_ConsumableUsage_C_SetHoldProgress::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ConsumableUsage_C_SetHoldProgress, K2Node_MakeStruct_SlateColor) == 0x000018, "Member 'UI_ConsumableUsage_C_SetHoldProgress::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function UI_ConsumableUsage.UI_ConsumableUsage_C.GetHoldIcon
// 0x0008 (0x0008 - 0x0000)
struct UI_ConsumableUsage_C_GetHoldIcon final
{
public:
	class UImage*                                 GamepadIcon_0;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ConsumableUsage_C_GetHoldIcon) == 0x000008, "Wrong alignment on UI_ConsumableUsage_C_GetHoldIcon");
static_assert(sizeof(UI_ConsumableUsage_C_GetHoldIcon) == 0x000008, "Wrong size on UI_ConsumableUsage_C_GetHoldIcon");
static_assert(offsetof(UI_ConsumableUsage_C_GetHoldIcon, GamepadIcon_0) == 0x000000, "Member 'UI_ConsumableUsage_C_GetHoldIcon::GamepadIcon_0' has a wrong offset!");

}

