#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AirDropContainer_Prototype

#include "Basic.hpp"

#include "BP_AirDropContainer_Base_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AirDropContainer_Prototype.BP_AirDropContainer_Prototype_C
// 0x0020 (0x04E8 - 0x04C8)
class ABP_AirDropContainer_Prototype_C : public ABP_AirDropContainer_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AirDropContainer_Prototype_C;    // 0x04C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_Challenge_GrenadeHitComponent_C*    BP_Challenge_GrenadeHitComponent;                  // 0x04D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   OverlapVolumeEncounterHint;                        // 0x04D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        ParticleEffect;                                    // 0x04E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_AirDropContainer_Prototype(int32 EntryPoint);
	void BndEvt__OverlapVolumeEncounterHint_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void CollisionEffect();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AirDropContainer_Prototype_C">();
	}
	static class ABP_AirDropContainer_Prototype_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AirDropContainer_Prototype_C>();
	}
};
static_assert(alignof(ABP_AirDropContainer_Prototype_C) == 0x000008, "Wrong alignment on ABP_AirDropContainer_Prototype_C");
static_assert(sizeof(ABP_AirDropContainer_Prototype_C) == 0x0004E8, "Wrong size on ABP_AirDropContainer_Prototype_C");
static_assert(offsetof(ABP_AirDropContainer_Prototype_C, UberGraphFrame_BP_AirDropContainer_Prototype_C) == 0x0004C8, "Member 'ABP_AirDropContainer_Prototype_C::UberGraphFrame_BP_AirDropContainer_Prototype_C' has a wrong offset!");
static_assert(offsetof(ABP_AirDropContainer_Prototype_C, BP_Challenge_GrenadeHitComponent) == 0x0004D0, "Member 'ABP_AirDropContainer_Prototype_C::BP_Challenge_GrenadeHitComponent' has a wrong offset!");
static_assert(offsetof(ABP_AirDropContainer_Prototype_C, OverlapVolumeEncounterHint) == 0x0004D8, "Member 'ABP_AirDropContainer_Prototype_C::OverlapVolumeEncounterHint' has a wrong offset!");
static_assert(offsetof(ABP_AirDropContainer_Prototype_C, ParticleEffect) == 0x0004E0, "Member 'ABP_AirDropContainer_Prototype_C::ParticleEffect' has a wrong offset!");

}

