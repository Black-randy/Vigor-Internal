#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerGroupsManager

#include "Basic.hpp"

#include "BP_PlayerGroupsManager_classes.hpp"
#include "BP_PlayerGroupsManager_parameters.hpp"


namespace SDK
{

// Function BP_PlayerGroupsManager.BP_PlayerGroupsManager_C.Get Groups Count
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Count                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerGroupsManager_C::Get_Groups_Count(int32* Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerGroupsManager_C", "Get Groups Count");

	Params::BP_PlayerGroupsManager_C_Get_Groups_Count Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Count != nullptr)
		*Count = Parms.Count;
}


// Function BP_PlayerGroupsManager.BP_PlayerGroupsManager_C.Get Largest Group Size
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Size                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerGroupsManager_C::Get_Largest_Group_Size(int32* Size)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerGroupsManager_C", "Get Largest Group Size");

	Params::BP_PlayerGroupsManager_C_Get_Largest_Group_Size Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Size != nullptr)
		*Size = Parms.Size;
}

}

