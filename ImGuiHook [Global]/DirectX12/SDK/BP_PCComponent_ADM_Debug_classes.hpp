#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PCComponent_ADM_Debug

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_PCComponent_ADM_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PCComponent_ADM_Debug.BP_PCComponent_ADM_Debug_C
// 0x0020 (0x0108 - 0x00E8)
class UBP_PCComponent_ADM_Debug_C final : public UBP_PCComponent_ADM_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_PCComponent_ADM_Debug_C;         // 0x00E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UUI_FlameTextWidget_C*                  Warning_Message_Widget;                            // 0x00F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Show_Object_Distances;                             // 0x00F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           Object_Distances_Timer;                            // 0x0100(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_PCComponent_ADM_Debug(int32 EntryPoint);
	void Print_Distances();
	void Toggle_Object_Distances();
	void Add_Warning_Message(const class FText& Message);
	void Hide_Passive_UI();
	void Show_Passive_UI();
	void Mark_Asset_Locations(const TArray<struct FVector>& Asset_Locations, const class FText& Asset_Name, class UTexture* Marker_Image);
	void Drop_All_Air_Drops();
	void Remove_Module(class UBP_GSComponent_ADM_C* Module);
	void Add_Module(class UClass* Module_Type);
	void Set_Amount_of_Players_in_Debug_UI(int32 Amount_of_Players);
	void Toggle_Game_Mode();
	void Calculate_Distances(TArray<class FString>* Distances, TArray<struct FLinearColor>* Colors);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PCComponent_ADM_Debug_C">();
	}
	static class UBP_PCComponent_ADM_Debug_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_PCComponent_ADM_Debug_C>();
	}
};
static_assert(alignof(UBP_PCComponent_ADM_Debug_C) == 0x000008, "Wrong alignment on UBP_PCComponent_ADM_Debug_C");
static_assert(sizeof(UBP_PCComponent_ADM_Debug_C) == 0x000108, "Wrong size on UBP_PCComponent_ADM_Debug_C");
static_assert(offsetof(UBP_PCComponent_ADM_Debug_C, UberGraphFrame_BP_PCComponent_ADM_Debug_C) == 0x0000E8, "Member 'UBP_PCComponent_ADM_Debug_C::UberGraphFrame_BP_PCComponent_ADM_Debug_C' has a wrong offset!");
static_assert(offsetof(UBP_PCComponent_ADM_Debug_C, Warning_Message_Widget) == 0x0000F0, "Member 'UBP_PCComponent_ADM_Debug_C::Warning_Message_Widget' has a wrong offset!");
static_assert(offsetof(UBP_PCComponent_ADM_Debug_C, Show_Object_Distances) == 0x0000F8, "Member 'UBP_PCComponent_ADM_Debug_C::Show_Object_Distances' has a wrong offset!");
static_assert(offsetof(UBP_PCComponent_ADM_Debug_C, Object_Distances_Timer) == 0x000100, "Member 'UBP_PCComponent_ADM_Debug_C::Object_Distances_Timer' has a wrong offset!");

}

