#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_AchievementsTile

#include "Basic.hpp"

#include "S_AchievementsTableRow_structs.hpp"
#include "Flame_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_AchievementsTile.UI_AchievementsTile_C
// 0x00E8 (0x03A0 - 0x02B8)
class UUI_AchievementsTile_C final : public UFlameWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 BackgroundImage;                                   // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameButton*                           Button;                                            // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Flare;                                             // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ImageFocus;                                        // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           ProgressBar;                                       // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TileIcon;                                          // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FName                                   AchievementId;                                     // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FS_AchievementsTableRow                AchievementData;                                   // 0x02F8(0x0078)(Edit, BlueprintVisible, ExposeOnSpawn, HasGetValueTypeHash)
	struct FTimerHandle                           UpdateProgressTimer;                               // 0x0370(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         AchievementProgress;                               // 0x0378(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37C[0x4];                                      // 0x037C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               TileIconMaterial;                                  // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           RarityColor;                                       // 0x0388(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCurrentlyHovered;                                // 0x0398(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_UI_AchievementsTile(int32 EntryPoint);
	void BndEvt__UI_AchievementsTile_Button_K2Node_ComponentBoundEvent_3_OnButtonPressedEvent__DelegateSignature(class UButton* Sender);
	void BndEvt__UI_AchievementsTile_Button_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature(class UButton* Sender);
	void BndEvt__UI_AchievementsTile_Button_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature(class UButton* Sender);
	void Destruct();
	void OnFocusLost(const struct FFocusEvent& InFocusEvent);
	void Construct();
	void OnLoaded_303A9E7341428F48F05BE78A35FA7899(class UObject* Loaded);
	struct FEventReply OnFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent);

	void GetAchievementData(class FText* Title, class FText* Description, float* Progress) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_AchievementsTile_C">();
	}
	static class UUI_AchievementsTile_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_AchievementsTile_C>();
	}
};
static_assert(alignof(UUI_AchievementsTile_C) == 0x000008, "Wrong alignment on UUI_AchievementsTile_C");
static_assert(sizeof(UUI_AchievementsTile_C) == 0x0003A0, "Wrong size on UUI_AchievementsTile_C");
static_assert(offsetof(UUI_AchievementsTile_C, UberGraphFrame) == 0x0002B8, "Member 'UUI_AchievementsTile_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_AchievementsTile_C, BackgroundImage) == 0x0002C0, "Member 'UUI_AchievementsTile_C::BackgroundImage' has a wrong offset!");
static_assert(offsetof(UUI_AchievementsTile_C, Button) == 0x0002C8, "Member 'UUI_AchievementsTile_C::Button' has a wrong offset!");
static_assert(offsetof(UUI_AchievementsTile_C, Flare) == 0x0002D0, "Member 'UUI_AchievementsTile_C::Flare' has a wrong offset!");
static_assert(offsetof(UUI_AchievementsTile_C, ImageFocus) == 0x0002D8, "Member 'UUI_AchievementsTile_C::ImageFocus' has a wrong offset!");
static_assert(offsetof(UUI_AchievementsTile_C, ProgressBar) == 0x0002E0, "Member 'UUI_AchievementsTile_C::ProgressBar' has a wrong offset!");
static_assert(offsetof(UUI_AchievementsTile_C, TileIcon) == 0x0002E8, "Member 'UUI_AchievementsTile_C::TileIcon' has a wrong offset!");
static_assert(offsetof(UUI_AchievementsTile_C, AchievementId) == 0x0002F0, "Member 'UUI_AchievementsTile_C::AchievementId' has a wrong offset!");
static_assert(offsetof(UUI_AchievementsTile_C, AchievementData) == 0x0002F8, "Member 'UUI_AchievementsTile_C::AchievementData' has a wrong offset!");
static_assert(offsetof(UUI_AchievementsTile_C, UpdateProgressTimer) == 0x000370, "Member 'UUI_AchievementsTile_C::UpdateProgressTimer' has a wrong offset!");
static_assert(offsetof(UUI_AchievementsTile_C, AchievementProgress) == 0x000378, "Member 'UUI_AchievementsTile_C::AchievementProgress' has a wrong offset!");
static_assert(offsetof(UUI_AchievementsTile_C, TileIconMaterial) == 0x000380, "Member 'UUI_AchievementsTile_C::TileIconMaterial' has a wrong offset!");
static_assert(offsetof(UUI_AchievementsTile_C, RarityColor) == 0x000388, "Member 'UUI_AchievementsTile_C::RarityColor' has a wrong offset!");
static_assert(offsetof(UUI_AchievementsTile_C, IsCurrentlyHovered) == 0x000398, "Member 'UUI_AchievementsTile_C::IsCurrentlyHovered' has a wrong offset!");

}

