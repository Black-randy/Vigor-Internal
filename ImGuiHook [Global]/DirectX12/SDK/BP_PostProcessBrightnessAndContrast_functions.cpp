#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PostProcessBrightnessAndContrast

#include "Basic.hpp"

#include "BP_PostProcessBrightnessAndContrast_classes.hpp"
#include "BP_PostProcessBrightnessAndContrast_parameters.hpp"


namespace SDK
{

// Function BP_PostProcessBrightnessAndContrast.BP_PostProcessBrightnessAndContrast_C.ExecuteUbergraph_BP_PostProcessBrightnessAndContrast
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PostProcessBrightnessAndContrast_C::ExecuteUbergraph_BP_PostProcessBrightnessAndContrast(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PostProcessBrightnessAndContrast_C", "ExecuteUbergraph_BP_PostProcessBrightnessAndContrast");

	Params::BP_PostProcessBrightnessAndContrast_C_ExecuteUbergraph_BP_PostProcessBrightnessAndContrast Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PostProcessBrightnessAndContrast.BP_PostProcessBrightnessAndContrast_C.OnVideoSettingsChanged
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVideoSaveSettings               VideoSettings                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_PostProcessBrightnessAndContrast_C::OnVideoSettingsChanged(const struct FVideoSaveSettings& VideoSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PostProcessBrightnessAndContrast_C", "OnVideoSettingsChanged");

	Params::BP_PostProcessBrightnessAndContrast_C_OnVideoSettingsChanged Parms{};

	Parms.VideoSettings = std::move(VideoSettings);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PostProcessBrightnessAndContrast.BP_PostProcessBrightnessAndContrast_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_PostProcessBrightnessAndContrast_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PostProcessBrightnessAndContrast_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PostProcessBrightnessAndContrast.BP_PostProcessBrightnessAndContrast_C.SetupPostProcess
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_PostProcessBrightnessAndContrast_C::SetupPostProcess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PostProcessBrightnessAndContrast_C", "SetupPostProcess");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PostProcessBrightnessAndContrast.BP_PostProcessBrightnessAndContrast_C.UpdateSettings
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVideoSaveSettings               Settings                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_PostProcessBrightnessAndContrast_C::UpdateSettings(struct FVideoSaveSettings& Settings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PostProcessBrightnessAndContrast_C", "UpdateSettings");

	Params::BP_PostProcessBrightnessAndContrast_C_UpdateSettings Parms{};

	Parms.Settings = std::move(Settings);

	UObject::ProcessEvent(Func, &Parms);

	Settings = std::move(Parms.Settings);
}

}

