#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WindowFrame_02_Barricade_Breakable

#include "Basic.hpp"

#include "BP_WindowFrame_02_Barricade_Breakable_classes.hpp"
#include "BP_WindowFrame_02_Barricade_Breakable_parameters.hpp"


namespace SDK
{

// Function BP_WindowFrame_02_Barricade_Breakable.BP_WindowFrame_02_Barricade_Breakable_C.SetupMainBarricades
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_WindowFrame_02_Barricade_Breakable_C::SetupMainBarricades()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WindowFrame_02_Barricade_Breakable_C", "SetupMainBarricades");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WindowFrame_02_Barricade_Breakable.BP_WindowFrame_02_Barricade_Breakable_C.InitBarricades
// (BlueprintCallable, BlueprintEvent)

void ABP_WindowFrame_02_Barricade_Breakable_C::InitBarricades()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WindowFrame_02_Barricade_Breakable_C", "InitBarricades");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WindowFrame_02_Barricade_Breakable.BP_WindowFrame_02_Barricade_Breakable_C.ExecuteUbergraph_BP_WindowFrame_02_Barricade_Breakable
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_WindowFrame_02_Barricade_Breakable_C::ExecuteUbergraph_BP_WindowFrame_02_Barricade_Breakable(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WindowFrame_02_Barricade_Breakable_C", "ExecuteUbergraph_BP_WindowFrame_02_Barricade_Breakable");

	Params::BP_WindowFrame_02_Barricade_Breakable_C_ExecuteUbergraph_BP_WindowFrame_02_Barricade_Breakable Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

