#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_SeasonalChallengesSubTab

#include "Basic.hpp"

#include "Flame_structs.hpp"
#include "Flame_classes.hpp"
#include "Engine_structs.hpp"
#include "Struct_SeasonalChallengesSubGoalInfo_structs.hpp"
#include "E_ChallengeManagerState_structs.hpp"
#include "FlameUI_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "E_ChallengeSlotState_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_SeasonalChallengesSubTab.UI_SeasonalChallengesSubTab_C
// 0x01D8 (0x04B0 - 0x02D8)
class UUI_SeasonalChallengesSubTab_C final : public UMenuWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       RewardActorFadeout;                                // 0x02E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ClearUI_For_Reward;                                // 0x02E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UUI_InputActionWidget_C*                ActionClose;                                       // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_InputActionWidget_C*                ActionMoreInfo;                                    // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_InputActionWidget_C*                ActionRemove;                                      // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_InputActionWidget_C*                ClaimSeasonalReward;                               // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_InputActionWidget_C*                DEBUG_ActionIncreaseDoneChallenges;                // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HBox_Inputs;                                       // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_106;                                         // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_ClaimRewards;                              // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         RerollAction;                                      // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RerollCrownsIcon;                                  // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameTextBlock*                        RerollPriceIndicator;                              // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameTextBlock*                        RerollUnavailableHint;                             // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             SeasonalChallengesList;                            // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_BackgroundBase_A_C*                 UI_BackgroundBase_A;                               // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_BackgroundBase_A_C*                 UI_BackgroundBase_A_1;                             // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_BattlePassSeasonCountdown_C*        UI_BPSeasonCountdown;                              // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_ChallengesListItemFocusable_C*      UI_ChallengesListItemFocusable;                    // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_ChallengesListItemFocusable_C*      UI_ChallengesListItemFocusable_2;                  // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_ChallengesListItemFocusable_C*      UI_ChallengesListItemFocusable_3;                  // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_SeasonalChallenges_ProgressBar_C*   UI_SeasonalChallenges_ProgressBar;                 // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_0;                                  // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          HasCompletedChallenges;                            // 0x0398(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_399[0x7];                                      // 0x0399(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ChallengeSlot_C*                    FocusedSlot;                                       // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              NextResetTimestamp;                                // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMap<EFlamePlatform, class FText>             NotEnoughCrownsTexts;                              // 0x03B0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class ABP_ChallengeSlot_C*>            FinishedChallengeSlots;                            // 0x0400(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class ABP_ChallengeManager_C*                 ChallengeManager;                                  // 0x0410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ShelterUI_C*                        ShelterUI;                                         // 0x0418(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PreviewActorReady;                                 // 0x0420(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_421[0x3];                                      // 0x0421(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ClaimedChallengesCount;                            // 0x0424(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxChallengesCount;                                // 0x0428(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42C[0x4];                                      // 0x042C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FStruct_SeasonalChallengesSubGoalInfo> SubGoalsInfo;                                      // 0x0430(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TSoftObjectPtr<class UDataTable>              DT_SubGoals_SF;                                    // 0x0440(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          AllRewardRequirementsMet;                          // 0x0468(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_469[0x7];                                      // 0x0469(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             DT_SubGoals_HR;                                    // 0x0470(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FChallengeReward>               SeasonalRewards;                                   // 0x0478(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UShelterMainTabControl*                 ShelterMainTab;                                    // 0x0488(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_IdleWidget_C*                       IdleWidgetBeforeClaim;                             // 0x0490(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           ClaimRequestTimeoutTimer;                          // 0x0498(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CurrentFocusedWidget;                              // 0x04A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldReturnFocus;                                 // 0x04A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_UI_SeasonalChallengesSubTab(int32 EntryPoint);
	void OnResetToDefaultState();
	void OnCloseModal(EMessageBoxAction Result);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void BndEvt__ActionClose_K2Node_ComponentBoundEvent_7_OnClickedEvent__DelegateSignature();
	void BndEvt__ActionMoreInfo_K2Node_ComponentBoundEvent_7_OnActionReleasedEvent__DelegateSignature();
	void PreConstruct(bool IsDesignTime);
	void ClaimRequestFailedMessage();
	void ClaimRequestTimeout();
	void RemoveIdleWidget();
	void CreateIdleWidget();
	void SeasonRewardsReceived(const struct FCloudRequestResult& RequestResult, const struct FCloudSeasonChallengeRewardsResult& Response);
	void RewardsClaimedEvent_(const struct FCloudRequestResult& RequestResult, const struct FCloudSeasonChallengeClaimResult& ClaimResult);
	void UpdateUI_ChallengeProgressEvent(const struct FCloudRequestResult& RequestResult, const struct FCloudSeasonChallengeProgressResult& Response);
	void PlayFadeOutTransitionAnimation();
	void BndEvt__ClaimSeasonalReward_K2Node_ComponentBoundEvent_6_OnActionReleasedEvent__DelegateSignature();
	void BndEvt__ClaimSeasonalReward_K2Node_ComponentBoundEvent_4_OnActionPressedEvent__DelegateSignature();
	void DoNothing();
	void TemporarilyConsumeMenuAction(bool Consume);
	void OnSeasonalRewardDisplayClosed(class UFlameWidget* FlameWidget);
	void RewardPresentationEnded();
	void BndEvt__ClaimSeasonalReward_K2Node_ComponentBoundEvent_3_OnActionHoldEvent__DelegateSignature();
	void GatherSeasonalSubGoalsData();
	void BndEvt__DEBUG_ActionIncreaseDoneChallenges_K2Node_ComponentBoundEvent_0_OnActionPressedEvent__DelegateSignature();
	void Destruct();
	void InitRewardPreviewActor();
	void InitUI();
	void ChallengeRerollRequest(EMessageBoxAction Result);
	void InitializeNewChallengeSlot(class ABP_ChallengeSlot_C* ChallengeSlot);
	void Challenges_Ready(class UFlameWidget* FlameWidget);
	void OnTimer();
	void OnStateChanged(class ABP_ChallengeSlot_C* Slot_0);
	void BndEvt__ActionRemove_K2Node_ComponentBoundEvent_2_OnActionPressedEvent__DelegateSignature();
	void EventChallengeSlotCancelled(class ABP_ChallengeSlot_C* BP_ChallengeSlot);
	void EventChallengeManagerReady();
	void EventSlotFocused(class UListButtonWidget* Sender);
	void Construct();
	void Finished_DCD3861F4491880C07F9AE8F652868F2();
	void UpdateActionRemoveState(class ABP_ChallengeSlot_C* ChallengeSlotIn);
	void UpdateSpecialRewardClaimButtonVisibility();
	void CheckForOverallSeasonalChallengesState();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_SeasonalChallengesSubTab_C">();
	}
	static class UUI_SeasonalChallengesSubTab_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_SeasonalChallengesSubTab_C>();
	}
};
static_assert(alignof(UUI_SeasonalChallengesSubTab_C) == 0x000008, "Wrong alignment on UUI_SeasonalChallengesSubTab_C");
static_assert(sizeof(UUI_SeasonalChallengesSubTab_C) == 0x0004B0, "Wrong size on UUI_SeasonalChallengesSubTab_C");
static_assert(offsetof(UUI_SeasonalChallengesSubTab_C, UberGraphFrame) == 0x0002D8, "Member 'UUI_SeasonalChallengesSubTab_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_SeasonalChallengesSubTab_C, RewardActorFadeout) == 0x0002E0, "Member 'UUI_SeasonalChallengesSubTab_C::RewardActorFadeout' has a wrong offset!");
static_assert(offsetof(UUI_SeasonalChallengesSubTab_C, ClearUI_For_Reward) == 0x0002E8, "Member 'UUI_SeasonalChallengesSubTab_C::ClearUI_For_Reward' has a wrong offset!");
static_assert(offsetof(UUI_SeasonalChallengesSubTab_C, ActionClose) == 0x0002F0, "Member 'UUI_SeasonalChallengesSubTab_C::ActionClose' has a wrong offset!");
static_assert(offsetof(UUI_SeasonalChallengesSubTab_C, ActionMoreInfo) == 0x0002F8, "Member 'UUI_SeasonalChallengesSubTab_C::ActionMoreInfo' has a wrong offset!");
static_assert(offsetof(UUI_SeasonalChallengesSubTab_C, ActionRemove) == 0x000300, "Member 'UUI_SeasonalChallengesSubTab_C::ActionRemove' has a wrong offset!");
static_assert(offsetof(UUI_SeasonalChallengesSubTab_C, ClaimSeasonalReward) == 0x000308, "Member 'UUI_SeasonalChallengesSubTab_C::ClaimSeasonalReward' has a wrong offset!");
static_assert(offsetof(UUI_SeasonalChallengesSubTab_C, DEBUG_ActionIncreaseDoneChallenges) == 0x000310, "Member 'UUI_SeasonalChallengesSubTab_C::DEBUG_ActionIncreaseDoneChallenges' has a wrong offset!");
static_assert(offsetof(UUI_SeasonalChallengesSubTab_C, HBox_Inputs) == 0x000318, "Member 'UUI_SeasonalChallengesSubTab_C::HBox_Inputs' has a wrong offset!");
static_assert(offsetof(UUI_SeasonalChallengesSubTab_C, Image_106) == 0x000320, "Member 'UUI_SeasonalChallengesSubTab_C::Image_106' has a wrong offset!");
static_assert(offsetof(UUI_SeasonalChallengesSubTab_C, Overlay_ClaimRewards) == 0x000328, "Member 'UUI_SeasonalChallengesSubTab_C::Overlay_ClaimRewards' has a wrong offset!");
static_assert(offsetof(UUI_SeasonalChallengesSubTab_C, RerollAction) == 0x000330, "Member 'UUI_SeasonalChallengesSubTab_C::RerollAction' has a wrong offset!");
static_assert(offsetof(UUI_SeasonalChallengesSubTab_C, RerollCrownsIcon) == 0x000338, "Member 'UUI_SeasonalChallengesSubTab_C::RerollCrownsIcon' has a wrong offset!");
static_assert(offsetof(UUI_SeasonalChallengesSubTab_C, RerollPriceIndicator) == 0x000340, "Member 'UUI_SeasonalChallengesSubTab_C::RerollPriceIndicator' has a wrong offset!");
static_assert(offsetof(UUI_SeasonalChallengesSubTab_C, RerollUnavailableHint) == 0x000348, "Member 'UUI_SeasonalChallengesSubTab_C::RerollUnavailableHint' has a wrong offset!");
static_assert(offsetof(UUI_SeasonalChallengesSubTab_C, SeasonalChallengesList) == 0x000350, "Member 'UUI_SeasonalChallengesSubTab_C::SeasonalChallengesList' has a wrong offset!");
static_assert(offsetof(UUI_SeasonalChallengesSubTab_C, UI_BackgroundBase_A) == 0x000358, "Member 'UUI_SeasonalChallengesSubTab_C::UI_BackgroundBase_A' has a wrong offset!");
static_assert(offsetof(UUI_SeasonalChallengesSubTab_C, UI_BackgroundBase_A_1) == 0x000360, "Member 'UUI_SeasonalChallengesSubTab_C::UI_BackgroundBase_A_1' has a wrong offset!");
static_assert(offsetof(UUI_SeasonalChallengesSubTab_C, UI_BPSeasonCountdown) == 0x000368, "Member 'UUI_SeasonalChallengesSubTab_C::UI_BPSeasonCountdown' has a wrong offset!");
static_assert(offsetof(UUI_SeasonalChallengesSubTab_C, UI_ChallengesListItemFocusable) == 0x000370, "Member 'UUI_SeasonalChallengesSubTab_C::UI_ChallengesListItemFocusable' has a wrong offset!");
static_assert(offsetof(UUI_SeasonalChallengesSubTab_C, UI_ChallengesListItemFocusable_2) == 0x000378, "Member 'UUI_SeasonalChallengesSubTab_C::UI_ChallengesListItemFocusable_2' has a wrong offset!");
static_assert(offsetof(UUI_SeasonalChallengesSubTab_C, UI_ChallengesListItemFocusable_3) == 0x000380, "Member 'UUI_SeasonalChallengesSubTab_C::UI_ChallengesListItemFocusable_3' has a wrong offset!");
static_assert(offsetof(UUI_SeasonalChallengesSubTab_C, UI_SeasonalChallenges_ProgressBar) == 0x000388, "Member 'UUI_SeasonalChallengesSubTab_C::UI_SeasonalChallenges_ProgressBar' has a wrong offset!");
static_assert(offsetof(UUI_SeasonalChallengesSubTab_C, WidgetSwitcher_0) == 0x000390, "Member 'UUI_SeasonalChallengesSubTab_C::WidgetSwitcher_0' has a wrong offset!");
static_assert(offsetof(UUI_SeasonalChallengesSubTab_C, HasCompletedChallenges) == 0x000398, "Member 'UUI_SeasonalChallengesSubTab_C::HasCompletedChallenges' has a wrong offset!");
static_assert(offsetof(UUI_SeasonalChallengesSubTab_C, FocusedSlot) == 0x0003A0, "Member 'UUI_SeasonalChallengesSubTab_C::FocusedSlot' has a wrong offset!");
static_assert(offsetof(UUI_SeasonalChallengesSubTab_C, NextResetTimestamp) == 0x0003A8, "Member 'UUI_SeasonalChallengesSubTab_C::NextResetTimestamp' has a wrong offset!");
static_assert(offsetof(UUI_SeasonalChallengesSubTab_C, NotEnoughCrownsTexts) == 0x0003B0, "Member 'UUI_SeasonalChallengesSubTab_C::NotEnoughCrownsTexts' has a wrong offset!");
static_assert(offsetof(UUI_SeasonalChallengesSubTab_C, FinishedChallengeSlots) == 0x000400, "Member 'UUI_SeasonalChallengesSubTab_C::FinishedChallengeSlots' has a wrong offset!");
static_assert(offsetof(UUI_SeasonalChallengesSubTab_C, ChallengeManager) == 0x000410, "Member 'UUI_SeasonalChallengesSubTab_C::ChallengeManager' has a wrong offset!");
static_assert(offsetof(UUI_SeasonalChallengesSubTab_C, ShelterUI) == 0x000418, "Member 'UUI_SeasonalChallengesSubTab_C::ShelterUI' has a wrong offset!");
static_assert(offsetof(UUI_SeasonalChallengesSubTab_C, PreviewActorReady) == 0x000420, "Member 'UUI_SeasonalChallengesSubTab_C::PreviewActorReady' has a wrong offset!");
static_assert(offsetof(UUI_SeasonalChallengesSubTab_C, ClaimedChallengesCount) == 0x000424, "Member 'UUI_SeasonalChallengesSubTab_C::ClaimedChallengesCount' has a wrong offset!");
static_assert(offsetof(UUI_SeasonalChallengesSubTab_C, MaxChallengesCount) == 0x000428, "Member 'UUI_SeasonalChallengesSubTab_C::MaxChallengesCount' has a wrong offset!");
static_assert(offsetof(UUI_SeasonalChallengesSubTab_C, SubGoalsInfo) == 0x000430, "Member 'UUI_SeasonalChallengesSubTab_C::SubGoalsInfo' has a wrong offset!");
static_assert(offsetof(UUI_SeasonalChallengesSubTab_C, DT_SubGoals_SF) == 0x000440, "Member 'UUI_SeasonalChallengesSubTab_C::DT_SubGoals_SF' has a wrong offset!");
static_assert(offsetof(UUI_SeasonalChallengesSubTab_C, AllRewardRequirementsMet) == 0x000468, "Member 'UUI_SeasonalChallengesSubTab_C::AllRewardRequirementsMet' has a wrong offset!");
static_assert(offsetof(UUI_SeasonalChallengesSubTab_C, DT_SubGoals_HR) == 0x000470, "Member 'UUI_SeasonalChallengesSubTab_C::DT_SubGoals_HR' has a wrong offset!");
static_assert(offsetof(UUI_SeasonalChallengesSubTab_C, SeasonalRewards) == 0x000478, "Member 'UUI_SeasonalChallengesSubTab_C::SeasonalRewards' has a wrong offset!");
static_assert(offsetof(UUI_SeasonalChallengesSubTab_C, ShelterMainTab) == 0x000488, "Member 'UUI_SeasonalChallengesSubTab_C::ShelterMainTab' has a wrong offset!");
static_assert(offsetof(UUI_SeasonalChallengesSubTab_C, IdleWidgetBeforeClaim) == 0x000490, "Member 'UUI_SeasonalChallengesSubTab_C::IdleWidgetBeforeClaim' has a wrong offset!");
static_assert(offsetof(UUI_SeasonalChallengesSubTab_C, ClaimRequestTimeoutTimer) == 0x000498, "Member 'UUI_SeasonalChallengesSubTab_C::ClaimRequestTimeoutTimer' has a wrong offset!");
static_assert(offsetof(UUI_SeasonalChallengesSubTab_C, CurrentFocusedWidget) == 0x0004A0, "Member 'UUI_SeasonalChallengesSubTab_C::CurrentFocusedWidget' has a wrong offset!");
static_assert(offsetof(UUI_SeasonalChallengesSubTab_C, ShouldReturnFocus) == 0x0004A8, "Member 'UUI_SeasonalChallengesSubTab_C::ShouldReturnFocus' has a wrong offset!");

}

