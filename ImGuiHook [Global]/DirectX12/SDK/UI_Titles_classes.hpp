#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Titles

#include "Basic.hpp"

#include "Flame_structs.hpp"
#include "Flame_classes.hpp"
#include "Engine_structs.hpp"
#include "F_RefinedTitle_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_Titles.UI_Titles_C
// 0x00B8 (0x03D0 - 0x0318)
class UUI_Titles_C final : public UUpdateableWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0318(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UUI_InputActionWidget_C*                ActionMoreInfo;                                    // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           CloudMessage;                                      // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFlameTextBlock*                        Description;                                       // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_InputActionWidget_C*                GamepadActionClose;                                // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_InputActionWidget_C*                GamepadActionSelect;                               // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_InputActionWidget_C*                GamepadActionZoom;                                 // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             ScrollBox;                                         // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           TitlesCanvas;                                      // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_SellingPointButton_C*               UI_SellingPointButton;                             // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher;                                    // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ABP_ShelterUI_C*                        Shelter_UI;                                        // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_TitlesManager_C*                    Titles_Manager;                                    // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Selected_TitleName;                                // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FF_RefinedTitle>                RefinedOwned;                                      // 0x0388(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FF_RefinedTitle>                RefinedAvailable;                                  // 0x0398(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FF_RefinedTitle>                RefinedSleepers;                                   // 0x03A8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         SelectedTitleRank;                                 // 0x03B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BC[0x4];                                      // 0x03BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UListButtonWidget*                      FocusedListButton;                                 // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPanning;                                         // 0x03C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ShouldReturnFocus;                                 // 0x03C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_UI_Titles(int32 EntryPoint);
	void SetFocusBack(class UFlameWidget* FlameWidget);
	void HandleFocusBack();
	void OnResetToDefaultState();
	void StopPanning();
	void StartPanning();
	void HandleMouseInput();
	void BndEvt__UI_Titles_ActionMoreInfo_K2Node_ComponentBoundEvent_0_OnActionPressedEvent__DelegateSignature();
	void BndEvt__UI_Titles_GamepadActionSelect_K2Node_ComponentBoundEvent_3_OnClickedEvent__DelegateSignature();
	void BndEvt__GamepadActionClose_K2Node_ComponentBoundEvent_2_OnClickedEvent__DelegateSignature();
	void ZoomOut();
	void ZoomIn();
	void ListenForMouseWheel();
	void BndEvt__GamepadActionZoom_K2Node_ComponentBoundEvent_0_OnActionPressedEvent__DelegateSignature();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Titles_Manager_Ready();
	void Construct();
	void Destruct();
	void Prepare_Title_Data();
	void Refine_Title_Info(class FName Title_Name, int32 Rank_Index, bool Owned, bool Sleeper, const TArray<struct FF_RefinedTitle>& TargetArray);
	void Fill_Menu();
	void Handle_Onboarding();
	void Add_Title_to_List(class FName Title_Name, int32 Title_Rank, const struct FF_TitleList& Title_Info, bool Title_Owned, class UUI_TitleListItem_C** AddedItem);
	void Preview_Badge(class UListButtonWidget* Sender);
	void Select_Title(class UListButtonWidget* Sender);
	void Sort_Owned_Titles_by_Rarity(const TMap<class FName, int32>& Titles, TArray<class FName>* Sorted_Titles, TArray<int32>* Sorted_Title_Ranks);
	void Sort_Unowned_Titles_by_Rarity(TArray<class FName>& Titles, TArray<class FName>* Sorted_Titles);
	void ShowSellingPointButton(class UUI_TitleListItem_C* ListItem);
	void SortTitles(class UObject* ObjectA, class UObject* ObjectB, bool* Return);

	class UWidget* GetWidgetToFocus() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_Titles_C">();
	}
	static class UUI_Titles_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_Titles_C>();
	}
};
static_assert(alignof(UUI_Titles_C) == 0x000008, "Wrong alignment on UUI_Titles_C");
static_assert(sizeof(UUI_Titles_C) == 0x0003D0, "Wrong size on UUI_Titles_C");
static_assert(offsetof(UUI_Titles_C, UberGraphFrame) == 0x000318, "Member 'UUI_Titles_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_Titles_C, ActionMoreInfo) == 0x000320, "Member 'UUI_Titles_C::ActionMoreInfo' has a wrong offset!");
static_assert(offsetof(UUI_Titles_C, CloudMessage) == 0x000328, "Member 'UUI_Titles_C::CloudMessage' has a wrong offset!");
static_assert(offsetof(UUI_Titles_C, Description) == 0x000330, "Member 'UUI_Titles_C::Description' has a wrong offset!");
static_assert(offsetof(UUI_Titles_C, GamepadActionClose) == 0x000338, "Member 'UUI_Titles_C::GamepadActionClose' has a wrong offset!");
static_assert(offsetof(UUI_Titles_C, GamepadActionSelect) == 0x000340, "Member 'UUI_Titles_C::GamepadActionSelect' has a wrong offset!");
static_assert(offsetof(UUI_Titles_C, GamepadActionZoom) == 0x000348, "Member 'UUI_Titles_C::GamepadActionZoom' has a wrong offset!");
static_assert(offsetof(UUI_Titles_C, ScrollBox) == 0x000350, "Member 'UUI_Titles_C::ScrollBox' has a wrong offset!");
static_assert(offsetof(UUI_Titles_C, TitlesCanvas) == 0x000358, "Member 'UUI_Titles_C::TitlesCanvas' has a wrong offset!");
static_assert(offsetof(UUI_Titles_C, UI_SellingPointButton) == 0x000360, "Member 'UUI_Titles_C::UI_SellingPointButton' has a wrong offset!");
static_assert(offsetof(UUI_Titles_C, WidgetSwitcher) == 0x000368, "Member 'UUI_Titles_C::WidgetSwitcher' has a wrong offset!");
static_assert(offsetof(UUI_Titles_C, Shelter_UI) == 0x000370, "Member 'UUI_Titles_C::Shelter_UI' has a wrong offset!");
static_assert(offsetof(UUI_Titles_C, Titles_Manager) == 0x000378, "Member 'UUI_Titles_C::Titles_Manager' has a wrong offset!");
static_assert(offsetof(UUI_Titles_C, Selected_TitleName) == 0x000380, "Member 'UUI_Titles_C::Selected_TitleName' has a wrong offset!");
static_assert(offsetof(UUI_Titles_C, RefinedOwned) == 0x000388, "Member 'UUI_Titles_C::RefinedOwned' has a wrong offset!");
static_assert(offsetof(UUI_Titles_C, RefinedAvailable) == 0x000398, "Member 'UUI_Titles_C::RefinedAvailable' has a wrong offset!");
static_assert(offsetof(UUI_Titles_C, RefinedSleepers) == 0x0003A8, "Member 'UUI_Titles_C::RefinedSleepers' has a wrong offset!");
static_assert(offsetof(UUI_Titles_C, SelectedTitleRank) == 0x0003B8, "Member 'UUI_Titles_C::SelectedTitleRank' has a wrong offset!");
static_assert(offsetof(UUI_Titles_C, FocusedListButton) == 0x0003C0, "Member 'UUI_Titles_C::FocusedListButton' has a wrong offset!");
static_assert(offsetof(UUI_Titles_C, IsPanning) == 0x0003C8, "Member 'UUI_Titles_C::IsPanning' has a wrong offset!");
static_assert(offsetof(UUI_Titles_C, ShouldReturnFocus) == 0x0003C9, "Member 'UUI_Titles_C::ShouldReturnFocus' has a wrong offset!");

}

