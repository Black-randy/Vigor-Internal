#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ChallengeCondition_SingleEncounterUseConsumable

#include "Basic.hpp"

#include "Flame_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_ChallengeCondition_SingleEncounterUseConsumable.BP_ChallengeCondition_SingleEncounterUseConsumable_C.ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable
// 0x0110 (0x0110 - 0x0000)
struct BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UClass* UsedConsumable, class APlayerState* User)> K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Maximum_Progress_Maximum_Progress;    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameState_Matches_C*                K2Node_DynamicCast_AsBP_Game_State_Matches;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UEventSystem*                           CallFunc_GetEventSystem_ReturnValue;               // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_CustomEvent_UsedConsumable;                 // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           K2Node_CustomEvent_User;                           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_EventSystem_C*                      K2Node_DynamicCast_AsBP_Event_System;              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FChallengeParameter                    CallFunc_Array_Get_Item;                           // 0x0078(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0x2];                                       // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FChallengeParameter                    CallFunc_Array_Get_Item_1;                         // 0x0098(0x0010)(NoDestructor)
	class UClass*                                 K2Node_ClassDynamicCast_AsConsumable_Item;         // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_Array_Get_Item_2;                         // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x00C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Maximum_Progress_Maximum_Progress_1;  // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Maximum_Progress_Maximum_Progress_2;  // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x00EE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EF[0x1];                                       // 0x00EF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Maximum_Progress_Maximum_Progress_3;  // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue_1;                        // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0100(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable) == 0x000008, "Wrong alignment on BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable");
static_assert(sizeof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable) == 0x000110, "Wrong size on BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable");
static_assert(offsetof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable, EntryPoint) == 0x000000, "Member 'BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable, Temp_int_Variable) == 0x000004, "Member 'BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable, Temp_bool_True_if_break_was_hit_Variable) == 0x000008, "Member 'BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable, CallFunc_Get_Maximum_Progress_Maximum_Progress) == 0x00002C, "Member 'BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable::CallFunc_Get_Maximum_Progress_Maximum_Progress' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable, CallFunc_GetGameState_ReturnValue) == 0x000030, "Member 'BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable, K2Node_DynamicCast_AsBP_Game_State_Matches) == 0x000040, "Member 'BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable::K2Node_DynamicCast_AsBP_Game_State_Matches' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable, CallFunc_GetEventSystem_ReturnValue) == 0x000050, "Member 'BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable::CallFunc_GetEventSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable, K2Node_CustomEvent_UsedConsumable) == 0x000058, "Member 'BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable::K2Node_CustomEvent_UsedConsumable' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable, K2Node_CustomEvent_User) == 0x000060, "Member 'BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable::K2Node_CustomEvent_User' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable, K2Node_DynamicCast_AsBP_Event_System) == 0x000068, "Member 'BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable::K2Node_DynamicCast_AsBP_Event_System' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable, CallFunc_Array_Get_Item) == 0x000078, "Member 'BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable, CallFunc_Array_Length_ReturnValue_1) == 0x00008C, "Member 'BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable, CallFunc_Greater_IntInt_ReturnValue) == 0x000090, "Member 'BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable, CallFunc_Not_PreBool_ReturnValue_1) == 0x000091, "Member 'BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable, Temp_int_Array_Index_Variable_1) == 0x000094, "Member 'BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable, CallFunc_Array_Get_Item_1) == 0x000098, "Member 'BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable, K2Node_ClassDynamicCast_AsConsumable_Item) == 0x0000A8, "Member 'BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable::K2Node_ClassDynamicCast_AsConsumable_Item' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable, K2Node_ClassDynamicCast_bSuccess) == 0x0000B0, "Member 'BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable, CallFunc_Array_Add_ReturnValue) == 0x0000B4, "Member 'BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable, CallFunc_Array_Get_Item_2) == 0x0000B8, "Member 'BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable, CallFunc_Array_Length_ReturnValue_2) == 0x0000C0, "Member 'BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x0000C4, "Member 'BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000C5, "Member 'BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable, CallFunc_ClassIsChildOf_ReturnValue) == 0x0000C6, "Member 'BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable, CallFunc_BooleanAND_ReturnValue) == 0x0000C7, "Member 'BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable, CallFunc_BooleanOR_ReturnValue) == 0x0000C8, "Member 'BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable, Temp_int_Variable_1) == 0x0000CC, "Member 'BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable, CallFunc_Get_Maximum_Progress_Maximum_Progress_1) == 0x0000D0, "Member 'BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable::CallFunc_Get_Maximum_Progress_Maximum_Progress_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable, CallFunc_Min_ReturnValue) == 0x0000D4, "Member 'BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000D8, "Member 'BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable, CallFunc_Get_Maximum_Progress_Maximum_Progress_2) == 0x0000DC, "Member 'BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable::CallFunc_Get_Maximum_Progress_Maximum_Progress_2' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000E0, "Member 'BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable, Temp_int_Loop_Counter_Variable_1) == 0x0000E4, "Member 'BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable, CallFunc_Array_Length_ReturnValue_3) == 0x0000E8, "Member 'BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000EC, "Member 'BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0000ED, "Member 'BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable, CallFunc_Not_PreBool_ReturnValue_2) == 0x0000EE, "Member 'BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000F0, "Member 'BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable, CallFunc_Get_Maximum_Progress_Maximum_Progress_3) == 0x0000F4, "Member 'BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable::CallFunc_Get_Maximum_Progress_Maximum_Progress_3' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable, CallFunc_Min_ReturnValue_1) == 0x0000F8, "Member 'BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable::CallFunc_Min_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000FC, "Member 'BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable, K2Node_CreateDelegate_OutputDelegate_1) == 0x000100, "Member 'BP_ChallengeCondition_SingleEncounterUseConsumable_C_ExecuteUbergraph_BP_ChallengeCondition_SingleEncounterUseConsumable::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function BP_ChallengeCondition_SingleEncounterUseConsumable.BP_ChallengeCondition_SingleEncounterUseConsumable_C.OnConsumableUsed
// 0x0010 (0x0010 - 0x0000)
struct BP_ChallengeCondition_SingleEncounterUseConsumable_C_OnConsumableUsed final
{
public:
	class UClass*                                 UsedConsumable;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           User;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_OnConsumableUsed) == 0x000008, "Wrong alignment on BP_ChallengeCondition_SingleEncounterUseConsumable_C_OnConsumableUsed");
static_assert(sizeof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_OnConsumableUsed) == 0x000010, "Wrong size on BP_ChallengeCondition_SingleEncounterUseConsumable_C_OnConsumableUsed");
static_assert(offsetof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_OnConsumableUsed, UsedConsumable) == 0x000000, "Member 'BP_ChallengeCondition_SingleEncounterUseConsumable_C_OnConsumableUsed::UsedConsumable' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_OnConsumableUsed, User) == 0x000008, "Member 'BP_ChallengeCondition_SingleEncounterUseConsumable_C_OnConsumableUsed::User' has a wrong offset!");

// Function BP_ChallengeCondition_SingleEncounterUseConsumable.BP_ChallengeCondition_SingleEncounterUseConsumable_C.Get Maximum Progress
// 0x0004 (0x0004 - 0x0000)
struct BP_ChallengeCondition_SingleEncounterUseConsumable_C_Get_Maximum_Progress final
{
public:
	int32                                         Maximum_Progress;                                  // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_Get_Maximum_Progress) == 0x000004, "Wrong alignment on BP_ChallengeCondition_SingleEncounterUseConsumable_C_Get_Maximum_Progress");
static_assert(sizeof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_Get_Maximum_Progress) == 0x000004, "Wrong size on BP_ChallengeCondition_SingleEncounterUseConsumable_C_Get_Maximum_Progress");
static_assert(offsetof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_Get_Maximum_Progress, Maximum_Progress) == 0x000000, "Member 'BP_ChallengeCondition_SingleEncounterUseConsumable_C_Get_Maximum_Progress::Maximum_Progress' has a wrong offset!");

// Function BP_ChallengeCondition_SingleEncounterUseConsumable.BP_ChallengeCondition_SingleEncounterUseConsumable_C.Get Condition Text
// 0x00A0 (0x00A0 - 0x0000)
struct BP_ChallengeCondition_SingleEncounterUseConsumable_C_Get_Condition_Text final
{
public:
	class FText                                   Condition_Text;                                    // 0x0000(0x0018)(Parm, OutParm)
	int32                                         CallFunc_Get_Maximum_Progress_Maximum_Progress;    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Get_Condition_Text_Condition_Text;        // 0x0020(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0088(0x0018)()
};
static_assert(alignof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_Get_Condition_Text) == 0x000008, "Wrong alignment on BP_ChallengeCondition_SingleEncounterUseConsumable_C_Get_Condition_Text");
static_assert(sizeof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_Get_Condition_Text) == 0x0000A0, "Wrong size on BP_ChallengeCondition_SingleEncounterUseConsumable_C_Get_Condition_Text");
static_assert(offsetof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_Get_Condition_Text, Condition_Text) == 0x000000, "Member 'BP_ChallengeCondition_SingleEncounterUseConsumable_C_Get_Condition_Text::Condition_Text' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_Get_Condition_Text, CallFunc_Get_Maximum_Progress_Maximum_Progress) == 0x000018, "Member 'BP_ChallengeCondition_SingleEncounterUseConsumable_C_Get_Condition_Text::CallFunc_Get_Maximum_Progress_Maximum_Progress' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_Get_Condition_Text, CallFunc_Get_Condition_Text_Condition_Text) == 0x000020, "Member 'BP_ChallengeCondition_SingleEncounterUseConsumable_C_Get_Condition_Text::CallFunc_Get_Condition_Text_Condition_Text' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_Get_Condition_Text, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'BP_ChallengeCondition_SingleEncounterUseConsumable_C_Get_Condition_Text::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_Get_Condition_Text, K2Node_MakeArray_Array) == 0x000078, "Member 'BP_ChallengeCondition_SingleEncounterUseConsumable_C_Get_Condition_Text::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_ChallengeCondition_SingleEncounterUseConsumable_C_Get_Condition_Text, CallFunc_Format_ReturnValue) == 0x000088, "Member 'BP_ChallengeCondition_SingleEncounterUseConsumable_C_Get_Condition_Text::CallFunc_Format_ReturnValue' has a wrong offset!");

}

