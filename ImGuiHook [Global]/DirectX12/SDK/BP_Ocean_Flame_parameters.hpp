#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Ocean_Flame

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "OceanPlugin_structs.hpp"
#include "OceanShaderEnum_structs.hpp"


namespace SDK::Params
{

// Function BP_Ocean_Flame.BP_Ocean_Flame_C.ExecuteUbergraph_BP_Ocean_Flame
// 0x0008 (0x0008 - 0x0000)
struct BP_Ocean_Flame_C_ExecuteUbergraph_BP_Ocean_Flame final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Offset;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Ocean_Flame_C_ExecuteUbergraph_BP_Ocean_Flame) == 0x000004, "Wrong alignment on BP_Ocean_Flame_C_ExecuteUbergraph_BP_Ocean_Flame");
static_assert(sizeof(BP_Ocean_Flame_C_ExecuteUbergraph_BP_Ocean_Flame) == 0x000008, "Wrong size on BP_Ocean_Flame_C_ExecuteUbergraph_BP_Ocean_Flame");
static_assert(offsetof(BP_Ocean_Flame_C_ExecuteUbergraph_BP_Ocean_Flame, EntryPoint) == 0x000000, "Member 'BP_Ocean_Flame_C_ExecuteUbergraph_BP_Ocean_Flame::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_ExecuteUbergraph_BP_Ocean_Flame, K2Node_CustomEvent_Offset) == 0x000004, "Member 'BP_Ocean_Flame_C_ExecuteUbergraph_BP_Ocean_Flame::K2Node_CustomEvent_Offset' has a wrong offset!");

// Function BP_Ocean_Flame.BP_Ocean_Flame_C.SetNetworkOffset
// 0x0004 (0x0004 - 0x0000)
struct BP_Ocean_Flame_C_SetNetworkOffset final
{
public:
	float                                         Offset;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Ocean_Flame_C_SetNetworkOffset) == 0x000004, "Wrong alignment on BP_Ocean_Flame_C_SetNetworkOffset");
static_assert(sizeof(BP_Ocean_Flame_C_SetNetworkOffset) == 0x000004, "Wrong size on BP_Ocean_Flame_C_SetNetworkOffset");
static_assert(offsetof(BP_Ocean_Flame_C_SetNetworkOffset, Offset) == 0x000000, "Member 'BP_Ocean_Flame_C_SetNetworkOffset::Offset' has a wrong offset!");

// Function BP_Ocean_Flame.BP_Ocean_Flame_C.UserConstructionScript
// 0x00B0 (0x00B0 - 0x0000)
struct BP_Ocean_Flame_C_UserConstructionScript final
{
public:
	EOceanShaderEnum                              Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_2;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_3;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_4;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_5;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_6;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_7;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_8;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_9;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_10;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_11;                           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_12;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_13;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_2; // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_3; // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Ocean_Flame_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_Ocean_Flame_C_UserConstructionScript");
static_assert(sizeof(BP_Ocean_Flame_C_UserConstructionScript) == 0x0000B0, "Wrong size on BP_Ocean_Flame_C_UserConstructionScript");
static_assert(offsetof(BP_Ocean_Flame_C_UserConstructionScript, Temp_byte_Variable) == 0x000000, "Member 'BP_Ocean_Flame_C_UserConstructionScript::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_UserConstructionScript, Temp_object_Variable) == 0x000008, "Member 'BP_Ocean_Flame_C_UserConstructionScript::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_UserConstructionScript, Temp_object_Variable_1) == 0x000010, "Member 'BP_Ocean_Flame_C_UserConstructionScript::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_UserConstructionScript, Temp_object_Variable_2) == 0x000018, "Member 'BP_Ocean_Flame_C_UserConstructionScript::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_UserConstructionScript, Temp_object_Variable_3) == 0x000020, "Member 'BP_Ocean_Flame_C_UserConstructionScript::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_UserConstructionScript, Temp_object_Variable_4) == 0x000028, "Member 'BP_Ocean_Flame_C_UserConstructionScript::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_UserConstructionScript, Temp_object_Variable_5) == 0x000030, "Member 'BP_Ocean_Flame_C_UserConstructionScript::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_UserConstructionScript, Temp_object_Variable_6) == 0x000038, "Member 'BP_Ocean_Flame_C_UserConstructionScript::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_UserConstructionScript, Temp_object_Variable_7) == 0x000040, "Member 'BP_Ocean_Flame_C_UserConstructionScript::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_UserConstructionScript, Temp_object_Variable_8) == 0x000048, "Member 'BP_Ocean_Flame_C_UserConstructionScript::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_UserConstructionScript, Temp_object_Variable_9) == 0x000050, "Member 'BP_Ocean_Flame_C_UserConstructionScript::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_UserConstructionScript, Temp_object_Variable_10) == 0x000058, "Member 'BP_Ocean_Flame_C_UserConstructionScript::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_UserConstructionScript, Temp_object_Variable_11) == 0x000060, "Member 'BP_Ocean_Flame_C_UserConstructionScript::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_UserConstructionScript, Temp_object_Variable_12) == 0x000068, "Member 'BP_Ocean_Flame_C_UserConstructionScript::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_UserConstructionScript, Temp_object_Variable_13) == 0x000070, "Member 'BP_Ocean_Flame_C_UserConstructionScript::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_UserConstructionScript, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000078, "Member 'BP_Ocean_Flame_C_UserConstructionScript::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_UserConstructionScript, CallFunc_Array_Add_ReturnValue) == 0x00007C, "Member 'BP_Ocean_Flame_C_UserConstructionScript::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_UserConstructionScript, K2Node_SwitchEnum_CmpSuccess) == 0x000080, "Member 'BP_Ocean_Flame_C_UserConstructionScript::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_UserConstructionScript, K2Node_Select_Default) == 0x000088, "Member 'BP_Ocean_Flame_C_UserConstructionScript::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000090, "Member 'BP_Ocean_Flame_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000098, "Member 'BP_Ocean_Flame_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue_2) == 0x0000A0, "Member 'BP_Ocean_Flame_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue_3) == 0x0000A8, "Member 'BP_Ocean_Flame_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue_3' has a wrong offset!");

// Function BP_Ocean_Flame.BP_Ocean_Flame_C.Create Wave Set
// 0x01C8 (0x01C8 - 0x0000)
struct BP_Ocean_Flame_C_Create_Wave_Set final
{
public:
	struct FWaveSetParameters                     SetParams;                                         // 0x0000(0x00A0)(Edit, BlueprintVisible, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue_1;                  // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue_2;                  // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue_3;                  // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue_4;                  // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue_5;                  // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue_6;                  // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue_7;                  // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWaveSetParameters                     CallFunc_Array_Get_Item;                           // 0x0128(0x00A0)(NoDestructor)
};
static_assert(alignof(BP_Ocean_Flame_C_Create_Wave_Set) == 0x000004, "Wrong alignment on BP_Ocean_Flame_C_Create_Wave_Set");
static_assert(sizeof(BP_Ocean_Flame_C_Create_Wave_Set) == 0x0001C8, "Wrong size on BP_Ocean_Flame_C_Create_Wave_Set");
static_assert(offsetof(BP_Ocean_Flame_C_Create_Wave_Set, SetParams) == 0x000000, "Member 'BP_Ocean_Flame_C_Create_Wave_Set::SetParams' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Create_Wave_Set, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'BP_Ocean_Flame_C_Create_Wave_Set::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Create_Wave_Set, CallFunc_Greater_IntInt_ReturnValue) == 0x0000A4, "Member 'BP_Ocean_Flame_C_Create_Wave_Set::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Create_Wave_Set, CallFunc_MakeColor_ReturnValue) == 0x0000A8, "Member 'BP_Ocean_Flame_C_Create_Wave_Set::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Create_Wave_Set, CallFunc_MakeColor_ReturnValue_1) == 0x0000B8, "Member 'BP_Ocean_Flame_C_Create_Wave_Set::CallFunc_MakeColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Create_Wave_Set, CallFunc_MakeColor_ReturnValue_2) == 0x0000C8, "Member 'BP_Ocean_Flame_C_Create_Wave_Set::CallFunc_MakeColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Create_Wave_Set, CallFunc_MakeColor_ReturnValue_3) == 0x0000D8, "Member 'BP_Ocean_Flame_C_Create_Wave_Set::CallFunc_MakeColor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Create_Wave_Set, CallFunc_MakeColor_ReturnValue_4) == 0x0000E8, "Member 'BP_Ocean_Flame_C_Create_Wave_Set::CallFunc_MakeColor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Create_Wave_Set, CallFunc_MakeColor_ReturnValue_5) == 0x0000F8, "Member 'BP_Ocean_Flame_C_Create_Wave_Set::CallFunc_MakeColor_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Create_Wave_Set, CallFunc_MakeColor_ReturnValue_6) == 0x000108, "Member 'BP_Ocean_Flame_C_Create_Wave_Set::CallFunc_MakeColor_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Create_Wave_Set, CallFunc_MakeColor_ReturnValue_7) == 0x000118, "Member 'BP_Ocean_Flame_C_Create_Wave_Set::CallFunc_MakeColor_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Create_Wave_Set, CallFunc_Array_Get_Item) == 0x000128, "Member 'BP_Ocean_Flame_C_Create_Wave_Set::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_Ocean_Flame.BP_Ocean_Flame_C.Set Display Parameters
// 0x004C (0x004C - 0x0000)
struct BP_Ocean_Flame_C_Set_Display_Parameters final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_1;   // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_2;   // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Ocean_Flame_C_Set_Display_Parameters) == 0x000004, "Wrong alignment on BP_Ocean_Flame_C_Set_Display_Parameters");
static_assert(sizeof(BP_Ocean_Flame_C_Set_Display_Parameters) == 0x00004C, "Wrong size on BP_Ocean_Flame_C_Set_Display_Parameters");
static_assert(offsetof(BP_Ocean_Flame_C_Set_Display_Parameters, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_Ocean_Flame_C_Set_Display_Parameters::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Set_Display_Parameters, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000004, "Member 'BP_Ocean_Flame_C_Set_Display_Parameters::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Set_Display_Parameters, CallFunc_Conv_VectorToLinearColor_ReturnValue_1) == 0x000014, "Member 'BP_Ocean_Flame_C_Set_Display_Parameters::CallFunc_Conv_VectorToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Set_Display_Parameters, CallFunc_Conv_VectorToLinearColor_ReturnValue_2) == 0x000024, "Member 'BP_Ocean_Flame_C_Set_Display_Parameters::CallFunc_Conv_VectorToLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Set_Display_Parameters, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000034, "Member 'BP_Ocean_Flame_C_Set_Display_Parameters::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Set_Display_Parameters, CallFunc_BreakVector_X) == 0x000040, "Member 'BP_Ocean_Flame_C_Set_Display_Parameters::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Set_Display_Parameters, CallFunc_BreakVector_Y) == 0x000044, "Member 'BP_Ocean_Flame_C_Set_Display_Parameters::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Set_Display_Parameters, CallFunc_BreakVector_Z) == 0x000048, "Member 'BP_Ocean_Flame_C_Set_Display_Parameters::CallFunc_BreakVector_Z' has a wrong offset!");

// Function BP_Ocean_Flame.BP_Ocean_Flame_C.Set Global Parameters
// 0x009C (0x009C - 0x0000)
struct BP_Ocean_Flame_C_Set_Global_Parameters final
{
public:
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue;              // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_1;   // 0x002C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Blueprint_GetSizeY_ReturnValue;           // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Blueprint_GetSizeX_ReturnValue;           // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWaveParameter                         CallFunc_Array_Get_Item;                           // 0x0068(0x0014)(NoDestructor)
	float                                         CallFunc_BreakVector2D_X;                          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_1;                   // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Ocean_Flame_C_Set_Global_Parameters) == 0x000004, "Wrong alignment on BP_Ocean_Flame_C_Set_Global_Parameters");
static_assert(sizeof(BP_Ocean_Flame_C_Set_Global_Parameters) == 0x00009C, "Wrong size on BP_Ocean_Flame_C_Set_Global_Parameters");
static_assert(offsetof(BP_Ocean_Flame_C_Set_Global_Parameters, CallFunc_GetActorScale3D_ReturnValue) == 0x000000, "Member 'BP_Ocean_Flame_C_Set_Global_Parameters::CallFunc_GetActorScale3D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Set_Global_Parameters, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'BP_Ocean_Flame_C_Set_Global_Parameters::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Set_Global_Parameters, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000010, "Member 'BP_Ocean_Flame_C_Set_Global_Parameters::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Set_Global_Parameters, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'BP_Ocean_Flame_C_Set_Global_Parameters::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Set_Global_Parameters, CallFunc_Conv_VectorToLinearColor_ReturnValue_1) == 0x00002C, "Member 'BP_Ocean_Flame_C_Set_Global_Parameters::CallFunc_Conv_VectorToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Set_Global_Parameters, CallFunc_IsValid_ReturnValue_1) == 0x00003C, "Member 'BP_Ocean_Flame_C_Set_Global_Parameters::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Set_Global_Parameters, CallFunc_IsValid_ReturnValue_2) == 0x00003D, "Member 'BP_Ocean_Flame_C_Set_Global_Parameters::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Set_Global_Parameters, CallFunc_Blueprint_GetSizeY_ReturnValue) == 0x000040, "Member 'BP_Ocean_Flame_C_Set_Global_Parameters::CallFunc_Blueprint_GetSizeY_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Set_Global_Parameters, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000044, "Member 'BP_Ocean_Flame_C_Set_Global_Parameters::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Set_Global_Parameters, CallFunc_Blueprint_GetSizeX_ReturnValue) == 0x000048, "Member 'BP_Ocean_Flame_C_Set_Global_Parameters::CallFunc_Blueprint_GetSizeX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Set_Global_Parameters, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x00004C, "Member 'BP_Ocean_Flame_C_Set_Global_Parameters::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Set_Global_Parameters, K2Node_MakeStruct_LinearColor) == 0x000050, "Member 'BP_Ocean_Flame_C_Set_Global_Parameters::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Set_Global_Parameters, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'BP_Ocean_Flame_C_Set_Global_Parameters::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Set_Global_Parameters, CallFunc_Greater_IntInt_ReturnValue) == 0x000064, "Member 'BP_Ocean_Flame_C_Set_Global_Parameters::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Set_Global_Parameters, CallFunc_Array_Get_Item) == 0x000068, "Member 'BP_Ocean_Flame_C_Set_Global_Parameters::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Set_Global_Parameters, CallFunc_BreakVector2D_X) == 0x00007C, "Member 'BP_Ocean_Flame_C_Set_Global_Parameters::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Set_Global_Parameters, CallFunc_BreakVector2D_Y) == 0x000080, "Member 'BP_Ocean_Flame_C_Set_Global_Parameters::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Set_Global_Parameters, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000084, "Member 'BP_Ocean_Flame_C_Set_Global_Parameters::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Set_Global_Parameters, K2Node_MakeStruct_LinearColor_1) == 0x000088, "Member 'BP_Ocean_Flame_C_Set_Global_Parameters::K2Node_MakeStruct_LinearColor_1' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Set_Global_Parameters, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000098, "Member 'BP_Ocean_Flame_C_Set_Global_Parameters::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function BP_Ocean_Flame.BP_Ocean_Flame_C.GetOceanPoint
// 0x0080 (0x0080 - 0x0000)
struct BP_Ocean_Flame_C_GetOceanPoint final
{
public:
	struct FVector                                WorldLocation;                                     // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Output1;                                           // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Output;                                            // 0x0018(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetVectorParameterValue_ReturnValue;      // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWaveParameter                         CallFunc_Array_Get_Item;                           // 0x0044(0x0014)(NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Gerstner_WavePointX;                      // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Gerstner_WavePointY;                      // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Gerstner_WavePointZ;                      // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Ocean_Flame_C_GetOceanPoint) == 0x000004, "Wrong alignment on BP_Ocean_Flame_C_GetOceanPoint");
static_assert(sizeof(BP_Ocean_Flame_C_GetOceanPoint) == 0x000080, "Wrong size on BP_Ocean_Flame_C_GetOceanPoint");
static_assert(offsetof(BP_Ocean_Flame_C_GetOceanPoint, WorldLocation) == 0x000000, "Member 'BP_Ocean_Flame_C_GetOceanPoint::WorldLocation' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_GetOceanPoint, Output1) == 0x00000C, "Member 'BP_Ocean_Flame_C_GetOceanPoint::Output1' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_GetOceanPoint, Output) == 0x000018, "Member 'BP_Ocean_Flame_C_GetOceanPoint::Output' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_GetOceanPoint, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BP_Ocean_Flame_C_GetOceanPoint::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_GetOceanPoint, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BP_Ocean_Flame_C_GetOceanPoint::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_GetOceanPoint, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_Ocean_Flame_C_GetOceanPoint::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_GetOceanPoint, CallFunc_GetVectorParameterValue_ReturnValue) == 0x000030, "Member 'BP_Ocean_Flame_C_GetOceanPoint::CallFunc_GetVectorParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_GetOceanPoint, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_Ocean_Flame_C_GetOceanPoint::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_GetOceanPoint, CallFunc_Array_Get_Item) == 0x000044, "Member 'BP_Ocean_Flame_C_GetOceanPoint::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_GetOceanPoint, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'BP_Ocean_Flame_C_GetOceanPoint::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_GetOceanPoint, CallFunc_Gerstner_WavePointX) == 0x00005C, "Member 'BP_Ocean_Flame_C_GetOceanPoint::CallFunc_Gerstner_WavePointX' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_GetOceanPoint, CallFunc_Gerstner_WavePointY) == 0x000060, "Member 'BP_Ocean_Flame_C_GetOceanPoint::CallFunc_Gerstner_WavePointY' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_GetOceanPoint, CallFunc_Gerstner_WavePointZ) == 0x000064, "Member 'BP_Ocean_Flame_C_GetOceanPoint::CallFunc_Gerstner_WavePointZ' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_GetOceanPoint, CallFunc_MakeVector_ReturnValue) == 0x000068, "Member 'BP_Ocean_Flame_C_GetOceanPoint::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_GetOceanPoint, CallFunc_Add_VectorVector_ReturnValue) == 0x000074, "Member 'BP_Ocean_Flame_C_GetOceanPoint::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_Ocean_Flame.BP_Ocean_Flame_C.Gerstner
// 0x00CC (0x00CC - 0x0000)
struct BP_Ocean_Flame_C_Gerstner final
{
public:
	struct FVector                                WorldPosition;                                     // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                WaveDirection;                                     // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Wavelength;                                        // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WaveSpeed;                                         // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WaveAmplitude;                                     // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WaveSteepness;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumWaves;                                          // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WavePointX;                                        // 0x002C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WavePointY;                                        // 0x0030(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WavePointZ;                                        // 0x0034(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Normal2D_ReturnValue;                     // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DotProduct2D_ReturnValue;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRealTimeSeconds_ReturnValue;           // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyByPi_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyByPi_ReturnValue_1;               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Sin_ReturnValue;                          // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_6;        // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_7;        // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Cos_ReturnValue;                          // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_8;        // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_9;        // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_10;       // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_11;       // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Ocean_Flame_C_Gerstner) == 0x000004, "Wrong alignment on BP_Ocean_Flame_C_Gerstner");
static_assert(sizeof(BP_Ocean_Flame_C_Gerstner) == 0x0000CC, "Wrong size on BP_Ocean_Flame_C_Gerstner");
static_assert(offsetof(BP_Ocean_Flame_C_Gerstner, WorldPosition) == 0x000000, "Member 'BP_Ocean_Flame_C_Gerstner::WorldPosition' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Gerstner, WaveDirection) == 0x00000C, "Member 'BP_Ocean_Flame_C_Gerstner::WaveDirection' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Gerstner, Wavelength) == 0x000018, "Member 'BP_Ocean_Flame_C_Gerstner::Wavelength' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Gerstner, WaveSpeed) == 0x00001C, "Member 'BP_Ocean_Flame_C_Gerstner::WaveSpeed' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Gerstner, WaveAmplitude) == 0x000020, "Member 'BP_Ocean_Flame_C_Gerstner::WaveAmplitude' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Gerstner, WaveSteepness) == 0x000024, "Member 'BP_Ocean_Flame_C_Gerstner::WaveSteepness' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Gerstner, NumWaves) == 0x000028, "Member 'BP_Ocean_Flame_C_Gerstner::NumWaves' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Gerstner, WavePointX) == 0x00002C, "Member 'BP_Ocean_Flame_C_Gerstner::WavePointX' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Gerstner, WavePointY) == 0x000030, "Member 'BP_Ocean_Flame_C_Gerstner::WavePointY' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Gerstner, WavePointZ) == 0x000034, "Member 'BP_Ocean_Flame_C_Gerstner::WavePointZ' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Gerstner, CallFunc_BreakVector_X) == 0x000038, "Member 'BP_Ocean_Flame_C_Gerstner::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Gerstner, CallFunc_BreakVector_Y) == 0x00003C, "Member 'BP_Ocean_Flame_C_Gerstner::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Gerstner, CallFunc_BreakVector_Z) == 0x000040, "Member 'BP_Ocean_Flame_C_Gerstner::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Gerstner, CallFunc_BreakVector_X_1) == 0x000044, "Member 'BP_Ocean_Flame_C_Gerstner::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Gerstner, CallFunc_BreakVector_Y_1) == 0x000048, "Member 'BP_Ocean_Flame_C_Gerstner::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Gerstner, CallFunc_BreakVector_Z_1) == 0x00004C, "Member 'BP_Ocean_Flame_C_Gerstner::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Gerstner, CallFunc_MakeVector2D_ReturnValue) == 0x000050, "Member 'BP_Ocean_Flame_C_Gerstner::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Gerstner, CallFunc_BreakVector_X_2) == 0x000058, "Member 'BP_Ocean_Flame_C_Gerstner::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Gerstner, CallFunc_BreakVector_Y_2) == 0x00005C, "Member 'BP_Ocean_Flame_C_Gerstner::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Gerstner, CallFunc_BreakVector_Z_2) == 0x000060, "Member 'BP_Ocean_Flame_C_Gerstner::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Gerstner, CallFunc_Normal2D_ReturnValue) == 0x000064, "Member 'BP_Ocean_Flame_C_Gerstner::CallFunc_Normal2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Gerstner, CallFunc_MakeVector2D_ReturnValue_1) == 0x00006C, "Member 'BP_Ocean_Flame_C_Gerstner::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Gerstner, CallFunc_DotProduct2D_ReturnValue) == 0x000074, "Member 'BP_Ocean_Flame_C_Gerstner::CallFunc_DotProduct2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Gerstner, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000078, "Member 'BP_Ocean_Flame_C_Gerstner::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Gerstner, CallFunc_GetRealTimeSeconds_ReturnValue) == 0x00007C, "Member 'BP_Ocean_Flame_C_Gerstner::CallFunc_GetRealTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Gerstner, CallFunc_MultiplyByPi_ReturnValue) == 0x000080, "Member 'BP_Ocean_Flame_C_Gerstner::CallFunc_MultiplyByPi_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Gerstner, CallFunc_MultiplyByPi_ReturnValue_1) == 0x000084, "Member 'BP_Ocean_Flame_C_Gerstner::CallFunc_MultiplyByPi_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Gerstner, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000088, "Member 'BP_Ocean_Flame_C_Gerstner::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Gerstner, CallFunc_Multiply_IntFloat_ReturnValue) == 0x00008C, "Member 'BP_Ocean_Flame_C_Gerstner::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Gerstner, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000090, "Member 'BP_Ocean_Flame_C_Gerstner::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Gerstner, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000094, "Member 'BP_Ocean_Flame_C_Gerstner::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Gerstner, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000098, "Member 'BP_Ocean_Flame_C_Gerstner::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Gerstner, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x00009C, "Member 'BP_Ocean_Flame_C_Gerstner::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Gerstner, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000A0, "Member 'BP_Ocean_Flame_C_Gerstner::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Gerstner, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x0000A4, "Member 'BP_Ocean_Flame_C_Gerstner::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Gerstner, CallFunc_Sin_ReturnValue) == 0x0000A8, "Member 'BP_Ocean_Flame_C_Gerstner::CallFunc_Sin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Gerstner, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0000AC, "Member 'BP_Ocean_Flame_C_Gerstner::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Gerstner, CallFunc_Multiply_FloatFloat_ReturnValue_6) == 0x0000B0, "Member 'BP_Ocean_Flame_C_Gerstner::CallFunc_Multiply_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Gerstner, CallFunc_Multiply_FloatFloat_ReturnValue_7) == 0x0000B4, "Member 'BP_Ocean_Flame_C_Gerstner::CallFunc_Multiply_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Gerstner, CallFunc_Cos_ReturnValue) == 0x0000B8, "Member 'BP_Ocean_Flame_C_Gerstner::CallFunc_Cos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Gerstner, CallFunc_Multiply_FloatFloat_ReturnValue_8) == 0x0000BC, "Member 'BP_Ocean_Flame_C_Gerstner::CallFunc_Multiply_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Gerstner, CallFunc_Multiply_FloatFloat_ReturnValue_9) == 0x0000C0, "Member 'BP_Ocean_Flame_C_Gerstner::CallFunc_Multiply_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Gerstner, CallFunc_Multiply_FloatFloat_ReturnValue_10) == 0x0000C4, "Member 'BP_Ocean_Flame_C_Gerstner::CallFunc_Multiply_FloatFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_Ocean_Flame_C_Gerstner, CallFunc_Multiply_FloatFloat_ReturnValue_11) == 0x0000C8, "Member 'BP_Ocean_Flame_C_Gerstner::CallFunc_Multiply_FloatFloat_ReturnValue_11' has a wrong offset!");

}

