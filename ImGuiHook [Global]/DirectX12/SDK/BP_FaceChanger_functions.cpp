#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FaceChanger

#include "Basic.hpp"

#include "BP_FaceChanger_classes.hpp"
#include "BP_FaceChanger_parameters.hpp"


namespace SDK
{

// Function BP_FaceChanger.BP_FaceChanger_C.ExecuteUbergraph_BP_FaceChanger
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FaceChanger_C::ExecuteUbergraph_BP_FaceChanger(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FaceChanger_C", "ExecuteUbergraph_BP_FaceChanger");

	Params::BP_FaceChanger_C_ExecuteUbergraph_BP_FaceChanger Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FaceChanger.BP_FaceChanger_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_FaceChanger_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FaceChanger_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FaceChanger.BP_FaceChanger_C.CameraMorph
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          FinalLocation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         FinalRotation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   FinalFOV                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       FinalPawnTransform                                     (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)

void ABP_FaceChanger_C::CameraMorph(const struct FVector& FinalLocation, const struct FRotator& FinalRotation, float FinalFOV, const struct FTransform& FinalPawnTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FaceChanger_C", "CameraMorph");

	Params::BP_FaceChanger_C_CameraMorph Parms{};

	Parms.FinalLocation = std::move(FinalLocation);
	Parms.FinalRotation = std::move(FinalRotation);
	Parms.FinalFOV = FinalFOV;
	Parms.FinalPawnTransform = std::move(FinalPawnTransform);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FaceChanger.BP_FaceChanger_C.CharacterMove__UpdateFunc
// (BlueprintEvent)

void ABP_FaceChanger_C::CharacterMove__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FaceChanger_C", "CharacterMove__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FaceChanger.BP_FaceChanger_C.CharacterMove__FinishedFunc
// (BlueprintEvent)

void ABP_FaceChanger_C::CharacterMove__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FaceChanger_C", "CharacterMove__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FaceChanger.BP_FaceChanger_C.CameraMove__UpdateFunc
// (BlueprintEvent)

void ABP_FaceChanger_C::CameraMove__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FaceChanger_C", "CameraMove__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FaceChanger.BP_FaceChanger_C.CameraMove__FinishedFunc
// (BlueprintEvent)

void ABP_FaceChanger_C::CameraMove__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FaceChanger_C", "CameraMove__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FaceChanger.BP_FaceChanger_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_FaceChanger_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FaceChanger_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FaceChanger.BP_FaceChanger_C.CameraMorphPosition
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Center                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Alpha                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          LocInit                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         RotInit                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          LocFinal                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         RotFinal                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   RadiusMultiplier                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   YawLerp                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Loc                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rot                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_FaceChanger_C::CameraMorphPosition(const struct FVector& Center, float Alpha, const struct FVector& LocInit, const struct FRotator& RotInit, const struct FVector& LocFinal, const struct FRotator& RotFinal, float RadiusMultiplier, float YawLerp, struct FVector* Loc, struct FRotator* Rot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FaceChanger_C", "CameraMorphPosition");

	Params::BP_FaceChanger_C_CameraMorphPosition Parms{};

	Parms.Center = std::move(Center);
	Parms.Alpha = Alpha;
	Parms.LocInit = std::move(LocInit);
	Parms.RotInit = std::move(RotInit);
	Parms.LocFinal = std::move(LocFinal);
	Parms.RotFinal = std::move(RotFinal);
	Parms.RadiusMultiplier = RadiusMultiplier;
	Parms.YawLerp = YawLerp;

	UObject::ProcessEvent(Func, &Parms);

	if (Loc != nullptr)
		*Loc = std::move(Parms.Loc);

	if (Rot != nullptr)
		*Rot = std::move(Parms.Rot);
}


// Function BP_FaceChanger.BP_FaceChanger_C.AnimationStandUp
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   SequenceLength                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FaceChanger_C::AnimationStandUp(float* SequenceLength)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FaceChanger_C", "AnimationStandUp");

	Params::BP_FaceChanger_C_AnimationStandUp Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SequenceLength != nullptr)
		*SequenceLength = Parms.SequenceLength;
}


// Function BP_FaceChanger.BP_FaceChanger_C.WakeUpAnimation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   SequenceLength                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FaceChanger_C::WakeUpAnimation(float* SequenceLength)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FaceChanger_C", "WakeUpAnimation");

	Params::BP_FaceChanger_C_WakeUpAnimation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SequenceLength != nullptr)
		*SequenceLength = Parms.SequenceLength;
}


// Function BP_FaceChanger.BP_FaceChanger_C.WakeUpAnimation2
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_FaceChanger_C::WakeUpAnimation2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FaceChanger_C", "WakeUpAnimation2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FaceChanger.BP_FaceChanger_C.GetTimeToStand
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   TimeToStand                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FaceChanger_C::GetTimeToStand(float* TimeToStand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FaceChanger_C", "GetTimeToStand");

	Params::BP_FaceChanger_C_GetTimeToStand Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TimeToStand != nullptr)
		*TimeToStand = Parms.TimeToStand;
}


// Function BP_FaceChanger.BP_FaceChanger_C.IsFemale
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_FaceChanger_C::IsFemale(bool* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FaceChanger_C", "IsFemale");

	Params::BP_FaceChanger_C_IsFemale Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function BP_FaceChanger.BP_FaceChanger_C.DeadAnimation
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_FaceChanger_C::DeadAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FaceChanger_C", "DeadAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FaceChanger.BP_FaceChanger_C.Get Player Customization Pairs Without Headgear
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           ArchetypeVariant                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FCustomizationSlotVariant>CustomizationPairs                                     (Parm, OutParm)
// bool                                    bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_FaceChanger_C::Get_Player_Customization_Pairs_Without_Headgear(class UClass* ArchetypeVariant, TArray<struct FCustomizationSlotVariant>* CustomizationPairs, bool* bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FaceChanger_C", "Get Player Customization Pairs Without Headgear");

	Params::BP_FaceChanger_C_Get_Player_Customization_Pairs_Without_Headgear Parms{};

	Parms.ArchetypeVariant = ArchetypeVariant;

	UObject::ProcessEvent(Func, &Parms);

	if (CustomizationPairs != nullptr)
		*CustomizationPairs = std::move(Parms.CustomizationPairs);

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;
}

}

