#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_WeaponInfo

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Flame_structs.hpp"


namespace SDK::Params
{

// Function UI_WeaponInfo.UI_WeaponInfo_C.ExecuteUbergraph_UI_WeaponInfo
// 0x0150 (0x0150 - 0x0000)
struct UI_WeaponInfo_C_ExecuteUbergraph_UI_WeaponInfo final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(struct FGameSaveSettings& GameSettings)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0040(0x0010)(ZeroConstructor, NoDestructor)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0050(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFlameGameInstance*                     CallFunc_GetFlameGameInstance_ReturnValue;         // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USaveGame*                              CallFunc_GetOptionsSaveGame_ReturnValue;           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOptionsSaveGame*                       K2Node_DynamicCast_AsOptions_Save_Game;            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTimeSeconds_ReturnValue;               // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameSaveSettings                      CallFunc_GetGameSettings_ReturnValue;              // 0x00B0(0x0048)(ConstParm)
	float                                         CallFunc_GetTimeSeconds_ReturnValue_1;             // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameSaveSettings                      K2Node_CustomEvent_GameSettings;                   // 0x0100(0x0048)(ConstParm)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_WeaponInfo_C_ExecuteUbergraph_UI_WeaponInfo) == 0x000008, "Wrong alignment on UI_WeaponInfo_C_ExecuteUbergraph_UI_WeaponInfo");
static_assert(sizeof(UI_WeaponInfo_C_ExecuteUbergraph_UI_WeaponInfo) == 0x000150, "Wrong size on UI_WeaponInfo_C_ExecuteUbergraph_UI_WeaponInfo");
static_assert(offsetof(UI_WeaponInfo_C_ExecuteUbergraph_UI_WeaponInfo, EntryPoint) == 0x000000, "Member 'UI_WeaponInfo_C_ExecuteUbergraph_UI_WeaponInfo::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_ExecuteUbergraph_UI_WeaponInfo, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000008, "Member 'UI_WeaponInfo_C_ExecuteUbergraph_UI_WeaponInfo::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_ExecuteUbergraph_UI_WeaponInfo, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'UI_WeaponInfo_C_ExecuteUbergraph_UI_WeaponInfo::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_ExecuteUbergraph_UI_WeaponInfo, K2Node_CreateDelegate_OutputDelegate_1) == 0x000020, "Member 'UI_WeaponInfo_C_ExecuteUbergraph_UI_WeaponInfo::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_ExecuteUbergraph_UI_WeaponInfo, K2Node_CreateDelegate_OutputDelegate_2) == 0x000030, "Member 'UI_WeaponInfo_C_ExecuteUbergraph_UI_WeaponInfo::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_ExecuteUbergraph_UI_WeaponInfo, K2Node_CreateDelegate_OutputDelegate_3) == 0x000040, "Member 'UI_WeaponInfo_C_ExecuteUbergraph_UI_WeaponInfo::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_ExecuteUbergraph_UI_WeaponInfo, K2Node_Event_MyGeometry) == 0x000050, "Member 'UI_WeaponInfo_C_ExecuteUbergraph_UI_WeaponInfo::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_ExecuteUbergraph_UI_WeaponInfo, K2Node_Event_InDeltaTime) == 0x000088, "Member 'UI_WeaponInfo_C_ExecuteUbergraph_UI_WeaponInfo::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_ExecuteUbergraph_UI_WeaponInfo, CallFunc_GetFlameGameInstance_ReturnValue) == 0x000090, "Member 'UI_WeaponInfo_C_ExecuteUbergraph_UI_WeaponInfo::CallFunc_GetFlameGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_ExecuteUbergraph_UI_WeaponInfo, CallFunc_GetOptionsSaveGame_ReturnValue) == 0x000098, "Member 'UI_WeaponInfo_C_ExecuteUbergraph_UI_WeaponInfo::CallFunc_GetOptionsSaveGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_ExecuteUbergraph_UI_WeaponInfo, K2Node_DynamicCast_AsOptions_Save_Game) == 0x0000A0, "Member 'UI_WeaponInfo_C_ExecuteUbergraph_UI_WeaponInfo::K2Node_DynamicCast_AsOptions_Save_Game' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_ExecuteUbergraph_UI_WeaponInfo, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'UI_WeaponInfo_C_ExecuteUbergraph_UI_WeaponInfo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_ExecuteUbergraph_UI_WeaponInfo, CallFunc_GetTimeSeconds_ReturnValue) == 0x0000AC, "Member 'UI_WeaponInfo_C_ExecuteUbergraph_UI_WeaponInfo::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_ExecuteUbergraph_UI_WeaponInfo, CallFunc_GetGameSettings_ReturnValue) == 0x0000B0, "Member 'UI_WeaponInfo_C_ExecuteUbergraph_UI_WeaponInfo::CallFunc_GetGameSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_ExecuteUbergraph_UI_WeaponInfo, CallFunc_GetTimeSeconds_ReturnValue_1) == 0x0000F8, "Member 'UI_WeaponInfo_C_ExecuteUbergraph_UI_WeaponInfo::CallFunc_GetTimeSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_ExecuteUbergraph_UI_WeaponInfo, K2Node_CustomEvent_GameSettings) == 0x000100, "Member 'UI_WeaponInfo_C_ExecuteUbergraph_UI_WeaponInfo::K2Node_CustomEvent_GameSettings' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_ExecuteUbergraph_UI_WeaponInfo, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000148, "Member 'UI_WeaponInfo_C_ExecuteUbergraph_UI_WeaponInfo::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");

// Function UI_WeaponInfo.UI_WeaponInfo_C.OnGameSettingsChanged
// 0x0048 (0x0048 - 0x0000)
struct UI_WeaponInfo_C_OnGameSettingsChanged final
{
public:
	struct FGameSaveSettings                      GameSettings;                                      // 0x0000(0x0048)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(UI_WeaponInfo_C_OnGameSettingsChanged) == 0x000008, "Wrong alignment on UI_WeaponInfo_C_OnGameSettingsChanged");
static_assert(sizeof(UI_WeaponInfo_C_OnGameSettingsChanged) == 0x000048, "Wrong size on UI_WeaponInfo_C_OnGameSettingsChanged");
static_assert(offsetof(UI_WeaponInfo_C_OnGameSettingsChanged, GameSettings) == 0x000000, "Member 'UI_WeaponInfo_C_OnGameSettingsChanged::GameSettings' has a wrong offset!");

// Function UI_WeaponInfo.UI_WeaponInfo_C.Tick
// 0x003C (0x003C - 0x0000)
struct UI_WeaponInfo_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_WeaponInfo_C_Tick) == 0x000004, "Wrong alignment on UI_WeaponInfo_C_Tick");
static_assert(sizeof(UI_WeaponInfo_C_Tick) == 0x00003C, "Wrong size on UI_WeaponInfo_C_Tick");
static_assert(offsetof(UI_WeaponInfo_C_Tick, MyGeometry) == 0x000000, "Member 'UI_WeaponInfo_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_Tick, InDeltaTime) == 0x000038, "Member 'UI_WeaponInfo_C_Tick::InDeltaTime' has a wrong offset!");

// Function UI_WeaponInfo.UI_WeaponInfo_C.GetTextAmmoText
// 0x0068 (0x0068 - 0x0000)
struct UI_WeaponInfo_C_GetTextAmmoText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Character_C*                        K2Node_DynamicCast_AsBP_Character;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetInfiniteAmmo_ReturnValue;              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AProjectileWeapon*                      K2Node_DynamicCast_AsProjectile_Weapon;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EWeaponType                                   CallFunc_GetWeaponType_ReturnValue;                // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrentChamberCount_ReturnValue;       // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrentAmmoCount_ReturnValue;          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0050(0x0018)()
};
static_assert(alignof(UI_WeaponInfo_C_GetTextAmmoText) == 0x000008, "Wrong alignment on UI_WeaponInfo_C_GetTextAmmoText");
static_assert(sizeof(UI_WeaponInfo_C_GetTextAmmoText) == 0x000068, "Wrong size on UI_WeaponInfo_C_GetTextAmmoText");
static_assert(offsetof(UI_WeaponInfo_C_GetTextAmmoText, ReturnValue) == 0x000000, "Member 'UI_WeaponInfo_C_GetTextAmmoText::ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_GetTextAmmoText, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000018, "Member 'UI_WeaponInfo_C_GetTextAmmoText::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_GetTextAmmoText, K2Node_DynamicCast_AsBP_Character) == 0x000020, "Member 'UI_WeaponInfo_C_GetTextAmmoText::K2Node_DynamicCast_AsBP_Character' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_GetTextAmmoText, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'UI_WeaponInfo_C_GetTextAmmoText::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_GetTextAmmoText, CallFunc_GetInfiniteAmmo_ReturnValue) == 0x000029, "Member 'UI_WeaponInfo_C_GetTextAmmoText::CallFunc_GetInfiniteAmmo_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_GetTextAmmoText, K2Node_DynamicCast_AsProjectile_Weapon) == 0x000030, "Member 'UI_WeaponInfo_C_GetTextAmmoText::K2Node_DynamicCast_AsProjectile_Weapon' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_GetTextAmmoText, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'UI_WeaponInfo_C_GetTextAmmoText::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_GetTextAmmoText, CallFunc_GetWeaponType_ReturnValue) == 0x000039, "Member 'UI_WeaponInfo_C_GetTextAmmoText::CallFunc_GetWeaponType_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_GetTextAmmoText, CallFunc_GetCurrentChamberCount_ReturnValue) == 0x00003C, "Member 'UI_WeaponInfo_C_GetTextAmmoText::CallFunc_GetCurrentChamberCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_GetTextAmmoText, K2Node_SwitchEnum_CmpSuccess) == 0x000040, "Member 'UI_WeaponInfo_C_GetTextAmmoText::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_GetTextAmmoText, CallFunc_GetCurrentAmmoCount_ReturnValue) == 0x000044, "Member 'UI_WeaponInfo_C_GetTextAmmoText::CallFunc_GetCurrentAmmoCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_GetTextAmmoText, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'UI_WeaponInfo_C_GetTextAmmoText::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_GetTextAmmoText, CallFunc_Conv_IntToText_ReturnValue) == 0x000050, "Member 'UI_WeaponInfo_C_GetTextAmmoText::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function UI_WeaponInfo.UI_WeaponInfo_C.GetTextMagazinesText
// 0x0068 (0x0068 - 0x0000)
struct UI_WeaponInfo_C_GetTextMagazinesText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Character_C*                        K2Node_DynamicCast_AsBP_Character;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetInfiniteReload_ReturnValue;            // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AWeapon*                                K2Node_DynamicCast_AsWeapon;                       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetAmmoCountForWeapon_ReturnValue;        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0050(0x0018)()
};
static_assert(alignof(UI_WeaponInfo_C_GetTextMagazinesText) == 0x000008, "Wrong alignment on UI_WeaponInfo_C_GetTextMagazinesText");
static_assert(sizeof(UI_WeaponInfo_C_GetTextMagazinesText) == 0x000068, "Wrong size on UI_WeaponInfo_C_GetTextMagazinesText");
static_assert(offsetof(UI_WeaponInfo_C_GetTextMagazinesText, ReturnValue) == 0x000000, "Member 'UI_WeaponInfo_C_GetTextMagazinesText::ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_GetTextMagazinesText, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000018, "Member 'UI_WeaponInfo_C_GetTextMagazinesText::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_GetTextMagazinesText, K2Node_DynamicCast_AsBP_Character) == 0x000020, "Member 'UI_WeaponInfo_C_GetTextMagazinesText::K2Node_DynamicCast_AsBP_Character' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_GetTextMagazinesText, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'UI_WeaponInfo_C_GetTextMagazinesText::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_GetTextMagazinesText, CallFunc_GetInfiniteReload_ReturnValue) == 0x000029, "Member 'UI_WeaponInfo_C_GetTextMagazinesText::CallFunc_GetInfiniteReload_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_GetTextMagazinesText, K2Node_DynamicCast_AsWeapon) == 0x000030, "Member 'UI_WeaponInfo_C_GetTextMagazinesText::K2Node_DynamicCast_AsWeapon' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_GetTextMagazinesText, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'UI_WeaponInfo_C_GetTextMagazinesText::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_GetTextMagazinesText, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'UI_WeaponInfo_C_GetTextMagazinesText::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_GetTextMagazinesText, CallFunc_GetAmmoCountForWeapon_ReturnValue) == 0x00003C, "Member 'UI_WeaponInfo_C_GetTextMagazinesText::CallFunc_GetAmmoCountForWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_GetTextMagazinesText, CallFunc_Conv_IntToString_ReturnValue) == 0x000040, "Member 'UI_WeaponInfo_C_GetTextMagazinesText::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_GetTextMagazinesText, CallFunc_Conv_StringToText_ReturnValue) == 0x000050, "Member 'UI_WeaponInfo_C_GetTextMagazinesText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function UI_WeaponInfo.UI_WeaponInfo_C.SetWeaponInfoVisibility
// 0x0050 (0x0050 - 0x0000)
struct UI_WeaponInfo_C_SetWeaponInfoVisibility final
{
public:
	class AWeapon*                                CurrentWeapon;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsChangingFireMode_IsChangingFMOut;       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsShooting_IsShootingOut;                 // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeaponType                                   CallFunc_GetWeaponType_ReturnValue;                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasChangedWeapon_ReturnValue;             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Character_C*                        K2Node_DynamicCast_AsBP_Character;                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsReloading_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsADS_ReturnValue;                        // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B[0x5];                                       // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AWeapon*                                K2Node_DynamicCast_AsWeapon;                       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_WeaponInfo_C_SetWeaponInfoVisibility) == 0x000008, "Wrong alignment on UI_WeaponInfo_C_SetWeaponInfoVisibility");
static_assert(sizeof(UI_WeaponInfo_C_SetWeaponInfoVisibility) == 0x000050, "Wrong size on UI_WeaponInfo_C_SetWeaponInfoVisibility");
static_assert(offsetof(UI_WeaponInfo_C_SetWeaponInfoVisibility, CurrentWeapon) == 0x000000, "Member 'UI_WeaponInfo_C_SetWeaponInfoVisibility::CurrentWeapon' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_SetWeaponInfoVisibility, CallFunc_IsChangingFireMode_IsChangingFMOut) == 0x000008, "Member 'UI_WeaponInfo_C_SetWeaponInfoVisibility::CallFunc_IsChangingFireMode_IsChangingFMOut' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_SetWeaponInfoVisibility, CallFunc_IsShooting_IsShootingOut) == 0x000009, "Member 'UI_WeaponInfo_C_SetWeaponInfoVisibility::CallFunc_IsShooting_IsShootingOut' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_SetWeaponInfoVisibility, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'UI_WeaponInfo_C_SetWeaponInfoVisibility::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_SetWeaponInfoVisibility, CallFunc_GetWeaponType_ReturnValue) == 0x000018, "Member 'UI_WeaponInfo_C_SetWeaponInfoVisibility::CallFunc_GetWeaponType_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_SetWeaponInfoVisibility, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'UI_WeaponInfo_C_SetWeaponInfoVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_SetWeaponInfoVisibility, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00001A, "Member 'UI_WeaponInfo_C_SetWeaponInfoVisibility::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_SetWeaponInfoVisibility, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00001B, "Member 'UI_WeaponInfo_C_SetWeaponInfoVisibility::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_SetWeaponInfoVisibility, CallFunc_HasChangedWeapon_ReturnValue) == 0x00001C, "Member 'UI_WeaponInfo_C_SetWeaponInfoVisibility::CallFunc_HasChangedWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_SetWeaponInfoVisibility, CallFunc_PlayAnimation_ReturnValue_1) == 0x000020, "Member 'UI_WeaponInfo_C_SetWeaponInfoVisibility::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_SetWeaponInfoVisibility, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000028, "Member 'UI_WeaponInfo_C_SetWeaponInfoVisibility::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_SetWeaponInfoVisibility, K2Node_DynamicCast_AsBP_Character) == 0x000030, "Member 'UI_WeaponInfo_C_SetWeaponInfoVisibility::K2Node_DynamicCast_AsBP_Character' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_SetWeaponInfoVisibility, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'UI_WeaponInfo_C_SetWeaponInfoVisibility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_SetWeaponInfoVisibility, CallFunc_IsReloading_ReturnValue) == 0x000039, "Member 'UI_WeaponInfo_C_SetWeaponInfoVisibility::CallFunc_IsReloading_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_SetWeaponInfoVisibility, CallFunc_IsADS_ReturnValue) == 0x00003A, "Member 'UI_WeaponInfo_C_SetWeaponInfoVisibility::CallFunc_IsADS_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_SetWeaponInfoVisibility, K2Node_DynamicCast_AsWeapon) == 0x000040, "Member 'UI_WeaponInfo_C_SetWeaponInfoVisibility::K2Node_DynamicCast_AsWeapon' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_SetWeaponInfoVisibility, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'UI_WeaponInfo_C_SetWeaponInfoVisibility::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_SetWeaponInfoVisibility, CallFunc_BooleanOR_ReturnValue) == 0x000049, "Member 'UI_WeaponInfo_C_SetWeaponInfoVisibility::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_SetWeaponInfoVisibility, CallFunc_BooleanOR_ReturnValue_1) == 0x00004A, "Member 'UI_WeaponInfo_C_SetWeaponInfoVisibility::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_SetWeaponInfoVisibility, CallFunc_BooleanOR_ReturnValue_2) == 0x00004B, "Member 'UI_WeaponInfo_C_SetWeaponInfoVisibility::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_SetWeaponInfoVisibility, CallFunc_BooleanOR_ReturnValue_3) == 0x00004C, "Member 'UI_WeaponInfo_C_SetWeaponInfoVisibility::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_SetWeaponInfoVisibility, CallFunc_BooleanOR_ReturnValue_4) == 0x00004D, "Member 'UI_WeaponInfo_C_SetWeaponInfoVisibility::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");

// Function UI_WeaponInfo.UI_WeaponInfo_C.GetFireModeImage
// 0x01D0 (0x01D0 - 0x0000)
struct UI_WeaponInfo_C_GetFireModeImage final
{
public:
	struct FSlateBrush                            ReturnValue;                                       // 0x0000(0x0088)(Parm, OutParm, ReturnParm)
	class UObject*                                NewLocalVar_0;                                     // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0098(0x0088)()
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_1;                    // 0x0128(0x0088)()
	class ABP_Character_C*                        K2Node_DynamicCast_AsBP_Character;                 // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AWeapon*                                K2Node_DynamicCast_AsWeapon;                       // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EWeaponFireType                               CallFunc_GetCurrentWeaponFireMode_OutType;         // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCurrentWeaponFireMode_ReturnValue;     // 0x01CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_WeaponInfo_C_GetFireModeImage) == 0x000008, "Wrong alignment on UI_WeaponInfo_C_GetFireModeImage");
static_assert(sizeof(UI_WeaponInfo_C_GetFireModeImage) == 0x0001D0, "Wrong size on UI_WeaponInfo_C_GetFireModeImage");
static_assert(offsetof(UI_WeaponInfo_C_GetFireModeImage, ReturnValue) == 0x000000, "Member 'UI_WeaponInfo_C_GetFireModeImage::ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_GetFireModeImage, NewLocalVar_0) == 0x000088, "Member 'UI_WeaponInfo_C_GetFireModeImage::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_GetFireModeImage, CallFunc_MakeVector2D_ReturnValue) == 0x000090, "Member 'UI_WeaponInfo_C_GetFireModeImage::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_GetFireModeImage, K2Node_MakeStruct_SlateBrush) == 0x000098, "Member 'UI_WeaponInfo_C_GetFireModeImage::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_GetFireModeImage, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000120, "Member 'UI_WeaponInfo_C_GetFireModeImage::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_GetFireModeImage, K2Node_MakeStruct_SlateBrush_1) == 0x000128, "Member 'UI_WeaponInfo_C_GetFireModeImage::K2Node_MakeStruct_SlateBrush_1' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_GetFireModeImage, K2Node_DynamicCast_AsBP_Character) == 0x0001B0, "Member 'UI_WeaponInfo_C_GetFireModeImage::K2Node_DynamicCast_AsBP_Character' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_GetFireModeImage, K2Node_DynamicCast_bSuccess) == 0x0001B8, "Member 'UI_WeaponInfo_C_GetFireModeImage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_GetFireModeImage, K2Node_DynamicCast_AsWeapon) == 0x0001C0, "Member 'UI_WeaponInfo_C_GetFireModeImage::K2Node_DynamicCast_AsWeapon' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_GetFireModeImage, K2Node_DynamicCast_bSuccess_1) == 0x0001C8, "Member 'UI_WeaponInfo_C_GetFireModeImage::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_GetFireModeImage, CallFunc_GetCurrentWeaponFireMode_OutType) == 0x0001C9, "Member 'UI_WeaponInfo_C_GetFireModeImage::CallFunc_GetCurrentWeaponFireMode_OutType' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_GetFireModeImage, CallFunc_GetCurrentWeaponFireMode_ReturnValue) == 0x0001CA, "Member 'UI_WeaponInfo_C_GetFireModeImage::CallFunc_GetCurrentWeaponFireMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_GetFireModeImage, CallFunc_IsValid_ReturnValue) == 0x0001CB, "Member 'UI_WeaponInfo_C_GetFireModeImage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_GetFireModeImage, K2Node_SwitchEnum_CmpSuccess) == 0x0001CC, "Member 'UI_WeaponInfo_C_GetFireModeImage::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function UI_WeaponInfo.UI_WeaponInfo_C.UpdateShowPermanentlyFromSave
// 0x0048 (0x0048 - 0x0000)
struct UI_WeaponInfo_C_UpdateShowPermanentlyFromSave final
{
public:
	struct FGameSaveSettings                      GameSettings;                                      // 0x0000(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(UI_WeaponInfo_C_UpdateShowPermanentlyFromSave) == 0x000008, "Wrong alignment on UI_WeaponInfo_C_UpdateShowPermanentlyFromSave");
static_assert(sizeof(UI_WeaponInfo_C_UpdateShowPermanentlyFromSave) == 0x000048, "Wrong size on UI_WeaponInfo_C_UpdateShowPermanentlyFromSave");
static_assert(offsetof(UI_WeaponInfo_C_UpdateShowPermanentlyFromSave, GameSettings) == 0x000000, "Member 'UI_WeaponInfo_C_UpdateShowPermanentlyFromSave::GameSettings' has a wrong offset!");

// Function UI_WeaponInfo.UI_WeaponInfo_C.IsShooting
// 0x0010 (0x0010 - 0x0000)
struct UI_WeaponInfo_C_IsShooting final
{
public:
	bool                                          IsShootingOut;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTimeSeconds_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_WeaponInfo_C_IsShooting) == 0x000004, "Wrong alignment on UI_WeaponInfo_C_IsShooting");
static_assert(sizeof(UI_WeaponInfo_C_IsShooting) == 0x000010, "Wrong size on UI_WeaponInfo_C_IsShooting");
static_assert(offsetof(UI_WeaponInfo_C_IsShooting, IsShootingOut) == 0x000000, "Member 'UI_WeaponInfo_C_IsShooting::IsShootingOut' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_IsShooting, CallFunc_GetTimeSeconds_ReturnValue) == 0x000004, "Member 'UI_WeaponInfo_C_IsShooting::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_IsShooting, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'UI_WeaponInfo_C_IsShooting::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_IsShooting, CallFunc_Less_FloatFloat_ReturnValue) == 0x00000C, "Member 'UI_WeaponInfo_C_IsShooting::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function UI_WeaponInfo.UI_WeaponInfo_C.IsChangingFireMode
// 0x0010 (0x0010 - 0x0000)
struct UI_WeaponInfo_C_IsChangingFireMode final
{
public:
	bool                                          IsChangingFMOut;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTimeSeconds_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_WeaponInfo_C_IsChangingFireMode) == 0x000004, "Wrong alignment on UI_WeaponInfo_C_IsChangingFireMode");
static_assert(sizeof(UI_WeaponInfo_C_IsChangingFireMode) == 0x000010, "Wrong size on UI_WeaponInfo_C_IsChangingFireMode");
static_assert(offsetof(UI_WeaponInfo_C_IsChangingFireMode, IsChangingFMOut) == 0x000000, "Member 'UI_WeaponInfo_C_IsChangingFireMode::IsChangingFMOut' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_IsChangingFireMode, CallFunc_GetTimeSeconds_ReturnValue) == 0x000004, "Member 'UI_WeaponInfo_C_IsChangingFireMode::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_IsChangingFireMode, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'UI_WeaponInfo_C_IsChangingFireMode::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_IsChangingFireMode, CallFunc_Less_FloatFloat_ReturnValue) == 0x00000C, "Member 'UI_WeaponInfo_C_IsChangingFireMode::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function UI_WeaponInfo.UI_WeaponInfo_C.HasChangedWeapon
// 0x0020 (0x0020 - 0x0000)
struct UI_WeaponInfo_C_HasChangedWeapon final
{
public:
	class AWeapon*                                CurrentWeapon;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTimeSeconds_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeSeconds_ReturnValue_1;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_WeaponInfo_C_HasChangedWeapon) == 0x000008, "Wrong alignment on UI_WeaponInfo_C_HasChangedWeapon");
static_assert(sizeof(UI_WeaponInfo_C_HasChangedWeapon) == 0x000020, "Wrong size on UI_WeaponInfo_C_HasChangedWeapon");
static_assert(offsetof(UI_WeaponInfo_C_HasChangedWeapon, CurrentWeapon) == 0x000000, "Member 'UI_WeaponInfo_C_HasChangedWeapon::CurrentWeapon' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_HasChangedWeapon, ReturnValue) == 0x000008, "Member 'UI_WeaponInfo_C_HasChangedWeapon::ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_HasChangedWeapon, CallFunc_GetTimeSeconds_ReturnValue) == 0x00000C, "Member 'UI_WeaponInfo_C_HasChangedWeapon::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_HasChangedWeapon, CallFunc_GetTimeSeconds_ReturnValue_1) == 0x000010, "Member 'UI_WeaponInfo_C_HasChangedWeapon::CallFunc_GetTimeSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_HasChangedWeapon, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000014, "Member 'UI_WeaponInfo_C_HasChangedWeapon::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_HasChangedWeapon, CallFunc_Less_FloatFloat_ReturnValue) == 0x000018, "Member 'UI_WeaponInfo_C_HasChangedWeapon::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_HasChangedWeapon, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000019, "Member 'UI_WeaponInfo_C_HasChangedWeapon::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function UI_WeaponInfo.UI_WeaponInfo_C.GetWeaponImage
// 0x01D0 (0x01D0 - 0x0000)
struct UI_WeaponInfo_C_GetWeaponImage final
{
public:
	struct FSlateBrush                            ReturnValue;                                       // 0x0000(0x0088)(Parm, OutParm, ReturnParm)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0088(0x0088)()
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Character_C*                        K2Node_DynamicCast_AsBP_Character;                 // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_123[0x5];                                      // 0x0123(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CallFunc_GetIcon_ReturnValue;                      // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Blueprint_GetSizeY_ReturnValue;           // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Blueprint_GetSizeX_ReturnValue;           // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_1;                    // 0x0148(0x0088)()
};
static_assert(alignof(UI_WeaponInfo_C_GetWeaponImage) == 0x000008, "Wrong alignment on UI_WeaponInfo_C_GetWeaponImage");
static_assert(sizeof(UI_WeaponInfo_C_GetWeaponImage) == 0x0001D0, "Wrong size on UI_WeaponInfo_C_GetWeaponImage");
static_assert(offsetof(UI_WeaponInfo_C_GetWeaponImage, ReturnValue) == 0x000000, "Member 'UI_WeaponInfo_C_GetWeaponImage::ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_GetWeaponImage, K2Node_MakeStruct_SlateBrush) == 0x000088, "Member 'UI_WeaponInfo_C_GetWeaponImage::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_GetWeaponImage, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000110, "Member 'UI_WeaponInfo_C_GetWeaponImage::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_GetWeaponImage, K2Node_DynamicCast_AsBP_Character) == 0x000118, "Member 'UI_WeaponInfo_C_GetWeaponImage::K2Node_DynamicCast_AsBP_Character' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_GetWeaponImage, K2Node_DynamicCast_bSuccess) == 0x000120, "Member 'UI_WeaponInfo_C_GetWeaponImage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_GetWeaponImage, CallFunc_IsValid_ReturnValue) == 0x000121, "Member 'UI_WeaponInfo_C_GetWeaponImage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_GetWeaponImage, CallFunc_IsValid_ReturnValue_1) == 0x000122, "Member 'UI_WeaponInfo_C_GetWeaponImage::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_GetWeaponImage, CallFunc_GetIcon_ReturnValue) == 0x000128, "Member 'UI_WeaponInfo_C_GetWeaponImage::CallFunc_GetIcon_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_GetWeaponImage, CallFunc_Blueprint_GetSizeY_ReturnValue) == 0x000130, "Member 'UI_WeaponInfo_C_GetWeaponImage::CallFunc_Blueprint_GetSizeY_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_GetWeaponImage, CallFunc_Blueprint_GetSizeX_ReturnValue) == 0x000134, "Member 'UI_WeaponInfo_C_GetWeaponImage::CallFunc_Blueprint_GetSizeX_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_GetWeaponImage, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000138, "Member 'UI_WeaponInfo_C_GetWeaponImage::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_GetWeaponImage, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x00013C, "Member 'UI_WeaponInfo_C_GetWeaponImage::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_GetWeaponImage, CallFunc_MakeVector2D_ReturnValue) == 0x000140, "Member 'UI_WeaponInfo_C_GetWeaponImage::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WeaponInfo_C_GetWeaponImage, K2Node_MakeStruct_SlateBrush_1) == 0x000148, "Member 'UI_WeaponInfo_C_GetWeaponImage::K2Node_MakeStruct_SlateBrush_1' has a wrong offset!");

}

