#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Character_TomatoFight

#include "Basic.hpp"

#include "EFightVariant_structs.hpp"
#include "Engine_structs.hpp"
#include "Flame_structs.hpp"
#include "Struct_TVTDeathmatch_Items_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Struct_TVT_Deathmatch_Weapons_structs.hpp"
#include "PhysicsCore_structs.hpp"
#include "Struct_GunFightLoadout_structs.hpp"


namespace SDK::Params
{

// Function BP_Character_TomatoFight.BP_Character_TomatoFight_C.ExecuteUbergraph_BP_Character_TomatoFight
// 0x05A0 (0x05A0 - 0x0000)
struct BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 CallFunc_GetSoftReference_ReturnValue;             // 0x0008(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftReference_ReturnValue;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            K2Node_DynamicCast_AsStatic_Mesh;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53[0x1];                                       // 0x0053(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetUserControllerId_ReturnValue;          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DamageAmount_1;                       // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDamageType                                   K2Node_Event_DamageType_1;                         // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanCharacter*                        K2Node_Event_InstigatingCharacter;                 // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class AItem>                      K2Node_Event_InstigatingItem;                      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitResult;                            // 0x0080(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue; // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11A[0x2];                                      // 0x011A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0168(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              CallFunc_BreakHitResult_ShapeSurfaceType;          // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x3];                                      // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0174(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0194(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_TomatoFight_C*     K2Node_DynamicCast_AsBP_Player_Controller_Tomato_Fight; // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AA[0x2];                                      // 0x01AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x01AC(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_1BC[0x4];                                      // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_CustomEvent_Weapon_Type;                    // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Ammo_in_Mag_Count;              // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Chambered_Ammo;                 // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1CD[0x3];                                      // 0x01CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x01D0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D9[0x3];                                      // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWeaponDescriptor                      K2Node_MakeStruct_WeaponDescriptor;                // 0x01E0(0x0020)(NoDestructor)
	class UClass*                                 K2Node_CustomEvent_Item_Type;                      // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Amount;                         // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x020D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue_1;               // 0x020E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20F[0x1];                                      // 0x020F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_219[0x7];                                      // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AWeapon*                                CallFunc_CreateWeaponFromDescriptor_ReturnValue;   // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BlueprintStoreObject_ReturnValue;         // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemsGrid*                             CallFunc_GetBackpack_ReturnValue;                  // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23A[0x2];                                      // 0x023A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_StoreResource_ReturnValue;                // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameState_TomatoFight_C*            K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight;   // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_1;        // 0x0251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_252[0x2];                                      // 0x0252(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetUserControllerId_ReturnValue_1;        // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DamageAmount;                         // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDamageType                                   K2Node_Event_DamageType;                           // 0x025C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25D[0x3];                                      // 0x025D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	const class AHumanCharacter*                  K2Node_Event_InstigatingActor;                     // 0x0260(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class AItem>                      K2Node_Event_InstigatingItemClass;                 // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FHitResultSimplified                   K2Node_Event_HitOptimised;                         // 0x0270(0x003C)(ConstParm, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_2AC[0x4];                                      // 0x02AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSubclassOf<class AItem>>              K2Node_Event_AffectedItems;                        // 0x02B0(0x0010)(ConstParm, ReferenceParm)
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_1; // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_TomatoFight_C*     K2Node_DynamicCast_AsBP_Player_Controller_Tomato_Fight_1; // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AreCharactersInSameTeam_AreInSameTeam;    // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AreCharactersInSameTeam_AreSameCharacter; // 0x02D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x02D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x02D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x02D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x02D7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x02D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x02DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsDead_ReturnValue;                    // 0x02DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x02DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_2;          // 0x02DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DE[0x2];                                      // 0x02DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x02E0(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x02F0(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetUserControllerId_ReturnValue_2;        // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FC[0x4];                                      // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0300(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_2; // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_341[0x7];                                      // 0x0341(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GunFight_DeathMarker_C*             CallFunc_FinishSpawningActor_ReturnValue;          // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerCharacter*                  CallFunc_GetHumanCharacter_ReturnValue;            // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_1;                   // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0359(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AreCharactersInSameTeam_AreInSameTeam_1;  // 0x035A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AreCharactersInSameTeam_AreSameCharacter_1; // 0x035B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x035C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x035D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35E[0x2];                                      // 0x035E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetHealth_ReturnValue;                    // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0364(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0368(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_2;        // 0x0378(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCountsOfItemsByVariant_Sum_of_Items_Found; // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_384[0x4];                                      // 0x0384(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetCountsOfItemsByVariant_Class;          // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_391[0x3];                                      // 0x0391(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0394(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameMode_TomatoFight_C*             CallFunc_GetFightGameMode_FightGamemode;           // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A1[0x7];                                      // 0x03A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameMode_TomatoFight_C*             CallFunc_GetFightGameMode_FightGamemode_1;         // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameState_TomatoFight_C*            CallFunc_GetFightGameState_GameState;              // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFightVariant                                 CallFunc_GetGameVariant_Variant;                   // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Current_Round_Loadout_Found_Any;      // 0x03B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BA[0x6];                                      // 0x03BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_GunFightLoadout                CallFunc_Get_Current_Round_Loadout_Loadout;        // 0x03C0(0x0028)(HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EC[0x4];                                      // 0x03EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_TVTDeathmatch_Items            CallFunc_Array_Get_Item;                           // 0x03F0(0x0030)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0424(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_425[0x3];                                      // 0x0425(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_LoadSoftClassReference_ReturnValue;       // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsItem_for_Backpack;       // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0438(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_439[0x7];                                      // 0x0439(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_TVT_Deathmatch_Weapons         CallFunc_Array_Get_Item_1;                         // 0x0440(0x0030)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_474[0x4];                                      // 0x0474(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_LoadSoftClassReference_ReturnValue_1;     // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_481[0x7];                                      // 0x0481(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsWeapon;                  // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_1;                // 0x0490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_491[0x7];                                      // 0x0491(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Get_Weapon_Ammo_and_Magazine_Size_Ammo_Item; // 0x0498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Weapon_Ammo_and_Magazine_Size_Magazine_Size; // 0x04A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x04A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasThrown_ReturnValue;                    // 0x04B0(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B1[0x7];                                      // 0x04B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_TomatoFight_C*     K2Node_DynamicCast_AsBP_Player_Controller_Tomato_Fight_2; // 0x04B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x04C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C1[0x3];                                      // 0x04C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x04C4(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_4D4[0x4];                                      // 0x04D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameState_TomatoFight_C*            CallFunc_GetFightGameState_GameState_1;            // 0x04D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_3;        // 0x04E0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x04E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x04E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x04EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_ByteByte_ReturnValue;                // 0x04EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_ByteByte_ReturnValue;             // 0x04EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x04ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4EE[0x2];                                      // 0x04EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameState_TomatoFight_C*            CallFunc_GetFightGameState_GameState_2;            // 0x04F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class AGender>                    CallFunc_GetGenderClass_ReturnValue;               // 0x04F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x0500(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0501(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_502[0x6];                                      // 0x0502(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 CallFunc_GetSoftReference_ReturnValue_1;           // 0x0508(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 CallFunc_GetSoftReference_ReturnValue_2;           // 0x0530(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 K2Node_Select_Default_1;                           // 0x0558(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftReference_ReturnValue_1;          // 0x0580(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_1; // 0x0588(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_589[0x7];                                      // 0x0589(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          K2Node_DynamicCast_AsSkeletal_Mesh;                // 0x0590(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0598(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0599(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x059A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight) == 0x000010, "Wrong alignment on BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight");
static_assert(sizeof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight) == 0x0005A0, "Wrong size on BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, EntryPoint) == 0x000000, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_GetSoftReference_ReturnValue) == 0x000008, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_GetSoftReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, Temp_int_Variable) == 0x000030, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_LoadSoftReference_ReturnValue) == 0x000038, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_LoadSoftReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, K2Node_DynamicCast_AsStatic_Mesh) == 0x000048, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::K2Node_DynamicCast_AsStatic_Mesh' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000051, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_IsDedicatedServer_ReturnValue) == 0x000052, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, Temp_int_Variable_1) == 0x000054, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, Temp_int_Array_Index_Variable) == 0x000058, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, Temp_bool_Variable) == 0x00005C, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_IsLocallyControlled_ReturnValue) == 0x00005D, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, K2Node_Event_DeltaSeconds) == 0x000060, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_GetUserControllerId_ReturnValue) == 0x000064, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_GetUserControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, K2Node_Event_DamageAmount_1) == 0x000068, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::K2Node_Event_DamageAmount_1' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, K2Node_Event_DamageType_1) == 0x00006C, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::K2Node_Event_DamageType_1' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, K2Node_Event_InstigatingCharacter) == 0x000070, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::K2Node_Event_InstigatingCharacter' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, K2Node_Event_InstigatingItem) == 0x000078, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::K2Node_Event_InstigatingItem' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, K2Node_Event_HitResult) == 0x000080, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::K2Node_Event_HitResult' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue) == 0x000110, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_BreakHitResult_bBlockingHit) == 0x000118, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_BreakHitResult_bInitialOverlap) == 0x000119, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_BreakHitResult_Time) == 0x00011C, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_BreakHitResult_Distance) == 0x000120, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_BreakHitResult_Location) == 0x000124, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_BreakHitResult_ImpactPoint) == 0x000130, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_BreakHitResult_Normal) == 0x00013C, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_BreakHitResult_ImpactNormal) == 0x000148, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_BreakHitResult_PhysMat) == 0x000158, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_BreakHitResult_HitActor) == 0x000160, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_BreakHitResult_HitComponent) == 0x000168, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_BreakHitResult_ShapeSurfaceType) == 0x000170, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_BreakHitResult_ShapeSurfaceType' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_BreakHitResult_HitBoneName) == 0x000174, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_BreakHitResult_HitItem) == 0x00017C, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_BreakHitResult_ElementIndex) == 0x000180, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_BreakHitResult_FaceIndex) == 0x000184, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_BreakHitResult_TraceStart) == 0x000188, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_BreakHitResult_TraceEnd) == 0x000194, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, K2Node_DynamicCast_AsBP_Player_Controller_Tomato_Fight) == 0x0001A0, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::K2Node_DynamicCast_AsBP_Player_Controller_Tomato_Fight' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, K2Node_DynamicCast_bSuccess_1) == 0x0001A8, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0001A9, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, K2Node_CreateDelegate_OutputDelegate) == 0x0001AC, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, K2Node_CustomEvent_Weapon_Type) == 0x0001C0, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::K2Node_CustomEvent_Weapon_Type' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, K2Node_CustomEvent_Ammo_in_Mag_Count) == 0x0001C8, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::K2Node_CustomEvent_Ammo_in_Mag_Count' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, K2Node_CustomEvent_Chambered_Ammo) == 0x0001CC, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::K2Node_CustomEvent_Chambered_Ammo' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0001D0, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_IsValidClass_ReturnValue) == 0x0001D8, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, K2Node_Select_Default) == 0x0001DC, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, K2Node_MakeStruct_WeaponDescriptor) == 0x0001E0, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::K2Node_MakeStruct_WeaponDescriptor' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, K2Node_CustomEvent_Item_Type) == 0x000200, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::K2Node_CustomEvent_Item_Type' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, K2Node_CustomEvent_Amount) == 0x000208, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::K2Node_CustomEvent_Amount' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_Greater_IntInt_ReturnValue) == 0x00020C, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_IsValid_ReturnValue_1) == 0x00020D, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_IsValidClass_ReturnValue_1) == 0x00020E, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_IsValidClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, Temp_int_Loop_Counter_Variable) == 0x000210, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_Add_IntInt_ReturnValue) == 0x000214, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_IsValid_ReturnValue_2) == 0x000218, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_CreateWeaponFromDescriptor_ReturnValue) == 0x000220, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_CreateWeaponFromDescriptor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_BlueprintStoreObject_ReturnValue) == 0x000228, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_BlueprintStoreObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_GetBackpack_ReturnValue) == 0x000230, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_GetBackpack_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_IsServer_ReturnValue) == 0x000238, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_IsValid_ReturnValue_3) == 0x000239, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_StoreResource_ReturnValue) == 0x00023C, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_StoreResource_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_GetGameState_ReturnValue) == 0x000240, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight) == 0x000248, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, K2Node_DynamicCast_bSuccess_2) == 0x000250, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_IsLocallyControlled_ReturnValue_1) == 0x000251, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_IsLocallyControlled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_GetUserControllerId_ReturnValue_1) == 0x000254, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_GetUserControllerId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, K2Node_Event_DamageAmount) == 0x000258, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::K2Node_Event_DamageAmount' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, K2Node_Event_DamageType) == 0x00025C, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::K2Node_Event_DamageType' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, K2Node_Event_InstigatingActor) == 0x000260, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::K2Node_Event_InstigatingActor' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, K2Node_Event_InstigatingItemClass) == 0x000268, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::K2Node_Event_InstigatingItemClass' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, K2Node_Event_HitOptimised) == 0x000270, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::K2Node_Event_HitOptimised' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, K2Node_Event_AffectedItems) == 0x0002B0, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::K2Node_Event_AffectedItems' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_1) == 0x0002C0, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, K2Node_DynamicCast_AsBP_Player_Controller_Tomato_Fight_1) == 0x0002C8, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::K2Node_DynamicCast_AsBP_Player_Controller_Tomato_Fight_1' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, K2Node_DynamicCast_bSuccess_3) == 0x0002D0, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_AreCharactersInSameTeam_AreInSameTeam) == 0x0002D1, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_AreCharactersInSameTeam_AreInSameTeam' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_AreCharactersInSameTeam_AreSameCharacter) == 0x0002D2, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_AreCharactersInSameTeam_AreSameCharacter' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_Not_PreBool_ReturnValue) == 0x0002D3, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0002D4, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_BooleanAND_ReturnValue) == 0x0002D5, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0002D6, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_BooleanOR_ReturnValue) == 0x0002D7, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0002D8, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_BooleanOR_ReturnValue_1) == 0x0002D9, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_IsValid_ReturnValue_4) == 0x0002DA, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_GetIsDead_ReturnValue) == 0x0002DB, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_GetIsDead_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x0002DC, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_IsDedicatedServer_ReturnValue_2) == 0x0002DD, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_IsDedicatedServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, K2Node_CreateDelegate_OutputDelegate_1) == 0x0002E0, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x0002F0, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_GetUserControllerId_ReturnValue_2) == 0x0002F8, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_GetUserControllerId_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_GetTransform_ReturnValue) == 0x000300, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_2) == 0x000330, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000338, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_IsValid_ReturnValue_5) == 0x000340, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_FinishSpawningActor_ReturnValue) == 0x000348, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_GetHumanCharacter_ReturnValue) == 0x000350, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_GetHumanCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_IsServer_ReturnValue_1) == 0x000358, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_IsServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_IsValid_ReturnValue_6) == 0x000359, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_AreCharactersInSameTeam_AreInSameTeam_1) == 0x00035A, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_AreCharactersInSameTeam_AreInSameTeam_1' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_AreCharactersInSameTeam_AreSameCharacter_1) == 0x00035B, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_AreCharactersInSameTeam_AreSameCharacter_1' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, K2Node_Event_EndPlayReason) == 0x00035C, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_IsValid_ReturnValue_7) == 0x00035D, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_GetHealth_ReturnValue) == 0x000360, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_GetHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_FClamp_ReturnValue) == 0x000364, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, K2Node_CreateDelegate_OutputDelegate_2) == 0x000368, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_K2_SetTimerDelegate_ReturnValue_2) == 0x000378, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_K2_SetTimerDelegate_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_GetCountsOfItemsByVariant_Sum_of_Items_Found) == 0x000380, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_GetCountsOfItemsByVariant_Sum_of_Items_Found' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_GetCountsOfItemsByVariant_Class) == 0x000388, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_GetCountsOfItemsByVariant_Class' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000390, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, Temp_int_Array_Index_Variable_1) == 0x000394, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_GetFightGameMode_FightGamemode) == 0x000398, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_GetFightGameMode_FightGamemode' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x0003A0, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_GetFightGameMode_FightGamemode_1) == 0x0003A8, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_GetFightGameMode_FightGamemode_1' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_GetFightGameState_GameState) == 0x0003B0, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_GetFightGameState_GameState' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_GetGameVariant_Variant) == 0x0003B8, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_GetGameVariant_Variant' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_Get_Current_Round_Loadout_Found_Any) == 0x0003B9, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_Get_Current_Round_Loadout_Found_Any' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_Get_Current_Round_Loadout_Loadout) == 0x0003C0, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_Get_Current_Round_Loadout_Loadout' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, Temp_int_Loop_Counter_Variable_1) == 0x0003E8, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_Array_Get_Item) == 0x0003F0, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_Array_Length_ReturnValue) == 0x000420, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_Less_IntInt_ReturnValue) == 0x000424, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_LoadSoftClassReference_ReturnValue) == 0x000428, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_LoadSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, K2Node_ClassDynamicCast_AsItem_for_Backpack) == 0x000430, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::K2Node_ClassDynamicCast_AsItem_for_Backpack' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, K2Node_ClassDynamicCast_bSuccess) == 0x000438, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_Array_Get_Item_1) == 0x000440, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_Array_Length_ReturnValue_1) == 0x000470, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_LoadSoftClassReference_ReturnValue_1) == 0x000478, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_LoadSoftClassReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_Less_IntInt_ReturnValue_1) == 0x000480, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, K2Node_ClassDynamicCast_AsWeapon) == 0x000488, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::K2Node_ClassDynamicCast_AsWeapon' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, K2Node_ClassDynamicCast_bSuccess_1) == 0x000490, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::K2Node_ClassDynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_Get_Weapon_Ammo_and_Magazine_Size_Ammo_Item) == 0x000498, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_Get_Weapon_Ammo_and_Magazine_Size_Ammo_Item' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_Get_Weapon_Ammo_and_Magazine_Size_Magazine_Size) == 0x0004A0, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_Get_Weapon_Ammo_and_Magazine_Size_Magazine_Size' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_Add_IntInt_ReturnValue_1) == 0x0004A4, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_GetController_ReturnValue) == 0x0004A8, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_HasThrown_ReturnValue) == 0x0004B0, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_HasThrown_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, K2Node_DynamicCast_AsBP_Player_Controller_Tomato_Fight_2) == 0x0004B8, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::K2Node_DynamicCast_AsBP_Player_Controller_Tomato_Fight_2' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, K2Node_DynamicCast_bSuccess_4) == 0x0004C0, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, K2Node_CreateDelegate_OutputDelegate_3) == 0x0004C4, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_GetFightGameState_GameState_1) == 0x0004D8, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_GetFightGameState_GameState_1' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_K2_SetTimerDelegate_ReturnValue_3) == 0x0004E0, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_K2_SetTimerDelegate_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, Temp_bool_Variable_1) == 0x0004E8, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_MakeLiteralByte_ReturnValue) == 0x0004E9, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x0004EA, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_Less_ByteByte_ReturnValue) == 0x0004EB, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_Less_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_Greater_ByteByte_ReturnValue) == 0x0004EC, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_Greater_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_BooleanAND_ReturnValue_1) == 0x0004ED, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_GetFightGameState_GameState_2) == 0x0004F0, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_GetFightGameState_GameState_2' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_GetGenderClass_ReturnValue) == 0x0004F8, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_GetGenderClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_ClassIsChildOf_ReturnValue) == 0x000500, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, K2Node_SwitchEnum_CmpSuccess) == 0x000501, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_GetSoftReference_ReturnValue_1) == 0x000508, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_GetSoftReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_GetSoftReference_ReturnValue_2) == 0x000530, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_GetSoftReference_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, K2Node_Select_Default_1) == 0x000558, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_LoadSoftReference_ReturnValue_1) == 0x000580, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_LoadSoftReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_IsValidSoftObjectReference_ReturnValue_1) == 0x000588, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_IsValidSoftObjectReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, K2Node_DynamicCast_AsSkeletal_Mesh) == 0x000590, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::K2Node_DynamicCast_AsSkeletal_Mesh' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, K2Node_DynamicCast_bSuccess_5) == 0x000598, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_IsValid_ReturnValue_8) == 0x000599, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight, CallFunc_SetStaticMesh_ReturnValue) == 0x00059A, "Member 'BP_Character_TomatoFight_C_ExecuteUbergraph_BP_Character_TomatoFight::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");

// Function BP_Character_TomatoFight.BP_Character_TomatoFight_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_Character_TomatoFight_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_TomatoFight_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_Character_TomatoFight_C_ReceiveEndPlay");
static_assert(sizeof(BP_Character_TomatoFight_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_Character_TomatoFight_C_ReceiveEndPlay");
static_assert(offsetof(BP_Character_TomatoFight_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_Character_TomatoFight_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_Character_TomatoFight.BP_Character_TomatoFight_C.OnTakeDamage
// 0x0068 (0x0068 - 0x0000)
struct BP_Character_TomatoFight_C_OnTakeDamage final
{
public:
	float                                         DamageAmount;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDamageType                                   DamageType;                                        // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	const class AHumanCharacter*                  InstigatingActor;                                  // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class AItem>                      InstigatingItemClass;                              // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FHitResultSimplified                   HitOptimised;                                      // 0x0018(0x003C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSubclassOf<class AItem>>              AffectedItems;                                     // 0x0058(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, UObjectWrapper)
};
static_assert(alignof(BP_Character_TomatoFight_C_OnTakeDamage) == 0x000008, "Wrong alignment on BP_Character_TomatoFight_C_OnTakeDamage");
static_assert(sizeof(BP_Character_TomatoFight_C_OnTakeDamage) == 0x000068, "Wrong size on BP_Character_TomatoFight_C_OnTakeDamage");
static_assert(offsetof(BP_Character_TomatoFight_C_OnTakeDamage, DamageAmount) == 0x000000, "Member 'BP_Character_TomatoFight_C_OnTakeDamage::DamageAmount' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_OnTakeDamage, DamageType) == 0x000004, "Member 'BP_Character_TomatoFight_C_OnTakeDamage::DamageType' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_OnTakeDamage, InstigatingActor) == 0x000008, "Member 'BP_Character_TomatoFight_C_OnTakeDamage::InstigatingActor' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_OnTakeDamage, InstigatingItemClass) == 0x000010, "Member 'BP_Character_TomatoFight_C_OnTakeDamage::InstigatingItemClass' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_OnTakeDamage, HitOptimised) == 0x000018, "Member 'BP_Character_TomatoFight_C_OnTakeDamage::HitOptimised' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_OnTakeDamage, AffectedItems) == 0x000058, "Member 'BP_Character_TomatoFight_C_OnTakeDamage::AffectedItems' has a wrong offset!");

// Function BP_Character_TomatoFight.BP_Character_TomatoFight_C.Add Item To Backpack
// 0x0010 (0x0010 - 0x0000)
struct BP_Character_TomatoFight_C_Add_Item_To_Backpack final
{
public:
	class UClass*                                 Item_Type;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Amount;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_TomatoFight_C_Add_Item_To_Backpack) == 0x000008, "Wrong alignment on BP_Character_TomatoFight_C_Add_Item_To_Backpack");
static_assert(sizeof(BP_Character_TomatoFight_C_Add_Item_To_Backpack) == 0x000010, "Wrong size on BP_Character_TomatoFight_C_Add_Item_To_Backpack");
static_assert(offsetof(BP_Character_TomatoFight_C_Add_Item_To_Backpack, Item_Type) == 0x000000, "Member 'BP_Character_TomatoFight_C_Add_Item_To_Backpack::Item_Type' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_Add_Item_To_Backpack, Amount) == 0x000008, "Member 'BP_Character_TomatoFight_C_Add_Item_To_Backpack::Amount' has a wrong offset!");

// Function BP_Character_TomatoFight.BP_Character_TomatoFight_C.Add Weapon To Loadout
// 0x0010 (0x0010 - 0x0000)
struct BP_Character_TomatoFight_C_Add_Weapon_To_Loadout final
{
public:
	class UClass*                                 Weapon_Type;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Ammo_in_Mag_Count;                                 // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Chambered_Ammo;                                    // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Character_TomatoFight_C_Add_Weapon_To_Loadout) == 0x000008, "Wrong alignment on BP_Character_TomatoFight_C_Add_Weapon_To_Loadout");
static_assert(sizeof(BP_Character_TomatoFight_C_Add_Weapon_To_Loadout) == 0x000010, "Wrong size on BP_Character_TomatoFight_C_Add_Weapon_To_Loadout");
static_assert(offsetof(BP_Character_TomatoFight_C_Add_Weapon_To_Loadout, Weapon_Type) == 0x000000, "Member 'BP_Character_TomatoFight_C_Add_Weapon_To_Loadout::Weapon_Type' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_Add_Weapon_To_Loadout, Ammo_in_Mag_Count) == 0x000008, "Member 'BP_Character_TomatoFight_C_Add_Weapon_To_Loadout::Ammo_in_Mag_Count' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_Add_Weapon_To_Loadout, Chambered_Ammo) == 0x00000C, "Member 'BP_Character_TomatoFight_C_Add_Weapon_To_Loadout::Chambered_Ammo' has a wrong offset!");

// Function BP_Character_TomatoFight.BP_Character_TomatoFight_C.Die
// 0x00A8 (0x00A8 - 0x0000)
struct BP_Character_TomatoFight_C_Die final
{
public:
	float                                         DamageAmount;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDamageType                                   DamageType;                                        // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanCharacter*                        InstigatingCharacter;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class AItem>                      InstigatingItem;                                   // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FHitResult                             HitResult;                                         // 0x0018(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Character_TomatoFight_C_Die) == 0x000008, "Wrong alignment on BP_Character_TomatoFight_C_Die");
static_assert(sizeof(BP_Character_TomatoFight_C_Die) == 0x0000A8, "Wrong size on BP_Character_TomatoFight_C_Die");
static_assert(offsetof(BP_Character_TomatoFight_C_Die, DamageAmount) == 0x000000, "Member 'BP_Character_TomatoFight_C_Die::DamageAmount' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_Die, DamageType) == 0x000004, "Member 'BP_Character_TomatoFight_C_Die::DamageType' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_Die, InstigatingCharacter) == 0x000008, "Member 'BP_Character_TomatoFight_C_Die::InstigatingCharacter' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_Die, InstigatingItem) == 0x000010, "Member 'BP_Character_TomatoFight_C_Die::InstigatingItem' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_Die, HitResult) == 0x000018, "Member 'BP_Character_TomatoFight_C_Die::HitResult' has a wrong offset!");

// Function BP_Character_TomatoFight.BP_Character_TomatoFight_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_Character_TomatoFight_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_TomatoFight_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_Character_TomatoFight_C_ReceiveTick");
static_assert(sizeof(BP_Character_TomatoFight_C_ReceiveTick) == 0x000004, "Wrong size on BP_Character_TomatoFight_C_ReceiveTick");
static_assert(offsetof(BP_Character_TomatoFight_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_Character_TomatoFight_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_Character_TomatoFight.BP_Character_TomatoFight_C.ShouldTakeDamageBP
// 0x0040 (0x0040 - 0x0000)
struct BP_Character_TomatoFight_C_ShouldTakeDamageBP final
{
public:
	class AHumanCharacter*                        InstigatingCharacter;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class AActor*                           DamageCauser;                                      // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class AItem>                      ItemClass;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	EDamageType                                   DamageType;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0019(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AreCharactersInSameTeam_AreInSameTeam;    // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AreCharactersInSameTeam_AreSameCharacter; // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameState_TomatoFight_C*            K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight;   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Character_TomatoFight_C_ShouldTakeDamageBP) == 0x000008, "Wrong alignment on BP_Character_TomatoFight_C_ShouldTakeDamageBP");
static_assert(sizeof(BP_Character_TomatoFight_C_ShouldTakeDamageBP) == 0x000040, "Wrong size on BP_Character_TomatoFight_C_ShouldTakeDamageBP");
static_assert(offsetof(BP_Character_TomatoFight_C_ShouldTakeDamageBP, InstigatingCharacter) == 0x000000, "Member 'BP_Character_TomatoFight_C_ShouldTakeDamageBP::InstigatingCharacter' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ShouldTakeDamageBP, DamageCauser) == 0x000008, "Member 'BP_Character_TomatoFight_C_ShouldTakeDamageBP::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ShouldTakeDamageBP, ItemClass) == 0x000010, "Member 'BP_Character_TomatoFight_C_ShouldTakeDamageBP::ItemClass' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ShouldTakeDamageBP, DamageType) == 0x000018, "Member 'BP_Character_TomatoFight_C_ShouldTakeDamageBP::DamageType' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ShouldTakeDamageBP, ReturnValue) == 0x000019, "Member 'BP_Character_TomatoFight_C_ShouldTakeDamageBP::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ShouldTakeDamageBP, CallFunc_IsValid_ReturnValue) == 0x00001A, "Member 'BP_Character_TomatoFight_C_ShouldTakeDamageBP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ShouldTakeDamageBP, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00001B, "Member 'BP_Character_TomatoFight_C_ShouldTakeDamageBP::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ShouldTakeDamageBP, CallFunc_AreCharactersInSameTeam_AreInSameTeam) == 0x00001C, "Member 'BP_Character_TomatoFight_C_ShouldTakeDamageBP::CallFunc_AreCharactersInSameTeam_AreInSameTeam' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ShouldTakeDamageBP, CallFunc_AreCharactersInSameTeam_AreSameCharacter) == 0x00001D, "Member 'BP_Character_TomatoFight_C_ShouldTakeDamageBP::CallFunc_AreCharactersInSameTeam_AreSameCharacter' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ShouldTakeDamageBP, CallFunc_Not_PreBool_ReturnValue) == 0x00001E, "Member 'BP_Character_TomatoFight_C_ShouldTakeDamageBP::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ShouldTakeDamageBP, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00001F, "Member 'BP_Character_TomatoFight_C_ShouldTakeDamageBP::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ShouldTakeDamageBP, CallFunc_GetGameState_ReturnValue) == 0x000020, "Member 'BP_Character_TomatoFight_C_ShouldTakeDamageBP::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ShouldTakeDamageBP, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000028, "Member 'BP_Character_TomatoFight_C_ShouldTakeDamageBP::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ShouldTakeDamageBP, K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight) == 0x000030, "Member 'BP_Character_TomatoFight_C_ShouldTakeDamageBP::K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ShouldTakeDamageBP, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_Character_TomatoFight_C_ShouldTakeDamageBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ShouldTakeDamageBP, CallFunc_BooleanOR_ReturnValue) == 0x000039, "Member 'BP_Character_TomatoFight_C_ShouldTakeDamageBP::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ShouldTakeDamageBP, CallFunc_BooleanOR_ReturnValue_1) == 0x00003A, "Member 'BP_Character_TomatoFight_C_ShouldTakeDamageBP::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ShouldTakeDamageBP, CallFunc_Not_PreBool_ReturnValue_1) == 0x00003B, "Member 'BP_Character_TomatoFight_C_ShouldTakeDamageBP::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ShouldTakeDamageBP, CallFunc_BooleanAND_ReturnValue) == 0x00003C, "Member 'BP_Character_TomatoFight_C_ShouldTakeDamageBP::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_ShouldTakeDamageBP, CallFunc_BooleanAND_ReturnValue_1) == 0x00003D, "Member 'BP_Character_TomatoFight_C_ShouldTakeDamageBP::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_Character_TomatoFight.BP_Character_TomatoFight_C.GetFightGameMode
// 0x0020 (0x0020 - 0x0000)
struct BP_Character_TomatoFight_C_GetFightGameMode final
{
public:
	class ABP_GameMode_TomatoFight_C*             FightGamemode;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameMode_TomatoFight_C*             K2Node_DynamicCast_AsBP_Game_Mode_Tomato_Fight;    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Character_TomatoFight_C_GetFightGameMode) == 0x000008, "Wrong alignment on BP_Character_TomatoFight_C_GetFightGameMode");
static_assert(sizeof(BP_Character_TomatoFight_C_GetFightGameMode) == 0x000020, "Wrong size on BP_Character_TomatoFight_C_GetFightGameMode");
static_assert(offsetof(BP_Character_TomatoFight_C_GetFightGameMode, FightGamemode) == 0x000000, "Member 'BP_Character_TomatoFight_C_GetFightGameMode::FightGamemode' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_GetFightGameMode, CallFunc_GetGameMode_ReturnValue) == 0x000008, "Member 'BP_Character_TomatoFight_C_GetFightGameMode::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_GetFightGameMode, K2Node_DynamicCast_AsBP_Game_Mode_Tomato_Fight) == 0x000010, "Member 'BP_Character_TomatoFight_C_GetFightGameMode::K2Node_DynamicCast_AsBP_Game_Mode_Tomato_Fight' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_GetFightGameMode, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_Character_TomatoFight_C_GetFightGameMode::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_GetFightGameMode, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'BP_Character_TomatoFight_C_GetFightGameMode::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_Character_TomatoFight.BP_Character_TomatoFight_C.GetCountsOfItemsByVariant
// 0x0080 (0x0080 - 0x0000)
struct BP_Character_TomatoFight_C_GetCountsOfItemsByVariant final
{
public:
	class UEquipmentStorageComponent*             Equipment_Storage;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Sum_of_Items_Found;                                // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Class_0;                                           // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameState_TomatoFight_C*            CallFunc_GetFightGameState_GameState;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFightVariant                                 CallFunc_GetGameVariant_Variant;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   CallFunc_Map_Find_Value;                           // 0x0028(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_LoadSoftClassReference_ReturnValue;       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsConsumable_Item;         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Get_Item_Count_Sum_of_Items_Found;        // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UClass*>                         CallFunc_Get_Item_Count_Types_of_Items_Found;      // 0x0070(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_Character_TomatoFight_C_GetCountsOfItemsByVariant) == 0x000008, "Wrong alignment on BP_Character_TomatoFight_C_GetCountsOfItemsByVariant");
static_assert(sizeof(BP_Character_TomatoFight_C_GetCountsOfItemsByVariant) == 0x000080, "Wrong size on BP_Character_TomatoFight_C_GetCountsOfItemsByVariant");
static_assert(offsetof(BP_Character_TomatoFight_C_GetCountsOfItemsByVariant, Equipment_Storage) == 0x000000, "Member 'BP_Character_TomatoFight_C_GetCountsOfItemsByVariant::Equipment_Storage' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_GetCountsOfItemsByVariant, Sum_of_Items_Found) == 0x000008, "Member 'BP_Character_TomatoFight_C_GetCountsOfItemsByVariant::Sum_of_Items_Found' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_GetCountsOfItemsByVariant, Class_0) == 0x000010, "Member 'BP_Character_TomatoFight_C_GetCountsOfItemsByVariant::Class_0' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_GetCountsOfItemsByVariant, CallFunc_GetFightGameState_GameState) == 0x000018, "Member 'BP_Character_TomatoFight_C_GetCountsOfItemsByVariant::CallFunc_GetFightGameState_GameState' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_GetCountsOfItemsByVariant, CallFunc_GetGameVariant_Variant) == 0x000020, "Member 'BP_Character_TomatoFight_C_GetCountsOfItemsByVariant::CallFunc_GetGameVariant_Variant' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_GetCountsOfItemsByVariant, CallFunc_Map_Find_Value) == 0x000028, "Member 'BP_Character_TomatoFight_C_GetCountsOfItemsByVariant::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_GetCountsOfItemsByVariant, CallFunc_Map_Find_ReturnValue) == 0x000050, "Member 'BP_Character_TomatoFight_C_GetCountsOfItemsByVariant::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_GetCountsOfItemsByVariant, CallFunc_LoadSoftClassReference_ReturnValue) == 0x000058, "Member 'BP_Character_TomatoFight_C_GetCountsOfItemsByVariant::CallFunc_LoadSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_GetCountsOfItemsByVariant, K2Node_ClassDynamicCast_AsConsumable_Item) == 0x000060, "Member 'BP_Character_TomatoFight_C_GetCountsOfItemsByVariant::K2Node_ClassDynamicCast_AsConsumable_Item' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_GetCountsOfItemsByVariant, K2Node_ClassDynamicCast_bSuccess) == 0x000068, "Member 'BP_Character_TomatoFight_C_GetCountsOfItemsByVariant::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_GetCountsOfItemsByVariant, CallFunc_Get_Item_Count_Sum_of_Items_Found) == 0x00006C, "Member 'BP_Character_TomatoFight_C_GetCountsOfItemsByVariant::CallFunc_Get_Item_Count_Sum_of_Items_Found' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_GetCountsOfItemsByVariant, CallFunc_Get_Item_Count_Types_of_Items_Found) == 0x000070, "Member 'BP_Character_TomatoFight_C_GetCountsOfItemsByVariant::CallFunc_Get_Item_Count_Types_of_Items_Found' has a wrong offset!");

// Function BP_Character_TomatoFight.BP_Character_TomatoFight_C.GetFightGameState
// 0x0020 (0x0020 - 0x0000)
struct BP_Character_TomatoFight_C_GetFightGameState final
{
public:
	class ABP_GameState_TomatoFight_C*            GameState;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameState_TomatoFight_C*            K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight;   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Character_TomatoFight_C_GetFightGameState) == 0x000008, "Wrong alignment on BP_Character_TomatoFight_C_GetFightGameState");
static_assert(sizeof(BP_Character_TomatoFight_C_GetFightGameState) == 0x000020, "Wrong size on BP_Character_TomatoFight_C_GetFightGameState");
static_assert(offsetof(BP_Character_TomatoFight_C_GetFightGameState, GameState) == 0x000000, "Member 'BP_Character_TomatoFight_C_GetFightGameState::GameState' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_GetFightGameState, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'BP_Character_TomatoFight_C_GetFightGameState::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_GetFightGameState, K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight) == 0x000010, "Member 'BP_Character_TomatoFight_C_GetFightGameState::K2Node_DynamicCast_AsBP_Game_State_Tomato_Fight' has a wrong offset!");
static_assert(offsetof(BP_Character_TomatoFight_C_GetFightGameState, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_Character_TomatoFight_C_GetFightGameState::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

