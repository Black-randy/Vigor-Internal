#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Struct_NonEncounterMatchRewards

#include "Basic.hpp"


namespace SDK
{

// UserDefinedStruct Struct_NonEncounterMatchRewards.Struct_NonEncounterMatchRewards
// 0x0020 (0x0020 - 0x0000)
struct FStruct_NonEncounterMatchRewards final
{
public:
	int32                                         RewardThreshold_13_86AACC654DC4AE661C4E86A87657351D; // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   XPReward_3_33CB28F84830C11AF29526BDE801F844;       // 0x0004(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         MatchInfoRewards_10_FC7E0FDC4DAF3713F19B98AFFEC90AA5; // 0x0010(0x0010)(Edit, BlueprintVisible)
};
static_assert(alignof(FStruct_NonEncounterMatchRewards) == 0x000008, "Wrong alignment on FStruct_NonEncounterMatchRewards");
static_assert(sizeof(FStruct_NonEncounterMatchRewards) == 0x000020, "Wrong size on FStruct_NonEncounterMatchRewards");
static_assert(offsetof(FStruct_NonEncounterMatchRewards, RewardThreshold_13_86AACC654DC4AE661C4E86A87657351D) == 0x000000, "Member 'FStruct_NonEncounterMatchRewards::RewardThreshold_13_86AACC654DC4AE661C4E86A87657351D' has a wrong offset!");
static_assert(offsetof(FStruct_NonEncounterMatchRewards, XPReward_3_33CB28F84830C11AF29526BDE801F844) == 0x000004, "Member 'FStruct_NonEncounterMatchRewards::XPReward_3_33CB28F84830C11AF29526BDE801F844' has a wrong offset!");
static_assert(offsetof(FStruct_NonEncounterMatchRewards, MatchInfoRewards_10_FC7E0FDC4DAF3713F19B98AFFEC90AA5) == 0x000010, "Member 'FStruct_NonEncounterMatchRewards::MatchInfoRewards_10_FC7E0FDC4DAF3713F19B98AFFEC90AA5' has a wrong offset!");

}

