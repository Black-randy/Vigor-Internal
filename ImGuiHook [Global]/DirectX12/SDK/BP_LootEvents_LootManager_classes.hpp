#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LootEvents_LootManager

#include "Basic.hpp"

#include "BP_LootSpawnManager_classes.hpp"
#include "Engine_structs.hpp"
#include "E_LootEvents_LootConfig_structs.hpp"
#include "F_LootEvents_LootConfig_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_LootEvents_LootManager.BP_LootEvents_LootManager_C
// 0x0078 (0x0330 - 0x02B8)
class ABP_LootEvents_LootManager_C : public ABP_LootSpawnManager_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_LootEvents_LootManager_C;        // 0x02B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          _Debug__Should_display_item_debug;                 // 0x02C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UClass*>                         Items_to_spawn;                                    // 0x02C8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<E_LootEvents_LootConfig, struct FF_LootEvents_LootConfig> Loot;                                              // 0x02D8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         Booster_coefficient;                               // 0x0328(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_LootEvents_LootManager(int32 EntryPoint);
	void ReceiveBeginPlay();
	void Filter_out_commodities(class UClass* Class_to_filter_out, TArray<class UClass*>* Filtered_out_items);
	void Select_items_to_spawn(const E_LootEvents_LootConfig& Key);

	void OnCommodityParamsModify(TSubclassOf<class AActor> CommodityType, float SpawnProbabilityIn, int32 CapacityMinIn, int32 CapacityMaxIn, int32 SubObjectsLimitMinIn, int32 SubObjectsLimitMaxIn, float* SpawnProbabilityOut, int32* CapacityMinOut, int32* CapacityMaxOut, int32* SubObjectsLimitMinOut, int32* SubObjectsLimitMaxOut) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_LootEvents_LootManager_C">();
	}
	static class ABP_LootEvents_LootManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_LootEvents_LootManager_C>();
	}
};
static_assert(alignof(ABP_LootEvents_LootManager_C) == 0x000008, "Wrong alignment on ABP_LootEvents_LootManager_C");
static_assert(sizeof(ABP_LootEvents_LootManager_C) == 0x000330, "Wrong size on ABP_LootEvents_LootManager_C");
static_assert(offsetof(ABP_LootEvents_LootManager_C, UberGraphFrame_BP_LootEvents_LootManager_C) == 0x0002B8, "Member 'ABP_LootEvents_LootManager_C::UberGraphFrame_BP_LootEvents_LootManager_C' has a wrong offset!");
static_assert(offsetof(ABP_LootEvents_LootManager_C, _Debug__Should_display_item_debug) == 0x0002C0, "Member 'ABP_LootEvents_LootManager_C::_Debug__Should_display_item_debug' has a wrong offset!");
static_assert(offsetof(ABP_LootEvents_LootManager_C, Items_to_spawn) == 0x0002C8, "Member 'ABP_LootEvents_LootManager_C::Items_to_spawn' has a wrong offset!");
static_assert(offsetof(ABP_LootEvents_LootManager_C, Loot) == 0x0002D8, "Member 'ABP_LootEvents_LootManager_C::Loot' has a wrong offset!");
static_assert(offsetof(ABP_LootEvents_LootManager_C, Booster_coefficient) == 0x000328, "Member 'ABP_LootEvents_LootManager_C::Booster_coefficient' has a wrong offset!");

}

