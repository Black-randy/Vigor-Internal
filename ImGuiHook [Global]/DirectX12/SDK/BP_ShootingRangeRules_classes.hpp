#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ShootingRangeRules

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ShootingRangeRules.BP_ShootingRangeRules_C
// 0x0020 (0x0240 - 0x0220)
class ABP_ShootingRangeRules_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          ShootingRangeVolume;                               // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          Character_Is_Destroyed;                            // 0x0238(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_ShootingRangeRules(int32 EntryPoint);
	void Try_Bind_To_Player();
	void ReceiveBeginPlay();
	void Character_Destroyed(class AActor* Actor, EEndPlayReason EndPlayReason);
	void BndEvt__ShootingRangeVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__ShootingRangeVolume_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ShootingRangeRules_C">();
	}
	static class ABP_ShootingRangeRules_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ShootingRangeRules_C>();
	}
};
static_assert(alignof(ABP_ShootingRangeRules_C) == 0x000008, "Wrong alignment on ABP_ShootingRangeRules_C");
static_assert(sizeof(ABP_ShootingRangeRules_C) == 0x000240, "Wrong size on ABP_ShootingRangeRules_C");
static_assert(offsetof(ABP_ShootingRangeRules_C, UberGraphFrame) == 0x000220, "Member 'ABP_ShootingRangeRules_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ShootingRangeRules_C, ShootingRangeVolume) == 0x000228, "Member 'ABP_ShootingRangeRules_C::ShootingRangeVolume' has a wrong offset!");
static_assert(offsetof(ABP_ShootingRangeRules_C, DefaultSceneRoot) == 0x000230, "Member 'ABP_ShootingRangeRules_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_ShootingRangeRules_C, Character_Is_Destroyed) == 0x000238, "Member 'ABP_ShootingRangeRules_C::Character_Is_Destroyed' has a wrong offset!");

}

