#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Flare

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Flare.BP_Flare_C
// 0x0038 (0x0258 - 0x0220)
class ABP_Flare_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Sphere;                                            // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Collision;                                         // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   Flare_PointLight;                                  // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_Flare;                                          // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          TestMovement;                                      // 0x0248(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IncreasingIntensity;                               // 0x0249(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24A[0x2];                                      // 0x024A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FlareIntensity;                                    // 0x024C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LighUpSpeed;                                       // 0x0250(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Flare(int32 EntryPoint);
	void CustomEvent_2(const class FString& Value);
	void ReceiveTick(float DeltaSeconds);
	void CustomEvent_0(const class FString& Value);
	void Turn_On_Physics();
	void ReceiveBeginPlay();
	void ShouldEnableLight();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Flare_C">();
	}
	static class ABP_Flare_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Flare_C>();
	}
};
static_assert(alignof(ABP_Flare_C) == 0x000008, "Wrong alignment on ABP_Flare_C");
static_assert(sizeof(ABP_Flare_C) == 0x000258, "Wrong size on ABP_Flare_C");
static_assert(offsetof(ABP_Flare_C, UberGraphFrame) == 0x000220, "Member 'ABP_Flare_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Flare_C, Sphere) == 0x000228, "Member 'ABP_Flare_C::Sphere' has a wrong offset!");
static_assert(offsetof(ABP_Flare_C, Collision) == 0x000230, "Member 'ABP_Flare_C::Collision' has a wrong offset!");
static_assert(offsetof(ABP_Flare_C, Flare_PointLight) == 0x000238, "Member 'ABP_Flare_C::Flare_PointLight' has a wrong offset!");
static_assert(offsetof(ABP_Flare_C, PS_Flare) == 0x000240, "Member 'ABP_Flare_C::PS_Flare' has a wrong offset!");
static_assert(offsetof(ABP_Flare_C, TestMovement) == 0x000248, "Member 'ABP_Flare_C::TestMovement' has a wrong offset!");
static_assert(offsetof(ABP_Flare_C, IncreasingIntensity) == 0x000249, "Member 'ABP_Flare_C::IncreasingIntensity' has a wrong offset!");
static_assert(offsetof(ABP_Flare_C, FlareIntensity) == 0x00024C, "Member 'ABP_Flare_C::FlareIntensity' has a wrong offset!");
static_assert(offsetof(ABP_Flare_C, LighUpSpeed) == 0x000250, "Member 'ABP_Flare_C::LighUpSpeed' has a wrong offset!");

}

