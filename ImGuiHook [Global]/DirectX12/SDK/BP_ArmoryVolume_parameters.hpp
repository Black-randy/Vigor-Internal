#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ArmoryVolume

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_ArmoryVolume.BP_ArmoryVolume_C.ExecuteUbergraph_BP_ArmoryVolume
// 0x0150 (0x0150 - 0x0000)
struct BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetZOrder_ReturnValue;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameMode_Shelter_C*                 K2Node_DynamicCast_AsBP_Game_Mode_Shelter;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetUserControllerId_ReturnValue;          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanPlayerController*                 CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Tab_Locked_Locked;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53[0x5];                                       // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_Script_C*          K2Node_DynamicCast_AsBP_Player_Controller_Script;  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63[0x5];                                       // 0x0063(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_OtherActor;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHumanCharacter*                        K2Node_DynamicCast_AsHuman_Character;              // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_GetCloudTime_ReturnValue;                 // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_GetCloudTime_ReturnValue_1;               // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x00B0(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_Subtract_DateTimeDateTime_ReturnValue;    // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSeconds_ReturnValue;                   // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SendArmoryTimeSpent_ReturnValue;          // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume) == 0x000008, "Wrong alignment on BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume");
static_assert(sizeof(BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume) == 0x000150, "Wrong size on BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume");
static_assert(offsetof(BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume, EntryPoint) == 0x000000, "Member 'BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000008, "Member 'BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume, K2Node_ComponentBoundEvent_OtherActor) == 0x000010, "Member 'BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume, K2Node_ComponentBoundEvent_OtherComp) == 0x000018, "Member 'BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000020, "Member 'BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume, CallFunc_GetGameMode_ReturnValue) == 0x000028, "Member 'BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume, CallFunc_GetZOrder_ReturnValue) == 0x000030, "Member 'BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume::CallFunc_GetZOrder_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume, K2Node_DynamicCast_AsBP_Game_Mode_Shelter) == 0x000038, "Member 'BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume::K2Node_DynamicCast_AsBP_Game_Mode_Shelter' has a wrong offset!");
static_assert(offsetof(BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume, CallFunc_GetUserControllerId_ReturnValue) == 0x000044, "Member 'BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume::CallFunc_GetUserControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume, CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue) == 0x000048, "Member 'BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume::CallFunc_GetHumanPlayerControllerByControllerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume, CallFunc_Is_Tab_Locked_Locked) == 0x000050, "Member 'BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume::CallFunc_Is_Tab_Locked_Locked' has a wrong offset!");
static_assert(offsetof(BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume, CallFunc_IsValid_ReturnValue) == 0x000051, "Member 'BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume, CallFunc_Not_PreBool_ReturnValue) == 0x000052, "Member 'BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume, K2Node_DynamicCast_AsBP_Player_Controller_Script) == 0x000058, "Member 'BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume::K2Node_DynamicCast_AsBP_Player_Controller_Script' has a wrong offset!");
static_assert(offsetof(BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume, CallFunc_BooleanAND_ReturnValue) == 0x000061, "Member 'BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume, CallFunc_IsValid_ReturnValue_1) == 0x000062, "Member 'BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume, K2Node_Event_OtherActor) == 0x000068, "Member 'BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume::K2Node_Event_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume, K2Node_DynamicCast_AsHuman_Character) == 0x000070, "Member 'BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume::K2Node_DynamicCast_AsHuman_Character' has a wrong offset!");
static_assert(offsetof(BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume, K2Node_DynamicCast_bSuccess_2) == 0x000078, "Member 'BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume, CallFunc_GetCloudTime_ReturnValue) == 0x000080, "Member 'BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume::CallFunc_GetCloudTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume, CallFunc_GetCloudTime_ReturnValue_1) == 0x000088, "Member 'BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume::CallFunc_GetCloudTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000090, "Member 'BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000098, "Member 'BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume, K2Node_ComponentBoundEvent_OtherComp_1) == 0x0000A0, "Member 'BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x0000A8, "Member 'BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume, K2Node_ComponentBoundEvent_bFromSweep) == 0x0000AC, "Member 'BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume, K2Node_ComponentBoundEvent_SweepResult) == 0x0000B0, "Member 'BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume, CallFunc_Subtract_DateTimeDateTime_ReturnValue) == 0x000140, "Member 'BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume::CallFunc_Subtract_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume, CallFunc_GetSeconds_ReturnValue) == 0x000148, "Member 'BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume::CallFunc_GetSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume, CallFunc_SendArmoryTimeSpent_ReturnValue) == 0x00014C, "Member 'BP_ArmoryVolume_C_ExecuteUbergraph_BP_ArmoryVolume::CallFunc_SendArmoryTimeSpent_ReturnValue' has a wrong offset!");

// Function BP_ArmoryVolume.BP_ArmoryVolume_C.BndEvt__AnalyticsVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_ArmoryVolume_C_BndEvt__AnalyticsVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ArmoryVolume_C_BndEvt__AnalyticsVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_ArmoryVolume_C_BndEvt__AnalyticsVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_ArmoryVolume_C_BndEvt__AnalyticsVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_ArmoryVolume_C_BndEvt__AnalyticsVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_ArmoryVolume_C_BndEvt__AnalyticsVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_ArmoryVolume_C_BndEvt__AnalyticsVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_ArmoryVolume_C_BndEvt__AnalyticsVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_ArmoryVolume_C_BndEvt__AnalyticsVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_ArmoryVolume_C_BndEvt__AnalyticsVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_ArmoryVolume_C_BndEvt__AnalyticsVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_ArmoryVolume_C_BndEvt__AnalyticsVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_ArmoryVolume_C_BndEvt__AnalyticsVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_ArmoryVolume.BP_ArmoryVolume_C.BndEvt__AnalyticsVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct BP_ArmoryVolume_C_BndEvt__AnalyticsVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_ArmoryVolume_C_BndEvt__AnalyticsVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_ArmoryVolume_C_BndEvt__AnalyticsVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_ArmoryVolume_C_BndEvt__AnalyticsVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000B0, "Wrong size on BP_ArmoryVolume_C_BndEvt__AnalyticsVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_ArmoryVolume_C_BndEvt__AnalyticsVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_ArmoryVolume_C_BndEvt__AnalyticsVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_ArmoryVolume_C_BndEvt__AnalyticsVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_ArmoryVolume_C_BndEvt__AnalyticsVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_ArmoryVolume_C_BndEvt__AnalyticsVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_ArmoryVolume_C_BndEvt__AnalyticsVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_ArmoryVolume_C_BndEvt__AnalyticsVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_ArmoryVolume_C_BndEvt__AnalyticsVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_ArmoryVolume_C_BndEvt__AnalyticsVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_ArmoryVolume_C_BndEvt__AnalyticsVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_ArmoryVolume_C_BndEvt__AnalyticsVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_ArmoryVolume_C_BndEvt__AnalyticsVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_ArmoryVolume.BP_ArmoryVolume_C.ReceiveActorBeginOverlap
// 0x0008 (0x0008 - 0x0000)
struct BP_ArmoryVolume_C_ReceiveActorBeginOverlap final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ArmoryVolume_C_ReceiveActorBeginOverlap) == 0x000008, "Wrong alignment on BP_ArmoryVolume_C_ReceiveActorBeginOverlap");
static_assert(sizeof(BP_ArmoryVolume_C_ReceiveActorBeginOverlap) == 0x000008, "Wrong size on BP_ArmoryVolume_C_ReceiveActorBeginOverlap");
static_assert(offsetof(BP_ArmoryVolume_C_ReceiveActorBeginOverlap, OtherActor) == 0x000000, "Member 'BP_ArmoryVolume_C_ReceiveActorBeginOverlap::OtherActor' has a wrong offset!");

}

