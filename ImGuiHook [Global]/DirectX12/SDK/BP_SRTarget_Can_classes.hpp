#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SRTarget_Can

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_SRTarget_PhysicsBase_classes.hpp"
#include "PhysicsCore_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SRTarget_Can.BP_SRTarget_Can_C
// 0x0030 (0x0330 - 0x0300)
class ABP_SRTarget_Can_C final : public ABP_SRTarget_PhysicsBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_SRTarget_Can_C;                  // 0x0300(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   CAN;                                               // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         HitSoundVelocityMin;                               // 0x0310(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HitSoundVelocityMax;                               // 0x0314(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             BulletImpactSound;                                 // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             GroundImpactSound;                                 // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PlaySoundWhenHitByPawn;                            // 0x0328(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_SRTarget_Can(int32 EntryPoint);
	void ReceiveBeginPlay();
	void BndEvt__StaticMesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void ReceivePointDamage(float Damage, const class UDamageType* DamageType, const struct FVector& HitLocation, const struct FVector& HitNormal, class UPrimitiveComponent* HitComponent, class FName BoneName, const struct FVector& ShotFromDirection, class AController* InstigatedBy, class AActor* DamageCauser, const struct FHitResult& HitInfo);
	void BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void ReceiveRadialDamage(float DamageReceived, const class UDamageType* DamageType, const struct FVector& Origin, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SRTarget_Can_C">();
	}
	static class ABP_SRTarget_Can_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_SRTarget_Can_C>();
	}
};
static_assert(alignof(ABP_SRTarget_Can_C) == 0x000008, "Wrong alignment on ABP_SRTarget_Can_C");
static_assert(sizeof(ABP_SRTarget_Can_C) == 0x000330, "Wrong size on ABP_SRTarget_Can_C");
static_assert(offsetof(ABP_SRTarget_Can_C, UberGraphFrame_BP_SRTarget_Can_C) == 0x000300, "Member 'ABP_SRTarget_Can_C::UberGraphFrame_BP_SRTarget_Can_C' has a wrong offset!");
static_assert(offsetof(ABP_SRTarget_Can_C, CAN) == 0x000308, "Member 'ABP_SRTarget_Can_C::CAN' has a wrong offset!");
static_assert(offsetof(ABP_SRTarget_Can_C, HitSoundVelocityMin) == 0x000310, "Member 'ABP_SRTarget_Can_C::HitSoundVelocityMin' has a wrong offset!");
static_assert(offsetof(ABP_SRTarget_Can_C, HitSoundVelocityMax) == 0x000314, "Member 'ABP_SRTarget_Can_C::HitSoundVelocityMax' has a wrong offset!");
static_assert(offsetof(ABP_SRTarget_Can_C, BulletImpactSound) == 0x000318, "Member 'ABP_SRTarget_Can_C::BulletImpactSound' has a wrong offset!");
static_assert(offsetof(ABP_SRTarget_Can_C, GroundImpactSound) == 0x000320, "Member 'ABP_SRTarget_Can_C::GroundImpactSound' has a wrong offset!");
static_assert(offsetof(ABP_SRTarget_Can_C, PlaySoundWhenHitByPawn) == 0x000328, "Member 'ABP_SRTarget_Can_C::PlaySoundWhenHitByPawn' has a wrong offset!");

}

